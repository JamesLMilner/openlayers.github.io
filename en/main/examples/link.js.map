{"version":3,"file":"link.js","mappings":"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","sources":["webpack:///../src/ol/interaction/Link.js","webpack:///./link.js"],"sourcesContent":["/**\n * @module ol/interaction/Link\n */\nimport EventType from '../events/EventType.js';\nimport Interaction from './Interaction.js';\nimport MapEventType from '../MapEventType.js';\nimport {assign} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {toFixed} from '../math.js';\n\n/**\n * @param {number} number A number.\n * @return {number} A number with at most 5 decimal places.\n */\nfunction to5(number) {\n  return toFixed(number, 5);\n}\n\n/**\n * @param {string} string A string.\n * @return {number} A number representing the string.\n */\nfunction readNumber(string) {\n  return parseFloat(string);\n}\n\n/**\n * @param {number} number A number.\n * @return {string} A string representing the number.\n */\nfunction writeNumber(number) {\n  return to5(number).toString();\n}\n\n/**\n * @param {number} a A number.\n * @param {number} b A number.\n * @return {boolean} The numbers are different.\n */\nfunction differentNumber(a, b) {\n  if (isNaN(a)) {\n    return false;\n  }\n  return a !== readNumber(writeNumber(b));\n}\n\n/**\n * @param {Array<number>} a An array of two numbers.\n * @param {Array<number>} b An array of two numbers.\n * @return {boolean} The arrays are different.\n */\nfunction differentArray(a, b) {\n  return differentNumber(a[0], b[0]) || differentNumber(a[1], b[1]);\n}\n\n/**\n * @typedef {Object} Options\n * @property {boolean|import('../View.js').AnimationOptions} [animate=true] Animate view transitions.\n * @property {boolean} [replace=false] Replace the current URL without creating the new entry in browser history.\n * By default, changes in the map state result in a new entry being added to the browser history.\n * @property {string} [prefix=''] By default, the URL will be updated with search parameters x, y, z, and r.  To\n * avoid collisions with existing search parameters that your application uses, you can supply a custom prefix for\n * the ones used by this interaction (e.g. 'ol:').\n */\n\n/**\n * @classdesc\n * An interaction that synchronizes the map state with the URL.\n *\n * @api\n */\nclass Link extends Interaction {\n  /**\n   * @param {Options} [opt_options] Link options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = assign(\n      {animate: true, replace: false, prefix: ''},\n      opt_options || {}\n    );\n\n    let animationOptions;\n    if (options.animate === true) {\n      animationOptions = {duration: 250};\n    } else if (!options.animate) {\n      animationOptions = null;\n    } else {\n      animationOptions = options.animate;\n    }\n\n    /**\n     * @type {import('../View.js').AnimationOptions|null}\n     * @private\n     */\n    this.animationOptions_ = animationOptions;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.replace_ = options.replace;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.prefix_ = options.prefix;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.initial_ = true;\n\n    this.updateState_ = this.updateState_.bind(this);\n  }\n\n  /**\n   * @private\n   * @param {string} name A parameter name.\n   * @return {string} A name with the prefix applied.\n   */\n  getParamName_(name) {\n    if (!this.prefix_) {\n      return name;\n    }\n    return this.prefix_ + name;\n  }\n\n  /**\n   * @private\n   * @param {URLSearchParams} params The search params.\n   * @param {string} name The unprefixed parameter name.\n   * @return {string|null} The parameter value.\n   */\n  get_(params, name) {\n    return params.get(this.getParamName_(name));\n  }\n\n  /**\n   * @private\n   * @param {URLSearchParams} params The search params.\n   * @param {string} name The unprefixed parameter name.\n   * @param {string} value The param value.\n   */\n  set_(params, name, value) {\n    params.set(this.getParamName_(name), value);\n  }\n\n  /**\n   * @private\n   * @param {URLSearchParams} params The search params.\n   * @param {string} name The unprefixed parameter name.\n   */\n  delete_(params, name) {\n    params.delete(this.getParamName_(name));\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    super.setMap(map);\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      this.unregisterListeners_(oldMap);\n    }\n    if (map) {\n      this.initial_ = true;\n      this.updateState_();\n      this.registerListeners_(map);\n    }\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @private\n   */\n  registerListeners_(map) {\n    this.listenerKeys_.push(\n      listen(map, MapEventType.MOVEEND, this.updateUrl_, this),\n      listen(map.getLayerGroup(), EventType.CHANGE, this.updateUrl_, this),\n      listen(map, 'change:layergroup', this.handleChangeLayerGroup_, this)\n    );\n\n    if (!this.replace_) {\n      addEventListener('popstate', this.updateState_);\n    }\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @private\n   */\n  unregisterListeners_(map) {\n    for (let i = 0, ii = this.listenerKeys_.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys_[i]);\n    }\n    this.listenerKeys_.length = 0;\n\n    if (!this.replace_) {\n      removeEventListener('popstate', this.updateState_);\n    }\n\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n    this.delete_(params, 'x');\n    this.delete_(params, 'y');\n    this.delete_(params, 'z');\n    this.delete_(params, 'r');\n    this.delete_(params, 'l');\n    window.history.replaceState(null, '', url);\n  }\n\n  /**\n   * @private\n   */\n  handleChangeLayerGroup_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    this.unregisterListeners_(map);\n    this.registerListeners_(map);\n    this.initial_ = true;\n    this.updateUrl_();\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    if (!view) {\n      return;\n    }\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n\n    let updateView = false;\n\n    /**\n     * @type {import('../View.js').AnimationOptions}\n     */\n    const viewProperties = {};\n\n    const zoom = readNumber(this.get_(params, 'z'));\n    if (differentNumber(zoom, view.getZoom())) {\n      updateView = true;\n      viewProperties.zoom = zoom;\n    }\n\n    const rotation = readNumber(this.get_(params, 'r'));\n    if (differentNumber(rotation, view.getRotation())) {\n      updateView = true;\n      viewProperties.rotation = rotation;\n    }\n\n    const center = [\n      readNumber(this.get_(params, 'x')),\n      readNumber(this.get_(params, 'y')),\n    ];\n    if (differentArray(center, view.getCenter())) {\n      updateView = true;\n      viewProperties.center = center;\n    }\n\n    if (updateView) {\n      if (!this.initial_ && this.animationOptions_) {\n        view.animate(assign(viewProperties, this.animationOptions_));\n      } else {\n        if (viewProperties.center) {\n          view.setCenter(viewProperties.center);\n        }\n        if ('zoom' in viewProperties) {\n          view.setZoom(viewProperties.zoom);\n        }\n        if ('rotation' in viewProperties) {\n          view.setRotation(viewProperties.rotation);\n        }\n      }\n    }\n\n    const layers = map.getAllLayers();\n    const layersParam = this.get_(params, 'l');\n    if (layersParam && layersParam.length === layers.length) {\n      for (let i = 0, ii = layers.length; i < ii; ++i) {\n        const value = parseInt(layersParam[i]);\n        if (!isNaN(value)) {\n          const visible = Boolean(value);\n          const layer = layers[i];\n          if (layer.getVisible() !== visible) {\n            layer.setVisible(visible);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateUrl_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    if (!view) {\n      return;\n    }\n    const initial = this.initial_;\n    this.initial_ = false;\n\n    const center = view.getCenter();\n    const zoom = view.getZoom();\n    const rotation = view.getRotation();\n\n    const layers = map.getAllLayers();\n    const visibilities = new Array(layers.length);\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      visibilities[i] = layers[i].getVisible() ? '1' : '0';\n    }\n\n    const url = new URL(window.location.href);\n    const params = url.searchParams;\n\n    this.set_(params, 'x', writeNumber(center[0]));\n    this.set_(params, 'y', writeNumber(center[1]));\n    this.set_(params, 'z', writeNumber(zoom));\n    this.set_(params, 'r', writeNumber(rotation));\n    this.set_(params, 'l', visibilities.join(''));\n\n    if (url.href !== window.location.href) {\n      if (initial || this.replace_) {\n        window.history.replaceState(null, '', url);\n      } else {\n        window.history.pushState(null, '', url);\n      }\n    }\n  }\n}\n\nexport default Link;\n","import Link from '../src/ol/interaction/Link.js';\nimport Map from '../src/ol/Map.js';\nimport OSM from '../src/ol/source/OSM.js';\nimport TileLayer from '../src/ol/layer/Tile.js';\nimport View from '../src/ol/View.js';\n\nconst map = new Map({\n  layers: [\n    new TileLayer({\n      source: new OSM(),\n    }),\n  ],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2,\n  }),\n});\n\nmap.addInteraction(new Link());\n"],"names":["readNumber","string","parseFloat","writeNumber","number","toFixed","to5","toString","differentNumber","a","b","isNaN","Link","opt_options","animationOptions","options","assign","animate","replace","prefix","duration","animationOptions_","replace_","prefix_","listenerKeys_","initial_","updateState_","bind","name","this","params","get","getParamName_","value","set","delete","map","oldMap","getMap","unregisterListeners_","registerListeners_","push","listen","MapEventType","updateUrl_","getLayerGroup","EventType","handleChangeLayerGroup_","addEventListener","i","ii","length","unlistenByKey","removeEventListener","url","URL","window","location","href","searchParams","delete_","history","replaceState","view","getView","updateView","viewProperties","zoom","get_","getZoom","rotation","getRotation","center","getCenter","setCenter","setZoom","setRotation","layers","getAllLayers","layersParam","parseInt","visible","Boolean","layer","getVisible","setVisible","initial","visibilities","Array","set_","join","pushState","Interaction","Map","TileLayer","source","OSM","target","View","addInteraction"],"sourceRoot":""}