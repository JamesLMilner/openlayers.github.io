{"version":3,"sources":["webpack://ol/webpack/universalModuleDefinition","webpack://ol/webpack/bootstrap","webpack://ol/./node_modules/rbush/index.js","webpack://ol/./node_modules/pbf/index.js","webpack://ol/./node_modules/pixelworks/lib/index.js","webpack://ol/./node_modules/ieee754/index.js","webpack://ol/./node_modules/quickselect/quickselect.js","webpack://ol/./node_modules/pixelworks/lib/processor.js","webpack://ol/./node_modules/pixelworks/lib/util.js","webpack://ol/./build/ol/util.js","webpack://ol/./build/ol/AssertionError.js","webpack://ol/./build/ol/CollectionEventType.js","webpack://ol/./build/ol/ObjectEventType.js","webpack://ol/./build/ol/obj.js","webpack://ol/./build/ol/events.js","webpack://ol/./build/ol/Disposable.js","webpack://ol/./build/ol/functions.js","webpack://ol/./build/ol/events/Event.js","webpack://ol/./build/ol/events/Target.js","webpack://ol/./build/ol/events/EventType.js","webpack://ol/./build/ol/Observable.js","webpack://ol/./build/ol/Object.js","webpack://ol/./build/ol/Collection.js","webpack://ol/./build/ol/asserts.js","webpack://ol/./build/ol/Feature.js","webpack://ol/./build/ol/array.js","webpack://ol/./build/ol/extent/Corner.js","webpack://ol/./build/ol/extent/Relationship.js","webpack://ol/./build/ol/extent.js","webpack://ol/./build/ol/geom/GeometryLayout.js","webpack://ol/./build/ol/geom/GeometryType.js","webpack://ol/./build/ol/geom/flat/transform.js","webpack://ol/./build/ol/math.js","webpack://ol/./build/ol/sphere.js","webpack://ol/./build/ol/proj/Units.js","webpack://ol/./build/ol/proj/Projection.js","webpack://ol/./build/ol/proj/epsg3857.js","webpack://ol/./build/ol/proj/epsg4326.js","webpack://ol/./build/ol/proj/projections.js","webpack://ol/./build/ol/proj/transforms.js","webpack://ol/./build/ol/proj.js","webpack://ol/./build/ol/transform.js","webpack://ol/./build/ol/geom/Geometry.js","webpack://ol/./build/ol/geom/SimpleGeometry.js","webpack://ol/./build/ol/geom/flat/area.js","webpack://ol/./build/ol/geom/flat/closest.js","webpack://ol/./build/ol/geom/flat/deflate.js","webpack://ol/./build/ol/geom/flat/inflate.js","webpack://ol/./build/ol/geom/flat/simplify.js","webpack://ol/./build/ol/geom/LinearRing.js","webpack://ol/./build/ol/geom/Point.js","webpack://ol/./build/ol/geom/flat/contains.js","webpack://ol/./build/ol/geom/flat/interiorpoint.js","webpack://ol/./build/ol/geom/flat/segments.js","webpack://ol/./build/ol/geom/flat/intersectsextent.js","webpack://ol/./build/ol/geom/flat/reverse.js","webpack://ol/./build/ol/geom/flat/orient.js","webpack://ol/./build/ol/geom/Polygon.js","webpack://ol/./build/ol/has.js","webpack://ol/./build/ol/Geolocation.js","webpack://ol/./build/ol/Kinetic.js","webpack://ol/./build/ol/MapEvent.js","webpack://ol/./build/ol/MapBrowserEvent.js","webpack://ol/./build/ol/MapBrowserEventType.js","webpack://ol/./build/ol/MapBrowserPointerEvent.js","webpack://ol/./build/ol/pointer/EventType.js","webpack://ol/./build/ol/pointer/EventSource.js","webpack://ol/./build/ol/pointer/MouseSource.js","webpack://ol/./build/ol/pointer/MsSource.js","webpack://ol/./build/ol/pointer/NativeSource.js","webpack://ol/./build/ol/pointer/PointerEvent.js","webpack://ol/./build/ol/pointer/TouchSource.js","webpack://ol/./build/ol/pointer/PointerEventHandler.js","webpack://ol/./build/ol/MapBrowserEventHandler.js","webpack://ol/./build/ol/MapEventType.js","webpack://ol/./build/ol/MapProperty.js","webpack://ol/./build/ol/render/EventType.js","webpack://ol/./build/ol/TileState.js","webpack://ol/./build/ol/structs/PriorityQueue.js","webpack://ol/./build/ol/TileQueue.js","webpack://ol/./build/ol/tilegrid/common.js","webpack://ol/./build/ol/centerconstraint.js","webpack://ol/./build/ol/rotationconstraint.js","webpack://ol/./build/ol/ViewHint.js","webpack://ol/./build/ol/ViewProperty.js","webpack://ol/./build/ol/string.js","webpack://ol/./build/ol/coordinate.js","webpack://ol/./build/ol/easing.js","webpack://ol/./build/ol/View.js","webpack://ol/./build/ol/resolutionconstraint.js","webpack://ol/./build/ol/dom.js","webpack://ol/./build/ol/layer/Property.js","webpack://ol/./build/ol/layer/Base.js","webpack://ol/./build/ol/source/State.js","webpack://ol/./build/ol/layer/Group.js","webpack://ol/./build/ol/size.js","webpack://ol/./build/ol/PluggableMap.js","webpack://ol/./build/ol/control/Control.js","webpack://ol/./build/ol/css.js","webpack://ol/./build/ol/layer/Layer.js","webpack://ol/./build/ol/control/Attribution.js","webpack://ol/./build/ol/control/Rotate.js","webpack://ol/./build/ol/control/Zoom.js","webpack://ol/./build/ol/control/util.js","webpack://ol/./build/ol/interaction/Property.js","webpack://ol/./build/ol/interaction/Interaction.js","webpack://ol/./build/ol/interaction/DoubleClickZoom.js","webpack://ol/./build/ol/events/condition.js","webpack://ol/./build/ol/interaction/Pointer.js","webpack://ol/./build/ol/interaction/DragPan.js","webpack://ol/./build/ol/interaction/DragRotate.js","webpack://ol/./build/ol/render/Box.js","webpack://ol/./build/ol/interaction/DragBox.js","webpack://ol/./build/ol/interaction/DragZoom.js","webpack://ol/./build/ol/events/KeyCode.js","webpack://ol/./build/ol/interaction/KeyboardPan.js","webpack://ol/./build/ol/interaction/KeyboardZoom.js","webpack://ol/./build/ol/interaction/MouseWheelZoom.js","webpack://ol/./build/ol/interaction/PinchRotate.js","webpack://ol/./build/ol/interaction/PinchZoom.js","webpack://ol/./build/ol/interaction.js","webpack://ol/./build/ol/render/Event.js","webpack://ol/./build/ol/color.js","webpack://ol/./build/ol/style/IconImageCache.js","webpack://ol/./build/ol/renderer/Map.js","webpack://ol/./build/ol/renderer/Composite.js","webpack://ol/./build/ol/Map.js","webpack://ol/./build/ol/OverlayPositioning.js","webpack://ol/./build/ol/Overlay.js","webpack://ol/./build/ol/colorlike.js","webpack://ol/./build/ol/format/FormatType.js","webpack://ol/./build/ol/featureloader.js","webpack://ol/./build/ol/loadingstrategy.js","webpack://ol/./build/ol/render/VectorContext.js","webpack://ol/./build/ol/structs/LRUCache.js","webpack://ol/./build/ol/render/canvas.js","webpack://ol/./build/ol/render/canvas/LabelCache.js","webpack://ol/./build/ol/render/canvas/Immediate.js","webpack://ol/./build/ol/TileRange.js","webpack://ol/./build/ol/tilecoord.js","webpack://ol/./build/ol/tilegrid/TileGrid.js","webpack://ol/./build/ol/tilegrid.js","webpack://ol/./build/ol/xml.js","webpack://ol/./build/ol/webgl.js","webpack://ol/./build/ol/webgl/ContextEventType.js","webpack://ol/./build/ol/vec/mat4.js","webpack://ol/./build/ol/webgl/PostProcessingPass.js","webpack://ol/./build/ol/webgl/Helper.js","webpack://ol/./build/ol/tilegrid/WMTS.js","webpack://ol/./build/ol/ImageState.js","webpack://ol/./build/ol/style/Image.js","webpack://ol/./build/ol/style/RegularShape.js","webpack://ol/./build/ol/style/Circle.js","webpack://ol/./build/ol/style/Fill.js","webpack://ol/./build/ol/style/IconAnchorUnits.js","webpack://ol/./build/ol/style/IconImage.js","webpack://ol/./build/ol/style/IconOrigin.js","webpack://ol/./build/ol/style/Icon.js","webpack://ol/./build/ol/style/Stroke.js","webpack://ol/./build/ol/style/Style.js","webpack://ol/./build/ol/style/TextPlacement.js","webpack://ol/./build/ol/style/Text.js","webpack://ol/./build/ol/tileurlfunction.js","webpack://ol/./build/ol/net.js","webpack://ol/./build/ol/reproj/common.js","webpack://ol/./build/ol/Tile.js","webpack://ol/./build/ol/ImageTile.js","webpack://ol/./build/ol/TileCache.js","webpack://ol/./build/ol/reproj.js","webpack://ol/./build/ol/reproj/Triangulation.js","webpack://ol/./build/ol/reproj/Tile.js","webpack://ol/./build/ol/source/Source.js","webpack://ol/./build/ol/source/Tile.js","webpack://ol/./build/ol/source/TileEventType.js","webpack://ol/./build/ol/source/UrlTile.js","webpack://ol/./build/ol/source/TileImage.js","webpack://ol/./build/ol/source/BingMaps.js","webpack://ol/./build/ol/source/XYZ.js","webpack://ol/./build/ol/source/CartoDB.js","webpack://ol/./build/ol/source/VectorEventType.js","webpack://ol/./build/ol/structs/RBush.js","webpack://ol/./build/ol/source/Vector.js","webpack://ol/./build/ol/source/Cluster.js","webpack://ol/./build/ol/ImageBase.js","webpack://ol/./build/ol/reproj/Image.js","webpack://ol/./build/ol/source/Image.js","webpack://ol/./build/ol/Image.js","webpack://ol/./build/ol/uri.js","webpack://ol/./build/ol/source/ImageArcGISRest.js","webpack://ol/./build/ol/ImageCanvas.js","webpack://ol/./build/ol/source/ImageCanvas.js","webpack://ol/./build/ol/source/ImageMapGuide.js","webpack://ol/./build/ol/source/ImageStatic.js","webpack://ol/./build/ol/source/common.js","webpack://ol/./build/ol/source/WMSServerType.js","webpack://ol/./build/ol/source/ImageWMS.js","webpack://ol/./build/ol/source/OSM.js","webpack://ol/./build/ol/layer/BaseImage.js","webpack://ol/./build/ol/renderer/Layer.js","webpack://ol/./build/ol/renderer/canvas/Layer.js","webpack://ol/./build/ol/renderer/canvas/ImageLayer.js","webpack://ol/./build/ol/layer/Image.js","webpack://ol/./build/ol/layer/TileProperty.js","webpack://ol/./build/ol/layer/BaseTile.js","webpack://ol/./build/ol/renderer/canvas/TileLayer.js","webpack://ol/./build/ol/layer/Tile.js","webpack://ol/./build/ol/source/Raster.js","webpack://ol/./build/ol/source/Stamen.js","webpack://ol/./build/ol/source/TileArcGISRest.js","webpack://ol/./build/ol/source/TileDebug.js","webpack://ol/./build/ol/source/TileJSON.js","webpack://ol/./build/ol/source/TileWMS.js","webpack://ol/./build/ol/source/UTFGrid.js","webpack://ol/./build/ol/VectorRenderTile.js","webpack://ol/./build/ol/VectorTile.js","webpack://ol/./build/ol/source/VectorTile.js","webpack://ol/./build/ol/source/WMTSRequestEncoding.js","webpack://ol/./build/ol/source/WMTS.js","webpack://ol/./build/ol/source/Zoomify.js","webpack://ol/./build/ol/webgl/Buffer.js","webpack://ol/./build/ol/renderer/webgl/PointsLayer.js","webpack://ol/./build/ol/render/canvas/Instruction.js","webpack://ol/./build/ol/render/canvas/Builder.js","webpack://ol/./build/ol/render/canvas/ImageBuilder.js","webpack://ol/./build/ol/render/canvas/LineStringBuilder.js","webpack://ol/./build/ol/render/canvas/PolygonBuilder.js","webpack://ol/./build/ol/geom/flat/straightchunk.js","webpack://ol/./build/ol/render/canvas/TextBuilder.js","webpack://ol/./build/ol/render/canvas/BuilderGroup.js","webpack://ol/./build/ol/render/canvas/BuilderType.js","webpack://ol/./build/ol/geom/flat/length.js","webpack://ol/./build/ol/geom/flat/textpath.js","webpack://ol/./build/ol/render/canvas/Executor.js","webpack://ol/./build/ol/render/canvas/ExecutorGroup.js","webpack://ol/./build/ol/renderer/vector.js","webpack://ol/./build/ol/renderer/canvas/VectorLayer.js","webpack://ol/./build/ol/layer/VectorTileRenderType.js","webpack://ol/./build/ol/renderer/canvas/VectorTileLayer.js","webpack://ol/./build/ol/layer/BaseVector.js","webpack://ol/./build/ol/layer/Vector.js","webpack://ol/./build/ol/geom/flat/interpolate.js","webpack://ol/./build/ol/geom/LineString.js","webpack://ol/./build/ol/geom/flat/geodesic.js","webpack://ol/./build/ol/layer/Graticule.js","webpack://ol/./build/ol/layer/Heatmap.js","webpack://ol/./build/ol/renderer/canvas/VectorImageLayer.js","webpack://ol/./build/ol/layer/VectorImage.js","webpack://ol/./build/ol/layer/VectorTile.js","webpack://ol/./build/ol/interaction/DragAndDrop.js","webpack://ol/./build/ol/interaction/DragRotateAndZoom.js","webpack://ol/./build/ol/geom/Circle.js","webpack://ol/./build/ol/geom/MultiLineString.js","webpack://ol/./build/ol/geom/MultiPoint.js","webpack://ol/./build/ol/geom/flat/center.js","webpack://ol/./build/ol/geom/MultiPolygon.js","webpack://ol/./build/ol/interaction/Draw.js","webpack://ol/./build/ol/interaction/Extent.js","webpack://ol/./build/ol/interaction/Modify.js","webpack://ol/./build/ol/interaction/Select.js","webpack://ol/./build/ol/interaction/Snap.js","webpack://ol/./build/ol/interaction/Translate.js","webpack://ol/./build/ol/geom/GeometryCollection.js","webpack://ol/./build/ol/format/Feature.js","webpack://ol/./build/ol/format/JSONFeature.js","webpack://ol/./build/ol/format/EsriJSON.js","webpack://ol/./build/ol/format/XMLFeature.js","webpack://ol/./build/ol/format/GMLBase.js","webpack://ol/./build/ol/format/xsd.js","webpack://ol/./build/ol/format/GML3.js","webpack://ol/./build/ol/format/GML.js","webpack://ol/./build/ol/format/GML2.js","webpack://ol/./build/ol/format/GML32.js","webpack://ol/./build/ol/format/GPX.js","webpack://ol/./build/ol/format/GeoJSON.js","webpack://ol/./build/ol/format/TextFeature.js","webpack://ol/./build/ol/format/KML.js","webpack://ol/./build/ol/format/IGC.js","webpack://ol/./build/ol/render/Feature.js","webpack://ol/./build/ol/format/MVT.js","webpack://ol/./build/ol/format/OSMXML.js","webpack://ol/./build/ol/geom/flat/flip.js","webpack://ol/./build/ol/format/Polyline.js","webpack://ol/./build/ol/format/TopoJSON.js","webpack://ol/./build/ol/format/filter/Filter.js","webpack://ol/./build/ol/format/filter/LogicalNary.js","webpack://ol/./build/ol/format/filter/And.js","webpack://ol/./build/ol/format/filter/Bbox.js","webpack://ol/./build/ol/format/filter/Spatial.js","webpack://ol/./build/ol/format/filter/Contains.js","webpack://ol/./build/ol/format/filter/Comparison.js","webpack://ol/./build/ol/format/filter/During.js","webpack://ol/./build/ol/format/filter/ComparisonBinary.js","webpack://ol/./build/ol/format/filter/EqualTo.js","webpack://ol/./build/ol/format/filter/GreaterThan.js","webpack://ol/./build/ol/format/filter/GreaterThanOrEqualTo.js","webpack://ol/./build/ol/format/filter/Intersects.js","webpack://ol/./build/ol/format/filter/IsBetween.js","webpack://ol/./build/ol/format/filter/IsLike.js","webpack://ol/./build/ol/format/filter/IsNull.js","webpack://ol/./build/ol/format/filter/LessThan.js","webpack://ol/./build/ol/format/filter/LessThanOrEqualTo.js","webpack://ol/./build/ol/format/filter/Not.js","webpack://ol/./build/ol/format/filter/NotEqualTo.js","webpack://ol/./build/ol/format/filter/Or.js","webpack://ol/./build/ol/format/filter/Within.js","webpack://ol/./build/ol/format/filter.js","webpack://ol/./build/ol/format/WFS.js","webpack://ol/./build/ol/format/WKT.js","webpack://ol/./build/ol/format/XLink.js","webpack://ol/./build/ol/format/XML.js","webpack://ol/./build/ol/format/WMSCapabilities.js","webpack://ol/./build/ol/format/WMSGetFeatureInfo.js","webpack://ol/./build/ol/format/OWS.js","webpack://ol/./build/ol/format/WMTSCapabilities.js","webpack://ol/./build/ol/control/FullScreen.js","webpack://ol/./build/ol/control/MousePosition.js","webpack://ol/./build/ol/control/OverviewMap.js","webpack://ol/./build/ol/control/ScaleLine.js","webpack://ol/./build/ol/control/ZoomSlider.js","webpack://ol/./build/ol/control/ZoomToExtent.js","webpack://ol/./build/index.js","webpack://ol/./build/ol/proj/proj4.js","webpack://ol/./build/ol/render.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","rbush","default","quickselect","maxEntries","format","this","_maxEntries","Math","max","_minEntries","ceil","_initFormat","clear","findItem","item","items","equalsFn","indexOf","length","calcBBox","node","toBBox","distBBox","children","k","destNode","createNode","minX","Infinity","minY","maxX","maxY","child","extend","leaf","a","b","min","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","contains","intersects","height","multiSelect","arr","left","right","compare","mid","stack","pop","push","all","_all","data","search","bbox","result","len","childBBox","nodesToSearch","collides","load","insert","_build","slice","_splitRoot","tmpNode","_insert","remove","parent","index","goingUp","path","indexes","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","N","M","log","pow","j","right2","right3","N2","N1","sqrt","_chooseSubtree","level","targetNode","area","enlargement","minArea","minEnlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","newNode","bbox1","bbox2","overlap","minOverlap","_allDistMargin","sort","leftBBox","rightBBox","margin","siblings","compareArr","Function","join","Pbf","ieee754","buf","ArrayBuffer","isView","Uint8Array","pos","type","Varint","Fixed64","Bytes","Fixed32","readPackedEnd","pbf","readVarint","toNum","low","high","isSigned","makeRoomForExtraLength","startPos","extraLen","LN2","realloc","writePackedVarint","writeVarint","writePackedSVarint","writeSVarint","writePackedFloat","writeFloat","writePackedDouble","writeDouble","writePackedBoolean","writeBoolean","writePackedFixed32","writeFixed32","writePackedSFixed32","writeSFixed32","writePackedFixed64","writeFixed64","writePackedSFixed64","writeSFixed64","readUInt32","writeInt32","val","readInt32","destroy","readFields","readField","end","tag","skip","readMessage","readFixed32","readSFixed32","readFixed64","readSFixed64","readFloat","read","readDouble","h","Error","readVarintRemainder","readVarint64","readSVarint","num","readBoolean","Boolean","readString","str","b1","b2","b3","b0","bytesPerSequence","String","fromCharCode","readUtf8","readBytes","buffer","subarray","readPackedVarint","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","set","finish","floor","writeBigVarintLow","lsb","writeBigVarintHigh","writeBigVarint","writeString","lead","charCodeAt","writeUtf8","write","writeBytes","writeRawMessage","fn","obj","writeMessage","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","Processor","offset","isLE","mLen","nBytes","e","eLen","eMax","eBias","nBits","NaN","rt","abs","isNaN","swap","tmp","defaultCompare","quickselectStep","z","exp","sd","newLeft","newRight","newImageData","createMinion","operation","workerHasImageData","ImageData","_","newWorkerImageData","width","output","buffers","meta","imageOps","numBuffers","numBytes","byteLength","images","Array","Uint8ClampedArray","arrays","pixels","array","pixel","createWorker","config","onMessage","lines","keys","lib","map","toString","concat","blob","Blob","source","URL","createObjectURL","worker","Worker","addEventListener","threads","_imageOps","workers","_onWorkerMessage","minion","postMessage","setTimeout","createFauxWorker","_workers","_queue","_maxQueueLength","queue","_running","_dataLookup","_job","process","inputs","callback","_enqueue","_dispatch","_destroyed","job","shift","input","segmentLength","slices","jj","event","_resolveJob","hasImageData","context","document","createElement","getContext","imageData","createImageData","util_abstract","uidCounter_","getUid","ol_uid","VERSION","ol_AssertionError","AssertionError","code","message","split","__proto__","constructor","CollectionEventType","ADD","REMOVE","ObjectEventType","obj_assign","assign","target","var_sources","arguments$1","arguments","TypeError","ii","obj_clear","getValues","values","isEmpty","findListener","listeners","listener","opt_this","opt_setDeleteIndex","listenerObj","bindTo","deleteIndex","getListeners","listenerMap","getListenerMap","undefined","opt_create","ol_lm","removeListeners","removeEventListener","boundListener","removeListenerMap","listen","opt_once","callOnce","evt","unlistenByKey","bindListener","listenOnce","unlisten","unlistenAll","Disposable_Disposable","disposed_","dispose","disposeInternal","ol_Disposable","TRUE","FALSE","VOID","Event_Event","propagationStopped","stopPropagation","preventDefault","events_Event","events_Target","Disposable","Target","pendingRemovals_","dispatching_","listeners_","dispatchEvent","propagate","pendingRemovals","hasListener","opt_type","EventType","CHANGE","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","ERROR","KEYDOWN","KEYPRESS","LOAD","MOUSEDOWN","MOUSEMOVE","MOUSEOUT","MOUSEUP","MOUSEWHEEL","MSPOINTERDOWN","RESIZE","TOUCHSTART","TOUCHMOVE","TOUCHEND","WHEEL","ol_Observable","EventTarget","Observable","revision_","changed","getRevision","on","isArray","once","un","ObjectEvent","Event","oldValue","changeEventTypeCache","getChangeEventType","ol_Object","BaseObject","opt_values","values_","setProperties","getKeys","getProperties","notify","eventType","opt_silent","unset","Property","CollectionEvent","opt_element","opt_index","element","ol_Collection","Collection","opt_array","opt_options","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","forEach","f","getArray","insertAt","elem","removeAt","prev","setAt","opt_except","assert","assertion","errorCode","ol_Feature","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","getSimplifiedGeometry","geometry","setGeometry","properties","clone","setGeometryName","getGeometryName","getGeometry","style","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","styles","getZIndex","createStyleFunction","setId","id","numberSafeCompareFunction","includes","linearFindNearest","direction","reverseSubArray","begin","extension","find","func","equals","arr1","arr2","len1","findIndex","every","el","idx","Corner","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","Relationship","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","extent_buffer","opt_extent","extent_clone","closestSquaredDistanceXY","x","y","dx","dy","containsCoordinate","coordinate","extent_containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","stride","extendFlatCoordinates","extent_equals","extent_extend","extendCoordinates","extendXY","forEachCorner","getBottomLeft","getBottomRight","getTopRight","getTopLeft","extent_getArea","extent_isEmpty","getWidth","getHeight","extent_getCenter","getCorner","corner","getForViewAndSize","center","resolution","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","getIntersection","intersection","extent_intersects","scaleFromCenter","deltaX","deltaY","extent_applyTransform","transformFn","xs","ys","_boundingExtentXYs","GeometryLayout","XY","XYZ","XYM","XYZM","GeometryType","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","transform2D","transform","opt_dest","dest","clamp","cosh","squaredSegmentDistance","math_squaredDistance","toDegrees","angleInRadians","PI","toRadians","angleInDegrees","modulo","lerp","DEFAULT_RADIUS","getDistance","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","getLengthInternal","getAreaInternal","sphere_offset","distance","bearing","lon1","dByR","lat","asin","Units","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","METERS_PER_UNIT","proj_Units","Projection_Projection","code_","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","getPointResolutionFunc","proj_Projection","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","epsg3857_EPSG3857Projection","Projection","EPSG3857Projection","units","point","PROJECTIONS","fromEPSG4326","opt_output","opt_dimension","dimension","halfSize","tan","epsg3857_toEPSG4326","atan","epsg4326_EXTENT","epsg4326_METERS_PER_UNIT","epsg4326_EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","epsg4326_PROJECTIONS","projections_cache","projections2","forwardTransform","inverseTransform","transforms","transforms_add","destination","sourceCode","destinationCode","transforms_get","cloneTransform","identityTransform","addProjection","projection","projections_add","proj_get","projectionLike","opt_units","pointResolution","toEPSG4326","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","addCoordinateTransforms","forward","inverse","sourceProj","destProj","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransform","proj_transform","transformExtent","tmp_","transform_reset","transform_set","multiply","transform1","transform2","a1","d1","e1","f1","a2","d2","e2","f2","ol_transform_rotate","angle","ol_transform_scale","makeScale","ol_transform_translate","compose","dx1","dy1","sx","sy","dx2","dy2","makeInverse","mat","det","transform_toString","tmpTransform","geom_Geometry","Geometry","extentRevision_","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","closestPointXY","closestPoint","minSquaredDistance","containsXY","coord","getClosestPoint","opt_closestPoint","intersectsCoordinate","computeExtent","returnOrUpdate","rotate","anchor","scale","opt_sy","opt_anchor","simplify","tolerance","squaredTolerance","getType","applyTransform","intersectsExtent","translate","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getStrideForLayout","layout","geom_SimpleGeometry","SimpleGeometry","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","getLayoutForStride","anchorX","anchorY","transform_rotate","transform_scale","transform_translate","area_linearRing","twiceArea","area_linearRings","ends","assignClosest","offset1","offset2","i$1","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","assignClosestArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","endss","opt_coordinatesss","coordinatesss","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","snap","round","quantize","quantizeArray","geom_LinearRing","LinearRing","maxDelta_","maxDeltaRevision_","getArea","geom_Point","Point","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","getInteriorPointsOfMultiArray","interiorPoints","ret","point1","point2","intersectsLineString","coordinatesExtent","start","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRingArray","intersectsLinearRing","reverse_coordinates","linearRingIsClockwise","edge","linearRingIsOriented","opt_right","isClockwise","orientLinearRings","orientLinearRingsArray","Polygon_Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","linearRing","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRings","geom_Polygon","circular","opt_n","opt_sphereRadius","fromExtent","fromCircle","circle","opt_sides","opt_angle","sides","getCenter","arrayLength","polygon","makeRegular","getRadius","startAngle","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","GEOLOCATION","TOUCH","POINTER","MSPOINTER","Geolocation_Property","ACCURACY","ACCURACY_GEOMETRY","ALTITUDE","ALTITUDE_ACCURACY","HEADING","POSITION","PROJECTION","SPEED","TRACKING","TRACKING_OPTIONS","Geolocation_GeolocationError","GeolocationError","error","ol_Geolocation","Geolocation","position_","transform_","watchId_","handleProjectionChanged_","handleTrackingChanged_","setProjection","trackingOptions","setTrackingOptions","setTracking","tracking","getProjection","getTracking","geolocation","watchPosition","positionChange_","positionError_","getTrackingOptions","clearWatch","position","coords","accuracy","altitude","altitudeAccuracy","heading","longitude","latitude","projectedPosition","speed","getAccuracy","getAccuracyGeometry","getAltitude","getAltitudeAccuracy","getHeading","getPosition","getSpeed","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","update","Date","now","lastIndex","firstIndex","duration","getAngle","ol_Kinetic","ol_MapEvent","MapEvent","opt_frameState","frameState","ol_MapBrowserEvent","MapBrowserEvent","browserEvent","opt_dragging","originalEvent","getEventPixel","getCoordinateFromPixel","dragging","MapBrowserEventType","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","ol_MapBrowserPointerEvent","MapBrowserPointerEvent","pointerEvent","pointer_EventType","EventSource_EventSource","dispatcher","mapping","mapping_","getEvents","getHandlerForEvent","pointer_EventSource","POINTER_ID","POINTER_TYPE","mousedown","inEvent","isEventSimulatedFromTouch_","pointerMap","cancel","prepareEvent","down","mousemove","move","mouseup","button","up","cleanupMouse","mouseover","enterOver","mouseout","leaveOut","cloneEvent","pd","pointerId","isPrimary","pointerType","pointer_MouseSource","EventSource","MouseSource","lastTouches","lts","clientX","clientY","POINTER_TYPES","msPointerDown","prepareEvent_","msPointerMove","msPointerUp","cleanup","msPointerOut","msPointerOver","msPointerCancel","msLostPointerCapture","makeEvent","msGotPointerCapture","pointer_MsSource","MsSource","MSPointerDown","MSPointerMove","MSPointerUp","MSPointerOut","MSPointerOver","MSPointerCancel","MSGotPointerCapture","MSLostPointerCapture","pointerDown","fireNativeEvent","pointerMove","pointerUp","pointerOut","pointerOver","pointerCancel","lostPointerCapture","gotPointerCapture","pointer_NativeSource","NativeSource","pointerdown","pointermove","pointerup","pointerout","pointerover","pointercancel","gotpointercapture","lostpointercapture","HAS_BUTTONS","PointerEvent","_Event","opt_eventDict","eventDict","buttons","which","getButtons","pressure","getPressure","bubbles","cancelable","view","detail","screenX","screenY","ctrlKey","altKey","shiftKey","metaKey","relatedTarget","tiltX","tiltY","hwTimestamp","ev","MouseEvent","pointer_PointerEvent","touchstart","vacuumTouches_","setPrimaryTouch_","changedTouches","dedupSynthMouse_","clickCount_","processTouches_","overDown_","touchmove","moveOverOut_","touchend","upOut_","touchcancel","cancelOut_","pointer_TouchSource","TouchSource","mouseSource","firstTouchId_","resetId_","dedupTimeout_","isPrimaryTouch_","inTouch","identifier","count","cancelResetClickCount_","removePrimaryPointer_","inPointer","resetClickCount_","resetClickCountHandler_","clearTimeout","touchToPointer_","radiusX","radiusY","force","inFunction","touches","pointer","findTouch_","touchList","searchId","Number","out","outTarget","over","enter","outEvent","leave","cleanUpPointer_","lt","CLONE_PROPS","pointer_PointerEventHandler","PointerEventHandler","element_","eventMap_","eventSourceList_","registerSources","registerSource","register_","newEvents","handler","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","events","eventName","eventCopy","fireEvent","contains_","container","contained","inType","wrapMouseEvent","ol_MapBrowserEventHandler","MapBrowserEventHandler","moveTolerance","map_","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","getViewport","activePointers_","trackedTouches_","pointerEventHandler_","documentPointerEventHandler_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","updateActivePointers_","handlePointerUp_","isMouseActionButton_","handlePointerMove_","isMoving_","MapEventType","MapProperty","LAYERGROUP","SIZE","TARGET","VIEW","render_EventType","TileState","IDLE","LOADING","LOADED","EMPTY","ABORT","PriorityQueue_PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","ol_TileQueue","PriorityQueue","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","handleTileChange","getTilesLoading","tile","state","getState","hifi","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","abortedTiles","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","none","disable","delta","rotationconstraint_none","ViewHint","ViewProperty","padNumber","number","opt_precision","numberString","toFixed","decimal","compareVersions","v1","v2","s1","s2","n1","parseInt","n2","coordinate_add","closestOnSegment","segment","along","degreesToStringHDMS","hemispheres","degrees","opt_fractionDigits","normalizedDegrees","dflPrecision","precision","deg","sec","charAt","coordinate_format","template","replace","coordinate_equals","coordinate1","coordinate2","coordinate_rotate","cosAngle","sinAngle","coordinate_scale","coordinate_squaredDistance","coord1","coord2","coordinate_distance","squaredDistanceToSegment","toStringXY","easeIn","easeOut","inAndOut","linear","DEFAULT_MIN_ZOOM","animationCallback","returnValue","isNoopAnimation","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","ol_View","View","hints_","animations_","updateAnimationKey_","updateAnimations_","projection_","applyOptions_","resolutionConstraintInfo","resolutionConstraint","maxResolution","minResolution","minZoom","maxZoom","zoomFactor","resolutions","power","createSnapToResolutions","defaultMaxResolution","defaultMinResolution","opt_maxLevel","oldLevel","newLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","opt_tolerance","theta","createRotationConstraint","constraints_","zoom","constrainResolution","getResolution","options_","getUpdatedOptions_","newOptions","getZoom","getRotation","animate","var_args","animationCount","isDef","setCenter","setZoom","setRotation","series","complete","easing","setHint","getAnimating","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","calculateCenterZoom","calculateCenterRotate","filter","requestAnimationFrame","currentCenter","currentResolution","getSizeFromViewport_","selector","querySelector","metrics","getComputedStyle","constrainCenter","opt_delta","opt_direction","getConstraints","getHints","opt_hints","calculateExtent","opt_size","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","getResolutions","getResolutionForExtent","xResolution","yResolution","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","pixelRatio","pixelResolution","nearest","getResolutionForZoom","fit","geometryOrExtent","padding","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","constrainedResolution","centerRotX","centerRotY","setResolution","centerOn","centerX","centerY","hint","createCanvasContext2D","opt_width","opt_height","canvas","dom_outerWidth","offsetWidth","marginLeft","marginRight","dom_outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","oldNode","parentNode","replaceChild","removeNode","removeChild","removeChildren","lastChild","layer_Property","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","SOURCE","Base","BaseLayer","opacity","visible","zIndex","className_","className","state_","getClassName","getLayerState","layer","managed","getOpacity","sourceState","getSourceState","getVisible","getLayersArray","getLayerStatesArray","opt_states","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","State","UNDEFINED","READY","Group_Property","LAYERS","Group","LayerGroup","baseOptions","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","states","ownLayerState","layerState","size_buffer","size_scale","ratio","toSize","ol_PluggableMap","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","createOptionsInternal","maxTilesLoading_","maxTilesLoading","pixelRatio_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","msTouchAction","touchAction","overlayContainer_","appendChild","overlayContainerStopEvent_","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyHandlerKeys_","handleBrowserEvent","overlays_","overlayIdIndex_","renderer_","createRenderer","handleResize_","focus_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","skippedFeatureUids_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","setMap","interaction","addOverlayInternal_","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","hitTolerance","layerFilter","forEachFeatureAtCoordinate","getFeaturesAtPixel","features","feature","forEachLayerAtPixel","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","viewportPosition","getBoundingClientRect","eventPosition","top","getTarget","getTargetElement","pixelToCoordinateTransform","getOverlayById","getPixelFromCoordinate","coordinateToPixelTransform","getRenderer","getSize","getView","getOverlayContainer","getOverlayContainerStopEvent","tileSourceKey","tileCenter","tileResolution","wantedTiles","focus","mapBrowserEvent","HTMLElement","parentElement","interactionsArray","getActive","handleEvent","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","time","getLoading","getSource","loading","dispatchRenderEvent","postRenderFunctions","render","targetElement","updateSize","removeLayerRenderers","handleViewPropertyChanged_","setAttribute","isRendered","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","viewState","previousFrameState","hasArea","layerStatesArray","skippedFeatureUids","usedTiles","renderFrame","setLayerGroup","setSize","setView","skipFeature","computedStyle","parseFloat","unskipFeature","cache","control_Control","Control","target_","listenerKeys","getMap","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","getFontFamilies","font","family","fontFamily","visibleAtResolution","layer_Layer","Layer","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","handleSourcePropertyChange_","setSource","handleSourceChange_","layerRenderer","prepareFrame","renderEvent","Attribution_render","mapEvent","updateElement_","control_Attribution","Attribution","ulElement_","collapsed_","collapsed","overrideCollapsible_","collapsible","collapsible_","tipLabel","collapseLabel","collapseLabel_","textContent","label","label_","activeLabel","title","handleClick_","cssClasses","renderedAttributions_","renderedVisible_","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","display","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate_render","rotation_","autoHide_","add","msTransform","webkitTransform","control_Rotate","Rotate","callResetNorth_","resetNorth","duration_","autoHide","resetNorth_","control_Zoom","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","newResolution","defaults","zoomOptions","rotateOptions","attribution","attributionOptions","interaction_Property","ACTIVE","Interaction_rotate","opt_duration","rotateWithoutConstraints","currentRotation","Interaction_zoom","zoomWithoutConstraints","zoomByDelta","interaction_Interaction","Interaction","setActive","active","DoubleClickZoom_handleEvent","stopEvent","delta_","interaction_DoubleClickZoom","DoubleClickZoom","altKeyOnly","altShiftKeysOnly","condition_focus","activeElement","always","mouseActionButton","never","condition_pointerMove","singleClick","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","primaryAction","Pointer_centroid","pointerEvents","Pointer","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","updateTrackedPointers_","handledUp","handled","isPointerDraggingEvent","interaction_DragPan","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition_","condition","noKinetic_","centroid","centerpx","interaction_DragRotate","DragRotate","lastAngle_","Box","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","setPixels","createOrUpdateGeometry","DragBoxEventType","DragBoxEvent","interaction_DragBox","DragBox","box_","minArea_","onBoxEnd_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","out_","mapExtent","boxPixelExtent","interaction_DragZoom","DragZoom","KeyCode","UP","DOWN","KeyboardPan_handleEvent","keyCode","mapUnitsDelta","pixelDelta_","pan","interaction_KeyboardPan","KeyboardPan","defaultCondition_","pixelDelta","KeyboardZoom_handleEvent","charCode","interaction_KeyboardZoom","KeyboardZoom","Mode","interaction_MouseWheelZoom","MouseWheelZoom","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","trackpadZoomBuffer_","decrementInteractingHint_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","rebound","timeLeft","handleWheelZoom_","setMouseAnchor","interaction_PinchRotate","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","interaction_PinchZoom","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","interaction_defaults","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","onFocusOnly","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","render_Event","RenderEvent","opt_inversePixelTransform","opt_context","opt_glContext","inversePixelTransform","glContext","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","color_toString","fromString","cacheSize","g","exec","body","rgb","fromNamed","hasAlpha","substr","normalize","fromStringInternal_","asArray","IconImageCache","cache_","cacheSize_","maxCacheSize_","src","crossOrigin","canExpireCache","expire","iconImage","maxCacheSize","shared","expireIconCache","Composite","MapRenderer","CompositeMapRenderer","insertBefore","firstChild","children_","calculateMatrices2D","viewResolution","oldChildren","childNodes","oldChild","newChild","replaceChildren","scheduleRemoveUnusedLayerRenderers","scheduleExpireIconCache","layerStates","getLayerRenderer","getDataAtPixel","layerRenderers_","layerRendererListeners_","removeLayerRendererByKey_","thisArg","thisArg2","translatedCoordinate","projectionExtent","worldWidth","callback$1","getWrapX","layerKey","renderer","handleLayerRendererChange_","getLayerRenderers","this$1","layerStatesMap","reduce","acc","loop","ol_Map","Map","OverlayPositioning","BOTTOM_CENTER","CENTER_LEFT","CENTER_CENTER","CENTER_RIGHT","TOP_CENTER","Overlay_Property","ELEMENT","MAP","OFFSET","POSITIONING","ol_Overlay","Overlay","insertFirst","autoPan","autoPanAnimation","autoPanMargin","rendered","bottom_","left_","right_","top_","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getElement","getOffset","getPositioning","updatePixelPosition","panIntoView","mapRect","getRect","overlayRect","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","box","offsetX","pageXOffset","offsetY","pageYOffset","mapSize","updateRenderedPosition","bottom","getOptions","asColorLike","FormatType","ARRAY_BUFFER","JSON","TEXT","XML","loadFeaturesXhr","url","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","getLastExtent","onerror","send","featureloader_xhr","dataProjection","addFeatures","loadingstrategy_all","loadingstrategy_bbox","VectorContext_VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","fillStyle","strokeStyle","setImageStyle","imageStyle","opt_declutterGroup","setTextStyle","textStyle","render_VectorContext","structs_LRUCache","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","peekLast","peekLastKey","peekFirstKey","defaultFillStyle","defaultLineDash","defaultStrokeStyle","defaultPadding","labelCache","LabelCache","consumers","consumer","consumerId","prune","outer","consumerId$1","release","checkedFonts","measureContext","textHeights","checkFont","interval","referenceWidth","retries","checked","referenceFonts","text","isAvailable","getMeasureContext","weight","fontWeight","available","referenceFont","measureText","check","done","clearInterval","fontSpec","fontFamilies","setInterval","span","heights","measureTextHeight","measureTextWidth","canvas_measureAndCacheTextWidth","rotateAtOffset","resetTransform","drawImage","image","originX","originY","w","alpha","globalAlpha","setTransform","Immediate","VectorContext","CanvasImmediateRenderer","viewRotation","context_","viewRotation_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","image_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","lineTo","closePath","drawRings_","simpleGeometry","transformGeom2D","beginPath","arc","fill","stroke","getFill","getStroke","getImage","getText","getGeometryFunction","geometries","getGeometriesArray","flatMidpoint","getFlatMidpoint","geometryExtent","flatMidpoints","getFlatMidpoints","flatInteriorPoint","getEndss","flatInteriorPoints","getFlatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","lineCap","setLineDash","lineDash","lineDashOffset","lineJoin","lineWidth","miterLimit","textState","contextTextState","textAlign","textBaseline","fillStyleColor","getColor","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","strokeStyleLineDashOffset","getLineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","strokeStyleMiterLimit","getMiterLimit","imageAnchor","getAnchor","imageImage","imageOrigin","getOrigin","imageSize","getRotateWithView","getScale","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","getFont","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","getTextAlign","textTextBaseline","getTextBaseline","TileRange","TileRange_createOrUpdate","tileRange","tileCoord","containsTileRange","ol_TileRange","tilecoord_createOrUpdate","opt_tileCoord","getKeyZXY","tilecoord_getKey","hash","tmpTileCoord","TileGrid_TileGrid","opt_strict","currentVal","res","origins","origin_","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","sizes","calculateTileRanges_","forEachTileCoord","getTileRangeForExtentAndZ","forEachTileCoordParentTileRange","opt_tileRange","tileCoordExtent","getTileCoordExtent","getTileCoordChildTileRange","getTileRangeExtent","getTileSize","getTileCoordForXYAndZ_","getTileCoordCenter","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getZForResolution","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordForCoordAndZ","getTileCoordResolution","getFullTileRange","fullTileRanges","tilegrid_TileGrid","getForProjection","createForProjection","createXYZ","xyzOptions","gridOptions","resolutionsFromExtent","opt_maxZoom","opt_tileSize","opt_corner","createForExtent","extentFromProjection","half","DOCUMENT","implementation","createDocument","XML_SCHEMA_INSTANCE_URI","createElementNS","namespaceURI","qualifiedName","getAllTextContent","normalizeWhitespace","getAllTextContent_","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","nextSibling","isDocument","parse","xml","makeArrayExtender","valueReader","objectStack","makeArrayPusher","makeReplacer","makeObjectPropertyPusher","opt_property","localName","makeObjectPropertySetter","makeChildAppender","nodeWriter","makeArraySerializer","serializersNS","nodeFactory","serializers","makeSimpleNodeFactory","serialize","opt_nodeName","opt_namespaceURI","fixedNodeName","nodeName","OBJECT_PROPERTY_NODE_FACTORY","makeSequence","orderedKeys","sequence","makeStructureNS","namespaceURIs","structure","opt_structureNS","structureNS","parseNode","parsersNS","firstElementChild","nextElementSibling","parsers","parser","pushParseAndPop","opt_keys","pushSerializeAndPop","DYNAMIC_DRAW","CONTEXT_IDS","webgl_getContext","opt_attributes","EXTENSIONS","webgl_gl","getParameter","MAX_TEXTURE_SIZE","getSupportedExtensions","ContextEventType","LOST","RESTORED","fromTransform","mat4","WebGLPostProcessingPass","gl_","webGlContext","gl","scaleRatio_","scaleRatio","renderTargetTexture_","createTexture","renderTargetTextureSize_","frameBuffer_","createFramebuffer","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragmentShader","FRAGMENT_SHADER","renderTargetProgram_","createProgram","attachShader","linkProgram","renderTargetVerticesBuffer_","createBuffer","bindBuffer","bufferData","Float32Array","STATIC_DRAW","renderTargetAttribLocation_","getAttribLocation","renderTargetUniformLocation_","getUniformLocation","renderTargetTextureLocation_","uniforms_","uniforms","location","getGL","init","bindFramebuffer","FRAMEBUFFER","getFrameBuffer","viewport","internalFormat","RGBA","UNSIGNED_BYTE","bindTexture","TEXTURE_2D","texImage2D","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","framebufferTexture2D","COLOR_ATTACHMENT0","nextPass","activeTexture","TEXTURE0","clearColor","COLOR_BUFFER_BIT","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","useProgram","enableVertexAttribArray","vertexAttribPointer","FLOAT","uniform2f","uniform1i","applyUniforms","drawArrays","TRIANGLES","textureSlot","uniform","HTMLCanvasElement","texture","uniform3f","uniform4f","uniform1f","PostProcessingPass","DefaultUniform","DefaultAttrib","Helper","WebGLHelper","canvas_","bufferCache_","shaderCache_","programCache_","currentProgram_","hasOESElementIndexUint","getExtension","handleWebGLContextLost","handleWebGLContextRestored","projectionMatrix_","offsetRotateMatrix_","offsetScaleMatrix_","tmpMat4_","uniformLocations_","attribLocations_","postProcessPasses_","postProcesses","shaderCompileErrors_","arrayBuffer","bufferKey","bufferCache","Uint32Array","Uint16Array","getUsage","deleteBuffer","bufferCacheEntry","isContextLost","key$1","deleteProgram","key$2","deleteShader","prepareDraw","getCanvas","applyFrameState","drawElements","elementType","UNSIGNED_INT","UNSIGNED_SHORT","numItems","offsetInBytes","finalizeDraw","projectionMatrix","offsetScaleMatrix","offsetRotateMatrix","setUniformMatrixValue","HTMLImageElement","program","shader","getProgram","fragmentShaderSource","vertexShaderSource","getShaderInfoLog","getShaderCompileErrors","getAttributeLocation","setUniformFloatValue","uniformMatrix4fv","enableAttributeArray","attribName","createTextureInternal","opt_wrapS","opt_wrapT","TEXTURE_MAG_FILTER","createEmptyTexture","WMTSTileGrid","TileGrid","matrixIds_","matrixIds","getMatrixId","getMatrixIds","tilegrid_WMTS","createFromCapabilitiesMatrixSet","matrixSet","opt_matrixLimits","matrixLimits","switchOriginXY","elt","elt_ml","tileWidth","tileHeight","ImageState","Image_ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","getSnapToPixel","getHitDetectionImage","getImageState","getImageSize","getHitDetectionImageSize","setRotateWithView","setScale","setSnapToPixel","snapToPixel","listenImageChange","unlistenImageChange","style_Image","style_RegularShape","ImageStyle","RegularShape","hitDetectionCanvas_","fill_","points","radius_","radius1","radius2_","radius2","stroke_","size_","imageSize_","hitDetectionImageSize_","getPoints","getRadius2","strokeWidth","renderOptions","draw_","createHitDetectionCanvas_","angle0","radiusC","drawHitDetectionCanvas_","style_Circle","CircleStyle","setRadius","Fill","color_","setColor","style_Fill","IconAnchorUnits","FRACTION","IconImage_IconImage","IconImage","imageState","hitDetectionImage_","Image","imageListenerKeys_","imageState_","src_","tainted_","isTainted_","getImageData","dispatchChangeEvent_","handleImageError_","unlistenImage_","handleImageLoad_","replaceColor_","fillRect","getSrc","ctx","imgData","putImageData","IconOrigin","style_Icon","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","crossOrigin_","img","imgSize","iconImage_","IconImage_get","offset_","offsetOrigin_","offsetOrigin","setAnchor","iconImageSize","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","style_Stroke","Style","geometryFunction_","defaultGeometryFunction","zIndex_","setRenderer","setFill","setImage","setStroke","setText","defaultStyles","createDefaultStyle","createEditingStyle","white","blue","style_Style","TextPlacement","Text_Text","font_","textAlign_","textBaseline_","maxAngle_","maxAngle","placement_","placement","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","getPlacement","getMaxAngle","getOverflow","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","style_Text","tileurlfunction_createFromTemplate","zRegEx","xRegEx","yRegEx","dashYRegEx","range","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","nullTileUrlFunction","expandUrl","urls","match","startCharCode","stopCharCode","stop","jsonp","opt_errback","opt_callbackParam","script","async","timer","getElementsByTagName","ERROR_THRESHOLD","ol_Tile","Tile","interimTile","transition_","transition","transitionStarts_","getInterimTile","refreshInterimChain","getTileCoord","setState","getAlpha","inTransition","endTransition","getBlankImage","ol_ImageTile","ImageTile","tileLoadFunction","tileLoadFunction_","naturalWidth","naturalHeight","ol_TileCache","TileCache","expireCache","pruneExceptNewestZ","fromKey","calculateSourceResolution","targetProj","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","isFinite","enlargeClipPoint","centroidX","centroidY","dX","dY","reproj_render","targetExtent","triangulation","sources","gutter","opt_renderEdges","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","u1","u2","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","save","p0","p1","p2","clip","restore","Triangulation_Triangulation","maxSourceExtent","errorThreshold","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","reproj_Triangulation","reproj_Tile","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","unlistenSources_","reproject_","leftToLoad","sourceListenKey","adaptAttributions","attributionLike","source_Source","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","refresh","setAttributions","Tile_TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tilePixelRatio","canUseScreen","self","screen","availWidth","availHeight","tileCache","tmpSize","tileOptions","getTileCacheForProjection","forEachLoadedTile","tileCoordKey","loaded","covered","getGutterForProjection","setKey","getOpaque","getTile","getTileGrid","getTileGridForProjection","thisProj","getTilePixelRatio","getTilePixelSize","getTileCoordForTileUrlFunction","opt_projection","worldsAway","tilegrid_wrapX","withinExtentAndZ","useTile","TileSourceEvent","source_Tile","TileEventType","source_UrlTile","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","uid","tileState","setTileLoadFunction","setTileUrlFunction","defaultTileLoadFunction","imageTile","source_TileImage","TileImage","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","source_BingMaps","BingMaps","hidpi","hidpi_","culture_","culture","maxZoom_","apiKey_","imagerySet_","imagerySet","handleImageryMetadataResponse","getApiKey","getImagerySet","response","statusCode","statusDescription","authenticationResultCode","resourceSets","resources","resource","zoomMax","imageWidth","imageHeight","zoomMin","imageUrlSubdomains","subdomain","quadKeyTileCoord","imageUrl","digits","mask","quadKey","imageryProviders","imageryProvider","intersecting","coverageAreas","coverageArea","source_XYZ","source_CartoDB","CartoDB","account_","account","mapId_","config_","templateCache_","initializeMap_","getConfig","updateConfig","setConfig","paramHash","stringify","applyTemplate_","mapUrl","client","handleInitResponse_","handleInitError_","setRequestHeader","err","tilesUrl","cdn_url","https","layergroupid","VectorEventType","ADDFEATURE","CHANGEFEATURE","REMOVEFEATURE","RBush_RBush","opt_maxEntries","rbush_","rbush_default","items_","extents","getAll","getInExtent","forEach_","forEachInExtent","structs_RBush","VectorSourceEvent","opt_feature","Vector","VectorSource","loader_","format_","overlaps_","overlaps","url_","loader","strategy_","strategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","undefIdIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length$1","feature$1","featureKey$1","i$2","length$2","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeatures","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","hasFeature","loadFeatures","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","removed","setLoader","source_Cluster","Cluster","geometryFunction","cluster","setDistance","mapDistance","clustered","neighbors","neighbor","createCluster","ol_ImageBase","ImageBase","getPixelRatio","reproj_Image","ReprojImage","getImageFunction","sourceImage","sourcePixelRatio","targetResolution_","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","unlistenSource_","ImageSourceEventType","ImageSourceEvent","defaultImageLoadFunction","source_Image","ImageSource","reprojectedImage_","reprojectedRevision_","findNearestResolution","getImageInternal","handleImageChange","ol_Image","ImageWrapper","imageLoadFunction","imageLoadFunction_","appendParams","uri","params","keyParams","encodeURIComponent","qs","source_ImageArcGISRest","ImageArcGISRest","params_","renderedRevision_","ratio_","getParams","F","FORMAT","TRANSPARENT","halfWidth","halfHeight","imageResolution","getRequestUrl_","getImageLoadFunction","srid","modifiedUrl","setImageLoadFunction","updateParams","ol_ImageCanvas","ImageCanvas","opt_loader","error_","getError","handleLoad_","source_ImageCanvas","ImageCanvasSource","canvasFunction_","canvasFunction","canvasElement","source_ImageMapGuide","ImageMapGuide","displayDpi_","displayDpi","useOverlay_","useOverlay","baseUrl","dpi","mcsW","mcsH","devW","devH","mpp","baseParams","OPERATION","LOCALE","CLIENTAGENT","CLIP","SETDISPLAYDPI","SETDISPLAYWIDTH","SETDISPLAYHEIGHT","SETVIEWSCALE","SETVIEWCENTERX","SETVIEWCENTERY","ImageStatic","Static","imageExtent_","imageExtent","getImageExtent","targetWidth","DEFAULT_WMS_VERSION","WMSServerType","GETFEATUREINFO_IMAGE_SIZE","source_ImageWMS","ImageWMS","v13_","updateV13_","serverType_","getGetFeatureInfoUrl","projectionObj","sourceProjectionObj","SERVICE","REQUEST","QUERY_LAYERS","viewExtent","requestExtent","version","ATTRIBUTION","source_OSM","OSM","BaseImage_BaseImageLayer","BaseImageLayer","BaseImage","renderer_Layer","LayerRenderer","layer_","loadedTileCallback","tiles","createLoadedTileFinder","getLayer","handleImageChange_","renderIfReadyAndVisible","loadImage","scheduleExpireCache","tileSource","postRenderFunction","updateUsedTiles","manageTilePyramid","currentZ","preload","opt_tileCallback","canvas_Layer","CanvasLayerRenderer","renderedResolution","tempTransform_","pixelTransform_","inversePixelTransform_","transformOrigin","topLeft","topRight","bottomRight","bottomLeft","clipUnrotated","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","canvas_ImageLayer","CanvasImageLayerRenderer","imageLayer","imageSource","renderedExtent","imagePixelRatio","viewCenter","clearRect","clipped","dw","dh","canvasTransform","layer_Image","ImageLayer","TileProperty","BaseTile_BaseTileLayer","BaseTileLayer","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","getUseInterimTilesOnError","BaseTile","TileLayer_CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","renderedExtent_","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","zDirection","isDrawableTile","sourceRevision","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","childTileRange","canvasScale","zs","currentTilePixelSize","currentScale","dx$1","dy$1","originTileCoord","originTileExtent","tileGutter","tilesToDraw","tile$1","floatX","nextX","floatY","nextY","x$1","y$1","drawTileImage","getTileImage","alphaChanged","canvas_TileLayer","layer_Tile","TileLayer","RasterEventType","RasterOperationType","PIXEL","IMAGE","RasterSourceEvent","sharedContext","createLayer","layerOrSource","Raster","RasterSource","worker_","operationType_","operationType","threads_","layers_","createLayers","requestedFrameState_","renderedImageCanvas_","setOperation","opt_lib","updateFrameState_","allSourcesReady_","ready","processSources_","imageDatas","onWorkerComplete_","ATTRIBUTIONS","LayerConfig","terrain","terrain-background","terrain-labels","terrain-lines","toner-background","toner","toner-hybrid","toner-labels","toner-lines","toner-lite","watercolor","ProviderConfig","source_Stamen","Stamen","provider","providerConfig","layerConfig","TileArcGISRest_tileUrlFunction","tileExtent","tmpExtent_","source_TileArcGISRest","TileArcGISRest","getKeyForParams_","TileDebug_LabeledTile","LabeledTile","strokeRect","source_TileDebug","TileDebug","textTileCoord","source_TileJSON","TileJSON","tileJSON_","handleTileJSONResponse","handleTileJSONError","onXHRLoad_","onXHRError_","tileJSON","getTileJSON","epsg4326Projection","attributionExtent","TileWMS_tileUrlFunction","source_TileWMS","TileWMS","transparent","UTFGrid_CustomTile","CustomTile","preemptive","preemptive_","grid_","keys_","data_","jsonp_","getData","xRelative","yRelative","row","forDataAtCoordinate","opt_request","loadInternal_","handleError_","json","source_UTFGrid","UTFGrid","tileUrlFunction_","template_","getTemplate","forDataAtCoordinateAndResolution","grids","ol_VectorRenderTile","VectorRenderTile","getSourceTiles","removeSourceTiles","executorGroups","loadingSourceTiles","errorSourceTileKeys","replayState_","getSourceTiles_","removeSourceTiles_","sourceZ","hasContext","getReplayState","dirty","renderedRenderOrder","renderedTileRevision","renderedZ","renderedTileZ","DEFAULT_EXTENT","ol_VectorTile","VectorTile","features_","onLoad","setFeatures","onError","source_VectorTile","defaultLoadFunction","loadingTiles_","sourceTilesByTileKey_","tileGrids_","sourceTiles","empty","loadedZ","sourceTileCoord","sourceTile","sourceTileKey","previousSourceTiles","addSourceTiles","WMTSRequestEncoding","KVP","REST","source_WMTS","WMTS","requestEncoding","version_","dimensions_","dimensions","matrixSet_","requestEncoding_","getKeyForDimensions_","createFromWMTSTemplate","getDimensions","getMatrixSet","getRequestEncoding","getVersion","updateDimensions","tilematrixset","Service","Request","Version","Format","localContext","TileMatrix","TileCol","TileRow","TierSizeCalculation","DEFAULT","TRUNCATED","Zoomify_CustomTile","zoomifyImage_","source_Zoomify","Zoomify","tierSizeCalculation","tierSizeInTiles","tileSizeForTierSizeCalculation","reverse","tileCountUpToTier","tileCoordZ","tileIndex","TileGroup","ZoomifyTileClass","BufferUsage","WebGLArrayBuffer","opt_arr","opt_usage","arr_","usage_","Buffer","PointsLayer_VERTEX_SHADER","PointsLayer_FRAGMENT_SHADER","PointsLayer","WebGLPointsLayerRenderer","vectorLayer","u_texture","getDefaultTexture","helper_","sourceRevision_","verticesBuffer_","indicesBuffer_","program_","sizeCallback_","sizeCallback","coordCallback_","coordCallback","opacityCallback_","opacityCallback","texCoordCallback_","texCoordCallback","colorCallback_","colorCallback","component","rotateWithViewCallback_","rotateWithViewCallback","vectorSource","v0_r","v0_g","v0_b","v0_a","v1_r","v1_g","v1_b","v1_a","v2_r","v2_g","v2_b","v2_a","v3_r","v3_g","v3_b","v3_a","baseIndex","bytesPerFloat","BYTES_PER_ELEMENT","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","Instruction_fillInstruction","Instruction_strokeInstruction","beginPathInstruction","closePathInstruction","canvas_Instruction","Builder","CanvasBuilder","maxExtent","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","myEnds","endGeometry","reverseHitDetectionInstructions","instruction","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","ImageBuilder","CanvasImageBuilder","declutterGroup_","anchorX_","anchorY_","height_","originX_","originY_","drawCoordinates_","myBegin","declutterGroup","hitDetectionImage","LineStringBuilder","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","PolygonBuilder_CanvasPolygonBuilder","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","matchingChunk","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","BATCH_CONSTRUCTORS","Circle","Default","LineString","Text","CanvasTextBuilder","labels_","fillStates","strokeStates","textStates","textKey_","fillKey_","strokeKey_","geometryType","flatEnd","flatOffset","oo","drawChars_","geometryWidths","saveTextStates_","strokeKey","textKey","fillKey","baseline","BuilderGroup","declutter","declutter_","tolerance_","maxExtent_","resolution_","buildersByZIndex_","addDeclutter","group","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","canvas_BuilderGroup","BuilderType","lineStringLength","drawTextOnPath","startM","measureAndCacheTextWidth","previousAngle","numChars","segmentM","chunk","chunkLength","char","charLength","charM","segmentPos","interpolate","unshift","Executor_tmpExtent","Executor_tmpTransform","Executor_p1","Executor_p2","p3","p4","canvas_Executor","Executor","declutterTree","alignFill_","coordinateCache_","renderedTransform_","widths_","getTextImage","align","numLines","widths","currentWidth","measureTextWidths","lineHeight","renderWidth","leftRight","replayTextBackground_","strokeInstruction","setStrokeStyle_","replayImage_","fillStroke","boxW","boxH","boxX","boxY","strokePadding","declutterArgs","repeatSize","renderDeclutter_","groupCount","declutterData","drawTextImageWithPointPlacement_","execute_","skippedFeaturesHash","featureCallback","opt_hitExtent","dd","prevX","prevY","roundX","roundY","skipFeatures","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","batchSize","labelWithAnchor","widthIndex","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","cc","chars","part","execute","executeHitDetection","opt_featureCallback","ORDER","ExecutorGroup_ExecutorGroup","ExecutorGroup","allInstructions","opt_renderBuffer","declutterTree_","renderBuffer_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutterReplays","hitExtent","contextSize","declutteredFeatures","circleArrayCache","arraySize","fillCircleArrayRowToMiddle","getCircleArray","executor","getExecutor","getExecutors","opt_builderTypes","opt_declutterReplays","builderTypes","0","canvas_ExecutorGroup","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","builderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","MultiPoint","MultiLineString","MultiPolygon","GeometryCollection","replayGroup","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","renderGeometry","getGeometries","renderFeatureInternal","canvas_VectorLayer","CanvasVectorLayerRenderer","getDeclutter","dirty_","renderedResolution_","renderedRenderOrder_","replayGroup_","replayGroupChanged","handleFontsChanged_","clipExtent","world","transform$1","transform$2","handleStyleImageChange_","animating","interacting","updateWhileAnimating","getUpdateWhileAnimating","updateWhileInteracting","getUpdateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","getRenderBuffer","vectorLayerRenderOrder","getRenderOrder","styleFunction","replayGroupInstructions","executorGroup","VectorTileRenderType","HYBRID","IMAGE_REPLAYS","hybrid","VECTOR_REPLAYS","canvas_VectorTileLayer","CanvasVectorTileLayerRenderer","baseCanvas","overlayContext_","overlayCanvas","container_","overlayPixelTransform_","inverseOverlayPixelTransform_","renderedLayerRevision_","renderTileImageQueue_","tileListenerKeys_","tmpTransform_","prepareTile","tileUid","updateExecutorGroup_","tileImageNeedsRender_","listenerKey","layerRevision","revision","renderOrder","builderState","layerUid","tt","sourceTileExtent","sharedExtent","bufferedExtent","tileProjection","reproject","ii$1","executorGroupInstructions","replayExtent","renderingReplayGroup","found","getReplayTransform_","renderResolution","renderMode","getRenderMode","renderTileImages_","replayTypes","clips","worldOffset","currentClip","zz","executorData","replayDeclutter","renderTileImage_","replayState","pixelScale","BaseVector_Property","BaseVector_BaseVectorLayer","BaseVectorLayer","renderBuffer","updateWhileAnimating_","updateWhileInteracting_","setDeclutter","setRenderOrder","toFunction","BaseVector","layer_Vector","VectorLayer","interpolatePoint","pointY","cumulativeLengths","haystack","needle","opt_comparator","cmp","comparator","binarySearch","lineStringCoordinateAtM","extrapolate","lo","hi","m0","geom_LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","geodesic_line","geoM","fracA","fracB","fracM","geoA","geoB","geoStack","fractionStack","fractions","maxIterations","DEFAULT_STROKE_STYLE","INTERVALS","layer_Graticule","Graticule","maxLines","targetSize","showLabels","lonLabelFormatter","latLabelFormatter","lonLabelPosition","latLabelPosition","lonLabelStyle","latLabelStyle","intervals","maxLat_","maxLon_","minLat_","minLon_","maxLatP_","maxLonP_","minLatP_","minLonP_","targetSize_","maxLines_","meridians_","parallels_","strokeStyle_","fromLonLatTransform_","toLonLatTransform_","projectionCenterLonLat_","meridiansLabels_","parallelsLabels_","lonLabelFormatter_","latLabelFormatter_","lonLabelPosition_","latLabelPosition_","lonLabelStyleCache_","lonLabelStyle_","latLabelStyleCache_","latLabelStyle_","intervals_","loaderFunction","featurePool_","lineStyle_","renderExtent","updateProjectionInfo_","createGraticule_","featureCount","featuresColl","labelData","poolIndex","geom","addMeridian_","lon","minLat","maxLat","lineString","getMeridian_","textPoint","getMeridianPoint_","addParallel_","minLon","maxLon","getParallel_","getParallelPoint_","getInterval_","cnt","centerLonLat","centerLon","centerLat","validExtent","frac","meridian","clampedBottom","clampedTop","getMeridians","lon2","parallel","clampedLeft","clampedRight","getParallels","worldExtentP","Heatmap_Property","BLUR","GRADIENT","DEFAULT_GRADIENT","layer_Heatmap","Heatmap","gradient","blur","shadow","gradient_","shadow_","circleImage_","styleCache_","handleGradientChanged_","setGradient","setBlur","weightFunction_","getBlur","getGradient","colors","createLinearGradient","step","addColorStop","createGradient","u_size","u_blurSlope","u_resolution","u_gradientTexture","canvas_VectorImageLayer","CanvasVectorImageLayerRenderer","skippedFeatures_","vectorRenderer_","layerImageRatio_","getImageRatio","vectorRenderer","skippedFeatures","imageFrameState","newSkippedFeatures","image$1","VectorImage","VectorImageLayer","imageRatio","imageRatio_","VectorTile_VectorTileLayer","VectorTileLayer","renderMode_","layer_VectorTile","DragAndDropEventType","DragAndDropEvent","file","opt_features","handleDrop","files","dataTransfer","reader","FileReader","handleResult_","readAsText","handleStop","dropEffect","interaction_DragAndDrop","DragAndDrop","formatConstructors_","formatConstructors","dropListenKeys_","source_","tryReadFeatures_","registerListeners_","dropArea","unregisterListeners_","interaction_DragRotateAndZoom","DragRotateAndZoom","lastMagnitude_","magnitude","angleDelta","Circle_Circle","setCenterAndRadius","getRadiusSquared_","geom_Circle","geom_MultiLineString","lineStrings","appendLineString","opt_interpolate","lineStringsCoordinateAtM","getLineString","getLineStrings","midpoints","intersectsLineStringArray","geom_MultiPoint","appendPoint","getPoint","center_linearRingss","geom_MultiPolygon","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","appendPolygon","newEndss","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","linearRingssContainsXY","linearRingss","getInteriorPoints","linearRingsAreOriented","simplifiedEndss","quantizeMultiArray","getPolygon","prevEnds","getPolygons","intersectsLinearRingMultiArray","deflateMultiCoordinatesArray","lastEnds","Draw_Mode","DrawEventType","DrawEvent","interaction_Draw","Draw","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","snapTolerance_","snapTolerance","type_","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","opt_geometry","squaredLength","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","geometryName","freehandCondition_","freehand","freehandCondition","updateState_","getOverlay","pass","addToDrawing_","startDrawing_","circleMode","finishDrawing","atFinish_","abortDrawing_","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","sketchCoords","finishCoordinate","finishPixel","updateSketchFeatures_","sketchLineGeom","ring","removeLastPoint","sketchFeature","sketchFeatures","overlaySource","ExtentEventType","EXTENTCHANGED","ExtentInteractionEvent","getDefaultPointerStyleFunction","getPointHandler","fixedPoint","getEdgeHandler","fixedP1","fixedP2","Extent","ExtentInteraction","pointerHandler_","pixelTolerance_","pixelTolerance","snappedToVertex_","extentFeature_","vertexFeature_","extentOverlay_","boxStyle","vertexOverlay_","pointerStyle","snapToVertex_","pixelCoordinate","segments","getSegments","closestSegment","vertex","vertexPixel","pixel1","pixel2","squaredDist1","squaredDist2","dist","createOrUpdatePointerFeature_","createOrUpdateExtentFeature_","extentFeature","vertexFeature","getOpposingPoint","x_","y_","CIRCLE_CIRCUMFERENCE_INDEX","ModifyEventType","ModifyEvent","mapBrowserPointerEvent","compareIndexes","pointDistanceToSegmentDataSquared","pointCoordinates","segmentData","distanceToCenterSquared","distanceToCircumference","closestOnSegmentData","interaction_Modify","Modify","defaultDeleteCondition_","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexSegments_","lastPixel_","ignoreNextSingleClick_","modified_","rBush_","changingFeature_","dragSegments_","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeCircleGeometry_","writeGeometryCollectionGeometry_","handleSourceAdd_","handleSourceRemove_","addFeature_","handleFeatureAdd_","handleFeatureRemove_","lastPointerEvent_","handlePointerAtPixel_","willModifyFeatures_","removeFeature_","removeFeatureSegmentData_","rBush","nodesToRemove","nodeToRemove","depth","rings","kk","centerSegmentData","circumferenceSegmentData","featureSegments","createOrUpdateVertexFeature_","removePoint","dragSegment","setGeometryCoordinates_","insertVertices","vertexExtent","segmentDataMatches","componentSegments","segmentDataMatch","insertVertex_","nodes","vertexSegments","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removeVertex_","newIndex","dragSegments","segmentsByFeature","deleted","SelectEventType","SELECT","SelectEvent","selected","deselected","Select_handleEvent","addCondition_","removeCondition_","toggleCondition_","featureLayerAssociation_","filter_","addFeatureLayerAssociation_","multi_","layerFilter_","hitTolerance_","removeFeatureLayerAssociation_","Select_getDefaultStyleFunction","interaction_Select","Select","addCondition","removeCondition","toggleCondition","multi","featureOverlay","featureOverlay_","getHitTolerance","setHitTolerance","currentMap","selectedFeatures","getFeatureFromEvent","interaction_Snap","Snap","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","sortByDistance_","deltaA","deltaB","opt_listen","register","feature_uid","segmentWriter","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","snapTo","snapped","updateFeature_","featuresToUpdate","opt_unlisten","unregister","isCircle","closestOnCircle","TranslateEventType","TranslateEvent","interaction_Translate","Translate","lastCoordinate_","lastFeature_","handleActiveChanged_","featuresAtPixel_","newCoordinate","oldMap","cloneGeometries","clonedGeometries","geom_GeometryCollection","opt_geometries","geometries_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","Feature_FeatureFormat","defaultFeatureProjection","getReadOptions","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","format_Feature","transformGeometryWithOptions","transformed","decimals","transformExtentWithOptions","getObject","format_JSONFeature","FeatureFormat","JSONFeature","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","writeFeatureObject","writeFeaturesObject","writeGeometryObject","GEOMETRY_READERS","getGeometryLayout","paths","GEOMETRY_WRITERS","EsriJSON_readGeometry","esriJSONPolygon","flatRing","outerRings","holes","clockwise","hole","matched","outerRing","containsHole","convertRings","geometryReader","hasZ","hasM","getHasZM","EsriJSON_writeGeometry","geometryWriter","esriJSON","hasZM","multiPoint","multiLineString","format_EsriJSON","EsriJSON","esriJSONFeature","idField","attributes","esriJSONFeatures","objectIdFieldName","wkid","objects","format_XMLFeature","XMLFeature","xmlSerializer_","XMLSerializer","doc","readFeatureFromDocument","readFeatureFromNode","readFeaturesFromDocument","readFeaturesFromNode","ELEMENT_NODE","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","writeFeatureNode","serializeToString","writeFeaturesNode","writeGeometryNode","GMLNS","ONLY_WHITESPACE_RE","GMLBase_GMLBase","GMLBase","featureType","featureNS","srsName","schemaLocation","FEATURE_COLLECTION_PARSERS","namespace","featureMember","readFeaturesInternal","featureMembers","ft","candidate","featureTypes","readFeatureElement","readGeometryElement","getAttribute","GEOMETRY_PARSERS","readFeatureElementInternal","asFeature","test","_content_","attName","fid","getAttributeNS","readPoint","readFlatCoordinatesFromNode_","readMultiPoint","MULTIPOINT_PARSERS_","readMultiLineString","MULTILINESTRING_PARSERS_","readMultiPolygon","MULTIPOLYGON_PARSERS_","pointMemberParser_","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","readLineString","readFlatLinearRing_","GEOMETRY_FLAT_COORDINATES_PARSERS","readLinearRing","readPolygon","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS","http://www.opengis.net/gml","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","format_GMLBase","readBooleanString","string","readDateTime","dateTime","readDecimal","readDecimalString","readNonNegativeInteger","readNonNegativeIntegerString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeDecimalTextNode","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","GML3_schemaLocation","MULTIGEOMETRY_TO_MEMBER_NODENAME","MultiCurve","MultiSurface","GML3_GML3","GML3","surface_","surface","curve_","curve","multiCurve_","multiCurve","multiSurface_","multiSurface","readMultiCurve_","MULTICURVE_PARSERS_","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","flatLinearRing","exteriorParser_","readSurface_","SURFACE_PARSERS_","readCurve_","CURVE_PARSERS_","readEnvelope_","ENVELOPE_PARSERS_","readFlatPos_","re","containerSrs","readFlatPosList_","contextDimension","dim","writePos_","srsDimension","getCoords_","opt_srsName","opt_hasZ","writePosList_","writePoint_","writeEnvelope","ENVELOPE_SERIALIZERS_","writeLinearRing_","posList","RING_NODE_FACTORY_","exteriorWritten","writeSurfaceOrPolygon_","RING_SERIALIZERS_","patches","writeSurfacePatches_","writeCurveOrLineString_","writeCurveSegments_","writeMultiSurfaceOrPolygon_","SURFACEORPOLYGONMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writeMultiPoint_","POINTMEMBER_SERIALIZERS_","writeMultiCurveOrLineString_","LINESTRINGORCURVEMEMBER_SERIALIZERS_","writeRing_","writeSurfaceOrPolygonMember_","GEOMETRY_NODE_FACTORY_","writePointMember_","writeLineStringOrCurveMember_","line","writeGeometryElement","GEOMETRY_SERIALIZERS_","writeFeatureElement","writeFeatureMembers_","setAttributeNS","interior","exterior","Surface","Curve","Envelope","curveMember","curveMembers","surfaceMember","surfaceMembers","lowerCorner","upperCorner","PolygonPatch","LineStringSegment","format_GML3","GML","format_GML","GML2_schemaLocation","GML2_MULTIGEOMETRY_TO_MEMBER_NODENAME","GML2_GML2","GML2","readFlatCoordinates_","coordsGroups","readBox_","BOX_PARSERS_","innerBoundaryIsParser_","outerBoundaryIsParser_","createCoordinatesNode_","writeCoordinates_","innerBoundaryIs","outerBoundaryIs","format_GML2","GML32","http://www.opengis.net/gml/3.2","format_GML32","NAMESPACE_URIS","FEATURE_READER","rte","readRte","trk","readTrk","wpt","readWpt","GPX_PARSERS","LINK_PARSERS","GPX_SERIALIZERS","RTE_SEQUENCE","RTE_SERIALIZERS","TRK_SEQUENCE","TRK_SERIALIZERS","writeWptType","GPX_GPX","GPX","readExtensions_","readExtensions","handleReadExtensions_","extensionsNode","featureReader","gpx","GPX_NODE_FACTORY","RTE_PARSERS","cmt","desc","link","parseLink","extensions","parseExtensions","rtept","RTEPT_PARSERS","rteValues","layoutOptions","GPX_appendCoordinate","ele","TRK_PARSERS","trkseg","TRKSEG_PARSERS","trkpt","TRKPT_PARSERS","trkValues","WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","LINK_SEQUENCE","LINK_SERIALIZERS","writeLink","RTEPT_TYPE_SEQUENCE","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","GEOMETRY_TYPE_TO_NODENAME","applyLayoutOptions","href","format_GPX","GeoJSON_readGeometry","GeoJSON_readPointGeometry","GeoJSON_readLineStringGeometry","GeoJSON_readPolygonGeometry","GeoJSON_readMultiPointGeometry","GeoJSON_readMultiLineStringGeometry","GeoJSON_readMultiPolygonGeometry","readGeometryCollectionGeometry","GeoJSON_writeGeometry","geoJSON","GeoJSON_writePointGeometry","GeoJSON_writeLineStringGeometry","rightHanded","GeoJSON_writePolygonGeometry","GeoJSON_writeMultiPointGeometry","GeoJSON_writeMultiLineStringGeometry","GeoJSON_writeMultiPolygonGeometry","writeGeometryCollectionGeometry","format_GeoJSON","GeoJSON","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONFeatures","crs","DEFAULT_COLOR","DEFAULT_IMAGE_STYLE_ANCHOR","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS","DEFAULT_IMAGE_STYLE_SIZE","DEFAULT_IMAGE_STYLE_SRC","DEFAULT_IMAGE_SCALE_MULTIPLIER","format_TextFeature","TextFeature","readFeatureFromText","readFeaturesFromText","readGeometryFromText","readProjectionFromText","writeFeatureText","writeFeaturesText","writeGeometryText","IGCZ","BAROMETRIC","GPS","NONE","B_RECORD_RE","H_RECORD_RE","HFDTE_RECORD_RE","NEWLINE_RE","format_IGC","IGC","altitudeMode_","altitudeMode","year","month","day","lastDateTime","hour","minute","second","UTC","GX_NAMESPACE_URIS","KML_NAMESPACE_URIS","ICON_ANCHOR_UNITS_MAP","insetPixels","PLACEMARK_PARSERS","ExtendedData","extendedDataParser","Region","regionParser","MultiGeometry","readMultiGeometry","KML_readLineString","KML_readLinearRing","KML_readPoint","KML_readPolygon","readStyle","StyleMap","styleMapValue","readStyleMapValue","placemarkObject","address","description","phoneNumber","styleUrl","readURI","visibility","MultiTrack","GX_MULTITRACK_GEOMETRY_PARSERS","Track","readGxTrack","NETWORK_LINK_PARSERS","Link","KML_LINK_PARSERS","REGION_PARSERS","LatLonAltBox","LAT_LON_ALT_BOX_PARSERS","regionObject","Lod","LOD_PARSERS","lodObject","KML_SEQUENCE","KML_SERIALIZERS","Document","DOCUMENT_SERIALIZERS","DOCUMENT_NODE_FACTORY","Placemark","writePlacemark","DEFAULT_FILL_STYLE","DEFAULT_NO_IMAGE_STYLE","DEFAULT_IMAGE_STYLE","DEFAULT_TEXT_STROKE_STYLE","KML_DEFAULT_STROKE_STYLE","DEFAULT_TEXT_STYLE","DEFAULT_STYLE","DEFAULT_STYLE_ARRAY","KML_KML","KML","defaultStyle_","defaultStyle","extractStyles_","extractStyles","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","readDocumentOrFolder_","Folder","readPlacemark_","readSharedStyle_","readSharedStyleMap_","sharedStyles","nameStyle","drawName","createNameStyleFunction","foundStyle","findStyle","styleValue","createFeatureStyleFunction","styleUri","baseURI","fs","readName","readNameFromDocument","readNameFromNode","n$1","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","readRegion","regions","readRegionFromDocument","readRegionFromNode","kml","xmlnsUri","textOffset","imageScale","foundText","readColor","hexColor","readFlatCoordinates","readScale","STYLE_MAP_PARSERS","Pair","pairObject","PAIR_PARSERS","ICON_STYLE_PARSERS","iconObject","ICON_PARSERS","hotSpot","xunits","yunits","LABEL_STYLE_PARSERS","LINE_STYLE_PARSERS","POLY_STYLE_PARSERS","outline","FLAT_LINEAR_RING_PARSERS","readFlatLinearRing","GX_TRACK_PARSERS","when","whens","gxTrackObject","readFlatCoordinatesFromNode","EXTRUDE_AND_ALTITUDE_MODE_PARSERS","extrude","tessellate","MULTI_GEOMETRY_PARSERS","multiGeometry","homogeneous","setCommonGeometryProperties","INNER_BOUNDARY_IS_PARSERS","OUTER_BOUNDARY_IS_PARSERS","STYLE_PARSERS","IconStyle","styleObject","IconObject","drawIcon","LabelStyle","LineStyle","PolyStyle","hasExtrude","hasTessellate","hasAltitudeMode","extrudes","tessellates","altitudeModes","DATA_PARSERS","displayName","EXTENDED_DATA_PARSERS","Data","featureObject","SchemaData","SCHEMA_DATA_PARSERS","SimpleData","minAltitude","maxAltitude","north","south","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","writeColorTextNode","rgba","abgr","hex","EXTENDEDDATA_NODE_SERIALIZERS","pair","createCDATASection","writeCDATASection","DATA_NODE_FACTORY","ICON_SEQUENCE","ICON_SERIALIZERS","GX_NODE_FACTORY","ICON_STYLE_SEQUENCE","ICON_STYLE_SERIALIZERS","icon","vec2","writeScaleTextNode","LABEL_STYLE_SEQUENCE","LABEL_STYLE_SERIALIZERS","LINE_STYLE_SEQUENCE","LINE_STYLE_SERIALIZERS","KML_GEOMETRY_TYPE_TO_NODENAME","GEOMETRY_NODE_FACTORY","POINT_NODE_FACTORY","LINE_STRING_NODE_FACTORY","LINEAR_RING_NODE_FACTORY","POLYGON_NODE_FACTORY","MULTI_GEOMETRY_SERIALIZERS","writePrimitiveGeometry","writePolygon","writeMultiGeometry","BOUNDARY_IS_SERIALIZERS","writeBoundaryIs","PLACEMARK_SERIALIZERS","namesAndValues","names","STYLE_SEQUENCE","STYLE_SERIALIZERS","PLACEMARK_SEQUENCE","EXTENDEDDATA_NODE_FACTORY","v","PRIMITIVE_GEOMETRY_SEQUENCE","PRIMITIVE_GEOMETRY_SERIALIZERS","d$1","POLYGON_SERIALIZERS","INNER_BOUNDARY_NODE_FACTORY","OUTER_BOUNDARY_NODE_FACTORY","POLY_STYLE_SERIALIZERS","COLOR_NODE_FACTORY","iconProperties","format_KML","Feature_tmpTransform","RenderFeature","flatCoordinates_","flatMidpoints_","properties_","midpoint","render_Feature","layersPBFReader","layerPBFReader","featurePBFReader","readRawFeature","format_MVT","MVT","featureClass_","featureClass","layerName_","layerName","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","getGeometryType","prevEndIndex","ctor","pbf_default","pbfLayers","pbfLayer","OSMXML_NAMESPACE_URIS","WAY_PARSERS","nd","ndrefs","readTag","PARSERS","tags","NODE_PARSERS","way","ways","OSMXML_OSMXML","OSMXML","format_OSMXML","flipXY","opt_destOffset","destOffset","encodeDeltas","numbers","opt_factor","factor","lastNumbers","encodeFloats","decodeDeltas","encoded","decodeFloats","encodeUnsignedInteger","encodeUnsignedIntegers","encodeSignedIntegers","current","decodeUnsignedIntegers","decodeSignedIntegers","format_Polyline","Polyline","factor_","geometryLayout_","geometryLayout","TopoJSON_GEOMETRY_READERS","transformVertex","arcs","concatenateArcs","polyArray","ringCoords","indices","readFeaturesFromGeometryCollection","readFeatureFromGeometry","transformArc","format_TopoJSON","TopoJSON","topoJSONTopology","transformArcs","topoJSONFeatures","objectName","Filter_Filter","tagName_","getTagName","filter_Filter","filter_LogicalNary","Filter","LogicalNary","conditions","filter_And","And","filter_Bbox","Bbox","filter_Spatial","Spatial","filter_Contains","Contains","filter_Comparison","Comparison","propertyName","filter_During","During","filter_ComparisonBinary","ComparisonBinary","expression","opt_matchCase","matchCase","filter_EqualTo","EqualTo","filter_GreaterThan","GreaterThan","filter_GreaterThanOrEqualTo","GreaterThanOrEqualTo","filter_Intersects","Intersects","filter_IsBetween","IsBetween","lowerBoundary","upperBoundary","filter_IsLike","IsLike","pattern","opt_wildCard","opt_singleChar","opt_escapeChar","wildCard","singleChar","escapeChar","filter_IsNull","IsNull","filter_LessThan","LessThan","filter_LessThanOrEqualTo","LessThanOrEqualTo","filter_Not","Not","filter_NotEqualTo","NotEqualTo","filter_Or","Or","filter_Within","Within","and","filter_bbox","boundedBy","TRANSACTION_SUMMARY_PARSERS","http://www.opengis.net/wfs","totalInserted","totalUpdated","totalDeleted","TRANSACTION_RESPONSE_PARSERS","TransactionSummary","InsertResults","INSERT_RESULTS_PARSERS","QUERY_SERIALIZERS","PropertyName","TRANSACTION_SERIALIZERS","Insert","gmlVersion","Update","featurePrefix","typeName","getTypeName","XMLNS","writeOgcFidFilter","Delete","WFSNS","Native","nativeElement","vendorId","safeToIgnore","FEATURE_PREFIX","OGCNS","FESNS","SCHEMA_LOCATIONS","1.1.0","1.0.0","DEFAULT_VERSION","WFS_WFS","WFS","featureType_","featureNS_","gmlFormat_","gmlFormat","schemaLocation_","getFeatureType","setFeatureType","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","writeGetFeature","handle","outputFormat","maxFeatures","resultType","viewParams","propertyNames","GETFEATURE_SERIALIZERS","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","nativeElements","OGC_FID_PARSERS","http://www.opengis.net/ogc","FeatureId","prefix","Query","writeFilterCondition","valueReference","timePeriod","writeTimeInstant","writeLogicalFilter","BBOX","writeOgcPropertyName","PropertyIsEqualTo","writeComparisonFilter","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","PropertyIsBetween","writeOgcLiteral","PropertyIsLike","writeOgcExpression","timeInstant","timePosition","format_WFS","GeometryConstructor","LINESTRING","MULTIPOINT","MULTILINESTRING","MULTIPOLYGON","Z","TokenType","WKTGeometryType","WKT_type","toUpperCase","Lexer","wkt","index_","isAlpha_","isNumeric_","opt_decimal","isWhiteSpace_","nextChar_","nextToken","readNumber_","readText_","scientificNotation","substring","WKT_Parser","lexer","lexer_","token_","layout_","encodePointGeometry","encodeLineStringGeometry","encodePolygonGeometry","consume_","isTokenType","isMatch","parseGeometry_","parseGeometryLayout_","dimToken","dimInfo","parseGeometryCollectionText_","isEmptyGeometry_","formatErrorMessage_","parsePointText_","parsePoint_","parseLineStringText_","parsePointList_","parsePolygonText_","parseLineStringTextList_","parseMultiPointText_","parsePointTextList_","parseMultiLineStringText_","parseMultiPolygonText_","parsePolygonTextList_","token","geomType","GeometryEncoder","components","geoms","encode","enc","geometryEncoder","encodeGeometryLayout","format_WKT","WKT","splitCollection_","splitCollection","parse_","NAMESPACE_URI","readHref","XML_XML","readFromDocument","readFromNode","format_XML","WMSCapabilities_NAMESPACE_URIS","WMSCapabilities_PARSERS","SERVICE_PARSERS","Capability","CAPABILITY_PARSERS","REQUEST_PARSERS","Exception","EXCEPTION_PARSERS","LAYER_PARSERS","WMSCapabilities_WMSCapabilities","WMSCapabilities","wmsCapabilityObject","Name","Title","Abstract","KeywordList","readKeywordList","OnlineResource","ContactInformation","CONTACT_INFORMATION_PARSERS","Fees","AccessConstraints","LayerLimit","MaxWidth","MaxHeight","ContactPersonPrimary","CONTACT_PERSON_PARSERS","ContactPosition","ContactAddress","CONTACT_ADDRESS_PARSERS","ContactVoiceTelephone","ContactFacsimileTelephone","ContactElectronicMailAddress","ContactPerson","ContactOrganization","AddressType","Address","City","StateOrProvince","PostCode","Country","CRS","EX_GeographicBoundingBox","geographicBoundingBox","EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS","westBoundLongitude","southBoundLatitude","eastBoundLongitude","northBoundLatitude","BoundingBox","Dimension","unitSymbol","multipleValues","nearestValue","ATTRIBUTION_PARSERS","AuthorityURL","authorityObject","readFormatOnlineresource","Identifier","MetadataURL","metadataObject","DataURL","FeatureListURL","WMSCapabilities_STYLE_PARSERS","MinScaleDenominator","MaxScaleDenominator","parentLayerObject","layerObject","queryable","cascaded","noSubsets","fixedWidth","fixedHeight","childValue","parentValue","LogoURL","readSizedFormatOnlineresource","GetCapabilities","readOperationType","GetMap","GetFeatureInfo","OPERATIONTYPE_PARSERS","DCPType","DCPTYPE_PARSERS","HTTP","HTTP_PARSERS","Get","Post","LegendURL","StyleSheetURL","StyleURL","FORMAT_ONLINERESOURCE_PARSERS","KEYWORDLIST_PARSERS","Keyword","formatOnlineresource","format_WMSCapabilities","format_WMSGetFeatureInfo","WMSGetFeatureInfo","readFeatures_","layerElement","layerFeatures","gmlFeatures","OWS_NAMESPACE_URIS","OWS_PARSERS","ServiceIdentification","SERVICE_IDENTIFICATION_PARSERS","ServiceProvider","SERVICE_PROVIDER_PARSERS","OperationsMetadata","OPERATIONS_METADATA_PARSERS","OWS_OWS","OWS","owsObject","ADDRESS_PARSERS","DeliveryPoint","AdministrativeArea","PostalCode","ElectronicMailAddress","ALLOWED_VALUES_PARSERS","Value","CONSTRAINT_PARSERS","AllowedValues","CONTACT_INFO_PARSERS","Phone","PHONE_PARSERS","DCP_PARSERS","OWS_HTTP_PARSERS","REQUEST_METHOD_PARSERS","OPERATION_PARSERS","DCP","Operation","Voice","Facsimile","Constraint","SERVICE_CONTACT_PARSERS","IndividualName","PositionName","ContactInfo","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","WMTSCapabilities_NAMESPACE_URIS","WMTSCapabilities_OWS_NAMESPACE_URIS","WMTSCapabilities_PARSERS","Contents","CONTENTS_PARSERS","WMTSCapabilities_WMTSCapabilities","WMTSCapabilities","owsParser_","WMTSCapabilityObject","WMTSCapabilities_LAYER_PARSERS","TileMatrixSet","TMS_PARSERS","WMTSCapabilities_STYLE_PARSERS","isDefault","TileMatrixSetLink","TMS_LINKS_PARSERS","DIMENSION_PARSERS","ResourceURL","resourceType","WGS84BoundingBox","WGS84_BBOX_READERS","legend","TileMatrixSetLimits","TMS_LIMITS_LIST_PARSERS","TileMatrixLimits","TMS_LIMITS_PARSERS","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","LowerCorner","readCoordinates","UpperCorner","WellKnownScaleSet","TM_PARSERS","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","format_WMTSCapabilities","FullScreen_events","isFullScreenSupported","webkitRequestFullscreen","mozRequestFullScreen","mozFullScreenEnabled","msRequestFullscreen","msFullscreenEnabled","requestFullscreen","fullscreenEnabled","isFullScreen","webkitIsFullScreen","mozFullScreen","msFullscreenElement","fullscreenElement","requestFullScreen","control_FullScreen","FullScreen","cssClassName_","labelNode_","labelActive","labelActiveNode_","button_","setClassName_","handleFullScreen_","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","mozRequestFullScreenWithKeys","requestFullScreenWithKeys","handleFullScreenChange_","fullscreen","activeClassName","inactiveClassName","nextClassName","MousePosition_render","mapProjection_","control_MousePosition","MousePosition","coordinateFormat","setCoordinateFormat","undefinedHTML_","undefinedHTML","renderOnMouseOut_","renderedHTML_","lastMouseMovePixel_","getCoordinateFormat","handleMouseMove","updateHTML_","handleMouseOut","html","OverviewMap_render","validateExtent_","updateBox_","control_OverviewMap","OverviewMap","ovmapDiv_","ovmap_","ovmap","boxSizing","boxOverlay_","scope","overlayBox","mousePosition","endMoving","oldView","unbindView_","handleMapPropertyChange_","bindView_","resetExtent_","newView","handleRotationChanged_","ovmapSize","ovextent","topLeftPixel","bottomRightPixel","boxWidth","boxHeight","ovmapWidth","ovmapHeight","recenter_","ovview","steps","MAX_RATIO","ovresolution","rotateBottomLeft","calculateCoordinateRotate_","coordinateRotate","getOverviewMap","UNITS_PROP","ScaleLine_Units","IMPERIAL","NAUTICAL","METRIC","US","LEADING_DIGITS","ScaleLine_render","viewState_","control_ScaleLine","ScaleLine","bar","innerElement_","minWidth_","minWidth","renderedWidth_","handleUnitsChanged_","setUnits","scaleBar_","scaleBarSteps_","scaleBarText_","pointResolutionUnits","nominalCount","suffix","metersPerDegree","createScaleBar","mapScale","getScaleForResolution","toLocaleString","scaleSteps","stepWidth","backgroundColor","createMarker","createStepText","isLast","lengthString","mpu","Direction","VERTICAL","HORIZONTAL","ZoomSlider_render","sliderInitialized_","initSlider_","currentResolution_","setThumbPosition_","control_ZoomSlider","ZoomSlider","direction_","heightLimit_","widthLimit_","previousX_","previousY_","thumbSize_","thumbElement","containerElement","dragger_","handleDraggerStart_","handleDraggerDrag_","handleDraggerEnd_","handleContainerClick_","containerSize","thumb","thumbWidth","thumbHeight","relativePosition","getRelativePosition_","getResolutionForPosition_","drag","getPositionForResolution_","control_ZoomToExtent","ZoomToExtent","handleZoomToExtent","ol","colorlike","featureloader","has","loadingstrategy","proj4","webgl","sphere","unByKey","stableSort","compareFnc","createStringXY","toStringHDMS","upAndDown","click","doubleClick","platformModifierKeyOnly","writeFilter","between","during","equalTo","greaterThan","greaterThanOrEqualTo","isNull","lessThan","lessThanOrEqualTo","like","not","notEqualTo","or","within","createBox","boxCoordinates","createRegularPolygon","fromLonLat","projCodes","defs","def","axis","to_meter","code1","proj1","code2","proj2","toLonLat","lonLat","getRenderPixel","getVectorContext","toContext","optionsFromCapabilities","wmtsCap","tileMatrixSets","supportedCRS","matrixSetObj","projConfig","wgs84BoundingBox","wgs84ProjectionExtent","gets","encodings","sphere_getArea","sphere_getLength","__webpack_exports__"],"mappings":"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","file":"ol.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ol\"] = factory();\n\telse\n\t\troot[\"ol\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos,\n            str = readUtf8(this.buf, this.pos, end);\n        this.pos = end;\n        return str;\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.ceil(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","var Processor = require('./processor');\n\nexports.Processor = Processor;\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n","var newImageData = require('./util').newImageData;\n\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(Object):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  var workerHasImageData = true;\n  try {\n    new ImageData(10, 10);\n  } catch (_) {\n    workerHasImageData = false;\n  }\n\n  function newWorkerImageData(data, width, height) {\n    if (workerHasImageData) {\n      return new ImageData(data, width, height);\n    } else {\n      return {data: data, width: width, height: height};\n    }\n  }\n\n  return function(data) {\n    // bracket notation for minification support\n    var buffers = data['buffers'];\n    var meta = data['meta'];\n    var imageOps = data['imageOps'];\n    var width = data['width'];\n    var height = data['height'];\n\n    var numBuffers = buffers.length;\n    var numBytes = buffers[0].byteLength;\n    var output, b;\n\n    if (imageOps) {\n      var images = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        images[b] = newWorkerImageData(\n            new Uint8ClampedArray(buffers[b]), width, height);\n      }\n      output = operation(images, meta).data;\n    } else {\n      output = new Uint8ClampedArray(numBytes);\n      var arrays = new Array(numBuffers);\n      var pixels = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        arrays[b] = new Uint8ClampedArray(buffers[b]);\n        pixels[b] = [0, 0, 0, 0];\n      }\n      for (var i = 0; i < numBytes; i += 4) {\n        for (var j = 0; j < numBuffers; ++j) {\n          var array = arrays[j];\n          pixels[j][0] = array[i];\n          pixels[j][1] = array[i + 1];\n          pixels[j][2] = array[i + 2];\n          pixels[j][3] = array[i + 3];\n        }\n        var pixel = operation(pixels, meta);\n        output[i] = pixel[0];\n        output[i + 1] = pixel[1];\n        output[i + 2] = pixel[2];\n        output[i + 3] = pixel[3];\n      }\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  var lib = Object.keys(config.lib || {}).map(function(name) {\n    return 'var ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  var lines = lib.concat([\n    'var __minion__ = (' + createMinion.toString() + ')(', config.operation.toString(), ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  var buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});'\n  ]);\n\n  var blob = new Blob(lines, {type: 'text/javascript'});\n  var source = URL.createObjectURL(blob);\n  var worker = new Worker(source);\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * Create a faux worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  var minion = createMinion(config.operation);\n  return {\n    postMessage: function(data) {\n      setTimeout(function() {\n        onMessage({'data': {'buffer': minion(data), 'meta': data['meta']}});\n      }, 0);\n    }\n  };\n}\n\n/**\n * A processor runs pixel or image operations in workers.\n * @param {Object} config Configuration.\n */\nfunction Processor(config) {\n  this._imageOps = !!config.imageOps;\n  var threads;\n  if (config.threads === 0) {\n    threads = 0;\n  } else if (this._imageOps) {\n    threads = 1;\n  } else {\n    threads = config.threads || 1;\n  }\n  var workers = [];\n  if (threads) {\n    for (var i = 0; i < threads; ++i) {\n      workers[i] = createWorker(config, this._onWorkerMessage.bind(this, i));\n    }\n  } else {\n    workers[0] = createFauxWorker(config, this._onWorkerMessage.bind(this, 0));\n  }\n  this._workers = workers;\n  this._queue = [];\n  this._maxQueueLength = config.queue || Infinity;\n  this._running = 0;\n  this._dataLookup = {};\n  this._job = null;\n}\n\n/**\n * Run operation on input data.\n * @param {Array.<Array|ImageData>} inputs Array of pixels or image data\n *     (depending on the operation type).\n * @param {Object} meta A user data object.  This is passed to all operations\n *     and must be serializable.\n * @param {function(Error, ImageData, Object)} callback Called when work\n *     completes.  The first argument is any error.  The second is the ImageData\n *     generated by operations.  The third is the user data object.\n */\nProcessor.prototype.process = function(inputs, meta, callback) {\n  this._enqueue({\n    inputs: inputs,\n    meta: meta,\n    callback: callback\n  });\n  this._dispatch();\n};\n\n/**\n * Stop responding to any completed work and destroy the processor.\n */\nProcessor.prototype.destroy = function() {\n  for (var key in this) {\n    this[key] = null;\n  }\n  this._destroyed = true;\n};\n\n/**\n * Add a job to the queue.\n * @param {Object} job The job.\n */\nProcessor.prototype._enqueue = function(job) {\n  this._queue.push(job);\n  while (this._queue.length > this._maxQueueLength) {\n    this._queue.shift().callback(null, null);\n  }\n};\n\n/**\n * Dispatch a job.\n */\nProcessor.prototype._dispatch = function() {\n  if (this._running === 0 && this._queue.length > 0) {\n    var job = this._job = this._queue.shift();\n    var width = job.inputs[0].width;\n    var height = job.inputs[0].height;\n    var buffers = job.inputs.map(function(input) {\n      return input.data.buffer;\n    });\n    var threads = this._workers.length;\n    this._running = threads;\n    if (threads === 1) {\n      this._workers[0].postMessage({\n        'buffers': buffers,\n        'meta': job.meta,\n        'imageOps': this._imageOps,\n        'width': width,\n        'height': height\n      }, buffers);\n    } else {\n      var length = job.inputs[0].data.length;\n      var segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (var i = 0; i < threads; ++i) {\n        var offset = i * segmentLength;\n        var slices = [];\n        for (var j = 0, jj = buffers.length; j < jj; ++j) {\n          slices.push(buffers[i].slice(offset, offset + segmentLength));\n        }\n        this._workers[i].postMessage({\n          'buffers': slices,\n          'meta': job.meta,\n          'imageOps': this._imageOps,\n          'width': width,\n          'height': height\n        }, slices);\n      }\n    }\n  }\n};\n\n/**\n * Handle messages from the worker.\n * @param {number} index The worker index.\n * @param {MessageEvent} event The message event.\n */\nProcessor.prototype._onWorkerMessage = function(index, event) {\n  if (this._destroyed) {\n    return;\n  }\n  this._dataLookup[index] = event.data;\n  --this._running;\n  if (this._running === 0) {\n    this._resolveJob();\n  }\n};\n\n/**\n * Resolve a job.  If there are no more worker threads, the processor callback\n * will be called.\n */\nProcessor.prototype._resolveJob = function() {\n  var job = this._job;\n  var threads = this._workers.length;\n  var data, meta;\n  if (threads === 1) {\n    data = new Uint8ClampedArray(this._dataLookup[0]['buffer']);\n    meta = this._dataLookup[0]['meta'];\n  } else {\n    var length = job.inputs[0].data.length;\n    data = new Uint8ClampedArray(length);\n    meta = new Array(length);\n    var segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (var i = 0; i < threads; ++i) {\n      var buffer = this._dataLookup[i]['buffer'];\n      var offset = i * segmentLength;\n      data.set(new Uint8ClampedArray(buffer), offset);\n      meta[i] = this._dataLookup[i]['meta'];\n    }\n  }\n  this._job = null;\n  this._dataLookup = {};\n  job.callback(null,\n      newImageData(data, job.inputs[0].width, job.inputs[0].height), meta);\n  this._dispatch();\n};\n\nmodule.exports = Processor;\n","var hasImageData = true;\ntry {\n  new ImageData(10, 10);\n} catch (_) {\n  hasImageData = false;\n}\n\nvar context = document.createElement('canvas').getContext('2d');\n\nfunction newImageData(data, width, height) {\n  if (hasImageData) {\n    return new ImageData(data, width, height);\n  } else {\n    var imageData = context.createImageData(width, height);\n    imageData.data.set(data);\n    return imageData;\n  }\n}\n\nexports.newImageData = newImageData;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ ((function() {\n    throw new Error('Unimplemented abstract method.');\n  })());\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @function module:ol.getUid\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '5.3.0';\n\n//# sourceMappingURL=util.js.map","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = /*@__PURE__*/(function (Error) {\n  function AssertionError(code) {\n    var path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    var message = 'Assertion failed. See https://openlayers.org/en/' + path +\n    '/doc/errors/#' + code + ' for details.';\n\n    Error.call(this, message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n\n  if ( Error ) AssertionError.__proto__ = Error;\n  AssertionError.prototype = Object.create( Error && Error.prototype );\n  AssertionError.prototype.constructor = AssertionError;\n\n  return AssertionError;\n}(Error));\n\nexport default AssertionError;\n\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove'\n};\n\n//# sourceMappingURL=CollectionEventType.js.map","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange'\n};\n\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/obj\n */\n\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = (typeof Object.assign === 'function') ? Object.assign : function(target, var_sources) {\n  var arguments$1 = arguments;\n\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  for (var i = 1, ii = arguments.length; i < ii; ++i) {\n    var source = arguments$1[i];\n    if (source !== undefined && source !== null) {\n      for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n  return output;\n};\n\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (var property in object) {\n    delete object[property];\n  }\n}\n\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport var getValues = (typeof Object.values === 'function') ? Object.values : function(object) {\n  var values = [];\n  for (var property in object) {\n    values.push(object[property]);\n  }\n  return values;\n};\n\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  var property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n\n//# sourceMappingURL=obj.js.map","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {Object} [bindTo]\n * @property {ListenerFunction} [boundListener]\n * @property {boolean} callOnce\n * @property {number} [deleteIndex]\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n\n/**\n * @param {EventsKey} listenerObj Listener object.\n * @return {ListenerFunction} Bound listener.\n */\nexport function bindListener(listenerObj) {\n  var boundListener = function(evt) {\n    var listener = listenerObj.listener;\n    var bindTo = listenerObj.bindTo || listenerObj.target;\n    if (listenerObj.callOnce) {\n      unlistenByKey(listenerObj);\n    }\n    return listener.call(bindTo, evt);\n  };\n  listenerObj.boundListener = boundListener;\n  return boundListener;\n}\n\n\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {EventsKey|undefined} The matching listener object.\n */\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n  var listenerObj;\n  for (var i = 0, ii = listeners.length; i < ii; ++i) {\n    listenerObj = listeners[i];\n    if (listenerObj.listener === listener &&\n        listenerObj.bindTo === opt_this) {\n      if (opt_setDeleteIndex) {\n        listenerObj.deleteIndex = i;\n      }\n      return listenerObj;\n    }\n  }\n  return undefined;\n}\n\n\n/**\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array<EventsKey>|undefined} Listeners.\n */\nexport function getListeners(target, type) {\n  var listenerMap = getListenerMap(target);\n  return listenerMap ? listenerMap[type] : undefined;\n}\n\n\n/**\n * Get the lookup of listeners.\n * @param {Object} target Target.\n * @param {boolean=} opt_create If a map should be created if it doesn't exist.\n * @return {!Object<string, Array<EventsKey>>} Map of\n *     listeners by event type.\n */\nfunction getListenerMap(target, opt_create) {\n  var listenerMap = target.ol_lm;\n  if (!listenerMap && opt_create) {\n    listenerMap = target.ol_lm = {};\n  }\n  return listenerMap;\n}\n\n\n/**\n * Remove the listener map from a target.\n * @param {Object} target Target.\n */\nfunction removeListenerMap(target) {\n  delete target.ol_lm;\n}\n\n\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @param {string} type Type.\n */\nfunction removeListeners(target, type) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\n      /** @type {import(\"./events/Target.js\").default} */ (target).\n        removeEventListener(type, listeners[i].boundListener);\n      clear(listeners[i]);\n    }\n    listeners.length = 0;\n    var listenerMap = getListenerMap(target);\n    if (listenerMap) {\n      delete listenerMap[type];\n      if (Object.keys(listenerMap).length === 0) {\n        removeListenerMap(target);\n      }\n    }\n  }\n}\n\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  var listenerMap = getListenerMap(target, true);\n  var listeners = listenerMap[type];\n  if (!listeners) {\n    listeners = listenerMap[type] = [];\n  }\n  var listenerObj = findListener(listeners, listener, opt_this, false);\n  if (listenerObj) {\n    if (!opt_once) {\n      // Turn one-off listener into a permanent one.\n      listenerObj.callOnce = false;\n    }\n  } else {\n    listenerObj = {\n      bindTo: opt_this,\n      callOnce: !!opt_once,\n      listener: listener,\n      target: target,\n      type: type\n    };\n    /** @type {import(\"./events/Target.js\").default} */ (target).\n      addEventListener(type, bindListener(listenerObj));\n    listeners.push(listenerObj);\n  }\n\n  return listenerObj;\n}\n\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n\n/**\n * Unregisters an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\nexport function unlisten(target, type, listener, opt_this) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    var listenerObj = findListener(listeners, listener, opt_this, true);\n    if (listenerObj) {\n      unlistenByKey(listenerObj);\n    }\n  }\n}\n\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    /** @type {import(\"./events/Target.js\").default} */ (key.target).\n      removeEventListener(key.type, key.boundListener);\n    var listeners = getListeners(key.target, key.type);\n    if (listeners) {\n      var i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n      if (i !== -1) {\n        listeners.splice(i, 1);\n      }\n      if (listeners.length === 0) {\n        removeListeners(key.target, key.type);\n      }\n    }\n    clear(key);\n  }\n}\n\n\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Target.\n */\nexport function unlistenAll(target) {\n  var listenerMap = getListenerMap(target);\n  if (listenerMap) {\n    for (var type in listenerMap) {\n      removeListeners(target, type);\n    }\n  }\n}\n\n//# sourceMappingURL=events.js.map","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = function Disposable() {\n  /**\n   * The object has already been disposed.\n   * @type {boolean}\n   * @private\n   */\n  this.disposed_ = false;\n};\n\n/**\n * Clean up.\n */\nDisposable.prototype.dispose = function dispose () {\n  if (!this.disposed_) {\n    this.disposed_ = true;\n    this.disposeInternal();\n  }\n};\n\n/**\n * Extension point for disposable objects.\n * @protected\n */\nDisposable.prototype.disposeInternal = function disposeInternal () {};\n\nexport default Disposable;\n\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/functions\n */\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar Event = function Event(type) {\n\n  /**\n   * @type {boolean}\n   */\n  this.propagationStopped;\n\n  /**\n   * The event type.\n   * @type {string}\n   * @api\n   */\n  this.type = type;\n\n  /**\n   * The event target.\n   * @type {Object}\n   * @api\n   */\n  this.target = null;\n};\n\n/**\n * Stop event propagation.\n * @api\n */\nEvent.prototype.preventDefault = function preventDefault () {\n  this.propagationStopped = true;\n};\n\n/**\n * Stop event propagation.\n * @api\n */\nEvent.prototype.stopPropagation = function stopPropagation () {\n  this.propagationStopped = true;\n};\n\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default Event;\n\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport {unlistenAll} from '../events.js';\nimport {VOID} from '../functions.js';\nimport Event from './Event.js';\n\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = /*@__PURE__*/(function (Disposable) {\n  function Target() {\n\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.pendingRemovals_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.dispatching_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, Array<import(\"../events.js\").ListenerFunction>>}\n     */\n    this.listeners_ = {};\n\n  }\n\n  if ( Disposable ) Target.__proto__ = Disposable;\n  Target.prototype = Object.create( Disposable && Disposable.prototype );\n  Target.prototype.constructor = Target;\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  Target.prototype.addEventListener = function addEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (!listeners) {\n      listeners = this.listeners_[type] = [];\n    }\n    if (listeners.indexOf(listener) === -1) {\n      listeners.push(listener);\n    }\n  };\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {{type: string,\n   *     target: (EventTargetLike|undefined),\n   *     propagationStopped: (boolean|undefined)}|\n   *     import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  Target.prototype.dispatchEvent = function dispatchEvent (event) {\n    var evt = typeof event === 'string' ? new Event(event) : event;\n    var type = evt.type;\n    evt.target = this;\n    var listeners = this.listeners_[type];\n    var propagate;\n    if (listeners) {\n      if (!(type in this.dispatching_)) {\n        this.dispatching_[type] = 0;\n        this.pendingRemovals_[type] = 0;\n      }\n      ++this.dispatching_[type];\n      for (var i = 0, ii = listeners.length; i < ii; ++i) {\n        if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --this.dispatching_[type];\n      if (this.dispatching_[type] === 0) {\n        var pendingRemovals = this.pendingRemovals_[type];\n        delete this.pendingRemovals_[type];\n        while (pendingRemovals--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete this.dispatching_[type];\n      }\n      return propagate;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Target.prototype.disposeInternal = function disposeInternal () {\n    unlistenAll(this);\n  };\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").ListenerFunction>} Listeners.\n   */\n  Target.prototype.getListeners = function getListeners (type) {\n    return this.listeners_[type];\n  };\n\n  /**\n   * @param {string=} opt_type Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  Target.prototype.hasListener = function hasListener (opt_type) {\n    return opt_type ?\n      opt_type in this.listeners_ :\n      Object.keys(this.listeners_).length > 0;\n  };\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  Target.prototype.removeEventListener = function removeEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (listeners) {\n      var index = listeners.indexOf(listener);\n      if (type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  };\n\n  return Target;\n}(Disposable));\n\n\nexport default Target;\n\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~Event#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  ERROR: 'error',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  MOUSEDOWN: 'mousedown',\n  MOUSEMOVE: 'mousemove',\n  MOUSEOUT: 'mouseout',\n  MOUSEUP: 'mouseup',\n  MOUSEWHEEL: 'mousewheel',\n  MSPOINTERDOWN: 'MSPointerDown',\n  RESIZE: 'resize',\n  TOUCHSTART: 'touchstart',\n  TOUCHMOVE: 'touchmove',\n  TOUCHEND: 'touchend',\n  WHEEL: 'wheel'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/Observable\n */\nimport {listen, unlistenByKey, unlisten, listenOnce} from './events.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").Event\n * @api\n */\nvar Observable = /*@__PURE__*/(function (EventTarget) {\n  function Observable() {\n\n    EventTarget.call(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n\n  }\n\n  if ( EventTarget ) Observable.__proto__ = EventTarget;\n  Observable.prototype = Object.create( EventTarget && EventTarget.prototype );\n  Observable.prototype.constructor = Observable;\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  Observable.prototype.changed = function changed () {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  Observable.prototype.getRevision = function getRevision () {\n    return this.revision_;\n  };\n\n  /**\n   * Listen for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  Observable.prototype.on = function on (type, listener) {\n    if (Array.isArray(type)) {\n      var len = type.length;\n      var keys = new Array(len);\n      for (var i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  /**\n   * Listen once for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  Observable.prototype.once = function once (type, listener) {\n    if (Array.isArray(type)) {\n      var len = type.length;\n      var keys = new Array(len);\n      for (var i = 0; i < len; ++i) {\n        keys[i] = listenOnce(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listenOnce(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @api\n   */\n  Observable.prototype.un = function un (type, listener) {\n    if (Array.isArray(type)) {\n      for (var i = 0, ii = type.length; i < ii; ++i) {\n        unlisten(this, type[i], listener);\n      }\n      return;\n    } else {\n      unlisten(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  return Observable;\n}(EventTarget));\n\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (var i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\n\nexport default Observable;\n\n//# sourceMappingURL=Observable.js.map","/**\n * @module ol/Object\n */\nimport {getUid} from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {assign} from './obj.js';\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport var ObjectEvent = /*@__PURE__*/(function (Event) {\n  function ObjectEvent(type, key, oldValue) {\n    Event.call(this, type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n\n  }\n\n  if ( Event ) ObjectEvent.__proto__ = Event;\n  ObjectEvent.prototype = Object.create( Event && Event.prototype );\n  ObjectEvent.prototype.constructor = ObjectEvent;\n\n  return ObjectEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nvar BaseObject = /*@__PURE__*/(function (Observable) {\n  function BaseObject(opt_values) {\n    Observable.call(this);\n\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {!Object<string, *>}\n     */\n    this.values_ = {};\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  if ( Observable ) BaseObject.__proto__ = Observable;\n  BaseObject.prototype = Object.create( Observable && Observable.prototype );\n  BaseObject.prototype.constructor = BaseObject;\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  BaseObject.prototype.get = function get (key) {\n    var value;\n    if (this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  };\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  BaseObject.prototype.getKeys = function getKeys () {\n    return Object.keys(this.values_);\n  };\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  BaseObject.prototype.getProperties = function getProperties () {\n    return assign({}, this.values_);\n  };\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  BaseObject.prototype.notify = function notify (key, oldValue) {\n    var eventType;\n    eventType = getChangeEventType(key);\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  };\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.set = function set (key, value, opt_silent) {\n    if (opt_silent) {\n      this.values_[key] = value;\n    } else {\n      var oldValue = this.values_[key];\n      this.values_[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  };\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.setProperties = function setProperties (values, opt_silent) {\n    for (var key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  };\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean=} opt_silent Unset without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.unset = function unset (key, opt_silent) {\n    if (key in this.values_) {\n      var oldValue = this.values_[key];\n      delete this.values_[key];\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  };\n\n  return BaseObject;\n}(Observable));\n\n\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key) ?\n    changeEventTypeCache[key] :\n    (changeEventTypeCache[key] = 'change:' + key);\n}\n\n\nexport default BaseObject;\n\n//# sourceMappingURL=Object.js.map","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LENGTH: 'length'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport var CollectionEvent = /*@__PURE__*/(function (Event) {\n  function CollectionEvent(type, opt_element, opt_index) {\n    Event.call(this, type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n\n  if ( Event ) CollectionEvent.__proto__ = Event;\n  CollectionEvent.prototype = Object.create( Event && Event.prototype );\n  CollectionEvent.prototype.constructor = CollectionEvent;\n\n  return CollectionEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nvar Collection = /*@__PURE__*/(function (BaseObject) {\n  function Collection(opt_array, opt_options) {\n\n    BaseObject.call(this);\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n\n  }\n\n  if ( BaseObject ) Collection.__proto__ = BaseObject;\n  Collection.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Collection.prototype.constructor = Collection;\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  Collection.prototype.clear = function clear () {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  };\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  Collection.prototype.extend = function extend (arr) {\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  };\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  Collection.prototype.forEach = function forEach (f) {\n    var array = this.array_;\n    for (var i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  };\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  Collection.prototype.getArray = function getArray () {\n    return this.array_;\n  };\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  Collection.prototype.item = function item (index) {\n    return this.array_[index];\n  };\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  Collection.prototype.getLength = function getLength () {\n    return this.get(Property.LENGTH);\n  };\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.insertAt = function insertAt (index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index));\n  };\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  Collection.prototype.pop = function pop () {\n    return this.removeAt(this.getLength() - 1);\n  };\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  Collection.prototype.push = function push (elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    var n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  };\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  Collection.prototype.remove = function remove (elem) {\n    var arr = this.array_;\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  Collection.prototype.removeAt = function removeAt (index) {\n    var prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n    return prev;\n  };\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.setAt = function setAt (index, elem) {\n    var n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      var prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index));\n    } else {\n      for (var j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  };\n\n  /**\n   * @private\n   */\n  Collection.prototype.updateLength_ = function updateLength_ () {\n    this.set(Property.LENGTH, this.array_.length);\n  };\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number=} opt_except Optional index to ignore.\n   */\n  Collection.prototype.assertUnique_ = function assertUnique_ (elem, opt_except) {\n    for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  };\n\n  return Collection;\n}(BaseObject));\n\n\nexport default Collection;\n\n//# sourceMappingURL=Collection.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n\n//# sourceMappingURL=asserts.js.map","/**\n * @module ol/Feature\n */\nimport {assert} from './asserts.js';\nimport {listen, unlisten, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n */\nvar Feature = /*@__PURE__*/(function (BaseObject) {\n  function Feature(opt_geometryOrProperties) {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    listen(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n\n    if (opt_geometryOrProperties) {\n      if (typeof /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry === 'function') {\n        var geometry = /** @type {import(\"./geom/Geometry.js\").default} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        var properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  if ( BaseObject ) Feature.__proto__ = BaseObject;\n  Feature.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Feature.prototype.constructor = Feature;\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature} The clone.\n   * @api\n   */\n  Feature.prototype.clone = function clone () {\n    var clone = new Feature(this.getProperties());\n    clone.setGeometryName(this.getGeometryName());\n    var geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(geometry.clone());\n    }\n    var style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  };\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {import(\"./geom/Geometry.js\").default|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  Feature.prototype.getGeometry = function getGeometry () {\n    return (\n      /** @type {import(\"./geom/Geometry.js\").default|undefined} */ (this.get(this.geometryName_))\n    );\n  };\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  Feature.prototype.getId = function getId () {\n    return this.id_;\n  };\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  Feature.prototype.getGeometryName = function getGeometryName () {\n    return this.geometryName_;\n  };\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike} The feature style.\n   * @api\n   */\n  Feature.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  Feature.prototype.getStyleFunction = function getStyleFunction () {\n    return this.styleFunction_;\n  };\n\n  /**\n   * @private\n   */\n  Feature.prototype.handleGeometryChange_ = function handleGeometryChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  Feature.prototype.handleGeometryChanged_ = function handleGeometryChanged_ () {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    var geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(geometry,\n        EventType.CHANGE, this.handleGeometryChange_, this);\n    }\n    this.changed();\n  };\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {import(\"./geom/Geometry.js\").default|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  Feature.prototype.setGeometry = function setGeometry (geometry) {\n    this.set(this.geometryName_, geometry);\n  };\n\n  /**\n   * Set the style for the feature.  This can be a single style object, an array\n   * of styles, or a function that takes a resolution and returns an array of\n   * styles. If it is `null` the feature has no style (a `null` style).\n   * @param {import(\"./style/Style.js\").StyleLike} style Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~Event#event:change\n   */\n  Feature.prototype.setStyle = function setStyle (style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  };\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~Event#event:change\n   */\n  Feature.prototype.setId = function setId (id) {\n    this.id_ = id;\n    this.changed();\n  };\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  Feature.prototype.setGeometryName = function setGeometryName (name) {\n    unlisten(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n    this.geometryName_ = name;\n    listen(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n    this.handleGeometryChanged_();\n  };\n\n  return Feature;\n}(BaseObject));\n\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    var styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof /** @type {?} */ (obj).getZIndex === 'function',\n        41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      var style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function() {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/array\n */\n\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  var mid, cmp;\n  var comparator = opt_comparator || numberSafeCompareFunction;\n  var low = 0;\n  var high = haystack.length;\n  var found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + (high - low >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) { /* Too low. */\n      low = mid + 1;\n\n    } else { /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  var n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    var i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    var tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  var extension = Array.isArray(data) ? data : [data];\n  var length = extension.length;\n  for (var i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  var i = arr.indexOf(obj);\n  var found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  var length = arr.length >>> 0;\n  var value;\n\n  for (var i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  var len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (var i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  var length = arr.length;\n  var tmp = Array(arr.length);\n  var i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function(a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  var index;\n  var found = !arr.every(function(el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  var compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function(currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    var res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || opt_strict && res === 0);\n  });\n}\n\n//# sourceMappingURL=array.js.map","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16\n};\n\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/extent\n */\nimport {assert} from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  var extent = createEmpty();\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  var minX = Math.min.apply(null, xs);\n  var minY = Math.min.apply(null, ys);\n  var maxX = Math.max.apply(null, xs);\n  var maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value\n    ];\n  }\n}\n\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  var dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n      extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {Relationship} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var x = coordinate[0];\n  var y = coordinate[1];\n  var relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(\n    Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n      extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (var i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(this:T, import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @param {T=} opt_this Value to use as `this` when executing `callback`.\n * @return {S|boolean} Value.\n * @template S, T\n */\nexport function forEachCorner(extent, callback, opt_this) {\n  var val;\n  val = callback.call(opt_this, getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  var area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  var coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  var minX = Math.min(extent1[0], extent2[0]);\n  var minY = Math.min(extent1[1], extent2[1]);\n  var maxX = Math.max(extent1[2], extent2[2]);\n  var maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n  var dx = resolution * size[0] / 2;\n  var dy = resolution * size[1] / 2;\n  var cosRotation = Math.cos(rotation);\n  var sinRotation = Math.sin(rotation);\n  var xCos = dx * cosRotation;\n  var xSin = dx * sinRotation;\n  var yCos = dy * cosRotation;\n  var ySin = dy * sinRotation;\n  var x = center[0];\n  var y = center[1];\n  var x0 = x - xCos + ySin;\n  var x1 = x - xCos - ySin;\n  var x2 = x + xCos - ySin;\n  var x3 = x + xCos + ySin;\n  var y0 = y - xSin - yCos;\n  var y1 = y - xSin + yCos;\n  var y2 = y + xSin + yCos;\n  var y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3),\n    opt_extent);\n}\n\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  var intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  var intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return extent1[0] <= extent2[2] &&\n      extent1[2] >= extent2[0] &&\n      extent1[1] <= extent2[3] &&\n      extent1[3] >= extent2[1];\n}\n\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  var intersects = false;\n  var startRel = coordinateRelationship(extent, start);\n  var endRel = coordinateRelationship(extent, end);\n  if (startRel === Relationship.INTERSECTING ||\n      endRel === Relationship.INTERSECTING) {\n    intersects = true;\n  } else {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var startX = start[0];\n    var startY = start[1];\n    var endX = end[0];\n    var endY = end[1];\n    var slope = (endY - startY) / (endX - startX);\n    var x, y;\n    if (!!(endRel & Relationship.ABOVE) &&\n        !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - ((endY - maxY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.RIGHT) &&\n        !(startRel & Relationship.RIGHT)) {\n      // potentially intersects right\n      y = endY - ((endX - maxX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n    if (!intersects && !!(endRel & Relationship.BELOW) &&\n        !(startRel & Relationship.BELOW)) {\n      // potentially intersects bottom\n      x = endX - ((endY - minY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.LEFT) &&\n        !(startRel & Relationship.LEFT)) {\n      // potentially intersects left\n      y = endY - ((endX - minX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n\n  }\n  return intersects;\n}\n\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n  var coordinates = [\n    extent[0], extent[1],\n    extent[0], extent[3],\n    extent[2], extent[1],\n    extent[2], extent[3]\n  ];\n  transformFn(coordinates, coordinates, 2);\n  var xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n  var ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM'\n};\n\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle'\n};\n\n//# sourceMappingURL=GeometryType.js.map","/**\n * @module ol/geom/flat/transform\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var x = flatCoordinates[j];\n    var y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/math\n */\nimport {assert} from './asserts.js';\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function() {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  var cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function(x) {\n      var y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n}());\n\n\n/**\n * @param {number} x X.\n * @return {number} The smallest power of two greater than or equal to x.\n */\nexport function roundUpToPowerOfTwo(x) {\n  assert(0 < x, 29); // `x` must be greater than `0`\n  return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\n}\n\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  var n = mat.length;\n\n  for (var i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    var maxRow = i;\n    var maxEl = Math.abs(mat[i][i]);\n    for (var r = i + 1; r < n; r++) {\n      var absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    var tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (var j = i + 1; j < n; j++) {\n      var coef = -mat[j][i] / mat[i][i];\n      for (var k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  var x = new Array(n);\n  for (var l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (var m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return angleInRadians * 180 / Math.PI;\n}\n\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return angleInDegrees * Math.PI / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  var r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n//# sourceMappingURL=math.js.map","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n\n/**\n * @module ol/sphere\n */\nimport {toRadians, toDegrees} from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\n * earth is used (Clarke 1866 Authalic Sphere).\n */\n\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lat2 = toRadians(c2[1]);\n  var deltaLatBy2 = (lat2 - lat1) / 2;\n  var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n      Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n      Math.cos(lat1) * Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  var length = 0;\n  for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  var length = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  var area = 0;\n  var len = coordinates.length;\n  var x1 = coordinates[len - 1][0];\n  var y1 = coordinates[len - 1][1];\n  for (var i = 0; i < len; i++) {\n    var x2 = coordinates[i][0];\n    var y2 = coordinates[i][1];\n    area += toRadians(x2 - x1) *\n        (2 + Math.sin(toRadians(y1)) +\n        Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return area * radius * radius / 2.0;\n}\n\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  var area = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lon1 = toRadians(c1[0]);\n  var dByR = distance / radius;\n  var lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n  var lon = lon1 + Math.atan2(\n    Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n    Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n  return [toDegrees(lon), toDegrees(lat)];\n}\n\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n  DEGREES: 'degrees',\n  FEET: 'ft',\n  METERS: 'm',\n  PIXELS: 'pixels',\n  TILE_PIXELS: 'tile-pixels',\n  USFEET: 'us-ft'\n};\n\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = function Projection(options) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this.code_ = options.code;\n\n  /**\n   * Units of projected coordinates. When set to `TILE_PIXELS`, a\n   * `this.extent_` and `this.worldExtent_` must be configured properly for each\n   * tile.\n   * @private\n   * @type {import(\"./Units.js\").default}\n   */\n  this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n  /**\n   * Validity extent of the projection in projected coordinates. For projections\n   * with `TILE_PIXELS` units, this is the extent of the tile in\n   * tile pixel space.\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.extent_ = options.extent !== undefined ? options.extent : null;\n\n  /**\n   * Extent of the world in EPSG:4326. For projections with\n   * `TILE_PIXELS` units, this is the extent of the tile in\n   * projected coordinate space.\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.worldExtent_ = options.worldExtent !== undefined ?\n    options.worldExtent : null;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.axisOrientation_ = options.axisOrientation !== undefined ?\n    options.axisOrientation : 'enu';\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.global_ = options.global !== undefined ? options.global : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.canWrapX_ = !!(this.global_ && this.extent_);\n\n  /**\n   * @private\n   * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n   */\n  this.getPointResolutionFunc_ = options.getPointResolution;\n\n  /**\n   * @private\n   * @type {import(\"../tilegrid/TileGrid.js\").default}\n   */\n  this.defaultTileGrid_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.metersPerUnit_ = options.metersPerUnit;\n};\n\n/**\n * @return {boolean} The projection is suitable for wrapping the x-axis\n */\nProjection.prototype.canWrapX = function canWrapX () {\n  return this.canWrapX_;\n};\n\n/**\n * Get the code for this projection, e.g. 'EPSG:4326'.\n * @return {string} Code.\n * @api\n */\nProjection.prototype.getCode = function getCode () {\n  return this.code_;\n};\n\n/**\n * Get the validity extent for this projection.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nProjection.prototype.getExtent = function getExtent () {\n  return this.extent_;\n};\n\n/**\n * Get the units of this projection.\n * @return {import(\"./Units.js\").default} Units.\n * @api\n */\nProjection.prototype.getUnits = function getUnits () {\n  return this.units_;\n};\n\n/**\n * Get the amount of meters per unit of this projection.If the projection is\n * not configured with `metersPerUnit` or a units identifier, the return is\n * `undefined`.\n * @return {number|undefined} Meters.\n * @api\n */\nProjection.prototype.getMetersPerUnit = function getMetersPerUnit () {\n  return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n};\n\n/**\n * Get the world extent for this projection.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nProjection.prototype.getWorldExtent = function getWorldExtent () {\n  return this.worldExtent_;\n};\n\n/**\n * Get the axis orientation of this projection.\n * Example values are:\n * enu - the default easting, northing, elevation.\n * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n *   or south orientated transverse mercator.\n * wnu - westing, northing, up - some planetary coordinate systems have\n *   \"west positive\" coordinate systems\n * @return {string} Axis orientation.\n * @api\n */\nProjection.prototype.getAxisOrientation = function getAxisOrientation () {\n  return this.axisOrientation_;\n};\n\n/**\n * Is this projection a global projection which spans the whole world?\n * @return {boolean} Whether the projection is global.\n * @api\n */\nProjection.prototype.isGlobal = function isGlobal () {\n  return this.global_;\n};\n\n/**\n * Set if the projection is a global projection which spans the whole world\n * @param {boolean} global Whether the projection is global.\n * @api\n */\nProjection.prototype.setGlobal = function setGlobal (global) {\n  this.global_ = global;\n  this.canWrapX_ = !!(global && this.extent_);\n};\n\n/**\n * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n */\nProjection.prototype.getDefaultTileGrid = function getDefaultTileGrid () {\n  return this.defaultTileGrid_;\n};\n\n/**\n * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n */\nProjection.prototype.setDefaultTileGrid = function setDefaultTileGrid (tileGrid) {\n  this.defaultTileGrid_ = tileGrid;\n};\n\n/**\n * Set the validity extent for this projection.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @api\n */\nProjection.prototype.setExtent = function setExtent (extent) {\n  this.extent_ = extent;\n  this.canWrapX_ = !!(this.global_ && extent);\n};\n\n/**\n * Set the world extent for this projection.\n * @param {import(\"../extent.js\").Extent} worldExtent World extent\n *   [minlon, minlat, maxlon, maxlat].\n * @api\n */\nProjection.prototype.setWorldExtent = function setWorldExtent (worldExtent) {\n  this.worldExtent_ = worldExtent;\n};\n\n/**\n * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n * for this projection.\n * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n * @api\n */\nProjection.prototype.setGetPointResolution = function setGetPointResolution (func) {\n  this.getPointResolutionFunc_ = func;\n};\n\n/**\n * Get the custom point resolution function for this projection (if set).\n * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n * resolution function (if set).\n */\nProjection.prototype.getPointResolutionFunc = function getPointResolutionFunc () {\n  return this.getPointResolutionFunc_;\n};\n\nexport default Projection;\n\n//# sourceMappingURL=Projection.js.map","/**\n * @module ol/proj/epsg3857\n */\nimport {cosh} from '../math.js';\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [\n  -HALF_SIZE, -HALF_SIZE,\n  HALF_SIZE, HALF_SIZE\n];\n\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = /*@__PURE__*/(function (Projection) {\n  function EPSG3857Projection(code) {\n    Projection.call(this, {\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function(resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      }\n    });\n\n  }\n\n  if ( Projection ) EPSG3857Projection.__proto__ = Projection;\n  EPSG3857Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG3857Projection.prototype.constructor = EPSG3857Projection;\n\n  return EPSG3857Projection;\n}(Projection));\n\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  var length = input.length;\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  var halfSize = HALF_SIZE;\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = halfSize * input[i] / 180;\n    var y = RADIUS *\n        Math.log(Math.tan(Math.PI * (+input[i + 1] + 90) / 360));\n    if (y > halfSize) {\n      y = halfSize;\n    } else if (y < -halfSize) {\n      y = -halfSize;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  var length = input.length;\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = 180 * input[i] / HALF_SIZE;\n    output[i + 1] = 360 * Math.atan(\n      Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n  }\n  return output;\n}\n\n//# sourceMappingURL=epsg3857.js.map","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\n\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = /*@__PURE__*/(function (Projection) {\n  function EPSG4326Projection(code, opt_axisOrientation) {\n    Projection.call(this, {\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT\n    });\n\n  }\n\n  if ( Projection ) EPSG4326Projection.__proto__ = Projection;\n  EPSG4326Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG4326Projection.prototype.constructor = EPSG4326Projection;\n\n  return EPSG4326Projection;\n}(Projection));\n\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport var PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/projections\n */\n\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nvar cache = {};\n\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return cache[code] || null;\n}\n\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nvar transforms = {};\n\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  var transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  var transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {getDistance} from './sphere.js';\nimport {applyTransform} from './extent.js';\nimport {modulo} from './math.js';\nimport {toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport * as projections from './proj/projections.js';\nimport {add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc} from './proj/transforms.js';\n\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  var output;\n  if (opt_output !== undefined) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  projections.add(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string' ?\n    projections.get(/** @type {string} */ (projectionLike)) :\n    (/** @type {Projection} */ (projectionLike) || null);\n}\n\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  var pointResolution;\n  var getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n  } else {\n    var units = projection.getUnits();\n    if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      var toEPSG4326 = getTransformFromProjections(projection, get('EPSG:4326'));\n      var vertices = [\n        point[0] - resolution / 2, point[1],\n        point[0] + resolution / 2, point[1],\n        point[0], point[1] - resolution / 2,\n        point[0], point[1] + resolution / 2\n      ];\n      vertices = toEPSG4326(vertices, vertices, 2);\n      var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n      var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n      pointResolution = (width + height) / 2;\n      var metersPerUnit = opt_units ?\n        METERS_PER_UNIT[opt_units] :\n        projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function(source) {\n    projections.forEach(function(destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n  projections1.forEach(function(projection1) {\n    projections2.forEach(function(projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  projections.clear();\n  clearTransformFuncs();\n}\n\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return (\n      /** @type {Projection} */ (projection)\n    );\n  }\n}\n\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function(input, opt_output, opt_dimension) {\n      var length = input.length;\n      var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      var output = opt_output !== undefined ? opt_output : new Array(length);\n      for (var i = 0; i < length; i += dimension) {\n        var point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (var j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    });\n}\n\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  var sourceProj = get(source);\n  var destProj = get(destination);\n  addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n  addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(coordinate, 'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  var lonLat = transform(coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n  var lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  var equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    var transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n  var sourceCode = sourceProjection.getCode();\n  var destinationCode = destinationProjection.getCode();\n  var transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  var sourceProjection = get(source);\n  var destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  var transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n  var transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc);\n}\n\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n  var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n  return transformFunc(point);\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\n\naddCommon();\n\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n */\n\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n\n/**\n * @private\n * @type {Transform}\n */\nvar tmp_ = new Array(6);\n\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  var a1 = transform1[0];\n  var b1 = transform1[1];\n  var c1 = transform1[2];\n  var d1 = transform1[3];\n  var e1 = transform1[4];\n  var f1 = transform1[5];\n  var a2 = transform2[0];\n  var b2 = transform2[1];\n  var c2 = transform2[2];\n  var d2 = transform2[3];\n  var e2 = transform2[4];\n  var f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  var sin = Math.sin(angle);\n  var cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  var det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  var a = source[0];\n  var b = source[1];\n  var c = source[2];\n  var d = source[3];\n  var e = source[4];\n  var f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * A string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  return 'matrix(' + mat.join(', ') + ')';\n}\n\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/geom/Geometry\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {createEmpty, getHeight, returnOrUpdate} from '../extent.js';\nimport {transform2D} from './flat/transform.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport Units from '../proj/Units.js';\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\n\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = /*@__PURE__*/(function (BaseObject) {\n  function Geometry() {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {Object<string, Geometry>}\n     */\n    this.simplifiedGeometryCache = {};\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n  }\n\n  if ( BaseObject ) Geometry.__proto__ = BaseObject;\n  Geometry.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Geometry.prototype.constructor = Geometry;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  Geometry.prototype.clone = function clone () {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  Geometry.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  };\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  Geometry.prototype.containsXY = function containsXY (x, y) {\n    var coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  };\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  Geometry.prototype.getClosestPoint = function getClosestPoint (point, opt_closestPoint) {\n    var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  };\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  Geometry.prototype.intersectsCoordinate = function intersectsCoordinate (coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  Geometry.prototype.computeExtent = function computeExtent (extent) {\n    return abstract();\n  };\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  Geometry.prototype.getExtent = function getExtent (opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      this.extent_ = this.computeExtent(this.extent_);\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  };\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  Geometry.prototype.rotate = function rotate (angle, anchor) {\n    abstract();\n  };\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n   *     sx).\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  Geometry.prototype.scale = function scale (sx, opt_sy, opt_anchor) {\n    abstract();\n  };\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the the {@link\n   * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n   * Douglas Peucker} algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  Geometry.prototype.simplify = function simplify (tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  };\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  Geometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    return abstract();\n  };\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  Geometry.prototype.getType = function getType () {\n    return abstract();\n  };\n\n  /**\n   * Apply a transform function to each coordinate of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n   */\n  Geometry.prototype.applyTransform = function applyTransform (transformFn) {\n    abstract();\n  };\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  Geometry.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return abstract();\n  };\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  Geometry.prototype.translate = function translate (deltaX, deltaY) {\n    abstract();\n  };\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  Geometry.prototype.transform = function transform (source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    var sourceProj = getProjection(source);\n    var transformFn = sourceProj.getUnits() == Units.TILE_PIXELS ?\n      function(inCoordinates, outCoordinates, stride) {\n        var pixelExtent = sourceProj.getExtent();\n        var projectedExtent = sourceProj.getWorldExtent();\n        var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n        composeTransform(tmpTransform,\n          projectedExtent[0], projectedExtent[3],\n          scale, -scale, 0,\n          0, 0);\n        transform2D(inCoordinates, 0, inCoordinates.length, stride,\n          tmpTransform, outCoordinates);\n        return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n      } :\n      getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  };\n\n  return Geometry;\n}(BaseObject));\n\n\nexport default Geometry;\n\n//# sourceMappingURL=Geometry.js.map","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {rotate, scale, translate, transform2D} from './flat/transform.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = /*@__PURE__*/(function (Geometry) {\n  function SimpleGeometry() {\n\n    Geometry.call(this);\n\n    /**\n     * @protected\n     * @type {GeometryLayout}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n\n  }\n\n  if ( Geometry ) SimpleGeometry.__proto__ = Geometry;\n  SimpleGeometry.prototype = Object.create( Geometry && Geometry.prototype );\n  SimpleGeometry.prototype.constructor = SimpleGeometry;\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromFlatCoordinates(this.flatCoordinates,\n      0, this.flatCoordinates.length, this.stride, extent);\n  };\n\n  /**\n   * @abstract\n   * @return {Array<*>} Coordinates.\n   */\n  SimpleGeometry.prototype.getCoordinates = function getCoordinates () {\n    return abstract();\n  };\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  SimpleGeometry.prototype.getFirstCoordinate = function getFirstCoordinate () {\n    return this.flatCoordinates.slice(0, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  SimpleGeometry.prototype.getFlatCoordinates = function getFlatCoordinates () {\n    return this.flatCoordinates;\n  };\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  SimpleGeometry.prototype.getLastCoordinate = function getLastCoordinate () {\n    return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n  };\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {GeometryLayout} Layout.\n   * @api\n   */\n  SimpleGeometry.prototype.getLayout = function getLayout () {\n    return this.layout;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\n      clear(this.simplifiedGeometryCache);\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n    var key = squaredTolerance.toString();\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n      return this.simplifiedGeometryCache[key];\n    } else {\n      var simplifiedGeometry =\n          this.getSimplifiedGeometryInternal(squaredTolerance);\n      var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n      if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n        this.simplifiedGeometryCache[key] = simplifiedGeometry;\n        return simplifiedGeometry;\n      } else {\n        // Simplification did not actually remove any coordinates.  We now know\n        // that any calls to getSimplifiedGeometry with a squaredTolerance less\n        // than or equal to the current squaredTolerance will also not have any\n        // effect.  This allows us to short circuit simplification (saving CPU\n        // cycles) and prevents the cache of simplified geometries from filling\n        // up with useless identical copies of this geometry (saving memory).\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n        return this;\n      }\n    }\n  };\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    return this;\n  };\n\n  /**\n   * @return {number} Stride.\n   */\n  SimpleGeometry.prototype.getStride = function getStride () {\n    return this.stride;\n  };\n\n  /**\n   * @param {GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  SimpleGeometry.prototype.setFlatCoordinates = function setFlatCoordinates (layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  };\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   */\n  SimpleGeometry.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    abstract();\n  };\n\n  /**\n   * @param {GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  SimpleGeometry.prototype.setLayout = function setLayout (layout, coordinates, nesting) {\n    /** @type {number} */\n    var stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (var i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.applyTransform = function applyTransform (transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.rotate = function rotate$1 (angle, anchor) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      rotate(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, angle, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.scale = function scale$1 (sx, opt_sy, opt_anchor) {\n    var sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    var anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      scale(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, sx, sy, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.translate = function translate$1 (deltaX, deltaY) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      translate(\n        flatCoordinates, 0, flatCoordinates.length, stride,\n        deltaX, deltaY, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  return SimpleGeometry;\n}(Geometry));\n\n\n/**\n * @param {number} stride Stride.\n * @return {GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  var layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return (\n    /** @type {GeometryLayout} */ (layout)\n  );\n}\n\n\n/**\n * @param {GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  var stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  var flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    var stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates, 0, flatCoordinates.length, stride,\n      transform, opt_dest);\n  }\n}\n\nexport default SimpleGeometry;\n\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/geom/flat/area\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  var twiceArea = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  var area = 0;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  var area = 0;\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n\n//# sourceMappingURL=area.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n  var x1 = flatCoordinates[offset1];\n  var y1 = flatCoordinates[offset1 + 1];\n  var dx = flatCoordinates[offset2] - x1;\n  var dy = flatCoordinates[offset2 + 1] - y1;\n  var offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i], t);\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (var i$1 = 0; i$1 < stride; ++i$1) {\n    closestPoint[i$1] = flatCoordinates[offset + i$1];\n  }\n  closestPoint.length = stride;\n}\n\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    max = maxSquaredDelta(\n      flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    max = arrayMaxSquaredDelta(\n      flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  var i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  var index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index += stride * Math.max(\n        ((Math.sqrt(squaredDistance) -\n            Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates, offset, end, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset,\n  endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates, offset, ends, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/geom/flat/deflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    var coordinate = coordinates[i];\n    for (var j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n  var ends = opt_ends ? opt_ends : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n    var end = deflateCoordinates(\n      flatCoordinates, offset, coordinatess[j], stride);\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n  var endss = opt_endss ? opt_endss : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    var ends = deflateCoordinatesArray(\n      flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/geom/flat/inflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n  var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n  var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  var i = 0;\n  for (var j = 0, jj = ends.length; j < jj; ++j) {\n    var end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates, offset, end, stride, coordinatess[i]);\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n  var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  var i = 0;\n  for (var j = 0, jj = endss.length; j < jj; ++j) {\n    var ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates, offset, ends, stride, coordinatesss[i]);\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredSegmentDistance, squaredDistance} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end,\n  stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n  var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n    opt_simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(flatCoordinates, offset, end,\n      stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0);\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates, offset, end, stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0);\n  return simplifiedFlatCoordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  var n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  var markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  var stack = [offset, end - stride];\n  var index = 0;\n  while (stack.length > 0) {\n    var last = stack.pop();\n    var first = stack.pop();\n    var maxSquaredDistance = 0;\n    var x1 = flatCoordinates[first];\n    var y1 = flatCoordinates[first + 1];\n    var x2 = flatCoordinates[last];\n    var y2 = flatCoordinates[last + 1];\n    for (var i = first + stride; i < last; i += stride) {\n      var x = flatCoordinates[i];\n      var y = flatCoordinates[i + 1];\n      var squaredDistance = squaredSegmentDistance(\n        x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (var i$1 = 0; i$1 < n; ++i$1) {\n    if (markers[i$1]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset,\n  ends, stride, squaredTolerance, simplifiedFlatCoordinates,\n  simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates, offset, end, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates, offset, endss, stride, squaredTolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates, offset, ends, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  var x2 = x1;\n  var y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride,\n  tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  var x1 = snap(flatCoordinates[offset], tolerance);\n  var y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  var x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    var x3 = snap(flatCoordinates[offset], tolerance);\n    var y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    var dx1 = x2 - x1;\n    var dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    var dx2 = x3 - x1;\n    var dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if ((dx1 * dy2 == dy1 * dx2) &&\n        ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n        ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates, offset, ends, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates, offset, end, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates, offset, endss, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates, offset, ends, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n//# sourceMappingURL=simplify.js.map","/**\n * @module ol/geom/LinearRing\n */\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = /*@__PURE__*/(function (SimpleGeometry) {\n  function LinearRing(coordinates, opt_layout) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) LinearRing.__proto__ = SimpleGeometry;\n  LinearRing.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  LinearRing.prototype.constructor = LinearRing;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.clone = function clone () {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  LinearRing.prototype.getArea = function getArea () {\n    return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LinearRing.prototype.getType = function getType () {\n    return GeometryType.LINEAR_RING;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return false;\n  };\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return LinearRing;\n}(SimpleGeometry));\n\n\nexport default LinearRing;\n\n//# sourceMappingURL=LinearRing.js.map","/**\n * @module ol/geom/Point\n */\nimport {createOrUpdateFromCoordinate, containsXY} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = /*@__PURE__*/(function (SimpleGeometry) {\n  function Point(coordinates, opt_layout) {\n    SimpleGeometry.call(this);\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  if ( SimpleGeometry ) Point.__proto__ = SimpleGeometry;\n  Point.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Point.prototype.constructor = Point;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @override\n   * @api\n   */\n  Point.prototype.clone = function clone () {\n    var point = new Point(this.flatCoordinates.slice(), this.layout);\n    return point;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    var flatCoordinates = this.flatCoordinates;\n    var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n    if (squaredDistance < minSquaredDistance) {\n      var stride = this.stride;\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  };\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @override\n   * @api\n   */\n  Point.prototype.getCoordinates = function getCoordinates () {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.getType = function getType () {\n    return GeometryType.POINT;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return Point;\n}(SimpleGeometry));\n\n\nexport default Point;\n\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n  var outside = forEachCorner(extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function(coordinate) {\n      return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n  return !outside;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n  // http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  var wn = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset,\n  ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n  var i, ii, x, x1, x2, y1, y2;\n  var y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  var intersections = [];\n  // Calculate intersections with the horizontal line\n  for (var r = 0, rr = ends.length; r < rr; ++r) {\n    var end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  var pointX = NaN;\n  var maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    var segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n  var interiorPoints = [];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(flatCoordinates,\n      offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/geom/flat/segments\n */\n\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(this: S, import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @param {S=} opt_this The object to be used as the value of 'this'\n *     within callback.\n * @return {T|boolean} Value.\n * @template T,S\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback, opt_this) {\n  var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  var point2 = [];\n  var ret;\n  for (; (offset + stride) < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback.call(opt_this, point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment} from '../../extent.js';\nimport {linearRingContainsXY, linearRingContainsExtent} from './contains.js';\nimport {forEach as forEachSegment} from './segments.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n  var coordinatesExtent = extendFlatCoordinates(\n    createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] &&\n      coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] &&\n      coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(flatCoordinates, offset, end, stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function(point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    });\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    if (intersectsLineString(\n      flatCoordinates, offset, ends[i], stride, extent)) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n  if (intersectsLineString(\n    flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n  if (!intersectsLinearRing(\n    flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n      if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (intersectsLinearRingArray(\n      flatCoordinates, offset, ends, stride, extent)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/geom/flat/reverse\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (var i = 0; i < stride; ++i) {\n      var tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // http://tinyurl.com/clockwise-method\n  // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n  var edge = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge > 0;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingIsOriented(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    if (!linearRingIsOriented(\n      flatCoordinates, offset, endss[i], stride, opt_right)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    var reverse = i === 0 ?\n      (right && isClockwise) || (!right && !isClockwise) :\n      (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates, offset, endss[i], stride, opt_right);\n  }\n  return offset;\n}\n\n//# sourceMappingURL=orient.js.map","/**\n * @module ol/geom/Polygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from './flat/closest.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingIsOriented, orientLinearRings} from './flat/orient.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {modulo} from '../math.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = /*@__PURE__*/(function (SimpleGeometry) {\n  function Polygon(coordinates, opt_layout, opt_ends) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) Polygon.__proto__ = SimpleGeometry;\n  Polygon.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Polygon.prototype.constructor = Polygon;\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  Polygon.prototype.appendLinearRing = function appendLinearRing (linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @override\n   * @api\n   */\n  Polygon.prototype.clone = function clone () {\n    return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.containsXY = function containsXY (x, y) {\n    return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n  };\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  Polygon.prototype.getArea = function getArea () {\n    return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n  };\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  Polygon.prototype.getCoordinates = function getCoordinates (opt_right) {\n    var flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(\n        flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(\n      flatCoordinates, 0, this.ends_, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  Polygon.prototype.getEnds = function getEnds () {\n    return this.ends_;\n  };\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  Polygon.prototype.getFlatInteriorPoint = function getFlatInteriorPoint () {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      var flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride,\n        flatCenter, 0);\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  };\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  Polygon.prototype.getInteriorPoint = function getInteriorPoint () {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  };\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRingCount = function getLinearRingCount () {\n    return this.ends_.length;\n  };\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  Polygon.prototype.getLinearRing = function getLinearRing (index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  };\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRings = function getLinearRings () {\n    var layout = this.layout;\n    var flatCoordinates = this.flatCoordinates;\n    var ends = this.ends_;\n    var linearRings = [];\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  };\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  Polygon.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n    if (this.orientedRevision_ != this.getRevision()) {\n      var flatCoordinates = this.flatCoordinates;\n      if (linearRingIsOriented(\n        flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRings(\n              this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.getType = function getType () {\n    return GeometryType.POLYGON;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  Polygon.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  };\n\n  return Polygon;\n}(SimpleGeometry));\n\n\nexport default Polygon;\n\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  var n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  var flatCoordinates = [];\n  for (var i = 0; i < n; ++i) {\n    extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var flatCoordinates =\n      [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  var sides = opt_sides ? opt_sides : 32;\n  var stride = circle.getStride();\n  var layout = circle.getLayout();\n  var center = circle.getCenter();\n  var arrayLength = stride * (sides + 1);\n  var flatCoordinates = new Array(arrayLength);\n  for (var i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (var j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  var ends = [flatCoordinates.length];\n  var polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  var flatCoordinates = polygon.getFlatCoordinates();\n  var stride = polygon.getStride();\n  var sides = flatCoordinates.length / stride - 1;\n  var startAngle = opt_angle ? opt_angle : 0;\n  for (var i = 0; i <= sides; ++i) {\n    var offset = i * stride;\n    var angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n    flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n    flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n  }\n  polygon.changed();\n}\n\n//# sourceMappingURL=Polygon.js.map","/**\n * @module ol/has\n */\n\nvar ua = typeof navigator !== 'undefined' ?\n  navigator.userAgent.toLowerCase() : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n\n\n/**\n * Is HTML5 geolocation supported in the current browser?\n * @const\n * @type {boolean}\n * @api\n */\nexport var GEOLOCATION = 'geolocation' in navigator;\n\n\n/**\n * True if browser supports touch events.\n * @const\n * @type {boolean}\n * @api\n */\nexport var TOUCH = 'ontouchstart' in window;\n\n\n/**\n * True if browser supports pointer events.\n * @const\n * @type {boolean}\n */\nexport var POINTER = 'PointerEvent' in window;\n\n\n/**\n * True if browser supports ms pointer events (IE 10).\n * @const\n * @type {boolean}\n */\nexport var MSPOINTER = !!(navigator.msPointerEnabled);\n\n\nexport {HAS as WEBGL} from './webgl.js';\n\n//# sourceMappingURL=has.js.map","/**\n * @module ol/Geolocation\n */\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport {listen} from './events.js';\nimport Event from './events/Event.js';\nimport EventType from './events/EventType.js';\nimport {circular as circularPolygon} from './geom/Polygon.js';\nimport {GEOLOCATION} from './has.js';\nimport {toRadians} from './math.js';\nimport {get as getProjection, getTransformFromProjections, identityTransform} from './proj.js';\n\n\n/**\n * @enum {string}\n */\nvar Property = {\n  ACCURACY: 'accuracy',\n  ACCURACY_GEOMETRY: 'accuracyGeometry',\n  ALTITUDE: 'altitude',\n  ALTITUDE_ACCURACY: 'altitudeAccuracy',\n  HEADING: 'heading',\n  POSITION: 'position',\n  PROJECTION: 'projection',\n  SPEED: 'speed',\n  TRACKING: 'tracking',\n  TRACKING_OPTIONS: 'trackingOptions'\n};\n\n\n/**\n * @classdesc\n * Events emitted on Geolocation error.\n */\nvar GeolocationError = /*@__PURE__*/(function (Event) {\n  function GeolocationError(error) {\n    Event.call(this, EventType.ERROR);\n\n    /**\n     * @type {number}\n     */\n    this.code = error.code;\n\n    /**\n     * @type {string}\n     */\n    this.message = error.message;\n  }\n\n  if ( Event ) GeolocationError.__proto__ = Event;\n  GeolocationError.prototype = Object.create( Event && Event.prototype );\n  GeolocationError.prototype.constructor = GeolocationError;\n\n  return GeolocationError;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [tracking=false] Start Tracking right after\n * instantiation.\n * @property {PositionOptions} [trackingOptions] Tracking options.\n * See http://www.w3.org/TR/geolocation-API/#position_options_interface.\n * @property {import(\"./proj.js\").ProjectionLike} [projection] The projection the position\n * is reported in.\n */\n\n\n/**\n * @classdesc\n * Helper class for providing HTML5 Geolocation capabilities.\n * The [Geolocation API](http://www.w3.org/TR/geolocation-API/)\n * is used to locate a user's position.\n *\n * To get notified of position changes, register a listener for the generic\n * `change` event on your instance of {@link module:ol/Geolocation~Geolocation}.\n *\n * Example:\n *\n *     var geolocation = new Geolocation({\n *       // take the projection to use from the map's view\n *       projection: view.getProjection()\n *     });\n *     // listen to changes in position\n *     geolocation.on('change', function(evt) {\n *       window.console.log(geolocation.getPosition());\n *     });\n *\n * @fires error\n * @api\n */\nvar Geolocation = /*@__PURE__*/(function (BaseObject) {\n  function Geolocation(opt_options) {\n\n    BaseObject.call(this);\n\n    var options = opt_options || {};\n\n    /**\n     * The unprojected (EPSG:4326) device position.\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.position_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./proj.js\").TransformFunction}\n     */\n    this.transform_ = identityTransform;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.watchId_ = undefined;\n\n    listen(\n      this, getChangeEventType(Property.PROJECTION),\n      this.handleProjectionChanged_, this);\n    listen(\n      this, getChangeEventType(Property.TRACKING),\n      this.handleTrackingChanged_, this);\n\n    if (options.projection !== undefined) {\n      this.setProjection(options.projection);\n    }\n    if (options.trackingOptions !== undefined) {\n      this.setTrackingOptions(options.trackingOptions);\n    }\n\n    this.setTracking(options.tracking !== undefined ? options.tracking : false);\n\n  }\n\n  if ( BaseObject ) Geolocation.__proto__ = BaseObject;\n  Geolocation.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Geolocation.prototype.constructor = Geolocation;\n\n  /**\n   * @inheritDoc\n   */\n  Geolocation.prototype.disposeInternal = function disposeInternal () {\n    this.setTracking(false);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @private\n   */\n  Geolocation.prototype.handleProjectionChanged_ = function handleProjectionChanged_ () {\n    var projection = this.getProjection();\n    if (projection) {\n      this.transform_ = getTransformFromProjections(\n        getProjection('EPSG:4326'), projection);\n      if (this.position_) {\n        this.set(Property.POSITION, this.transform_(this.position_));\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  Geolocation.prototype.handleTrackingChanged_ = function handleTrackingChanged_ () {\n    if (GEOLOCATION) {\n      var tracking = this.getTracking();\n      if (tracking && this.watchId_ === undefined) {\n        this.watchId_ = navigator.geolocation.watchPosition(\n          this.positionChange_.bind(this),\n          this.positionError_.bind(this),\n          this.getTrackingOptions());\n      } else if (!tracking && this.watchId_ !== undefined) {\n        navigator.geolocation.clearWatch(this.watchId_);\n        this.watchId_ = undefined;\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {Position} position position event.\n   */\n  Geolocation.prototype.positionChange_ = function positionChange_ (position) {\n    var coords = position.coords;\n    this.set(Property.ACCURACY, coords.accuracy);\n    this.set(Property.ALTITUDE,\n      coords.altitude === null ? undefined : coords.altitude);\n    this.set(Property.ALTITUDE_ACCURACY,\n      coords.altitudeAccuracy === null ?\n        undefined : coords.altitudeAccuracy);\n    this.set(Property.HEADING, coords.heading === null ?\n      undefined : toRadians(coords.heading));\n    if (!this.position_) {\n      this.position_ = [coords.longitude, coords.latitude];\n    } else {\n      this.position_[0] = coords.longitude;\n      this.position_[1] = coords.latitude;\n    }\n    var projectedPosition = this.transform_(this.position_);\n    this.set(Property.POSITION, projectedPosition);\n    this.set(Property.SPEED,\n      coords.speed === null ? undefined : coords.speed);\n    var geometry = circularPolygon(this.position_, coords.accuracy);\n    geometry.applyTransform(this.transform_);\n    this.set(Property.ACCURACY_GEOMETRY, geometry);\n    this.changed();\n  };\n\n  /**\n   * Triggered when the Geolocation returns an error.\n   * @event error\n   * @api\n   */\n\n  /**\n   * @private\n   * @param {PositionError} error error object.\n   */\n  Geolocation.prototype.positionError_ = function positionError_ (error) {\n    this.setTracking(false);\n    this.dispatchEvent(new GeolocationError(error));\n  };\n\n  /**\n   * Get the accuracy of the position in meters.\n   * @return {number|undefined} The accuracy of the position measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getAccuracy = function getAccuracy () {\n    return /** @type {number|undefined} */ (this.get(Property.ACCURACY));\n  };\n\n  /**\n   * Get a geometry of the position accuracy.\n   * @return {?import(\"./geom/Polygon.js\").default} A geometry of the position accuracy.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getAccuracyGeometry = function getAccuracyGeometry () {\n    return (\n      /** @type {?import(\"./geom/Polygon.js\").default} */ (this.get(Property.ACCURACY_GEOMETRY) || null)\n    );\n  };\n\n  /**\n   * Get the altitude associated with the position.\n   * @return {number|undefined} The altitude of the position in meters above mean\n   *     sea level.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getAltitude = function getAltitude () {\n    return /** @type {number|undefined} */ (this.get(Property.ALTITUDE));\n  };\n\n  /**\n   * Get the altitude accuracy of the position.\n   * @return {number|undefined} The accuracy of the altitude measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getAltitudeAccuracy = function getAltitudeAccuracy () {\n    return /** @type {number|undefined} */ (this.get(Property.ALTITUDE_ACCURACY));\n  };\n\n  /**\n   * Get the heading as radians clockwise from North.\n   * Note: depending on the browser, the heading is only defined if the `enableHighAccuracy`\n   * is set to `true` in the tracking options.\n   * @return {number|undefined} The heading of the device in radians from north.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getHeading = function getHeading () {\n    return /** @type {number|undefined} */ (this.get(Property.HEADING));\n  };\n\n  /**\n   * Get the position of the device.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The current position of the device reported\n   *     in the current projection.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getPosition = function getPosition () {\n    return (\n      /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(Property.POSITION))\n    );\n  };\n\n  /**\n   * Get the projection associated with the position.\n   * @return {import(\"./proj/Projection.js\").default|undefined} The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getProjection = function getProjection () {\n    return (\n      /** @type {import(\"./proj/Projection.js\").default|undefined} */ (this.get(Property.PROJECTION))\n    );\n  };\n\n  /**\n   * Get the speed in meters per second.\n   * @return {number|undefined} The instantaneous speed of the device in meters\n   *     per second.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getSpeed = function getSpeed () {\n    return /** @type {number|undefined} */ (this.get(Property.SPEED));\n  };\n\n  /**\n   * Determine if the device location is being tracked.\n   * @return {boolean} The device location is being tracked.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getTracking = function getTracking () {\n    return /** @type {boolean} */ (this.get(Property.TRACKING));\n  };\n\n  /**\n   * Get the tracking options.\n   * See http://www.w3.org/TR/geolocation-API/#position-options.\n   * @return {PositionOptions|undefined} PositionOptions as defined by\n   *     the [HTML5 Geolocation spec\n   *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getTrackingOptions = function getTrackingOptions () {\n    return /** @type {PositionOptions|undefined} */ (this.get(Property.TRACKING_OPTIONS));\n  };\n\n  /**\n   * Set the projection to use for transforming the coordinates.\n   * @param {import(\"./proj.js\").ProjectionLike} projection The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.setProjection = function setProjection (projection) {\n    this.set(Property.PROJECTION, getProjection(projection));\n  };\n\n  /**\n   * Enable or disable tracking.\n   * @param {boolean} tracking Enable tracking.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.setTracking = function setTracking (tracking) {\n    this.set(Property.TRACKING, tracking);\n  };\n\n  /**\n   * Set the tracking options.\n   * See http://www.w3.org/TR/geolocation-API/#position-options.\n   * @param {PositionOptions} options PositionOptions as defined by the\n   *     [HTML5 Geolocation spec\n   *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.setTrackingOptions = function setTrackingOptions (options) {\n    this.set(Property.TRACKING_OPTIONS, options);\n  };\n\n  return Geolocation;\n}(BaseObject));\n\n\nexport default Geolocation;\n\n//# sourceMappingURL=Geolocation.js.map","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = function Kinetic(decay, minVelocity, delay) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.decay_ = decay;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minVelocity_ = minVelocity;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delay_ = delay;\n\n  /**\n   * @private\n   * @type {Array<number>}\n   */\n  this.points_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.angle_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.initialVelocity_ = 0;\n};\n\n/**\n * FIXME empty description for jsdoc\n */\nKinetic.prototype.begin = function begin () {\n  this.points_.length = 0;\n  this.angle_ = 0;\n  this.initialVelocity_ = 0;\n};\n\n/**\n * @param {number} x X.\n * @param {number} y Y.\n */\nKinetic.prototype.update = function update (x, y) {\n  this.points_.push(x, y, Date.now());\n};\n\n/**\n * @return {boolean} Whether we should do kinetic animation.\n */\nKinetic.prototype.end = function end () {\n  if (this.points_.length < 6) {\n    // at least 2 points are required (i.e. there must be at least 6 elements\n    // in the array)\n    return false;\n  }\n  var delay = Date.now() - this.delay_;\n  var lastIndex = this.points_.length - 3;\n  if (this.points_[lastIndex + 2] < delay) {\n    // the last tracked point is too old, which means that the user stopped\n    // panning before releasing the map\n    return false;\n  }\n\n  // get the first point which still falls into the delay time\n  var firstIndex = lastIndex - 3;\n  while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n    firstIndex -= 3;\n  }\n\n  var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n  // we don't want a duration of 0 (divide by zero)\n  // we also make sure the user panned for a duration of at least one frame\n  // (1/60s) to compute sane displacement values\n  if (duration < 1000 / 60) {\n    return false;\n  }\n\n  var dx = this.points_[lastIndex] - this.points_[firstIndex];\n  var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n  this.angle_ = Math.atan2(dy, dx);\n  this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n  return this.initialVelocity_ > this.minVelocity_;\n};\n\n/**\n * @return {number} Total distance travelled (pixels).\n */\nKinetic.prototype.getDistance = function getDistance () {\n  return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n};\n\n/**\n * @return {number} Angle of the kinetic panning animation (radians).\n */\nKinetic.prototype.getAngle = function getAngle () {\n  return this.angle_;\n};\n\nexport default Kinetic;\n\n//# sourceMappingURL=Kinetic.js.map","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = /*@__PURE__*/(function (Event) {\n  function MapEvent(type, map, opt_frameState) {\n\n    Event.call(this, type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n\n  }\n\n  if ( Event ) MapEvent.__proto__ = Event;\n  MapEvent.prototype = Object.create( Event && Event.prototype );\n  MapEvent.prototype.constructor = MapEvent;\n\n  return MapEvent;\n}(Event));\n\nexport default MapEvent;\n\n//# sourceMappingURL=MapEvent.js.map","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n */\nvar MapBrowserEvent = /*@__PURE__*/(function (MapEvent) {\n  function MapBrowserEvent(type, map, browserEvent, opt_dragging, opt_frameState) {\n\n    MapEvent.call(this, type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {Event}\n     * @api\n     */\n    this.originalEvent = browserEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {import(\"./pixel.js\").Pixel}\n     * @api\n     */\n    this.pixel = map.getEventPixel(browserEvent);\n\n    /**\n     * The coordinate in view projection corresponding to the original browser event.\n     * @type {import(\"./coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = map.getCoordinateFromPixel(this.pixel);\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n\n  }\n\n  if ( MapEvent ) MapBrowserEvent.__proto__ = MapEvent;\n  MapBrowserEvent.prototype = Object.create( MapEvent && MapEvent.prototype );\n  MapBrowserEvent.prototype.constructor = MapBrowserEvent;\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @override\n   * @api\n   */\n  MapBrowserEvent.prototype.preventDefault = function preventDefault () {\n    MapEvent.prototype.preventDefault.call(this);\n    this.originalEvent.preventDefault();\n  };\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @override\n   * @api\n   */\n  MapBrowserEvent.prototype.stopPropagation = function stopPropagation () {\n    MapEvent.prototype.stopPropagation.call(this);\n    this.originalEvent.stopPropagation();\n  };\n\n  return MapBrowserEvent;\n}(MapEvent));\n\n\nexport default MapBrowserEvent;\n\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\n//# sourceMappingURL=MapBrowserEventType.js.map","/**\n * @module ol/MapBrowserPointerEvent\n */\nimport MapBrowserEvent from './MapBrowserEvent.js';\n\nvar MapBrowserPointerEvent = /*@__PURE__*/(function (MapBrowserEvent) {\n  function MapBrowserPointerEvent(type, map, pointerEvent, opt_dragging, opt_frameState) {\n\n    MapBrowserEvent.call(this, type, map, pointerEvent.originalEvent, opt_dragging, opt_frameState);\n\n    /**\n     * @const\n     * @type {import(\"./pointer/PointerEvent.js\").default}\n     */\n    this.pointerEvent = pointerEvent;\n\n  }\n\n  if ( MapBrowserEvent ) MapBrowserPointerEvent.__proto__ = MapBrowserEvent;\n  MapBrowserPointerEvent.prototype = Object.create( MapBrowserEvent && MapBrowserEvent.prototype );\n  MapBrowserPointerEvent.prototype.constructor = MapBrowserPointerEvent;\n\n  return MapBrowserPointerEvent;\n}(MapBrowserEvent));\n\nexport default MapBrowserPointerEvent;\n\n//# sourceMappingURL=MapBrowserPointerEvent.js.map","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/pointer/EventSource\n */\n\nvar EventSource = function EventSource(dispatcher, mapping) {\n\n  /**\n   * @type {import(\"./PointerEventHandler.js\").default}\n   */\n  this.dispatcher = dispatcher;\n\n  /**\n   * @private\n   * @const\n   * @type {!Object<string, function(Event): void>}\n   */\n  this.mapping_ = mapping;\n};\n\n/**\n * List of events supported by this source.\n * @return {Array<string>} Event names\n */\nEventSource.prototype.getEvents = function getEvents () {\n  return Object.keys(this.mapping_);\n};\n\n/**\n * Returns the handler that should handle a given event type.\n * @param {string} eventType The event type.\n * @return {function(Event)} Handler\n */\nEventSource.prototype.getHandlerForEvent = function getHandlerForEvent (eventType) {\n  return this.mapping_[eventType];\n};\n\nexport default EventSource;\n\n//# sourceMappingURL=EventSource.js.map","/**\n * @module ol/pointer/MouseSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n\n/**\n * @type {number}\n */\nexport var POINTER_ID = 1;\n\n\n/**\n * @type {string}\n */\nexport var POINTER_TYPE = 'mouse';\n\n\n/**\n * Radius around touchend that swallows mouse events.\n *\n * @type {number}\n */\nvar DEDUP_DIST = 25;\n\n/**\n * Handler for `mousedown`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousedown(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    // TODO(dfreedman) workaround for some elements not sending mouseup\n    // http://crbug/149091\n    if (POINTER_ID.toString() in this.pointerMap) {\n      this.cancel(inEvent);\n    }\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.pointerMap[POINTER_ID.toString()] = inEvent;\n    this.dispatcher.down(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mousemove`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousemove(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.move(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseup`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseup(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var p = this.pointerMap[POINTER_ID.toString()];\n\n    if (p && p.button === inEvent.button) {\n      var e = prepareEvent(inEvent, this.dispatcher);\n      this.dispatcher.up(e, inEvent);\n      this.cleanupMouse();\n    }\n  }\n}\n\n/**\n * Handler for `mouseover`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseover(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.enterOver(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseout`.\n *\n * @this {MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseout(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.leaveOut(e, inEvent);\n  }\n}\n\n\nvar MouseSource = /*@__PURE__*/(function (EventSource) {\n  function MouseSource(dispatcher) {\n    var mapping = {\n      'mousedown': mousedown,\n      'mousemove': mousemove,\n      'mouseup': mouseup,\n      'mouseover': mouseover,\n      'mouseout': mouseout\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {Array<import(\"../pixel.js\").Pixel>}\n     */\n    this.lastTouches = [];\n  }\n\n  if ( EventSource ) MouseSource.__proto__ = EventSource;\n  MouseSource.prototype = Object.create( EventSource && EventSource.prototype );\n  MouseSource.prototype.constructor = MouseSource;\n\n  /**\n   * Detect if a mouse event was simulated from a touch by\n   * checking if previously there was a touch event at the\n   * same position.\n   *\n   * FIXME - Known problem with the native Android browser on\n   * Samsung GT-I9100 (Android 4.1.2):\n   * In case the page is scrolled, this function does not work\n   * correctly when a canvas is used (WebGL or canvas renderer).\n   * Mouse listeners on canvas elements (for this browser), create\n   * two mouse events: One 'good' and one 'bad' one (on other browsers or\n   * when a div is used, there is only one event). For the 'bad' one,\n   * clientX/clientY and also pageX/pageY are wrong when the page\n   * is scrolled. Because of that, this function can not detect if\n   * the events were simulated from a touch event. As result, a\n   * pointer event at a wrong position is dispatched, which confuses\n   * the map interactions.\n   * It is unclear, how one can get the correct position for the event\n   * or detect that the positions are invalid.\n   *\n   * @private\n   * @param {MouseEvent} inEvent The in event.\n   * @return {boolean} True, if the event was generated by a touch.\n   */\n  MouseSource.prototype.isEventSimulatedFromTouch_ = function isEventSimulatedFromTouch_ (inEvent) {\n    var lts = this.lastTouches;\n    var x = inEvent.clientX;\n    var y = inEvent.clientY;\n    for (var i = 0, l = lts.length, t = (void 0); i < l && (t = lts[i]); i++) {\n      // simulated mouse events will be swallowed near a primary touchend\n      var dx = Math.abs(x - t[0]);\n      var dy = Math.abs(y - t[1]);\n      if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Dispatches a `pointercancel` event.\n   *\n   * @param {Event} inEvent The in event.\n   */\n  MouseSource.prototype.cancel = function cancel (inEvent) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.cancel(e, inEvent);\n    this.cleanupMouse();\n  };\n\n  /**\n   * Remove the mouse from the list of active pointers.\n   */\n  MouseSource.prototype.cleanupMouse = function cleanupMouse () {\n    delete this.pointerMap[POINTER_ID.toString()];\n  };\n\n  return MouseSource;\n}(EventSource));\n\n\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @param {Event} inEvent The in event.\n * @param {import(\"./PointerEventHandler.js\").default} dispatcher Event handler.\n * @return {Object} The copied event.\n */\nexport function prepareEvent(inEvent, dispatcher) {\n  var e = dispatcher.cloneEvent(inEvent, inEvent);\n\n  // forward mouse preventDefault\n  var pd = e.preventDefault;\n  e.preventDefault = function() {\n    inEvent.preventDefault();\n    pd();\n  };\n\n  e.pointerId = POINTER_ID;\n  e.isPrimary = true;\n  e.pointerType = POINTER_TYPE;\n\n  return e;\n}\n\n\nexport default MouseSource;\n\n//# sourceMappingURL=MouseSource.js.map","/**\n * @module ol/pointer/MsSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar POINTER_TYPES = [\n  '',\n  'unavailable',\n  'touch',\n  'pen',\n  'mouse'\n];\n\n/**\n * Handler for `msPointerDown`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerDown(inEvent) {\n  this.pointerMap[inEvent.pointerId.toString()] = inEvent;\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.down(e, inEvent);\n}\n\n/**\n * Handler for `msPointerMove`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerMove(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.move(e, inEvent);\n}\n\n/**\n * Handler for `msPointerUp`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerUp(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.up(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msPointerOut`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOut(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.leaveOut(e, inEvent);\n}\n\n/**\n * Handler for `msPointerOver`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOver(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.enterOver(e, inEvent);\n}\n\n/**\n * Handler for `msPointerCancel`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerCancel(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.cancel(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msLostPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msLostPointerCapture(inEvent) {\n  var e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\n/**\n * Handler for `msGotPointerCapture`.\n *\n * @this {MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msGotPointerCapture(inEvent) {\n  var e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\nvar MsSource = /*@__PURE__*/(function (EventSource) {\n  function MsSource(dispatcher) {\n    var mapping = {\n      'MSPointerDown': msPointerDown,\n      'MSPointerMove': msPointerMove,\n      'MSPointerUp': msPointerUp,\n      'MSPointerOut': msPointerOut,\n      'MSPointerOver': msPointerOver,\n      'MSPointerCancel': msPointerCancel,\n      'MSGotPointerCapture': msGotPointerCapture,\n      'MSLostPointerCapture': msLostPointerCapture\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, MSPointerEvent|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n  }\n\n  if ( EventSource ) MsSource.__proto__ = EventSource;\n  MsSource.prototype = Object.create( EventSource && EventSource.prototype );\n  MsSource.prototype.constructor = MsSource;\n\n  /**\n   * Creates a copy of the original event that will be used\n   * for the fake pointer event.\n   *\n   * @private\n   * @param {MSPointerEvent} inEvent The in event.\n   * @return {Object} The copied event.\n   */\n  MsSource.prototype.prepareEvent_ = function prepareEvent_ (inEvent) {\n    /** @type {MSPointerEvent|Object} */\n    var e = inEvent;\n    if (typeof inEvent.pointerType === 'number') {\n      e = this.dispatcher.cloneEvent(inEvent, inEvent);\n      e.pointerType = POINTER_TYPES[inEvent.pointerType];\n    }\n\n    return e;\n  };\n\n  /**\n   * Remove this pointer from the list of active pointers.\n   * @param {number} pointerId Pointer identifier.\n   */\n  MsSource.prototype.cleanup = function cleanup (pointerId) {\n    delete this.pointerMap[pointerId.toString()];\n  };\n\n  return MsSource;\n}(EventSource));\n\nexport default MsSource;\n\n//# sourceMappingURL=MsSource.js.map","/**\n * @module ol/pointer/NativeSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from './EventSource.js';\n\n/**\n * Handler for `pointerdown`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerDown(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointermove`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerMove(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerup`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerUp(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerout`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOut(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerover`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOver(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointercancel`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerCancel(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `lostpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction lostPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `gotpointercapture`.\n *\n * @this {NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction gotPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\nvar NativeSource = /*@__PURE__*/(function (EventSource) {\n  function NativeSource(dispatcher) {\n    var mapping = {\n      'pointerdown': pointerDown,\n      'pointermove': pointerMove,\n      'pointerup': pointerUp,\n      'pointerout': pointerOut,\n      'pointerover': pointerOver,\n      'pointercancel': pointerCancel,\n      'gotpointercapture': gotPointerCapture,\n      'lostpointercapture': lostPointerCapture\n    };\n    EventSource.call(this, dispatcher, mapping);\n  }\n\n  if ( EventSource ) NativeSource.__proto__ = EventSource;\n  NativeSource.prototype = Object.create( EventSource && EventSource.prototype );\n  NativeSource.prototype.constructor = NativeSource;\n\n  return NativeSource;\n}(EventSource));\n\nexport default NativeSource;\n\n//# sourceMappingURL=NativeSource.js.map","/**\n * @module ol/pointer/PointerEvent\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport _Event from '../events/Event.js';\n\n\n/**\n * Is the `buttons` property supported?\n * @type {boolean}\n */\nvar HAS_BUTTONS = false;\n\n\nvar PointerEvent = /*@__PURE__*/(function (_Event) {\n  function PointerEvent(type, originalEvent, opt_eventDict) {\n    _Event.call(this, type);\n\n    /**\n     * @const\n     * @type {Event}\n     */\n    this.originalEvent = originalEvent;\n\n    var eventDict = opt_eventDict ? opt_eventDict : {};\n\n    /**\n     * @type {number}\n     */\n    this.buttons = getButtons(eventDict);\n\n    /**\n     * @type {number}\n     */\n    this.pressure = getPressure(eventDict, this.buttons);\n\n    // MouseEvent related properties\n\n    /**\n     * @type {boolean}\n     */\n    this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\n\n    /**\n     * @type {Object}\n     */\n    this.view = 'view' in eventDict ? eventDict['view'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\n\n    /**\n     * @type {number}\n     */\n    this.button = 'button' in eventDict ? eventDict['button'] : 0;\n\n    /**\n     * @type {Node}\n     */\n    this.relatedTarget = 'relatedTarget' in eventDict ?\n      eventDict['relatedTarget'] : null;\n\n    // PointerEvent related properties\n\n    /**\n     * @const\n     * @type {number}\n     */\n    this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.width = 'width' in eventDict ? eventDict['width'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.height = 'height' in eventDict ? eventDict['height'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\n\n    /**\n     * @type {string}\n     */\n    this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\n\n    /**\n     * @type {number}\n     */\n    this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\n\n    // keep the semantics of preventDefault\n    if (originalEvent.preventDefault) {\n      this.preventDefault = function() {\n        originalEvent.preventDefault();\n      };\n    }\n  }\n\n  if ( _Event ) PointerEvent.__proto__ = _Event;\n  PointerEvent.prototype = Object.create( _Event && _Event.prototype );\n  PointerEvent.prototype.constructor = PointerEvent;\n\n  return PointerEvent;\n}(_Event));\n\n\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @return {number} Button indicator.\n */\nfunction getButtons(eventDict) {\n  // According to the w3c spec,\n  // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\n  // MouseEvent.button == 0 can mean either no mouse button depressed, or the\n  // left mouse button depressed.\n  //\n  // As of now, the only way to distinguish between the two states of\n  // MouseEvent.button is by using the deprecated MouseEvent.which property, as\n  // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\n  // no mouse button is held.\n  //\n  // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\n  // but initMouseEvent does not expose an argument with which to set\n  // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\n  // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\n  // of app developers.\n  //\n  // The only way to propagate the correct state of MouseEvent.which and\n  // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\n  // is to call initMouseEvent with a buttonArg value of -1.\n  //\n  // This is fixed with DOM Level 4's use of buttons\n  var buttons;\n  if (eventDict.buttons || HAS_BUTTONS) {\n    buttons = eventDict.buttons;\n  } else {\n    switch (eventDict.which) {\n      case 1: buttons = 1; break;\n      case 2: buttons = 4; break;\n      case 3: buttons = 2; break;\n      default: buttons = 0;\n    }\n  }\n  return buttons;\n}\n\n\n/**\n * @param {Object<string, ?>} eventDict The event dictionary.\n * @param {number} buttons Button indicator.\n * @return {number} The pressure.\n */\nfunction getPressure(eventDict, buttons) {\n  // Spec requires that pointers without pressure specified use 0.5 for down\n  // state and 0 for up state.\n  var pressure = 0;\n  if (eventDict.pressure) {\n    pressure = eventDict.pressure;\n  } else {\n    pressure = buttons ? 0.5 : 0;\n  }\n  return pressure;\n}\n\n\n/**\n * Checks if the `buttons` property is supported.\n */\n(function() {\n  try {\n    var ev = new MouseEvent('click', {buttons: 1});\n    HAS_BUTTONS = ev.buttons === 1;\n  } catch (e) {\n    // pass\n  }\n})();\n\nexport default PointerEvent;\n\n//# sourceMappingURL=PointerEvent.js.map","/**\n * @module ol/pointer/TouchSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {remove} from '../array.js';\nimport EventSource from './EventSource.js';\nimport {POINTER_ID} from './MouseSource.js';\n\n\n/**\n * @type {number}\n */\nvar CLICK_COUNT_TIMEOUT = 200;\n\n/**\n * @type {string}\n */\nvar POINTER_TYPE = 'touch';\n\n/**\n * Handler for `touchstart`, triggers `pointerover`,\n * `pointerenter` and `pointerdown` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchstart(inEvent) {\n  this.vacuumTouches_(inEvent);\n  this.setPrimaryTouch_(inEvent.changedTouches[0]);\n  this.dedupSynthMouse_(inEvent);\n  this.clickCount_++;\n  this.processTouches_(inEvent, this.overDown_);\n}\n\n/**\n * Handler for `touchmove`.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchmove(inEvent) {\n  this.processTouches_(inEvent, this.moveOverOut_);\n}\n\n/**\n * Handler for `touchend`, triggers `pointerup`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The event.\n */\nfunction touchend(inEvent) {\n  this.dedupSynthMouse_(inEvent);\n  this.processTouches_(inEvent, this.upOut_);\n}\n\n/**\n * Handler for `touchcancel`, triggers `pointercancel`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchcancel(inEvent) {\n  this.processTouches_(inEvent, this.cancelOut_);\n}\n\n\nvar TouchSource = /*@__PURE__*/(function (EventSource) {\n  function TouchSource(dispatcher, mouseSource) {\n    var mapping = {\n      'touchstart': touchstart,\n      'touchmove': touchmove,\n      'touchend': touchend,\n      'touchcancel': touchcancel\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {import(\"./MouseSource.js\").default}\n     */\n    this.mouseSource = mouseSource;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.firstTouchId_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.clickCount_ = 0;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.resetId_;\n\n    /**\n     * Mouse event timeout: This should be long enough to\n     * ignore compat mouse events made by touch.\n     * @private\n     * @type {number}\n     */\n    this.dedupTimeout_ = 2500;\n  }\n\n  if ( EventSource ) TouchSource.__proto__ = EventSource;\n  TouchSource.prototype = Object.create( EventSource && EventSource.prototype );\n  TouchSource.prototype.constructor = TouchSource;\n\n  /**\n   * @private\n   * @param {Touch} inTouch The in touch.\n   * @return {boolean} True, if this is the primary touch.\n   */\n  TouchSource.prototype.isPrimaryTouch_ = function isPrimaryTouch_ (inTouch) {\n    return this.firstTouchId_ === inTouch.identifier;\n  };\n\n  /**\n   * Set primary touch if there are no pointers, or the only pointer is the mouse.\n   * @param {Touch} inTouch The in touch.\n   * @private\n   */\n  TouchSource.prototype.setPrimaryTouch_ = function setPrimaryTouch_ (inTouch) {\n    var count = Object.keys(this.pointerMap).length;\n    if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\n      this.firstTouchId_ = inTouch.identifier;\n      this.cancelResetClickCount_();\n    }\n  };\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  TouchSource.prototype.removePrimaryPointer_ = function removePrimaryPointer_ (inPointer) {\n    if (inPointer.isPrimary) {\n      this.firstTouchId_ = undefined;\n      this.resetClickCount_();\n    }\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.resetClickCount_ = function resetClickCount_ () {\n    this.resetId_ = setTimeout(\n      this.resetClickCountHandler_.bind(this),\n      CLICK_COUNT_TIMEOUT);\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.resetClickCountHandler_ = function resetClickCountHandler_ () {\n    this.clickCount_ = 0;\n    this.resetId_ = undefined;\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.cancelResetClickCount_ = function cancelResetClickCount_ () {\n    if (this.resetId_ !== undefined) {\n      clearTimeout(this.resetId_);\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent Browser event\n   * @param {Touch} inTouch Touch event\n   * @return {PointerEvent} A pointer object.\n   */\n  TouchSource.prototype.touchToPointer_ = function touchToPointer_ (browserEvent, inTouch) {\n    var e = this.dispatcher.cloneEvent(browserEvent, inTouch);\n    // Spec specifies that pointerId 1 is reserved for Mouse.\n    // Touch identifiers can start at 0.\n    // Add 2 to the touch identifier for compatibility.\n    e.pointerId = inTouch.identifier + 2;\n    // TODO: check if this is necessary?\n    //e.target = findTarget(e);\n    e.bubbles = true;\n    e.cancelable = true;\n    e.detail = this.clickCount_;\n    e.button = 0;\n    e.buttons = 1;\n    e.width = inTouch.radiusX || 0;\n    e.height = inTouch.radiusY || 0;\n    e.pressure = inTouch.force || 0.5;\n    e.isPrimary = this.isPrimaryTouch_(inTouch);\n    e.pointerType = POINTER_TYPE;\n\n    // make sure that the properties that are different for\n    // each `Touch` object are not copied from the BrowserEvent object\n    e.clientX = inTouch.clientX;\n    e.clientY = inTouch.clientY;\n    e.screenX = inTouch.screenX;\n    e.screenY = inTouch.screenY;\n\n    return e;\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} inEvent Touch event\n   * @param {function(TouchEvent, PointerEvent): void} inFunction In function.\n   */\n  TouchSource.prototype.processTouches_ = function processTouches_ (inEvent, inFunction) {\n    var touches = Array.prototype.slice.call(inEvent.changedTouches);\n    var count = touches.length;\n    function preventDefault() {\n      inEvent.preventDefault();\n    }\n    for (var i = 0; i < count; ++i) {\n      var pointer = this.touchToPointer_(inEvent, touches[i]);\n      // forward touch preventDefaults\n      pointer.preventDefault = preventDefault;\n      inFunction.call(this, inEvent, pointer);\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchList} touchList The touch list.\n   * @param {number} searchId Search identifier.\n   * @return {boolean} True, if the `Touch` with the given id is in the list.\n   */\n  TouchSource.prototype.findTouch_ = function findTouch_ (touchList, searchId) {\n    var l = touchList.length;\n    for (var i = 0; i < l; i++) {\n      var touch = touchList[i];\n      if (touch.identifier === searchId) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * In some instances, a touchstart can happen without a touchend. This\n   * leaves the pointermap in a broken state.\n   * Therefore, on every touchstart, we remove the touches that did not fire a\n   * touchend event.\n   * To keep state globally consistent, we fire a pointercancel for\n   * this \"abandoned\" touch\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  TouchSource.prototype.vacuumTouches_ = function vacuumTouches_ (inEvent) {\n    var touchList = inEvent.touches;\n    // pointerMap.getCount() should be < touchList.length here,\n    // as the touchstart has not been processed yet.\n    var keys = Object.keys(this.pointerMap);\n    var count = keys.length;\n    if (count >= touchList.length) {\n      var d = [];\n      for (var i = 0; i < count; ++i) {\n        var key = Number(keys[i]);\n        var value = this.pointerMap[key];\n        // Never remove pointerId == 1, which is mouse.\n        // Touch identifiers are 2 smaller than their pointerId, which is the\n        // index in pointermap.\n        if (key != POINTER_ID && !this.findTouch_(touchList, key - 2)) {\n          d.push(value.out);\n        }\n      }\n      for (var i$1 = 0; i$1 < d.length; ++i$1) {\n        this.cancelOut_(inEvent, d[i$1]);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  TouchSource.prototype.overDown_ = function overDown_ (browserEvent, inPointer) {\n    this.pointerMap[inPointer.pointerId] = {\n      target: inPointer.target,\n      out: inPointer,\n      outTarget: inPointer.target\n    };\n    this.dispatcher.over(inPointer, browserEvent);\n    this.dispatcher.enter(inPointer, browserEvent);\n    this.dispatcher.down(inPointer, browserEvent);\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  TouchSource.prototype.moveOverOut_ = function moveOverOut_ (browserEvent, inPointer) {\n    var event = inPointer;\n    var pointer = this.pointerMap[event.pointerId];\n    // a finger drifted off the screen, ignore it\n    if (!pointer) {\n      return;\n    }\n    var outEvent = pointer.out;\n    var outTarget = pointer.outTarget;\n    this.dispatcher.move(event, browserEvent);\n    if (outEvent && outTarget !== event.target) {\n      outEvent.relatedTarget = event.target;\n      /** @type {Object} */ (event).relatedTarget = outTarget;\n      // recover from retargeting by shadow\n      outEvent.target = outTarget;\n      if (event.target) {\n        this.dispatcher.leaveOut(outEvent, browserEvent);\n        this.dispatcher.enterOver(event, browserEvent);\n      } else {\n        // clean up case when finger leaves the screen\n        /** @type {Object} */ (event).target = outTarget;\n        /** @type {Object} */ (event).relatedTarget = null;\n        this.cancelOut_(browserEvent, event);\n      }\n    }\n    pointer.out = event;\n    pointer.outTarget = event.target;\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent An event.\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  TouchSource.prototype.upOut_ = function upOut_ (browserEvent, inPointer) {\n    this.dispatcher.up(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  TouchSource.prototype.cancelOut_ = function cancelOut_ (browserEvent, inPointer) {\n    this.dispatcher.cancel(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  };\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  TouchSource.prototype.cleanUpPointer_ = function cleanUpPointer_ (inPointer) {\n    delete this.pointerMap[inPointer.pointerId];\n    this.removePrimaryPointer_(inPointer);\n  };\n\n  /**\n   * Prevent synth mouse events from creating pointer events.\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  TouchSource.prototype.dedupSynthMouse_ = function dedupSynthMouse_ (inEvent) {\n    var lts = this.mouseSource.lastTouches;\n    var t = inEvent.changedTouches[0];\n    // only the primary finger will synth mouse events\n    if (this.isPrimaryTouch_(t)) {\n      // remember x/y of last touch\n      var lt = [t.clientX, t.clientY];\n      lts.push(lt);\n\n      setTimeout(function() {\n        // remove touch after timeout\n        remove(lts, lt);\n      }, this.dedupTimeout_);\n    }\n  };\n\n  return TouchSource;\n}(EventSource));\n\nexport default TouchSource;\n\n//# sourceMappingURL=TouchSource.js.map","/**\n * @module ol/pointer/PointerEventHandler\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {listen, unlisten} from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport {POINTER, MSPOINTER, TOUCH} from '../has.js';\nimport PointerEventType from './EventType.js';\nimport MouseSource, {prepareEvent as prepareMouseEvent} from './MouseSource.js';\nimport MsSource from './MsSource.js';\nimport NativeSource from './NativeSource.js';\nimport PointerEvent from './PointerEvent.js';\nimport TouchSource from './TouchSource.js';\n\n\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array<Array>}\n */\nvar CLONE_PROPS = [\n  // MouseEvent\n  ['bubbles', false],\n  ['cancelable', false],\n  ['view', null],\n  ['detail', null],\n  ['screenX', 0],\n  ['screenY', 0],\n  ['clientX', 0],\n  ['clientY', 0],\n  ['ctrlKey', false],\n  ['altKey', false],\n  ['shiftKey', false],\n  ['metaKey', false],\n  ['button', 0],\n  ['relatedTarget', null],\n  // DOM Level 3\n  ['buttons', 0],\n  // PointerEvent\n  ['pointerId', 0],\n  ['width', 0],\n  ['height', 0],\n  ['pressure', 0],\n  ['tiltX', 0],\n  ['tiltY', 0],\n  ['pointerType', ''],\n  ['hwTimestamp', 0],\n  ['isPrimary', false],\n  // event instance\n  ['type', ''],\n  ['target', null],\n  ['currentTarget', null],\n  ['which', 0]\n];\n\n\nvar PointerEventHandler = /*@__PURE__*/(function (EventTarget) {\n  function PointerEventHandler(element) {\n    EventTarget.call(this);\n\n    /**\n     * @const\n     * @private\n     * @type {Element|HTMLDocument}\n     */\n    this.element_ = element;\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = {};\n\n    /**\n     * @type {Object<string, function(Event): void>}\n     * @private\n     */\n    this.eventMap_ = {};\n\n    /**\n     * @type {Array<import(\"./EventSource.js\").default>}\n     * @private\n     */\n    this.eventSourceList_ = [];\n\n    this.registerSources();\n  }\n\n  if ( EventTarget ) PointerEventHandler.__proto__ = EventTarget;\n  PointerEventHandler.prototype = Object.create( EventTarget && EventTarget.prototype );\n  PointerEventHandler.prototype.constructor = PointerEventHandler;\n\n  /**\n   * Set up the event sources (mouse, touch and native pointers)\n   * that generate pointer events.\n   */\n  PointerEventHandler.prototype.registerSources = function registerSources () {\n    if (POINTER) {\n      this.registerSource('native', new NativeSource(this));\n    } else if (MSPOINTER) {\n      this.registerSource('ms', new MsSource(this));\n    } else {\n      var mouseSource = new MouseSource(this);\n      this.registerSource('mouse', mouseSource);\n\n      if (TOUCH) {\n        this.registerSource('touch', new TouchSource(this, mouseSource));\n      }\n    }\n\n    // register events on the viewport element\n    this.register_();\n  };\n\n  /**\n   * Add a new event source that will generate pointer events.\n   *\n   * @param {string} name A name for the event source\n   * @param {import(\"./EventSource.js\").default} source The source event.\n   */\n  PointerEventHandler.prototype.registerSource = function registerSource (name, source) {\n    var s = source;\n    var newEvents = s.getEvents();\n\n    if (newEvents) {\n      newEvents.forEach(function(e) {\n        var handler = s.getHandlerForEvent(e);\n\n        if (handler) {\n          this.eventMap_[e] = handler.bind(s);\n        }\n      }.bind(this));\n      this.eventSourceList_.push(s);\n    }\n  };\n\n  /**\n   * Set up the events for all registered event sources.\n   * @private\n   */\n  PointerEventHandler.prototype.register_ = function register_ () {\n    var l = this.eventSourceList_.length;\n    for (var i = 0; i < l; i++) {\n      var eventSource = this.eventSourceList_[i];\n      this.addEvents_(eventSource.getEvents());\n    }\n  };\n\n  /**\n   * Remove all registered events.\n   * @private\n   */\n  PointerEventHandler.prototype.unregister_ = function unregister_ () {\n    var l = this.eventSourceList_.length;\n    for (var i = 0; i < l; i++) {\n      var eventSource = this.eventSourceList_[i];\n      this.removeEvents_(eventSource.getEvents());\n    }\n  };\n\n  /**\n   * Calls the right handler for a new event.\n   * @private\n   * @param {Event} inEvent Browser event.\n   */\n  PointerEventHandler.prototype.eventHandler_ = function eventHandler_ (inEvent) {\n    var type = inEvent.type;\n    var handler = this.eventMap_[type];\n    if (handler) {\n      handler(inEvent);\n    }\n  };\n\n  /**\n   * Setup listeners for the given events.\n   * @private\n   * @param {Array<string>} events List of events.\n   */\n  PointerEventHandler.prototype.addEvents_ = function addEvents_ (events) {\n    events.forEach(function(eventName) {\n      listen(this.element_, eventName, this.eventHandler_, this);\n    }.bind(this));\n  };\n\n  /**\n   * Unregister listeners for the given events.\n   * @private\n   * @param {Array<string>} events List of events.\n   */\n  PointerEventHandler.prototype.removeEvents_ = function removeEvents_ (events) {\n    events.forEach(function(e) {\n      unlisten(this.element_, e, this.eventHandler_, this);\n    }.bind(this));\n  };\n\n  /**\n   * Returns a snapshot of inEvent, with writable properties.\n   *\n   * @param {Event} event Browser event.\n   * @param {Event|Touch} inEvent An event that contains\n   *    properties to copy.\n   * @return {Object} An object containing shallow copies of\n   *    `inEvent`'s properties.\n   */\n  PointerEventHandler.prototype.cloneEvent = function cloneEvent (event, inEvent) {\n    var eventCopy = {};\n    for (var i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\n      var p = CLONE_PROPS[i][0];\n      eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\n    }\n\n    return eventCopy;\n  };\n\n  // EVENTS\n\n\n  /**\n   * Triggers a 'pointerdown' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.down = function down (data, event) {\n    this.fireEvent(PointerEventType.POINTERDOWN, data, event);\n  };\n\n  /**\n   * Triggers a 'pointermove' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.move = function move (data, event) {\n    this.fireEvent(PointerEventType.POINTERMOVE, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerup' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.up = function up (data, event) {\n    this.fireEvent(PointerEventType.POINTERUP, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerenter' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.enter = function enter (data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERENTER, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerleave' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.leave = function leave (data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerover' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.over = function over (data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROVER, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerout' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.out = function out (data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROUT, data, event);\n  };\n\n  /**\n   * Triggers a 'pointercancel' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.cancel = function cancel (data, event) {\n    this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\n  };\n\n  /**\n   * Triggers a combination of 'pointerout' and 'pointerleave' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.leaveOut = function leaveOut (data, event) {\n    this.out(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.leave(data, event);\n    }\n  };\n\n  /**\n   * Triggers a combination of 'pointerover' and 'pointerevents' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.enterOver = function enterOver (data, event) {\n    this.over(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.enter(data, event);\n    }\n  };\n\n  /**\n   * @private\n   * @param {Element} container The container element.\n   * @param {Element} contained The contained element.\n   * @return {boolean} Returns true if the container element\n   *   contains the other element.\n   */\n  PointerEventHandler.prototype.contains_ = function contains_ (container, contained) {\n    if (!container || !contained) {\n      return false;\n    }\n    return container.contains(contained);\n  };\n\n  // EVENT CREATION AND TRACKING\n  /**\n   * Creates a new Event of type `inType`, based on the information in\n   * `data`.\n   *\n   * @param {string} inType A string representing the type of event to create.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   * @return {PointerEvent} A PointerEvent of type `inType`.\n   */\n  PointerEventHandler.prototype.makeEvent = function makeEvent (inType, data, event) {\n    return new PointerEvent(inType, event, data);\n  };\n\n  /**\n   * Make and dispatch an event in one call.\n   * @param {string} inType A string representing the type of event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.fireEvent = function fireEvent (inType, data, event) {\n    var e = this.makeEvent(inType, data, event);\n    this.dispatchEvent(e);\n  };\n\n  /**\n   * Creates a pointer event from a native pointer event\n   * and dispatches this event.\n   * @param {Event} event A platform event with a target.\n   */\n  PointerEventHandler.prototype.fireNativeEvent = function fireNativeEvent (event) {\n    var e = this.makeEvent(event.type, event, event);\n    this.dispatchEvent(e);\n  };\n\n  /**\n   * Wrap a native mouse event into a pointer event.\n   * This proxy method is required for the legacy IE support.\n   * @param {string} eventType The pointer event type.\n   * @param {Event} event The event.\n   * @return {PointerEvent} The wrapped event.\n   */\n  PointerEventHandler.prototype.wrapMouseEvent = function wrapMouseEvent (eventType, event) {\n    var pointerEvent = this.makeEvent(\n      eventType, prepareMouseEvent(event, this), event);\n    return pointerEvent;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PointerEventHandler.prototype.disposeInternal = function disposeInternal () {\n    this.unregister_();\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return PointerEventHandler;\n}(EventTarget));\n\nexport default PointerEventHandler;\n\n//# sourceMappingURL=PointerEventHandler.js.map","/**\n * @module ol/MapBrowserEventHandler\n */\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport EventTarget from './events/Target.js';\nimport PointerEventType from './pointer/EventType.js';\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\n\nvar MapBrowserEventHandler = /*@__PURE__*/(function (EventTarget) {\n  function MapBrowserEventHandler(map, moveTolerance) {\n\n    EventTarget.call(this);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance ?\n      moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {import(\"./pointer/PointerEvent.js\").default}\n     * @private\n     */\n    this.down_ = null;\n\n    var element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    /**\n     * Event handler which generates pointer events for\n     * the viewport element.\n     *\n     * @type {PointerEventHandler}\n     * @private\n     */\n    this.pointerEventHandler_ = new PointerEventHandler(element);\n\n    /**\n     * Event handler which generates pointer events for\n     * the document (used when dragging).\n     *\n     * @type {PointerEventHandler}\n     * @private\n     */\n    this.documentPointerEventHandler_ = null;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(this.pointerEventHandler_,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_, this);\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(this.pointerEventHandler_,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_, this);\n\n  }\n\n  if ( EventTarget ) MapBrowserEventHandler.__proto__ = EventTarget;\n  MapBrowserEventHandler.prototype = Object.create( EventTarget && EventTarget.prototype );\n  MapBrowserEventHandler.prototype.constructor = MapBrowserEventHandler;\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.emulateClick_ = function emulateClick_ (pointerEvent) {\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.CLICK, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(function() {\n        this.clickTimeoutId_ = undefined;\n        var newEvent = new MapBrowserPointerEvent(\n          MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n      }.bind(this), 250);\n    }\n  };\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.updateActivePointers_ = function updateActivePointers_ (pointerEvent) {\n    var event = pointerEvent;\n\n    if (event.type == MapBrowserEventType.POINTERUP ||\n        event.type == MapBrowserEventType.POINTERCANCEL) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerUp_ = function handlePointerUp_ (pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.stopPropagation() or event.preventDefault().\n    if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.isMouseActionButton_ = function isMouseActionButton_ (pointerEvent) {\n    return pointerEvent.button === 0;\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerDown_ = function handlePointerDown_ (pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    this.down_ = pointerEvent;\n\n    if (this.dragListenerKeys_.length === 0) {\n      /* Set up a pointer event handler on the `document`,\n       * which is required when the pointer is moved outside\n       * the viewport when dragging.\n       */\n      this.documentPointerEventHandler_ =\n          new PointerEventHandler(document);\n\n      this.dragListenerKeys_.push(\n        listen(this.documentPointerEventHandler_,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_, this),\n        listen(this.documentPointerEventHandler_,\n          MapBrowserEventType.POINTERUP,\n          this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(this.pointerEventHandler_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_, this)\n      );\n    }\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerMove_ = function handlePointerMove_ (pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      var newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent,\n        this.dragging_);\n      this.dispatchEvent(newEvent);\n    }\n\n    // Some native android browser triggers mousemove events during small period\n    // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\n    // https://code.google.com/p/android/issues/detail?id=19827\n    // ex: Galaxy Tab P3110 + Android 4.1.1\n    pointerEvent.preventDefault();\n  };\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserPointerEvent matches the PointerEvent type.\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.relayEvent_ = function relayEvent_ (pointerEvent) {\n    var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(new MapBrowserPointerEvent(\n      pointerEvent.type, this.map_, pointerEvent, dragging));\n  };\n\n  /**\n   * @param {import(\"./pointer/PointerEvent.js\").default} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.isMoving_ = function isMoving_ (pointerEvent) {\n    return this.dragging_ ||\n        Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n        Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MapBrowserEventHandler.prototype.disposeInternal = function disposeInternal () {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    if (this.documentPointerEventHandler_) {\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n    if (this.pointerEventHandler_) {\n      this.pointerEventHandler_.dispose();\n      this.pointerEventHandler_ = null;\n    }\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return MapBrowserEventHandler;\n}(EventTarget));\n\n\nexport default MapBrowserEventHandler;\n\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend'\n\n};\n\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view'\n};\n\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are rendered.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after all layers are rendered.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete'\n\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n  ABORT: 5\n};\n\n//# sourceMappingURL=TileState.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = function PriorityQueue(priorityFunction, keyFunction) {\n\n  /**\n   * @type {function(T): number}\n   * @private\n   */\n  this.priorityFunction_ = priorityFunction;\n\n  /**\n   * @type {function(T): string}\n   * @private\n   */\n  this.keyFunction_ = keyFunction;\n\n  /**\n   * @type {Array<T>}\n   * @private\n   */\n  this.elements_ = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  this.priorities_ = [];\n\n  /**\n   * @type {!Object<string, boolean>}\n   * @private\n   */\n  this.queuedElements_ = {};\n\n};\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.clear = function clear$1 () {\n  this.elements_.length = 0;\n  this.priorities_.length = 0;\n  clear(this.queuedElements_);\n};\n\n\n/**\n * Remove and return the highest-priority element. O(log N).\n * @return {T} Element.\n */\nPriorityQueue.prototype.dequeue = function dequeue () {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[0];\n  if (elements.length == 1) {\n    elements.length = 0;\n    priorities.length = 0;\n  } else {\n    elements[0] = elements.pop();\n    priorities[0] = priorities.pop();\n    this.siftUp_(0);\n  }\n  var elementKey = this.keyFunction_(element);\n  delete this.queuedElements_[elementKey];\n  return element;\n};\n\n\n/**\n * Enqueue an element. O(log N).\n * @param {T} element Element.\n * @return {boolean} The element was added to the queue.\n */\nPriorityQueue.prototype.enqueue = function enqueue (element) {\n  assert(!(this.keyFunction_(element) in this.queuedElements_),\n    31); // Tried to enqueue an `element` that was already added to the queue\n  var priority = this.priorityFunction_(element);\n  if (priority != DROP) {\n    this.elements_.push(element);\n    this.priorities_.push(priority);\n    this.queuedElements_[this.keyFunction_(element)] = true;\n    this.siftDown_(0, this.elements_.length - 1);\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @return {number} Count.\n */\nPriorityQueue.prototype.getCount = function getCount () {\n  return this.elements_.length;\n};\n\n\n/**\n * Gets the index of the left child of the node at the given index.\n * @param {number} index The index of the node to get the left child for.\n * @return {number} The index of the left child.\n * @private\n */\nPriorityQueue.prototype.getLeftChildIndex_ = function getLeftChildIndex_ (index) {\n  return index * 2 + 1;\n};\n\n\n/**\n * Gets the index of the right child of the node at the given index.\n * @param {number} index The index of the node to get the right child for.\n * @return {number} The index of the right child.\n * @private\n */\nPriorityQueue.prototype.getRightChildIndex_ = function getRightChildIndex_ (index) {\n  return index * 2 + 2;\n};\n\n\n/**\n * Gets the index of the parent of the node at the given index.\n * @param {number} index The index of the node to get the parent for.\n * @return {number} The index of the parent.\n * @private\n */\nPriorityQueue.prototype.getParentIndex_ = function getParentIndex_ (index) {\n  return (index - 1) >> 1;\n};\n\n\n/**\n * Make this a heap. O(N).\n * @private\n */\nPriorityQueue.prototype.heapify_ = function heapify_ () {\n  var i;\n  for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n    this.siftUp_(i);\n  }\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nPriorityQueue.prototype.isEmpty = function isEmpty () {\n  return this.elements_.length === 0;\n};\n\n\n/**\n * @param {string} key Key.\n * @return {boolean} Is key queued.\n */\nPriorityQueue.prototype.isKeyQueued = function isKeyQueued (key) {\n  return key in this.queuedElements_;\n};\n\n\n/**\n * @param {T} element Element.\n * @return {boolean} Is queued.\n */\nPriorityQueue.prototype.isQueued = function isQueued (element) {\n  return this.isKeyQueued(this.keyFunction_(element));\n};\n\n\n/**\n * @param {number} index The index of the node to move down.\n * @private\n */\nPriorityQueue.prototype.siftUp_ = function siftUp_ (index) {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var count = elements.length;\n  var element = elements[index];\n  var priority = priorities[index];\n  var startIndex = index;\n\n  while (index < (count >> 1)) {\n    var lIndex = this.getLeftChildIndex_(index);\n    var rIndex = this.getRightChildIndex_(index);\n\n    var smallerChildIndex = rIndex < count &&\n        priorities[rIndex] < priorities[lIndex] ?\n      rIndex : lIndex;\n\n    elements[index] = elements[smallerChildIndex];\n    priorities[index] = priorities[smallerChildIndex];\n    index = smallerChildIndex;\n  }\n\n  elements[index] = element;\n  priorities[index] = priority;\n  this.siftDown_(startIndex, index);\n};\n\n\n/**\n * @param {number} startIndex The index of the root.\n * @param {number} index The index of the node to move up.\n * @private\n */\nPriorityQueue.prototype.siftDown_ = function siftDown_ (startIndex, index) {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[index];\n  var priority = priorities[index];\n\n  while (index > startIndex) {\n    var parentIndex = this.getParentIndex_(index);\n    if (priorities[parentIndex] > priority) {\n      elements[index] = elements[parentIndex];\n      priorities[index] = priorities[parentIndex];\n      index = parentIndex;\n    } else {\n      break;\n    }\n  }\n  elements[index] = element;\n  priorities[index] = priority;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.reprioritize = function reprioritize () {\n  var priorityFunction = this.priorityFunction_;\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var index = 0;\n  var n = elements.length;\n  var element, i, priority;\n  for (i = 0; i < n; ++i) {\n    element = elements[i];\n    priority = priorityFunction(element);\n    if (priority == DROP) {\n      delete this.queuedElements_[this.keyFunction_(element)];\n    } else {\n      priorities[index] = priority;\n      elements[index++] = element;\n    }\n  }\n  elements.length = index;\n  priorities.length = index;\n  this.heapify_();\n};\n\n\nexport default PriorityQueue;\n\n//# sourceMappingURL=PriorityQueue.js.map","/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport {listen, unlisten} from './events.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\n\nvar TileQueue = /*@__PURE__*/(function (PriorityQueue) {\n  function TileQueue(tilePriorityFunction, tileChangeCallback) {\n\n    PriorityQueue.call(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      this, function(element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function(element) {\n        return (/** @type {import(\"./Tile.js\").default} */ (element[0]).getKey());\n      });\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n\n  }\n\n  if ( PriorityQueue ) TileQueue.__proto__ = PriorityQueue;\n  TileQueue.prototype = Object.create( PriorityQueue && PriorityQueue.prototype );\n  TileQueue.prototype.constructor = TileQueue;\n\n  /**\n   * @inheritDoc\n   */\n  TileQueue.prototype.enqueue = function enqueue (element) {\n    var added = PriorityQueue.prototype.enqueue.call(this, element);\n    if (added) {\n      var tile = element[0];\n      listen(tile, EventType.CHANGE, this.handleTileChange, this);\n    }\n    return added;\n  };\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  TileQueue.prototype.getTilesLoading = function getTilesLoading () {\n    return this.tilesLoading_;\n  };\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  TileQueue.prototype.handleTileChange = function handleTileChange (event) {\n    var tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    var state = tile.getState();\n    if (tile.hifi && state === TileState.LOADED || state === TileState.ERROR ||\n        state === TileState.EMPTY || state === TileState.ABORT) {\n      unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\n      var tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  };\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  TileQueue.prototype.loadMoreTiles = function loadMoreTiles (maxTotalLoading, maxNewLoads) {\n    var newLoads = 0;\n    var abortedTiles = false;\n    var state, tile, tileKey;\n    while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n           this.getCount() > 0) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.ABORT) {\n        abortedTiles = true;\n      } else if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n    if (newLoads === 0 && abortedTiles) {\n      // Do not stop the render loop when all wanted tiles were aborted due to\n      // a small, saturated tile cache.\n      this.tileChangeCallback_();\n    }\n  };\n\n  return TileQueue;\n}(PriorityQueue));\n\n\nexport default TileQueue;\n\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined)): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @return {Type} The constraint.\n */\nexport function createExtent(extent) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function(center) {\n      if (center) {\n        return [\n          clamp(center[0], extent[0], extent[2]),\n          clamp(center[1], extent[1], extent[3])\n        ];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate=} center Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number): (number|undefined)} Type\n */\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation, delta) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation, delta) {\n  if (rotation !== undefined) {\n    return rotation + delta;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  var theta = 2 * Math.PI / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        rotation = Math.floor((rotation + delta) / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    });\n}\n\n\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  var tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        if (Math.abs(rotation + delta) <= tolerance) {\n          return 0;\n        } else {\n          return rotation + delta;\n        }\n      } else {\n        return undefined;\n      }\n    });\n}\n\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1\n};\n\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation'\n};\n\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number=} opt_precision Precision of the output string (i.e. number of decimal places)\n * @returns {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n  var numberString = opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n  var decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width ? numberString : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @returns {number} Value\n */\nexport function compareVersions(v1, v2) {\n  var s1 = ('' + v1).split('.');\n  var s2 = ('' + v2).split('.');\n\n  for (var i = 0; i < Math.max(s1.length, s2.length); i++) {\n    var n1 = parseInt(s1[i] || '0', 10);\n    var n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n\n//# sourceMappingURL=string.js.map","/**\n * @module ol/coordinate\n */\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  var r = circle.getRadius();\n  var center = circle.getCenter();\n  var x0 = center[0];\n  var y0 = center[1];\n  var x1 = coordinate[0];\n  var y1 = coordinate[1];\n\n  var dx = x1 - x0;\n  var dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  var d = Math.sqrt(dx * dx + dy * dy);\n\n  var x = x0 + r * dx / d;\n  var y = y0 + r * dy / d;\n\n  return [x, y];\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  var x0 = coordinate[0];\n  var y0 = coordinate[1];\n  var start = segment[0];\n  var end = segment[1];\n  var x1 = start[0];\n  var y1 = start[1];\n  var x2 = end[0];\n  var y2 = end[1];\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  var along = (dx === 0 && dy === 0) ? 0 :\n    ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n  var x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function(coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  var x = Math.abs(3600 * normalizedDegrees);\n  var dflPrecision = opt_fractionDigits || 0;\n  var precision = Math.pow(10, dflPrecision);\n\n  var deg = Math.floor(x / 3600);\n  var min = Math.floor((x - deg * 3600) / 60);\n  var sec = x - (deg * 3600) - (min * 60);\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) + '\\u2033' +\n    (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  var equals = true;\n  for (var i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  var cosAngle = Math.cos(angle);\n  var sinAngle = Math.sin(angle);\n  var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  var dx = coord1[0] - coord2[0];\n  var dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate,\n    closestOnSegment(coordinate, segment));\n}\n\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n        degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/easing\n */\n\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n\n//# sourceMappingURL=easing.js.map","/**\n * @module ol/View\n */\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {getUid} from './util.js';\nimport {VOID} from './functions.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport {createSnapToResolutions, createSnapToPower} from './resolutionconstraint.js';\nimport {createSnapToZero, createSnapToN, none as rotationNone, disable} from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual} from './coordinate.js';\nimport {inAndOut} from './easing.js';\nimport {getForViewAndSize, getCenter, getHeight, getWidth, isEmpty} from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport {clamp, modulo} from './math.js';\nimport {assign} from './obj.js';\nimport {createProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\n\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter]\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {import(\"./coordinate.js\").Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center\n * @property {import(\"./resolutionconstraint.js\").Type} resolution\n * @property {import(\"./rotationconstraint.js\").Type} rotation\n */\n\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [constrainResolution=true] Constrain the resolution.\n * @property {boolean} [nearest=false] If `constrainResolution` is `true`, get\n * the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. The coordinate system for the center is specified with the\n * `projection` option. Layer sources will not be fetched if this is not set,\n * but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * center, in other words, center cannot be set outside this extent.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view. The initial\n * resolution is determined using the {@link #constrainResolution} method.\n * @property {number} [zoomFactor=2] The zoom factor used to determine the\n * resolution constraint.\n */\n\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remained fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center\n * @property {import(\"./proj/Projection.js\").default} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * ### The view states\n *\n * An View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * An View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view. Any value can be passed to the setters. And the value\n * that is passed to a setter will effectively be the value set in the view,\n * and returned by the corresponding getter.\n *\n * But a View object also has a *resolution constraint*, a\n * *rotation constraint* and a *center constraint*.\n *\n * As said above, no constraints are applied when the setters are used to set\n * new states for the view. Applying constraints is done explicitly through\n * the use of the `constrain*` functions (`constrainResolution` and\n * `constrainRotation` and `constrainCenter`).\n *\n * The main users of the constraints are the interactions and the\n * controls. For example, double-clicking on the map changes the view to\n * the \"next\" resolution. And releasing the fingers after pinch-zooming\n * snaps to the closest resolution (with an animation).\n *\n * The *resolution constraint* snaps to specific resolutions. It is\n * determined by the following options: `resolutions`, `maxResolution`,\n * `maxZoom`, and `zoomFactor`. If `resolutions` is set, the other three\n * options are ignored. See documentation for each option for more\n * information.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default the rotation value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the center is not constrained at all.\n *\n  * @api\n */\nvar View = /*@__PURE__*/(function (BaseObject) {\n  function View(opt_options) {\n    BaseObject.call(this);\n\n    var options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    this.updateAnimations_ = this.updateAnimations_.bind(this);\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    this.applyOptions_(options);\n  }\n\n  if ( BaseObject ) View.__proto__ = BaseObject;\n  View.prototype = Object.create( BaseObject && BaseObject.prototype );\n  View.prototype.constructor = View;\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  View.prototype.applyOptions_ = function applyOptions_ (options) {\n\n    /**\n     * @type {Object<string, *>}\n     */\n    var properties = {};\n    properties[ViewProperty.CENTER] = options.center !== undefined ?\n      options.center : null;\n\n    var resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    var centerConstraint = createCenterConstraint(options);\n    var resolutionConstraint = resolutionConstraintInfo.constraint;\n    var rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint\n    };\n\n    if (options.resolution !== undefined) {\n      properties[ViewProperty.RESOLUTION] = options.resolution;\n    } else if (options.zoom !== undefined) {\n      properties[ViewProperty.RESOLUTION] = this.constrainResolution(\n        this.maxResolution_, options.zoom - this.minZoom_);\n\n      if (this.resolutions_) { // in case map zoom is out of min/max zoom range\n        properties[ViewProperty.RESOLUTION] = clamp(\n          Number(this.getResolution() || properties[ViewProperty.RESOLUTION]),\n          this.minResolution_, this.maxResolution_);\n      }\n    }\n    properties[ViewProperty.ROTATION] = options.rotation !== undefined ? options.rotation : 0;\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n\n  };\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  View.prototype.getUpdatedOptions_ = function getUpdatedOptions_ (newOptions) {\n    var options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenter();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  };\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  View.prototype.animate = function animate (var_args) {\n    var arguments$1 = arguments;\n\n    var animationCount = arguments.length;\n    var callback;\n    if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      var state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenter(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n    var start = Date.now();\n    var center = this.getCenter().slice();\n    var resolution = this.getResolution();\n    var rotation = this.getRotation();\n    var series = [];\n    for (var i = 0; i < animationCount; ++i) {\n      var options = /** @type {AnimationOptions} */ (arguments$1[i]);\n\n      var animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center;\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.constrainResolution(\n          this.maxResolution_, options.zoom - this.minZoom_, 0);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  };\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  View.prototype.getAnimating = function getAnimating () {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  };\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  View.prototype.getInteracting = function getInteracting () {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  };\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  View.prototype.cancelAnimations = function cancelAnimations () {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n      var series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n    }\n    this.animations_.length = 0;\n  };\n\n  /**\n   * Update all animations.\n   */\n  View.prototype.updateAnimations_ = function updateAnimations_ () {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    var now = Date.now();\n    var more = false;\n    for (var i = this.animations_.length - 1; i >= 0; --i) {\n      var series = this.animations_[i];\n      var seriesComplete = true;\n      for (var j = 0, jj = series.length; j < jj; ++j) {\n        var animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        var elapsed = now - animation.start;\n        var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        var progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          var x0 = animation.sourceCenter[0];\n          var y0 = animation.sourceCenter[1];\n          var x1 = animation.targetCenter[0];\n          var y1 = animation.targetCenter[1];\n          var x = x0 + progress * (x1 - x0);\n          var y = y0 + progress * (y1 - y0);\n          this.set(ViewProperty.CENTER, [x, y]);\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          var resolution = progress === 1 ?\n            animation.targetResolution :\n            animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            this.set(ViewProperty.CENTER,\n              this.calculateCenterZoom(resolution, animation.anchor));\n          }\n          this.set(ViewProperty.RESOLUTION, resolution);\n        }\n        if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n          var rotation = progress === 1 ?\n            modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n            animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            this.set(ViewProperty.CENTER,\n              this.calculateCenterRotate(rotation, animation.anchor));\n          }\n          this.set(ViewProperty.ROTATION, rotation);\n        }\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        var callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_);\n    }\n  };\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  View.prototype.calculateCenterRotate = function calculateCenterRotate (rotation, anchor) {\n    var center;\n    var currentCenter = this.getCenter();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  };\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  View.prototype.calculateCenterZoom = function calculateCenterZoom (resolution, anchor) {\n    var center;\n    var currentCenter = this.getCenter();\n    var currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      var x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n      var y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  };\n\n  /**\n   * @private\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  View.prototype.getSizeFromViewport_ = function getSizeFromViewport_ () {\n    var size = [100, 100];\n    var selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\n    var element = document.querySelector(selector);\n    if (element) {\n      var metrics = getComputedStyle(element);\n      size[0] = parseInt(metrics.width, 10);\n      size[1] = parseInt(metrics.height, 10);\n    }\n    return size;\n  };\n\n  /**\n   * Get the constrained center of this view.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Constrained center.\n   * @api\n   */\n  View.prototype.constrainCenter = function constrainCenter (center) {\n    return this.constraints_.center(center);\n  };\n\n  /**\n   * Get the constrained resolution of this view.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @param {number=} opt_direction Direction. Default is `0`.\n   * @return {number|undefined} Constrained resolution.\n   * @api\n   */\n  View.prototype.constrainResolution = function constrainResolution (resolution, opt_delta, opt_direction) {\n    var delta = opt_delta || 0;\n    var direction = opt_direction || 0;\n    return this.constraints_.resolution(resolution, delta, direction);\n  };\n\n  /**\n   * Get the constrained rotation of this view.\n   * @param {number|undefined} rotation Rotation.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @return {number|undefined} Constrained rotation.\n   * @api\n   */\n  View.prototype.constrainRotation = function constrainRotation (rotation, opt_delta) {\n    var delta = opt_delta || 0;\n    return this.constraints_.rotation(rotation, delta);\n  };\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.getCenter = function getCenter () {\n    return (\n      /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(ViewProperty.CENTER))\n    );\n  };\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  View.prototype.getConstraints = function getConstraints () {\n    return this.constraints_;\n  };\n\n  /**\n   * @param {Array<number>=} opt_hints Destination array.\n   * @return {Array<number>} Hint.\n   */\n  View.prototype.getHints = function getHints (opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  };\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size. If not provided, the size of the\n   * first map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  View.prototype.calculateExtent = function calculateExtent (opt_size) {\n    var size = opt_size || this.getSizeFromViewport_();\n    var center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n    assert(center, 1); // The view center is not defined\n    var resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    var rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  };\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  View.prototype.getMaxResolution = function getMaxResolution () {\n    return this.maxResolution_;\n  };\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  View.prototype.getMinResolution = function getMinResolution () {\n    return this.minResolution_;\n  };\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  View.prototype.getMaxZoom = function getMaxZoom () {\n    return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n  };\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  View.prototype.setMaxZoom = function setMaxZoom (zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  };\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  View.prototype.getMinZoom = function getMinZoom () {\n    return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n  };\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  View.prototype.setMinZoom = function setMinZoom (zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  };\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  View.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.getResolution = function getResolution () {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  };\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  View.prototype.getResolutions = function getResolutions () {\n    return this.resolutions_;\n  };\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size=} opt_size Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  View.prototype.getResolutionForExtent = function getResolutionForExtent (extent, opt_size) {\n    var size = opt_size || this.getSizeFromViewport_();\n    var xResolution = getWidth(extent) / size[0];\n    var yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  };\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  View.prototype.getResolutionForValueFunction = function getResolutionForValueFunction (opt_power) {\n    var power = opt_power || 2;\n    var maxResolution = this.maxResolution_;\n    var minResolution = this.minResolution_;\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function(value) {\n        var resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      });\n  };\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  View.prototype.getRotation = function getRotation () {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  };\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  View.prototype.getValueForResolutionFunction = function getValueForResolutionFunction (opt_power) {\n    var power = opt_power || 2;\n    var maxResolution = this.maxResolution_;\n    var minResolution = this.minResolution_;\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function(resolution) {\n        var value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n        return value;\n      });\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio for center rounding.\n   * @return {State} View state.\n   */\n  View.prototype.getState = function getState (pixelRatio) {\n    var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (this.getCenter());\n    var projection = this.getProjection();\n    var resolution = /** @type {number} */ (this.getResolution());\n    var pixelResolution = resolution / pixelRatio;\n    var rotation = this.getRotation();\n    return {\n      center: [\n        Math.round(center[0] / pixelResolution) * pixelResolution,\n        Math.round(center[1] / pixelResolution) * pixelResolution\n      ],\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      rotation: rotation,\n      zoom: this.getZoom()\n    };\n  };\n\n  /**\n   * Get the current zoom level.  If you configured your view with a resolutions\n   * array (this is rare), this method may return non-integer zoom levels (so\n   * the zoom level is not safe to use as an index into a resolutions array).\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  View.prototype.getZoom = function getZoom () {\n    var zoom;\n    var resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  };\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  View.prototype.getZoomForResolution = function getZoomForResolution (resolution) {\n    var offset = this.minZoom_ || 0;\n    var max, zoomFactor;\n    if (this.resolutions_) {\n      var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  };\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  View.prototype.getResolutionForZoom = function getResolutionForZoom (zoom) {\n    return /** @type {number} */ (this.constrainResolution(\n      this.maxResolution_, zoom - this.minZoom_, 0));\n  };\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions=} opt_options Options.\n   * @api\n   */\n  View.prototype.fit = function fit (geometryOrExtent, opt_options) {\n    var options = opt_options || {};\n    var size = options.size;\n    if (!size) {\n      size = this.getSizeFromViewport_();\n    }\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    var geometry;\n    assert(Array.isArray(geometryOrExtent) || typeof /** @type {?} */ (geometryOrExtent).getSimplifiedGeometry === 'function',\n      24); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent),\n        25); // Cannot fit empty extent provided as `geometry`\n      geometry = polygonFromExtent(geometryOrExtent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      geometryOrExtent = geometryOrExtent.getExtent();\n      geometry = polygonFromExtent(geometryOrExtent);\n      geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\n    } else {\n      geometry = geometryOrExtent;\n    }\n\n    var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    var constrainResolution = options.constrainResolution !== undefined ?\n      options.constrainResolution : true;\n    var nearest = options.nearest !== undefined ? options.nearest : false;\n    var minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.constrainResolution(\n        this.maxResolution_, options.maxZoom - this.minZoom_, 0);\n    } else {\n      minResolution = 0;\n    }\n    var coords = geometry.getFlatCoordinates();\n\n    // calculate rotated extent\n    var rotation = this.getRotation();\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var minRotX = +Infinity;\n    var minRotY = +Infinity;\n    var maxRotX = -Infinity;\n    var maxRotY = -Infinity;\n    var stride = geometry.getStride();\n    for (var i = 0, ii = coords.length; i < ii; i += stride) {\n      var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n\n    // calculate resolution\n    var resolution = this.getResolutionForExtent(\n      [minRotX, minRotY, maxRotX, maxRotY],\n      [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n    resolution = isNaN(resolution) ? minResolution :\n      Math.max(resolution, minResolution);\n    if (constrainResolution) {\n      var constrainedResolution = this.constrainResolution(resolution, 0, 0);\n      if (!nearest && constrainedResolution < resolution) {\n        constrainedResolution = this.constrainResolution(\n          constrainedResolution, -1, 0);\n      }\n      resolution = constrainedResolution;\n    }\n\n    // calculate center\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerRotX = (minRotX + maxRotX) / 2;\n    var centerRotY = (minRotY + maxRotY) / 2;\n    centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n    centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n    var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n    var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n    var center = [centerX, centerY];\n    var callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animate({\n        resolution: resolution,\n        center: center,\n        duration: options.duration,\n        easing: options.easing\n      }, callback);\n    } else {\n      this.setResolution(resolution);\n      this.setCenter(center);\n      animationCallback(callback, true);\n    }\n  };\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  View.prototype.centerOn = function centerOn (coordinate, size, position) {\n    // calculate rotated position\n    var rotation = this.getRotation();\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    var resolution = this.getResolution();\n    rotX += (size[0] / 2 - position[0]) * resolution;\n    rotY += (position[1] - size[1] / 2) * resolution;\n\n    // go back to original angle\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerX = rotX * cosAngle - rotY * sinAngle;\n    var centerY = rotY * cosAngle + rotX * sinAngle;\n\n    this.setCenter([centerX, centerY]);\n  };\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  View.prototype.isDef = function isDef () {\n    return !!this.getCenter() && this.getResolution() !== undefined;\n  };\n\n  /**\n   * Rotate the view around a given coordinate.\n   * @param {number} rotation New rotation value for the view.\n   * @param {import(\"./coordinate.js\").Coordinate=} opt_anchor The rotation center.\n   * @api\n   */\n  View.prototype.rotate = function rotate (rotation, opt_anchor) {\n    if (opt_anchor !== undefined) {\n      var center = this.calculateCenterRotate(rotation, opt_anchor);\n      this.setCenter(center);\n    }\n    this.setRotation(rotation);\n  };\n\n  /**\n   * Set the center of the current view.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.setCenter = function setCenter (center) {\n    this.set(ViewProperty.CENTER, center);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * @param {ViewHint} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  View.prototype.setHint = function setHint (hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  };\n\n  /**\n   * Set the resolution for this view.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.setResolution = function setResolution (resolution) {\n    this.set(ViewProperty.RESOLUTION, resolution);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * Set the rotation for this view.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  View.prototype.setRotation = function setRotation (rotation) {\n    this.set(ViewProperty.ROTATION, rotation);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * Zoom to a specific zoom level.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  View.prototype.setZoom = function setZoom (zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  };\n\n  return View;\n}(BaseObject));\n\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function() {\n    callback(returnValue);\n  }, 0);\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    return createExtent(options.extent);\n  } else {\n    return centerNone;\n  }\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  var resolutionConstraint;\n  var maxResolution;\n  var minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  var defaultMaxZoom = 28;\n  var defaultZoomFactor = 2;\n\n  var minZoom = options.minZoom !== undefined ?\n    options.minZoom : DEFAULT_MIN_ZOOM;\n\n  var maxZoom = options.maxZoom !== undefined ?\n    options.maxZoom : defaultMaxZoom;\n\n  var zoomFactor = options.zoomFactor !== undefined ?\n    options.zoomFactor : defaultZoomFactor;\n\n  if (options.resolutions !== undefined) {\n    var resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution = resolutions[maxZoom] !== undefined ?\n      resolutions[maxZoom] : resolutions[resolutions.length - 1];\n    resolutionConstraint = createSnapToResolutions(\n      resolutions);\n  } else {\n    // calculate the default min and max resolution\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    var extent = projection.getExtent();\n    var size = !extent ?\n      // use an extent that can fit the whole world if need be\n      360 * METERS_PER_UNIT[Units.DEGREES] /\n            projection.getMetersPerUnit() :\n      Math.max(getWidth(extent), getHeight(extent));\n\n    var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(\n      defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    var defaultMinResolution = defaultMaxResolution / Math.pow(\n      defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom = minZoom + Math.floor(\n      Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    resolutionConstraint = createSnapToPower(\n      zoomFactor, maxResolution, maxZoom - minZoom);\n  }\n  return {constraint: resolutionConstraint, maxResolution: maxResolution,\n    minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor};\n}\n\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  var enableRotation = options.enableRotation !== undefined ?\n    options.enableRotation : true;\n  if (enableRotation) {\n    var constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\nexport default View;\n\n//# sourceMappingURL=View.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number, number): (number|undefined)} Type\n */\n\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var z = linearFindNearest(resolutions, resolution, direction);\n        z = clamp(z + delta, 0, resolutions.length - 1);\n        var index = Math.floor(z);\n        if (z != index && index < resolutions.length - 1) {\n          var power = resolutions[index] / resolutions[index + 1];\n          return resolutions[index] / Math.pow(power, z - index);\n        } else {\n          return resolutions[index];\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_maxLevel Maximum level.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_maxLevel) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var offset = -direction / 2 + 0.5;\n        var oldLevel = Math.floor(\n          Math.log(maxResolution / resolution) / Math.log(power) + offset);\n        var newLevel = Math.max(oldLevel + delta, 0);\n        if (opt_maxLevel !== undefined) {\n          newLevel = Math.min(newLevel, opt_maxLevel);\n        }\n        return maxResolution / Math.pow(power, newLevel);\n      } else {\n        return undefined;\n      }\n    });\n}\n\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/dom\n */\n\n\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n  var canvas = /** @type {HTMLCanvasElement} */ (document.createElement('canvas'));\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  var width = element.offsetWidth;\n  var style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  var height = element.offsetHeight;\n  var style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  var parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  var oldChildren = node.childNodes;\n\n  for (var i = 0; true; ++i) {\n    var oldChild = oldChildren[i];\n    var newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  SOURCE: 'source'\n};\n\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/layer/Base\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = /*@__PURE__*/(function (BaseObject) {\n  function BaseLayer(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @type {Object<string, *>}\n     */\n    var properties = assign({}, options);\n    properties[LayerProperty.OPACITY] =\n       options.opacity !== undefined ? options.opacity : 1;\n    properties[LayerProperty.VISIBLE] =\n       options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n       options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n       options.minResolution !== undefined ? options.minResolution : 0;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ = properties.className !== undefined ? options.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n\n  }\n\n  if ( BaseObject ) BaseLayer.__proto__ = BaseObject;\n  BaseLayer.prototype = Object.create( BaseObject && BaseObject.prototype );\n  BaseLayer.prototype.constructor = BaseLayer;\n\n  /**\n   * @return {string} CSS class name.\n   */\n  BaseLayer.prototype.getClassName = function getClassName () {\n    return this.className_;\n  };\n\n  /**\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  BaseLayer.prototype.getLayerState = function getLayerState () {\n    /** @type {import(\"./Layer.js\").State} */\n    var state = this.state_ || /** @type {?} */ ({\n      layer: this,\n      managed: true\n    });\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = this.getZIndex() || 0;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    this.state_ = state;\n\n    return state;\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  BaseLayer.prototype.getLayersArray = function getLayersArray (opt_array) {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  BaseLayer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    return abstract();\n  };\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getExtent = function getExtent () {\n    return (\n      /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT))\n    );\n  };\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getMaxResolution = function getMaxResolution () {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  };\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getMinResolution = function getMinResolution () {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  };\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getOpacity = function getOpacity () {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  };\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  BaseLayer.prototype.getSourceState = function getSourceState () {\n    return abstract();\n  };\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getVisible = function getVisible () {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  };\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.getZIndex = function getZIndex () {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  };\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setExtent = function setExtent (extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  };\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setMaxResolution = function setMaxResolution (maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  };\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setMinResolution = function setMinResolution (minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  };\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setOpacity = function setOpacity (opacity) {\n    this.set(LayerProperty.OPACITY, opacity);\n  };\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setVisible = function setVisible (visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  };\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  BaseLayer.prototype.setZIndex = function setZIndex (zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  };\n\n  return BaseLayer;\n}(BaseObject));\n\n\nexport default BaseLayer;\n\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error'\n};\n\n//# sourceMappingURL=State.js.map","/**\n * @module ol/layer/Group\n */\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getIntersection} from '../extent.js';\nimport BaseLayer from './Base.js';\nimport {assign, clear} from '../obj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LAYERS: 'layers'\n};\n\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = /*@__PURE__*/(function (BaseLayer) {\n  function LayerGroup(opt_options) {\n\n    var options = opt_options || {};\n    var baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    var layers = options.layers;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    listen(this,\n      getChangeEventType(Property.LAYERS),\n      this.handleLayersChanged_, this);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof /** @type {?} */ (layers).getArray === 'function',\n          43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n\n  }\n\n  if ( BaseLayer ) LayerGroup.__proto__ = BaseLayer;\n  LayerGroup.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  LayerGroup.prototype.constructor = LayerGroup;\n\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayerChange_ = function handleLayerChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayersChanged_ = function handleLayersChanged_ () {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    var layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (var id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    var layersArray = layers.getArray();\n    for (var i = 0, ii = layersArray.length; i < ii; i++) {\n      var layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n      ];\n    }\n\n    this.changed();\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersAdd_ = function handleLayersAdd_ (collectionEvent) {\n    var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    this.listenerKeys_[getUid(layer)] = [\n      listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n    ];\n    this.changed();\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersRemove_ = function handleLayersRemove_ (collectionEvent) {\n    var layer = /** @type {import(\"./Base.js\").default} */ (collectionEvent.element);\n    var key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  };\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.getLayers = function getLayers () {\n    return (\n      /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (this.get(Property.LAYERS))\n    );\n  };\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.setLayers = function setLayers (layers) {\n    this.set(Property.LAYERS, layers);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function(layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states !== undefined ? opt_states : [];\n\n    var pos = states.length;\n\n    this.getLayers().forEach(function(layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    var ownLayerState = this.getLayerState();\n    for (var i = pos, ii = states.length; i < ii; i++) {\n      var layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution, ownLayerState.maxResolution);\n      layerState.minResolution = Math.max(\n        layerState.minResolution, ownLayerState.minResolution);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getSourceState = function getSourceState () {\n    return SourceState.READY;\n  };\n\n  return LayerGroup;\n}(BaseLayer));\n\n\nexport default LayerGroup;\n\n//# sourceMappingURL=Group.js.map","/**\n * @module ol/size\n */\n\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n    }\n    return opt_size;\n  }\n}\n\n//# sourceMappingURL=size.js.map","/**\n * @module ol/PluggableMap\n */\nimport {getUid} from './util.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport RenderEventType from './render/EventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {assert} from './asserts.js';\nimport {removeNode} from './dom.js';\nimport {listen, unlistenByKey, unlisten} from './events.js';\nimport EventType from './events/EventType.js';\nimport {createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {DEVICE_PIXEL_RATIO, TOUCH} from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport {hasArea} from './size.js';\nimport {DROP} from './structs/PriorityQueue.js';\nimport {create as createTransform, apply as applyTransform} from './transform.js';\n\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform\n * @property {null|import(\"./extent.js\").Extent} extent\n * @property {import(\"./coordinate.js\").Coordinate} focus\n * @property {number} index\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform\n * @property {Array<PostRenderFunction>} postRenderFunctions\n * @property {import(\"./size.js\").Size} size\n * @property {!Object<string, boolean>} skippedFeatureUids\n * @property {TileQueue} tileQueue\n * @property {!Object<string, Object<string, boolean>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default): boolean} layerFilter Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features.\n */\n\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls]\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {Collection<import(\"./Overlay.js\").default>} overlays\n * @property {Object<string, *>} values\n */\n\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nvar PluggableMap = /*@__PURE__*/(function (BaseObject) {\n  function PluggableMap(options) {\n\n    BaseObject.call(this);\n\n    var optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio !== undefined ?\n      options.pixelRatio : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = function() {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className = 'ol-viewport' + (TOUCH ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n    // prevent page zoom on IE >= 10 browsers\n    this.viewport_.style.msTouchAction = 'none';\n    this.viewport_.style.touchAction = 'none';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, options.moveTolerance);\n    for (var key in MapBrowserEventType) {\n      listen(this.mapBrowserEventHandler_, MapBrowserEventType[key],\n        this.handleMapBrowserEvent, this);\n    }\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    listen(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = this.createRenderer();\n\n    /**\n     * @type {function(Event): void|undefined}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.focus_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this));\n\n    /**\n     * Uids of features to skip at rendering time.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.skippedFeatureUids_ = {};\n\n    listen(\n      this, getChangeEventType(MapProperty.LAYERGROUP),\n      this.handleLayerGroupChanged_, this);\n    listen(this, getChangeEventType(MapProperty.VIEW),\n      this.handleViewChanged_, this);\n    listen(this, getChangeEventType(MapProperty.SIZE),\n      this.handleSizeChanged_, this);\n    listen(this, getChangeEventType(MapProperty.TARGET),\n      this.handleTargetChanged_, this);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      (function(control) {\n        control.setMap(this);\n      }).bind(this));\n\n    listen(this.controls, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n    listen(this.controls, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      (function(interaction) {\n        interaction.setMap(this);\n      }).bind(this));\n\n    listen(this.interactions, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n    listen(this.interactions, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n    listen(this.overlays_, CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        this.addOverlayInternal_(/** @type {import(\"./Overlay.js\").default} */ (event.element));\n      }, this);\n\n    listen(this.overlays_, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        var overlay = /** @type {import(\"./Overlay.js\").default} */ (event.element);\n        var id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }, this);\n\n  }\n\n  if ( BaseObject ) PluggableMap.__proto__ = BaseObject;\n  PluggableMap.prototype = Object.create( BaseObject && BaseObject.prototype );\n  PluggableMap.prototype.constructor = PluggableMap;\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  PluggableMap.prototype.createRenderer = function createRenderer () {\n    throw new Error('Use a map type that has a createRenderer method');\n  };\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  PluggableMap.prototype.addControl = function addControl (control) {\n    this.getControls().push(control);\n  };\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  PluggableMap.prototype.addInteraction = function addInteraction (interaction) {\n    this.getInteractions().push(interaction);\n  };\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  PluggableMap.prototype.addLayer = function addLayer (layer) {\n    var layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  };\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  PluggableMap.prototype.addOverlay = function addOverlay (overlay) {\n    this.getOverlays().push(overlay);\n  };\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  PluggableMap.prototype.addOverlayInternal_ = function addOverlayInternal_ (overlay) {\n    var id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  };\n\n  /**\n   *\n   * @inheritDoc\n   */\n  PluggableMap.prototype.disposeInternal = function disposeInternal () {\n    this.mapBrowserEventHandler_.dispose();\n    unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n    if (this.handleResize_ !== undefined) {\n      removeEventListener(EventType.RESIZE, this.handleResize_, false);\n      this.handleResize_ = undefined;\n    }\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n      this.animationDelayKey_ = undefined;\n    }\n    this.setTarget(null);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./Feature.js\").FeatureLike,\n   *     import(\"./layer/Layer.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  PluggableMap.prototype.forEachFeatureAtPixel = function forEachFeatureAtPixel (pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    var coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options :\n      /** @type {AtPixelOptions} */ ({});\n    var hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    var layerFilter = opt_options.layerFilter !== undefined ?\n      opt_options.layerFilter : TRUE;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, callback, null,\n      layerFilter, null);\n  };\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * `null` if none were found.\n   * @api\n   */\n  PluggableMap.prototype.getFeaturesAtPixel = function getFeaturesAtPixel (pixel, opt_options) {\n    var features = null;\n    this.forEachFeatureAtPixel(pixel, function(feature) {\n      if (!features) {\n        features = [];\n      }\n      features.push(feature);\n    }, opt_options);\n    return features;\n  };\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions=} opt_options Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  PluggableMap.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    var options = opt_options || /** @type {AtPixelOptions} */ ({});\n    var hitTolerance = options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    var layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(pixel, this.frameState_, hitTolerance, callback, layerFilter);\n  };\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions=} opt_options Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @template U\n   * @api\n   */\n  PluggableMap.prototype.hasFeatureAtPixel = function hasFeatureAtPixel (pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    var coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options :\n      /** @type {AtPixelOptions} */ ({});\n    var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    var hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, layerFilter, null);\n  };\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {Event} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  PluggableMap.prototype.getEventCoordinate = function getEventCoordinate (event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  };\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {Event|TouchEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  PluggableMap.prototype.getEventPixel = function getEventPixel (event) {\n    var viewportPosition = this.viewport_.getBoundingClientRect();\n    var eventPosition = 'changedTouches' in event ?\n      /** @type {TouchEvent} */ (event).changedTouches[0] :\n      /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top\n    ];\n  };\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getTarget = function getTarget () {\n    return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n  };\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  PluggableMap.prototype.getTargetElement = function getTargetElement () {\n    var target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string' ? document.getElementById(target) : target;\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  PluggableMap.prototype.getCoordinateFromPixel = function getCoordinateFromPixel (pixel) {\n    var frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n    }\n  };\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  PluggableMap.prototype.getControls = function getControls () {\n    return this.controls;\n  };\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  PluggableMap.prototype.getOverlays = function getOverlays () {\n    return this.overlays_;\n  };\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  PluggableMap.prototype.getOverlayById = function getOverlayById (id) {\n    var overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  };\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  PluggableMap.prototype.getInteractions = function getInteractions () {\n    return this.interactions;\n  };\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getLayerGroup = function getLayerGroup () {\n    return (\n      /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP))\n    );\n  };\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  PluggableMap.prototype.getLayers = function getLayers () {\n    var layers = this.getLayerGroup().getLayers();\n    return layers;\n  };\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  PluggableMap.prototype.getPixelFromCoordinate = function getPixelFromCoordinate (coordinate) {\n    var frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n    }\n  };\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  PluggableMap.prototype.getRenderer = function getRenderer () {\n    return this.renderer_;\n  };\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getSize = function getSize () {\n    return (\n      /** @type {import(\"./size.js\").Size|undefined} */ (this.get(MapProperty.SIZE))\n    );\n  };\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getView = function getView () {\n    return (\n      /** @type {View} */ (this.get(MapProperty.VIEW))\n    );\n  };\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  PluggableMap.prototype.getViewport = function getViewport () {\n    return this.viewport_;\n  };\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  PluggableMap.prototype.getOverlayContainer = function getOverlayContainer () {\n    return this.overlayContainer_;\n  };\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  PluggableMap.prototype.getOverlayContainerStopEvent = function getOverlayContainerStopEvent () {\n    return this.overlayContainerStopEvent_;\n  };\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  PluggableMap.prototype.getTilePriority = function getTilePriority (tile, tileSourceKey, tileCenter, tileResolution) {\n    // Filter out tiles at higher zoom levels than the current zoom level, or that\n    // are outside the visible extent.\n    var frameState = this.frameState_;\n    if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n      return DROP;\n    }\n    if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n      return DROP;\n    }\n    // Prioritize the highest zoom level tiles closest to the focus.\n    // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n    // Within a zoom level, tiles are prioritized by the distance in pixels\n    // between the center of the tile and the focus.  The factor of 65536 means\n    // that the prioritization should behave as desired for tiles up to\n    // 65536 * Math.log(2) = 45426 pixels from the focus.\n    var deltaX = tileCenter[0] - frameState.focus[0];\n    var deltaY = tileCenter[1] - frameState.focus[1];\n    return 65536 * Math.log(tileResolution) +\n        Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n  };\n\n  /**\n   * @param {Event} browserEvent Browser event.\n   * @param {string=} opt_type Type.\n   */\n  PluggableMap.prototype.handleBrowserEvent = function handleBrowserEvent (browserEvent, opt_type) {\n    var type = opt_type || browserEvent.type;\n    var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  };\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  PluggableMap.prototype.handleMapBrowserEvent = function handleMapBrowserEvent (mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    var target = mapBrowserEvent.originalEvent.target;\n    while (target instanceof HTMLElement) {\n      if (target.parentElement === this.overlayContainerStopEvent_) {\n        return;\n      }\n      target = target.parentElement;\n    }\n    this.focus_ = mapBrowserEvent.coordinate;\n    mapBrowserEvent.frameState = this.frameState_;\n    var interactionsArray = this.getInteractions().getArray();\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      for (var i = interactionsArray.length - 1; i >= 0; i--) {\n        var interaction = interactionsArray[i];\n        if (!interaction.getActive()) {\n          continue;\n        }\n        var cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont) {\n          break;\n        }\n      }\n    }\n  };\n\n  /**\n   * @protected\n   */\n  PluggableMap.prototype.handlePostRender = function handlePostRender () {\n\n    var frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    var tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      var maxTotalLoading = this.maxTilesLoading_;\n      var maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        var hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          var lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.hasListener(RenderEventType.RENDERCOMPLETE) && !frameState.animate &&\n        !this.tileQueue_.getTilesLoading() && !getLoading(this.getLayers().getArray())) {\n      this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n    }\n\n    var postRenderFunctions = this.postRenderFunctions_;\n    for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleSizeChanged_ = function handleSizeChanged_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleTargetChanged_ = function handleTargetChanged_ () {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    var targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.keyHandlerKeys_) {\n      for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n    }\n\n    if (!targetElement) {\n      this.renderer_.removeLayerRenderers();\n      removeNode(this.viewport_);\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n\n      var keyboardEventTarget = !this.keyboardEventTarget_ ?\n        targetElement : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n        listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleTileChange_ = function handleTileChange_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleViewPropertyChanged_ = function handleViewPropertyChanged_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleViewChanged_ = function handleViewChanged_ () {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    var view = this.getView();\n    if (view) {\n      this.viewport_.setAttribute('data-view', getUid(view));\n      this.viewPropertyListenerKey_ = listen(\n        view, ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_, this);\n      this.viewChangeListenerKey_ = listen(\n        view, EventType.CHANGE,\n        this.handleViewPropertyChanged_, this);\n    }\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleLayerGroupChanged_ = function handleLayerGroupChanged_ () {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    var layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(\n          layerGroup, ObjectEventType.PROPERTYCHANGE,\n          this.render, this),\n        listen(\n          layerGroup, EventType.CHANGE,\n          this.render, this)\n      ];\n    }\n    this.render();\n  };\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  PluggableMap.prototype.isRendered = function isRendered () {\n    return !!this.frameState_;\n  };\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  PluggableMap.prototype.renderSync = function renderSync () {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  };\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  PluggableMap.prototype.render = function render () {\n    if (this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  };\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeControl = function removeControl (control) {\n    return this.getControls().remove(control);\n  };\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeInteraction = function removeInteraction (interaction) {\n    return this.getInteractions().remove(interaction);\n  };\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeLayer = function removeLayer (layer) {\n    var layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  };\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeOverlay = function removeOverlay (overlay) {\n    return this.getOverlays().remove(overlay);\n  };\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  PluggableMap.prototype.renderFrame_ = function renderFrame_ (time) {\n    var viewState;\n\n    var size = this.getSize();\n    var view = this.getView();\n    var extent = createEmpty();\n    var previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    var frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n      viewState = view.getState(this.pixelRatio_);\n      frameState = /** @type {FrameState} */ ({\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        extent: extent,\n        focus: this.focus_ ? this.focus_ : viewState.center,\n        index: this.frameIndex_++,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        skippedFeatureUids: this.skippedFeatureUids_,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {}\n      });\n    }\n\n    if (frameState) {\n      frameState.extent = getForViewAndSize(viewState.center,\n        viewState.resolution, viewState.rotation, frameState.size, extent);\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n\n      if (previousFrameState) {\n        var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                    !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      var idle = this.previousExtent_ &&\n          !frameState.viewHints[ViewHint.ANIMATING] &&\n          !frameState.viewHints[ViewHint.INTERACTING] &&\n          !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    setTimeout(this.handlePostRender.bind(this), 0);\n\n  };\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setLayerGroup = function setLayerGroup (layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  };\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setSize = function setSize (size) {\n    this.set(MapProperty.SIZE, size);\n  };\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string|undefined} target The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setTarget = function setTarget (target) {\n    this.set(MapProperty.TARGET, target);\n  };\n\n  /**\n   * Set the view for this map.\n   * @param {View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setView = function setView (view) {\n    this.set(MapProperty.VIEW, view);\n  };\n\n  /**\n   * @param {import(\"./Feature.js\").default} feature Feature.\n   */\n  PluggableMap.prototype.skipFeature = function skipFeature (feature) {\n    this.skippedFeatureUids_[getUid(feature)] = true;\n    this.render();\n  };\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  PluggableMap.prototype.updateSize = function updateSize () {\n    var targetElement = this.getTargetElement();\n\n    if (!targetElement) {\n      this.setSize(undefined);\n    } else {\n      var computedStyle = getComputedStyle(targetElement);\n      this.setSize([\n        targetElement.offsetWidth -\n            parseFloat(computedStyle['borderLeftWidth']) -\n            parseFloat(computedStyle['paddingLeft']) -\n            parseFloat(computedStyle['paddingRight']) -\n            parseFloat(computedStyle['borderRightWidth']),\n        targetElement.offsetHeight -\n            parseFloat(computedStyle['borderTopWidth']) -\n            parseFloat(computedStyle['paddingTop']) -\n            parseFloat(computedStyle['paddingBottom']) -\n            parseFloat(computedStyle['borderBottomWidth'])\n      ]);\n    }\n  };\n\n  /**\n   * @param {import(\"./Feature.js\").default} feature Feature.\n   */\n  PluggableMap.prototype.unskipFeature = function unskipFeature (feature) {\n    delete this.skippedFeatureUids_[getUid(feature)];\n    this.render();\n  };\n\n  return PluggableMap;\n}(BaseObject));\n\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n\n  /**\n   * @type {HTMLElement|Document}\n   */\n  var keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n      document.getElementById(options.keyboardEventTarget) :\n      options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  var values = {};\n\n  var layerGroup = options.layers && typeof /** @type {?} */ (options.layers).getLayers === 'function' ?\n    /** @type {LayerGroup} */ (options.layers) : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] = options.view !== undefined ?\n    options.view : new View();\n\n  var controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.controls).getArray === 'function',\n        47); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  var interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.interactions).getArray === 'function',\n        48); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  var overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(typeof /** @type {?} */ (options.overlays).getArray === 'function',\n        49); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values\n  };\n\n}\nexport default PluggableMap;\n\n/**\n * @param  {Array<import(\"./layer/Base.js\").default>} layers Layers.\n * @return {boolean} Layers have sources that are still loading.\n */\nfunction getLoading(layers) {\n  for (var i = 0, ii = layers.length; i < ii; ++i) {\n    var layer = layers[i];\n    if (typeof /** @type {?} */ (layer).getLayers === 'function') {\n      return getLoading(/** @type {LayerGroup} */ (layer).getLayers().getArray());\n    } else {\n      var source = /** @type {import(\"./layer/Layer.js\").default} */ (\n        layer).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\n//# sourceMappingURL=PluggableMap.js.map","/**\n * @module ol/control/Control\n */\nimport {VOID} from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {removeNode} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = /*@__PURE__*/(function (BaseObject) {\n  function Control(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = options.element ? options.element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    /**\n     * @type {function(import(\"../MapEvent.js\").default): void}\n     */\n    this.render = options.render ? options.render : VOID;\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n\n  }\n\n  if ( BaseObject ) Control.__proto__ = BaseObject;\n  Control.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Control.prototype.constructor = Control;\n\n  /**\n   * @inheritDoc\n   */\n  Control.prototype.disposeInternal = function disposeInternal () {\n    removeNode(this.element);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  Control.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  Control.prototype.setMap = function setMap (map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      var target = this.target_ ?\n        this.target_ : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(listen(map,\n          MapEventType.POSTRENDER, this.render, this));\n      }\n      map.render();\n    }\n  };\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  Control.prototype.setTarget = function setTarget (target) {\n    this.target_ = typeof target === 'string' ?\n      document.getElementById(target) :\n      target;\n  };\n\n  return Control;\n}(BaseObject));\n\n\nexport default Control;\n\n//# sourceMappingURL=Control.js.map","/**\n * @module ol/css\n */\n\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {Object<string>} The font families (or null if the input spec is invalid).\n */\nexport var getFontFamilies = (function() {\n  var style;\n  var cache = {};\n  return function(font) {\n    if (!style) {\n      style = document.createElement('div').style;\n    }\n    if (!(font in cache)) {\n      style.font = font;\n      var family = style.fontFamily;\n      style.font = '';\n      if (!family) {\n        return null;\n      }\n      cache[font] = family.split(/,\\s?/);\n    }\n    return cache[font];\n  };\n})();\n\n//# sourceMappingURL=css.js.map","/**\n * @module ol/layer/Layer\n */\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Base.js\").default} layer\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {SourceState} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n */\nvar Layer = /*@__PURE__*/(function (BaseLayer) {\n  function Layer(options) {\n\n    var baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../renderer/Layer.js\").default}\n     */\n    this.renderer_ = null;\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    listen(this,\n      getChangeEventType(LayerProperty.SOURCE),\n      this.handleSourcePropertyChange_, this);\n\n    var source = options.source ? options.source : null;\n    this.setSource(source);\n  }\n\n  if ( BaseLayer ) Layer.__proto__ = BaseLayer;\n  Layer.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  Layer.prototype.constructor = Layer;\n\n  /**\n   * @inheritDoc\n   */\n  Layer.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Layer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  };\n\n  /**\n   * Get the layer source.\n   * @return {import(\"../source/Source.js\").default} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  Layer.prototype.getSource = function getSource () {\n    var source = this.get(LayerProperty.SOURCE);\n    return (\n      /** @type {import(\"../source/Source.js\").default} */ (source) || null\n    );\n  };\n\n  /**\n    * @inheritDoc\n    */\n  Layer.prototype.getSourceState = function getSourceState () {\n    var source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  };\n\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourceChange_ = function handleSourceChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourcePropertyChange_ = function handleSourcePropertyChange_ () {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    var source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(source,\n        EventType.CHANGE, this.handleSourceChange_, this);\n    }\n    this.changed();\n  };\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {HTMLElement} The rendered element.\n   */\n  Layer.prototype.render = function render (frameState) {\n    var layerRenderer = this.getRenderer();\n    var layerState = this.getLayerState();\n    if (layerRenderer.prepareFrame(frameState, layerState)) {\n      return layerRenderer.renderFrame(frameState, layerState);\n    }\n  };\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  Layer.prototype.setMap = function setMap (map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function(evt) {\n        var renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n        var layerState = this.getLayerState();\n        layerState.managed = false;\n        if (this.getZIndex() === undefined) {\n          layerState.zIndex = Infinity;\n        }\n        renderEvent.frameState.layerStatesArray.push(layerState);\n      }, this);\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  };\n\n  /**\n   * Set the layer source.\n   * @param {import(\"../source/Source.js\").default} source The layer source.\n   * @observable\n   * @api\n   */\n  Layer.prototype.setSource = function setSource (source) {\n    this.set(LayerProperty.SOURCE, source);\n  };\n\n  /**\n   * Get the renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n   */\n  Layer.prototype.getRenderer = function getRenderer () {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  };\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  Layer.prototype.createRenderer = function createRenderer () {\n    return null;\n  };\n\n  return Layer;\n}(BaseLayer));\n\n\n/**\n * Return `true` if the layer is visible, and if the passed resolution is\n * between the layer's minResolution and maxResolution. The comparison is\n * inclusive for `minResolution` and exclusive for `maxResolution`.\n * @param {State} layerState Layer state.\n * @param {number} resolution Resolution.\n * @return {boolean} The layer is visible at the given resolution.\n */\nexport function visibleAtResolution(layerState, resolution) {\n  return layerState.visible && resolution >= layerState.minResolution &&\n      resolution < layerState.maxResolution;\n}\n\n\nexport default Layer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/control/Attribution\n */\nimport {equals} from '../array.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = /*@__PURE__*/(function (Control) {\n  function Attribution(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ = options.collapsible !== undefined ?\n      options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    var className = options.className !== undefined ? options.className : 'ol-attribution';\n\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    var label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n\n    var activeLabel = (this.collapsible_ && !this.collapsed_) ?\n      this.collapseLabel_ : this.label_;\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n        (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n        (this.collapsible_ ? '' : ' ol-uncollapsible');\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ulElement_);\n    element.appendChild(button);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n  }\n\n  if ( Control ) Attribution.__proto__ = Control;\n  Attribution.prototype = Object.create( Control && Control.prototype );\n  Attribution.prototype.constructor = Attribution;\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  Attribution.prototype.collectSourceAttributions_ = function collectSourceAttributions_ (frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    var lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    var visibleAttributions = [];\n\n    var layerStatesArray = frameState.layerStatesArray;\n    var resolution = frameState.viewState.resolution;\n    for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      if (!visibleAtResolution(layerState, resolution)) {\n        continue;\n      }\n\n      var source = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer).getSource();\n      if (!source) {\n        continue;\n      }\n\n      var attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      var attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      if (!this.overrideCollapsible_ && source.getAttributionsCollapsible() === false) {\n        this.setCollapsible(false);\n      }\n\n      if (Array.isArray(attributions)) {\n        for (var j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    return visibleAttributions;\n  };\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  Attribution.prototype.updateElement_ = function updateElement_ (frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var attributions = this.collectSourceAttributions_(frameState);\n\n    var visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (var i = 0, ii = attributions.length; i < ii; ++i) {\n      var element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  };\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Attribution.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleToggle_();\n  };\n\n  /**\n   * @private\n   */\n  Attribution.prototype.handleToggle_ = function handleToggle_ () {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n  };\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.getCollapsible = function getCollapsible () {\n    return this.collapsible_;\n  };\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.setCollapsible = function setCollapsible (collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  };\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.setCollapsed = function setCollapsed (collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  };\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.getCollapsed = function getCollapsed () {\n    return this.collapsed_;\n  };\n\n  return Attribution;\n}(Control));\n\n\n/**\n * Update the attribution element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Attribution}\n * @api\n */\nexport function render(mapEvent) {\n  this.updateElement_(mapEvent.frameState);\n}\n\n\nexport default Attribution;\n\n//# sourceMappingURL=Attribution.js.map","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = /*@__PURE__*/(function (Control) {\n  function Rotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    var className = options.className !== undefined ? options.className : 'ol-rotate';\n\n    var label = options.label !== undefined ? options.label : '\\u21E7';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = 'ol-compass';\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add('ol-compass');\n    }\n\n    var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    var button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n\n  }\n\n  if ( Control ) Rotate.__proto__ = Control;\n  Rotate.prototype = Object.create( Control && Control.prototype );\n  Rotate.prototype.constructor = Rotate;\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Rotate.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  };\n\n  /**\n   * @private\n   */\n  Rotate.prototype.resetNorth_ = function resetNorth_ () {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    if (view.getRotation() !== undefined) {\n      if (this.duration_ > 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  };\n\n  return Rotate;\n}(Control));\n\n\n/**\n * Update the rotate control element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {Rotate}\n * @api\n */\nexport function render(mapEvent) {\n  var frameState = mapEvent.frameState;\n  if (!frameState) {\n    return;\n  }\n  var rotation = frameState.viewState.rotation;\n  if (rotation != this.rotation_) {\n    var transform = 'rotate(' + rotation + 'rad)';\n    if (this.autoHide_) {\n      var contains = this.element.classList.contains(CLASS_HIDDEN);\n      if (!contains && rotation === 0) {\n        this.element.classList.add(CLASS_HIDDEN);\n      } else if (contains && rotation !== 0) {\n        this.element.classList.remove(CLASS_HIDDEN);\n      }\n    }\n    this.label_.style.msTransform = transform;\n    this.label_.style.webkitTransform = transform;\n    this.label_.style.transform = transform;\n  }\n  this.rotation_ = rotation;\n}\n\nexport default Rotate;\n\n//# sourceMappingURL=Rotate.js.map","/**\n * @module ol/control/Zoom\n */\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = /*@__PURE__*/(function (Control) {\n  function Zoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    var className = options.className !== undefined ? options.className : 'ol-zoom';\n\n    var delta = options.delta !== undefined ? options.delta : 1;\n\n    var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    var zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n      options.zoomInTipLabel : 'Zoom in';\n    var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n      options.zoomOutTipLabel : 'Zoom out';\n\n    var inElement = document.createElement('button');\n    inElement.className = className + '-in';\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel\n    );\n\n    listen(inElement, EventType.CLICK, this.handleClick_.bind(this, delta));\n\n    var outElement = document.createElement('button');\n    outElement.className = className + '-out';\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel\n    );\n\n    listen(outElement, EventType.CLICK, this.handleClick_.bind(this, -delta));\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( Control ) Zoom.__proto__ = Control;\n  Zoom.prototype = Object.create( Control && Control.prototype );\n  Zoom.prototype.constructor = Zoom;\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Zoom.prototype.handleClick_ = function handleClick_ (delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  };\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  Zoom.prototype.zoomByDelta_ = function zoomByDelta_ (delta) {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    var currentResolution = view.getResolution();\n    if (currentResolution) {\n      var newResolution = view.constrainResolution(currentResolution, delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          resolution: newResolution,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setResolution(newResolution);\n      }\n    }\n  };\n\n  return Zoom;\n}(Control));\n\n\nexport default Zoom;\n\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/control/util\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions=} opt_options\n * Defaults options.\n * @return {Collection<import(\"./Control.js\").default>}\n * Controls.\n * @function module:ol/control.defaults\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var controls = new Collection();\n\n  var zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  var rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  var attributionControl = options.attribution !== undefined ?\n    options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n\n//# sourceMappingURL=util.js.map","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active'\n};\n\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from './Property.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = /*@__PURE__*/(function (BaseObject) {\n  function Interaction(options) {\n    BaseObject.call(this);\n\n    if (options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  if ( BaseObject ) Interaction.__proto__ = BaseObject;\n  Interaction.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Interaction.prototype.constructor = Interaction;\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.getActive = function getActive () {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  };\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  Interaction.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  Interaction.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    return true;\n  };\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.setActive = function setActive (active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  };\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  Interaction.prototype.setMap = function setMap (map) {\n    this.map_ = map;\n  };\n\n  return Interaction;\n}(BaseObject));\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  var currentCenter = view.getCenter();\n  if (currentCenter) {\n    var center = view.constrainCenter(\n      [currentCenter[0] + delta[0], currentCenter[1] + delta[1]]);\n    if (opt_duration) {\n      view.animate({\n        duration: opt_duration,\n        easing: linear,\n        center: center\n      });\n    } else {\n      view.setCenter(center);\n    }\n  }\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotate(view, rotation, opt_anchor, opt_duration) {\n  rotation = view.constrainRotation(rotation, 0);\n  rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration) {\n  if (rotation !== undefined) {\n    var currentRotation = view.getRotation();\n    var currentCenter = view.getCenter();\n    if (currentRotation !== undefined && currentCenter && opt_duration > 0) {\n      view.animate({\n        rotation: rotation,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      view.rotate(rotation, opt_anchor);\n    }\n  }\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n * @param {number=} opt_direction Zooming direction; > 0 indicates\n *     zooming out, in which case the constraints system will select\n *     the largest nearest resolution; < 0 indicates zooming in, in\n *     which case the constraints system will select the smallest\n *     nearest resolution; == 0 indicates that the zooming direction\n *     is unknown/not relevant, in which case the constraints system\n *     will select the nearest resolution. If not defined 0 is\n *     assumed.\n */\nexport function zoom(view, resolution, opt_anchor, opt_duration, opt_direction) {\n  resolution = view.constrainResolution(resolution, 0, opt_direction);\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  var currentResolution = view.getResolution();\n  var resolution = view.constrainResolution(currentResolution, delta, 0);\n\n  if (resolution !== undefined) {\n    var resolutions = view.getResolutions();\n    resolution = clamp(\n      resolution,\n      view.getMinResolution() || resolutions[resolutions.length - 1],\n      view.getMaxResolution() || resolutions[0]);\n  }\n\n  // If we have a constraint on center, we need to change the anchor so that the\n  // new center is within the extent. We first calculate the new center, apply\n  // the constraint to it, and then calculate back the anchor\n  if (opt_anchor && resolution !== undefined && resolution !== currentResolution) {\n    var currentCenter = view.getCenter();\n    var center = view.calculateCenterZoom(resolution, opt_anchor);\n    center = view.constrainCenter(center);\n\n    opt_anchor = [\n      (resolution * currentCenter[0] - currentResolution * center[0]) /\n          (resolution - currentResolution),\n      (resolution * currentCenter[1] - currentResolution * center[1]) /\n          (resolution - currentResolution)\n    ];\n  }\n\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration) {\n  if (resolution) {\n    var currentResolution = view.getResolution();\n    var currentCenter = view.getCenter();\n    if (currentResolution !== undefined && currentCenter &&\n        resolution !== currentResolution && opt_duration) {\n      view.animate({\n        resolution: resolution,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      if (opt_anchor) {\n        var center = view.calculateCenterZoom(resolution, opt_anchor);\n        view.setCenter(center);\n      }\n      view.setResolution(resolution);\n    }\n  }\n}\n\nexport default Interaction;\n\n//# sourceMappingURL=Interaction.js.map","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = /*@__PURE__*/(function (Interaction) {\n  function DoubleClickZoom(opt_options) {\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( Interaction ) DoubleClickZoom.__proto__ = Interaction;\n  DoubleClickZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  DoubleClickZoom.prototype.constructor = DoubleClickZoom;\n\n  return DoubleClickZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n    var browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    var map = mapBrowserEvent.map;\n    var anchor = mapBrowserEvent.coordinate;\n    var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n    var view = map.getView();\n    zoomByDelta(view, delta, anchor, this.duration_);\n    mapBrowserEvent.preventDefault();\n    stopEvent = true;\n  }\n  return !stopEvent;\n}\n\nexport default DoubleClickZoom;\n\n//# sourceMappingURL=DoubleClickZoom.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {assert} from '../asserts.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport {WEBKIT, MAC} from '../has.js';\n\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function(event) {\n  return event.target.getTargetElement() === document.activeElement;\n};\n\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport var always = TRUE;\n\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function(mapBrowserEvent) {\n  var originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n  return originalEvent.button == 0 &&\n      !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport var never = FALSE;\n\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey;\n};\n\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function(mapBrowserEvent) {\n  var target = mapBrowserEvent.originalEvent.target;\n  var tagName = /** @type {Element} */ (target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n      tagName !== 'SELECT' &&\n      tagName !== 'TEXTAREA');\n};\n\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function(mapBrowserEvent) {\n  var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function(mapBrowserEvent) {\n  var pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n\n//# sourceMappingURL=condition.js.map","/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\nimport {getValues} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = /*@__PURE__*/(function (Interaction) {\n  function PointerInteraction(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(/** @type {import(\"./Interaction.js\").InteractionOptions} */ this, (options));\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, import(\"../pointer/PointerEvent.js\").default>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<import(\"../pointer/PointerEvent.js\").default>}\n     * @protected\n     */\n    this.targetPointers = [];\n\n  }\n\n  if ( Interaction ) PointerInteraction.__proto__ = Interaction;\n  PointerInteraction.prototype = Object.create( Interaction && Interaction.prototype );\n  PointerInteraction.prototype.constructor = PointerInteraction;\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  PointerInteraction.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    return false;\n  };\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  PointerInteraction.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {};\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @override\n   * @api\n   */\n  PointerInteraction.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    if (!(/** @type {import(\"../MapBrowserPointerEvent.js\").default} */ (mapBrowserEvent).pointerEvent)) {\n      return true;\n    }\n\n    var stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        var handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        var handled = this.handleDownEvent(mapBrowserEvent);\n        if (handled) {\n          mapBrowserEvent.preventDefault();\n        }\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  };\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  PointerInteraction.prototype.handleMoveEvent = function handleMoveEvent (mapBrowserEvent) {};\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  PointerInteraction.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    return false;\n  };\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  PointerInteraction.prototype.stopDown = function stopDown (handled) {\n    return handled;\n  };\n\n  /**\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  PointerInteraction.prototype.updateTrackedPointers_ = function updateTrackedPointers_ (mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      var event = mapBrowserEvent.pointerEvent;\n\n      var id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type ==\n          MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  };\n\n  return PointerInteraction;\n}(Interaction));\n\n\n/**\n * @param {Array<import(\"../pointer/PointerEvent.js\").default>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  var length = pointerEvents.length;\n  var clientX = 0;\n  var clientY = 0;\n  for (var i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n\n/**\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  var type = mapBrowserEvent.type;\n  return type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP;\n}\n\n\nexport default PointerInteraction;\n\n//# sourceMappingURL=Pointer.js.map","/**\n * @module ol/interaction/DragPan\n */\nimport ViewHint from '../ViewHint.js';\nimport {scale as scaleCoordinate, rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {noModifierKeys} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys}.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = /*@__PURE__*/(function (PointerInteraction) {\n  function DragPan(opt_options) {\n\n    PointerInteraction.call(this, {\n      stopDown: FALSE\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n\n  }\n\n  if ( PointerInteraction ) DragPan.__proto__ = PointerInteraction;\n  DragPan.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragPan.prototype.constructor = DragPan;\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().setHint(ViewHint.INTERACTING, 1);\n    }\n    var targetPointers = this.targetPointers;\n    var centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        var deltaX = this.lastCentroid[0] - centroid[0];\n        var deltaY = centroid[1] - this.lastCentroid[1];\n        var map = mapBrowserEvent.map;\n        var view = map.getView();\n        var center = [deltaX, deltaY];\n        scaleCoordinate(center, view.getResolution());\n        rotateCoordinate(center, view.getRotation());\n        addCoordinate(center, view.getCenter());\n        center = view.constrainCenter(center);\n        view.setCenter(center);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        var distance = this.kinetic_.getDistance();\n        var angle = this.kinetic_.getAngle();\n        var center = /** @type {!import(\"../coordinate.js\").Coordinate} */ (view.getCenter());\n        var centerpx = map.getPixelFromCoordinate(center);\n        var dest = map.getCoordinateFromPixel([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle)\n        ]);\n        view.animate({\n          center: view.constrainCenter(dest),\n          duration: 500,\n          easing: easeOut\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.setHint(ViewHint.INTERACTING, -1);\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragPan.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.setCenter(mapBrowserEvent.frameState.viewState.center);\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragPan;\n}(PointerInteraction));\n\nexport default DragPan;\n\n//# sourceMappingURL=DragPan.js.map","/**\n * @module ol/interaction/DragRotate\n */\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {altShiftKeysOnly, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from './Interaction.js';\nimport PointerInteraction from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = /*@__PURE__*/(function (PointerInteraction) {\n  function DragRotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    PointerInteraction.call(this, {\n      stopDown: FALSE\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) DragRotate.__proto__ = PointerInteraction;\n  DragRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragRotate.prototype.constructor = DragRotate;\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    var size = map.getSize();\n    var offset = mapBrowserEvent.pixel;\n    var theta =\n        Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      var delta = theta - this.lastAngle_;\n      var rotation = view.getRotation();\n      rotateWithoutConstraints(view, rotation - delta);\n    }\n    this.lastAngle_ = theta;\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    var rotation = view.getRotation();\n    rotate(view, rotation, undefined, this.duration_);\n    return false;\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  DragRotate.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n      var map = mapBrowserEvent.map;\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragRotate;\n}(PointerInteraction));\n\nexport default DragRotate;\n\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nvar RenderBox = /*@__PURE__*/(function (Disposable) {\n  function RenderBox(className) {\n    Disposable.call(this);\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = /** @type {HTMLDivElement} */ (document.createElement('div'));\n    this.element_.style.position = 'absolute';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n\n  }\n\n  if ( Disposable ) RenderBox.__proto__ = Disposable;\n  RenderBox.prototype = Object.create( Disposable && Disposable.prototype );\n  RenderBox.prototype.constructor = RenderBox;\n\n  /**\n   * @inheritDoc\n   */\n  RenderBox.prototype.disposeInternal = function disposeInternal () {\n    this.setMap(null);\n  };\n\n  /**\n   * @private\n   */\n  RenderBox.prototype.render_ = function render_ () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var px = 'px';\n    var style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  RenderBox.prototype.setMap = function setMap (map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      var style = this.element_.style;\n      style.left = style.top = style.width = style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  };\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  RenderBox.prototype.setPixels = function setPixels (startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  };\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  RenderBox.prototype.createOrUpdateGeometry = function createOrUpdateGeometry () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]]\n    ];\n    var coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  };\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  RenderBox.prototype.getGeometry = function getGeometry () {\n    return this.geometry_;\n  };\n\n  return RenderBox;\n}(Disposable));\n\n\nexport default RenderBox;\n\n//# sourceMappingURL=Box.js.map","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {always, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {VOID} from '../functions.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\n\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = /*@__PURE__*/(function (Event) {\n  function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n    Event.call(this, type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n\n  }\n\n  if ( Event ) DragBoxEvent.__proto__ = Event;\n  DragBoxEvent.prototype = Object.create( Event && Event.prototype );\n  DragBoxEvent.prototype.constructor = DragBoxEvent;\n\n  return DragBoxEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @fires DragBoxEvent\n * @api\n */\nvar DragBox = /*@__PURE__*/(function (PointerInteraction) {\n  function DragBox(opt_options) {\n\n    PointerInteraction.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @type {function(this:DragBox, import(\"../MapBrowserEvent.js\").default): void}\n     * @private\n     */\n    this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : VOID;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition ?\n      options.boxEndCondition : this.defaultBoxEndCondition;\n  }\n\n  if ( PointerInteraction ) DragBox.__proto__ = PointerInteraction;\n  DragBox.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragBox.prototype.constructor = DragBox;\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  DragBox.prototype.defaultBoxEndCondition = function defaultBoxEndCondition (mapBrowserEvent, startPixel, endPixel) {\n    var width = endPixel[0] - startPixel[0];\n    var height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  };\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  DragBox.prototype.getGeometry = function getGeometry () {\n    return this.box_.getGeometry();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    this.box_.setMap(null);\n\n    if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n      this.onBoxEnd_(mapBrowserEvent);\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND,\n        mapBrowserEvent.coordinate, mapBrowserEvent));\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragBox.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (mouseActionButton(mapBrowserEvent) &&\n        this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART,\n        mapBrowserEvent.coordinate, mapBrowserEvent));\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragBox;\n}(PointerInteraction));\n\n\nexport default DragBox;\n\n//# sourceMappingURL=DragBox.js.map","/**\n * @module ol/interaction/DragZoom\n */\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport {createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter} from '../extent.js';\nimport DragBox from './DragBox.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = /*@__PURE__*/(function (DragBox) {\n  function DragZoom(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var condition = options.condition ? options.condition : shiftKeyOnly;\n\n    DragBox.call(this, {\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      onBoxEnd: onBoxEnd\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  if ( DragBox ) DragZoom.__proto__ = DragBox;\n  DragZoom.prototype = Object.create( DragBox && DragBox.prototype );\n  DragZoom.prototype.constructor = DragZoom;\n\n  return DragZoom;\n}(DragBox));\n\n\n/**\n * @this {DragZoom}\n */\nfunction onBoxEnd() {\n  var map = this.getMap();\n  var view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n  var size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n  var extent = this.getGeometry().getExtent();\n\n  if (this.out_) {\n    var mapExtent = view.calculateExtent(size);\n    var boxPixelExtent = createOrUpdateFromCoordinates([\n      map.getPixelFromCoordinate(getBottomLeft(extent)),\n      map.getPixelFromCoordinate(getTopRight(extent))]);\n    var factor = view.getResolutionForExtent(boxPixelExtent, size);\n\n    scaleFromCenter(mapExtent, 1 / factor);\n    extent = mapExtent;\n  }\n\n  var resolution = view.constrainResolution(\n    view.getResolutionForExtent(extent, size));\n\n  var center = getCenter(extent);\n  center = view.constrainCenter(center);\n\n  view.animate({\n    resolution: resolution,\n    center: center,\n    duration: this.duration_,\n    easing: easeOut\n  });\n}\n\n\nexport default DragZoom;\n\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40\n};\n\n//# sourceMappingURL=KeyCode.js.map","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = /*@__PURE__*/(function (Interaction) {\n  function KeyboardPan(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function(mapBrowserEvent) {\n      return noModifierKeys(mapBrowserEvent) &&\n        targetNotEditable(mapBrowserEvent);\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition !== undefined ?\n      options.condition : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ = options.pixelDelta !== undefined ?\n      options.pixelDelta : 128;\n\n  }\n\n  if ( Interaction ) KeyboardPan.__proto__ = Interaction;\n  KeyboardPan.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardPan.prototype.constructor = KeyboardPan;\n\n  return KeyboardPan;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN) {\n    var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n    var keyCode = keyEvent.keyCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n        keyCode == KeyCode.LEFT ||\n        keyCode == KeyCode.RIGHT ||\n        keyCode == KeyCode.UP)) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n      var deltaX = 0, deltaY = 0;\n      if (keyCode == KeyCode.DOWN) {\n        deltaY = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.LEFT) {\n        deltaX = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.RIGHT) {\n        deltaX = mapUnitsDelta;\n      } else {\n        deltaY = mapUnitsDelta;\n      }\n      var delta = [deltaX, deltaY];\n      rotateCoordinate(delta, view.getRotation());\n      pan(view, delta, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardPan;\n\n//# sourceMappingURL=KeyboardPan.js.map","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport {targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = /*@__PURE__*/(function (Interaction) {\n  function KeyboardZoom(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n  }\n\n  if ( Interaction ) KeyboardZoom.__proto__ = Interaction;\n  KeyboardZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardZoom.prototype.constructor = KeyboardZoom;\n\n  return KeyboardZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS) {\n    var keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n    var charCode = keyEvent.charCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n      var map = mapBrowserEvent.map;\n      var delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n      var view = map.getView();\n      zoomByDelta(view, delta, undefined, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardZoom;\n\n//# sourceMappingURL=KeyboardZoom.js.map","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {always} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX, SAFARI} from '../has.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Maximum mouse wheel delta.\n * @type {number}\n */\nvar MAX_DELTA = 1;\n\n\n/**\n * @enum {string}\n */\nexport var Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [constrainResolution=false] When using a trackpad or\n * magic mouse, zoom to the closest integer zoom level after the scroll gesture\n * ends.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = /*@__PURE__*/(function (Interaction) {\n  function MouseWheelZoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(/** @type {import(\"./Interaction.js\").InteractionOptions} */ this, (options));\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.trackpadDeltaPerZoom_ = 300;\n\n    /**\n     * The zoom factor by which scroll zooming is allowed to exceed the limits.\n     * @private\n     * @type {number}\n     */\n    this.trackpadZoomBuffer_ = 1.5;\n\n  }\n\n  if ( Interaction ) MouseWheelZoom.__proto__ = Interaction;\n  MouseWheelZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  MouseWheelZoom.prototype.constructor = MouseWheelZoom;\n\n  /**\n   * @private\n   */\n  MouseWheelZoom.prototype.decrementInteractingHint_ = function decrementInteractingHint_ () {\n    this.trackpadTimeoutId_ = undefined;\n    var view = this.getMap().getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @override\n   */\n  MouseWheelZoom.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    var type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\n      return true;\n    }\n\n    mapBrowserEvent.preventDefault();\n\n    var map = mapBrowserEvent.map;\n    var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    var delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX &&\n          wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    } else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\n      delta = -wheelEvent.wheelDeltaY;\n      if (SAFARI) {\n        delta /= 3;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n\n    var now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ?\n        Mode.TRACKPAD :\n        Mode.WHEEL;\n    }\n\n    if (this.mode_ === Mode.TRACKPAD) {\n      var view = map.getView();\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        view.setHint(ViewHint.INTERACTING, 1);\n      }\n      this.trackpadTimeoutId_ = setTimeout(this.decrementInteractingHint_.bind(this), this.trackpadEventGap_);\n      var resolution = view.getResolution() * Math.pow(2, delta / this.trackpadDeltaPerZoom_);\n      var minResolution = view.getMinResolution();\n      var maxResolution = view.getMaxResolution();\n      var rebound = 0;\n      if (resolution < minResolution) {\n        resolution = Math.max(resolution, minResolution / this.trackpadZoomBuffer_);\n        rebound = 1;\n      } else if (resolution > maxResolution) {\n        resolution = Math.min(resolution, maxResolution * this.trackpadZoomBuffer_);\n        rebound = -1;\n      }\n      if (this.lastAnchor_) {\n        var center = view.calculateCenterZoom(resolution, this.lastAnchor_);\n        view.setCenter(view.constrainCenter(center));\n      }\n      view.setResolution(resolution);\n\n      if (rebound === 0 && this.constrainResolution_) {\n        view.animate({\n          resolution: view.constrainResolution(resolution, delta > 0 ? -1 : 1),\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: this.duration_\n        });\n      }\n\n      if (rebound > 0) {\n        view.animate({\n          resolution: minResolution,\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: 500\n        });\n      } else if (rebound < 0) {\n        view.animate({\n          resolution: maxResolution,\n          easing: easeOut,\n          anchor: this.lastAnchor_,\n          duration: 500\n        });\n      }\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.delta_ += delta;\n\n    var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n\n    return false;\n  };\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  MouseWheelZoom.prototype.handleWheelZoom_ = function handleWheelZoom_ (map) {\n    var view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    var maxDelta = MAX_DELTA;\n    var delta = clamp(this.delta_, -maxDelta, maxDelta);\n    zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n    this.mode_ = undefined;\n    this.delta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  };\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  MouseWheelZoom.prototype.setMouseAnchor = function setMouseAnchor (useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  };\n\n  return MouseWheelZoom;\n}(Interaction));\n\nexport default MouseWheelZoom;\n\n//# sourceMappingURL=MouseWheelZoom.js.map","/**\n * @module ol/interaction/PinchRotate\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from './Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\nimport {disable} from '../rotationconstraint.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = /*@__PURE__*/(function (PointerInteraction) {\n  function PinchRotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) PinchRotate.__proto__ = PointerInteraction;\n  PinchRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchRotate.prototype.constructor = PinchRotate;\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    var rotationDelta = 0.0;\n\n    var touch0 = this.targetPointers[0];\n    var touch1 = this.targetPointers[1];\n\n    // angle between touches\n    var angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX);\n\n    if (this.lastAngle_ !== undefined) {\n      var delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ &&\n          Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    var viewportPosition = map.getViewport().getBoundingClientRect();\n    var centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      var rotation = view.getRotation();\n      map.render();\n      rotateWithoutConstraints(view, rotation + rotationDelta, this.anchor_);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n      if (this.rotating_) {\n        var rotation = view.getRotation();\n        rotate(view, rotation, this.anchor_, this.duration_);\n      }\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchRotate.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      var map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().setHint(ViewHint.INTERACTING, 1);\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return PinchRotate;\n}(PointerInteraction));\n\nexport default PinchRotate;\n\n//# sourceMappingURL=PinchRotate.js.map","/**\n * @module ol/interaction/PinchZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {zoom, zoomWithoutConstraints} from './Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the pinch gesture ends.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = /*@__PURE__*/(function (PointerInteraction) {\n  function PinchZoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n\n  }\n\n  if ( PointerInteraction ) PinchZoom.__proto__ = PointerInteraction;\n  PinchZoom.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchZoom.prototype.constructor = PinchZoom;\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    var scaleDelta = 1.0;\n\n    var touch0 = this.targetPointers[0];\n    var touch1 = this.targetPointers[1];\n    var dx = touch0.clientX - touch1.clientX;\n    var dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    var distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    var resolution = view.getResolution();\n    var maxResolution = view.getMaxResolution();\n    var minResolution = view.getMinResolution();\n    var newResolution = resolution * scaleDelta;\n    if (newResolution > maxResolution) {\n      scaleDelta = maxResolution / resolution;\n      newResolution = maxResolution;\n    } else if (newResolution < minResolution) {\n      scaleDelta = minResolution / resolution;\n      newResolution = minResolution;\n    }\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    var viewportPosition = map.getViewport().getBoundingClientRect();\n    var centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    zoomWithoutConstraints(view, newResolution, this.anchor_);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n      var resolution = view.getResolution();\n      if (this.constrainResolution_ ||\n          resolution < view.getMinResolution() ||\n          resolution > view.getMaxResolution()) {\n        // Zoom to final resolution, with an animation, and provide a\n        // direction not to zoom out/in if user was pinching in/out.\n        // Direction is > 0 if pinching out, and < 0 if pinching in.\n        var direction = this.lastScaleDelta_ - 1;\n        zoom(view, resolution, this.anchor_, this.duration_, direction);\n      }\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PinchZoom.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      var map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().setHint(ViewHint.INTERACTING, 1);\n      }\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return PinchZoom;\n}(PointerInteraction));\n\nexport default PinchZoom;\n\n//# sourceMappingURL=PinchZoom.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nimport {focus} from './events/condition.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the wheel/trackpad or pinch gesture ends.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or\n * mousewheel zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var interactions = new Collection();\n\n  var kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  var altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n    options.altShiftDragRotate : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  var doubleClickZoom = options.doubleClickZoom !== undefined ?\n    options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(new DoubleClickZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(new DragPan({\n      condition: options.onFocusOnly ? focus : undefined,\n      kinetic: kinetic\n    }));\n  }\n\n  var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n    true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(new PinchZoom({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(new KeyboardZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n    options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(new MouseWheelZoom({\n      condition: options.onFocusOnly ? focus : undefined,\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var shiftDragZoom = options.shiftDragZoom !== undefined ?\n    options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(new DragZoom({\n      duration: options.zoomDuration\n    }));\n  }\n\n  return interactions;\n\n}\n\n//# sourceMappingURL=interaction.js.map","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nvar RenderEvent = /*@__PURE__*/(function (Event) {\n  function RenderEvent(type, opt_inversePixelTransform, opt_frameState, opt_context, opt_glContext) {\n\n    Event.call(this, type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Only available when a Canvas renderer is used, null\n     * otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n\n    /**\n     * WebGL context. Only available when a WebGL renderer is used, null\n     * otherwise.\n     * @type {import(\"../webgl/Helper.js\").default|null|undefined}\n     * @api\n     */\n    this.glContext = opt_glContext;\n\n  }\n\n  if ( Event ) RenderEvent.__proto__ = Event;\n  RenderEvent.prototype = Object.create( Event && Event.prototype );\n  RenderEvent.prototype.constructor = RenderEvent;\n\n  return RenderEvent;\n}(Event));\n\nexport default RenderEvent;\n\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  var el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    var rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport var fromString = (\n  function() {\n\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n\n    /**\n     * @type {Object<string, Color>}\n     */\n    var cache = {};\n\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n\n    return (\n      /**\n       * @param {string} s String.\n       * @return {Color} Color.\n       */\n      function(s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n          color = cache[s];\n        } else {\n          if (cacheSize >= MAX_CACHE_SIZE) {\n            var i = 0;\n            for (var key in cache) {\n              if ((i++ & 3) === 0) {\n                delete cache[key];\n                --cacheSize;\n              }\n            }\n          }\n          color = fromStringInternal_(s);\n          cache[s] = color;\n          ++cacheSize;\n        }\n        return color;\n      }\n    );\n\n  })();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  var r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) { // hex\n    var n = s.length - 1; // number of hex digits\n    var d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    var hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) { // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) { // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  var r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  var g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  var b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  var a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n//# sourceMappingURL=color.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = function IconImageCache() {\n\n  /**\n  * @type {!Object<string, import(\"./IconImage.js\").default>}\n  * @private\n  */\n  this.cache_ = {};\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.cacheSize_ = 0;\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.maxCacheSize_ = 32;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.clear = function clear () {\n  this.cache_ = {};\n  this.cacheSize_ = 0;\n};\n\n/**\n * @return {boolean} Can expire cache.\n */\nIconImageCache.prototype.canExpireCache = function canExpireCache () {\n  return this.cacheSize_ > this.maxCacheSize_;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.expire = function expire () {\n  if (this.canExpireCache()) {\n    var i = 0;\n    for (var key in this.cache_) {\n      var iconImage = this.cache_[key];\n      if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n        delete this.cache_[key];\n        --this.cacheSize_;\n      }\n    }\n  }\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {import(\"../color.js\").Color} color Color.\n* @return {import(\"./IconImage.js\").default} Icon image.\n*/\nIconImageCache.prototype.get = function get (src, crossOrigin, color) {\n  var key = getKey(src, crossOrigin, color);\n  return key in this.cache_ ? this.cache_[key] : null;\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {import(\"../color.js\").Color} color Color.\n* @param {import(\"./IconImage.js\").default} iconImage Icon image.\n*/\nIconImageCache.prototype.set = function set (src, crossOrigin, color, iconImage) {\n  var key = getKey(src, crossOrigin, color);\n  this.cache_[key] = iconImage;\n  ++this.cacheSize_;\n};\n\n/**\n* Set the cache size of the icon cache. Default is `32`. Change this value when\n* your map uses more than 32 different icon images and you are not caching icon\n* styles on the application level.\n* @param {number} maxCacheSize Cache max size.\n* @api\n*/\nIconImageCache.prototype.setSize = function setSize (maxCacheSize) {\n  this.maxCacheSize_ = maxCacheSize;\n  this.expire();\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  var colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\n\nexport default IconImageCache;\n\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n\n//# sourceMappingURL=IconImageCache.js.map","/**\n * @module ol/renderer/Map\n */\nimport {abstract, getUid} from '../util.js';\nimport Disposable from '../Disposable.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE} from '../functions.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\n\n/**\n * @abstract\n */\nvar MapRenderer = /*@__PURE__*/(function (Disposable) {\n  function MapRenderer(map) {\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"./Layer.js\").default>}\n     */\n    this.layerRenderers_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     */\n    this.layerRendererListeners_ = {};\n\n  }\n\n  if ( Disposable ) MapRenderer.__proto__ = Disposable;\n  MapRenderer.prototype = Object.create( Disposable && Disposable.prototype );\n  MapRenderer.prototype.constructor = MapRenderer;\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  MapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (type, frameState) {\n    abstract();\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  MapRenderer.prototype.calculateMatrices2D = function calculateMatrices2D (frameState) {\n    var viewState = frameState.viewState;\n    var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(coordinateToPixelTransform,\n      frameState.size[0] / 2, frameState.size[1] / 2,\n      1 / viewState.resolution, -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0], -viewState.center[1]);\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  };\n\n  /**\n   * Removes all layer renderers.\n   */\n  MapRenderer.prototype.removeLayerRenderers = function removeLayerRenderers () {\n    for (var key in this.layerRenderers_) {\n      this.removeLayerRendererByKey_(key).dispose();\n    }\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../Feature.js\").FeatureLike,\n   *     import(\"../layer/Layer.js\").default): T} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @return {?} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer) {\n      if (!(getUid(feature) in frameState.skippedFeatureUids && !managed)) {\n        return callback.call(thisArg, feature, managed ? layer : null);\n      }\n    }\n\n    var projection = viewState.projection;\n\n    var translatedCoordinate = coordinate;\n    if (projection.canWrapX()) {\n      var projectionExtent = projection.getExtent();\n      var worldWidth = getWidth(projectionExtent);\n      var x = coordinate[0];\n      if (x < projectionExtent[0] || x > projectionExtent[2]) {\n        var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n        translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n      }\n    }\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = /** @type {import(\"../layer/Layer.js\").default} */ (layerState.layer);\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = this.getLayerRenderer(layer);\n        var source = layer.getSource();\n        if (layerRenderer && source) {\n          var callback$1 = forEachFeatureAtCoordinate.bind(null, layerState.managed);\n          result = layerRenderer.forEachFeatureAtCoordinate(\n            source.getWrapX() ? translatedCoordinate : coordinate,\n            frameState, hitTolerance, callback$1);\n        }\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, import(\"../layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  MapRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n\n    return hasFeature !== undefined;\n  };\n\n  /**\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\n   * @protected\n   * @return {import(\"./Layer.js\").default} Layer renderer. May return null.\n   */\n  MapRenderer.prototype.getLayerRenderer = function getLayerRenderer (layer) {\n    var layerKey = getUid(layer);\n    if (layerKey in this.layerRenderers_) {\n      return this.layerRenderers_[layerKey];\n    }\n\n    var renderer = layer.getRenderer();\n    if (!renderer) {\n      return null;\n    }\n\n    this.layerRenderers_[layerKey] = renderer;\n    this.layerRendererListeners_[layerKey] = listen(renderer, EventType.CHANGE, this.handleLayerRendererChange_, this);\n    return renderer;\n  };\n\n  /**\n   * @protected\n   * @return {Object<string, import(\"./Layer.js\").default>} Layer renderers.\n   */\n  MapRenderer.prototype.getLayerRenderers = function getLayerRenderers () {\n    return this.layerRenderers_;\n  };\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  MapRenderer.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Handle changes in a layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.handleLayerRendererChange_ = function handleLayerRendererChange_ () {\n    this.map_.render();\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @return {import(\"./Layer.js\").default} Layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.removeLayerRendererByKey_ = function removeLayerRendererByKey_ (layerKey) {\n    var layerRenderer = this.layerRenderers_[layerKey];\n    delete this.layerRenderers_[layerKey];\n\n    unlistenByKey(this.layerRendererListeners_[layerKey]);\n    delete this.layerRendererListeners_[layerKey];\n\n    return layerRenderer;\n  };\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  MapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n    abstract();\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleExpireIconCache = function scheduleExpireIconCache (frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  };\n\n  /**\n   * @param {!import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function scheduleRemoveUnusedLayerRenderers (frameState) {\n    var this$1 = this;\n\n    var layerStatesMap = getLayerStatesMap(frameState.layerStatesArray);\n    var loop = function ( layerKey ) {\n      if (!(layerKey in layerStatesMap)) {\n        frameState.postRenderFunctions.push(function() {\n          this.removeLayerRendererByKey_(layerKey).dispose();\n        }.bind(this$1));\n      }\n    };\n\n    for (var layerKey in this$1.layerRenderers_) loop( layerKey );\n  };\n\n  return MapRenderer;\n}(Disposable));\n\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\n/**\n * @param {Array<import(\"../layer/Layer.js\").State>} layerStatesArray Layer states array.\n * @return {Object<string, import(\"../layer/Layer.js\").State>} States mapped by layer uid.\n */\nfunction getLayerStatesMap(layerStatesArray) {\n  return layerStatesArray.reduce(function(acc, state) {\n    acc[getUid(state.layer)] = state;\n    return acc;\n  }, {});\n}\n\n/**\n * @param {import(\"../layer/Layer.js\").State} state1 First layer state.\n * @param {import(\"../layer/Layer.js\").State} state2 Second layer state.\n * @return {number} The zIndex difference.\n */\nexport function sortByZIndex(state1, state2) {\n  return state1.zIndex - state2.zIndex;\n}\nexport default MapRenderer;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/renderer/Composite\n */\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport MapRenderer from './Map.js';\nimport SourceState from '../source/State.js';\nimport {replaceChildren} from '../dom.js';\n\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CompositeMapRenderer = /*@__PURE__*/(function (MapRenderer) {\n  function CompositeMapRenderer(map) {\n    MapRenderer.call(this, map);\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    var style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    var container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  if ( MapRenderer ) CompositeMapRenderer.__proto__ = MapRenderer;\n  CompositeMapRenderer.prototype = Object.create( MapRenderer && MapRenderer.prototype );\n  CompositeMapRenderer.prototype.constructor = CompositeMapRenderer;\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  CompositeMapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (type, frameState) {\n    var map = this.getMap();\n    if (map.hasListener(type)) {\n      var event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CompositeMapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    var layerStatesArray = frameState.layerStatesArray;\n    var viewResolution = frameState.viewState.resolution;\n\n    this.children_.length = 0;\n    for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      if (!visibleAtResolution(layerState, viewResolution) || layerState.sourceState != SourceState.READY) {\n        continue;\n      }\n\n      var layer = layerState.layer;\n      var element = layer.render(frameState);\n      if (element) {\n        var zIndex = layerState.zIndex;\n        if (zIndex !== element.style.zIndex) {\n          element.style.zIndex = zIndex;\n        }\n        this.children_.push(element);\n      }\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleRemoveUnusedLayerRenderers(frameState);\n    this.scheduleExpireIconCache(frameState);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CompositeMapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, layerFilter) {\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n\n    for (var i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter(layer)) {\n        var layerRenderer = this.getLayerRenderer(layer);\n        if (!layerRenderer) {\n          continue;\n        }\n        var data = layerRenderer.getDataAtPixel(pixel, frameState, hitTolerance);\n        if (data) {\n          var result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  };\n\n  return CompositeMapRenderer;\n}(MapRenderer));\n\n\nexport default CompositeMapRenderer;\n\n//# sourceMappingURL=Composite.js.map","/**\n * @module ol/Map\n */\nimport PluggableMap from './PluggableMap.js';\nimport {defaults as defaultControls} from './control/util.js';\nimport {defaults as defaultInteractions} from './interaction.js';\nimport {assign} from './obj.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nvar Map = /*@__PURE__*/(function (PluggableMap) {\n  function Map(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions();\n    }\n\n    PluggableMap.call(this, options);\n  }\n\n  if ( PluggableMap ) Map.__proto__ = PluggableMap;\n  Map.prototype = Object.create( PluggableMap && PluggableMap.prototype );\n  Map.prototype.constructor = Map;\n\n  Map.prototype.createRenderer = function createRenderer () {\n    return new CompositeMapRenderer(this);\n  };\n\n  return Map;\n}(PluggableMap));\n\n\nexport default Map;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/OverlayPositioning\n */\n\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_CENTER: 'bottom-center',\n  BOTTOM_RIGHT: 'bottom-right',\n  CENTER_LEFT: 'center-left',\n  CENTER_CENTER: 'center-center',\n  CENTER_RIGHT: 'center-right',\n  TOP_LEFT: 'top-left',\n  TOP_CENTER: 'top-center',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=OverlayPositioning.js.map","/**\n * @module ol/Overlay\n */\nimport MapEventType from './MapEventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {removeNode, removeChildren, outerWidth, outerHeight} from './dom.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {containsExtent} from './extent.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {OverlayPositioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {boolean} [autoPan=false] If set to `true` the map is panned when\n * calling `setPosition`, so that the overlay is entirely visible in the current\n * viewport.\n * @property {PanOptions} [autoPanAnimation] The\n * animation options used to pan the overlay into view. This animation is only\n * used when `autoPan` is enabled. A `duration` and `easing` may be provided to\n * customize the animation.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing~inAndOut}.\n */\n\n\n/**\n * @enum {string}\n * @protected\n */\nvar Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning'\n};\n\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nvar Overlay = /*@__PURE__*/(function (BaseObject) {\n  function Overlay(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst = options.insertFirst !== undefined ?\n      options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className = options.className !== undefined ?\n      options.className : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.autoPan = options.autoPan !== undefined ? options.autoPan : false;\n\n    /**\n     * @protected\n     * @type {PanOptions}\n     */\n    this.autoPanAnimation = options.autoPanAnimation || /** @type {PanOptions} */ ({});\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.autoPanMargin = options.autoPanMargin !== undefined ?\n      options.autoPanMargin : 20;\n\n    /**\n     * @protected\n     * @type {{bottom_: string,\n     *         left_: string,\n     *         right_: string,\n     *         top_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      bottom_: '',\n      left_: '',\n      right_: '',\n      top_: '',\n      visible: true\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    listen(\n      this, getChangeEventType(Property.ELEMENT),\n      this.handleElementChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.MAP),\n      this.handleMapChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.OFFSET),\n      this.handleOffsetChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.POSITION),\n      this.handlePositionChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.POSITIONING),\n      this.handlePositioningChanged, this);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning !== undefined ?\n      /** @type {OverlayPositioning} */ (options.positioning) :\n      OverlayPositioning.TOP_LEFT);\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n\n  }\n\n  if ( BaseObject ) Overlay.__proto__ = BaseObject;\n  Overlay.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Overlay.prototype.constructor = Overlay;\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getElement = function getElement () {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  };\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  Overlay.prototype.getId = function getId () {\n    return this.id;\n  };\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./PluggableMap.js\").default|undefined} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getMap = function getMap () {\n    return (\n      /** @type {import(\"./PluggableMap.js\").default|undefined} */ (this.get(Property.MAP))\n    );\n  };\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getOffset = function getOffset () {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  };\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getPosition = function getPosition () {\n    return (\n      /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (this.get(Property.POSITION))\n    );\n  };\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {OverlayPositioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getPositioning = function getPositioning () {\n    return (\n      /** @type {OverlayPositioning} */ (this.get(Property.POSITIONING))\n    );\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handleElementChanged = function handleElementChanged () {\n    removeChildren(this.element);\n    var element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handleMapChanged = function handleMapChanged () {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    var map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(map,\n        MapEventType.POSTRENDER, this.render, this);\n      this.updatePixelPosition();\n      var container = this.stopEvent ?\n        map.getOverlayContainerStopEvent() : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n    }\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.render = function render () {\n    this.updatePixelPosition();\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handleOffsetChanged = function handleOffsetChanged () {\n    this.updatePixelPosition();\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handlePositionChanged = function handlePositionChanged () {\n    this.updatePixelPosition();\n    if (this.get(Property.POSITION) && this.autoPan) {\n      this.panIntoView();\n    }\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handlePositioningChanged = function handlePositioningChanged () {\n    this.updatePixelPosition();\n  };\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setElement = function setElement (element) {\n    this.set(Property.ELEMENT, element);\n  };\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./PluggableMap.js\").default|undefined} map The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setMap = function setMap (map) {\n    this.set(Property.MAP, map);\n  };\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setOffset = function setOffset (offset) {\n    this.set(Property.OFFSET, offset);\n  };\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setPosition = function setPosition (position) {\n    this.set(Property.POSITION, position);\n  };\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @protected\n   */\n  Overlay.prototype.panIntoView = function panIntoView () {\n    var map = this.getMap();\n\n    if (!map || !map.getTargetElement()) {\n      return;\n    }\n\n    var mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    var element = this.getElement();\n    var overlayRect = this.getRect(element, [outerWidth(element), outerHeight(element)]);\n\n    var margin = this.autoPanMargin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      var offsetLeft = overlayRect[0] - mapRect[0];\n      var offsetRight = mapRect[2] - overlayRect[2];\n      var offsetTop = overlayRect[1] - mapRect[1];\n      var offsetBottom = mapRect[3] - overlayRect[3];\n\n      var delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - margin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + margin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - margin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + margin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        var center = /** @type {import(\"./coordinate.js\").Coordinate} */ (map.getView().getCenter());\n        var centerPx = map.getPixelFromCoordinate(center);\n        var newCenterPx = [\n          centerPx[0] + delta[0],\n          centerPx[1] + delta[1]\n        ];\n\n        map.getView().animate({\n          center: map.getCoordinateFromPixel(newCenterPx),\n          duration: this.autoPanAnimation.duration,\n          easing: this.autoPanAnimation.easing\n        });\n      }\n    }\n  };\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement|undefined} element The element.\n   * @param {import(\"./size.js\").Size|undefined} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  Overlay.prototype.getRect = function getRect (element, size) {\n    var box = element.getBoundingClientRect();\n    var offsetX = box.left + window.pageXOffset;\n    var offsetY = box.top + window.pageYOffset;\n    return [\n      offsetX,\n      offsetY,\n      offsetX + size[0],\n      offsetY + size[1]\n    ];\n  };\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {OverlayPositioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setPositioning = function setPositioning (positioning) {\n    this.set(Property.POSITIONING, positioning);\n  };\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  Overlay.prototype.setVisible = function setVisible (visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  };\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  Overlay.prototype.updatePixelPosition = function updatePixelPosition () {\n    var map = this.getMap();\n    var position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    var pixel = map.getPixelFromCoordinate(position);\n    var mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  };\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  Overlay.prototype.updateRenderedPosition = function updateRenderedPosition (pixel, mapSize) {\n    var style = this.element.style;\n    var offset = this.getOffset();\n\n    var positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    var offsetX = offset[0];\n    var offsetY = offset[1];\n    if (positioning == OverlayPositioning.BOTTOM_RIGHT ||\n        positioning == OverlayPositioning.CENTER_RIGHT ||\n        positioning == OverlayPositioning.TOP_RIGHT) {\n      if (this.rendered.left_ !== '') {\n        this.rendered.left_ = style.left = '';\n      }\n      var right = Math.round(mapSize[0] - pixel[0] - offsetX) + 'px';\n      if (this.rendered.right_ != right) {\n        this.rendered.right_ = style.right = right;\n      }\n    } else {\n      if (this.rendered.right_ !== '') {\n        this.rendered.right_ = style.right = '';\n      }\n      if (positioning == OverlayPositioning.BOTTOM_CENTER ||\n          positioning == OverlayPositioning.CENTER_CENTER ||\n          positioning == OverlayPositioning.TOP_CENTER) {\n        offsetX -= this.element.offsetWidth / 2;\n      }\n      var left = Math.round(pixel[0] + offsetX) + 'px';\n      if (this.rendered.left_ != left) {\n        this.rendered.left_ = style.left = left;\n      }\n    }\n    if (positioning == OverlayPositioning.BOTTOM_LEFT ||\n        positioning == OverlayPositioning.BOTTOM_CENTER ||\n        positioning == OverlayPositioning.BOTTOM_RIGHT) {\n      if (this.rendered.top_ !== '') {\n        this.rendered.top_ = style.top = '';\n      }\n      var bottom = Math.round(mapSize[1] - pixel[1] - offsetY) + 'px';\n      if (this.rendered.bottom_ != bottom) {\n        this.rendered.bottom_ = style.bottom = bottom;\n      }\n    } else {\n      if (this.rendered.bottom_ !== '') {\n        this.rendered.bottom_ = style.bottom = '';\n      }\n      if (positioning == OverlayPositioning.CENTER_LEFT ||\n          positioning == OverlayPositioning.CENTER_CENTER ||\n          positioning == OverlayPositioning.CENTER_RIGHT) {\n        offsetY -= this.element.offsetHeight / 2;\n      }\n      var top = Math.round(pixel[1] + offsetY) + 'px';\n      if (this.rendered.top_ != top) {\n        this.rendered.top_ = style.top = top;\n      }\n    }\n  };\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  Overlay.prototype.getOptions = function getOptions () {\n    return this.options;\n  };\n\n  return Overlay;\n}(BaseObject));\n\n\nexport default Overlay;\n\n//# sourceMappingURL=Overlay.js.map","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n\n//# sourceMappingURL=colorlike.js.map","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml'\n};\n\n//# sourceMappingURL=FormatType.js.map","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\nimport FormatType from './format/FormatType.js';\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default), import(\"./extent.js\").Extent, number,\n *                    import(\"./proj/Projection.js\").default): void} FeatureLoader\n * @api\n */\n\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {function(this:import(\"./VectorTile.js\").default, Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default, import(\"./extent.js\").Extent): void|function(this:import(\"./source/Vector\").default, Array<import(\"./Feature.js\").default>): void} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:import(\"./VectorTile.js\").default): void|function(this:import(\"./source/Vector\").default): void} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function(extent, resolution, projection) {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET',\n        typeof url === 'function' ? url(extent, resolution, projection) : url,\n        true);\n      if (format.getType() == FormatType.ARRAY_BUFFER) {\n        xhr.responseType = 'arraybuffer';\n      }\n      /**\n       * @param {Event} event Event.\n       * @private\n       */\n      xhr.onload = function(event) {\n        // status will be 0 for file:// urls\n        if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n          var type = format.getType();\n          /** @type {Document|Node|Object|string|undefined} */\n          var source;\n          if (type == FormatType.JSON || type == FormatType.TEXT) {\n            source = xhr.responseText;\n          } else if (type == FormatType.XML) {\n            source = xhr.responseXML;\n            if (!source) {\n              source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n            }\n          } else if (type == FormatType.ARRAY_BUFFER) {\n            source = /** @type {ArrayBuffer} */ (xhr.response);\n          }\n          if (source) {\n            success.call(this, format.readFeatures(source,\n              {featureProjection: projection}),\n            format.readProjection(source), format.getLastExtent());\n          } else {\n            failure.call(this);\n          }\n        } else {\n          failure.call(this);\n        }\n      }.bind(this);\n      /**\n       * @private\n       */\n      xhr.onerror = function() {\n        failure.call(this);\n      }.bind(this);\n      xhr.send();\n    }\n  );\n}\n\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  return loadFeaturesXhr(url, format,\n    /**\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n     * projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function(features, dataProjection) {\n      var sourceOrTile = /** @type {?} */ (this);\n      if (typeof sourceOrTile.addFeatures === 'function') {\n        /** @type {import(\"./source/Vector\").default} */ (sourceOrTile).addFeatures(features);\n      }\n    }, /* FIXME handle error */ VOID);\n}\n\n//# sourceMappingURL=featureloader.js.map","/**\n * @module ol/loadingstrategy\n */\n\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function(extent, resolution) {\n      var z = tileGrid.getZForResolution(resolution);\n      var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      var extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      var tileCoord = [z, 0, 0];\n      for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n        for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n\n//# sourceMappingURL=loadingstrategy.js.map","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = function VectorContext () {};\n\nVectorContext.prototype.drawCustom = function drawCustom (geometry, feature, renderer) {};\n\n/**\n * Render a geometry.\n *\n * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n */\nVectorContext.prototype.drawGeometry = function drawGeometry (geometry) {};\n\n/**\n * Set the rendering style.\n *\n * @param {import(\"../style/Style.js\").default} style The rendering style.\n */\nVectorContext.prototype.setStyle = function setStyle (style) {};\n\n/**\n * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawCircle = function drawCircle (circleGeometry, feature) {};\n\n/**\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n */\nVectorContext.prototype.drawFeature = function drawFeature (feature, style) {};\n\n/**\n * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nVectorContext.prototype.drawGeometryCollection = function drawGeometryCollection (geometryCollectionGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nVectorContext.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nVectorContext.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nVectorContext.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nVectorContext.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nVectorContext.prototype.drawPoint = function drawPoint (pointGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nVectorContext.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {};\n\n/**\n * @param {import(\"../geom/Geometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nVectorContext.prototype.drawText = function drawText (geometry, feature) {};\n\n/**\n * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n */\nVectorContext.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {};\n\n/**\n * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setImageStyle = function setImageStyle (imageStyle, opt_declutterGroup) {};\n\n/**\n * @param {import(\"../style/Text.js\").default} textStyle Text style.\n * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setTextStyle = function setTextStyle (textStyle, opt_declutterGroup) {};\n\nexport default VectorContext;\n\n//# sourceMappingURL=VectorContext.js.map","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").Event\n * @template T\n */\nvar LRUCache = /*@__PURE__*/(function (EventTarget) {\n  function LRUCache(opt_highWaterMark) {\n\n    EventTarget.call(this);\n\n    /**\n     * @type {number}\n     */\n    this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n\n  }\n\n  if ( EventTarget ) LRUCache.__proto__ = EventTarget;\n  LRUCache.prototype = Object.create( EventTarget && EventTarget.prototype );\n  LRUCache.prototype.constructor = LRUCache;\n\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  LRUCache.prototype.canExpireCache = function canExpireCache () {\n    return this.getCount() > this.highWaterMark;\n  };\n\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  LRUCache.prototype.clear = function clear () {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n    this.dispatchEvent(EventType.CLEAR);\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  LRUCache.prototype.containsKey = function containsKey (key) {\n    return this.entries_.hasOwnProperty(key);\n  };\n\n\n  /**\n   * @param {function(this: S, T, string, LRUCache): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   * @param {S=} opt_this The object to use as `this` in `f`.\n   * @template S\n   */\n  LRUCache.prototype.forEach = function forEach (f, opt_this) {\n    var entry = this.oldest_;\n    while (entry) {\n      f.call(opt_this, entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {*=} opt_options Options (reserverd for subclasses).\n   * @return {T} Value.\n   */\n  LRUCache.prototype.get = function get (key, opt_options) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined,\n      15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  };\n\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  LRUCache.prototype.remove = function remove (key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  };\n\n\n  /**\n   * @return {number} Count.\n   */\n  LRUCache.prototype.getCount = function getCount () {\n    return this.count_;\n  };\n\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  LRUCache.prototype.getKeys = function getKeys () {\n    var keys = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  };\n\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  LRUCache.prototype.getValues = function getValues () {\n    var values = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  };\n\n\n  /**\n   * @return {T} Last value.\n   */\n  LRUCache.prototype.peekLast = function peekLast () {\n    return this.oldest_.value_;\n  };\n\n\n  /**\n   * @return {string} Last key.\n   */\n  LRUCache.prototype.peekLastKey = function peekLastKey () {\n    return this.oldest_.key_;\n  };\n\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  LRUCache.prototype.peekFirstKey = function peekFirstKey () {\n    return this.newest_.key_;\n  };\n\n\n  /**\n   * @return {T} value Value.\n   */\n  LRUCache.prototype.pop = function pop () {\n    var entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.replace = function replace (key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.set = function set (key, value) {\n    assert(!(key in this.entries_),\n      16); // Tried to set a value for a key that is used already\n    var entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  };\n\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  LRUCache.prototype.setSize = function setSize (size) {\n    this.highWaterMark = size;\n  };\n\n  return LRUCache;\n}(EventTarget));\n\nexport default LRUCache;\n\n//# sourceMappingURL=LRUCache.js.map","/**\n * @module ol/render/canvas\n */\nimport {getFontFamilies} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {clear} from '../obj.js';\nimport {create as createTransform} from '../transform.js';\nimport LabelCache from './canvas/LabelCache.js';\n\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n\n\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n\n\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {number} [scale]\n * @property {Array<number>} [padding]\n */\n\n\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n\n\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\nexport var defaultFillStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineCap = 'round';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineJoin = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n\n\n/**\n * @const\n * @type {import(\"../color.js\").Color}\n */\nexport var defaultStrokeStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {LabelCache}\n * @api\n */\nexport var labelCache = new LabelCache();\n\n\n/**\n * @type {!Object<string, number>}\n */\nexport var checkedFonts = {};\n\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n\n\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var checkFont = (function() {\n  var retries = 60;\n  var checked = checkedFonts;\n  var size = '32px ';\n  var referenceFonts = ['monospace', 'serif'];\n  var len = referenceFonts.length;\n  var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  var interval, referenceWidth;\n\n  function isAvailable(font) {\n    var context = getMeasureContext();\n    // Check weight ranges according to\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n    for (var weight = 100; weight <= 700; weight += 300) {\n      var fontWeight = weight + ' ';\n      var available = true;\n      for (var i = 0; i < len; ++i) {\n        var referenceFont = referenceFonts[i];\n        context.font = fontWeight + size + referenceFont;\n        referenceWidth = context.measureText(text).width;\n        if (font != referenceFont) {\n          context.font = fontWeight + size + font + ',' + referenceFont;\n          var width = context.measureText(text).width;\n          // If width and referenceWidth are the same, then the fallback was used\n          // instead of the font we wanted, so the font is not available.\n          available = available && width != referenceWidth;\n        }\n      }\n      if (available) {\n        // Consider font available when it is available in one weight range.\n        //FIXME With this we miss rare corner cases, so we should consider\n        //FIXME checking availability for each requested weight range.\n        return true;\n      }\n    }\n    return false;\n  }\n\n  function check() {\n    var done = true;\n    for (var font in checked) {\n      if (checked[font] < retries) {\n        if (isAvailable(font)) {\n          checked[font] = retries;\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          labelCache.clear();\n        } else {\n          ++checked[font];\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function(fontSpec) {\n    var fontFamilies = getFontFamilies(fontSpec);\n    if (!fontFamilies) {\n      return;\n    }\n    for (var i = 0, ii = fontFamilies.length; i < ii; ++i) {\n      var fontFamily = fontFamilies[i];\n      if (!(fontFamily in checked)) {\n        checked[fontFamily] = retries;\n        if (!isAvailable(fontFamily)) {\n          checked[fontFamily] = 0;\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  return measureContext;\n}\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport var measureTextHeight = (function() {\n  var span;\n  var heights = textHeights;\n  return function(font) {\n    var height = heights[font];\n    if (height == undefined) {\n      if (!span) {\n        span = document.createElement('span');\n        span.textContent = 'M';\n        span.style.margin = span.style.padding = '0 !important';\n        span.style.position = 'absolute !important';\n        span.style.left = '-99999px !important';\n      }\n      span.style.font = font;\n      document.body.appendChild(span);\n      height = heights[font] = span.offsetHeight;\n      document.body.removeChild(span);\n    }\n    return height;\n  };\n})();\n\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  var measureContext = getMeasureContext();\n  if (font != measureContext.font) {\n    measureContext.font = font;\n  }\n  return measureContext.measureText(text).width;\n}\n\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @returns {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  var width = cache[text] = measureTextWidth(font, text);\n  return width;\n}\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  var numLines = lines.length;\n  var width = 0;\n  for (var i = 0; i < numLines; ++i) {\n    var currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n\nexport var resetTransform = createTransform();\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context,\n  transform, opacity, image, originX, originY, w, h, x, y, scale) {\n  var alpha;\n  if (opacity != 1) {\n    alpha = context.globalAlpha;\n    context.globalAlpha = alpha * opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n\n  if (alpha) {\n    context.globalAlpha = alpha;\n  }\n  if (transform) {\n    context.setTransform.apply(context, resetTransform);\n  }\n}\n\n//# sourceMappingURL=canvas.js.map","import {getUid} from '../../util.js';\nimport LRUCache from '../../structs/LRUCache.js';\n\n/**\n * @module ol/render/canvas/LabelCache\n */\n\n/**\n * @classdesc\n * Cache of pre-rendered labels.\n * @fires import(\"../events/Event.js\").Event\n */\nvar LabelCache = /*@__PURE__*/(function (LRUCache) {\n  function LabelCache(opt_highWaterMark) {\n    LRUCache.call(this, opt_highWaterMark);\n    this.consumers = {};\n  }\n\n  if ( LRUCache ) LabelCache.__proto__ = LRUCache;\n  LabelCache.prototype = Object.create( LRUCache && LRUCache.prototype );\n  LabelCache.prototype.constructor = LabelCache;\n\n  LabelCache.prototype.clear = function clear () {\n    LRUCache.prototype.clear.call(this);\n    this.consumers = {};\n  };\n\n  /**\n   * @override\n   * @param {string} key Label key.\n   * @param {import(\"./Executor.js\").default} consumer Label consumer.\n   * @return {HTMLCanvasElement} Label.\n   */\n  LabelCache.prototype.get = function get (key, consumer) {\n    var canvas = LRUCache.prototype.get.call(this, key);\n    var consumerId = getUid(consumer);\n    if (!(consumerId in this.consumers)) {\n      this.consumers[consumerId] = {};\n    }\n    this.consumers[consumerId][key] = true;\n    return canvas;\n  };\n\n  LabelCache.prototype.prune = function prune () {\n    outer:\n    while (this.canExpireCache()) {\n      var key = this.peekLastKey();\n      for (var consumerId in this.consumers) {\n        if (key in this.consumers[consumerId]) {\n          break outer;\n        }\n      }\n      var canvas = this.pop();\n      canvas.width = canvas.height = 0;\n      for (var consumerId$1 in this.consumers) {\n        delete this.consumers[consumerId$1][key];\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"./Executor.js\").default} consumer Label consumer.\n   */\n  LabelCache.prototype.release = function release (consumer) {\n    delete this.consumers[getUid(consumer)];\n  };\n\n  return LabelCache;\n}(LRUCache));\n\nexport default LabelCache;\n\n//# sourceMappingURL=LabelCache.js.map","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport VectorContext from '../VectorContext.js';\nimport {defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont} from '../canvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = /*@__PURE__*/(function (VectorContext) {\n  function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation) {\n    VectorContext.call(this);\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageScale_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textScale_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n\n  }\n\n  if ( VectorContext ) CanvasImmediateRenderer.__proto__ = VectorContext;\n  CanvasImmediateRenderer.prototype = Object.create( VectorContext && VectorContext.prototype );\n  CanvasImmediateRenderer.prototype.constructor = CanvasImmediateRenderer;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawImages_ = function drawImages_ (flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, 2, this.transform_,\n      this.pixelCoordinates_);\n    var context = this.context_;\n    var localTransform = this.tmpLocalTransform_;\n    var alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    var rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      var x = pixelCoordinates[i] - this.imageAnchorX_;\n      var y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (rotation !== 0 || this.imageScale_ != 1) {\n        var centerX = x + this.imageAnchorX_;\n        var centerY = y + this.imageAnchorY_;\n        composeTransform(localTransform,\n          centerX, centerY,\n          this.imageScale_, this.imageScale_,\n          rotation,\n          -centerX, -centerY);\n        context.setTransform.apply(context, localTransform);\n      }\n      context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_,\n        this.imageWidth_, this.imageHeight_, x, y,\n        this.imageWidth_, this.imageHeight_);\n    }\n    if (rotation !== 0 || this.imageScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawText_ = function drawText_ (flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    var context = this.context_;\n    var rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      var x = pixelCoordinates[offset] + this.textOffsetX_;\n      var y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (rotation !== 0 || this.textScale_ != 1) {\n        var localTransform = composeTransform(this.tmpLocalTransform_,\n          x, y,\n          this.textScale_, this.textScale_,\n          rotation,\n          -x, -y);\n        context.setTransform.apply(context, localTransform);\n      }\n      if (this.textStrokeState_) {\n        context.strokeText(this.text_, x, y);\n      }\n      if (this.textFillState_) {\n        context.fillText(this.text_, x, y);\n      }\n    }\n    if (rotation !== 0 || this.textScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  CanvasImmediateRenderer.prototype.moveToLineTo_ = function moveToLineTo_ (flatCoordinates, offset, end, stride, close) {\n    var context = this.context_;\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    var length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (var i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasImmediateRenderer.prototype.drawRings_ = function drawRings_ (flatCoordinates, offset, ends, stride) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n    }\n    return offset;\n  };\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawCircle = function drawCircle (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var pixelCoordinates = transformGeom2D(\n        geometry, this.transform_, this.pixelCoordinates_);\n      var dx = pixelCoordinates[2] - pixelCoordinates[0];\n      var dy = pixelCoordinates[3] - pixelCoordinates[1];\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      var context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  };\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.setStyle = function setStyle (style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  };\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawGeometry = function drawGeometry (geometry) {\n    var type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(/** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(/** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(/** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(/** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(/** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(/** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(/** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(/** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n        break;\n      default:\n    }\n  };\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawFeature = function drawFeature (feature, style) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  };\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawGeometryCollection = function drawGeometryCollection (geometry) {\n    var geometries = geometry.getGeometriesArray();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  };\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawPoint = function drawPoint (geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPoint = function drawMultiPoint (geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawLineString = function drawLineString (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length,\n        geometry.getStride(), false);\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  };\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiLineString = function drawMultiLineString (geometry) {\n    var geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      var offset = 0;\n      var ends = /** @type {Array<number>} */ (geometry.getEnds());\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  };\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawPolygon = function drawPolygon (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      context.beginPath();\n      this.drawRings_(geometry.getOrientedFlatCoordinates(),\n        0, /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  };\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPolygon = function drawMultiPolygon (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      var flatCoordinates = geometry.getOrientedFlatCoordinates();\n      var offset = 0;\n      var endss = geometry.getEndss();\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextFillState_ = function setContextFillState_ (fillState) {\n    var context = this.context_;\n    var contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextStrokeState_ = function setContextStrokeState_ (strokeState) {\n    var context = this.context_;\n    var contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n      if (context.setLineDash) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n      }\n      if (context.setLineDash) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = context.lineDashOffset =\n              strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = context.miterLimit =\n            strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = context.strokeStyle =\n            strokeState.strokeStyle;\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextTextState_ = function setContextTextState_ (textState) {\n    var context = this.context_;\n    var contextTextState = this.contextTextState_;\n    var textAlign = textState.textAlign ?\n      textState.textAlign : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = context.textBaseline =\n          /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      }\n    }\n  };\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      var fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(fillStyleColor ?\n          fillStyleColor : defaultFillStyle)\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      var strokeStyleColor = strokeStyle.getColor();\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      var strokeStyleWidth = strokeStyle.getWidth();\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      this.strokeState_ = {\n        lineCap: strokeStyleLineCap !== undefined ?\n          strokeStyleLineCap : defaultLineCap,\n        lineDash: strokeStyleLineDash ?\n          strokeStyleLineDash : defaultLineDash,\n        lineDashOffset: strokeStyleLineDashOffset ?\n          strokeStyleLineDashOffset : defaultLineDashOffset,\n        lineJoin: strokeStyleLineJoin !== undefined ?\n          strokeStyleLineJoin : defaultLineJoin,\n        lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\n          strokeStyleWidth : defaultLineWidth),\n        miterLimit: strokeStyleMiterLimit !== undefined ?\n          strokeStyleMiterLimit : defaultMiterLimit,\n        strokeStyle: asColorLike(strokeStyleColor ?\n          strokeStyleColor : defaultStrokeStyle)\n      };\n    }\n  };\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setImageStyle = function setImageStyle (imageStyle) {\n    if (!imageStyle) {\n      this.image_ = null;\n    } else {\n      var imageAnchor = imageStyle.getAnchor();\n      // FIXME pixel ratio\n      var imageImage = imageStyle.getImage(1);\n      var imageOrigin = imageStyle.getOrigin();\n      var imageSize = imageStyle.getSize();\n      this.imageAnchorX_ = imageAnchor[0];\n      this.imageAnchorY_ = imageAnchor[1];\n      this.imageHeight_ = imageSize[1];\n      this.image_ = imageImage;\n      this.imageOpacity_ = imageStyle.getOpacity();\n      this.imageOriginX_ = imageOrigin[0];\n      this.imageOriginY_ = imageOrigin[1];\n      this.imageRotateWithView_ = imageStyle.getRotateWithView();\n      this.imageRotation_ = imageStyle.getRotation();\n      this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n      this.imageWidth_ = imageSize[0];\n    }\n  };\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setTextStyle = function setTextStyle (textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        var textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(textFillStyleColor ?\n            textFillStyleColor : defaultFillStyle)\n        };\n      }\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        var textStrokeStyleColor = textStrokeStyle.getColor();\n        var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        var textStrokeStyleWidth = textStrokeStyle.getWidth();\n        var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap: textStrokeStyleLineCap !== undefined ?\n            textStrokeStyleLineCap : defaultLineCap,\n          lineDash: textStrokeStyleLineDash ?\n            textStrokeStyleLineDash : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset ?\n            textStrokeStyleLineDashOffset : defaultLineDashOffset,\n          lineJoin: textStrokeStyleLineJoin !== undefined ?\n            textStrokeStyleLineJoin : defaultLineJoin,\n          lineWidth: textStrokeStyleWidth !== undefined ?\n            textStrokeStyleWidth : defaultLineWidth,\n          miterLimit: textStrokeStyleMiterLimit !== undefined ?\n            textStrokeStyleMiterLimit : defaultMiterLimit,\n          strokeStyle: asColorLike(textStrokeStyleColor ?\n            textStrokeStyleColor : defaultStrokeStyle)\n        };\n      }\n      var textFont = textStyle.getFont();\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      var textScale = textStyle.getScale();\n      var textText = textStyle.getText();\n      var textTextAlign = textStyle.getTextAlign();\n      var textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ?\n          textFont : defaultFont,\n        textAlign: textTextAlign !== undefined ?\n          textTextAlign : defaultTextAlign,\n        textBaseline: textTextBaseline !== undefined ?\n          textTextBaseline : defaultTextBaseline\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n          textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\n      this.textOffsetY_ =\n          textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\n      this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\n        textScale : 1);\n    }\n  };\n\n  return CanvasImmediateRenderer;\n}(VectorContext));\n\n\nexport default CanvasImmediateRenderer;\n\n//# sourceMappingURL=Immediate.js.map","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = function TileRange(minX, maxX, minY, maxY) {\n\n  /**\n   * @type {number}\n   */\n  this.minX = minX;\n\n  /**\n   * @type {number}\n   */\n  this.maxX = maxX;\n\n  /**\n   * @type {number}\n   */\n  this.minY = minY;\n\n  /**\n   * @type {number}\n   */\n  this.maxY = maxY;\n\n};\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {boolean} Contains tile coordinate.\n */\nTileRange.prototype.contains = function contains (tileCoord) {\n  return this.containsXY(tileCoord[1], tileCoord[2]);\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Contains.\n */\nTileRange.prototype.containsTileRange = function containsTileRange (tileRange) {\n  return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n     this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n};\n\n/**\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @return {boolean} Contains coordinate.\n */\nTileRange.prototype.containsXY = function containsXY (x, y) {\n  return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Equals.\n */\nTileRange.prototype.equals = function equals (tileRange) {\n  return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n     this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n */\nTileRange.prototype.extend = function extend (tileRange) {\n  if (tileRange.minX < this.minX) {\n    this.minX = tileRange.minX;\n  }\n  if (tileRange.maxX > this.maxX) {\n    this.maxX = tileRange.maxX;\n  }\n  if (tileRange.minY < this.minY) {\n    this.minY = tileRange.minY;\n  }\n  if (tileRange.maxY > this.maxY) {\n    this.maxY = tileRange.maxY;\n  }\n};\n\n/**\n * @return {number} Height.\n */\nTileRange.prototype.getHeight = function getHeight () {\n  return this.maxY - this.minY + 1;\n};\n\n/**\n * @return {import(\"./size.js\").Size} Size.\n */\nTileRange.prototype.getSize = function getSize () {\n  return [this.getWidth(), this.getHeight()];\n};\n\n/**\n * @return {number} Width.\n */\nTileRange.prototype.getWidth = function getWidth () {\n  return this.maxX - this.minX + 1;\n};\n\n/**\n * @param {TileRange} tileRange Tile range.\n * @return {boolean} Intersects.\n */\nTileRange.prototype.intersects = function intersects (tileRange) {\n  return this.minX <= tileRange.maxX &&\n     this.maxX >= tileRange.minX &&\n     this.minY <= tileRange.maxY &&\n     this.maxY >= tileRange.minY;\n};\n\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\n\nexport default TileRange;\n\n//# sourceMappingURL=TileRange.js.map","/**\n * @module ol/tilecoord\n */\n\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  var z = tileCoord[0];\n  var x = tileCoord[1];\n  var y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  var extent = tileGrid.getExtent();\n  var tileRange;\n  if (!extent) {\n    tileRange = tileGrid.getFullTileRange(z);\n  } else {\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n  }\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n\n//# sourceMappingURL=tilecoord.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport TileRange, {createOrUpdate as createOrUpdateTileRange} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\n\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Sizes.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = function TileGrid(options) {\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n  /**\n   * @private\n   * @type {!Array<number>}\n   */\n  this.resolutions_ = options.resolutions;\n  assert(isSorted(this.resolutions_, function(a, b) {\n    return b - a;\n  }, true), 17); // `resolutions` must be sorted in descending order\n\n\n  // check if we've got a consistent zoom factor and origin\n  var zoomFactor;\n  if (!options.origins) {\n    for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n      if (!zoomFactor) {\n        zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n      } else {\n        if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n          zoomFactor = undefined;\n          break;\n        }\n      }\n    }\n  }\n\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zoomFactor_ = zoomFactor;\n\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.maxZoom = this.resolutions_.length - 1;\n\n  /**\n   * @private\n   * @type {import(\"../coordinate.js\").Coordinate}\n   */\n  this.origin_ = options.origin !== undefined ? options.origin : null;\n\n  /**\n   * @private\n   * @type {Array<import(\"../coordinate.js\").Coordinate>}\n   */\n  this.origins_ = null;\n  if (options.origins !== undefined) {\n    this.origins_ = options.origins;\n    assert(this.origins_.length == this.resolutions_.length,\n      20); // Number of `origins` and `resolutions` must be equal\n  }\n\n  var extent = options.extent;\n\n  if (extent !== undefined &&\n      !this.origin_ && !this.origins_) {\n    this.origin_ = getTopLeft(extent);\n  }\n\n  assert(\n    (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n    18); // Either `origin` or `origins` must be configured, never both\n\n  /**\n   * @private\n   * @type {Array<number|import(\"../size.js\").Size>}\n   */\n  this.tileSizes_ = null;\n  if (options.tileSizes !== undefined) {\n    this.tileSizes_ = options.tileSizes;\n    assert(this.tileSizes_.length == this.resolutions_.length,\n      19); // Number of `tileSizes` and `resolutions` must be equal\n  }\n\n  /**\n   * @private\n   * @type {number|import(\"../size.js\").Size}\n   */\n  this.tileSize_ = options.tileSize !== undefined ?\n    options.tileSize :\n    !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n  assert(\n    (!this.tileSize_ && this.tileSizes_) ||\n      (this.tileSize_ && !this.tileSizes_),\n    22); // Either `tileSize` or `tileSizes` must be configured, never both\n\n  /**\n   * @private\n   * @type {import(\"../extent.js\").Extent}\n   */\n  this.extent_ = extent !== undefined ? extent : null;\n\n\n  /**\n   * @private\n   * @type {Array<import(\"../TileRange.js\").default>}\n   */\n  this.fullTileRanges_ = null;\n\n  /**\n   * @private\n   * @type {import(\"../size.js\").Size}\n   */\n  this.tmpSize_ = [0, 0];\n\n  if (options.sizes !== undefined) {\n    this.fullTileRanges_ = options.sizes.map(function(size, z) {\n      var tileRange = new TileRange(\n        Math.min(0, size[0]), Math.max(size[0] - 1, -1),\n        Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n      return tileRange;\n    }, this);\n  } else if (extent) {\n    this.calculateTileRanges_(extent);\n  }\n\n};\n\n/**\n * Call a function with each tile coordinate for a given extent and zoom level.\n *\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} zoom Integer zoom level.\n * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n * @api\n */\nTileGrid.prototype.forEachTileCoord = function forEachTileCoord (extent, zoom, callback) {\n  var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n  for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n    for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n      callback([zoom, i, j]);\n    }\n  }\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {function(this: T, number, import(\"../TileRange.js\").default): boolean} callback Callback.\n * @param {T=} opt_this The object to use as `this` in `callback`.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {boolean} Callback succeeded.\n * @template T\n */\nTileGrid.prototype.forEachTileCoordParentTileRange = function forEachTileCoordParentTileRange (tileCoord, callback, opt_this, opt_tileRange, opt_extent) {\n  var tileRange, x, y;\n  var tileCoordExtent = null;\n  var z = tileCoord[0] - 1;\n  if (this.zoomFactor_ === 2) {\n    x = tileCoord[1];\n    y = tileCoord[2];\n  } else {\n    tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n  }\n  while (z >= this.minZoom) {\n    if (this.zoomFactor_ === 2) {\n      x = Math.floor(x / 2);\n      y = Math.floor(y / 2);\n      tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n    } else {\n      tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n    }\n    if (callback.call(opt_this, z, tileRange)) {\n      return true;\n    }\n    --z;\n  }\n  return false;\n};\n\n/**\n * Get the extent for this tile grid, if it was configured.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nTileGrid.prototype.getExtent = function getExtent () {\n  return this.extent_;\n};\n\n/**\n * Get the maximum zoom level for the grid.\n * @return {number} Max zoom.\n * @api\n */\nTileGrid.prototype.getMaxZoom = function getMaxZoom () {\n  return this.maxZoom;\n};\n\n/**\n * Get the minimum zoom level for the grid.\n * @return {number} Min zoom.\n * @api\n */\nTileGrid.prototype.getMinZoom = function getMinZoom () {\n  return this.minZoom;\n};\n\n/**\n * Get the origin for the grid at the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {import(\"../coordinate.js\").Coordinate} Origin.\n * @api\n */\nTileGrid.prototype.getOrigin = function getOrigin (z) {\n  if (this.origin_) {\n    return this.origin_;\n  } else {\n    return this.origins_[z];\n  }\n};\n\n/**\n * Get the resolution for the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {number} Resolution.\n * @api\n */\nTileGrid.prototype.getResolution = function getResolution (z) {\n  return this.resolutions_[z];\n};\n\n/**\n * Get the list of resolutions for the tile grid.\n * @return {Array<number>} Resolutions.\n * @api\n */\nTileGrid.prototype.getResolutions = function getResolutions () {\n  return this.resolutions_;\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {import(\"../TileRange.js\").default} Tile range.\n */\nTileGrid.prototype.getTileCoordChildTileRange = function getTileCoordChildTileRange (tileCoord, opt_tileRange, opt_extent) {\n  if (tileCoord[0] < this.maxZoom) {\n    if (this.zoomFactor_ === 2) {\n      var minX = tileCoord[1] * 2;\n      var minY = tileCoord[2] * 2;\n      return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n    }\n    var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    return this.getTileRangeForExtentAndZ(\n      tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n  }\n  return null;\n};\n\n/**\n * Get the extent for a tile range.\n * @param {number} z Integer zoom level.\n * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nTileGrid.prototype.getTileRangeExtent = function getTileRangeExtent (z, tileRange, opt_extent) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n  var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n  var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n  var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n  var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n/**\n * Get a tile range for the given extent and integer zoom level.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} z Integer zoom level.\n * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n * @return {import(\"../TileRange.js\").default} Tile range.\n */\nTileGrid.prototype.getTileRangeForExtentAndZ = function getTileRangeForExtentAndZ (extent, z, opt_tileRange) {\n  var tileCoord = tmpTileCoord;\n  this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n  var minX = tileCoord[1];\n  var minY = tileCoord[2];\n  this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n  return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n */\nTileGrid.prototype.getTileCoordCenter = function getTileCoordCenter (tileCoord) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  return [\n    origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n    origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution\n  ];\n};\n\n/**\n * Get the extent of a tile coordinate.\n *\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n * @return {import(\"../extent.js\").Extent} Extent.\n * @api\n */\nTileGrid.prototype.getTileCoordExtent = function getTileCoordExtent (tileCoord, opt_extent) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n  var minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n  var maxX = minX + tileSize[0] * resolution;\n  var maxY = minY + tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n/**\n * Get the tile coordinate for the given map coordinate and resolution.This\n * method considers that coordinates that intersect tile boundaries should be\n * assigned the higher tile coordinate.\n *\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndResolution = function getTileCoordForCoordAndResolution (coordinate, resolution, opt_tileCoord) {\n  return this.getTileCoordForXYAndResolution_(\n    coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n};\n\n/**\n * Note that this method should not be called for resolutions that correspond\n * to an integer zoom level.Instead call the `getTileCoordForXYAndZ_` method.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} resolution Resolution (for a non-integer zoom level).\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *   intersections go to the higher tile coordinate, let edge intersections\n *   go to the lower tile coordinate.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndResolution_ = function getTileCoordForXYAndResolution_ (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n  var z = this.getZForResolution(resolution);\n  var scale = resolution / this.getResolution(z);\n  var origin = this.getOrigin(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n  var tileCoordX = scale * xFromOrigin / tileSize[0];\n  var tileCoordY = scale * yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n/**\n * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n * they should have separate implementations.This method is for integer zoom\n * levels.The other method should only be called for resolutions corresponding\n * to non-integer zoom levels.\n * @param {number} x Map x coordinate.\n * @param {number} y Map y coordinate.\n * @param {number} z Integer zoom level.\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *   intersections go to the higher tile coordinate, let edge intersections\n *   go to the lower tile coordinate.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndZ_ = function getTileCoordForXYAndZ_ (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n  var tileCoordX = xFromOrigin / tileSize[0];\n  var tileCoordY = yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n/**\n * Get a tile coordinate given a map coordinate and zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} z Zoom level.\n * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndZ = function getTileCoordForCoordAndZ (coordinate, z, opt_tileCoord) {\n  return this.getTileCoordForXYAndZ_(\n    coordinate[0], coordinate[1], z, false, opt_tileCoord);\n};\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @return {number} Tile resolution.\n */\nTileGrid.prototype.getTileCoordResolution = function getTileCoordResolution (tileCoord) {\n  return this.resolutions_[tileCoord[0]];\n};\n\n/**\n * Get the tile size for a zoom level. The type of the return value matches the\n * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n * @param {number} z Z.\n * @return {number|import(\"../size.js\").Size} Tile size.\n * @api\n */\nTileGrid.prototype.getTileSize = function getTileSize (z) {\n  if (this.tileSize_) {\n    return this.tileSize_;\n  } else {\n    return this.tileSizes_[z];\n  }\n};\n\n/**\n * @param {number} z Zoom level.\n * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n */\nTileGrid.prototype.getFullTileRange = function getFullTileRange (z) {\n  if (!this.fullTileRanges_) {\n    return null;\n  } else {\n    return this.fullTileRanges_[z];\n  }\n};\n\n/**\n * @param {number} resolution Resolution.\n * @param {number=} opt_direction If 0, the nearest resolution will be used.\n *   If 1, the nearest lower resolution will be used. If -1, the nearest\n *   higher resolution will be used. Default is 0.\n * @return {number} Z.\n * @api\n */\nTileGrid.prototype.getZForResolution = function getZForResolution (resolution, opt_direction) {\n  var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n  return clamp(z, this.minZoom, this.maxZoom);\n};\n\n/**\n * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n * @private\n */\nTileGrid.prototype.calculateTileRanges_ = function calculateTileRanges_ (extent) {\n  var length = this.resolutions_.length;\n  var fullTileRanges = new Array(length);\n  for (var z = this.minZoom; z < length; ++z) {\n    fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n  }\n  this.fullTileRanges_ = fullTileRanges;\n};\n\n\nexport default TileGrid;\n\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/tilegrid\n */\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {toSize} from './size.js';\nimport {containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth} from './extent.js';\nimport Corner from './extent/Corner.js';\nimport {get as getProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  var tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  var z = tileCoord[0];\n  var center = tileGrid.getTileCoordCenter(tileCoord);\n  var projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    var worldWidth = getWidth(projectionExtent);\n    var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize\n  });\n}\n\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  /** @type {XYZOptions} */\n  var xyzOptions = opt_options || {};\n\n  var extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  /** @type {import(\"./tilegrid/TileGrid.js\").Options} */\n  var gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize\n    )\n  };\n  return new TileGrid(gridOptions);\n}\n\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n  var maxZoom = opt_maxZoom !== undefined ?\n    opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  var height = getHeight(extent);\n  var width = getWidth(extent);\n\n  var tileSize = toSize(opt_tileSize !== undefined ?\n    opt_tileSize : DEFAULT_TILE_SIZE);\n  var maxResolution = Math.max(\n    width / tileSize[0], height / tileSize[1]);\n\n  var length = maxZoom + 1;\n  var resolutions = new Array(length);\n  for (var z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n  var extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  var extent = projection.getExtent();\n  if (!extent) {\n    var half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n\n//# sourceMappingURL=tilegrid.js.map","/**\n * @module ol/xml\n */\nimport {extend} from './array.js';\n\n\n/**\n * When using {@link module:ol/xml~makeChildAppender} or\n * {@link module:ol/xml~makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Node} node\n */\n\n\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n\n\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n\n\n/**\n * This document should be used when creating nodes for XML serializations. This\n * document is also used by {@link module:ol/xml~createElementNS}\n * @const\n * @type {Document}\n */\nexport var DOCUMENT = document.implementation.createDocument('', '', null);\n\n\n/**\n * @type {string}\n */\nexport var XML_SCHEMA_INSTANCE_URI = 'http://www.w3.org/2001/XMLSchema-instance';\n\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n  return DOCUMENT.createElementNS(namespaceURI, qualifiedName);\n}\n\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n  if (node.nodeType == Node.CDATA_SECTION_NODE ||\n      node.nodeType == Node.TEXT_NODE) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    var n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n}\n\n\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n  return 'documentElement' in object;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n}\n\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n}\n\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        var array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\n        extend(array, value);\n      }\n    }\n  );\n}\n\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        var array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\n        array.push(value);\n      }\n    });\n}\n\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    });\n}\n\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        var object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n        var property = opt_property !== undefined ? opt_property : node.localName;\n        var array;\n        if (property in object) {\n          array = object[property];\n        } else {\n          array = object[property] = [];\n        }\n        array.push(value);\n      }\n    });\n}\n\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        var object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n        var property = opt_property !== undefined ? opt_property : node.localName;\n        object[property] = value;\n      }\n    });\n}\n\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, opt_this) {\n  return function(node, value, objectStack) {\n    nodeWriter.call(opt_this !== undefined ? opt_this : this, node, value, objectStack);\n    var parent = /** @type {NodeStackItem} */ (objectStack[objectStack.length - 1]);\n    var parentNode = parent.node;\n    parentNode.appendChild(node);\n  };\n}\n\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml~serialize}. This can be used by the parent writer to have the\n * 'nodeWriter' called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, opt_this) {\n  var serializersNS, nodeFactory;\n  return function(node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      var serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = makeSimpleNodeFactory(node.localName);\n    }\n    serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n}\n\n\n/**\n * Create a node factory which can use the `opt_keys` passed to\n * {@link module:ol/xml~serialize} or {@link module:ol/xml~pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string=} opt_nodeName Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string=} opt_namespaceURI Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(opt_nodeName, opt_namespaceURI) {\n  var fixedNodeName = opt_nodeName;\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Node} Node.\n     */\n    function(value, objectStack, opt_nodeName) {\n      var context = /** @type {NodeStackItem} */ (objectStack[objectStack.length - 1]);\n      var node = context.node;\n      var nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = opt_nodeName;\n      }\n\n      var namespaceURI = opt_namespaceURI !== undefined ? opt_namespaceURI : node.namespaceURI;\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n}\n\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport var OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n\n\n/**\n * Create an array of `values` to be used with {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `opt_key` argument.\n * @param {Object<string, V>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<V>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n * @template V\n */\nexport function makeSequence(object, orderedKeys) {\n  var length = orderedKeys.length;\n  var sequence = new Array(length);\n  for (var i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n}\n\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>=} opt_structureNS Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, opt_structureNS) {\n  /**\n   * @type {Object<string, T>}\n   */\n  var structureNS = opt_structureNS !== undefined ? opt_structureNS : {};\n  var i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n}\n\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, opt_this) {\n  var n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    var parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      var parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(opt_this, n, objectStack);\n      }\n    }\n  }\n}\n\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(object, parsersNS, node, objectStack, opt_this) {\n  objectStack.push(object);\n  parseNode(parsersNS, node, objectStack, opt_this);\n  return /** @type {T} */ (objectStack.pop());\n}\n\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(\n  serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n  var length = (opt_keys !== undefined ? opt_keys : values).length;\n  var value, node;\n  for (var i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(opt_this !== undefined ? opt_this : this, value, objectStack,\n        opt_keys !== undefined ? opt_keys[i] : undefined);\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName]\n          .call(opt_this, node, value, objectStack);\n      }\n    }\n  }\n}\n\n\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(object, serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n  objectStack.push(object);\n  serialize(serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this);\n  return /** @type {O|undefined} */ (objectStack.pop());\n}\n\n//# sourceMappingURL=xml.js.map","/**\n * @module ol/webgl\n */\n\n\n/**\n * Constants taken from goog.webgl\n */\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ONE = 1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var SRC_ALPHA = 0x0302;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var COLOR_ATTACHMENT0 = 0x8CE0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var COLOR_BUFFER_BIT = 0x00004000;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TRIANGLES = 0x0004;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TRIANGLE_STRIP = 0x0005;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ONE_MINUS_SRC_ALPHA = 0x0303;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ARRAY_BUFFER = 0x8892;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ELEMENT_ARRAY_BUFFER = 0x8893;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var STREAM_DRAW = 0x88E0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var STATIC_DRAW = 0x88E4;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DYNAMIC_DRAW = 0x88E8;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var CULL_FACE = 0x0B44;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var BLEND = 0x0BE2;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var STENCIL_TEST = 0x0B90;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DEPTH_TEST = 0x0B71;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var SCISSOR_TEST = 0x0C11;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_BYTE = 0x1401;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_SHORT = 0x1403;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_INT = 0x1405;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var FLOAT = 0x1406;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var RGBA = 0x1908;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var FRAGMENT_SHADER = 0x8B30;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var VERTEX_SHADER = 0x8B31;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var LINK_STATUS = 0x8B82;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var LINEAR = 0x2601;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_MAG_FILTER = 0x2800;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_MIN_FILTER = 0x2801;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_WRAP_S = 0x2802;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_WRAP_T = 0x2803;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_2D = 0x0DE1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE0 = 0x84C0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var CLAMP_TO_EDGE = 0x812F;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var COMPILE_STATUS = 0x8B81;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var FRAMEBUFFER = 0x8D40;\n\n\n/** end of goog.webgl constants\n */\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar CONTEXT_IDS = [\n  'experimental-webgl',\n  'webgl',\n  'webkit-3d',\n  'moz-webgl'\n];\n\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object=} opt_attributes Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, opt_attributes) {\n  var ii = CONTEXT_IDS.length;\n  for (var i = 0; i < ii; ++i) {\n    try {\n      var context = canvas.getContext(CONTEXT_IDS[i], opt_attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n\n\n/**\n * Include debuggable shader sources.  Default is `true`. This should be set to\n * `false` for production builds.\n * @type {boolean}\n */\nexport var DEBUG = true;\n\n\n/**\n * The maximum supported WebGL texture size in pixels. If WebGL is not\n * supported, the value is set to `undefined`.\n * @type {number|undefined}\n */\nvar MAX_TEXTURE_SIZE; // value is set below\n\n\n/**\n * List of supported WebGL extensions.\n * @type {Array<string>}\n */\nvar EXTENSIONS; // value is set below\n\n\n/**\n * True if both OpenLayers and browser support WebGL.\n * @type {boolean}\n * @api\n */\nvar HAS = false;\n\n//TODO Remove side effects\nif (typeof window !== 'undefined' && 'WebGLRenderingContext' in window) {\n  try {\n    var canvas = /** @type {HTMLCanvasElement} */ (document.createElement('canvas'));\n    var gl = getContext(canvas);\n    if (gl) {\n      HAS = true;\n      MAX_TEXTURE_SIZE = /** @type {number} */ (gl.getParameter(gl.MAX_TEXTURE_SIZE));\n      EXTENSIONS = gl.getSupportedExtensions();\n    }\n  } catch (e) {\n    // pass\n  }\n}\n\nexport {HAS, MAX_TEXTURE_SIZE, EXTENSIONS};\n\n//# sourceMappingURL=webgl.js.map","/**\n * @module ol/webgl/ContextEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LOST: 'webglcontextlost',\n  RESTORED: 'webglcontextrestored'\n};\n\n//# sourceMappingURL=ContextEventType.js.map","/**\n * @module ol/vec/mat4\n */\n\n\n/**\n * @return {Array<number>} 4x4 matrix representing a 3D identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\n\n/**\n * @param {Array<number>} mat4 Flattened 4x4 matrix receiving the result.\n * @param {import(\"../transform.js\").Transform} transform Transformation matrix.\n * @return {Array<number>} 2D transformation matrix as flattened 4x4 matrix.\n */\nexport function fromTransform(mat4, transform) {\n  mat4[0] = transform[0];\n  mat4[1] = transform[1];\n  mat4[4] = transform[2];\n  mat4[5] = transform[3];\n  mat4[12] = transform[4];\n  mat4[13] = transform[5];\n  return mat4;\n}\n\n//# sourceMappingURL=mat4.js.map","/**\n * @module ol/webgl/PostProcessingPass\n */\n\nvar DEFAULT_VERTEX_SHADER = \"\\n  precision mediump float;\\n  \\n  attribute vec2 a_position;\\n  varying vec2 v_texCoord;\\n  varying vec2 v_screenCoord;\\n  \\n  uniform vec2 u_screenSize;\\n   \\n  void main() {\\n    v_texCoord = a_position * 0.5 + 0.5;\\n    v_screenCoord = v_texCoord * u_screenSize;\\n    gl_Position = vec4(a_position, 0.0, 1.0);\\n  }\\n\";\n\nvar DEFAULT_FRAGMENT_SHADER = \"\\n  precision mediump float;\\n   \\n  uniform sampler2D u_image;\\n   \\n  varying vec2 v_texCoord;\\n  varying vec2 v_screenCoord;\\n   \\n  void main() {\\n    gl_FragColor = texture2D(u_image, v_texCoord);\\n    gl_FragColor.rgb *= gl_FragColor.a;\\n  }\\n\";\n\n/**\n * @typedef {Object} Options\n * @property {WebGLRenderingContext} webGlContext WebGL context; mandatory.\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object.<string,import(\"./Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {import(\"./Helper\").UniformValue} value Value\n * @property {number} location Location\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @classdesc\n * This class is used to define Post Processing passes with custom shaders and uniforms.\n * This is used internally by {@link module:ol/webgl/Helper~WebGLHelper}.\n *\n * Please note that the final output on the DOM canvas is expected to have premultiplied alpha, which means that\n * a pixel which is 100% red with an opacity of 50% must have a color of (r=0.5, g=0, b=0, a=0.5).\n * Failing to provide pixel colors with premultiplied alpha will result in render anomalies.\n *\n * Default shaders are shown hereafter:\n *\n * * Vertex shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   attribute vec2 a_position;\n *   varying vec2 v_texCoord;\n *   varying vec2 v_screenCoord;\n *\n *   uniform vec2 u_screenSize;\n *\n *   void main() {\n *     v_texCoord = a_position * 0.5 + 0.5;\n *     v_screenCoord = v_texCoord * u_screenSize;\n *     gl_Position = vec4(a_position, 0.0, 1.0);\n *   }\n *   ```\n *\n * * Fragment shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   uniform sampler2D u_image;\n *\n *   varying vec2 v_texCoord;\n *   varying vec2 v_screenCoord;\n *\n *   void main() {\n *     gl_FragColor = texture2D(u_image, v_texCoord);\n *     gl_FragColor.rgb *= gl_FragColor.a;\n *   }\n *   ```\n *\n * @api\n */\nvar WebGLPostProcessingPass = function WebGLPostProcessingPass(options) {\n  this.gl_ = options.webGlContext;\n  var gl = this.gl_;\n\n  this.scaleRatio_ = options.scaleRatio || 1;\n\n  this.renderTargetTexture_ = gl.createTexture();\n  this.renderTargetTextureSize_ = null;\n\n  this.frameBuffer_ = gl.createFramebuffer();\n\n  // compile the program for the frame buffer\n  // TODO: make compilation errors show up\n  var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n  gl.shaderSource(vertexShader, options.vertexShader || DEFAULT_VERTEX_SHADER);\n  gl.compileShader(vertexShader);\n  var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n  gl.shaderSource(fragmentShader, options.fragmentShader || DEFAULT_FRAGMENT_SHADER);\n  gl.compileShader(fragmentShader);\n  this.renderTargetProgram_ = gl.createProgram();\n  gl.attachShader(this.renderTargetProgram_, vertexShader);\n  gl.attachShader(this.renderTargetProgram_, fragmentShader);\n  gl.linkProgram(this.renderTargetProgram_);\n\n  // bind the vertices buffer for the frame buffer\n  this.renderTargetVerticesBuffer_ = gl.createBuffer();\n  var verticesArray = [\n    -1, -1,\n    1, -1,\n    -1, 1,\n    1, -1,\n    1, 1,\n    -1, 1\n  ];\n  gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(verticesArray), gl.STATIC_DRAW);\n\n  this.renderTargetAttribLocation_ = gl.getAttribLocation(this.renderTargetProgram_, 'a_position');\n  this.renderTargetUniformLocation_ = gl.getUniformLocation(this.renderTargetProgram_, 'u_screenSize');\n  this.renderTargetTextureLocation_ = gl.getUniformLocation(this.renderTargetProgram_, 'u_image');\n\n  /**\n   * Holds info about custom uniforms used in the post processing pass\n   * @type {Array<UniformInternalDescription>}\n   * @private\n   */\n  this.uniforms_ = [];\n  options.uniforms && Object.keys(options.uniforms).forEach(function(name) {\n    this.uniforms_.push({\n      value: options.uniforms[name],\n      location: gl.getUniformLocation(this.renderTargetProgram_, name)\n    });\n  }.bind(this));\n};\n\n/**\n * Get the WebGL rendering context\n * @return {WebGLRenderingContext} The rendering context.\n * @api\n */\nWebGLPostProcessingPass.prototype.getGL = function getGL () {\n  return this.gl_;\n};\n\n/**\n * Initialize the render target texture of the post process, make sure it is at the\n * right size and bind it as a render target for the next draw calls.\n * The last step to be initialized will be the one where the primitives are rendered.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n * @api\n */\nWebGLPostProcessingPass.prototype.init = function init (frameState) {\n  var gl = this.getGL();\n  var canvas = gl.canvas;\n  var size = frameState.size;\n\n  // rendering goes to my buffer\n  gl.bindFramebuffer(gl.FRAMEBUFFER, this.getFrameBuffer());\n  gl.viewport(0, 0, canvas.width * this.scaleRatio_, canvas.height * this.scaleRatio_);\n\n  // if size has changed: adjust canvas & render target texture\n  if (!this.renderTargetTextureSize_ ||\n    this.renderTargetTextureSize_[0] !== size[0] || this.renderTargetTextureSize_[1] !== size[1]) {\n    this.renderTargetTextureSize_ = size;\n\n    // create a new texture\n    var level = 0;\n    var internalFormat = gl.RGBA;\n    var border = 0;\n    var format = gl.RGBA;\n    var type = gl.UNSIGNED_BYTE;\n    var data = null;\n    gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n    gl.texImage2D(gl.TEXTURE_2D, level, internalFormat,\n      canvas.width * this.scaleRatio_, canvas.height * this.scaleRatio_, border,\n      format, type, data);\n\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n    // bind the texture to the framebuffer\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.renderTargetTexture_, 0);\n  }\n};\n\n/**\n * Render to the next postprocessing pass (or to the canvas if final pass).\n * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n * @param {WebGLPostProcessingPass} [nextPass] Next pass, optional\n * @api\n */\nWebGLPostProcessingPass.prototype.apply = function apply (frameState, nextPass) {\n  var gl = this.getGL();\n  var canvas = gl.canvas;\n\n  gl.bindFramebuffer(gl.FRAMEBUFFER, nextPass ? nextPass.getFrameBuffer() : null);\n  gl.activeTexture(gl.TEXTURE0);\n  gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n\n  // render the frame buffer to the canvas\n  gl.clearColor(0.0, 0.0, 0.0, 0.0);\n  gl.clear(gl.COLOR_BUFFER_BIT);\n  gl.enable(gl.BLEND);\n  gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n  gl.viewport(0, 0, canvas.width, canvas.height);\n\n  gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n\n  gl.useProgram(this.renderTargetProgram_);\n  gl.enableVertexAttribArray(this.renderTargetAttribLocation_);\n  gl.vertexAttribPointer(this.renderTargetAttribLocation_, 2, gl.FLOAT, false, 0, 0);\n  gl.uniform2f(this.renderTargetUniformLocation_, canvas.width, canvas.height);\n  gl.uniform1i(this.renderTargetTextureLocation_, 0);\n\n  this.applyUniforms(frameState);\n\n  gl.drawArrays(gl.TRIANGLES, 0, 6);\n};\n\n/**\n * @returns {WebGLFramebuffer} Frame buffer\n * @api\n */\nWebGLPostProcessingPass.prototype.getFrameBuffer = function getFrameBuffer () {\n  return this.frameBuffer_;\n};\n\n/**\n * Sets the custom uniforms based on what was given in the constructor.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n * @private\n */\nWebGLPostProcessingPass.prototype.applyUniforms = function applyUniforms (frameState) {\n  var gl = this.getGL();\n\n  var value;\n  var textureSlot = 1;\n  this.uniforms_.forEach(function(uniform) {\n    value = typeof uniform.value === 'function' ? uniform.value(frameState) : uniform.value;\n\n    // apply value based on type\n    if (value instanceof HTMLCanvasElement || value instanceof ImageData) {\n      // create a texture & put data\n      if (!uniform.texture) {\n        uniform.texture = gl.createTexture();\n      }\n      gl.activeTexture(gl[(\"TEXTURE\" + textureSlot)]);\n      gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n      if (value instanceof ImageData) {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, value.width, value.height, 0,\n          gl.UNSIGNED_BYTE, new Uint8Array(value.data));\n      } else {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, value);\n      }\n\n      // fill texture slots\n      gl.uniform1i(uniform.location, textureSlot++);\n\n    } else if (Array.isArray(value)) {\n      switch (value.length) {\n        case 2:\n          gl.uniform2f(uniform.location, value[0], value[1]);\n          return;\n        case 3:\n          gl.uniform3f(uniform.location, value[0], value[1], value[2]);\n          return;\n        case 4:\n          gl.uniform4f(uniform.location, value[0], value[1], value[2], value[3]);\n          return;\n        default: return;\n      }\n    } else if (typeof value === 'number') {\n      gl.uniform1f(uniform.location, value);\n    }\n  });\n};\n\nexport default WebGLPostProcessingPass;\n\n//# sourceMappingURL=PostProcessingPass.js.map","/**\n * @module ol/webgl/Helper\n */\nimport {getUid} from '../util.js';\nimport {EXTENSIONS as WEBGL_EXTENSIONS} from '../webgl.js';\nimport Disposable from '../Disposable.js';\nimport {includes} from '../array.js';\nimport {listen, unlistenAll} from '../events.js';\nimport {clear} from '../obj.js';\nimport {ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER, TEXTURE_2D, TEXTURE_WRAP_S, TEXTURE_WRAP_T} from '../webgl.js';\nimport ContextEventType from '../webgl/ContextEventType.js';\nimport {\n  create as createTransform,\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n  translate as translateTransform\n} from '../transform';\nimport {create, fromTransform} from '../vec/mat4';\nimport WebGLPostProcessingPass from './PostProcessingPass';\nimport {getContext} from '../webgl';\n\n\n/**\n * @typedef {Object} BufferCacheEntry\n * @property {import(\"./Buffer.js\").default} buf\n * @property {WebGLBuffer} buffer\n */\n\n/**\n * Shader types, either `FRAGMENT_SHADER` or `VERTEX_SHADER`\n * @enum {number}\n */\nexport var ShaderType = {\n  FRAGMENT_SHADER: 0x8B30,\n  VERTEX_SHADER: 0x8B31\n};\n\n/**\n * Uniform names used in the default shaders.\n * @const\n * @type {Object.<string,string>}\n */\nexport var DefaultUniform = {\n  PROJECTION_MATRIX: 'u_projectionMatrix',\n  OFFSET_SCALE_MATRIX: 'u_offsetScaleMatrix',\n  OFFSET_ROTATION_MATRIX: 'u_offsetRotateMatrix'\n};\n\n/**\n * Attribute names used in the default shaders.\n * @const\n * @type {Object.<string,string>}\n */\nexport var DefaultAttrib = {\n  POSITION: 'a_position',\n  TEX_COORD: 'a_texCoord',\n  OPACITY: 'a_opacity',\n  ROTATE_WITH_VIEW: 'a_rotateWithView',\n  OFFSETS: 'a_offsets',\n  COLOR: 'a_color'\n};\n\n/**\n * @typedef {number|Array<number>|HTMLCanvasElement|HTMLImageElement|ImageData} UniformLiteralValue\n */\n\n/**\n * Uniform value can be a number, array of numbers (2 to 4), canvas element or a callback returning\n * one of the previous types.\n * @typedef {UniformLiteralValue|function(import(\"../PluggableMap.js\").FrameState):UniformLiteralValue} UniformValue\n */\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object.<string,UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {Object.<string,UniformValue>} [uniforms] Uniform definitions; property namesmust math the uniform\n * names in the provided or default shaders.\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {string} name Name\n * @property {UniformLiteralValue=} value Value\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @classdesc\n * This class is intended to provide low-level functions related to WebGL rendering, so that accessing\n * directly the WebGL API should not be required anymore.\n *\n * Several operations are handled by the `WebGLHelper` class:\n *\n * ### Define custom shaders and uniforms\n *\n *   *Shaders* are low-level programs executed on the GPU and written in GLSL. There are two types of shaders:\n *\n *   Vertex shaders are used to manipulate the position and attribute of *vertices* of rendered primitives (ie. corners of a square).\n *   Outputs are:\n *\n *   * `gl_Position`: position of the vertex in screen space\n *\n *   * Varyings usually prefixed with `v_` are passed on to the fragment shader\n *\n *   Fragment shaders are used to control the actual color of the pixels rawn on screen. Their only output is `gl_FragColor`.\n *\n *   Both shaders can take *uniforms* or *attributes* as input. Attributes are explained later. Uniforms are common, read-only values that\n *   can be changed at every frame and can be of type float, arrays of float or images.\n *\n *   Shaders must be compiled and assembled into a program like so:\n *   ```js\n *   // here we simply create two shaders and assemble them in a program which is then used\n *   // for subsequent rendering calls\n *   const vertexShader = new WebGLVertex(VERTEX_SHADER);\n *   const fragmentShader = new WebGLFragment(FRAGMENT_SHADER);\n *   this.program = this.context.getProgram(fragmentShader, vertexShader);\n *   this.context.useProgram(this.program);\n *   ```\n *\n *   Uniforms are defined using the `uniforms` option and can either be explicit values or callbacks taking the frame state as argument.\n *   You can also change their value along the way like so:\n *   ```js\n *   this.context.setUniformFloatValue('u_value', valueAsNumber);\n *   ```\n *\n * ### Defining post processing passes\n *\n *   *Post processing* describes the act of rendering primitives to a texture, and then rendering this texture to the final canvas\n *   while applying special effects in screen space.\n *   Typical uses are: blurring, color manipulation, depth of field, filtering...\n *\n *   The `WebGLHelper` class offers the possibility to define post processes at creation time using the `postProcesses` option.\n *   A post process step accepts the following options:\n *\n *   * `fragmentShader` and `vertexShader`: text literals in GLSL language that will be compiled and used in the post processing step.\n *   * `uniforms`: uniforms can be defined for the post processing steps just like for the main render.\n *   * `scaleRatio`: allows using an intermediate texture smaller or higher than the final canvas in the post processing step.\n *     This is typically used in blur steps to reduce the performance overhead by using an already downsampled texture as input.\n *\n *   The {@link module:ol/webgl/PostProcessingPass~WebGLPostProcessingPass} class is used internally, refer to its documentation for more info.\n *\n * ### Binding WebGL buffers and flushing data into them:\n *\n *   Data that must be passed to the GPU has to be transferred using `WebGLArrayBuffer` objects.\n *   A buffer has to be created only once, but must be bound everytime the data it holds is changed. Using `WebGLHelper.bindBuffer`\n *   will bind the buffer and flush the new data to the GPU.\n *\n *   For now, the `WebGLHelper` class expects {@link module:ol/webgl/Buffer~WebGLArrayBuffer} objects.\n *   ```js\n *   // at initialization phase\n *   this.verticesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *   this.indicesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *\n *   // at rendering phase\n *   this.context.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\n *   this.context.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *   ```\n *\n * ### Specifying attributes\n *\n *   The GPU only receives the data as arrays of numbers. These numbers must be handled differently depending on what it describes (position, texture coordinate...).\n *   Attributes are used to specify these uses. Use `WebGLHelper.enableAttributeArray` and either\n *   the default attribute names in {@link module:ol/webgl/Helper~DefaultAttrib} or custom ones.\n *\n *   Please note that you will have to specify the type and offset of the attributes in the data array. You can refer to the documentation of [WebGLRenderingContext.vertexAttribPointer](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer) for more explanation.\n *   ```js\n *   // here we indicate that the data array has the following structure:\n *   // [posX, posY, offsetX, offsetY, texCoordU, texCoordV, posX, posY, ...]\n *   let bytesPerFloat = Float32Array.BYTES_PER_ELEMENT;\n *   this.context.enableAttributeArray(DefaultAttrib.POSITION, 2, FLOAT, bytesPerFloat * 6, 0);\n *   this.context.enableAttributeArray(DefaultAttrib.OFFSETS, 2, FLOAT, bytesPerFloat * 6, bytesPerFloat * 2);\n *   this.context.enableAttributeArray(DefaultAttrib.TEX_COORD, 2, FLOAT, bytesPerFloat * 6, bytesPerFloat * 4);\n *   ```\n *\n * ### Rendering primitives\n *\n *   Once all the steps above have been achieved, rendering primitives to the screen is done using `WebGLHelper.prepareDraw` `drawElements` and `finalizeDraw`.\n *   ```js\n *   // frame preparation step\n *   this.context.prepareDraw(frameState);\n *\n *   // call this for every data array that has to be rendered on screen\n *   this.context.drawElements(0, this.indicesBuffer.getArray().length);\n *\n *   // finalize the rendering by applying post processes\n *   this.context.finalizeDraw(frameState);\n *   ```\n *\n * For an example usage of this class, refer to {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\n *\n *\n * @api\n */\nvar WebGLHelper = /*@__PURE__*/(function (Disposable) {\n  function WebGLHelper(opt_options) {\n    Disposable.call(this);\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = document.createElement('canvas');\n    this.canvas_.style.position = 'absolute';\n\n\n    /**\n     * @private\n     * @type {WebGLRenderingContext}\n     */\n    this.gl_ = getContext(this.canvas_);\n    var gl = this.getGL();\n\n    /**\n     * @private\n     * @type {!Object<string, BufferCacheEntry>}\n     */\n    this.bufferCache_ = {};\n\n    /**\n     * @private\n     * @type {!Array<WebGLShader>}\n     */\n    this.shaderCache_ = [];\n\n    /**\n     * @private\n     * @type {!Array<WebGLProgram>}\n     */\n    this.programCache_ = [];\n\n    /**\n     * @private\n     * @type {WebGLProgram}\n     */\n    this.currentProgram_ = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.hasOESElementIndexUint = includes(WEBGL_EXTENSIONS, 'OES_element_index_uint');\n\n    // use the OES_element_index_uint extension if available\n    if (this.hasOESElementIndexUint) {\n      gl.getExtension('OES_element_index_uint');\n    }\n\n    listen(this.canvas_, ContextEventType.LOST,\n      this.handleWebGLContextLost, this);\n    listen(this.canvas_, ContextEventType.RESTORED,\n      this.handleWebGLContextRestored, this);\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.projectionMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetRotateMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetScaleMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.tmpMat4_ = create();\n\n    /**\n     * @private\n     * @type {Object.<string, WebGLUniformLocation>}\n     */\n    this.uniformLocations_ = {};\n\n    /**\n     * @private\n     * @type {Object.<string, number>}\n     */\n    this.attribLocations_ = {};\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass.\n     * If the uniform is a texture, the WebGL Texture object will be stored here.\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    options.uniforms && Object.keys(options.uniforms).forEach(function(name) {\n      this.uniforms_.push({\n        name: name,\n        value: options.uniforms[name]\n      });\n    }.bind(this));\n\n    /**\n     * An array of PostProcessingPass objects is kept in this variable, built from the steps provided in the\n     * options. If no post process was given, a default one is used (so as not to have to make an exception to\n     * the frame buffer logic).\n     * @type {Array<WebGLPostProcessingPass>}\n     * @private\n     */\n    this.postProcessPasses_ = options.postProcesses ? options.postProcesses.map(function(options) {\n      return new WebGLPostProcessingPass({\n        webGlContext: gl,\n        scaleRatio: options.scaleRatio,\n        vertexShader: options.vertexShader,\n        fragmentShader: options.fragmentShader,\n        uniforms: options.uniforms\n      });\n    }) : [new WebGLPostProcessingPass({webGlContext: gl})];\n\n    /**\n     * @type {string|null}\n     * @private\n     */\n    this.shaderCompileErrors_ = null;\n  }\n\n  if ( Disposable ) WebGLHelper.__proto__ = Disposable;\n  WebGLHelper.prototype = Object.create( Disposable && Disposable.prototype );\n  WebGLHelper.prototype.constructor = WebGLHelper;\n\n  /**\n   * Just bind the buffer if it's in the cache. Otherwise create\n   * the WebGL buffer, bind it, populate it, and add an entry to\n   * the cache.\n   * TODO: improve this, the logic is unclear: we want A/ to bind a buffer and B/ to flush data in it\n   * @param {number} target Target.\n   * @param {import(\"./Buffer\").default} buf Buffer.\n   * @api\n   */\n  WebGLHelper.prototype.bindBuffer = function bindBuffer (target, buf) {\n    var gl = this.getGL();\n    var arr = buf.getArray();\n    var bufferKey = getUid(buf);\n    var bufferCache = this.bufferCache_[bufferKey];\n    if (!bufferCache) {\n      var buffer = gl.createBuffer();\n      bufferCache = this.bufferCache_[bufferKey] = {\n        buf: buf,\n        buffer: buffer\n      };\n    }\n    gl.bindBuffer(target, bufferCache.buffer);\n    var /** @type {ArrayBufferView} */ arrayBuffer;\n    if (target == ARRAY_BUFFER) {\n      arrayBuffer = new Float32Array(arr);\n    } else if (target == ELEMENT_ARRAY_BUFFER) {\n      arrayBuffer = this.hasOESElementIndexUint ?\n        new Uint32Array(arr) : new Uint16Array(arr);\n    }\n    gl.bufferData(target, arrayBuffer, buf.getUsage());\n  };\n\n  /**\n   * @param {import(\"./Buffer.js\").default} buf Buffer.\n   */\n  WebGLHelper.prototype.deleteBuffer = function deleteBuffer (buf) {\n    var gl = this.getGL();\n    var bufferKey = getUid(buf);\n    var bufferCacheEntry = this.bufferCache_[bufferKey];\n    if (!gl.isContextLost()) {\n      gl.deleteBuffer(bufferCacheEntry.buffer);\n    }\n    delete this.bufferCache_[bufferKey];\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLHelper.prototype.disposeInternal = function disposeInternal () {\n    unlistenAll(this.canvas_);\n    var gl = this.getGL();\n    if (!gl.isContextLost()) {\n      for (var key in this.bufferCache_) {\n        gl.deleteBuffer(this.bufferCache_[key].buffer);\n      }\n      for (var key$1 in this.programCache_) {\n        gl.deleteProgram(this.programCache_[key$1]);\n      }\n      for (var key$2 in this.shaderCache_) {\n        gl.deleteShader(this.shaderCache_[key$2]);\n      }\n    }\n  };\n\n  /**\n   * Clear the buffer & set the viewport to draw.\n   * Post process passes will be initialized here, the first one being bound as a render target for\n   * subsequent draw calls.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n   * @api\n   */\n  WebGLHelper.prototype.prepareDraw = function prepareDraw (frameState) {\n    var gl = this.getGL();\n    var canvas = this.getCanvas();\n    var size = frameState.size;\n    var pixelRatio = frameState.pixelRatio;\n\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n\n    gl.useProgram(this.currentProgram_);\n\n    // loop backwards in post processes list\n    for (var i = this.postProcessPasses_.length - 1; i >= 0; i--) {\n      this.postProcessPasses_[i].init(frameState);\n    }\n\n    gl.bindTexture(gl.TEXTURE_2D, null);\n\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\n    this.applyFrameState(frameState);\n    this.applyUniforms(frameState);\n  };\n\n  /**\n   * Execute a draw call based on the currently bound program, texture, buffers, attributes.\n   * @param {number} start Start index.\n   * @param {number} end End index.\n   * @api\n   */\n  WebGLHelper.prototype.drawElements = function drawElements (start, end) {\n    var gl = this.getGL();\n    var elementType = this.hasOESElementIndexUint ?\n      gl.UNSIGNED_INT : gl.UNSIGNED_SHORT;\n    var elementSize = this.hasOESElementIndexUint ? 4 : 2;\n\n    var numItems = end - start;\n    var offsetInBytes = start * elementSize;\n    gl.drawElements(gl.TRIANGLES, numItems, elementType, offsetInBytes);\n  };\n\n  /**\n   * Apply the successive post process passes which will eventually render to the actual canvas.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n   * @api\n   */\n  WebGLHelper.prototype.finalizeDraw = function finalizeDraw (frameState) {\n    // apply post processes using the next one as target\n    for (var i = 0; i < this.postProcessPasses_.length; i++) {\n      this.postProcessPasses_[i].apply(frameState, this.postProcessPasses_[i + 1] || null);\n    }\n  };\n\n  /**\n   * @return {HTMLCanvasElement} Canvas.\n   * @api\n   */\n  WebGLHelper.prototype.getCanvas = function getCanvas () {\n    return this.canvas_;\n  };\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   * @api\n   */\n  WebGLHelper.prototype.getGL = function getGL () {\n    return this.gl_;\n  };\n\n  /**\n   * Sets the default matrix uniforms for a given frame state. This is called internally in `prepareDraw`.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  WebGLHelper.prototype.applyFrameState = function applyFrameState (frameState) {\n    var size = frameState.size;\n    var rotation = frameState.viewState.rotation;\n    var resolution = frameState.viewState.resolution;\n    var center = frameState.viewState.center;\n\n    // set the \"uniform\" values (coordinates 0,0 are the center of the view)\n    var projectionMatrix = resetTransform(this.projectionMatrix_);\n    scaleTransform(projectionMatrix, 2 / (resolution * size[0]), 2 / (resolution * size[1]));\n    rotateTransform(projectionMatrix, -rotation);\n    translateTransform(projectionMatrix, -center[0], -center[1]);\n\n    var offsetScaleMatrix = resetTransform(this.offsetScaleMatrix_);\n    scaleTransform(offsetScaleMatrix, 2 / size[0], 2 / size[1]);\n\n    var offsetRotateMatrix = resetTransform(this.offsetRotateMatrix_);\n    if (rotation !== 0) {\n      rotateTransform(offsetRotateMatrix, -rotation);\n    }\n\n    this.setUniformMatrixValue(DefaultUniform.PROJECTION_MATRIX, fromTransform(this.tmpMat4_, projectionMatrix));\n    this.setUniformMatrixValue(DefaultUniform.OFFSET_SCALE_MATRIX, fromTransform(this.tmpMat4_, offsetScaleMatrix));\n    this.setUniformMatrixValue(DefaultUniform.OFFSET_ROTATION_MATRIX, fromTransform(this.tmpMat4_, offsetRotateMatrix));\n  };\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor. This is called internally in `prepareDraw`.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  WebGLHelper.prototype.applyUniforms = function applyUniforms (frameState) {\n    var gl = this.getGL();\n\n    var value;\n    var textureSlot = 0;\n    this.uniforms_.forEach(function(uniform) {\n      value = typeof uniform.value === 'function' ? uniform.value(frameState) : uniform.value;\n\n      // apply value based on type\n      if (value instanceof HTMLCanvasElement || value instanceof HTMLImageElement || value instanceof ImageData) {\n        // create a texture & put data\n        if (!uniform.texture) {\n          uniform.texture = gl.createTexture();\n        }\n        gl.activeTexture(gl[(\"TEXTURE\" + textureSlot)]);\n        gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, value);\n\n        // fill texture slots by increasing index\n        gl.uniform1i(this.getUniformLocation(uniform.name), textureSlot++);\n\n      } else if (Array.isArray(value)) {\n        switch (value.length) {\n          case 2:\n            gl.uniform2f(this.getUniformLocation(uniform.name), value[0], value[1]);\n            return;\n          case 3:\n            gl.uniform3f(this.getUniformLocation(uniform.name), value[0], value[1], value[2]);\n            return;\n          case 4:\n            gl.uniform4f(this.getUniformLocation(uniform.name), value[0], value[1], value[2], value[3]);\n            return;\n          default:\n            return;\n        }\n      } else if (typeof value === 'number') {\n        gl.uniform1f(this.getUniformLocation(uniform.name), value);\n      }\n    }.bind(this));\n  };\n\n  /**\n   * Use a program.  If the program is already in use, this will return `false`.\n   * @param {WebGLProgram} program Program.\n   * @return {boolean} Changed.\n   * @api\n   */\n  WebGLHelper.prototype.useProgram = function useProgram (program) {\n    if (program == this.currentProgram_) {\n      return false;\n    } else {\n      var gl = this.getGL();\n      gl.useProgram(program);\n      this.currentProgram_ = program;\n      this.uniformLocations_ = {};\n      this.attribLocations_ = {};\n      return true;\n    }\n  };\n\n  /**\n   * Will attempt to compile a vertex or fragment shader based on source\n   * On error, the shader will be returned but\n   * `gl.getShaderParameter(shader, gl.COMPILE_STATUS)` will return `true`\n   * Use `gl.getShaderInfoLog(shader)` to have details\n   * @param {string} source Shader source\n   * @param {ShaderType} type VERTEX_SHADER or FRAGMENT_SHADER\n   * @return {WebGLShader} Shader object\n   */\n  WebGLHelper.prototype.compileShader = function compileShader (source, type) {\n    var gl = this.getGL();\n    var shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    this.shaderCache_.push(shader);\n    return shader;\n  };\n\n  /**\n   * Create a program for a vertex and fragment shader. The shaders compilation may have failed:\n   * use `WebGLHelper.getShaderCompileErrors()`to have details if any.\n   * @param {string} fragmentShaderSource Fragment shader source.\n   * @param {string} vertexShaderSource Vertex shader source.\n   * @return {WebGLProgram} Program\n   * @api\n   */\n  WebGLHelper.prototype.getProgram = function getProgram (fragmentShaderSource, vertexShaderSource) {\n    var gl = this.getGL();\n\n    var fragmentShader = this.compileShader(fragmentShaderSource, gl.FRAGMENT_SHADER);\n    var vertexShader = this.compileShader(vertexShaderSource, gl.VERTEX_SHADER);\n    this.shaderCompileErrors_ = null;\n\n    if (gl.getShaderInfoLog(fragmentShader)) {\n      this.shaderCompileErrors_ =\n        \"Fragment shader compilation failed:\\n\" + (gl.getShaderInfoLog(fragmentShader));\n    }\n    if (gl.getShaderInfoLog(vertexShader)) {\n      this.shaderCompileErrors_ = (this.shaderCompileErrors_ || '') +\n        \"Vertex shader compilation failed:\\n\" + (gl.getShaderInfoLog(vertexShader));\n    }\n\n    var program = gl.createProgram();\n    gl.attachShader(program, fragmentShader);\n    gl.attachShader(program, vertexShader);\n    gl.linkProgram(program);\n    this.programCache_.push(program);\n    return program;\n  };\n\n  /**\n   * Will return the last shader compilation errors. If no error happened, will return null;\n   * @return {string|null} Errors description, or null if last compilation was successful\n   * @api\n   */\n  WebGLHelper.prototype.getShaderCompileErrors = function getShaderCompileErrors () {\n    return this.shaderCompileErrors_;\n  };\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Uniform name\n   * @return {WebGLUniformLocation} uniformLocation\n   * @api\n   */\n  WebGLHelper.prototype.getUniformLocation = function getUniformLocation (name) {\n    if (this.uniformLocations_[name] === undefined) {\n      this.uniformLocations_[name] = this.getGL().getUniformLocation(this.currentProgram_, name);\n    }\n    return this.uniformLocations_[name];\n  };\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Attribute name\n   * @return {number} attribLocation\n   * @api\n   */\n  WebGLHelper.prototype.getAttributeLocation = function getAttributeLocation (name) {\n    if (this.attribLocations_[name] === undefined) {\n      this.attribLocations_[name] = this.getGL().getAttribLocation(this.currentProgram_, name);\n    }\n    return this.attribLocations_[name];\n  };\n\n  /**\n   * Give a value for a standard float uniform\n   * @param {string} uniform Uniform name\n   * @param {number} value Value\n   * @api\n   */\n  WebGLHelper.prototype.setUniformFloatValue = function setUniformFloatValue (uniform, value) {\n    this.getGL().uniform1f(this.getUniformLocation(uniform), value);\n  };\n\n  /**\n   * Give a value for a standard matrix4 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Matrix value\n   * @api\n   */\n  WebGLHelper.prototype.setUniformMatrixValue = function setUniformMatrixValue (uniform, value) {\n    this.getGL().uniformMatrix4fv(this.getUniformLocation(uniform), false, value);\n  };\n\n  /**\n   * Will set the currently bound buffer to an attribute of the shader program\n   * @param {string} attribName Attribute name\n   * @param {number} size Number of components per attributes\n   * @param {number} type UNSIGNED_INT, UNSIGNED_BYTE, UNSIGNED_SHORT or FLOAT\n   * @param {number} stride Stride in bytes (0 means attribs are packed)\n   * @param {number} offset Offset in bytes\n   * @api\n   */\n  WebGLHelper.prototype.enableAttributeArray = function enableAttributeArray (attribName, size, type, stride, offset) {\n    var location = this.getAttributeLocation(attribName);\n    // the attribute has not been found in the shaders; do not enable it\n    if (location < 0) {\n      return;\n    }\n    this.getGL().enableVertexAttribArray(location);\n    this.getGL().vertexAttribPointer(location, size, type,\n      false, stride, offset);\n  };\n\n  /**\n   * WebGL context was lost\n   * @private\n   */\n  WebGLHelper.prototype.handleWebGLContextLost = function handleWebGLContextLost () {\n    clear(this.bufferCache_);\n    clear(this.shaderCache_);\n    clear(this.programCache_);\n    this.currentProgram_ = null;\n  };\n\n  /**\n   * WebGL context was restored\n   * @private\n   */\n  WebGLHelper.prototype.handleWebGLContextRestored = function handleWebGLContextRestored () {\n  };\n\n  // TODO: shutdown program\n\n  /**\n   * TODO: these are not used and should be reworked\n   * @param {number=} opt_wrapS wrapS.\n   * @param {number=} opt_wrapT wrapT.\n   * @return {WebGLTexture} The texture.\n   */\n  WebGLHelper.prototype.createTextureInternal = function createTextureInternal (opt_wrapS, opt_wrapT) {\n    var gl = this.getGL();\n    var texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\n    if (opt_wrapS !== undefined) {\n      gl.texParameteri(\n        TEXTURE_2D, TEXTURE_WRAP_S, opt_wrapS);\n    }\n    if (opt_wrapT !== undefined) {\n      gl.texParameteri(\n        TEXTURE_2D, TEXTURE_WRAP_T, opt_wrapT);\n    }\n\n    return texture;\n  };\n\n  /**\n   * TODO: these are not used and should be reworked\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number=} opt_wrapS wrapS.\n   * @param {number=} opt_wrapT wrapT.\n   * @return {WebGLTexture} The texture.\n   */\n  WebGLHelper.prototype.createEmptyTexture = function createEmptyTexture (width, height, opt_wrapS, opt_wrapT) {\n    var gl = this.getGL();\n    var texture = this.createTextureInternal(opt_wrapS, opt_wrapT);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n    return texture;\n  };\n\n\n  /**\n   * TODO: these are not used and should be reworked\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   * @param {number=} opt_wrapS wrapS.\n   * @param {number=} opt_wrapT wrapT.\n   * @return {WebGLTexture} The texture.\n   */\n  WebGLHelper.prototype.createTexture = function createTexture (image, opt_wrapS, opt_wrapT) {\n    var gl = this.getGL();\n    var texture = this.createTextureInternal(opt_wrapS, opt_wrapT);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n    return texture;\n  };\n\n  return WebGLHelper;\n}(Disposable));\n\nexport default WebGLHelper;\n\n//# sourceMappingURL=Helper.js.map","/**\n * @module ol/tilegrid/WMTS\n */\n\nimport {find} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport TileGrid from './TileGrid.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and upwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and upwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define the grid's extent together with the `origin`.\n * An `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. If the bottom-left corner of\n * the `extent` is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n * @property {Array<number>} [widths] Number of tile columns that cover the grid's\n * extent for each zoom level. Only required when used with a source that has `wrapX`\n * set to `true`, and only when the grid's origin differs from the one of the\n * projection's extent. The array length has to match the length of the `resolutions`\n * array, i.e. each resolution will have a matching entry here.\n */\n\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nvar WMTSTileGrid = /*@__PURE__*/(function (TileGrid) {\n  function WMTSTileGrid(options) {\n    TileGrid.call(this, {\n      extent: options.extent,\n      origin: options.origin,\n      origins: options.origins,\n      resolutions: options.resolutions,\n      tileSize: options.tileSize,\n      tileSizes: options.tileSizes,\n      sizes: options.sizes\n    });\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this.matrixIds_ = options.matrixIds;\n  }\n\n  if ( TileGrid ) WMTSTileGrid.__proto__ = TileGrid;\n  WMTSTileGrid.prototype = Object.create( TileGrid && TileGrid.prototype );\n  WMTSTileGrid.prototype.constructor = WMTSTileGrid;\n\n  /**\n   * @param {number} z Z.\n   * @return {string} MatrixId..\n   */\n  WMTSTileGrid.prototype.getMatrixId = function getMatrixId (z) {\n    return this.matrixIds_[z];\n  };\n\n  /**\n   * Get the list of matrix identifiers.\n   * @return {Array<string>} MatrixIds.\n   * @api\n   */\n  WMTSTileGrid.prototype.getMatrixIds = function getMatrixIds () {\n    return this.matrixIds_;\n  };\n\n  return WMTSTileGrid;\n}(TileGrid));\n\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {import(\"../extent.js\").Extent=} opt_extent An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>=} opt_matrixLimits An optional object representing\n *     the available matrices for tileGrid.\n * @return {WMTSTileGrid} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(matrixSet, opt_extent, opt_matrixLimits) {\n\n  /** @type {!Array<number>} */\n  var resolutions = [];\n  /** @type {!Array<string>} */\n  var matrixIds = [];\n  /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\n  var origins = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  var tileSizes = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  var sizes = [];\n\n  var matrixLimits = opt_matrixLimits !== undefined ? opt_matrixLimits : [];\n\n  var supportedCRSPropName = 'SupportedCRS';\n  var matrixIdsPropName = 'TileMatrix';\n  var identifierPropName = 'Identifier';\n  var scaleDenominatorPropName = 'ScaleDenominator';\n  var topLeftCornerPropName = 'TopLeftCorner';\n  var tileWidthPropName = 'TileWidth';\n  var tileHeightPropName = 'TileHeight';\n\n  var code = matrixSet[supportedCRSPropName];\n  var projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n      getProjection(code);\n  var metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  var switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  matrixSet[matrixIdsPropName].sort(function(a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function(elt) {\n\n    var matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = find(matrixLimits, function(elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (elt[identifierPropName].indexOf(':') === -1) {\n          return matrixSet[identifierPropName] + ':' + elt[identifierPropName] === elt_ml[matrixIdsPropName];\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      var resolution = elt[scaleDenominatorPropName] * 0.28E-3 / metersPerUnit;\n      var tileWidth = elt[tileWidthPropName];\n      var tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0]]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(tileWidth == tileHeight ?\n        tileWidth : [tileWidth, tileHeight]);\n      sizes.push([elt['MatrixWidth'], elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: opt_extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes\n  });\n}\n\n//# sourceMappingURL=WMTS.js.map","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3\n};\n\n//# sourceMappingURL=ImageState.js.map","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n */\n\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nvar ImageStyle = function ImageStyle(options) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.opacity_ = options.opacity;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.scale_ = options.scale;\n\n};\n\n/**\n * Clones the style.\n * @return {ImageStyle} The cloned style.\n * @api\n */\nImageStyle.prototype.clone = function clone () {\n  return new ImageStyle({\n    opacity: this.getOpacity(),\n    scale: this.getScale(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView()\n  });\n};\n\n/**\n * Get the symbolizer opacity.\n * @return {number} Opacity.\n * @api\n */\nImageStyle.prototype.getOpacity = function getOpacity () {\n  return this.opacity_;\n};\n\n/**\n * Determine whether the symbolizer rotates with the map.\n * @return {boolean} Rotate with map.\n * @api\n */\nImageStyle.prototype.getRotateWithView = function getRotateWithView () {\n  return this.rotateWithView_;\n};\n\n/**\n * Get the symoblizer rotation.\n * @return {number} Rotation.\n * @api\n */\nImageStyle.prototype.getRotation = function getRotation () {\n  return this.rotation_;\n};\n\n/**\n * Get the symbolizer scale.\n * @return {number} Scale.\n * @api\n */\nImageStyle.prototype.getScale = function getScale () {\n  return this.scale_;\n};\n\n/**\n * This method is deprecated and always returns false.\n * @return {boolean} false.\n * @deprecated\n * @api\n */\nImageStyle.prototype.getSnapToPixel = function getSnapToPixel () {\n  return false;\n};\n\n/**\n * Get the anchor point in pixels. The anchor determines the center point for the\n * symbolizer.\n * @abstract\n * @return {Array<number>} Anchor.\n */\nImageStyle.prototype.getAnchor = function getAnchor () {\n  return abstract();\n};\n\n/**\n * Get the image element for the symbolizer.\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n */\nImageStyle.prototype.getImage = function getImage (pixelRatio) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n */\nImageStyle.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {import(\"../ImageState.js\").default} Image state.\n */\nImageStyle.prototype.getImageState = function getImageState () {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {import(\"../size.js\").Size} Image size.\n */\nImageStyle.prototype.getImageSize = function getImageSize () {\n  return abstract();\n};\n\n/**\n * @abstract\n * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n */\nImageStyle.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n  return abstract();\n};\n\n/**\n * Get the origin of the symbolizer.\n * @abstract\n * @return {Array<number>} Origin.\n */\nImageStyle.prototype.getOrigin = function getOrigin () {\n  return abstract();\n};\n\n/**\n * Get the size of the symbolizer (in pixels).\n * @abstract\n * @return {import(\"../size.js\").Size} Size.\n */\nImageStyle.prototype.getSize = function getSize () {\n  return abstract();\n};\n\n/**\n * Set the opacity.\n *\n * @param {number} opacity Opacity.\n * @api\n */\nImageStyle.prototype.setOpacity = function setOpacity (opacity) {\n  this.opacity_ = opacity;\n};\n\n/**\n * Set whether to rotate the style with the view.\n *\n * @param {boolean} rotateWithView Rotate with map.\n * @api\n */\nImageStyle.prototype.setRotateWithView = function setRotateWithView (rotateWithView) {\n  this.rotateWithView_ = rotateWithView;\n};\n\n/**\n * Set the rotation.\n *\n * @param {number} rotation Rotation.\n * @api\n */\nImageStyle.prototype.setRotation = function setRotation (rotation) {\n  this.rotation_ = rotation;\n};\n/**\n * Set the scale.\n *\n * @param {number} scale Scale.\n * @api\n */\nImageStyle.prototype.setScale = function setScale (scale) {\n  this.scale_ = scale;\n};\n\n/**\n * This method is deprecated and does nothing.\n * @param {boolean} snapToPixel Snap to pixel?\n * @deprecated\n * @api\n */\nImageStyle.prototype.setSnapToPixel = function setSnapToPixel (snapToPixel) {};\n\n/**\n * @abstract\n * @param {function(this: T, import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {import(\"../events.js\").EventsKey|undefined} Listener key.\n * @template T\n */\nImageStyle.prototype.listenImageChange = function listenImageChange (listener, thisArg) {\n  return abstract();\n};\n\n/**\n * Load not yet loaded URI.\n * @abstract\n */\nImageStyle.prototype.load = function load () {\n  abstract();\n};\n\n/**\n * @abstract\n * @param {function(this: T, import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @template T\n */\nImageStyle.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {\n  abstract();\n};\n\nexport default ImageStyle;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/style/RegularShape\n */\n\nimport {asString} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport ImageState from '../ImageState.js';\nimport {defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit} from '../render/canvas.js';\nimport ImageStyle from './Image.js';\n\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n */\n\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} miterLimit\n */\n\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = /*@__PURE__*/(function (ImageStyle) {\n  function RegularShape(options) {\n    /**\n     * @type {boolean}\n     */\n    var rotateWithView = options.rotateWithView !== undefined ?\n      options.rotateWithView : false;\n\n    ImageStyle.call(this, {\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: 1\n    });\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ = /** @type {number} */ (options.radius !== undefined ?\n      options.radius : options.radius1);\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.hitDetectionImageSize_ = null;\n\n    this.render_();\n\n  }\n\n  if ( ImageStyle ) RegularShape.__proto__ = ImageStyle;\n  RegularShape.prototype = Object.create( ImageStyle && ImageStyle.prototype );\n  RegularShape.prototype.constructor = RegularShape;\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  RegularShape.prototype.clone = function clone () {\n    var style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView()\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getAnchor = function getAnchor () {\n    return this.anchor_;\n  };\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  RegularShape.prototype.getAngle = function getAngle () {\n    return this.angle_;\n  };\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  RegularShape.prototype.getFill = function getFill () {\n    return this.fill_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    return this.hitDetectionCanvas_;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getImage = function getImage (pixelRatio) {\n    return this.canvas_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getImageSize = function getImageSize () {\n    return this.imageSize_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n    return this.hitDetectionImageSize_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getImageState = function getImageState () {\n    return ImageState.LOADED;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getOrigin = function getOrigin () {\n    return this.origin_;\n  };\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  RegularShape.prototype.getPoints = function getPoints () {\n    return this.points_;\n  };\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  RegularShape.prototype.getRadius = function getRadius () {\n    return this.radius_;\n  };\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  RegularShape.prototype.getRadius2 = function getRadius2 () {\n    return this.radius2_;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getSize = function getSize () {\n    return this.size_;\n  };\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  RegularShape.prototype.getStroke = function getStroke () {\n    return this.stroke_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.listenImageChange = function listenImageChange (listener, thisArg) {\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.load = function load () {};\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {};\n\n  /**\n   * @protected\n   */\n  RegularShape.prototype.render_ = function render_ () {\n    var lineCap = '';\n    var lineJoin = '';\n    var miterLimit = 0;\n    var lineDash = null;\n    var lineDashOffset = 0;\n    var strokeStyle;\n    var strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    var size = 2 * (this.radius_ + strokeWidth) + 1;\n\n    /** @type {RenderOptions} */\n    var renderOptions = {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit\n    };\n\n    var context = createCanvasContext2D(size, size);\n    this.canvas_ = context.canvas;\n\n    // canvas.width and height are rounded to the closest integer\n    size = this.canvas_.width;\n    var imageSize = size;\n\n    this.draw_(renderOptions, context, 0, 0);\n\n    this.createHitDetectionCanvas_(renderOptions);\n\n    this.anchor_ = [size / 2, size / 2];\n    this.size_ = [size, size];\n    this.imageSize_ = [imageSize, imageSize];\n  };\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  RegularShape.prototype.draw_ = function draw_ (renderOptions, context, x, y) {\n    var i, angle0, radiusC;\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    var points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n\n    if (this.fill_) {\n      var color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (context.setLineDash && renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = /** @type {CanvasLineCap} */ (renderOptions.lineCap);\n      context.lineJoin = /** @type {CanvasLineJoin} */ (renderOptions.lineJoin);\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n    context.closePath();\n  };\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  RegularShape.prototype.createHitDetectionCanvas_ = function createHitDetectionCanvas_ (renderOptions) {\n    this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n    if (this.fill_) {\n      this.hitDetectionCanvas_ = this.canvas_;\n      return;\n    }\n\n    // if no fill style is set, create an extra hit-detection image with a\n    // default fill style\n    var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n    this.hitDetectionCanvas_ = context.canvas;\n\n    this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n  };\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  RegularShape.prototype.drawHitDetectionCanvas_ = function drawHitDetectionCanvas_ (renderOptions, context, x, y) {\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    var points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      var i, radiusC, angle0;\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n    context.fillStyle = asString(defaultFillStyle);\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.stroke();\n    }\n    context.closePath();\n  };\n\n  return RegularShape;\n}(ImageStyle));\n\n\nexport default RegularShape;\n\n//# sourceMappingURL=RegularShape.js.map","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n */\n\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = /*@__PURE__*/(function (RegularShape) {\n  function CircleStyle(opt_options) {\n\n    var options = opt_options || /** @type {Options} */ ({});\n\n    RegularShape.call(this, {\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke\n    });\n\n  }\n\n  if ( RegularShape ) CircleStyle.__proto__ = RegularShape;\n  CircleStyle.prototype = Object.create( RegularShape && RegularShape.prototype );\n  CircleStyle.prototype.constructor = CircleStyle;\n\n  /**\n  * Clones the style.\n  * @return {CircleStyle} The cloned style.\n  * @override\n  * @api\n  */\n  CircleStyle.prototype.clone = function clone () {\n    var style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius()\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  };\n\n  /**\n  * Set the circle radius.\n  *\n  * @param {number} radius Circle radius.\n  * @api\n  */\n  CircleStyle.prototype.setRadius = function setRadius (radius) {\n    this.radius_ = radius;\n  };\n\n  return CircleStyle;\n}(RegularShape));\n\n\nexport default CircleStyle;\n\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/style/Fill\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = function Fill(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n};\n\n/**\n * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n * @return {Fill} The cloned style.\n * @api\n */\nFill.prototype.clone = function clone () {\n  var color = this.getColor();\n  return new Fill({\n    color: Array.isArray(color) ? color.slice() : color || undefined\n  });\n};\n\n/**\n * Get the fill color.\n * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n * @api\n */\nFill.prototype.getColor = function getColor () {\n  return this.color_;\n};\n\n/**\n * Set the color.\n *\n * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n * @api\n */\nFill.prototype.setColor = function setColor (color) {\n  this.color_ = color;\n};\n\nexport default Fill;\n\n//# sourceMappingURL=Fill.js.map","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  FRACTION: 'fraction',\n  PIXELS: 'pixels'\n};\n\n//# sourceMappingURL=IconAnchorUnits.js.map","/**\n * @module ol/style/IconImage\n */\n\nimport {createCanvasContext2D} from '../dom.js';\nimport {listenOnce, unlistenByKey} from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\nvar IconImage = /*@__PURE__*/(function (EventTarget) {\n  function IconImage(image, src, size, crossOrigin, imageState, color) {\n\n    EventTarget.call(this);\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = color ?\n      /** @type {HTMLCanvasElement} */ (document.createElement('canvas')) :\n      null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.tainted_;\n\n  }\n\n  if ( EventTarget ) IconImage.__proto__ = EventTarget;\n  IconImage.prototype = Object.create( EventTarget && EventTarget.prototype );\n  IconImage.prototype.constructor = IconImage;\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  IconImage.prototype.isTainted_ = function isTainted_ () {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      this.tainted_ = false;\n      var context = createCanvasContext2D(1, 1);\n      try {\n        context.drawImage(this.image_, 0, 0);\n        context.getImageData(0, 0, 1, 1);\n      } catch (e) {\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.dispatchChangeEvent_ = function dispatchChangeEvent_ () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.handleImageError_ = function handleImageError_ () {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.handleImageLoad_ = function handleImageLoad_ () {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    }\n    this.size_ = [this.image_.width, this.image_.height];\n    this.unlistenImage_();\n    this.replaceColor_();\n    this.dispatchChangeEvent_();\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  IconImage.prototype.getImage = function getImage (pixelRatio) {\n    return this.canvas_ ? this.canvas_ : this.image_;\n  };\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  IconImage.prototype.getImageState = function getImageState () {\n    return this.imageState_;\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  IconImage.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        var width = this.size_[0];\n        var height = this.size_[1];\n        var context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  };\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  IconImage.prototype.getSize = function getSize () {\n    return this.size_;\n  };\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  IconImage.prototype.getSrc = function getSrc () {\n    return this.src_;\n  };\n\n  /**\n   * Load not yet loaded URI.\n   */\n  IconImage.prototype.load = function load () {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.replaceColor_ = function replaceColor_ () {\n    if (!this.color_ || this.isTainted_()) {\n      return;\n    }\n\n    this.canvas_.width = this.image_.width;\n    this.canvas_.height = this.image_.height;\n\n    var ctx = this.canvas_.getContext('2d');\n    ctx.drawImage(this.image_, 0, 0);\n\n    var imgData = ctx.getImageData(0, 0, this.image_.width, this.image_.height);\n    var data = imgData.data;\n    var r = this.color_[0] / 255.0;\n    var g = this.color_[1] / 255.0;\n    var b = this.color_[2] / 255.0;\n\n    for (var i = 0, ii = data.length; i < ii; i += 4) {\n      data[i] *= r;\n      data[i + 1] *= g;\n      data[i + 2] *= b;\n    }\n    ctx.putImageData(imgData, 0, 0);\n  };\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  IconImage.prototype.unlistenImage_ = function unlistenImage_ () {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  };\n\n  return IconImage;\n}(EventTarget));\n\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  var iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\n\nexport default IconImage;\n\n//# sourceMappingURL=IconImage.js.map","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=IconOrigin.js.map","/**\n * @module ol/style/Icon\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {listen, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport {get as getIconImage} from './IconImage.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageStyle from './Image.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`. Default is `top-left`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels. Default is `'fraction'`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels. Default is `'fraction'`.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`. Default is `top-left`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nvar Icon = /*@__PURE__*/(function (ImageStyle) {\n  function Icon(opt_options) {\n    var options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    var opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    var rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number}\n     */\n    var scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    var rotateWithView = options.rotateWithView !== undefined ?\n      options.rotateWithView : false;\n\n    ImageStyle.call(this, {\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      rotateWithView: rotateWithView\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ = options.anchorOrigin !== undefined ?\n      options.anchorOrigin : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ = options.anchorXUnits !== undefined ?\n      options.anchorXUnits : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ = options.anchorYUnits !== undefined ?\n      options.anchorYUnits : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    var image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    var imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    var src = options.src;\n\n    assert(!(src !== undefined && image),\n      4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize),\n      5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0,\n      6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    var imageState = options.src !== undefined ?\n      ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image, /** @type {string} */ (src), imgSize, this.crossOrigin_, imageState, this.color_);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ = options.offsetOrigin !== undefined ?\n      options.offsetOrigin : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n  }\n\n  if ( ImageStyle ) Icon.__proto__ = ImageStyle;\n  Icon.prototype = Object.create( ImageStyle && ImageStyle.prototype );\n  Icon.prototype.constructor = Icon;\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  Icon.prototype.clone = function clone () {\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color: (this.color_ && this.color_.slice) ? this.color_.slice() : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: this.getScale(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView()\n    });\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Icon.prototype.getAnchor = function getAnchor () {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    var anchor = this.anchor_;\n    var size = this.getSize();\n    if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n        this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  };\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  Icon.prototype.setAnchor = function setAnchor (anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  };\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  Icon.prototype.getColor = function getColor () {\n    return this.color_;\n  };\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @override\n   * @api\n   */\n  Icon.prototype.getImage = function getImage (pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getImageSize = function getImageSize () {\n    return this.iconImage_.getSize();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n    return this.getImageSize();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getImageState = function getImageState () {\n    return this.iconImage_.getImageState();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    return this.iconImage_.getHitDetectionImage(pixelRatio);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Icon.prototype.getOrigin = function getOrigin () {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    var offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      var size = this.getSize();\n      var iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n          this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n          this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  };\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  Icon.prototype.getSrc = function getSrc () {\n    return this.iconImage_.getSrc();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Icon.prototype.getSize = function getSize () {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.listenImageChange = function listenImageChange (listener, thisArg) {\n    return listen(this.iconImage_, EventType.CHANGE,\n      listener, thisArg);\n  };\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @override\n   * @api\n   */\n  Icon.prototype.load = function load () {\n    this.iconImage_.load();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {\n    unlisten(this.iconImage_, EventType.CHANGE,\n      listener, thisArg);\n  };\n\n  return Icon;\n}(ImageStyle));\n\n\nexport default Icon;\n\n//# sourceMappingURL=Icon.js.map","/**\n * @module ol/style/Stroke\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {string} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {string} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = function Stroke(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineCap_ = options.lineCap;\n\n  /**\n   * @private\n   * @type {Array<number>}\n   */\n  this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lineDashOffset_ = options.lineDashOffset;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineJoin_ = options.lineJoin;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.miterLimit_ = options.miterLimit;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.width_ = options.width;\n};\n\n/**\n * Clones the style.\n * @return {Stroke} The cloned style.\n * @api\n */\nStroke.prototype.clone = function clone () {\n  var color = this.getColor();\n  return new Stroke({\n    color: Array.isArray(color) ? color.slice() : color || undefined,\n    lineCap: this.getLineCap(),\n    lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n    lineDashOffset: this.getLineDashOffset(),\n    lineJoin: this.getLineJoin(),\n    miterLimit: this.getMiterLimit(),\n    width: this.getWidth()\n  });\n};\n\n/**\n * Get the stroke color.\n * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n * @api\n */\nStroke.prototype.getColor = function getColor () {\n  return this.color_;\n};\n\n/**\n * Get the line cap type for the stroke.\n * @return {string|undefined} Line cap.\n * @api\n */\nStroke.prototype.getLineCap = function getLineCap () {\n  return this.lineCap_;\n};\n\n/**\n * Get the line dash style for the stroke.\n * @return {Array<number>} Line dash.\n * @api\n */\nStroke.prototype.getLineDash = function getLineDash () {\n  return this.lineDash_;\n};\n\n/**\n * Get the line dash offset for the stroke.\n * @return {number|undefined} Line dash offset.\n * @api\n */\nStroke.prototype.getLineDashOffset = function getLineDashOffset () {\n  return this.lineDashOffset_;\n};\n\n/**\n * Get the line join type for the stroke.\n * @return {string|undefined} Line join.\n * @api\n */\nStroke.prototype.getLineJoin = function getLineJoin () {\n  return this.lineJoin_;\n};\n\n/**\n * Get the miter limit for the stroke.\n * @return {number|undefined} Miter limit.\n * @api\n */\nStroke.prototype.getMiterLimit = function getMiterLimit () {\n  return this.miterLimit_;\n};\n\n/**\n * Get the stroke width.\n * @return {number|undefined} Width.\n * @api\n */\nStroke.prototype.getWidth = function getWidth () {\n  return this.width_;\n};\n\n/**\n * Set the color.\n *\n * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n * @api\n */\nStroke.prototype.setColor = function setColor (color) {\n  this.color_ = color;\n};\n\n/**\n * Set the line cap.\n *\n * @param {string|undefined} lineCap Line cap.\n * @api\n */\nStroke.prototype.setLineCap = function setLineCap (lineCap) {\n  this.lineCap_ = lineCap;\n};\n\n/**\n * Set the line dash.\n *\n * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n * property will have no visual effect in these browsers.\n *\n * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n *\n * @param {Array<number>} lineDash Line dash.\n * @api\n */\nStroke.prototype.setLineDash = function setLineDash (lineDash) {\n  this.lineDash_ = lineDash;\n};\n\n/**\n * Set the line dash offset.\n *\n * @param {number|undefined} lineDashOffset Line dash offset.\n * @api\n */\nStroke.prototype.setLineDashOffset = function setLineDashOffset (lineDashOffset) {\n  this.lineDashOffset_ = lineDashOffset;\n};\n\n/**\n * Set the line join.\n *\n * @param {string|undefined} lineJoin Line join.\n * @api\n */\nStroke.prototype.setLineJoin = function setLineJoin (lineJoin) {\n  this.lineJoin_ = lineJoin;\n};\n\n/**\n * Set the miter limit.\n *\n * @param {number|undefined} miterLimit Miter limit.\n * @api\n */\nStroke.prototype.setMiterLimit = function setMiterLimit (miterLimit) {\n  this.miterLimit_ = miterLimit;\n};\n\n/**\n * Set the width.\n *\n * @param {number|undefined} width Width.\n * @api\n */\nStroke.prototype.setWidth = function setWidth (width) {\n  this.width_ = width;\n};\n\nexport default Stroke;\n\n//# sourceMappingURL=Stroke.js.map","/**\n * @module ol/style/Style\n */\n\n/**\n * Feature styles.\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n */\nimport {assert} from '../asserts.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n * @api\n */\nvar Style = function Style(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   */\n  this.geometry_ = null;\n\n  /**\n   * @private\n   * @type {!GeometryFunction}\n   */\n  this.geometryFunction_ = defaultGeometryFunction;\n\n  if (options.geometry !== undefined) {\n    this.setGeometry(options.geometry);\n  }\n\n  /**\n   * @private\n   * @type {import(\"./Fill.js\").default}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill : null;\n\n  /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n  this.image_ = options.image !== undefined ? options.image : null;\n\n  /**\n   * @private\n   * @type {RenderFunction|null}\n   */\n  this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n  /**\n   * @private\n   * @type {import(\"./Stroke.js\").default}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {import(\"./Text.js\").default}\n   */\n  this.text_ = options.text !== undefined ? options.text : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zIndex_ = options.zIndex;\n\n};\n\n/**\n * Clones the style.\n * @return {Style} The cloned style.\n * @api\n */\nStyle.prototype.clone = function clone () {\n  var geometry = this.getGeometry();\n  if (geometry && typeof geometry === 'object') {\n    geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n  }\n  return new Style({\n    geometry: geometry,\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    image: this.getImage() ? this.getImage().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    text: this.getText() ? this.getText().clone() : undefined,\n    zIndex: this.getZIndex()\n  });\n};\n\n/**\n * Get the custom renderer function that was configured with\n * {@link #setRenderer} or the `renderer` constructor option.\n * @return {RenderFunction|null} Custom renderer function.\n * @api\n */\nStyle.prototype.getRenderer = function getRenderer () {\n  return this.renderer_;\n};\n\n/**\n * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n * and `image` options of the style will be ignored.\n * @param {RenderFunction|null} renderer Custom renderer function.\n * @api\n */\nStyle.prototype.setRenderer = function setRenderer (renderer) {\n  this.renderer_ = renderer;\n};\n\n/**\n * Get the geometry to be rendered.\n * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n * Feature property or geometry or function that returns the geometry that will\n * be rendered with this style.\n * @api\n */\nStyle.prototype.getGeometry = function getGeometry () {\n  return this.geometry_;\n};\n\n/**\n * Get the function used to generate a geometry for rendering.\n * @return {!GeometryFunction} Function that is called with a feature\n * and returns the geometry to render instead of the feature's geometry.\n * @api\n */\nStyle.prototype.getGeometryFunction = function getGeometryFunction () {\n  return this.geometryFunction_;\n};\n\n/**\n * Get the fill style.\n * @return {import(\"./Fill.js\").default} Fill style.\n * @api\n */\nStyle.prototype.getFill = function getFill () {\n  return this.fill_;\n};\n\n/**\n * Set the fill style.\n * @param {import(\"./Fill.js\").default} fill Fill style.\n * @api\n */\nStyle.prototype.setFill = function setFill (fill) {\n  this.fill_ = fill;\n};\n\n/**\n * Get the image style.\n * @return {import(\"./Image.js\").default} Image style.\n * @api\n */\nStyle.prototype.getImage = function getImage () {\n  return this.image_;\n};\n\n/**\n * Set the image style.\n * @param {import(\"./Image.js\").default} image Image style.\n * @api\n */\nStyle.prototype.setImage = function setImage (image) {\n  this.image_ = image;\n};\n\n/**\n * Get the stroke style.\n * @return {import(\"./Stroke.js\").default} Stroke style.\n * @api\n */\nStyle.prototype.getStroke = function getStroke () {\n  return this.stroke_;\n};\n\n/**\n * Set the stroke style.\n * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n * @api\n */\nStyle.prototype.setStroke = function setStroke (stroke) {\n  this.stroke_ = stroke;\n};\n\n/**\n * Get the text style.\n * @return {import(\"./Text.js\").default} Text style.\n * @api\n */\nStyle.prototype.getText = function getText () {\n  return this.text_;\n};\n\n/**\n * Set the text style.\n * @param {import(\"./Text.js\").default} text Text style.\n * @api\n */\nStyle.prototype.setText = function setText (text) {\n  this.text_ = text;\n};\n\n/**\n * Get the z-index for the style.\n * @return {number|undefined} ZIndex.\n * @api\n */\nStyle.prototype.getZIndex = function getZIndex () {\n  return this.zIndex_;\n};\n\n/**\n * Set a geometry that is rendered instead of the feature's geometry.\n *\n * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n *   Feature property or geometry or function returning a geometry to render\n *   for this style.\n * @api\n */\nStyle.prototype.setGeometry = function setGeometry (geometry) {\n  if (typeof geometry === 'function') {\n    this.geometryFunction_ = geometry;\n  } else if (typeof geometry === 'string') {\n    this.geometryFunction_ = function(feature) {\n      return (\n        /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry))\n      );\n    };\n  } else if (!geometry) {\n    this.geometryFunction_ = defaultGeometryFunction;\n  } else if (geometry !== undefined) {\n    this.geometryFunction_ = function() {\n      return (\n        /** @type {import(\"../geom/Geometry.js\").default} */ (geometry)\n      );\n    };\n  }\n  this.geometry_ = geometry;\n};\n\n/**\n * Set the z-index.\n *\n * @param {number|undefined} zIndex ZIndex.\n * @api\n */\nStyle.prototype.setZIndex = function setZIndex (zIndex) {\n  this.zIndex_ = zIndex;\n};\n\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  var styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    var styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof /** @type {?} */ (obj).getZIndex === 'function',\n        41); // Expected an `Style` or an array of `Style`\n      var style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function() {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n\n/**\n * @type {Array<Style>}\n */\nvar defaultStyles = null;\n\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    var fill = new Fill({\n      color: 'rgba(255,255,255,0.4)'\n    });\n    var stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5\n        }),\n        fill: fill,\n        stroke: stroke\n      })\n    ];\n  }\n  return defaultStyles;\n}\n\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  var styles = {};\n  var white = [255, 255, 255, 1];\n  var blue = [0, 153, 255, 1];\n  var width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5]\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_POLYGON] =\n      styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2\n      })\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] =\n      styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING]\n      );\n\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2\n        })\n      }),\n      zIndex: Infinity\n    })\n  ];\n  styles[GeometryType.MULTI_POINT] =\n      styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING],\n        styles[GeometryType.POINT]\n      );\n\n  return styles;\n}\n\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n\n//# sourceMappingURL=Style.js.map","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line'\n};\n\n//# sourceMappingURL=TextPlacement.js.map","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport TextPlacement from './TextPlacement.js';\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nvar DEFAULT_FILL_COLOR = '#333';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./TextPlacement.js\").default|string} [placement] Text placement.\n * @property {number} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nvar Text = function Text(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.font_ = options.font;\n\n  /**\n  * @private\n  * @type {number|undefined}\n  */\n  this.rotation_ = options.rotation;\n\n  /**\n  * @private\n  * @type {boolean|undefined}\n  */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n  * @private\n  * @type {number|undefined}\n  */\n  this.scale_ = options.scale;\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.text_ = options.text;\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.textAlign_ = options.textAlign;\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n  * @private\n  * @type {import(\"./Fill.js\").default}\n  */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: DEFAULT_FILL_COLOR});\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n  * @private\n  * @type {import(\"./TextPlacement.js\").default|string}\n  */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n  * @private\n  * @type {boolean}\n  */\n  this.overflow_ = !!options.overflow;\n\n  /**\n  * @private\n  * @type {import(\"./Stroke.js\").default}\n  */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n  * @private\n  * @type {import(\"./Fill.js\").default}\n  */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n  * @private\n  * @type {import(\"./Stroke.js\").default}\n  */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n  * @private\n  * @type {Array<number>}\n  */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n/**\n* Clones the style.\n* @return {Text} The cloned style.\n* @api\n*/\nText.prototype.clone = function clone () {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n/**\n* Get the `overflow` configuration.\n* @return {boolean} Let text overflow the length of the path they follow.\n* @api\n*/\nText.prototype.getOverflow = function getOverflow () {\n  return this.overflow_;\n};\n\n/**\n* Get the font name.\n* @return {string|undefined} Font.\n* @api\n*/\nText.prototype.getFont = function getFont () {\n  return this.font_;\n};\n\n/**\n* Get the maximum angle between adjacent characters.\n* @return {number} Angle in radians.\n* @api\n*/\nText.prototype.getMaxAngle = function getMaxAngle () {\n  return this.maxAngle_;\n};\n\n/**\n* Get the label placement.\n* @return {import(\"./TextPlacement.js\").default|string} Text placement.\n* @api\n*/\nText.prototype.getPlacement = function getPlacement () {\n  return this.placement_;\n};\n\n/**\n* Get the x-offset for the text.\n* @return {number} Horizontal text offset.\n* @api\n*/\nText.prototype.getOffsetX = function getOffsetX () {\n  return this.offsetX_;\n};\n\n/**\n* Get the y-offset for the text.\n* @return {number} Vertical text offset.\n* @api\n*/\nText.prototype.getOffsetY = function getOffsetY () {\n  return this.offsetY_;\n};\n\n/**\n* Get the fill style for the text.\n* @return {import(\"./Fill.js\").default} Fill style.\n* @api\n*/\nText.prototype.getFill = function getFill () {\n  return this.fill_;\n};\n\n/**\n* Determine whether the text rotates with the map.\n* @return {boolean|undefined} Rotate with map.\n* @api\n*/\nText.prototype.getRotateWithView = function getRotateWithView () {\n  return this.rotateWithView_;\n};\n\n/**\n* Get the text rotation.\n* @return {number|undefined} Rotation.\n* @api\n*/\nText.prototype.getRotation = function getRotation () {\n  return this.rotation_;\n};\n\n/**\n* Get the text scale.\n* @return {number|undefined} Scale.\n* @api\n*/\nText.prototype.getScale = function getScale () {\n  return this.scale_;\n};\n\n/**\n* Get the stroke style for the text.\n* @return {import(\"./Stroke.js\").default} Stroke style.\n* @api\n*/\nText.prototype.getStroke = function getStroke () {\n  return this.stroke_;\n};\n\n/**\n* Get the text to be rendered.\n* @return {string|undefined} Text.\n* @api\n*/\nText.prototype.getText = function getText () {\n  return this.text_;\n};\n\n/**\n* Get the text alignment.\n* @return {string|undefined} Text align.\n* @api\n*/\nText.prototype.getTextAlign = function getTextAlign () {\n  return this.textAlign_;\n};\n\n/**\n* Get the text baseline.\n* @return {string|undefined} Text baseline.\n* @api\n*/\nText.prototype.getTextBaseline = function getTextBaseline () {\n  return this.textBaseline_;\n};\n\n/**\n* Get the background fill style for the text.\n* @return {import(\"./Fill.js\").default} Fill style.\n* @api\n*/\nText.prototype.getBackgroundFill = function getBackgroundFill () {\n  return this.backgroundFill_;\n};\n\n/**\n* Get the background stroke style for the text.\n* @return {import(\"./Stroke.js\").default} Stroke style.\n* @api\n*/\nText.prototype.getBackgroundStroke = function getBackgroundStroke () {\n  return this.backgroundStroke_;\n};\n\n/**\n* Get the padding for the text.\n* @return {Array<number>} Padding.\n* @api\n*/\nText.prototype.getPadding = function getPadding () {\n  return this.padding_;\n};\n\n/**\n* Set the `overflow` property.\n*\n* @param {boolean} overflow Let text overflow the path that it follows.\n* @api\n*/\nText.prototype.setOverflow = function setOverflow (overflow) {\n  this.overflow_ = overflow;\n};\n\n/**\n* Set the font.\n*\n* @param {string|undefined} font Font.\n* @api\n*/\nText.prototype.setFont = function setFont (font) {\n  this.font_ = font;\n};\n\n/**\n* Set the maximum angle between adjacent characters.\n*\n* @param {number} maxAngle Angle in radians.\n* @api\n*/\nText.prototype.setMaxAngle = function setMaxAngle (maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n/**\n* Set the x offset.\n*\n* @param {number} offsetX Horizontal text offset.\n* @api\n*/\nText.prototype.setOffsetX = function setOffsetX (offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n/**\n* Set the y offset.\n*\n* @param {number} offsetY Vertical text offset.\n* @api\n*/\nText.prototype.setOffsetY = function setOffsetY (offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n/**\n* Set the text placement.\n*\n* @param {import(\"./TextPlacement.js\").default|string} placement Placement.\n* @api\n*/\nText.prototype.setPlacement = function setPlacement (placement) {\n  this.placement_ = placement;\n};\n\n/**\n* Set the fill.\n*\n* @param {import(\"./Fill.js\").default} fill Fill style.\n* @api\n*/\nText.prototype.setFill = function setFill (fill) {\n  this.fill_ = fill;\n};\n\n/**\n* Set the rotation.\n*\n* @param {number|undefined} rotation Rotation.\n* @api\n*/\nText.prototype.setRotation = function setRotation (rotation) {\n  this.rotation_ = rotation;\n};\n\n/**\n* Set the scale.\n*\n* @param {number|undefined} scale Scale.\n* @api\n*/\nText.prototype.setScale = function setScale (scale) {\n  this.scale_ = scale;\n};\n\n/**\n* Set the stroke.\n*\n* @param {import(\"./Stroke.js\").default} stroke Stroke style.\n* @api\n*/\nText.prototype.setStroke = function setStroke (stroke) {\n  this.stroke_ = stroke;\n};\n\n/**\n* Set the text.\n*\n* @param {string|undefined} text Text.\n* @api\n*/\nText.prototype.setText = function setText (text) {\n  this.text_ = text;\n};\n\n/**\n* Set the text alignment.\n*\n* @param {string|undefined} textAlign Text align.\n* @api\n*/\nText.prototype.setTextAlign = function setTextAlign (textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n/**\n* Set the text baseline.\n*\n* @param {string|undefined} textBaseline Text baseline.\n* @api\n*/\nText.prototype.setTextBaseline = function setTextBaseline (textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n/**\n* Set the background fill.\n*\n* @param {import(\"./Fill.js\").default} fill Fill style.\n* @api\n*/\nText.prototype.setBackgroundFill = function setBackgroundFill (fill) {\n  this.backgroundFill_ = fill;\n};\n\n/**\n* Set the background stroke.\n*\n* @param {import(\"./Stroke.js\").default} stroke Stroke style.\n* @api\n*/\nText.prototype.setBackgroundStroke = function setBackgroundStroke (stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n/**\n* Set the padding (`[top, right, bottom, left]`).\n*\n* @param {!Array<number>} padding Padding.\n* @api\n*/\nText.prototype.setPadding = function setPadding (padding) {\n  this.padding_ = padding;\n};\n\nexport default Text;\n\n//# sourceMappingURL=Text.js.map","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  var zRegEx = /\\{z\\}/g;\n  var xRegEx = /\\{x\\}/g;\n  var yRegEx = /\\{y\\}/g;\n  var dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template.replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function() {\n            var z = tileCoord[0];\n            var range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            var y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  var len = templates.length;\n  var tileUrlFunctions = new Array(len);\n  for (var i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        var h = tileCoordHash(tileCoord);\n        var index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  var urls = [];\n  var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    var startCharCode = match[1].charCodeAt(0);\n    var stopCharCode = match[2].charCodeAt(0);\n    var charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    var stop = parseInt(match[2], 10);\n    for (var i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n\n//# sourceMappingURL=tileurlfunction.js.map","/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {function()=} opt_errback Callback on error.\n * @param {string=} opt_callbackParam Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, opt_errback, opt_callbackParam) {\n  var script = document.createElement('script');\n  var key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src = url + (url.indexOf('?') == -1 ? '?' : '&') +\n      (opt_callbackParam || 'callback') + '=' + key;\n  var timer = setTimeout(function() {\n    cleanup();\n    if (opt_errback) {\n      opt_errback();\n    }\n  }, 10000);\n  window[key] = function(data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.getElementsByTagName('head')[0].appendChild(script);\n}\n\n//# sourceMappingURL=net.js.map","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = /*@__PURE__*/(function (EventTarget) {\n  function Tile(tileCoord, state, opt_options) {\n    EventTarget.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {TileState}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * The tile is available at the highest possible resolution. Subclasses can\n     * set this to `false` initially. Tile load listeners will not be\n     * unregistered before this is set to `true` and a `#changed()` is called.\n     * @type {boolean}\n     */\n    this.hifi = true;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ = options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n  }\n\n  if ( EventTarget ) Tile.__proto__ = EventTarget;\n  Tile.prototype = Object.create( EventTarget && EventTarget.prototype );\n  Tile.prototype.constructor = Tile;\n\n  /**\n   * @protected\n   */\n  Tile.prototype.changed = function changed () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @return {string} Key.\n   */\n  Tile.prototype.getKey = function getKey () {\n    return this.key + '/' + this.tileCoord;\n  };\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  Tile.prototype.getInterimTile = function getInterimTile () {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    var tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  };\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  Tile.prototype.refreshInterimChain = function refreshInterimChain () {\n    if (!this.interimTile) {\n      return;\n    }\n\n    var tile = this.interimTile;\n    var prev = /** @type {Tile} */ (this);\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  };\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  Tile.prototype.getTileCoord = function getTileCoord () {\n    return this.tileCoord;\n  };\n\n  /**\n   * @return {TileState} State.\n   */\n  Tile.prototype.getState = function getState () {\n    return this.state;\n  };\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {TileState} state State.\n   * @api\n   */\n  Tile.prototype.setState = function setState (state) {\n    this.state = state;\n    this.changed();\n  };\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  Tile.prototype.load = function load () {\n    abstract();\n  };\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  Tile.prototype.getAlpha = function getAlpha (id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    var start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    var delta = time - start + (1000 / 60); // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  };\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  Tile.prototype.inTransition = function inTransition (id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  };\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  Tile.prototype.endTransition = function endTransition (id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  };\n\n  return Tile;\n}(EventTarget));\n\n\nexport default Tile;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\n\n\nvar ImageTile = /*@__PURE__*/(function (Tile) {\n  function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n    Tile.call(this, tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n  }\n\n  if ( Tile ) ImageTile.__proto__ = Tile;\n  ImageTile.prototype = Object.create( Tile && Tile.prototype );\n  ImageTile.prototype.constructor = ImageTile;\n\n  /**\n   * @inheritDoc\n   */\n  ImageTile.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == TileState.LOADING) {\n      this.unlistenImage_();\n      this.image_ = getBlankImage();\n    }\n    if (this.interimTile) {\n      this.interimTile.dispose();\n    }\n    this.state = TileState.ABORT;\n    this.changed();\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  ImageTile.prototype.getImage = function getImage () {\n    return this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageTile.prototype.getKey = function getKey () {\n    return this.src_;\n  };\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageError_ = function handleImageError_ () {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  };\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageLoad_ = function handleImageLoad_ () {\n    var image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  ImageTile.prototype.load = function load () {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      this.tileLoadFunction_(this, this.src_);\n    }\n  };\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.unlistenImage_ = function unlistenImage_ () {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  };\n\n  return ImageTile;\n}(Tile));\n\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  var ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n\n//# sourceMappingURL=ImageTile.js.map","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nvar TileCache = /*@__PURE__*/(function (LRUCache) {\n  function TileCache(opt_highWaterMark) {\n\n    LRUCache.call(this, opt_highWaterMark);\n\n  }\n\n  if ( LRUCache ) TileCache.__proto__ = LRUCache;\n  TileCache.prototype = Object.create( LRUCache && LRUCache.prototype );\n  TileCache.prototype.constructor = TileCache;\n\n  /**\n   * @param {!Object<string, import(\"./TileRange.js\").default>} usedTiles Used tiles.\n   */\n  TileCache.prototype.expireCache = function expireCache (usedTiles) {\n    while (this.canExpireCache()) {\n      var tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().dispose();\n      }\n    }\n  };\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  TileCache.prototype.pruneExceptNewestZ = function pruneExceptNewestZ () {\n    if (this.getCount() === 0) {\n      return;\n    }\n    var key = this.peekFirstKey();\n    var tileCoord = fromKey(key);\n    var z = tileCoord[0];\n    this.forEach(function(tile) {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.dispose();\n      }\n    }, this);\n  };\n\n  return TileCache;\n}(LRUCache));\n\n\nexport default TileCache;\n\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj,\n  targetCenter, targetResolution) {\n\n  var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n\n  var targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  var sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n        sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {import(\"./coordinate.js\").Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n  var dX = x - centroidX;\n  var dY = y - centroidY;\n  var distance = Math.sqrt(dX * dX + dY * dY);\n  return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio,\n  sourceResolution, sourceExtent, targetResolution, targetExtent,\n  triangulation, sources, gutter, opt_renderEdges) {\n\n  var context = createCanvasContext2D(Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height));\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  var sourceDataExtent = createEmpty();\n  sources.forEach(function(src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  var canvasWidthInUnits = getWidth(sourceDataExtent);\n  var canvasHeightInUnits = getHeight(sourceDataExtent);\n  var stitchContext = createCanvasContext2D(\n    Math.round(pixelRatio * canvasWidthInUnits / sourceResolution),\n    Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n\n  var stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function(src, i, arr) {\n    var xPos = src.extent[0] - sourceDataExtent[0];\n    var yPos = -(src.extent[3] - sourceDataExtent[3]);\n    var srcWidth = getWidth(src.extent);\n    var srcHeight = getHeight(src.extent);\n\n    stitchContext.drawImage(\n      src.image,\n      gutter, gutter,\n      src.image.width - 2 * gutter, src.image.height - 2 * gutter,\n      xPos * stitchScale, yPos * stitchScale,\n      srcWidth * stitchScale, srcHeight * stitchScale);\n  });\n\n  var targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function(triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    var source = triangle.source;\n    var target = triangle.target;\n    var x0 = source[0][0], y0 = source[0][1];\n    var x1 = source[1][0], y1 = source[1][1];\n    var x2 = source[2][0], y2 = source[2][1];\n    var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n    var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n    var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n    var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n    var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n    var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    var sourceNumericalShiftX = x0;\n    var sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    var augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0]\n    ];\n    var affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n    var centroidX = (u0 + u1 + u2) / 3;\n    var centroidY = (v0 + v1 + v2) / 3;\n    var p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n    var p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n    var p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n\n    context.moveTo(p1[0], p1[1]);\n    context.lineTo(p0[0], p0[1]);\n    context.lineTo(p2[0], p2[1]);\n    context.clip();\n\n    context.transform(\n      affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n\n    context.translate(sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY);\n\n    context.scale(sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio);\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function(triangle, i, arr) {\n      var target = triangle.target;\n      var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport {boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight,\n  getTopLeft, getTopRight, getWidth, intersects} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {getTransform} from '../proj.js';\n\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold) {\n\n  /**\n   * @type {import(\"../proj/Projection.js\").default}\n   * @private\n   */\n  this.sourceProj_ = sourceProj;\n\n  /**\n   * @type {import(\"../proj/Projection.js\").default}\n   * @private\n   */\n  this.targetProj_ = targetProj;\n\n  /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n  var transformInvCache = {};\n  var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n   * @private\n   */\n  this.transformInv_ = function(c) {\n    var key = c[0] + '/' + c[1];\n    if (!transformInvCache[key]) {\n      transformInvCache[key] = transformInv(c);\n    }\n    return transformInvCache[key];\n  };\n\n  /**\n   * @type {import(\"../extent.js\").Extent}\n   * @private\n   */\n  this.maxSourceExtent_ = maxSourceExtent;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n  /**\n   * @type {Array<Triangle>}\n   * @private\n   */\n  this.triangles_ = [];\n\n  /**\n   * Indicates that the triangulation crosses edge of the source projection.\n   * @type {boolean}\n   * @private\n   */\n  this.wrapsXInSource_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n    getWidth(this.sourceProj_.getExtent()) : null;\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n    getWidth(this.targetProj_.getExtent()) : null;\n\n  var destinationTopLeft = getTopLeft(targetExtent);\n  var destinationTopRight = getTopRight(targetExtent);\n  var destinationBottomRight = getBottomRight(targetExtent);\n  var destinationBottomLeft = getBottomLeft(targetExtent);\n  var sourceTopLeft = this.transformInv_(destinationTopLeft);\n  var sourceTopRight = this.transformInv_(destinationTopRight);\n  var sourceBottomRight = this.transformInv_(destinationBottomRight);\n  var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n  this.addQuad_(\n    destinationTopLeft, destinationTopRight,\n    destinationBottomRight, destinationBottomLeft,\n    sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft,\n    MAX_SUBDIVISION);\n\n  if (this.wrapsXInSource_) {\n    var leftBound = Infinity;\n    this.triangles_.forEach(function(triangle, i, arr) {\n      leftBound = Math.min(leftBound,\n        triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n    });\n\n    // Shift triangles to be as close to `leftBound` as possible\n    // (if the distance is more than `worldWidth / 2` it can be closer.\n    this.triangles_.forEach(function(triangle) {\n      if (Math.max(triangle.source[0][0], triangle.source[1][0],\n        triangle.source[2][0]) - leftBound > this.sourceWorldWidth_ / 2) {\n        var newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n          [triangle.source[1][0], triangle.source[1][1]],\n          [triangle.source[2][0], triangle.source[2][1]]];\n        if ((newTriangle[0][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[0][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[1][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[1][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[2][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[2][0] -= this.sourceWorldWidth_;\n        }\n\n        // Rarely (if the extent contains both the dateline and prime meridian)\n        // the shift can in turn break some triangles.\n        // Detect this here and don't shift in such cases.\n        var minX = Math.min(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        var maxX = Math.max(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n          triangle.source = newTriangle;\n        }\n      }\n    }.bind(this));\n  }\n\n  transformInvCache = {};\n};\n\n/**\n * Adds triangle to the triangulation.\n * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n * @private\n */\nTriangulation.prototype.addTriangle_ = function addTriangle_ (a, b, c, aSrc, bSrc, cSrc) {\n  this.triangles_.push({\n    source: [aSrc, bSrc, cSrc],\n    target: [a, b, c]\n  });\n};\n\n/**\n * Adds quad (points in clock-wise order) to the triangulation\n * (and reprojects the vertices) if valid.\n * Performs quad subdivision if needed to increase precision.\n *\n * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n * @private\n */\nTriangulation.prototype.addQuad_ = function addQuad_ (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n\n  var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n  var sourceCoverageX = this.sourceWorldWidth_ ?\n    getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n  var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n  // when the quad is wrapped in the source projection\n  // it covers most of the projection extent, but not fully\n  var wrapsX = this.sourceProj_.canWrapX() &&\n               sourceCoverageX > 0.5 && sourceCoverageX < 1;\n\n  var needsSubdivision = false;\n\n  if (maxSubdivision > 0) {\n    if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n      var targetQuadExtent = boundingExtent([a, b, c, d]);\n      var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n      needsSubdivision = targetCoverageX > MAX_TRIANGLE_WIDTH ||\n        needsSubdivision;\n    }\n    if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n      needsSubdivision = sourceCoverageX > MAX_TRIANGLE_WIDTH ||\n          needsSubdivision;\n    }\n  }\n\n  if (!needsSubdivision && this.maxSourceExtent_) {\n    if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n      // whole quad outside source projection extent -> ignore\n      return;\n    }\n  }\n\n  if (!needsSubdivision) {\n    if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n      if (maxSubdivision > 0) {\n        needsSubdivision = true;\n      } else {\n        return;\n      }\n    }\n  }\n\n  if (maxSubdivision > 0) {\n    if (!needsSubdivision) {\n      var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n      var centerSrc = this.transformInv_(center);\n\n      var dx;\n      if (wrapsX) {\n        var centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n             modulo(cSrc[0], sourceWorldWidth)) / 2;\n        dx = centerSrcEstimX -\n            modulo(centerSrc[0], sourceWorldWidth);\n      } else {\n        dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n      }\n      var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n      var centerSrcErrorSquared = dx * dx + dy * dy;\n      needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n    }\n    if (needsSubdivision) {\n      if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n        // split horizontally (top & bottom)\n        var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n        var bcSrc = this.transformInv_(bc);\n        var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n        var daSrc = this.transformInv_(da);\n\n        this.addQuad_(\n          a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n        this.addQuad_(\n          da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n      } else {\n        // split vertically (left & right)\n        var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n        var abSrc = this.transformInv_(ab);\n        var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n        var cdSrc = this.transformInv_(cd);\n\n        this.addQuad_(\n          a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n        this.addQuad_(\n          ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n      }\n      return;\n    }\n  }\n\n  if (wrapsX) {\n    if (!this.canWrapXInSource_) {\n      return;\n    }\n    this.wrapsXInSource_ = true;\n  }\n\n  this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n  this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n};\n\n/**\n * Calculates extent of the 'source' coordinates from all the triangles.\n *\n * @return {import(\"../extent.js\").Extent} Calculated extent.\n */\nTriangulation.prototype.calculateSourceExtent = function calculateSourceExtent () {\n  var extent = createEmpty();\n\n  this.triangles_.forEach(function(triangle, i, arr) {\n    var src = triangle.source;\n    extendCoordinate(extent, src[0]);\n    extendCoordinate(extent, src[1]);\n    extendCoordinate(extent, src[2]);\n  });\n\n  return extent;\n};\n\n/**\n * @return {Array<Triangle>} Array of the calculated triangles.\n */\nTriangulation.prototype.getTriangles = function getTriangles () {\n  return this.triangles_;\n};\n\nexport default Triangulation;\n\n//# sourceMappingURL=Triangulation.js.map","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getArea, getCenter, getIntersection} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = /*@__PURE__*/(function (Tile) {\n  function ReprojTile(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges\n  ) {\n    Tile.call(this, tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    var targetExtent = targetTileGrid.getTileCoordExtent(this.wrappedTileCoord_);\n    var maxTargetExtent = this.targetTileGrid_.getExtent();\n    var maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    var limitedTargetExtent = maxTargetExtent ?\n      getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    var sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    var targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]);\n\n    var targetCenter = getCenter(limitedTargetExtent);\n    var sourceResolution = calculateSourceResolution(\n      sourceProj, targetProj, targetCenter, targetResolution);\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    var errorThresholdInPixels = opt_errorThreshold !== undefined ?\n      opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n      sourceResolution * errorThresholdInPixels);\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    var sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n        sourceExtent[3] = clamp(\n          sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent, this.sourceZ_);\n\n      for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          var tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  if ( Tile ) ReprojTile.__proto__ = Tile;\n  ReprojTile.prototype = Object.create( Tile && Tile.prototype );\n  ReprojTile.prototype.constructor = ReprojTile;\n\n  /**\n   * @inheritDoc\n   */\n  ReprojTile.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == TileState.LOADING) {\n      this.unlistenSources_();\n    }\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  ReprojTile.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  /**\n   * @private\n   */\n  ReprojTile.prototype.reproject_ = function reproject_ () {\n    var sources = [];\n    this.sourceTiles_.forEach(function(tile, i, arr) {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage()\n        });\n      }\n    }.bind(this));\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      var z = this.wrappedTileCoord_[0];\n      var size = this.targetTileGrid_.getTileSize(z);\n      var width = typeof size === 'number' ? size : size[0];\n      var height = typeof size === 'number' ? size : size[1];\n      var targetResolution = this.targetTileGrid_.getResolution(z);\n      var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n      var targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_);\n      this.canvas_ = renderReprojected(width, height, this.pixelRatio_,\n        sourceResolution, this.sourceTileGrid_.getExtent(),\n        targetResolution, targetExtent, this.triangulation_, sources,\n        this.gutter_, this.renderEdges_);\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ReprojTile.prototype.load = function load () {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      var leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        var state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          var sourceListenKey = listen(tile, EventType.CHANGE,\n            function(e) {\n              var state = tile.getState();\n              if (state == TileState.LOADED ||\n                    state == TileState.ERROR ||\n                    state == TileState.EMPTY) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            }, this);\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      }.bind(this));\n\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        var state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  ReprojTile.prototype.unlistenSources_ = function unlistenSources_ () {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  };\n\n  return ReprojTile;\n}(Tile));\n\n\nexport default ReprojTile;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/Source\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\nimport SourceState from './State.js';\n\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {SourceState} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nvar Source = /*@__PURE__*/(function (BaseObject) {\n  function Source(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ?\n      options.attributionsCollapsible : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {SourceState}\n     */\n    this.state_ = options.state !== undefined ?\n      options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n  }\n\n  if ( BaseObject ) Source.__proto__ = BaseObject;\n  Source.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Source.prototype.constructor = Source;\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   */\n  Source.prototype.getAttributions = function getAttributions () {\n    return this.attributions_;\n  };\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   */\n  Source.prototype.getAttributionsCollapsible = function getAttributionsCollapsible () {\n    return this.attributionsCollapsible_;\n  };\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  Source.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  Source.prototype.getResolutions = function getResolutions () {\n    return abstract();\n  };\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {SourceState} State.\n   * @api\n   */\n  Source.prototype.getState = function getState () {\n    return this.state_;\n  };\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  Source.prototype.getWrapX = function getWrapX () {\n    return this.wrapX_;\n  };\n\n  /**\n   * Refreshes the source and finally dispatches a 'change' event.\n   * @api\n   */\n  Source.prototype.refresh = function refresh () {\n    this.changed();\n  };\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  Source.prototype.setAttributions = function setAttributions (attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  };\n\n  /**\n   * Set the state of the source.\n   * @param {SourceState} state State.\n   * @protected\n   */\n  Source.prototype.setState = function setState (state) {\n    this.state_ = state;\n    this.changed();\n  };\n\n  return Source;\n}(BaseObject));\n\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function(frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function(frameState) {\n    return [attributionLike];\n  };\n}\n\n\nexport default Source;\n\n//# sourceMappingURL=Source.js.map","/**\n * @module ol/source/Tile\n */\nimport {abstract} from '../util.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport {equivalent} from '../proj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport Source from './Source.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {wrapX, getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nvar TileSource = /*@__PURE__*/(function (Source) {\n  function TileSource(options) {\n\n    Source.call(this, {\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n      options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    var cacheSize = options.cacheSize;\n    if (cacheSize === undefined) {\n      var tileSize = [256, 256];\n      var tileGrid = options.tileGrid;\n      if (tileGrid) {\n        toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n      }\n      var canUseScreen = 'screen ' in self;\n      var width = canUseScreen ? (screen.availWidth || screen.width) : 1920;\n      var height = canUseScreen ? (screen.availHeight || screen.height) : 1080;\n      cacheSize = 4 * Math.ceil(width / tileSize[0]) * Math.ceil(height / tileSize[1]);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(cacheSize);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n  }\n\n  if ( Source ) TileSource.__proto__ = Source;\n  TileSource.prototype = Object.create( Source && Source.prototype );\n  TileSource.prototype.constructor = TileSource;\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  TileSource.prototype.canExpireCache = function canExpireCache () {\n    return this.tileCache.canExpireCache();\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, import(\"../TileRange.js\").default>} usedTiles Used tiles.\n   */\n  TileSource.prototype.expireCache = function expireCache (projection, usedTiles) {\n    var tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  TileSource.prototype.forEachLoadedTile = function forEachLoadedTile (projection, z, tileRange, callback) {\n    var tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    var covered = true;\n    var tile, tileCoordKey, loaded;\n    for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = (callback(tile) !== false);\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  TileSource.prototype.getGutterForProjection = function getGutterForProjection (projection) {\n    return 0;\n  };\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  TileSource.prototype.getKey = function getKey () {\n    return this.key_;\n  };\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  TileSource.prototype.setKey = function setKey (key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  TileSource.prototype.getOpaque = function getOpaque (projection) {\n    return this.opaque_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileSource.prototype.getResolutions = function getResolutions () {\n    return this.tileGrid.getResolutions();\n  };\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  TileSource.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    return abstract();\n  };\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  TileSource.prototype.getTileGrid = function getTileGrid () {\n    return this.tileGrid;\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  TileSource.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  TileSource.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\n    var thisProj = this.getProjection();\n    if (thisProj && !equivalent(thisProj, projection)) {\n      return null;\n    } else {\n      return this.tileCache;\n    }\n  };\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  TileSource.prototype.getTilePixelRatio = function getTilePixelRatio (pixelRatio) {\n    return this.tilePixelRatio_;\n  };\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  TileSource.prototype.getTilePixelSize = function getTilePixelSize (z, pixelRatio, projection) {\n    var tileGrid = this.getTileGridForProjection(projection);\n    var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  };\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  TileSource.prototype.getTileCoordForTileUrlFunction = function getTileCoordForTileUrlFunction (tileCoord, opt_projection) {\n    var projection = opt_projection !== undefined ?\n      opt_projection : this.getProjection();\n    var tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileSource.prototype.refresh = function refresh () {\n    this.tileCache.clear();\n    this.changed();\n  };\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  TileSource.prototype.useTile = function useTile (z, x, y, projection) {};\n\n  return TileSource;\n}(Source));\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport var TileSourceEvent = /*@__PURE__*/(function (Event) {\n  function TileSourceEvent(type, tile) {\n\n    Event.call(this, type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n\n  }\n\n  if ( Event ) TileSourceEvent.__proto__ = Event;\n  TileSourceEvent.prototype = Object.create( Event && Event.prototype );\n  TileSourceEvent.prototype.constructor = TileSourceEvent;\n\n  return TileSourceEvent;\n}(Event));\n\nexport default TileSource;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror'\n\n};\n\n//# sourceMappingURL=TileEventType.js.map","/**\n * @module ol/source/UrlTile\n */\nimport {getUid} from '../util.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileEventType from './TileEventType.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nvar UrlTile = /*@__PURE__*/(function (TileSource) {\n  function UrlTile(options) {\n\n    TileSource.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ = !options.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").UrlFunction}\n     */\n    this.tileUrlFunction = options.tileUrlFunction ? options.tileUrlFunction.bind(this) : nullTileUrlFunction;\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n\n  }\n\n  if ( TileSource ) UrlTile.__proto__ = TileSource;\n  UrlTile.prototype = Object.create( TileSource && TileSource.prototype );\n  UrlTile.prototype.constructor = UrlTile;\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  UrlTile.prototype.getTileLoadFunction = function getTileLoadFunction () {\n    return this.tileLoadFunction;\n  };\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  UrlTile.prototype.getTileUrlFunction = function getTileUrlFunction () {\n    return this.tileUrlFunction;\n  };\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  UrlTile.prototype.getUrls = function getUrls () {\n    return this.urls;\n  };\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  UrlTile.prototype.handleTileChange = function handleTileChange (event) {\n    var tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    var uid = getUid(tile);\n    var tileState = tile.getState();\n    var type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n        (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n          TileEventType.TILELOADEND : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  };\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  UrlTile.prototype.setTileLoadFunction = function setTileLoadFunction (tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  };\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string=} key Optional new tile key for the source.\n   * @api\n   */\n  UrlTile.prototype.setTileUrlFunction = function setTileUrlFunction (tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  };\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  UrlTile.prototype.setUrl = function setUrl (url) {\n    var urls = this.urls = expandUrl(url);\n    this.setUrls(urls);\n  };\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  UrlTile.prototype.setUrls = function setUrls (urls) {\n    this.urls = urls;\n    var key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  UrlTile.prototype.useTile = function useTile (z, x, y) {\n    var tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  };\n\n  return UrlTile;\n}(TileSource));\n\n\nexport default UrlTile;\n\n//# sourceMappingURL=UrlTile.js.map","/**\n * @module ol/source/TileImage\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {getUid} from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from './UrlTile.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Tile cache size. Default is four times as many tiles as a fullscreen map needs.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar TileImage = /*@__PURE__*/(function (UrlTile) {\n  function TileImage(options) {\n\n    UrlTile.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction ?\n        options.tileLoadFunction : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass = options.tileClass !== undefined ?\n      options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  if ( UrlTile ) TileImage.__proto__ = UrlTile;\n  TileImage.prototype = Object.create( UrlTile && UrlTile.prototype );\n  TileImage.prototype.constructor = TileImage;\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.canExpireCache = function canExpireCache () {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.canExpireCache.call(this);\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (var key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.expireCache = function expireCache (projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      UrlTile.prototype.expireCache.call(this, projection, usedTiles);\n      return;\n    }\n    var usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n    for (var id in this.tileCacheForProjection) {\n      var tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getGutterForProjection = function getGutterForProjection (projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  };\n\n  /**\n   * @return {number} Gutter.\n   */\n  TileImage.prototype.getGutter = function getGutter () {\n    return 0;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getOpaque = function getOpaque (projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return false;\n    } else {\n      return UrlTile.prototype.getOpaque.call(this, projection);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileGridForProjection.call(this, projection);\n    }\n    var thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      var projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n      }\n      return (\n        /** @type {!import(\"../tilegrid/TileGrid.js\").default} */ (this.tileGridForProjection[projKey])\n      );\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileCacheForProjection.call(this, projection);\n    }\n    var thisProj = this.getProjection(); if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      var projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  TileImage.prototype.createTile_ = function createTile_ (z, x, y, pixelRatio, projection, key) {\n    var tileCoord = [z, x, y];\n    var urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord, projection);\n    var tileUrl = urlTileCoord ?\n      this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n    var tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions);\n    tile.key = key;\n    listen(tile, EventType.CHANGE,\n      this.handleTileChange, this);\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var sourceProjection = /** @type {!import(\"../proj/Projection.js\").default} */ (this.getProjection());\n    if (!ENABLE_RASTER_REPROJECTION ||\n        !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n      return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n    } else {\n      var cache = this.getTileCacheForProjection(projection);\n      var tileCoord = [z, x, y];\n      var tile;\n      var tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = /** @type {!import(\"../Tile.js\").default} */ (cache.get(tileCoordKey));\n      }\n      var key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        var targetTileGrid = this.getTileGridForProjection(projection);\n        var wrappedTileCoord =\n            this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var newTile = new ReprojTile(\n          sourceProjection, sourceTileGrid,\n          projection, targetTileGrid,\n          tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function(z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this), this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_);\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  TileImage.prototype.getTileInternal = function getTileInternal (z, x, y, pixelRatio, projection) {\n    var tile = null;\n    var tileCoordKey = getKeyZXY(z, x, y);\n    var key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        var interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  };\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  TileImage.prototype.setRenderReprojectionEdges = function setRenderReprojectionEdges (render) {\n    if (!ENABLE_RASTER_REPROJECTION ||\n        this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (var id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  };\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  TileImage.prototype.setTileGridForProjection = function setTileGridForProjection (projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      var proj = getProjection(projection);\n      if (proj) {\n        var projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  };\n\n  return TileImage;\n}(UrlTile));\n\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\n\nexport default TileImage;\n\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/BingMaps\n */\n\nimport {createFromTileUrlFunctions} from '../tileurlfunction.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {jsonp as requestJSONP} from '../net.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport SourceState from './State.js';\nimport TileImage from './TileImage.js';\nimport {createOrUpdate} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n\n/**\n * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  var z = tileCoord[0];\n  var digits = new Array(z);\n  var mask = 1 << (z - 1);\n  var i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n\n/**\n * The attribution containing a link to the Microsoft® Bing™ Maps Platform APIs’\n * Terms Of Use.\n * @const\n * @type {string}\n */\nvar TOS_ATTRIBUTION = '<a class=\"ol-attribution-bing-tos\" ' +\n      'href=\"https://www.microsoft.com/maps/product/terms.html\">' +\n      'Terms of Use</a>';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Tile cache size. Default is four times as many tiles as a fullscreen map needs.\n * @property {boolean} [hidpi=false] If `true` hidpi tiles will be requested.\n * @property {string} [culture='en-us'] Culture code.\n * @property {string} key Bing Maps API key. Get yours at http://www.bingmapsportal.com/.\n * @property {string} imagerySet Type of imagery.\n * @property {number} [maxZoom=21] Max zoom. Default is what's advertized by the BingMaps service.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @typedef {Object} BingMapsImageryMetadataResponse\n * @property {number} statusCode The response status code\n * @property {string} statusDescription The response status description\n * @property {string} authenticationResultCode The authentication result code\n * @property {Array<ResourceSet>} resourceSets The array of resource sets\n */\n\n\n/**\n * @typedef {Object} ResourceSet\n * @property {Array<Resource>} resources\n */\n\n\n/**\n * @typedef {Object} Resource\n * @property {number} imageHeight The image height\n * @property {number} imageWidth The image width\n * @property {number} zoomMin The minimum zoom level\n * @property {number} zoomMax The maximum zoom level\n * @property {string} imageUrl The image URL\n * @property {Array<string>} imageUrlSubdomains The image URL subdomains for rotation\n * @property {Array<ImageryProvider>} [imageryProviders] The array of ImageryProviders\n */\n\n\n/**\n * @typedef {Object} ImageryProvider\n * @property {Array<CoverageArea>} coverageAreas The coverage areas\n * @property {string} [attribution] The attribution\n */\n\n\n/**\n * @typedef {Object} CoverageArea\n * @property {number} zoomMin The minimum zoom\n * @property {number} zoomMax The maximum zoom\n * @property {Array<number>} bbox The coverage bounding box\n */\n\n\n/**\n * @classdesc\n * Layer source for Bing Maps tile data.\n * @api\n */\nvar BingMaps = /*@__PURE__*/(function (TileImage) {\n  function BingMaps(options) {\n\n    var hidpi = options.hidpi !== undefined ? options.hidpi : false;\n\n    TileImage.call(this, {\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      opaque: true,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: SourceState.LOADING,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: hidpi ? 2 : 1,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = hidpi;\n\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.culture_ = options.culture !== undefined ? options.culture : 'en-us';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxZoom_ = options.maxZoom !== undefined ? options.maxZoom : -1;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.apiKey_ = options.key;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.imagerySet_ = options.imagerySet;\n\n    var url = 'https://dev.virtualearth.net/REST/v1/Imagery/Metadata/' +\n        this.imagerySet_ +\n        '?uriScheme=https&include=ImageryProviders&key=' + this.apiKey_ +\n        '&c=' + this.culture_;\n\n    requestJSONP(url, this.handleImageryMetadataResponse.bind(this), undefined,\n      'jsonp');\n\n  }\n\n  if ( TileImage ) BingMaps.__proto__ = TileImage;\n  BingMaps.prototype = Object.create( TileImage && TileImage.prototype );\n  BingMaps.prototype.constructor = BingMaps;\n\n  /**\n   * Get the api key used for this source.\n   *\n   * @return {string} The api key.\n   * @api\n   */\n  BingMaps.prototype.getApiKey = function getApiKey () {\n    return this.apiKey_;\n  };\n\n  /**\n   * Get the imagery set associated with this source.\n   *\n   * @return {string} The imagery set.\n   * @api\n   */\n  BingMaps.prototype.getImagerySet = function getImagerySet () {\n    return this.imagerySet_;\n  };\n\n  /**\n   * @param {BingMapsImageryMetadataResponse} response Response.\n   */\n  BingMaps.prototype.handleImageryMetadataResponse = function handleImageryMetadataResponse (response) {\n    if (response.statusCode != 200 ||\n        response.statusDescription != 'OK' ||\n        response.authenticationResultCode != 'ValidCredentials' ||\n        response.resourceSets.length != 1 ||\n        response.resourceSets[0].resources.length != 1) {\n      this.setState(SourceState.ERROR);\n      return;\n    }\n\n    var resource = response.resourceSets[0].resources[0];\n    var maxZoom = this.maxZoom_ == -1 ? resource.zoomMax : this.maxZoom_;\n\n    var sourceProjection = this.getProjection();\n    var extent = extentFromProjection(sourceProjection);\n    var scale = this.hidpi_ ? 2 : 1;\n    var tileSize = resource.imageWidth == resource.imageHeight ?\n      resource.imageWidth / scale :\n      [resource.imageWidth / scale, resource.imageHeight / scale];\n\n    var tileGrid = createXYZ({\n      extent: extent,\n      minZoom: resource.zoomMin,\n      maxZoom: maxZoom,\n      tileSize: tileSize\n    });\n    this.tileGrid = tileGrid;\n\n    var culture = this.culture_;\n    var hidpi = this.hidpi_;\n    this.tileUrlFunction = createFromTileUrlFunctions(\n      resource.imageUrlSubdomains.map(function(subdomain) {\n        /** @type {import('../tilecoord.js').TileCoord} */\n        var quadKeyTileCoord = [0, 0, 0];\n        var imageUrl = resource.imageUrl\n          .replace('{subdomain}', subdomain)\n          .replace('{culture}', culture);\n        return (\n          /**\n           * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n           * @param {number} pixelRatio Pixel ratio.\n           * @param {import(\"../proj/Projection.js\").default} projection Projection.\n           * @return {string|undefined} Tile URL.\n           */\n          function(tileCoord, pixelRatio, projection) {\n            if (!tileCoord) {\n              return undefined;\n            } else {\n              createOrUpdate(tileCoord[0], tileCoord[1], tileCoord[2], quadKeyTileCoord);\n              var url = imageUrl;\n              if (hidpi) {\n                url += '&dpi=d1&device=mobile';\n              }\n              return url.replace('{quadkey}', quadKey(quadKeyTileCoord));\n            }\n          }\n        );\n      }));\n\n    if (resource.imageryProviders) {\n      var transform = getTransformFromProjections(\n        getProjection('EPSG:4326'), this.getProjection());\n\n      this.setAttributions(function(frameState) {\n        var attributions = [];\n        var viewState = frameState.viewState;\n        var tileGrid = this.getTileGrid();\n        var tileCoord = tileGrid.getTileCoordForCoordAndResolution(viewState.center, viewState.resolution);\n        var zoom = tileCoord[0];\n        resource.imageryProviders.map(function(imageryProvider) {\n          var intersecting = false;\n          var coverageAreas = imageryProvider.coverageAreas;\n          for (var i = 0, ii = coverageAreas.length; i < ii; ++i) {\n            var coverageArea = coverageAreas[i];\n            if (zoom >= coverageArea.zoomMin && zoom <= coverageArea.zoomMax) {\n              var bbox = coverageArea.bbox;\n              var epsg4326Extent = [bbox[1], bbox[0], bbox[3], bbox[2]];\n              var extent = applyTransform(epsg4326Extent, transform);\n              if (intersects(extent, frameState.extent)) {\n                intersecting = true;\n                break;\n              }\n            }\n          }\n          if (intersecting) {\n            attributions.push(imageryProvider.attribution);\n          }\n        });\n\n        attributions.push(TOS_ATTRIBUTION);\n        return attributions;\n      }.bind(this));\n    }\n\n    this.setState(SourceState.READY);\n  };\n\n  return BingMaps;\n}(TileImage));\n\nexport default BingMaps;\n\n//# sourceMappingURL=BingMaps.js.map","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Tile cache size. Default is four times as many tiles as a fullscreen map needs.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=18] Optional max zoom level.\n * @property {number} [minZoom=0] Optional min zoom level.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if url or urls are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n * @api\n */\nvar XYZ = /*@__PURE__*/(function (TileImage) {\n  function XYZ(opt_options) {\n    var options = opt_options || {};\n    var projection = options.projection !== undefined ?\n      options.projection : 'EPSG:3857';\n\n    var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n      createXYZ({\n        extent: extentFromProjection(projection),\n        maxZoom: options.maxZoom,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize\n      });\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible\n    });\n\n  }\n\n  if ( TileImage ) XYZ.__proto__ = TileImage;\n  XYZ.prototype = Object.create( TileImage && TileImage.prototype );\n  XYZ.prototype.constructor = XYZ;\n\n  return XYZ;\n}(TileImage));\n\nexport default XYZ;\n\n//# sourceMappingURL=XYZ.js.map","/**\n * @module ol/source/CartoDB\n */\n\nimport {assign} from '../obj.js';\nimport SourceState from './State.js';\nimport XYZ from './XYZ.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. Default is four times as many tiles as a fullscreen map needs.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [maxZoom=18] Max zoom.\n * @property {number} [minZoom] Minimum zoom.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {Object} [config] If using anonymous maps, the CartoDB config to use. See\n * http://docs.cartodb.com/cartodb-platform/maps-api/anonymous-maps/\n * for more detail.\n * If using named maps, a key-value lookup with the template parameters.\n * See http://docs.cartodb.com/cartodb-platform/maps-api/named-maps/\n * for more detail.\n * @property {string} [map] If using named maps, this will be the name of the template to load.\n * See http://docs.cartodb.com/cartodb-platform/maps-api/named-maps/\n * for more detail.\n * @property {string} account If using named maps, this will be the name of the template to load.\n */\n\n\n/**\n * @typedef {Object} CartoDBLayerInfo\n * @property {string} layergroupid The layer group ID\n * @property {{https: string}} cdn_url The CDN URL\n */\n\n/**\n * @classdesc\n * Layer source for the CartoDB Maps API.\n * @api\n */\nvar CartoDB = /*@__PURE__*/(function (XYZ) {\n  function CartoDB(options) {\n    XYZ.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 18,\n      minZoom: options.minZoom,\n      projection: options.projection,\n      wrapX: options.wrapX\n    });\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.account_ = options.account;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.mapId_ = options.map || '';\n\n    /**\n     * @type {!Object}\n     * @private\n     */\n    this.config_ = options.config || {};\n\n    /**\n     * @type {!Object<string, CartoDBLayerInfo>}\n     * @private\n     */\n    this.templateCache_ = {};\n\n    this.initializeMap_();\n  }\n\n  if ( XYZ ) CartoDB.__proto__ = XYZ;\n  CartoDB.prototype = Object.create( XYZ && XYZ.prototype );\n  CartoDB.prototype.constructor = CartoDB;\n\n  /**\n   * Returns the current config.\n   * @return {!Object} The current configuration.\n   * @api\n   */\n  CartoDB.prototype.getConfig = function getConfig () {\n    return this.config_;\n  };\n\n  /**\n   * Updates the carto db config.\n   * @param {Object} config a key-value lookup. Values will replace current values\n   *     in the config.\n   * @api\n   */\n  CartoDB.prototype.updateConfig = function updateConfig (config) {\n    assign(this.config_, config);\n    this.initializeMap_();\n  };\n\n  /**\n   * Sets the CartoDB config\n   * @param {Object} config In the case of anonymous maps, a CartoDB configuration\n   *     object.\n   * If using named maps, a key-value lookup with the template parameters.\n   * @api\n   */\n  CartoDB.prototype.setConfig = function setConfig (config) {\n    this.config_ = config || {};\n    this.initializeMap_();\n  };\n\n  /**\n   * Issue a request to initialize the CartoDB map.\n   * @private\n   */\n  CartoDB.prototype.initializeMap_ = function initializeMap_ () {\n    var paramHash = JSON.stringify(this.config_);\n    if (this.templateCache_[paramHash]) {\n      this.applyTemplate_(this.templateCache_[paramHash]);\n      return;\n    }\n    var mapUrl = 'https://' + this.account_ + '.carto.com/api/v1/map';\n\n    if (this.mapId_) {\n      mapUrl += '/named/' + this.mapId_;\n    }\n\n    var client = new XMLHttpRequest();\n    client.addEventListener('load', this.handleInitResponse_.bind(this, paramHash));\n    client.addEventListener('error', this.handleInitError_.bind(this));\n    client.open('POST', mapUrl);\n    client.setRequestHeader('Content-type', 'application/json');\n    client.send(JSON.stringify(this.config_));\n  };\n\n  /**\n   * Handle map initialization response.\n   * @param {string} paramHash a hash representing the parameter set that was used\n   *     for the request\n   * @param {Event} event Event.\n   * @private\n   */\n  CartoDB.prototype.handleInitResponse_ = function handleInitResponse_ (paramHash, event) {\n    var client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || client.status >= 200 && client.status < 300) {\n      var response;\n      try {\n        response = /** @type {CartoDBLayerInfo} */(JSON.parse(client.responseText));\n      } catch (err) {\n        this.setState(SourceState.ERROR);\n        return;\n      }\n      this.applyTemplate_(response);\n      this.templateCache_[paramHash] = response;\n      this.setState(SourceState.READY);\n    } else {\n      this.setState(SourceState.ERROR);\n    }\n  };\n\n  /**\n   * @private\n   * @param {Event} event Event.\n   */\n  CartoDB.prototype.handleInitError_ = function handleInitError_ (event) {\n    this.setState(SourceState.ERROR);\n  };\n\n  /**\n   * Apply the new tile urls returned by carto db\n   * @param {CartoDBLayerInfo} data Result of carto db call.\n   * @private\n   */\n  CartoDB.prototype.applyTemplate_ = function applyTemplate_ (data) {\n    var tilesUrl = 'https://' + data.cdn_url.https + '/' + this.account_ +\n        '/api/v1/map/' + data.layergroupid + '/{z}/{x}/{y}.png';\n    this.setUrl(tilesUrl);\n  };\n\n  return CartoDB;\n}(XYZ));\n\n\nexport default CartoDB;\n\n//# sourceMappingURL=CartoDB.js.map","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature'\n};\n\n//# sourceMappingURL=VectorEventType.js.map","/**\n * @module ol/structs/RBush\n */\nimport {getUid} from '../util.js';\nimport rbush from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = function RBush(opt_maxEntries) {\n\n  /**\n   * @private\n   */\n  this.rbush_ = rbush(opt_maxEntries, undefined);\n\n  /**\n   * A mapping between the objects added to this rbush wrapper\n   * and the objects that are actually added to the internal rbush.\n   * @private\n   * @type {Object<string, Entry>}\n   */\n  this.items_ = {};\n\n};\n\n/**\n * Insert a value into the RBush.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.insert = function insert (extent, value) {\n  /** @type {Entry} */\n  var item = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3],\n    value: value\n  };\n\n  this.rbush_.insert(item);\n  this.items_[getUid(value)] = item;\n};\n\n\n/**\n * Bulk-insert values into the RBush.\n * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n * @param {Array<T>} values Values.\n */\nRBush.prototype.load = function load (extents, values) {\n  var items = new Array(values.length);\n  for (var i = 0, l = values.length; i < l; i++) {\n    var extent = extents[i];\n    var value = values[i];\n\n    /** @type {Entry} */\n    var item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value\n    };\n    items[i] = item;\n    this.items_[getUid(value)] = item;\n  }\n  this.rbush_.load(items);\n};\n\n\n/**\n * Remove a value from the RBush.\n * @param {T} value Value.\n * @return {boolean} Removed.\n */\nRBush.prototype.remove = function remove (value) {\n  var uid = getUid(value);\n\n  // get the object in which the value was wrapped when adding to the\n  // internal rbush. then use that object to do the removal.\n  var item = this.items_[uid];\n  delete this.items_[uid];\n  return this.rbush_.remove(item) !== null;\n};\n\n\n/**\n * Update the extent of a value in the RBush.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.update = function update (extent, value) {\n  var item = this.items_[getUid(value)];\n  var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n  if (!equals(bbox, extent)) {\n    this.remove(value);\n    this.insert(extent, value);\n  }\n};\n\n\n/**\n * Return all values in the RBush.\n * @return {Array<T>} All.\n */\nRBush.prototype.getAll = function getAll () {\n  var items = this.rbush_.all();\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Return all values in the given extent.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @return {Array<T>} All in extent.\n */\nRBush.prototype.getInExtent = function getInExtent (extent) {\n  /** @type {Entry} */\n  var bbox = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3]\n  };\n  var items = this.rbush_.search(bbox);\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Calls a callback function with each value in the tree.\n * If the callback returns a truthy value, this value is returned without\n * checking the rest of the tree.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach = function forEach (callback, opt_this) {\n  return this.forEach_(this.getAll(), callback, opt_this);\n};\n\n\n/**\n * Calls a callback function with each value in the provided extent.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEachInExtent = function forEachInExtent (extent, callback, opt_this) {\n  return this.forEach_(this.getInExtent(extent), callback, opt_this);\n};\n\n\n/**\n * @param {Array<T>} values Values.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @private\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach_ = function forEach_ (values, callback, opt_this) {\n  var result;\n  for (var i = 0, l = values.length; i < l; i++) {\n    result = callback.call(opt_this, values[i]);\n    if (result) {\n      return result;\n    }\n  }\n  return result;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nRBush.prototype.isEmpty = function isEmpty$1 () {\n  return isEmpty(this.items_);\n};\n\n\n/**\n * Remove all values from the RBush.\n */\nRBush.prototype.clear = function clear () {\n  this.rbush_.clear();\n  this.items_ = {};\n};\n\n\n/**\n * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n * @return {import(\"../extent.js\").Extent} Extent.\n */\nRBush.prototype.getExtent = function getExtent (opt_extent) {\n  var data = this.rbush_.toJSON();\n  return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n};\n\n\n/**\n * @param {RBush} rbush R-Tree.\n */\nRBush.prototype.concat = function concat (rbush) {\n  this.rbush_.load(rbush.rbush_.all());\n  for (var i in rbush.items_) {\n    this.items_[i] = rbush.items_[i];\n  }\n};\n\n\nexport default RBush;\n\n//# sourceMappingURL=RBush.js.map","/**\n * @module ol/source/Vector\n */\n\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {extend} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {xhr} from '../featureloader.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {isEmpty, getValues} from '../obj.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n */\nexport var VectorSourceEvent = /*@__PURE__*/(function (Event) {\n  function VectorSourceEvent(type, opt_feature) {\n\n    Event.call(this, type);\n\n    /**\n     * The feature being added or removed.\n     * @type {import(\"../Feature.js\").default|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n  }\n\n  if ( Event ) VectorSourceEvent.__proto__ = Event;\n  VectorSourceEvent.prototype = Object.create( Event && Event.prototype );\n  VectorSourceEvent.prototype.constructor = VectorSourceEvent;\n\n  return VectorSourceEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n */\nvar VectorSource = /*@__PURE__*/(function (Source) {\n  function VectorSource(opt_options) {\n\n    var options = opt_options || {};\n\n    Source.call(this, {\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true\n    });\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, /** @type {import(\"../format/Feature.js\").default} */ (this.format_));\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n\n    var useSpatialIndex =\n        options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features without id (keyed by getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     */\n    this.undefIdIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default>}\n     */\n    this.featuresCollection_ = null;\n\n    var collection, features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n\n  }\n\n  if ( Source ) VectorSource.__proto__ = Source;\n  VectorSource.prototype = Object.create( Source && Source.prototype );\n  VectorSource.prototype.constructor = VectorSource;\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * @param {import(\"../Feature.js\").default} feature Feature to add.\n   * @api\n   */\n  VectorSource.prototype.addFeature = function addFeature (feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  };\n\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @protected\n   */\n  VectorSource.prototype.addFeatureInternal = function addFeatureInternal (feature) {\n    var featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      var extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n  };\n\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default} feature The feature.\n   * @private\n   */\n  VectorSource.prototype.setupChangeEvents_ = function setupChangeEvents_ (featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE,\n        this.handleFeatureChange_, this),\n      listen(feature, ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_, this)\n    ];\n  };\n\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  VectorSource.prototype.addToIndex_ = function addToIndex_ (featureKey, feature) {\n    var valid = true;\n    var id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    } else {\n      assert(!(featureKey in this.undefIdIndex_),\n        30); // The passed `feature` was already added to the source\n      this.undefIdIndex_[featureKey] = feature;\n    }\n    return valid;\n  };\n\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default>} features Features to add.\n   * @api\n   */\n  VectorSource.prototype.addFeatures = function addFeatures (features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  };\n\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @protected\n   */\n  VectorSource.prototype.addFeaturesInternal = function addFeaturesInternal (features) {\n    var extents = [];\n    var newFeatures = [];\n    var geometryFeatures = [];\n\n    for (var i = 0, length = features.length; i < length; i++) {\n      var feature = features[i];\n      var featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (var i$1 = 0, length$1 = newFeatures.length; i$1 < length$1; i$1++) {\n      var feature$1 = newFeatures[i$1];\n      var featureKey$1 = getUid(feature$1);\n      this.setupChangeEvents_(featureKey$1, feature$1);\n\n      var geometry = feature$1.getGeometry();\n      if (geometry) {\n        var extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature$1);\n      } else {\n        this.nullGeometryFeatures_[featureKey$1] = feature$1;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (var i$2 = 0, length$2 = newFeatures.length; i$2 < length$2; i$2++) {\n      this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i$2]));\n    }\n  };\n\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default>} collection Collection.\n   * @private\n   */\n  VectorSource.prototype.bindFeaturesCollection_ = function bindFeaturesCollection_ (collection) {\n    var modifyingCollection = false;\n    listen(this, VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent} evt The vector source event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      });\n    listen(this, VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent} evt The vector source event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      });\n    listen(collection, CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n          modifyingCollection = false;\n        }\n      }, this);\n    listen(collection, CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n          modifyingCollection = false;\n        }\n      }, this);\n    this.featuresCollection_ = collection;\n  };\n\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n   * @api\n   */\n  VectorSource.prototype.clear = function clear (opt_fast) {\n    if (opt_fast) {\n      for (var featureId in this.featureChangeKeys_) {\n        var keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.undefIdIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal, this);\n        for (var id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.loadedExtentsRtree_.clear();\n    this.nullGeometryFeatures_ = {};\n\n    var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  };\n\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeature = function forEachFeature (callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  };\n\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  VectorSource.prototype.forEachFeatureAtCoordinateDirect = function forEachFeatureAtCoordinateDirect (coordinate, callback) {\n    var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function(feature) {\n      var geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  };\n\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeatureInExtent = function forEachFeatureInExtent (extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  };\n\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeatureIntersectingExtent = function forEachFeatureIntersectingExtent (extent, callback) {\n    return this.forEachFeatureInExtent(extent,\n      /**\n       * @param {import(\"../Feature.js\").default} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function(feature) {\n        var geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          var result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      });\n  };\n\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default>} The collection of features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesCollection = function getFeaturesCollection () {\n    return this.featuresCollection_;\n  };\n\n\n  /**\n   * Get all features on the source in random order.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeatures = function getFeatures () {\n    var features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray();\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return (\n      /** @type {Array<import(\"../Feature.js\").default>} */ (features)\n    );\n  };\n\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesAtCoordinate = function getFeaturesAtCoordinate (coordinate) {\n    var features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function(feature) {\n      features.push(feature);\n    });\n    return features;\n  };\n\n\n  /**\n   * Get all features in the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesInExtent = function getFeaturesInExtent (extent) {\n    return this.featuresRtree_.getInExtent(extent);\n  };\n\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default):boolean=} opt_filter Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default} Closest feature.\n   * @api\n   */\n  VectorSource.prototype.getClosestFeatureToCoordinate = function getClosestFeatureToCoordinate (coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var closestFeature = null;\n    var closestPoint = [NaN, NaN];\n    var minSquaredDistance = Infinity;\n    var extent = [-Infinity, -Infinity, Infinity, Infinity];\n    var filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(extent,\n      /**\n       * @param {import(\"../Feature.js\").default} feature Feature.\n       */\n      function(feature) {\n        if (filter(feature)) {\n          var geometry = feature.getGeometry();\n          var previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            var minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      });\n    return closestFeature;\n  };\n\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  VectorSource.prototype.getExtent = function getExtent (opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  };\n\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default} The feature (or `null` if not found).\n   * @api\n   */\n  VectorSource.prototype.getFeatureById = function getFeatureById (id) {\n    var feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  };\n\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  VectorSource.prototype.getFormat = function getFormat () {\n    return this.format_;\n  };\n\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  VectorSource.prototype.getOverlaps = function getOverlaps () {\n    return this.overlaps_;\n  };\n\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  VectorSource.prototype.getUrl = function getUrl () {\n    return this.url_;\n  };\n\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  VectorSource.prototype.handleFeatureChange_ = function handleFeatureChange_ (event) {\n    var feature = /** @type {import(\"../Feature.js\").default} */ (event.target);\n    var featureKey = getUid(feature);\n    var geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      var extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    var id = feature.getId();\n    if (id !== undefined) {\n      var sid = id.toString();\n      if (featureKey in this.undefIdIndex_) {\n        delete this.undefIdIndex_[featureKey];\n        this.idIndex_[sid] = feature;\n      } else {\n        if (this.idIndex_[sid] !== feature) {\n          this.removeFromIdIndex_(feature);\n          this.idIndex_[sid] = feature;\n        }\n      }\n    } else {\n      if (!(featureKey in this.undefIdIndex_)) {\n        this.removeFromIdIndex_(feature);\n        this.undefIdIndex_[featureKey] = feature;\n      }\n    }\n    this.changed();\n    this.dispatchEvent(new VectorSourceEvent(\n      VectorEventType.CHANGEFEATURE, feature));\n  };\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  VectorSource.prototype.hasFeature = function hasFeature (feature) {\n    var id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.undefIdIndex_;\n    }\n  };\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  VectorSource.prototype.isEmpty = function isEmpty$1 () {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  };\n\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  VectorSource.prototype.loadFeatures = function loadFeatures (extent, resolution, projection) {\n    var this$1 = this;\n\n    var loadedExtentsRtree = this.loadedExtentsRtree_;\n    var extentsToLoad = this.strategy_(extent, resolution);\n    this.loading = false;\n    var loop = function ( i, ii ) {\n      var extentToLoad = extentsToLoad[i];\n      var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function(object) {\n          return containsExtent(object.extent, extentToLoad);\n        });\n      if (!alreadyLoaded) {\n        this$1.loader_.call(this$1, extentToLoad, resolution, projection);\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n        this$1.loading = this$1.loader_ !== VOID;\n      }\n    };\n\n    for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) loop( i, ii );\n  };\n\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  VectorSource.prototype.removeLoadedExtent = function removeLoadedExtent (extent) {\n    var loadedExtentsRtree = this.loadedExtentsRtree_;\n    var obj;\n    loadedExtentsRtree.forEachInExtent(extent, function(object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  };\n\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default} feature Feature to remove.\n   * @api\n   */\n  VectorSource.prototype.removeFeature = function removeFeature (feature) {\n    var featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    this.removeFeatureInternal(feature);\n    this.changed();\n  };\n\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @protected\n   */\n  VectorSource.prototype.removeFeatureInternal = function removeFeatureInternal (feature) {\n    var featureKey = getUid(feature);\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    var id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    } else {\n      delete this.undefIdIndex_[featureKey];\n    }\n    this.dispatchEvent(new VectorSourceEvent(\n      VectorEventType.REMOVEFEATURE, feature));\n  };\n\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  VectorSource.prototype.removeFromIdIndex_ = function removeFromIdIndex_ (feature) {\n    var removed = false;\n    for (var id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  };\n\n\n  /**\n   * Set the new loader of the source. The next loadFeatures call will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  VectorSource.prototype.setLoader = function setLoader (loader) {\n    this.loader_ = loader;\n  };\n\n  return VectorSource;\n}(Source));\n\n\nexport default VectorSource;\n\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/source/Cluster\n */\n\nimport {getUid} from '../util.js';\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {scale as scaleCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {buffer, createEmpty, createOrUpdateFromCoordinate} from '../extent.js';\nimport Point from '../geom/Point.js';\nimport VectorSource from './Vector.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [distance=20] Minimum distance in pixels between clusters.\n * @property {function(Feature):Point} [geometryFunction]\n * Function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Point} as cluster calculation point for the feature. When a\n * feature should not be considered for clustering, the function should return\n * `null`. The default, which works when the underyling source contains point\n * features only, is\n * ```js\n * function(feature) {\n *   return feature.getGeometry();\n * }\n * ```\n * See {@link module:ol/geom/Polygon~Polygon#getInteriorPoint} for a way to get a cluster\n * calculation point for polygons.\n * @property {VectorSource} source Source.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source to cluster vector data. Works out of the box with point\n * geometries. For other geometry types, or if not all geometries should be\n * considered for clustering, a custom `geometryFunction` can be defined.\n * @api\n */\nvar Cluster = /*@__PURE__*/(function (VectorSource) {\n  function Cluster(options) {\n    VectorSource.call(this, {\n      attributions: options.attributions,\n      wrapX: options.wrapX\n    });\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.resolution = undefined;\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.distance = options.distance !== undefined ? options.distance : 20;\n\n    /**\n     * @type {Array<Feature>}\n     * @protected\n     */\n    this.features = [];\n\n    /**\n     * @param {Feature} feature Feature.\n     * @return {Point} Cluster calculation point.\n     * @protected\n     */\n    this.geometryFunction = options.geometryFunction || function(feature) {\n      var geometry = /** @type {Point} */ (feature.getGeometry());\n      assert(geometry.getType() == GeometryType.POINT,\n        10); // The default `geometryFunction` can only handle `Point` geometries\n      return geometry;\n    };\n\n    /**\n     * @type {VectorSource}\n     * @protected\n     */\n    this.source = options.source;\n\n    listen(this.source, EventType.CHANGE, this.refresh, this);\n  }\n\n  if ( VectorSource ) Cluster.__proto__ = VectorSource;\n  Cluster.prototype = Object.create( VectorSource && VectorSource.prototype );\n  Cluster.prototype.constructor = Cluster;\n\n  /**\n   * Get the distance in pixels between clusters.\n   * @return {number} Distance.\n   * @api\n   */\n  Cluster.prototype.getDistance = function getDistance () {\n    return this.distance;\n  };\n\n  /**\n   * Get a reference to the wrapped source.\n   * @return {VectorSource} Source.\n   * @api\n   */\n  Cluster.prototype.getSource = function getSource () {\n    return this.source;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Cluster.prototype.loadFeatures = function loadFeatures (extent, resolution, projection) {\n    this.source.loadFeatures(extent, resolution, projection);\n    if (resolution !== this.resolution) {\n      this.clear();\n      this.resolution = resolution;\n      this.cluster();\n      this.addFeatures(this.features);\n    }\n  };\n\n  /**\n   * Set the distance in pixels between clusters.\n   * @param {number} distance The distance in pixels.\n   * @api\n   */\n  Cluster.prototype.setDistance = function setDistance (distance) {\n    this.distance = distance;\n    this.refresh();\n  };\n\n  /**\n   * handle the source changing\n   * @override\n   */\n  Cluster.prototype.refresh = function refresh () {\n    this.clear();\n    this.cluster();\n    this.addFeatures(this.features);\n    VectorSource.prototype.refresh.call(this);\n  };\n\n  /**\n   * @protected\n   */\n  Cluster.prototype.cluster = function cluster () {\n    if (this.resolution === undefined) {\n      return;\n    }\n    this.features.length = 0;\n    var extent = createEmpty();\n    var mapDistance = this.distance * this.resolution;\n    var features = this.source.getFeatures();\n\n    /**\n     * @type {!Object<string, boolean>}\n     */\n    var clustered = {};\n\n    for (var i = 0, ii = features.length; i < ii; i++) {\n      var feature = features[i];\n      if (!(getUid(feature) in clustered)) {\n        var geometry = this.geometryFunction(feature);\n        if (geometry) {\n          var coordinates = geometry.getCoordinates();\n          createOrUpdateFromCoordinate(coordinates, extent);\n          buffer(extent, mapDistance, extent);\n\n          var neighbors = this.source.getFeaturesInExtent(extent);\n          neighbors = neighbors.filter(function(neighbor) {\n            var uid = getUid(neighbor);\n            if (!(uid in clustered)) {\n              clustered[uid] = true;\n              return true;\n            } else {\n              return false;\n            }\n          });\n          this.features.push(this.createCluster(neighbors));\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {Array<Feature>} features Features\n   * @return {Feature} The cluster feature.\n   * @protected\n   */\n  Cluster.prototype.createCluster = function createCluster (features) {\n    var centroid = [0, 0];\n    for (var i = features.length - 1; i >= 0; --i) {\n      var geometry = this.geometryFunction(features[i]);\n      if (geometry) {\n        addCoordinate(centroid, geometry.getCoordinates());\n      } else {\n        features.splice(i, 1);\n      }\n    }\n    scaleCoordinate(centroid, 1 / features.length);\n\n    var cluster = new Feature(new Point(centroid));\n    cluster.set('features', features);\n    return cluster;\n  };\n\n  return Cluster;\n}(VectorSource));\n\n\nexport default Cluster;\n\n//# sourceMappingURL=Cluster.js.map","/**\n * @module ol/ImageBase\n */\nimport {abstract} from './util.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @abstract\n */\nvar ImageBase = /*@__PURE__*/(function (EventTarget) {\n  function ImageBase(extent, resolution, pixelRatio, state) {\n\n    EventTarget.call(this);\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n\n  }\n\n  if ( EventTarget ) ImageBase.__proto__ = EventTarget;\n  ImageBase.prototype = Object.create( EventTarget && EventTarget.prototype );\n  ImageBase.prototype.constructor = ImageBase;\n\n  /**\n   * @protected\n   */\n  ImageBase.prototype.changed = function changed () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  ImageBase.prototype.getExtent = function getExtent () {\n    return this.extent;\n  };\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  ImageBase.prototype.getImage = function getImage () {\n    return abstract();\n  };\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  ImageBase.prototype.getPixelRatio = function getPixelRatio () {\n    return this.pixelRatio_;\n  };\n\n  /**\n   * @return {number} Resolution.\n   */\n  ImageBase.prototype.getResolution = function getResolution () {\n    return /** @type {number} */ (this.resolution);\n  };\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  ImageBase.prototype.getState = function getState () {\n    return this.state;\n  };\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  ImageBase.prototype.load = function load () {\n    abstract();\n  };\n\n  return ImageBase;\n}(EventTarget));\n\n\nexport default ImageBase;\n\n//# sourceMappingURL=ImageBase.js.map","/**\n * @module ol/reproj/Image\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport ImageBase from '../ImageBase.js';\nimport ImageState from '../ImageState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getCenter, getIntersection, getHeight, getWidth} from '../extent.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n\n\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../ImageBase.js\").default} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nvar ReprojImage = /*@__PURE__*/(function (ImageBase) {\n  function ReprojImage(sourceProj, targetProj, targetExtent, targetResolution, pixelRatio, getImageFunction) {\n    var maxSourceExtent = sourceProj.getExtent();\n    var maxTargetExtent = targetProj.getExtent();\n\n    var limitedTargetExtent = maxTargetExtent ?\n      getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n    var targetCenter = getCenter(limitedTargetExtent);\n    var sourceResolution = calculateSourceResolution(\n      sourceProj, targetProj, targetCenter, targetResolution);\n\n    var errorThresholdInPixels = ERROR_THRESHOLD;\n\n    var triangulation = new Triangulation(\n      sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n      sourceResolution * errorThresholdInPixels);\n\n    var sourceExtent = triangulation.calculateSourceExtent();\n    var sourceImage = getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n    var state = ImageState.LOADED;\n    if (sourceImage) {\n      state = ImageState.IDLE;\n    }\n    var sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n\n    ImageBase.call(this, targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {import(\"../ImageBase.js\").default}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  if ( ImageBase ) ReprojImage.__proto__ = ImageBase;\n  ReprojImage.prototype = Object.create( ImageBase && ImageBase.prototype );\n  ReprojImage.prototype.constructor = ReprojImage;\n\n  /**\n   * @inheritDoc\n   */\n  ReprojImage.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    ImageBase.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ReprojImage.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  /**\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  ReprojImage.prototype.getProjection = function getProjection () {\n    return this.targetProj_;\n  };\n\n  /**\n   * @private\n   */\n  ReprojImage.prototype.reproject_ = function reproject_ () {\n    var sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      var width = getWidth(this.targetExtent_) / this.targetResolution_;\n      var height = getHeight(this.targetExtent_) / this.targetResolution_;\n\n      this.canvas_ = renderReprojected(width, height, this.sourcePixelRatio_,\n        this.sourceImage_.getResolution(), this.maxSourceExtent_,\n        this.targetResolution_, this.targetExtent_, this.triangulation_, [{\n          extent: this.sourceImage_.getExtent(),\n          image: this.sourceImage_.getImage()\n        }], 0);\n    }\n    this.state = sourceState;\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ReprojImage.prototype.load = function load () {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n\n      var sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(this.sourceImage_,\n          EventType.CHANGE, function(e) {\n            var sourceState = this.sourceImage_.getState();\n            if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          }, this);\n        this.sourceImage_.load();\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  ReprojImage.prototype.unlistenSource_ = function unlistenSource_ () {\n    unlistenByKey(/** @type {!import(\"../events.js\").EventsKey} */ (this.sourceListenerKey_));\n    this.sourceListenerKey_ = null;\n  };\n\n  return ReprojImage;\n}(ImageBase));\n\n\nexport default ReprojImage;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/source/Image\n */\nimport {abstract} from '../util.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport ImageState from '../ImageState.js';\nimport {linearFindNearest} from '../array.js';\nimport Event from '../events/Event.js';\nimport {equals} from '../extent.js';\nimport {equivalent} from '../proj.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\n\n\n/**\n * @enum {string}\n */\nvar ImageSourceEventType = {\n\n  /**\n   * Triggered when an image starts loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror'\n\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nexport var ImageSourceEvent = /*@__PURE__*/(function (Event) {\n  function ImageSourceEvent(type, image) {\n\n    Event.call(this, type);\n\n    /**\n     * The image related to the event.\n     * @type {import(\"../Image.js\").default}\n     * @api\n     */\n    this.image = image;\n\n  }\n\n  if ( Event ) ImageSourceEvent.__proto__ = Event;\n  ImageSourceEvent.prototype = Object.create( Event && Event.prototype );\n  ImageSourceEvent.prototype.constructor = ImageSourceEvent;\n\n  return ImageSourceEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {Array<number>} [resolutions]\n * @property {import(\"./State.js\").default} [state]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n * @abstract\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nvar ImageSource = /*@__PURE__*/(function (Source) {\n  function ImageSource(options) {\n    Source.call(this, {\n      attributions: options.attributions,\n      projection: options.projection,\n      state: options.state\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.resolutions_ = options.resolutions !== undefined ?\n      options.resolutions : null;\n\n\n    /**\n     * @private\n     * @type {import(\"../reproj/Image.js\").default}\n     */\n    this.reprojectedImage_ = null;\n\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.reprojectedRevision_ = 0;\n  }\n\n  if ( Source ) ImageSource.__proto__ = Source;\n  ImageSource.prototype = Object.create( Source && Source.prototype );\n  ImageSource.prototype.constructor = ImageSource;\n\n  /**\n   * @return {Array<number>} Resolutions.\n   * @override\n   */\n  ImageSource.prototype.getResolutions = function getResolutions () {\n    return this.resolutions_;\n  };\n\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n  ImageSource.prototype.findNearestResolution = function findNearestResolution (resolution) {\n    if (this.resolutions_) {\n      var idx = linearFindNearest(this.resolutions_, resolution, 0);\n      resolution = this.resolutions_[idx];\n    }\n    return resolution;\n  };\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageBase.js\").default} Single image.\n   */\n  ImageSource.prototype.getImage = function getImage (extent, resolution, pixelRatio, projection) {\n    var sourceProjection = this.getProjection();\n    if (!ENABLE_RASTER_REPROJECTION ||\n        !sourceProjection ||\n        !projection ||\n        equivalent(sourceProjection, projection)) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    } else {\n      if (this.reprojectedImage_) {\n        if (this.reprojectedRevision_ == this.getRevision() &&\n            equivalent(\n              this.reprojectedImage_.getProjection(), projection) &&\n            this.reprojectedImage_.getResolution() == resolution &&\n            equals(this.reprojectedImage_.getExtent(), extent)) {\n          return this.reprojectedImage_;\n        }\n        this.reprojectedImage_.dispose();\n        this.reprojectedImage_ = null;\n      }\n\n      this.reprojectedImage_ = new ReprojImage(\n        sourceProjection, projection, extent, resolution, pixelRatio,\n        function(extent, resolution, pixelRatio) {\n          return this.getImageInternal(extent, resolution,\n            pixelRatio, sourceProjection);\n        }.bind(this));\n      this.reprojectedRevision_ = this.getRevision();\n\n      return this.reprojectedImage_;\n    }\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageBase.js\").default} Single image.\n   * @protected\n   */\n  ImageSource.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {\n    return abstract();\n  };\n\n  /**\n   * Handle image change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  ImageSource.prototype.handleImageChange = function handleImageChange (event) {\n    var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.loading = true;\n        this.dispatchEvent(\n          new ImageSourceEvent(ImageSourceEventType.IMAGELOADSTART,\n            image));\n        break;\n      case ImageState.LOADED:\n        this.loading = false;\n        this.dispatchEvent(\n          new ImageSourceEvent(ImageSourceEventType.IMAGELOADEND,\n            image));\n        break;\n      case ImageState.ERROR:\n        this.loading = false;\n        this.dispatchEvent(\n          new ImageSourceEvent(ImageSourceEventType.IMAGELOADERROR,\n            image));\n        break;\n      default:\n        // pass\n    }\n  };\n\n  return ImageSource;\n}(Source));\n\n\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\n\nexport default ImageSource;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/Image\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\n\nvar ImageWrapper = /*@__PURE__*/(function (ImageBase) {\n  function ImageWrapper(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n    ImageBase.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Array<import(\"./events.js\").EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @protected\n     * @type {ImageState}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n\n  }\n\n  if ( ImageBase ) ImageWrapper.__proto__ = ImageBase;\n  ImageWrapper.prototype = Object.create( ImageBase && ImageBase.prototype );\n  ImageWrapper.prototype.constructor = ImageWrapper;\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  ImageWrapper.prototype.getImage = function getImage () {\n    return this.image_;\n  };\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  ImageWrapper.prototype.handleImageError_ = function handleImageError_ () {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  };\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  ImageWrapper.prototype.handleImageLoad_ = function handleImageLoad_ () {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  };\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @override\n   * @api\n   */\n  ImageWrapper.prototype.load = function load () {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      this.imageLoadFunction_(this, this.src_);\n    }\n  };\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  ImageWrapper.prototype.setImage = function setImage (image) {\n    this.image_ = image;\n  };\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  ImageWrapper.prototype.unlistenImage_ = function unlistenImage_ () {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  };\n\n  return ImageWrapper;\n}(ImageBase));\n\n\nexport default ImageWrapper;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/uri\n */\n\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  var keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function(k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  var qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n  return uri + qs;\n}\n\n//# sourceMappingURL=uri.js.map","/**\n * @module ol/source/ImageArcGISRest\n */\n\nimport ImageWrapper from '../Image.js';\nimport {assert} from '../asserts.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport {appendParams} from '../uri.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting the image from\n * the remote server.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given\n * a URL.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service\n * defaults will be used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is\n * `IMAGE` by default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`, and `IMAGESR`\n * will be set dynamically. Set `LAYERS` to override the default service layer visibility. See\n * {@link http://resources.arcgis.com/en/help/arcgis-rest-api/index.html#/Export_Map/02r3000000v7000000/}\n * for further reference.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport,\n * `2` means twice the size of the map viewport, and so on.\n * @property {Array<number>} [resolutions] Resolutions. If specified, requests will be made for\n * these resolutions only.\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The url\n * should include /MapServer or /ImageServer.\n */\n\n\n/**\n * @classdesc\n * Source for data from ArcGIS Rest services providing single, untiled images.\n * Useful when underlying map service has labels.\n *\n * If underlying map service is not using labels,\n * take advantage of ol image caching and use\n * {@link module:ol/source/TileArcGISRest} data source.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nvar ImageArcGISRest = /*@__PURE__*/(function (ImageSource) {\n  function ImageArcGISRest(opt_options) {\n\n    var options = opt_options || /** @type {Options} */ ({});\n\n    ImageSource.call(this, {\n      attributions: options.attributions,\n      projection: options.projection,\n      resolutions: options.resolutions\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n      options.imageLoadFunction : defaultImageLoadFunction;\n\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = [0, 0];\n\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n  }\n\n  if ( ImageSource ) ImageArcGISRest.__proto__ = ImageSource;\n  ImageArcGISRest.prototype = Object.create( ImageSource && ImageSource.prototype );\n  ImageArcGISRest.prototype.constructor = ImageArcGISRest;\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  ImageArcGISRest.prototype.getParams = function getParams () {\n    return this.params_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageArcGISRest.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {\n\n    if (this.url_ === undefined) {\n      return null;\n    }\n\n    resolution = this.findNearestResolution(resolution);\n    pixelRatio = this.hidpi_ ? pixelRatio : 1;\n\n    var image = this.image_;\n    if (image &&\n        this.renderedRevision_ == this.getRevision() &&\n        image.getResolution() == resolution &&\n        image.getPixelRatio() == pixelRatio &&\n        containsExtent(image.getExtent(), extent)) {\n      return image;\n    }\n\n    var params = {\n      'F': 'image',\n      'FORMAT': 'PNG32',\n      'TRANSPARENT': true\n    };\n    assign(params, this.params_);\n\n    extent = extent.slice();\n    var centerX = (extent[0] + extent[2]) / 2;\n    var centerY = (extent[1] + extent[3]) / 2;\n    if (this.ratio_ != 1) {\n      var halfWidth = this.ratio_ * getWidth(extent) / 2;\n      var halfHeight = this.ratio_ * getHeight(extent) / 2;\n      extent[0] = centerX - halfWidth;\n      extent[1] = centerY - halfHeight;\n      extent[2] = centerX + halfWidth;\n      extent[3] = centerY + halfHeight;\n    }\n\n    var imageResolution = resolution / pixelRatio;\n\n    // Compute an integer width and height.\n    var width = Math.ceil(getWidth(extent) / imageResolution);\n    var height = Math.ceil(getHeight(extent) / imageResolution);\n\n    // Modify the extent to match the integer width and height.\n    extent[0] = centerX - imageResolution * width / 2;\n    extent[2] = centerX + imageResolution * width / 2;\n    extent[1] = centerY - imageResolution * height / 2;\n    extent[3] = centerY + imageResolution * height / 2;\n\n    this.imageSize_[0] = width;\n    this.imageSize_[1] = height;\n\n    var url = this.getRequestUrl_(extent, this.imageSize_, pixelRatio,\n      projection, params);\n\n    this.image_ = new ImageWrapper(extent, resolution, pixelRatio,\n      url, this.crossOrigin_, this.imageLoadFunction_);\n\n    this.renderedRevision_ = this.getRevision();\n\n    listen(this.image_, EventType.CHANGE,\n      this.handleImageChange, this);\n\n    return this.image_;\n\n  };\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  ImageArcGISRest.prototype.getImageLoadFunction = function getImageLoadFunction () {\n    return this.imageLoadFunction_;\n  };\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string} Request URL.\n   * @private\n   */\n  ImageArcGISRest.prototype.getRequestUrl_ = function getRequestUrl_ (extent, size, pixelRatio, projection, params) {\n    // ArcGIS Server only wants the numeric portion of the projection ID.\n    var srid = projection.getCode().split(':').pop();\n\n    params['SIZE'] = size[0] + ',' + size[1];\n    params['BBOX'] = extent.join(',');\n    params['BBOXSR'] = srid;\n    params['IMAGESR'] = srid;\n    params['DPI'] = Math.round(90 * pixelRatio);\n\n    var url = this.url_;\n\n    var modifiedUrl = url\n      .replace(/MapServer\\/?$/, 'MapServer/export')\n      .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n    if (modifiedUrl == url) {\n      assert(false, 50); // `options.featureTypes` should be an Array\n    }\n    return appendParams(modifiedUrl, params);\n  };\n\n  /**\n   * Return the URL used for this ArcGIS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  ImageArcGISRest.prototype.getUrl = function getUrl () {\n    return this.url_;\n  };\n\n  /**\n   * Set the image load function of the source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  ImageArcGISRest.prototype.setImageLoadFunction = function setImageLoadFunction (imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  };\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  ImageArcGISRest.prototype.setUrl = function setUrl (url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.image_ = null;\n      this.changed();\n    }\n  };\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  ImageArcGISRest.prototype.updateParams = function updateParams (params) {\n    assign(this.params_, params);\n    this.image_ = null;\n    this.changed();\n  };\n\n  return ImageArcGISRest;\n}(ImageSource));\n\n\nexport default ImageArcGISRest;\n\n//# sourceMappingURL=ImageArcGISRest.js.map","/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error=): void): void} Loader\n */\n\n\nvar ImageCanvas = /*@__PURE__*/(function (ImageBase) {\n  function ImageCanvas(extent, resolution, pixelRatio, canvas, opt_loader) {\n\n    var state = opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    ImageBase.call(this, extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?Loader}\n     * @private\n     */\n    this.loader_ = opt_loader !== undefined ? opt_loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {Error}\n     */\n    this.error_ = null;\n\n  }\n\n  if ( ImageBase ) ImageCanvas.__proto__ = ImageBase;\n  ImageCanvas.prototype = Object.create( ImageBase && ImageBase.prototype );\n  ImageCanvas.prototype.constructor = ImageCanvas;\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {Error} Any error that occurred during rendering.\n   */\n  ImageCanvas.prototype.getError = function getError () {\n    return this.error_;\n  };\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error=} err Any error during drawing.\n   * @private\n   */\n  ImageCanvas.prototype.handleLoad_ = function handleLoad_ (err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageCanvas.prototype.load = function load () {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  };\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  ImageCanvas.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  return ImageCanvas;\n}(ImageBase));\n\n\nexport default ImageCanvas;\n\n//# sourceMappingURL=ImageCanvas.js.map","/**\n * @module ol/source/ImageCanvas\n */\n\nimport ImageCanvas from '../ImageCanvas.js';\nimport {containsExtent, getHeight, getWidth, scaleFromCenter} from '../extent.js';\nimport ImageSource from './Image.js';\n\n\n/**\n * A function returning the canvas element (`{HTMLCanvasElement}`)\n * used by the source as an image. The arguments passed to the function are:\n * {@link module:ol/extent~Extent} the image extent, `{number}` the image resolution,\n * `{number}` the device pixel ratio, {@link module:ol/size~Size} the image size, and\n * {@link module:ol/proj/Projection} the image projection. The canvas returned by\n * this function is cached by the source. The this keyword inside the function\n * references the {@link module:ol/source/ImageCanvas}.\n *\n * @typedef {function(this:import(\"../ImageCanvas.js\").default, import(\"../extent.js\").Extent, number,\n *     number, import(\"../size.js\").Size, import(\"../proj/Projection.js\").default): HTMLCanvasElement} FunctionType\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {FunctionType} [canvasFunction] Canvas function.\n * The function returning the canvas element used by the source\n * as an image. The arguments passed to the function are: `{import(\"../extent.js\").Extent}` the\n * image extent, `{number}` the image resolution, `{number}` the device pixel\n * ratio, `{import(\"../size.js\").Size}` the image size, and `{import(\"../proj/Projection.js\").Projection}` the image\n * projection. The canvas returned by this function is cached by the source. If\n * the value returned by the function is later changed then\n * `changed` should be called on the source for the source to\n * invalidate the current cached image. See: {@link module:ol/Observable~Observable#changed}\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [ratio=1.5] Ratio. 1 means canvases are the size of the map viewport, 2 means twice the\n * width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, new canvases will be created for these resolutions\n * @property {import(\"./State.js\").default} [state] Source state.\n */\n\n\n/**\n * @classdesc\n * Base class for image sources where a canvas element is the image.\n * @api\n */\nvar ImageCanvasSource = /*@__PURE__*/(function (ImageSource) {\n  function ImageCanvasSource(opt_options) {\n\n    var options = opt_options || /** @type {Options} */ ({});\n\n    ImageSource.call(this, {\n      attributions: options.attributions,\n      projection: options.projection,\n      resolutions: options.resolutions,\n      state: options.state\n    });\n\n    /**\n    * @private\n    * @type {FunctionType}\n    */\n    this.canvasFunction_ = options.canvasFunction;\n\n    /**\n    * @private\n    * @type {import(\"../ImageCanvas.js\").default}\n    */\n    this.canvas_ = null;\n\n    /**\n    * @private\n    * @type {number}\n    */\n    this.renderedRevision_ = 0;\n\n    /**\n    * @private\n    * @type {number}\n    */\n    this.ratio_ = options.ratio !== undefined ?\n      options.ratio : 1.5;\n\n  }\n\n  if ( ImageSource ) ImageCanvasSource.__proto__ = ImageSource;\n  ImageCanvasSource.prototype = Object.create( ImageSource && ImageSource.prototype );\n  ImageCanvasSource.prototype.constructor = ImageCanvasSource;\n\n  /**\n  * @inheritDoc\n  */\n  ImageCanvasSource.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {\n    resolution = this.findNearestResolution(resolution);\n\n    var canvas = this.canvas_;\n    if (canvas &&\n       this.renderedRevision_ == this.getRevision() &&\n       canvas.getResolution() == resolution &&\n       canvas.getPixelRatio() == pixelRatio &&\n       containsExtent(canvas.getExtent(), extent)) {\n      return canvas;\n    }\n\n    extent = extent.slice();\n    scaleFromCenter(extent, this.ratio_);\n    var width = getWidth(extent) / resolution;\n    var height = getHeight(extent) / resolution;\n    var size = [width * pixelRatio, height * pixelRatio];\n\n    var canvasElement = this.canvasFunction_.call(\n      this, extent, resolution, pixelRatio, size, projection);\n    if (canvasElement) {\n      canvas = new ImageCanvas(extent, resolution, pixelRatio, canvasElement);\n    }\n    this.canvas_ = canvas;\n    this.renderedRevision_ = this.getRevision();\n\n    return canvas;\n  };\n\n  return ImageCanvasSource;\n}(ImageSource));\n\n\nexport default ImageCanvasSource;\n\n//# sourceMappingURL=ImageCanvas.js.map","/**\n * @module ol/source/ImageMapGuide\n */\n\nimport ImageWrapper from '../Image.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getHeight, getWidth, scaleFromCenter} from '../extent.js';\nimport {assign} from '../obj.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [url] The mapagent url.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [displayDpi=96] The display resolution.\n * @property {number} [metersPerUnit=1] The meters-per-unit value.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {boolean} [useOverlay] If `true`, will use `GETDYNAMICMAPOVERLAYIMAGE`.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {number} [ratio=1] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {Object} [params] Additional parameters.\n */\n\n\n/**\n * @classdesc\n * Source for images from Mapguide servers\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nvar ImageMapGuide = /*@__PURE__*/(function (ImageSource) {\n  function ImageMapGuide(options) {\n\n    ImageSource.call(this, {\n      projection: options.projection,\n      resolutions: options.resolutions\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.displayDpi_ = options.displayDpi !== undefined ?\n      options.displayDpi : 96;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n      options.imageLoadFunction : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.metersPerUnit_ = options.metersPerUnit !== undefined ?\n      options.metersPerUnit : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useOverlay_ = options.useOverlay !== undefined ?\n      options.useOverlay : false;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n  }\n\n  if ( ImageSource ) ImageMapGuide.__proto__ = ImageSource;\n  ImageMapGuide.prototype = Object.create( ImageSource && ImageSource.prototype );\n  ImageMapGuide.prototype.constructor = ImageMapGuide;\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  ImageMapGuide.prototype.getParams = function getParams () {\n    return this.params_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageMapGuide.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {\n    resolution = this.findNearestResolution(resolution);\n    pixelRatio = this.hidpi_ ? pixelRatio : 1;\n\n    var image = this.image_;\n    if (image &&\n        this.renderedRevision_ == this.getRevision() &&\n        image.getResolution() == resolution &&\n        image.getPixelRatio() == pixelRatio &&\n        containsExtent(image.getExtent(), extent)) {\n      return image;\n    }\n\n    if (this.ratio_ != 1) {\n      extent = extent.slice();\n      scaleFromCenter(extent, this.ratio_);\n    }\n    var width = getWidth(extent) / resolution;\n    var height = getHeight(extent) / resolution;\n    var size = [width * pixelRatio, height * pixelRatio];\n\n    if (this.url_ !== undefined) {\n      var imageUrl = this.getUrl(this.url_, this.params_, extent, size,\n        projection);\n      image = new ImageWrapper(extent, resolution, pixelRatio,\n        imageUrl, this.crossOrigin_,\n        this.imageLoadFunction_);\n      listen(image, EventType.CHANGE,\n        this.handleImageChange, this);\n    } else {\n      image = null;\n    }\n    this.image_ = image;\n    this.renderedRevision_ = this.getRevision();\n\n    return image;\n  };\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  ImageMapGuide.prototype.getImageLoadFunction = function getImageLoadFunction () {\n    return this.imageLoadFunction_;\n  };\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  ImageMapGuide.prototype.updateParams = function updateParams (params) {\n    assign(this.params_, params);\n    this.changed();\n  };\n\n  /**\n   * @param {string} baseUrl The mapagent url.\n   * @param {Object<string, string|number>} params Request parameters.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string} The mapagent map image request URL.\n   */\n  ImageMapGuide.prototype.getUrl = function getUrl (baseUrl, params, extent, size, projection) {\n    var scale = getScale(extent, size,\n      this.metersPerUnit_, this.displayDpi_);\n    var center = getCenter(extent);\n    var baseParams = {\n      'OPERATION': this.useOverlay_ ? 'GETDYNAMICMAPOVERLAYIMAGE' : 'GETMAPIMAGE',\n      'VERSION': '2.0.0',\n      'LOCALE': 'en',\n      'CLIENTAGENT': 'ol/source/ImageMapGuide source',\n      'CLIP': '1',\n      'SETDISPLAYDPI': this.displayDpi_,\n      'SETDISPLAYWIDTH': Math.round(size[0]),\n      'SETDISPLAYHEIGHT': Math.round(size[1]),\n      'SETVIEWSCALE': scale,\n      'SETVIEWCENTERX': center[0],\n      'SETVIEWCENTERY': center[1]\n    };\n    assign(baseParams, params);\n    return appendParams(baseUrl, baseParams);\n  };\n\n  /**\n   * Set the image load function of the MapGuide source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  ImageMapGuide.prototype.setImageLoadFunction = function setImageLoadFunction (imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  };\n\n  return ImageMapGuide;\n}(ImageSource));\n\n\n/**\n * @param {import(\"../extent.js\").Extent} extent The map extents.\n * @param {import(\"../size.js\").Size} size The viewport size.\n * @param {number} metersPerUnit The meters-per-unit value.\n * @param {number} dpi The display resolution.\n * @return {number} The computed map scale.\n */\nfunction getScale(extent, size, metersPerUnit, dpi) {\n  var mcsW = getWidth(extent);\n  var mcsH = getHeight(extent);\n  var devW = size[0];\n  var devH = size[1];\n  var mpp = 0.0254 / dpi;\n  if (devH * mcsW > devW * mcsH) {\n    return mcsW * metersPerUnit / (devW * mpp); // width limited\n  } else {\n    return mcsH * metersPerUnit / (devH * mpp); // height limited\n  }\n}\n\n\nexport default ImageMapGuide;\n\n//# sourceMappingURL=ImageMapGuide.js.map","/**\n * @module ol/source/ImageStatic\n */\n\nimport ImageWrapper from '../Image.js';\nimport ImageState from '../ImageState.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {intersects, getHeight, getWidth} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../extent.js\").Extent} [imageExtent] Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {import(\"../proj.js\").ProjectionLike} projection Projection.\n * @property {import(\"../size.js\").Size} [imageSize] Size of the image in pixels. Usually the image size is auto-detected, so this\n * only needs to be set if auto-detection fails for some reason.\n * @property {string} url Image URL.\n */\n\n\n/**\n * @classdesc\n * A layer source for displaying a single, static image.\n * @api\n */\nvar Static = /*@__PURE__*/(function (ImageSource) {\n  function Static(options) {\n    var crossOrigin = options.crossOrigin !== undefined ?\n      options.crossOrigin : null;\n\n    var /** @type {import(\"../Image.js\").LoadFunction} */ imageLoadFunction =\n        options.imageLoadFunction !== undefined ?\n          options.imageLoadFunction : defaultImageLoadFunction;\n\n    ImageSource.call(this, {\n      attributions: options.attributions,\n      projection: getProjection(options.projection)\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.imageExtent_ = options.imageExtent;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = new ImageWrapper(this.imageExtent_, undefined, 1, this.url_, crossOrigin, imageLoadFunction);\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = options.imageSize ? options.imageSize : null;\n\n    listen(this.image_, EventType.CHANGE,\n      this.handleImageChange, this);\n\n  }\n\n  if ( ImageSource ) Static.__proto__ = ImageSource;\n  Static.prototype = Object.create( ImageSource && ImageSource.prototype );\n  Static.prototype.constructor = Static;\n\n  /**\n   * Returns the image extent\n   * @return {import(\"../extent.js\").Extent} image extent.\n   * @api\n   */\n  Static.prototype.getImageExtent = function getImageExtent () {\n    return this.imageExtent_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Static.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {\n    if (intersects(extent, this.image_.getExtent())) {\n      return this.image_;\n    }\n    return null;\n  };\n\n  /**\n   * Return the URL used for this image source.\n   * @return {string} URL.\n   * @api\n   */\n  Static.prototype.getUrl = function getUrl () {\n    return this.url_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Static.prototype.handleImageChange = function handleImageChange (evt) {\n    if (this.image_.getState() == ImageState.LOADED) {\n      var imageExtent = this.image_.getExtent();\n      var image = this.image_.getImage();\n      var imageWidth, imageHeight;\n      if (this.imageSize_) {\n        imageWidth = this.imageSize_[0];\n        imageHeight = this.imageSize_[1];\n      } else {\n        imageWidth = image.width;\n        imageHeight = image.height;\n      }\n      var resolution = getHeight(imageExtent) / imageHeight;\n      var targetWidth = Math.ceil(getWidth(imageExtent) / resolution);\n      if (targetWidth != imageWidth) {\n        var context = createCanvasContext2D(targetWidth, imageHeight);\n        var canvas = context.canvas;\n        context.drawImage(image, 0, 0, imageWidth, imageHeight,\n          0, 0, canvas.width, canvas.height);\n        this.image_.setImage(canvas);\n      }\n    }\n    ImageSource.prototype.handleImageChange.call(this, evt);\n  };\n\n  return Static;\n}(ImageSource));\n\n\nexport default Static;\n\n//# sourceMappingURL=ImageStatic.js.map","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport var DEFAULT_WMS_VERSION = '1.3.0';\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n//# sourceMappingURL=WMSServerType.js.map","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\n\nimport ImageWrapper from '../Image.js';\nimport {assert} from '../asserts.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport WMSServerType from './WMSServerType.js';\nimport {compareVersions} from '../string.js';\nimport {appendParams} from '../uri.js';\n\n\n/**\n * @const\n * @type {import(\"../size.js\").Size}\n */\nvar GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"./WMSServerType.js\").default|string} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver` or `qgis`. Only needed if `hidpi` is `true`.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or\n * higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {string} url WMS service URL.\n */\n\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nvar ImageWMS = /*@__PURE__*/(function (ImageSource) {\n  function ImageWMS(opt_options) {\n\n    var options = opt_options || /** @type {Options} */ ({});\n\n    ImageSource.call(this, {\n      attributions: options.attributions,\n      projection: options.projection,\n      resolutions: options.resolutions\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n      options.imageLoadFunction : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n    this.updateV13_();\n\n    /**\n     * @private\n     * @type {import(\"./WMSServerType.js\").default|undefined}\n     */\n    this.serverType_ = /** @type {import(\"./WMSServerType.js\").default|undefined} */ (options.serverType);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n  }\n\n  if ( ImageSource ) ImageWMS.__proto__ = ImageSource;\n  ImageWMS.prototype = Object.create( ImageSource && ImageSource.prototype );\n  ImageWMS.prototype.constructor = ImageWMS;\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  ImageWMS.prototype.getGetFeatureInfoUrl = function getGetFeatureInfoUrl (coordinate, resolution, projection, params) {\n    if (this.url_ === undefined) {\n      return undefined;\n    }\n    var projectionObj = getProjection(projection);\n    var sourceProjectionObj = this.getProjection();\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      resolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    var extent = getForViewAndSize(coordinate, resolution, 0,\n      GETFEATUREINFO_IMAGE_SIZE);\n\n    var baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS']\n    };\n    assign(baseParams, this.params_, params);\n\n    var x = Math.floor((coordinate[0] - extent[0]) / resolution);\n    var y = Math.floor((extent[3] - coordinate[1]) / resolution);\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(\n      extent, GETFEATUREINFO_IMAGE_SIZE,\n      1, sourceProjectionObj || projectionObj, baseParams);\n  };\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  ImageWMS.prototype.getParams = function getParams () {\n    return this.params_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageWMS.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {\n\n    if (this.url_ === undefined) {\n      return null;\n    }\n\n    resolution = this.findNearestResolution(resolution);\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    var imageResolution = resolution / pixelRatio;\n\n    var center = getCenter(extent);\n    var viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n    var viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n    var viewExtent = getForViewAndSize(center, imageResolution, 0,\n      [viewWidth, viewHeight]);\n    var requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n    var requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n    var requestExtent = getForViewAndSize(center, imageResolution, 0,\n      [requestWidth, requestHeight]);\n\n    var image = this.image_;\n    if (image &&\n        this.renderedRevision_ == this.getRevision() &&\n        image.getResolution() == resolution &&\n        image.getPixelRatio() == pixelRatio &&\n        containsExtent(image.getExtent(), viewExtent)) {\n      return image;\n    }\n\n    var params = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetMap',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true\n    };\n    assign(params, this.params_);\n\n    this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n    this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n    var url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n      projection, params);\n\n    this.image_ = new ImageWrapper(requestExtent, resolution, pixelRatio,\n      url, this.crossOrigin_, this.imageLoadFunction_);\n\n    this.renderedRevision_ = this.getRevision();\n\n    listen(this.image_, EventType.CHANGE,\n      this.handleImageChange, this);\n\n    return this.image_;\n\n  };\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  ImageWMS.prototype.getImageLoadFunction = function getImageLoadFunction () {\n    return this.imageLoadFunction_;\n  };\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string} Request URL.\n   * @private\n   */\n  ImageWMS.prototype.getRequestUrl_ = function getRequestUrl_ (extent, size, pixelRatio, projection, params) {\n\n    assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case WMSServerType.GEOSERVER:\n          var dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case WMSServerType.MAPSERVER:\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case WMSServerType.CARMENTA_SERVER:\n        case WMSServerType.QGIS:\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default:\n          assert(false, 8); // Unknown `serverType` configured\n          break;\n      }\n    }\n\n    params['WIDTH'] = size[0];\n    params['HEIGHT'] = size[1];\n\n    var axisOrientation = projection.getAxisOrientation();\n    var bbox;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      bbox = [extent[1], extent[0], extent[3], extent[2]];\n    } else {\n      bbox = extent;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    return appendParams(/** @type {string} */ (this.url_), params);\n  };\n\n  /**\n   * Return the URL used for this WMS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  ImageWMS.prototype.getUrl = function getUrl () {\n    return this.url_;\n  };\n\n  /**\n   * Set the image load function of the source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  ImageWMS.prototype.setImageLoadFunction = function setImageLoadFunction (imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  };\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  ImageWMS.prototype.setUrl = function setUrl (url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.image_ = null;\n      this.changed();\n    }\n  };\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  ImageWMS.prototype.updateParams = function updateParams (params) {\n    assign(this.params_, params);\n    this.updateV13_();\n    this.image_ = null;\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  ImageWMS.prototype.updateV13_ = function updateV13_ () {\n    var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  };\n\n  return ImageWMS;\n}(ImageSource));\n\n\nexport default ImageWMS;\n\n//# sourceMappingURL=ImageWMS.js.map","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport var ATTRIBUTION = '&#169; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. Default is four times as many tiles as a fullscreen map needs.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=1.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nvar OSM = /*@__PURE__*/(function (XYZ) {\n  function OSM(opt_options) {\n\n    var options = opt_options || {};\n\n    var attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    var crossOrigin = options.crossOrigin !== undefined ?\n      options.crossOrigin : 'anonymous';\n\n    var url = options.url !== undefined ?\n      options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    XYZ.call(this, {\n      attributions: attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      url: url,\n      wrapX: options.wrapX,\n      attributionsCollapsible: false\n    });\n\n  }\n\n  if ( XYZ ) OSM.__proto__ = XYZ;\n  OSM.prototype = Object.create( XYZ && XYZ.prototype );\n  OSM.prototype.constructor = OSM;\n\n  return OSM;\n}(XYZ));\n\nexport default OSM;\n\n//# sourceMappingURL=OSM.js.map","/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {import(\"../source/Image.js\").default} [source] Source for this layer.\n */\n\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseImageLayer = /*@__PURE__*/(function (Layer) {\n  function BaseImageLayer(opt_options) {\n    var options = opt_options ? opt_options : {};\n    Layer.call(this, options);\n  }\n\n  if ( Layer ) BaseImageLayer.__proto__ = Layer;\n  BaseImageLayer.prototype = Object.create( Layer && Layer.prototype );\n  BaseImageLayer.prototype.constructor = BaseImageLayer;\n\n  return BaseImageLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Image source} of the image layer.\n * @function\n * @return {import(\"../source/Image.js\").default} Source.\n * @api\n */\nBaseImageLayer.prototype.getSource;\nexport default BaseImageLayer;\n\n//# sourceMappingURL=BaseImage.js.map","/**\n * @module ol/renderer/Layer\n */\nimport {getUid, abstract} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport SourceState from '../source/State.js';\n\nvar LayerRenderer = /*@__PURE__*/(function (Observable) {\n  function LayerRenderer(layer) {\n\n    Observable.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../layer/Layer.js\").default}\n     */\n    this.layer_ = layer;\n\n  }\n\n  if ( Observable ) LayerRenderer.__proto__ = Observable;\n  LayerRenderer.prototype = Object.create( Observable && Observable.prototype );\n  LayerRenderer.prototype.constructor = LayerRenderer;\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  LayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    return abstract();\n  };\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   * @return {HTMLElement} The rendered element.\n   */\n  LayerRenderer.prototype.renderFrame = function renderFrame (frameState, layerState) {\n    return abstract();\n  };\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   */\n  LayerRenderer.prototype.loadedTileCallback = function loadedTileCallback (tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n  };\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  LayerRenderer.prototype.createLoadedTileFinder = function createLoadedTileFinder (source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function(zoom, tileRange) {\n        var callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    ).bind(this);\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default): T} callback Feature callback.\n   * @return {T|void} Callback result.\n   * @template T\n   */\n  LayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback) {};\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  LayerRenderer.prototype.getDataAtPixel = function getDataAtPixel (pixel, frameState, hitTolerance) {\n    return abstract();\n  };\n\n  /**\n   * @return {import(\"../layer/Layer.js\").default} Layer.\n   */\n  LayerRenderer.prototype.getLayer = function getLayer () {\n    return this.layer_;\n  };\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  LayerRenderer.prototype.handleImageChange_ = function handleImageChange_ (event) {\n    var image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Is there a feature at the given coordinate?\n   */\n  LayerRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState) {\n    return false;\n  };\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  LayerRenderer.prototype.loadImage = function loadImage (image) {\n    var imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      listen(image, EventType.CHANGE, this.handleImageChange_, this);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  };\n\n  /**\n   * @protected\n   */\n  LayerRenderer.prototype.renderIfReadyAndVisible = function renderIfReadyAndVisible () {\n    var layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  LayerRenderer.prototype.scheduleExpireCache = function scheduleExpireCache (frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../PluggableMap.js\").default} map Map.\n       * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      var postRenderFunction = function(tileSource, map, frameState) {\n        var tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]);\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction)\n      );\n    }\n  };\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../Tile.js').default} tile Tile.\n   * @protected\n   */\n  LayerRenderer.prototype.updateUsedTiles = function updateUsedTiles (usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    var tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  };\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(this: T, import(\"../Tile.js\").default)=} opt_tileCallback Tile callback.\n   * @param {T=} opt_this Object to use as `this` in `opt_tileCallback`.\n   * @protected\n   * @template T\n   */\n  LayerRenderer.prototype.manageTilePyramid = function manageTilePyramid (\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback,\n    opt_this\n  ) {\n    var tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    var wantedTiles = frameState.wantedTiles[tileSourceKey];\n    var tileQueue = frameState.tileQueue;\n    var minZoom = tileGrid.getMinZoom();\n    var tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([tile, tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback.call(opt_this, tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n  };\n\n  return LayerRenderer;\n}(Observable));\n\nexport default LayerRenderer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport LayerRenderer from '../Layer.js';\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @abstract\n */\nvar CanvasLayerRenderer = /*@__PURE__*/(function (LayerRenderer) {\n  function CanvasLayerRenderer(layer) {\n\n    LayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform_ = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform_ = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = createCanvasContext2D();\n\n    var canvas = this.context.canvas;\n    canvas.style.position = 'absolute';\n    canvas.style.transformOrigin = 'top left';\n    canvas.className = this.getLayer().getClassName();\n  }\n\n  if ( LayerRenderer ) CanvasLayerRenderer.__proto__ = LayerRenderer;\n  CanvasLayerRenderer.prototype = Object.create( LayerRenderer && LayerRenderer.prototype );\n  CanvasLayerRenderer.prototype.constructor = CanvasLayerRenderer;\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.clip = function clip (context, frameState, extent) {\n    var pixelRatio = frameState.pixelRatio;\n    var halfWidth = (frameState.size[0] * pixelRatio) / 2;\n    var halfHeight = (frameState.size[1] * pixelRatio) / 2;\n    var rotation = frameState.viewState.rotation;\n    var topLeft = getTopLeft(extent);\n    var topRight = getTopRight(extent);\n    var bottomRight = getBottomRight(extent);\n    var bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    context.save();\n    rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n    context.beginPath();\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n    context.clip();\n    rotateAtOffset(context, rotation, halfWidth, halfHeight);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.clipUnrotated = function clipUnrotated (context, frameState, extent) {\n    var topLeft = getTopLeft(extent);\n    var topRight = getTopRight(extent);\n    var bottomRight = getBottomRight(extent);\n    var bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    var inverted = this.inversePixelTransform_;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  };\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  CanvasLayerRenderer.prototype.dispatchRenderEvent_ = function dispatchRenderEvent_ (type, context, frameState) {\n    var layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      var event = new RenderEvent(type, this.inversePixelTransform_, frameState, context, null);\n      layer.dispatchEvent(event);\n    }\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.preRender = function preRender (context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.postRender = function postRender (context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  };\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  CanvasLayerRenderer.prototype.getRenderTransform = function getRenderTransform (frameState, width, height, offsetX) {\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var dx1 = width / 2;\n    var dy1 = height / 2;\n    var sx = pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var dx2 = -viewState.center[0] + offsetX;\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.tempTransform_, dx1, dy1, sx, sy, -viewState.rotation, dx2, dy2);\n  };\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  CanvasLayerRenderer.prototype.getDataAtPixel = function getDataAtPixel (pixel, frameState, hitTolerance) {\n    var renderPixel = applyTransform(this.inversePixelTransform_, pixel.slice());\n    var context = this.context;\n\n    var data;\n    try {\n      data = context.getImageData(Math.round(renderPixel[0]), Math.round(renderPixel[1]), 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  };\n\n  return CanvasLayerRenderer;\n}(LayerRenderer));\n\nexport default CanvasLayerRenderer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport ViewHint from '../../ViewHint.js';\nimport {containsExtent, intersects} from '../../extent.js';\nimport {getIntersection, isEmpty} from '../../extent.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport {compose as composeTransform, makeInverse, toString as transformToString} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasImageLayerRenderer = /*@__PURE__*/(function (CanvasLayerRenderer) {\n  function CanvasImageLayerRenderer(imageLayer) {\n    CanvasLayerRenderer.call(this, imageLayer);\n\n    /**\n     * @protected\n     * @type {?import(\"../../ImageBase.js\").default}\n     */\n    this.image_ = null;\n  }\n\n  if ( CanvasLayerRenderer ) CanvasImageLayerRenderer.__proto__ = CanvasLayerRenderer;\n  CanvasImageLayerRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  CanvasImageLayerRenderer.prototype.constructor = CanvasImageLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImage = function getImage () {\n    return !this.image_ ? null : this.image_.getImage();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var pixelRatio = frameState.pixelRatio;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    var imageLayer = /** @type {import(\"../../layer/Image.js\").default} */ (this.getLayer());\n    var imageSource = /** @type {import(\"../../source/Image.js\").default} */ (imageLayer.getSource());\n\n    var hints = frameState.viewHints;\n\n    var renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(renderedExtent, layerState.extent);\n    }\n\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] && !isEmpty(renderedExtent)) {\n      var projection = viewState.projection;\n      if (!ENABLE_RASTER_REPROJECTION) {\n        var sourceProjection = imageSource.getProjection();\n        if (sourceProjection) {\n          projection = sourceProjection;\n        }\n      }\n      var image = imageSource.getImage(renderedExtent, viewResolution, pixelRatio, projection);\n      if (image && this.loadImage(image)) {\n        this.image_ = image;\n      }\n    }\n\n    return !!this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.renderFrame = function renderFrame (frameState, layerState) {\n    var image = this.image_;\n    var imageExtent = image.getExtent();\n    var imageResolution = image.getResolution();\n    var imagePixelRatio = image.getPixelRatio();\n    var pixelRatio = frameState.pixelRatio;\n    var viewState = frameState.viewState;\n    var viewCenter = viewState.center;\n    var viewResolution = viewState.resolution;\n    var size = frameState.size;\n    var scale = pixelRatio * imageResolution / (viewResolution * imagePixelRatio);\n\n    var width = Math.round(size[0] * pixelRatio);\n    var height = Math.round(size[1] * pixelRatio);\n    var rotation = viewState.rotation;\n    if (rotation) {\n      var size$1 = Math.round(Math.sqrt(width * width + height * height));\n      width = height = size$1;\n    }\n\n    // set forward and inverse pixel transforms\n    composeTransform(this.pixelTransform_,\n      frameState.size[0] / 2, frameState.size[1] / 2,\n      1 / pixelRatio, 1 / pixelRatio,\n      rotation,\n      -width / 2, -height / 2\n    );\n    makeInverse(this.inversePixelTransform_, this.pixelTransform_);\n\n    var context = this.context;\n    var canvas = context.canvas;\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else {\n      context.clearRect(0, 0, width, height);\n    }\n\n    // clipped rendering if layer extent is set\n    var extent = layerState.extent;\n    var clipped = extent !== undefined &&\n          !containsExtent(extent, frameState.extent) &&\n          intersects(extent, frameState.extent);\n    if (clipped) {\n      this.clip(context, frameState, extent);\n    }\n\n    var img = image.getImage();\n\n    var transform = composeTransform(this.tempTransform_,\n      width / 2, height / 2,\n      scale, scale,\n      0,\n      imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution,\n      imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n\n    this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n\n    var dx = transform[4];\n    var dy = transform[5];\n    var dw = img.width * transform[0];\n    var dh = img.height * transform[3];\n\n    this.preRender(context, frameState);\n    if (dw >= 0.5 && dh >= 0.5) {\n      this.context.drawImage(img, 0, 0, +img.width, +img.height,\n        Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n    }\n    this.postRender(context, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n\n    var opacity = layerState.opacity;\n    if (opacity !== parseFloat(canvas.style.opacity)) {\n      canvas.style.opacity = opacity;\n    }\n\n    var canvasTransform = transformToString(this.pixelTransform_);\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return canvas;\n\n  };\n\n  return CanvasImageLayerRenderer;\n}(CanvasLayerRenderer));\n\n\nexport default CanvasImageLayerRenderer;\n\n//# sourceMappingURL=ImageLayer.js.map","/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n\n\n/**\n * @typedef {import(\"./BaseImage.js\").Options} Options\n */\n\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar ImageLayer = /*@__PURE__*/(function (BaseImageLayer) {\n  function ImageLayer(opt_options) {\n    BaseImageLayer.call(this, opt_options);\n  }\n\n  if ( BaseImageLayer ) ImageLayer.__proto__ = BaseImageLayer;\n  ImageLayer.prototype = Object.create( BaseImageLayer && BaseImageLayer.prototype );\n  ImageLayer.prototype.constructor = ImageLayer;\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  ImageLayer.prototype.createRenderer = function createRenderer () {\n    return new CanvasImageLayerRenderer(this);\n  };\n\n  return ImageLayer;\n}(BaseImageLayer));\n\nexport default ImageLayer;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n\n//# sourceMappingURL=TileProperty.js.map","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseTileLayer = /*@__PURE__*/(function (Layer) {\n  function BaseTileLayer(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    Layer.call(this, baseOptions);\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n      options.useInterimTilesOnError : true);\n\n  }\n\n  if ( Layer ) BaseTileLayer.__proto__ = Layer;\n  BaseTileLayer.prototype = Object.create( Layer && Layer.prototype );\n  BaseTileLayer.prototype.constructor = BaseTileLayer;\n\n  /**\n  * Return the level as number to which we will preload tiles up to.\n  * @return {number} The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  BaseTileLayer.prototype.getPreload = function getPreload () {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  };\n\n  /**\n  * Set the level as number to which we will preload tiles up to.\n  * @param {number} preload The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  BaseTileLayer.prototype.setPreload = function setPreload (preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  };\n\n  /**\n  * Whether we use interim tiles on error.\n  * @return {boolean} Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  BaseTileLayer.prototype.getUseInterimTilesOnError = function getUseInterimTilesOnError () {\n    return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n  };\n\n  /**\n  * Set whether we use interim tiles on error.\n  * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  BaseTileLayer.prototype.setUseInterimTilesOnError = function setUseInterimTilesOnError (useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  };\n\n  return BaseTileLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Tile tilesource} of the layer.\n * @function\n * @return {import(\"../source/Tile.js\").default} Source.\n * @api\n */\nBaseTileLayer.prototype.getSource;\n\n\nexport default BaseTileLayer;\n\n//# sourceMappingURL=BaseTile.js.map","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport {getUid} from '../../util.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {createEmpty, getIntersection, getTopLeft} from '../../extent.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport {apply as applyTransform, compose as composeTransform, makeInverse, toString as transformToString} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = /*@__PURE__*/(function (CanvasLayerRenderer) {\n  function CanvasTileLayerRenderer(tileLayer) {\n    CanvasLayerRenderer.call(this, tileLayer);\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.zDirection = 0;\n  }\n\n  if ( CanvasLayerRenderer ) CanvasTileLayerRenderer.__proto__ = CanvasLayerRenderer;\n  CanvasTileLayerRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  CanvasTileLayerRenderer.prototype.constructor = CanvasTileLayerRenderer;\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  CanvasTileLayerRenderer.prototype.isDrawableTile = function isDrawableTile (tile) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileState = tile.getState();\n    var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return tileState == TileState.LOADED ||\n        tileState == TileState.EMPTY ||\n        tileState == TileState.ERROR && !useInterimTilesOnError;\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  CanvasTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    var tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    return true;\n  };\n\n  /**\n   * TODO: File a TypeScript issue about inheritDoc not being followed\n   * all the way.  Without this explicit return type, the VectorTileLayer\n   * renderFrame function does not pass.\n   *\n   * @inheritDoc\n   * @returns {HTMLElement} The rendered element.\n   */\n  CanvasTileLayerRenderer.prototype.renderFrame = function renderFrame (frameState, layerState) {\n    var context = this.context;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var viewResolution = viewState.resolution;\n    var viewCenter = viewState.center;\n    var rotation = viewState.rotation;\n    var pixelRatio = frameState.pixelRatio;\n\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    var sourceRevision = tileSource.getRevision();\n    var tileGrid = tileSource.getTileGridForProjection(projection);\n    var z = tileGrid.getZForResolution(viewResolution, this.zDirection);\n    var tileResolution = tileGrid.getResolution(z);\n    var extent = frameState.extent;\n\n    if (layerState.extent) {\n      extent = getIntersection(extent, layerState.extent);\n    }\n\n    var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    // desired dimensions of the canvas in pixels\n    var width = Math.round(frameState.size[0] * tilePixelRatio);\n    var height = Math.round(frameState.size[1] * tilePixelRatio);\n\n    if (rotation) {\n      var size = Math.round(Math.sqrt(width * width + height * height));\n      width = height = size;\n    }\n\n    var dx = tileResolution * width / 2 / tilePixelRatio;\n    var dy = tileResolution * height / 2 / tilePixelRatio;\n    var canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy\n    ];\n\n    var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    var tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    var findLoadedTiles = this.createLoadedTileFinder(tileSource, projection, tilesToDrawByZ);\n\n    var tmpExtent = this.tmpExtent;\n    var tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        var tile = this.getTile(z, x, y, pixelRatio, projection);\n        if (this.isDrawableTile(tile)) {\n          var uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            var inTransition = tile.inTransition(uid);\n            if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        var childTileRange = tileGrid.getTileCoordChildTileRange(tile.tileCoord, tmpTileRange, tmpExtent);\n\n        var covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n        }\n\n      }\n    }\n\n\n    var canvas = context.canvas;\n    var canvasScale = tileResolution / viewResolution;\n\n    // set forward and inverse pixel transforms\n    composeTransform(this.pixelTransform_,\n      frameState.size[0] / 2, frameState.size[1] / 2,\n      1 / tilePixelRatio, 1 / tilePixelRatio,\n      rotation,\n      -width / 2, -height / 2\n    );\n    makeInverse(this.inversePixelTransform_, this.pixelTransform_);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(this.tempTransform_,\n      width / 2, height / 2,\n      canvasScale, canvasScale,\n      0,\n      -width / 2, -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerState.extent) {\n      this.clipUnrotated(context, frameState, layerState.extent);\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    var zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(function(a, b) {\n      if (a === z) {\n        return 1;\n      } else if (b === z) {\n        return -1;\n      } else {\n        return a > b ? 1 : a < b ? -1 : 0;\n      }\n    });\n\n    for (var i = 0, ii = zs.length; i < ii; ++i) {\n      var currentZ = zs[i];\n      var currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n      var currentResolution = tileGrid.getResolution(currentZ);\n      var currentScale = currentResolution / tileResolution;\n      var dx$1 = currentTilePixelSize[0] * currentScale * canvasScale;\n      var dy$1 = currentTilePixelSize[1] * currentScale * canvasScale;\n      var originTileCoord = tileGrid.getTileCoordForCoordAndZ(getTopLeft(canvasExtent), currentZ);\n      var originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      var origin = applyTransform(this.tempTransform_, [\n        Math.round(tilePixelRatio * (originTileExtent[0] - canvasExtent[0]) / tileResolution),\n        Math.round(tilePixelRatio * (canvasExtent[3] - originTileExtent[3]) / tileResolution)\n      ]);\n      var tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n      var tilesToDraw = tilesToDrawByZ[currentZ];\n      for (var tileCoordKey in tilesToDraw) {\n        var tile$1 = tilesToDraw[tileCoordKey];\n        var tileCoord = tile$1.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        var floatX = (origin[0] - (originTileCoord[1] - tileCoord[1]) * dx$1);\n        var nextX = Math.round(floatX + dx$1);\n        var floatY = (origin[1] - (originTileCoord[2] - tileCoord[2]) * dy$1);\n        var nextY = Math.round(floatY + dy$1);\n        var x$1 = Math.round(floatX);\n        var y$1 = Math.round(floatY);\n        var w = nextX - x$1;\n        var h = nextY - y$1;\n\n        this.drawTileImage(tile$1, frameState, layerState, x$1, y$1, w, h, tileGutter, z === currentZ);\n        this.renderedTiles.push(tile$1);\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile$1);\n      }\n    }\n\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.renderedExtent_ = canvasExtent;\n\n    this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio,\n      projection, extent, z, tileLayer.getPreload());\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n\n    var opacity = layerState.opacity;\n    if (opacity !== parseFloat(canvas.style.opacity)) {\n      canvas.style.opacity = opacity;\n    }\n\n    var canvasTransform = transformToString(this.pixelTransform_);\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return canvas;\n  };\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  CanvasTileLayerRenderer.prototype.drawTileImage = function drawTileImage (tile, frameState, layerState, x, y, w, h, gutter, transition) {\n    var image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    var uid = getUid(this);\n    var alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    var tileSource = /** @type {import(\"../../source/Tile.js\").default} */ (tileLayer.getSource());\n    if (alpha === 1 && !tileSource.getOpaque(frameState.viewState.projection)) {\n      this.context.clearRect(x, y, w, h);\n    }\n    var alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(image, gutter, gutter,\n      image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.getImage = function getImage () {\n    var context = this.context;\n    return context ? context.canvas : null;\n  };\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  CanvasTileLayerRenderer.prototype.getTileImage = function getTileImage (tile) {\n    return /** @type {import(\"../../ImageTile.js\").default} */ (tile).getImage();\n  };\n\n  return CanvasTileLayerRenderer;\n}(CanvasLayerRenderer));\n\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\n\nexport default CanvasTileLayerRenderer;\n\n//# sourceMappingURL=TileLayer.js.map","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n\n/**\n * @typedef {import(\"./BaseTile.js\").Options} Options\n */\n\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = /*@__PURE__*/(function (BaseTileLayer) {\n  function TileLayer(opt_options) {\n    BaseTileLayer.call(this, opt_options);\n  }\n\n  if ( BaseTileLayer ) TileLayer.__proto__ = BaseTileLayer;\n  TileLayer.prototype = Object.create( BaseTileLayer && BaseTileLayer.prototype );\n  TileLayer.prototype.constructor = TileLayer;\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  TileLayer.prototype.createRenderer = function createRenderer () {\n    return new CanvasTileLayerRenderer(this);\n  };\n\n  return TileLayer;\n}(BaseTileLayer));\n\nexport default TileLayer;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/Raster\n */\nimport ImageCanvas from '../ImageCanvas.js';\nimport TileQueue from '../TileQueue.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {Processor} from 'pixelworks/lib/index';\nimport {equals, getCenter, getHeight, getWidth} from '../extent.js';\nimport ImageLayer from '../layer/Image.js';\nimport TileLayer from '../layer/Tile.js';\nimport {assign} from '../obj.js';\nimport {create as createTransform} from '../transform.js';\nimport ImageSource from './Image.js';\nimport TileSource from './Tile.js';\nimport SourceState from './State.js';\nimport Source from './Source.js';\n\n\n/**\n * A function that takes an array of input data, performs some operation, and\n * returns an array of output data.\n * For `pixel` type operations, the function will be called with an array of\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\n * range of 0 - 255. It should return a single pixel array.\n * For `'image'` type operations, functions will be called with an array of\n * {@link ImageData https://developer.mozilla.org/en-US/docs/Web/API/ImageData}\n * and should return a single {@link ImageData\n * https://developer.mozilla.org/en-US/docs/Web/API/ImageData}.  The operations\n * are called with a second \"data\" argument, which can be used for storage.  The\n * data object is accessible from raster events, where it can be initialized in\n * \"beforeoperations\" and accessed again in \"afteroperations\".\n *\n * @typedef {function((Array<Array<number>>|Array<ImageData>), Object):\n *     (Array<number>|ImageData)} Operation\n */\n\n\n/**\n * @enum {string}\n */\nvar RasterEventType = {\n  /**\n   * Triggered before operations are run.\n   * @event module:ol/source/Raster.RasterSourceEvent#beforeoperations\n   * @api\n   */\n  BEFOREOPERATIONS: 'beforeoperations',\n\n  /**\n   * Triggered after operations are run.\n   * @event module:ol/source/Raster.RasterSourceEvent#afteroperations\n   * @api\n   */\n  AFTEROPERATIONS: 'afteroperations'\n};\n\n\n/**\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\n * @enum {string}\n */\nvar RasterOperationType = {\n  PIXEL: 'pixel',\n  IMAGE: 'image'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Raster} instances are instances of this\n * type.\n */\nexport var RasterSourceEvent = /*@__PURE__*/(function (Event) {\n  function RasterSourceEvent(type, frameState, data) {\n    Event.call(this, type);\n\n    /**\n     * The raster extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = frameState.extent;\n\n    /**\n     * The pixel resolution (map units per pixel).\n     * @type {number}\n     * @api\n     */\n    this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\n\n    /**\n     * An object made available to all operations.  This can be used by operations\n     * as a storage object (e.g. for calculating statistics).\n     * @type {Object}\n     * @api\n     */\n    this.data = data;\n\n  }\n\n  if ( Event ) RasterSourceEvent.__proto__ = Event;\n  RasterSourceEvent.prototype = Object.create( Event && Event.prototype );\n  RasterSourceEvent.prototype.constructor = RasterSourceEvent;\n\n  return RasterSourceEvent;\n}(Event));\n\n/**\n * @typedef {Object} Options\n * @property {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources Input\n * sources or layers.  For vector data, use an VectorImage layer.\n * @property {Operation} [operation] Raster operation.\n * The operation will be called with data from input sources\n * and the output will be assigned to the raster source.\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} [threads] By default, operations will be run in a single worker thread.\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\n * be run in multiple worker threads.  Note that there is additional overhead in\n * transferring data to multiple workers, and that depending on the user's\n * system, it may not be possible to parallelize the work.\n * @property {RasterOperationType} [operationType='pixel'] Operation type.\n * Supported values are `'pixel'` and `'image'`.  By default,\n * `'pixel'` operations are assumed, and operations will be called with an\n * array of pixels from input sources.  If set to `'image'`, operations will\n * be called with an array of ImageData objects from input sources.\n */\n\n\n/**\n * @classdesc\n * A source that transforms data from any number of input sources using an\n * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\n * output pixel values.\n *\n * @fires module:ol/source/Raster.RasterSourceEvent\n * @api\n */\nvar RasterSource = /*@__PURE__*/(function (ImageSource) {\n  function RasterSource(options) {\n    ImageSource.call(this, {\n      projection: null\n    });\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.worker_ = null;\n\n    /**\n     * @private\n     * @type {RasterOperationType}\n     */\n    this.operationType_ = options.operationType !== undefined ?\n      options.operationType : RasterOperationType.PIXEL;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threads_ = options.threads !== undefined ? options.threads : 1;\n\n    /**\n     * @private\n     * @type {Array<import(\"../layer/Layer.js\").default>}\n     */\n    this.layers_ = createLayers(options.sources);\n\n    for (var i = 0, ii = this.layers_.length; i < ii; ++i) {\n      listen(this.layers_[i], EventType.CHANGE, this.changed, this);\n    }\n\n    /**\n     * @private\n     * @type {import(\"../TileQueue.js\").default}\n     */\n    this.tileQueue_ = new TileQueue(function() {\n      return 1;\n    }, this.changed.bind(this));\n\n    /**\n     * The most recently requested frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState}\n     * @private\n     */\n    this.requestedFrameState_;\n\n    /**\n     * The most recently rendered image canvas.\n     * @type {import(\"../ImageCanvas.js\").default}\n     * @private\n     */\n    this.renderedImageCanvas_ = null;\n\n    /**\n     * The most recently rendered revision.\n     * @type {number}\n     */\n    this.renderedRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").FrameState}\n     */\n    this.frameState_ = {\n      animate: false,\n      coordinateToPixelTransform: createTransform(),\n      extent: null,\n      focus: null,\n      index: 0,\n      layerStatesArray: getLayerStatesArray(this.layers_),\n      pixelRatio: 1,\n      pixelToCoordinateTransform: createTransform(),\n      postRenderFunctions: [],\n      size: [0, 0],\n      skippedFeatureUids: {},\n      tileQueue: this.tileQueue_,\n      time: Date.now(),\n      usedTiles: {},\n      viewState: /** @type {import(\"../View.js\").State} */ ({\n        rotation: 0\n      }),\n      viewHints: [],\n      wantedTiles: {}\n    };\n\n    if (options.operation !== undefined) {\n      this.setOperation(options.operation, options.lib);\n    }\n\n  }\n\n  if ( ImageSource ) RasterSource.__proto__ = ImageSource;\n  RasterSource.prototype = Object.create( ImageSource && ImageSource.prototype );\n  RasterSource.prototype.constructor = RasterSource;\n\n  /**\n   * Set the operation.\n   * @param {Operation} operation New operation.\n   * @param {Object=} opt_lib Functions that will be available to operations run\n   *     in a worker.\n   * @api\n   */\n  RasterSource.prototype.setOperation = function setOperation (operation, opt_lib) {\n    this.worker_ = new Processor({\n      operation: operation,\n      imageOps: this.operationType_ === RasterOperationType.IMAGE,\n      queue: 1,\n      lib: opt_lib,\n      threads: this.threads_\n    });\n    this.changed();\n  };\n\n  /**\n   * Update the stored frame state.\n   * @param {import(\"../extent.js\").Extent} extent The view extent (in map units).\n   * @param {number} resolution The view resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n   * @return {import(\"../PluggableMap.js\").FrameState} The updated frame state.\n   * @private\n   */\n  RasterSource.prototype.updateFrameState_ = function updateFrameState_ (extent, resolution, projection) {\n\n    var frameState = /** @type {import(\"../PluggableMap.js\").FrameState} */ (assign({}, this.frameState_));\n\n    frameState.viewState = /** @type {import(\"../View.js\").State} */ (assign({}, frameState.viewState));\n\n    var center = getCenter(extent);\n\n    frameState.extent = extent.slice();\n    frameState.focus = center;\n    frameState.size[0] = Math.round(getWidth(extent) / resolution);\n    frameState.size[1] = Math.round(getHeight(extent) / resolution);\n    frameState.time = Date.now();\n    frameState.animate = false;\n\n    var viewState = frameState.viewState;\n    viewState.center = center;\n    viewState.projection = projection;\n    viewState.resolution = resolution;\n    return frameState;\n  };\n\n  /**\n   * Determine if all sources are ready.\n   * @return {boolean} All sources are ready.\n   * @private\n   */\n  RasterSource.prototype.allSourcesReady_ = function allSourcesReady_ () {\n    var ready = true;\n    var source;\n    for (var i = 0, ii = this.layers_.length; i < ii; ++i) {\n      source = this.layers_[i].getSource();\n      if (source.getState() !== SourceState.READY) {\n        ready = false;\n        break;\n      }\n    }\n    return ready;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RasterSource.prototype.getImage = function getImage (extent, resolution, pixelRatio, projection) {\n    if (!this.allSourcesReady_()) {\n      return null;\n    }\n\n    var frameState = this.updateFrameState_(extent, resolution, projection);\n    this.requestedFrameState_ = frameState;\n\n    // check if we can't reuse the existing ol/ImageCanvas\n    if (this.renderedImageCanvas_) {\n      var renderedResolution = this.renderedImageCanvas_.getResolution();\n      var renderedExtent = this.renderedImageCanvas_.getExtent();\n      if (resolution !== renderedResolution || !equals(extent, renderedExtent)) {\n        this.renderedImageCanvas_ = null;\n      }\n    }\n\n    if (!this.renderedImageCanvas_ || this.getRevision() !== this.renderedRevision_) {\n      this.processSources_();\n    }\n\n    frameState.tileQueue.loadMoreTiles(16, 16);\n\n    if (frameState.animate) {\n      requestAnimationFrame(this.changed.bind(this));\n    }\n\n    return this.renderedImageCanvas_;\n  };\n\n  /**\n   * Start processing source data.\n   * @private\n   */\n  RasterSource.prototype.processSources_ = function processSources_ () {\n    var frameState = this.requestedFrameState_;\n    var len = this.layers_.length;\n    var imageDatas = new Array(len);\n    for (var i = 0; i < len; ++i) {\n      var imageData = getImageData(this.layers_[i], frameState, frameState.layerStatesArray[i]);\n      if (imageData) {\n        imageDatas[i] = imageData;\n      } else {\n        return;\n      }\n    }\n\n    var data = {};\n    this.dispatchEvent(new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data));\n    this.worker_.process(imageDatas, data, this.onWorkerComplete_.bind(this, frameState));\n  };\n\n  /**\n   * Called when pixel processing is complete.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState The frame state.\n   * @param {Error} err Any error during processing.\n   * @param {ImageData} output The output image data.\n   * @param {Object} data The user data.\n   * @private\n   */\n  RasterSource.prototype.onWorkerComplete_ = function onWorkerComplete_ (frameState, err, output, data) {\n    if (err || !output) {\n      return;\n    }\n\n    // do nothing if extent or resolution changed\n    var extent = frameState.extent;\n    var resolution = frameState.viewState.resolution;\n    if (resolution !== this.requestedFrameState_.viewState.resolution ||\n        !equals(extent, this.requestedFrameState_.extent)) {\n      return;\n    }\n\n    var context;\n    if (this.renderedImageCanvas_) {\n      context = this.renderedImageCanvas_.getImage().getContext('2d');\n    } else {\n      var width = Math.round(getWidth(extent) / resolution);\n      var height = Math.round(getHeight(extent) / resolution);\n      context = createCanvasContext2D(width, height);\n      this.renderedImageCanvas_ = new ImageCanvas(extent, resolution, 1, context.canvas);\n    }\n    context.putImageData(output, 0, 0);\n\n    this.changed();\n    this.renderedRevision_ = this.getRevision();\n\n    this.dispatchEvent(new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data));\n  };\n\n  /**\n   * @override\n   */\n  RasterSource.prototype.getImageInternal = function getImageInternal () {\n    return null; // not implemented\n  };\n\n  return RasterSource;\n}(ImageSource));\n\n\n/**\n * A reusable canvas context.\n * @type {CanvasRenderingContext2D}\n * @private\n */\nvar sharedContext = null;\n\n\n/**\n * Get image data from a layer.\n * @param {import(\"../layer/Layer.js\").default} layer Layer to render.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState The frame state.\n * @param {import(\"../layer/Layer.js\").State} layerState The layer state.\n * @return {ImageData} The image data.\n */\nfunction getImageData(layer, frameState, layerState) {\n  var renderer = layer.getRenderer();\n  if (!renderer) {\n    throw new Error('Unsupported layer type: ' + layer);\n  }\n\n  if (!renderer.prepareFrame(frameState, layerState)) {\n    return null;\n  }\n  var width = frameState.size[0];\n  var height = frameState.size[1];\n  var element = renderer.renderFrame(frameState, layerState);\n  if (!(element instanceof HTMLCanvasElement)) {\n    throw new Error('Unsupported rendered element: ' + element);\n  }\n  if (element.width === width && element.height === height) {\n    var context = element.getContext('2d');\n    return context.getImageData(0, 0, width, height);\n  }\n\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(width, height);\n  } else {\n    var canvas = sharedContext.canvas;\n    if (canvas.width !== width || canvas.height !== height) {\n      sharedContext = createCanvasContext2D(width, height);\n    } else {\n      sharedContext.clearRect(0, 0, width, height);\n    }\n  }\n  sharedContext.drawImage(element, 0, 0, width, height);\n  return sharedContext.getImageData(0, 0, width, height);\n}\n\n\n/**\n * Get a list of layer states from a list of layers.\n * @param {Array<import(\"../layer/Layer.js\").default>} layers Layers.\n * @return {Array<import(\"../layer/Layer.js\").State>} The layer states.\n */\nfunction getLayerStatesArray(layers) {\n  return layers.map(function(layer) {\n    return layer.getLayerState();\n  });\n}\n\n\n/**\n * Create layers for all sources.\n * @param {Array<import(\"./Source.js\").default|import(\"../layer/Layer.js\").default>} sources The sources.\n * @return {Array<import(\"../layer/Layer.js\").default>} Array of layers.\n */\nfunction createLayers(sources) {\n  var len = sources.length;\n  var layers = new Array(len);\n  for (var i = 0; i < len; ++i) {\n    layers[i] = createLayer(sources[i]);\n  }\n  return layers;\n}\n\n\n/**\n * Create a layer for the provided source.\n * @param {import(\"./Source.js\").default|import(\"../layer/Layer.js\").default} layerOrSource The layer or source.\n * @return {import(\"../layer/Layer.js\").default} The layer.\n */\nfunction createLayer(layerOrSource) {\n  // @type {import(\"../layer/Layer.js\").default}\n  var layer;\n  if (layerOrSource instanceof Source) {\n    if (layerOrSource instanceof TileSource) {\n      layer = new TileLayer({source: layerOrSource});\n    } else if (layerOrSource instanceof ImageSource) {\n      layer = new ImageLayer({source: layerOrSource});\n    }\n  } else {\n    layer = layerOrSource;\n  }\n  return layer;\n}\n\n\nexport default RasterSource;\n\n//# sourceMappingURL=Raster.js.map","/**\n * @module ol/source/Stamen\n */\n\nimport {ATTRIBUTION as OSM_ATTRIBUTION} from './OSM.js';\nimport XYZ from './XYZ.js';\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar ATTRIBUTIONS = [\n  'Map tiles by <a href=\"https://stamen.com/\">Stamen Design</a>, ' +\n        'under <a href=\"https://creativecommons.org/licenses/by/3.0/\">CC BY' +\n        ' 3.0</a>.',\n  OSM_ATTRIBUTION\n];\n\n\n/**\n * @type {Object<string, {extension: string, opaque: boolean}>}\n */\nvar LayerConfig = {\n  'terrain': {\n    extension: 'jpg',\n    opaque: true\n  },\n  'terrain-background': {\n    extension: 'jpg',\n    opaque: true\n  },\n  'terrain-labels': {\n    extension: 'png',\n    opaque: false\n  },\n  'terrain-lines': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-background': {\n    extension: 'png',\n    opaque: true\n  },\n  'toner': {\n    extension: 'png',\n    opaque: true\n  },\n  'toner-hybrid': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-labels': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-lines': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-lite': {\n    extension: 'png',\n    opaque: true\n  },\n  'watercolor': {\n    extension: 'jpg',\n    opaque: true\n  }\n};\n\n\n/**\n * @type {Object<string, {minZoom: number, maxZoom: number}>}\n */\nvar ProviderConfig = {\n  'terrain': {\n    minZoom: 4,\n    maxZoom: 18\n  },\n  'toner': {\n    minZoom: 0,\n    maxZoom: 20\n  },\n  'watercolor': {\n    minZoom: 1,\n    maxZoom: 16\n  }\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Tile cache size. Default is four times as many tiles as a fullscreen map needs.\n * @property {string} layer Layer name.\n * @property {number} [minZoom] Minimum zoom.\n * @property {number} [maxZoom] Maximum zoom.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source for the Stamen tile server.\n * @api\n */\nvar Stamen = /*@__PURE__*/(function (XYZ) {\n  function Stamen(options) {\n    var i = options.layer.indexOf('-');\n    var provider = i == -1 ? options.layer : options.layer.slice(0, i);\n    var providerConfig = ProviderConfig[provider];\n\n    var layerConfig = LayerConfig[options.layer];\n\n    var url = options.url !== undefined ? options.url :\n      'https://stamen-tiles-{a-d}.a.ssl.fastly.net/' + options.layer +\n        '/{z}/{x}/{y}.' + layerConfig.extension;\n\n    XYZ.call(this, {\n      attributions: ATTRIBUTIONS,\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      maxZoom: options.maxZoom != undefined ? options.maxZoom : providerConfig.maxZoom,\n      minZoom: options.minZoom != undefined ? options.minZoom : providerConfig.minZoom,\n      opaque: layerConfig.opaque,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      url: url,\n      wrapX: options.wrapX\n    });\n\n  }\n\n  if ( XYZ ) Stamen.__proto__ = XYZ;\n  Stamen.prototype = Object.create( XYZ && XYZ.prototype );\n  Stamen.prototype.constructor = Stamen;\n\n  return Stamen;\n}(XYZ));\n\nexport default Stamen;\n\n//# sourceMappingURL=Stamen.js.map","/**\n * @module ol/source/TileArcGISRest\n */\n\nimport {createEmpty} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {assign} from '../obj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport TileImage from './TileImage.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. Default is four times as many tiles as a fullscreen map needs.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service defaults will be\n * used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is `IMAGE` by\n * default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`,\n * and `IMAGESR` will be set dynamically. Set `LAYERS` to\n * override the default service layer visibility. See\n * http://resources.arcgis.com/en/help/arcgis-rest-api/index.html#/Export_Map/02r3000000v7000000/\n * for further reference.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL.\n * The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The\n * url should include /MapServer or /ImageServer.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.  To disable the opacity\n * transition, pass `transition: 0`.\n * @property {Array<string>} [urls] ArcGIS Rest service urls. Use this instead of `url` when the ArcGIS\n * Service supports multiple urls for export requests.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data from ArcGIS Rest services. Map and Image\n * Services are supported.\n *\n * For cached ArcGIS services, better performance is available using the\n * {@link module:ol/source/XYZ~XYZ} data source.\n * @api\n */\nvar TileArcGISRest = /*@__PURE__*/(function (TileImage) {\n  function TileArcGISRest(opt_options) {\n\n    var options = opt_options || /** @type {Options} */ ({});\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tileUrlFunction: tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.setKey(this.getKeyForParams_());\n  }\n\n  if ( TileImage ) TileArcGISRest.__proto__ = TileImage;\n  TileArcGISRest.prototype = Object.create( TileImage && TileImage.prototype );\n  TileArcGISRest.prototype.constructor = TileArcGISRest;\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  TileArcGISRest.prototype.getKeyForParams_ = function getKeyForParams_ () {\n    var i = 0;\n    var res = [];\n    for (var key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  };\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  TileArcGISRest.prototype.getParams = function getParams () {\n    return this.params_;\n  };\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../size.js\").Size} tileSize Tile size.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  TileArcGISRest.prototype.getRequestUrl_ = function getRequestUrl_ (tileCoord, tileSize, tileExtent, pixelRatio, projection, params) {\n\n    var urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n\n    // ArcGIS Server only wants the numeric portion of the projection ID.\n    var srid = projection.getCode().split(':').pop();\n\n    params['SIZE'] = tileSize[0] + ',' + tileSize[1];\n    params['BBOX'] = tileExtent.join(',');\n    params['BBOXSR'] = srid;\n    params['IMAGESR'] = srid;\n    params['DPI'] = Math.round(\n      params['DPI'] ? params['DPI'] * pixelRatio : 90 * pixelRatio\n    );\n\n    var url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      var index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n\n    var modifiedUrl = url\n      .replace(/MapServer\\/?$/, 'MapServer/export')\n      .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n    return appendParams(modifiedUrl, params);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileArcGISRest.prototype.getTilePixelRatio = function getTilePixelRatio (pixelRatio) {\n    return /** @type {number} */ (pixelRatio);\n  };\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  TileArcGISRest.prototype.updateParams = function updateParams (params) {\n    assign(this.params_, params);\n    this.setKey(this.getKeyForParams_());\n  };\n\n  return TileArcGISRest;\n}(TileImage));\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n * @param {number} pixelRatio The pixel ratio\n * @param {import(\"../proj/Projection.js\").default} projection The projection\n * @return {string|undefined} The tile URL\n * @this {TileArcGISRest}\n */\nfunction tileUrlFunction(tileCoord, pixelRatio, projection) {\n\n  var tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  var tileExtent = tileGrid.getTileCoordExtent(\n    tileCoord, this.tmpExtent_);\n  var tileSize = toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  if (pixelRatio != 1) {\n    tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  // Apply default params and override with user specified values.\n  var baseParams = {\n    'F': 'image',\n    'FORMAT': 'PNG32',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n}\n\n\nexport default TileArcGISRest;\n\n//# sourceMappingURL=TileArcGISRest.js.map","/**\n * @module ol/source/TileDebug\n */\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {toSize} from '../size.js';\nimport XYZ from './XYZ.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n\nvar LabeledTile = /*@__PURE__*/(function (Tile) {\n  function LabeledTile(tileCoord, tileSize, text) {\n\n    Tile.call(this, tileCoord, TileState.LOADED);\n\n    /**\n    * @private\n    * @type {import(\"../size.js\").Size}\n    */\n    this.tileSize_ = tileSize;\n\n    /**\n    * @private\n    * @type {string}\n    */\n    this.text_ = text;\n\n    /**\n    * @private\n    * @type {HTMLCanvasElement}\n    */\n    this.canvas_ = null;\n\n  }\n\n  if ( Tile ) LabeledTile.__proto__ = Tile;\n  LabeledTile.prototype = Object.create( Tile && Tile.prototype );\n  LabeledTile.prototype.constructor = LabeledTile;\n\n  /**\n  * Get the image element for this tile.\n  * @return {HTMLCanvasElement} Image.\n  */\n  LabeledTile.prototype.getImage = function getImage () {\n    if (this.canvas_) {\n      return this.canvas_;\n    } else {\n      var tileSize = this.tileSize_;\n      var context = createCanvasContext2D(tileSize[0], tileSize[1]);\n\n      context.strokeStyle = 'grey';\n      context.strokeRect(0.5, 0.5, tileSize[0] + 0.5, tileSize[1] + 0.5);\n\n      context.fillStyle = 'grey';\n      context.textAlign = 'center';\n      context.textBaseline = 'middle';\n      context.font = '24px sans-serif';\n      context.fillText(this.text_, tileSize[0] / 2, tileSize[1] / 2);\n\n      this.canvas_ = context.canvas;\n      return context.canvas;\n    }\n  };\n\n  /**\n  * @override\n  */\n  LabeledTile.prototype.load = function load () {};\n\n  return LabeledTile;\n}(Tile));\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Optional projection.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * A pseudo tile source, which does not fetch tiles from a server, but renders\n * a grid outline for the tile grid/projection along with the coordinates for\n * each tile. See examples/canvas-tiles for an example.\n *\n * Uses Canvas context2d, so requires Canvas support.\n * @api\n */\nvar TileDebug = /*@__PURE__*/(function (XYZ) {\n  function TileDebug(opt_options) {\n    /**\n     * @type {Options}\n     */\n    var options = opt_options || {};\n\n    XYZ.call(this, {\n      opaque: false,\n      projection: options.projection,\n      tileGrid: options.tileGrid,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true\n    });\n\n  }\n\n  if ( XYZ ) TileDebug.__proto__ = XYZ;\n  TileDebug.prototype = Object.create( XYZ && XYZ.prototype );\n  TileDebug.prototype.constructor = TileDebug;\n\n  /**\n  * @inheritDoc\n  */\n  TileDebug.prototype.getTile = function getTile (z, x, y) {\n    var tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      return /** @type {!LabeledTile} */ (this.tileCache.get(tileCoordKey));\n    } else {\n      var tileSize = toSize(this.tileGrid.getTileSize(z));\n      var tileCoord = [z, x, y];\n      var textTileCoord = this.getTileCoordForTileUrlFunction(tileCoord);\n      var text;\n      if (textTileCoord) {\n        text = 'z:' + textTileCoord[0] + ' x:' + textTileCoord[1] + ' y:' + textTileCoord[2];\n      } else {\n        text = 'none';\n      }\n      var tile = new LabeledTile(tileCoord, tileSize, text);\n      this.tileCache.set(tileCoordKey, tile);\n      return tile;\n    }\n  };\n\n  return TileDebug;\n}(XYZ));\n\n\nexport default TileDebug;\n\n//# sourceMappingURL=TileDebug.js.map","/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\n\n/**\n * See http://mapbox.com/developers/api/.\n */\n\n\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {assert} from '../asserts.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {jsonp as requestJSONP} from '../net.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport SourceState from './State.js';\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n\n/**\n * @typedef {Object} Config\n * @property {string} [name] The name.\n * @property {string} [description] The description.\n * @property {string} [version] The version.\n * @property {string} [attribution] The attribution.\n * @property {string} [template] The template.\n * @property {string} [legend] The legend.\n * @property {string} [scheme] The scheme.\n * @property {Array<string>} tiles The tile URL templates.\n * @property {Array<string>} [grids] Optional grids.\n * @property {number} [minzoom] Minimum zoom level.\n * @property {number} [maxzoom] Maximum zoom level.\n * @property {Array<number>} [bounds] Optional bounds.\n * @property {Array<number>} [center] Optional center.\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. Default is four times as many tiles as a fullscreen map needs.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data in TileJSON format.\n * @api\n */\nvar TileJSON = /*@__PURE__*/(function (TileImage) {\n  function TileJSON(options) {\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: SourceState.LOADING,\n      tileLoadFunction: options.tileLoadFunction,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n    /**\n     * @type {Config}\n     * @private\n     */\n    this.tileJSON_ = null;\n\n\n    if (options.url) {\n      if (options.jsonp) {\n        requestJSONP(options.url, this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this));\n      } else {\n        var client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      assert(false, 51); // Either `url` or `tileJSON` options must be provided\n    }\n\n  }\n\n  if ( TileImage ) TileJSON.__proto__ = TileImage;\n  TileJSON.prototype = Object.create( TileImage && TileImage.prototype );\n  TileJSON.prototype.constructor = TileJSON;\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  TileJSON.prototype.onXHRLoad_ = function onXHRLoad_ (event) {\n    var client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || client.status >= 200 && client.status < 300) {\n      var response;\n      try {\n        response = /** @type {TileJSON} */(JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  };\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  TileJSON.prototype.onXHRError_ = function onXHRError_ (event) {\n    this.handleTileJSONError();\n  };\n\n  /**\n   * @return {Config} The tilejson object.\n   * @api\n   */\n  TileJSON.prototype.getTileJSON = function getTileJSON () {\n    return this.tileJSON_;\n  };\n\n  /**\n   * @protected\n   * @param {Config} tileJSON Tile JSON.\n   */\n  TileJSON.prototype.handleTileJSONResponse = function handleTileJSONResponse (tileJSON) {\n\n    var epsg4326Projection = getProjection('EPSG:4326');\n\n    var sourceProjection = this.getProjection();\n    var extent;\n    if (tileJSON['bounds'] !== undefined) {\n      var transform = getTransformFromProjections(\n        epsg4326Projection, sourceProjection);\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    var minZoom = tileJSON['minzoom'] || 0;\n    var maxZoom = tileJSON['maxzoom'] || 22;\n    var tileGrid = createXYZ({\n      extent: extentFromProjection(sourceProjection),\n      maxZoom: maxZoom,\n      minZoom: minZoom\n    });\n    this.tileGrid = tileGrid;\n\n    this.tileUrlFunction = createFromTemplates(tileJSON['tiles'], tileGrid);\n\n    if (tileJSON['attribution'] !== undefined && !this.getAttributions()) {\n      var attributionExtent = extent !== undefined ?\n        extent : epsg4326Projection.getExtent();\n\n      this.setAttributions(function(frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n\n    }\n    this.tileJSON_ = tileJSON;\n    this.setState(SourceState.READY);\n\n  };\n\n  /**\n   * @protected\n   */\n  TileJSON.prototype.handleTileJSONError = function handleTileJSONError () {\n    this.setState(SourceState.ERROR);\n  };\n\n  return TileJSON;\n}(TileImage));\n\n\nexport default TileJSON;\n\n//# sourceMappingURL=TileJSON.js.map","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\n\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {toSize, buffer as bufferSize, scale as scaleSize} from '../size.js';\nimport TileImage from './TileImage.js';\nimport WMSServerType from './WMSServerType.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\nimport {compareVersions} from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. Default is four times as many tiles as a fullscreen map needs.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {number} [gutter=0]\n * The size in pixels of the gutter around image tiles to ignore. By setting\n * this property to a non-zero value, images will be requested that are wider\n * and taller than the tile size by a value of `2 x gutter`.\n * Using a non-zero value allows artifacts of rendering at tile edges to be\n * ignored. If you control the WMS service it is recommended to address\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\n * this. See http://mapserver.org/output/tile_mode.html.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used..\n * @property {import(\"./WMSServerType.js\").default|string} [serverType]\n * The type of the remote WMS server. Currently only used when `hidpi` is\n * `true`.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] WMS service URL.\n * @property {Array<string>} [urls] WMS service urls.\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When `true`, tiles will be requested for one world only,\n * but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n * @api\n */\nvar TileWMS = /*@__PURE__*/(function (TileImage) {\n  function TileWMS(opt_options) {\n\n    var options = opt_options || /** @type {Options} */ ({});\n\n    var params = options.params || {};\n\n    var transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      opaque: !transparent,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tileUrlFunction: tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = params;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n\n    /**\n     * @private\n     * @type {import(\"./WMSServerType.js\").default|undefined}\n     */\n    this.serverType_ = /** @type {import(\"./WMSServerType.js\").default|undefined} */ (options.serverType);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n\n  }\n\n  if ( TileImage ) TileWMS.__proto__ = TileImage;\n  TileWMS.prototype = Object.create( TileImage && TileImage.prototype );\n  TileWMS.prototype.constructor = TileWMS;\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  TileWMS.prototype.getGetFeatureInfoUrl = function getGetFeatureInfoUrl (coordinate, resolution, projection, params) {\n    var projectionObj = getProjection(projection);\n    var sourceProjectionObj = this.getProjection();\n\n    var tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projectionObj);\n    }\n\n    var tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    var tileResolution = tileGrid.getResolution(tileCoord[0]);\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    var tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n    var gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      tileResolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n      tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    var baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS']\n    };\n    assign(baseParams, this.params_, params);\n\n    var x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n    var y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n      1, sourceProjectionObj || projectionObj, baseParams);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileWMS.prototype.getGutter = function getGutter () {\n    return this.gutter_;\n  };\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  TileWMS.prototype.getParams = function getParams () {\n    return this.params_;\n  };\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../size.js\").Size} tileSize Tile size.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  TileWMS.prototype.getRequestUrl_ = function getRequestUrl_ (tileCoord, tileSize, tileExtent, pixelRatio, projection, params) {\n\n    var urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n\n    params['WIDTH'] = tileSize[0];\n    params['HEIGHT'] = tileSize[1];\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case WMSServerType.GEOSERVER:\n          var dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case WMSServerType.MAPSERVER:\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case WMSServerType.CARMENTA_SERVER:\n        case WMSServerType.QGIS:\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default:\n          assert(false, 52); // Unknown `serverType` configured\n          break;\n      }\n    }\n\n    var axisOrientation = projection.getAxisOrientation();\n    var bbox = tileExtent;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      var tmp;\n      tmp = tileExtent[0];\n      bbox[0] = tileExtent[1];\n      bbox[1] = tmp;\n      tmp = tileExtent[2];\n      bbox[2] = tileExtent[3];\n      bbox[3] = tmp;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    var url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      var index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n    return appendParams(url, params);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileWMS.prototype.getTilePixelRatio = function getTilePixelRatio (pixelRatio) {\n    return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n    /** @type {number} */ (pixelRatio);\n  };\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  TileWMS.prototype.getKeyForParams_ = function getKeyForParams_ () {\n    var i = 0;\n    var res = [];\n    for (var key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  };\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  TileWMS.prototype.updateParams = function updateParams (params) {\n    assign(this.params_, params);\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  };\n\n  /**\n   * @private\n   */\n  TileWMS.prototype.updateV13_ = function updateV13_ () {\n    var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  };\n\n  return TileWMS;\n}(TileImage));\n\n/**\n * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n * @param {number} pixelRatio The pixel ratio\n * @param {import(\"../proj/Projection.js\").default} projection The projection\n * @return {string|undefined} The tile URL\n * @this {TileWMS}\n */\nfunction tileUrlFunction(tileCoord, pixelRatio, projection) {\n\n  var tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  var tileResolution = tileGrid.getResolution(tileCoord[0]);\n  var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  var tileSize = toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  var gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  var baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n}\n\n\nexport default TileWMS;\n\n//# sourceMappingURL=TileWMS.js.map","/**\n * @module ol/source/UTFGrid\n */\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport {assert} from '../asserts.js';\nimport {listenOnce} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {jsonp as requestJSONP} from '../net.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport SourceState from './State.js';\nimport TileSource from './Tile.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} UTFGridJSON\n * @property {Array<string>} grid The grid.\n * @property {Array<string>} keys The keys.\n * @property {Object<string, Object>} [data] Optional data.\n */\n\n\nexport var CustomTile = /*@__PURE__*/(function (Tile) {\n  function CustomTile(tileCoord, state, src, extent, preemptive, jsonp) {\n\n    Tile.call(this, tileCoord, state);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.preemptive_ = preemptive;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.grid_ = null;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.keys_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Object>|undefined}\n     */\n    this.data_ = null;\n\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.jsonp_ = jsonp;\n\n  }\n\n  if ( Tile ) CustomTile.__proto__ = Tile;\n  CustomTile.prototype = Object.create( Tile && Tile.prototype );\n  CustomTile.prototype.constructor = CustomTile;\n\n  /**\n   * Get the image element for this tile.\n   * @return {HTMLImageElement} Image.\n   */\n  CustomTile.prototype.getImage = function getImage () {\n    return null;\n  };\n\n\n  /**\n   * Synchronously returns data at given coordinate (if available).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {*} The data.\n   */\n  CustomTile.prototype.getData = function getData (coordinate) {\n    if (!this.grid_ || !this.keys_) {\n      return null;\n    }\n    var xRelative = (coordinate[0] - this.extent_[0]) /\n        (this.extent_[2] - this.extent_[0]);\n    var yRelative = (coordinate[1] - this.extent_[1]) /\n        (this.extent_[3] - this.extent_[1]);\n\n    var row = this.grid_[Math.floor((1 - yRelative) * this.grid_.length)];\n\n    if (typeof row !== 'string') {\n      return null;\n    }\n\n    var code = row.charCodeAt(Math.floor(xRelative * row.length));\n    if (code >= 93) {\n      code--;\n    }\n    if (code >= 35) {\n      code--;\n    }\n    code -= 32;\n\n    var data = null;\n    if (code in this.keys_) {\n      var id = this.keys_[code];\n      if (this.data_ && id in this.data_) {\n        data = this.data_[id];\n      } else {\n        data = id;\n      }\n    }\n    return data;\n  };\n\n\n  /**\n   * Calls the callback (synchronously by default) with the available data\n   * for given coordinate (or `null` if not yet loaded).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(this: T, *): void} callback Callback.\n   * @param {T=} opt_this The object to use as `this` in the callback.\n   * @param {boolean=} opt_request If `true` the callback is always async.\n   *                               The tile data is requested if not yet loaded.\n   * @template T\n   */\n  CustomTile.prototype.forDataAtCoordinate = function forDataAtCoordinate (coordinate, callback, opt_this, opt_request) {\n    if (this.state == TileState.IDLE && opt_request === true) {\n      listenOnce(this, EventType.CHANGE, function(e) {\n        callback.call(opt_this, this.getData(coordinate));\n      }, this);\n      this.loadInternal_();\n    } else {\n      if (opt_request === true) {\n        setTimeout(function() {\n          callback.call(opt_this, this.getData(coordinate));\n        }.bind(this), 0);\n      } else {\n        callback.call(opt_this, this.getData(coordinate));\n      }\n    }\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  CustomTile.prototype.getKey = function getKey () {\n    return this.src_;\n  };\n\n\n  /**\n   * @private\n   */\n  CustomTile.prototype.handleError_ = function handleError_ () {\n    this.state = TileState.ERROR;\n    this.changed();\n  };\n\n\n  /**\n   * @param {!UTFGridJSON} json UTFGrid data.\n   * @private\n   */\n  CustomTile.prototype.handleLoad_ = function handleLoad_ (json) {\n    this.grid_ = json['grid'];\n    this.keys_ = json['keys'];\n    this.data_ = json['data'];\n\n    this.state = TileState.EMPTY;\n    this.changed();\n  };\n\n\n  /**\n   * @private\n   */\n  CustomTile.prototype.loadInternal_ = function loadInternal_ () {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      if (this.jsonp_) {\n        requestJSONP(this.src_, this.handleLoad_.bind(this),\n          this.handleError_.bind(this));\n      } else {\n        var client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', this.src_);\n        client.send();\n      }\n    }\n  };\n\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  CustomTile.prototype.onXHRLoad_ = function onXHRLoad_ (event) {\n    var client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || client.status >= 200 && client.status < 300) {\n      var response;\n      try {\n        response = /** @type {!UTFGridJSON} */(JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleError_();\n        return;\n      }\n      this.handleLoad_(response);\n    } else {\n      this.handleError_();\n    }\n  };\n\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  CustomTile.prototype.onXHRError_ = function onXHRError_ (event) {\n    this.handleError_();\n  };\n\n\n  /**\n   * @override\n   */\n  CustomTile.prototype.load = function load () {\n    if (this.preemptive_) {\n      this.loadInternal_();\n    }\n  };\n\n  return CustomTile;\n}(Tile));\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [preemptive=true]\n * If `true` the UTFGrid source loads the tiles based on their \"visibility\".\n * This improves the speed of response, but increases traffic.\n * Note that if set to `false`, you need to pass `true` as `opt_request`\n * to the `forDataAtCoordinateAndResolution` method otherwise no data\n * will ever be loaded.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {import(\"./TileJSON.js\").Config} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {string} [url] TileJSON endpoint that provides the configuration for this source.\n * Request will be made through JSONP. If not provided, `tileJSON` must be configured.\n */\n\n\n/**\n * @classdesc\n * Layer source for UTFGrid interaction data loaded from TileJSON format.\n * @api\n */\nvar UTFGrid = /*@__PURE__*/(function (TileSource) {\n  function UTFGrid(options) {\n    TileSource.call(this, {\n      projection: getProjection('EPSG:3857'),\n      state: SourceState.LOADING\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.preemptive_ = options.preemptive !== undefined ?\n      options.preemptive : true;\n\n    /**\n     * @private\n     * @type {!import(\"../Tile.js\").UrlFunction}\n     */\n    this.tileUrlFunction_ = nullTileUrlFunction;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.template_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.jsonp_ = options.jsonp || false;\n\n    if (options.url) {\n      if (this.jsonp_) {\n        requestJSONP(options.url, this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this));\n      } else {\n        var client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      assert(false, 51); // Either `url` or `tileJSON` options must be provided\n    }\n\n  }\n\n  if ( TileSource ) UTFGrid.__proto__ = TileSource;\n  UTFGrid.prototype = Object.create( TileSource && TileSource.prototype );\n  UTFGrid.prototype.constructor = UTFGrid;\n\n\n  /**\n   * @private\n   * @param {Event} event The load event.\n   */\n  UTFGrid.prototype.onXHRLoad_ = function onXHRLoad_ (event) {\n    var client = /** @type {XMLHttpRequest} */ (event.target);\n    // status will be 0 for file:// urls\n    if (!client.status || client.status >= 200 && client.status < 300) {\n      var response;\n      try {\n        response = /** @type {import(\"./TileJSON.js\").Config} */(JSON.parse(client.responseText));\n      } catch (err) {\n        this.handleTileJSONError();\n        return;\n      }\n      this.handleTileJSONResponse(response);\n    } else {\n      this.handleTileJSONError();\n    }\n  };\n\n\n  /**\n   * @private\n   * @param {Event} event The error event.\n   */\n  UTFGrid.prototype.onXHRError_ = function onXHRError_ (event) {\n    this.handleTileJSONError();\n  };\n\n\n  /**\n   * Return the template from TileJSON.\n   * @return {string|undefined} The template from TileJSON.\n   * @api\n   */\n  UTFGrid.prototype.getTemplate = function getTemplate () {\n    return this.template_;\n  };\n\n\n  /**\n   * Calls the callback (synchronously by default) with the available data\n   * for given coordinate and resolution (or `null` if not yet loaded or\n   * in case of an error).\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {function(*): void} callback Callback.\n   * @param {boolean=} opt_request If `true` the callback is always async.\n   *                               The tile data is requested if not yet loaded.\n   * @api\n   */\n  UTFGrid.prototype.forDataAtCoordinateAndResolution = function forDataAtCoordinateAndResolution (\n    coordinate, resolution, callback, opt_request) {\n    if (this.tileGrid) {\n      var tileCoord = this.tileGrid.getTileCoordForCoordAndResolution(\n        coordinate, resolution);\n      var tile = /** @type {!CustomTile} */(this.getTile(\n        tileCoord[0], tileCoord[1], tileCoord[2], 1, this.getProjection()));\n      tile.forDataAtCoordinate(coordinate, callback, null, opt_request);\n    } else {\n      if (opt_request === true) {\n        setTimeout(function() {\n          callback(null);\n        }, 0);\n      } else {\n        callback(null);\n      }\n    }\n  };\n\n\n  /**\n   * @protected\n   */\n  UTFGrid.prototype.handleTileJSONError = function handleTileJSONError () {\n    this.setState(SourceState.ERROR);\n  };\n\n\n  /**\n   * TODO: very similar to ol/source/TileJSON#handleTileJSONResponse\n   * @protected\n   * @param {import(\"./TileJSON.js\").Config} tileJSON Tile JSON.\n   */\n  UTFGrid.prototype.handleTileJSONResponse = function handleTileJSONResponse (tileJSON) {\n\n    var epsg4326Projection = getProjection('EPSG:4326');\n\n    var sourceProjection = this.getProjection();\n    var extent;\n    if (tileJSON['bounds'] !== undefined) {\n      var transform = getTransformFromProjections(\n        epsg4326Projection, sourceProjection);\n      extent = applyTransform(tileJSON['bounds'], transform);\n    }\n\n    var minZoom = tileJSON['minzoom'] || 0;\n    var maxZoom = tileJSON['maxzoom'] || 22;\n    var tileGrid = createXYZ({\n      extent: extentFromProjection(sourceProjection),\n      maxZoom: maxZoom,\n      minZoom: minZoom\n    });\n    this.tileGrid = tileGrid;\n\n    this.template_ = tileJSON['template'];\n\n    var grids = tileJSON['grids'];\n    if (!grids) {\n      this.setState(SourceState.ERROR);\n      return;\n    }\n\n    this.tileUrlFunction_ = createFromTemplates(grids, tileGrid);\n\n    if (tileJSON['attribution'] !== undefined) {\n      var attributionExtent = extent !== undefined ?\n        extent : epsg4326Projection.getExtent();\n\n      this.setAttributions(function(frameState) {\n        if (intersects(attributionExtent, frameState.extent)) {\n          return [tileJSON['attribution']];\n        }\n        return null;\n      });\n    }\n\n    this.setState(SourceState.READY);\n\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  UTFGrid.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      return (\n        /** @type {!import(\"../Tile.js\").default} */ (this.tileCache.get(tileCoordKey))\n      );\n    } else {\n      var tileCoord = [z, x, y];\n      var urlTileCoord =\n          this.getTileCoordForTileUrlFunction(tileCoord, projection);\n      var tileUrl = this.tileUrlFunction_(urlTileCoord, pixelRatio, projection);\n      var tile = new CustomTile(\n        tileCoord,\n        tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n        tileUrl !== undefined ? tileUrl : '',\n        this.tileGrid.getTileCoordExtent(tileCoord),\n        this.preemptive_,\n        this.jsonp_);\n      this.tileCache.set(tileCoordKey, tile);\n      return tile;\n    }\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  UTFGrid.prototype.useTile = function useTile (z, x, y) {\n    var tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  };\n\n  return UTFGrid;\n}(TileSource));\n\n\nexport default UTFGrid;\n\n//# sourceMappingURL=UTFGrid.js.map","/**\n * @module ol/VectorRenderTile\n */\nimport {getUid} from './util.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder\n * @property {number} renderedTileRevision\n * @property {number} renderedRevision\n * @property {number} renderedZ\n * @property {number} renderedTileZ\n */\n\n\nvar VectorRenderTile = /*@__PURE__*/(function (Tile) {\n  function VectorRenderTile(tileCoord, state, urlTileCoord, sourceTileGrid, getSourceTiles, removeSourceTiles) {\n\n    Tile.call(this, tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {!Object<string, CanvasRenderingContext2D>}\n     */\n    this.context_ = {};\n\n    /**\n     * Executor groups by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.executorGroups = {};\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    this.loadingSourceTiles = 0;\n\n    /**\n     * Tile keys of error source tiles. Read/written by the source.\n     * @type {Object<string, boolean>}\n     */\n    this.errorSourceTileKeys = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @type {!function(import(\"./VectorRenderTile.js\").default):Array<import(\"./VectorTile.js\").default>}\n     */\n    this.getSourceTiles_ = getSourceTiles;\n\n    /**\n     * @type {!function(import(\"./VectorRenderTile.js\").default):void}\n     */\n    this.removeSourceTiles_ = removeSourceTiles;\n\n    /**\n     * @private\n     * @type {import(\"./tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * z of the source tiles of the last getSourceTiles call.\n     * @type {number}\n     */\n    this.sourceZ = -1;\n\n    /**\n     * True when all tiles for this tile's nominal resolution are available.\n     * @type {boolean}\n     */\n    this.hifi = false;\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n  }\n\n  if ( Tile ) VectorRenderTile.__proto__ = Tile;\n  VectorRenderTile.prototype = Object.create( Tile && Tile.prototype );\n  VectorRenderTile.prototype.constructor = VectorRenderTile;\n\n  /**\n   * @inheritDoc\n   */\n  VectorRenderTile.prototype.disposeInternal = function disposeInternal () {\n    this.removeSourceTiles_(this);\n    for (var key in this.context_) {\n      var canvas = this.context_[key].canvas;\n      canvas.width = canvas.height = 0;\n    }\n    for (var key$1 in this.executorGroups) {\n      var executorGroups = this.executorGroups[key$1];\n      for (var i = 0, ii = executorGroups.length; i < ii; ++i) {\n        executorGroups[i].disposeInternal();\n      }\n    }\n    this.setState(TileState.ABORT);\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  VectorRenderTile.prototype.getContext = function getContext (layer) {\n    var key = getUid(layer);\n    if (!(key in this.context_)) {\n      this.context_[key] = createCanvasContext2D();\n    }\n    return this.context_[key];\n  };\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {boolean} Tile has a rendering context for the given layer.\n   */\n  VectorRenderTile.prototype.hasContext = function hasContext (layer) {\n    return getUid(layer) in this.context_;\n  };\n\n  /**\n   * Get the Canvas for this tile.\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  VectorRenderTile.prototype.getImage = function getImage (layer) {\n    return this.hasContext(layer) ? this.getContext(layer).canvas : null;\n  };\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  VectorRenderTile.prototype.getReplayState = function getReplayState (layer) {\n    var key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedRevision: -1,\n        renderedTileRevision: -1,\n        renderedZ: -1,\n        renderedTileZ: -1\n      };\n    }\n    return this.replayState_[key];\n  };\n\n  /**\n   * @inheritDoc\n   * @return {Array<import(\"./VectorTile.js\").default>} Source tiles for this tile.\n   */\n  VectorRenderTile.prototype.load = function load () {\n    return this.getSourceTiles_(this);\n  };\n\n  return VectorRenderTile;\n}(Tile));\n\n\nexport default VectorRenderTile;\n\n//# sourceMappingURL=VectorRenderTile.js.map","/**\n * @module ol/VectorTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\n/**\n * @const\n * @type {import(\"./extent.js\").Extent}\n */\nvar DEFAULT_EXTENT = [0, 0, 4096, 4096];\n\n\nvar VectorTile = /*@__PURE__*/(function (Tile) {\n  function VectorTile(tileCoord, state, src, format, tileLoadFunction, opt_options) {\n\n    Tile.call(this, tileCoord, state, opt_options);\n\n    /**\n     * @type {number}\n     */\n    this.consumers = 0;\n\n    /**\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./format/Feature.js\").default}\n     */\n    this.format_ = format;\n\n    /**\n     * @private\n     * @type {Array<import(\"./Feature.js\").default>}\n     */\n    this.features_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * Data projection\n     * @private\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = src;\n\n  }\n\n  if ( Tile ) VectorTile.__proto__ = Tile;\n  VectorTile.prototype = Object.create( Tile && Tile.prototype );\n  VectorTile.prototype.constructor = VectorTile;\n\n  /**\n   * @inheritDoc\n   */\n  VectorTile.prototype.disposeInternal = function disposeInternal () {\n    this.setState(TileState.ABORT);\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Gets the extent of the vector tile.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @api\n   */\n  VectorTile.prototype.getExtent = function getExtent () {\n    return this.extent_ || DEFAULT_EXTENT;\n  };\n\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {import(\"./format/Feature.js\").default} Feature format.\n   * @api\n   */\n  VectorTile.prototype.getFormat = function getFormat () {\n    return this.format_;\n  };\n\n  /**\n   * Get the features for this tile. Geometries will be in the projection returned\n   * by {@link module:ol/VectorTile~VectorTile#getProjection}.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  VectorTile.prototype.getFeatures = function getFeatures () {\n    return this.features_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  VectorTile.prototype.getKey = function getKey () {\n    return this.url_;\n  };\n\n  /**\n   * Get the feature projection of features returned by\n   * {@link module:ol/VectorTile~VectorTile#getFeatures}.\n   * @return {import(\"./proj/Projection.js\").default} Feature projection.\n   * @api\n   */\n  VectorTile.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  VectorTile.prototype.load = function load () {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n      this.loader_(null, NaN, null);\n    }\n  };\n\n  /**\n   * Handler for successful tile load.\n   * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n   * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   */\n  VectorTile.prototype.onLoad = function onLoad (features, dataProjection, extent) {\n    this.setProjection(dataProjection);\n    this.setFeatures(features);\n    this.setExtent(extent);\n  };\n\n  /**\n   * Handler for tile load errors.\n   */\n  VectorTile.prototype.onError = function onError () {\n    this.setState(TileState.ERROR);\n  };\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s\n   * `tileLoadFunction`. Sets the extent of the vector tile. This is only required\n   * for tiles in projections with `tile-pixels` as units. The extent should be\n   * set to `[0, 0, tilePixelSize, tilePixelSize]`, where `tilePixelSize` is\n   * calculated by multiplying the tile size with the tile pixel ratio. For\n   * sources using {@link module:ol/format/MVT~MVT} as feature format, the\n   * {@link module:ol/format/MVT~MVT#getLastExtent} method will return the correct\n   * extent. The default is `[0, 0, 4096, 4096]`.\n   * @param {import(\"./extent.js\").Extent} extent The extent.\n   * @api\n   */\n  VectorTile.prototype.setExtent = function setExtent (extent) {\n    this.extent_ = extent;\n  };\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array<import(\"./Feature.js\").default>} features Features.\n   * @api\n   */\n  VectorTile.prototype.setFeatures = function setFeatures (features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  };\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the projection of the features that were added with\n   * {@link module:ol/VectorTile~VectorTile#setFeatures}.\n   * @param {import(\"./proj/Projection.js\").default} projection Feature projection.\n   * @api\n   */\n  VectorTile.prototype.setProjection = function setProjection (projection) {\n    this.projection_ = projection;\n  };\n\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {import(\"./featureloader.js\").FeatureLoader} loader Feature loader.\n   * @api\n   */\n  VectorTile.prototype.setLoader = function setLoader (loader) {\n    this.loader_ = loader;\n  };\n\n  return VectorTile;\n}(Tile));\n\nexport default VectorTile;\n\n//# sourceMappingURL=VectorTile.js.map","/**\n * @module ol/source/VectorTile\n */\n\nimport TileState from '../TileState.js';\nimport VectorRenderTile from '../VectorRenderTile.js';\nimport Tile from '../VectorTile.js';\nimport {toSize} from '../size.js';\nimport UrlTile from './UrlTile.js';\nimport {getKeyZXY, getKey} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection, createForProjection} from '../tilegrid.js';\nimport {buffer as bufferExtent, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {loadFeaturesXhr} from '../featureloader.js';\nimport {isEmpty} from '../obj.js';\nimport {equals} from '../array.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=128] Cache size.\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {import(\"../format/Feature.js\").default} [format] Feature format for tiles. Used and required by the default.\n * @property {boolean} [overlaps=true] This source may have overlapping geometries. Setting this\n * to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../VectorTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/VectorTile}.\n * @property {number} [maxZoom=22] Optional max zoom level.\n * @property {number} [minZoom] Optional min zoom level.\n * @property {number|import(\"../size.js\").Size} [tileSize=512] Optional tile size.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. Could look like this:\n * ```js\n * function(tile, url) {\n *   tile.setLoader(function() {\n *     var data = // ... fetch data\n *     var format = tile.getFormat();\n *     tile.setProjection(format.readProjection(data));\n *     tile.setFeatures(format.readFeatures(data, {\n *       // featureProjection is not required for ol/format/MVT\n *       featureProjection: map.getView().getProjection()\n *     }));\n *     // the line below is only required for ol/format/MVT\n *     tile.setExtent(format.getLastExtent());\n *   }\n * });\n * ```\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {number} [transition] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When set to `true`, tiles will be wrapped horizontally to\n * render multiple worlds.\n */\n\n\n/**\n * @classdesc\n * Class for layer sources providing vector data divided into a tile grid, to be\n * used with {@link module:ol/layer/VectorTile~VectorTile}. Although this source receives tiles\n * with vector features from the server, it is not meant for feature editing.\n * Features are optimized for rendering, their geometries are clipped at or near\n * tile boundaries and simplified for a view resolution. See\n * {@link module:ol/source/Vector} for vector sources that are suitable for feature\n * editing.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nvar VectorTile = /*@__PURE__*/(function (UrlTile) {\n  function VectorTile(options) {\n    var projection = options.projection || 'EPSG:3857';\n\n    var extent = options.extent || extentFromProjection(projection);\n\n    var tileGrid = options.tileGrid || createXYZ({\n      extent: extent,\n      maxZoom: options.maxZoom || 22,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize || 512\n    });\n\n    UrlTile.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: false,\n      projection: projection,\n      state: options.state,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction ? options.tileLoadFunction : defaultLoadFunction,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX === undefined ? true : options.wrapX,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default}\n     */\n    this.format_ = options.format ? options.format : null;\n\n    /**\n     * @type {Object<string, import(\"./VectorTile\").default>}\n     */\n    this.loadingTiles_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../VectorTile.js\").default>}\n     */\n    this.sourceTiles_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../VectorTile.js\").default>>}\n     */\n    this.sourceTilesByTileKey_ = {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @protected\n     * @type {typeof import(\"../VectorTile.js\").default}\n     */\n    this.tileClass = options.tileClass ? options.tileClass : Tile;\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGrids_ = {};\n\n  }\n\n  if ( UrlTile ) VectorTile.__proto__ = UrlTile;\n  VectorTile.prototype = Object.create( UrlTile && UrlTile.prototype );\n  VectorTile.prototype.constructor = VectorTile;\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  VectorTile.prototype.getOverlaps = function getOverlaps () {\n    return this.overlaps_;\n  };\n\n  /**\n   * clear {@link module:ol/TileCache~TileCache} and delete all source tiles\n   * @api\n   */\n  VectorTile.prototype.clear = function clear () {\n    this.tileCache.clear();\n    this.sourceTiles_ = {};\n    this.sourceTilesByTileKey_ = {};\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection\").default} projection Projection.\n   * @param {VectorRenderTile} tile Vector image tile.\n   * @return {Array<import(\"../VectorTile\").default>} Tile keys.\n   */\n  VectorTile.prototype.getSourceTiles = function getSourceTiles (pixelRatio, projection, tile) {\n    var sourceTiles = [];\n    var urlTileCoord = tile.wrappedTileCoord;\n    if (urlTileCoord) {\n      var tileGrid = this.getTileGridForProjection(projection);\n      var extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      var z = urlTileCoord[0];\n      var resolution = tileGrid.getResolution(z);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(extent, -1 / resolution, extent);\n      var sourceTileGrid = this.tileGrid;\n      var sourceExtent = sourceTileGrid.getExtent();\n      if (sourceExtent) {\n        getIntersection(extent, sourceTileGrid.getExtent(), extent);\n      }\n      var sourceZ = sourceTileGrid.getZForResolution(resolution);\n      var minZoom = sourceTileGrid.getMinZoom();\n\n      var loadedZ = sourceZ + 1;\n      var covered, empty;\n      do {\n        --loadedZ;\n        covered = true;\n        empty = true;\n        sourceTileGrid.forEachTileCoord(extent, loadedZ, function(sourceTileCoord) {\n          var tileKey = getKey(sourceTileCoord);\n          var sourceTile;\n          if (tileKey in this.sourceTiles_) {\n            sourceTile = this.sourceTiles_[tileKey];\n            var state = sourceTile.getState();\n            if (state === TileState.LOADED || state === TileState.ERROR || state === TileState.EMPTY) {\n              empty = empty && state === TileState.EMPTY;\n              sourceTiles.push(sourceTile);\n              return;\n            }\n          } else if (loadedZ === sourceZ) {\n            var tileUrl = this.tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n            sourceTile = new this.tileClass(sourceTileCoord,\n              tileUrl == undefined ? TileState.EMPTY : TileState.IDLE,\n              tileUrl == undefined ? '' : tileUrl,\n              this.format_, this.tileLoadFunction);\n            this.sourceTiles_[tileKey] = sourceTile;\n            empty = empty && sourceTile.getState() === TileState.EMPTY;\n            listen(sourceTile, EventType.CHANGE, this.handleTileChange, this);\n            sourceTile.load();\n          } else {\n            empty = false;\n          }\n          covered = false;\n          if (!sourceTile) {\n            return;\n          }\n          if (sourceTile.getState() !== TileState.EMPTY && tile.getState() === TileState.IDLE) {\n            tile.loadingSourceTiles++;\n            var key = listen(sourceTile, EventType.CHANGE, function() {\n              var state = sourceTile.getState();\n              var sourceTileKey = getKey(sourceTile.tileCoord);\n              if (state === TileState.LOADED || state === TileState.ERROR) {\n                if (state === TileState.LOADED) {\n                  unlistenByKey(key);\n                  tile.loadingSourceTiles--;\n                  delete tile.errorSourceTileKeys[sourceTileKey];\n                } else if (state === TileState.ERROR) {\n                  tile.errorSourceTileKeys[sourceTileKey] = true;\n                }\n                if (tile.loadingSourceTiles - Object.keys(tile.errorSourceTileKeys).length === 0) {\n                  tile.hifi = true;\n                  tile.sourceZ = sourceZ;\n                  tile.setState(isEmpty(tile.errorSourceTileKeys) ? TileState.LOADED : TileState.ERROR);\n                }\n              }\n            });\n          }\n        }.bind(this));\n        if (!covered) {\n          sourceTiles.length = 0;\n        }\n      } while (!covered && loadedZ > minZoom);\n      if (!empty && tile.getState() === TileState.IDLE) {\n        tile.setState(TileState.LOADING);\n      }\n      if (covered || empty) {\n        tile.hifi = sourceZ === loadedZ;\n        tile.sourceZ = loadedZ;\n        var previousSourceTiles = this.sourceTilesByTileKey_[getKey(tile.tileCoord)];\n        if (tile.getState() < TileState.LOADED) {\n          tile.setState(empty ? TileState.EMPTY : TileState.LOADED);\n        } else if (!previousSourceTiles || !equals(sourceTiles, previousSourceTiles)) {\n          this.removeSourceTiles(tile);\n          this.addSourceTiles(tile, sourceTiles);\n        }\n      }\n    }\n    return sourceTiles;\n  };\n\n  /**\n   * @param {VectorRenderTile} tile Tile.\n   * @param {Array<import(\"../VectorTile\").default>} sourceTiles Source tiles.\n   */\n  VectorTile.prototype.addSourceTiles = function addSourceTiles (tile, sourceTiles) {\n    this.sourceTilesByTileKey_[getKey(tile.tileCoord)] = sourceTiles;\n    for (var i = 0, ii = sourceTiles.length; i < ii; ++i) {\n      sourceTiles[i].consumers++;\n    }\n  };\n\n  /**\n   * @param {VectorRenderTile} tile Tile.\n   */\n  VectorTile.prototype.removeSourceTiles = function removeSourceTiles (tile) {\n    var tileKey = getKey(tile.tileCoord);\n    if (tileKey in this.sourceTilesByTileKey_) {\n      var sourceTiles = this.sourceTilesByTileKey_[tileKey];\n      for (var i = 0, ii = sourceTiles.length; i < ii; ++i) {\n        var sourceTile = sourceTiles[i];\n        sourceTile.consumers--;\n        if (sourceTile.consumers === 0) {\n          sourceTile.dispose();\n          delete this.sourceTiles_[getKey(sourceTile.tileCoord)];\n        }\n      }\n    }\n    delete this.sourceTilesByTileKey_[tileKey];\n  };\n\n  /**\n   * @inheritDoc\n   */\n  VectorTile.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      return (\n        /** @type {!import(\"../Tile.js\").default} */ (this.tileCache.get(tileCoordKey))\n      );\n    } else {\n      var tileCoord = [z, x, y];\n      var urlTileCoord = this.getTileCoordForTileUrlFunction(\n        tileCoord, projection);\n      var tile = new VectorRenderTile(\n        tileCoord,\n        urlTileCoord !== null ? TileState.IDLE : TileState.EMPTY,\n        urlTileCoord,\n        this.tileGrid,\n        this.getSourceTiles.bind(this, pixelRatio, projection),\n        this.removeSourceTiles.bind(this));\n\n      tile.key = this.getRevision().toString();\n      this.tileCache.set(tileCoordKey, tile);\n      return tile;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  VectorTile.prototype.getTileGridForProjection = function getTileGridForProjection (projection) {\n    var code = projection.getCode();\n    var tileGrid = this.tileGrids_[code];\n    if (!tileGrid) {\n      // A tile grid that matches the tile size of the source tile grid is more\n      // likely to have 1:1 relationships between source tiles and rendered tiles.\n      var sourceTileGrid = this.tileGrid;\n      tileGrid = this.tileGrids_[code] = createForProjection(projection, undefined,\n        sourceTileGrid ? sourceTileGrid.getTileSize(sourceTileGrid.getMinZoom()) : undefined);\n    }\n    return tileGrid;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  VectorTile.prototype.getTilePixelRatio = function getTilePixelRatio (pixelRatio) {\n    return pixelRatio;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  VectorTile.prototype.getTilePixelSize = function getTilePixelSize (z, pixelRatio, projection) {\n    var tileGrid = this.getTileGridForProjection(projection);\n    var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    return [Math.round(tileSize[0] * pixelRatio), Math.round(tileSize[1] * pixelRatio)];\n  };\n\n  return VectorTile;\n}(UrlTile));\n\n\nexport default VectorTile;\n\n\n/**\n * Sets the loader for a tile.\n * @param {import(\"../VectorTile.js\").default} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n  var loader = loadFeaturesXhr(url, tile.getFormat(), tile.onLoad.bind(tile), tile.onError.bind(tile));\n  tile.setLoader(loader);\n}\n\n//# sourceMappingURL=VectorTile.js.map","/**\n * @module ol/source/WMTSRequestEncoding\n */\n\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @enum {string}\n */\nexport default {\n  KVP: 'KVP', // see spec §8\n  REST: 'REST' // see spec §10\n};\n\n//# sourceMappingURL=WMTSRequestEncoding.js.map","/**\n * @module ol/source/WMTS\n */\n\nimport {expandUrl, createFromTileUrlFunctions, nullTileUrlFunction} from '../tileurlfunction.js';\nimport {find, findIndex, includes} from '../array.js';\nimport {containsExtent} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, equivalent, transformExtent} from '../proj.js';\nimport TileImage from './TileImage.js';\nimport WMTSRequestEncoding from './WMTSRequestEncoding.js';\nimport {createFromCapabilitiesMatrixSet} from '../tilegrid/WMTS.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. Default is four times as many tiles as a fullscreen map needs.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./WMTSRequestEncoding.js\").default|string} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nvar WMTS = /*@__PURE__*/(function (TileImage) {\n  function WMTS(options) {\n\n    // TODO: add support for TileMatrixLimits\n\n    var requestEncoding = options.requestEncoding !== undefined ?\n      /** @type {import(\"./WMTSRequestEncoding.js\").default} */ (options.requestEncoding) :\n      WMTSRequestEncoding.KVP;\n\n    // FIXME: should we create a default tileGrid?\n    // we could issue a getCapabilities xhr to retrieve missing configuration\n    var tileGrid = options.tileGrid;\n\n    var urls = options.urls;\n    if (urls === undefined && options.url !== undefined) {\n      urls = expandUrl(options.url);\n    }\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: nullTileUrlFunction,\n      urls: urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : false,\n      transition: options.transition\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version !== undefined ? options.version : '1.0.0';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.dimensions_ = options.dimensions !== undefined ? options.dimensions : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layer_ = options.layer;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.matrixSet_ = options.matrixSet;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.style_ = options.style;\n\n    // FIXME: should we guess this requestEncoding from options.url(s)\n    //        structure? that would mean KVP only if a template is not provided.\n\n    /**\n     * @private\n     * @type {import(\"./WMTSRequestEncoding.js\").default}\n     */\n    this.requestEncoding_ = requestEncoding;\n\n    this.setKey(this.getKeyForDimensions_());\n\n    if (urls && urls.length > 0) {\n      this.tileUrlFunction = createFromTileUrlFunctions(urls.map(createFromWMTSTemplate.bind(this)));\n    }\n\n  }\n\n  if ( TileImage ) WMTS.__proto__ = TileImage;\n  WMTS.prototype = Object.create( TileImage && TileImage.prototype );\n  WMTS.prototype.constructor = WMTS;\n\n  /**\n   * Set the URLs to use for requests.\n   * URLs may contain OCG conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n   * @override\n   */\n  WMTS.prototype.setUrls = function setUrls (urls) {\n    this.urls = urls;\n    var key = urls.join('\\n');\n    this.setTileUrlFunction(createFromTileUrlFunctions(urls.map(createFromWMTSTemplate.bind(this))), key);\n  };\n\n  /**\n   * Get the dimensions, i.e. those passed to the constructor through the\n   * \"dimensions\" option, and possibly updated using the updateDimensions\n   * method.\n   * @return {!Object} Dimensions.\n   * @api\n   */\n  WMTS.prototype.getDimensions = function getDimensions () {\n    return this.dimensions_;\n  };\n\n\n  /**\n   * Return the image format of the WMTS source.\n   * @return {string} Format.\n   * @api\n   */\n  WMTS.prototype.getFormat = function getFormat () {\n    return this.format_;\n  };\n\n\n  /**\n   * Return the layer of the WMTS source.\n   * @return {string} Layer.\n   * @api\n   */\n  WMTS.prototype.getLayer = function getLayer () {\n    return this.layer_;\n  };\n\n\n  /**\n   * Return the matrix set of the WMTS source.\n   * @return {string} MatrixSet.\n   * @api\n   */\n  WMTS.prototype.getMatrixSet = function getMatrixSet () {\n    return this.matrixSet_;\n  };\n\n\n  /**\n   * Return the request encoding, either \"KVP\" or \"REST\".\n   * @return {import(\"./WMTSRequestEncoding.js\").default} Request encoding.\n   * @api\n   */\n  WMTS.prototype.getRequestEncoding = function getRequestEncoding () {\n    return this.requestEncoding_;\n  };\n\n\n  /**\n   * Return the style of the WMTS source.\n   * @return {string} Style.\n   * @api\n   */\n  WMTS.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n\n  /**\n   * Return the version of the WMTS source.\n   * @return {string} Version.\n   * @api\n   */\n  WMTS.prototype.getVersion = function getVersion () {\n    return this.version_;\n  };\n\n\n  /**\n   * @private\n   * @return {string} The key for the current dimensions.\n   */\n  WMTS.prototype.getKeyForDimensions_ = function getKeyForDimensions_ () {\n    var i = 0;\n    var res = [];\n    for (var key in this.dimensions_) {\n      res[i++] = key + '-' + this.dimensions_[key];\n    }\n    return res.join('/');\n  };\n\n\n  /**\n   * Update the dimensions.\n   * @param {Object} dimensions Dimensions.\n   * @api\n   */\n  WMTS.prototype.updateDimensions = function updateDimensions (dimensions) {\n    assign(this.dimensions_, dimensions);\n    this.setKey(this.getKeyForDimensions_());\n  };\n\n  return WMTS;\n}(TileImage));\n\nexport default WMTS;\n\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {?Options} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n  var layers = wmtsCap['Contents']['Layer'];\n  var l = find(layers, function(elt, index, array) {\n    return elt['Identifier'] == config['layer'];\n  });\n  if (l === null) {\n    return null;\n  }\n  var tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  var idx;\n  if (l['TileMatrixSetLink'].length > 1) {\n    if ('projection' in config) {\n      idx = findIndex(l['TileMatrixSetLink'],\n        function(elt, index, array) {\n          var tileMatrixSet = find(tileMatrixSets, function(el) {\n            return el['Identifier'] == elt['TileMatrixSet'];\n          });\n          var supportedCRS = tileMatrixSet['SupportedCRS'];\n          var proj1 = getProjection(supportedCRS.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n                getProjection(supportedCRS);\n          var proj2 = getProjection(config['projection']);\n          if (proj1 && proj2) {\n            return equivalent(proj1, proj2);\n          } else {\n            return supportedCRS == config['projection'];\n          }\n        });\n    } else {\n      idx = findIndex(l['TileMatrixSetLink'],\n        function(elt, index, array) {\n          return elt['TileMatrixSet'] == config['matrixSet'];\n        });\n    }\n  } else {\n    idx = 0;\n  }\n  if (idx < 0) {\n    idx = 0;\n  }\n  var matrixSet = /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n  var matrixLimits = /** @type {Array<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n\n  var format = /** @type {string} */ (l['Format'][0]);\n  if ('format' in config) {\n    format = config['format'];\n  }\n  idx = findIndex(l['Style'], function(elt, index, array) {\n    if ('style' in config) {\n      return elt['Title'] == config['style'];\n    } else {\n      return elt['isDefault'];\n    }\n  });\n  if (idx < 0) {\n    idx = 0;\n  }\n  var style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n\n  var dimensions = {};\n  if ('Dimension' in l) {\n    l['Dimension'].forEach(function(elt, index, array) {\n      var key = elt['Identifier'];\n      var value = elt['Default'];\n      if (value === undefined) {\n        value = elt['Value'][0];\n      }\n      dimensions[key] = value;\n    });\n  }\n\n  var matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  var matrixSetObj = find(matrixSets, function(elt, index, array) {\n    return elt['Identifier'] == matrixSet;\n  });\n\n  var projection;\n  var code = matrixSetObj['SupportedCRS'];\n  if (code) {\n    projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n        getProjection(code);\n  }\n  if ('projection' in config) {\n    var projConfig = getProjection(config['projection']);\n    if (projConfig) {\n      if (!projection || equivalent(projConfig, projection)) {\n        projection = projConfig;\n      }\n    }\n  }\n\n  var wgs84BoundingBox = l['WGS84BoundingBox'];\n  var extent, wrapX;\n  if (wgs84BoundingBox !== undefined) {\n    var wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n    wrapX = (wgs84BoundingBox[0] == wgs84ProjectionExtent[0] &&\n        wgs84BoundingBox[2] == wgs84ProjectionExtent[2]);\n    extent = transformExtent(\n      wgs84BoundingBox, 'EPSG:4326', projection);\n    var projectionExtent = projection.getExtent();\n    if (projectionExtent) {\n      // If possible, do a sanity check on the extent - it should never be\n      // bigger than the validity extent of the projection of a matrix set.\n      if (!containsExtent(projectionExtent, extent)) {\n        extent = undefined;\n      }\n    }\n  }\n\n  var tileGrid = createFromCapabilitiesMatrixSet(matrixSetObj, extent, matrixLimits);\n\n  /** @type {!Array<string>} */\n  var urls = [];\n  var requestEncoding = config['requestEncoding'];\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n\n  if ('OperationsMetadata' in wmtsCap && 'GetTile' in wmtsCap['OperationsMetadata']) {\n    var gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n\n    for (var i = 0, ii = gets.length; i < ii; ++i) {\n      if (gets[i]['Constraint']) {\n        var constraint = find(gets[i]['Constraint'], function(element) {\n          return element['name'] == 'GetEncoding';\n        });\n        var encodings = constraint['AllowedValues']['Value'];\n\n        if (requestEncoding === '') {\n          // requestEncoding not provided, use the first encoding from the list\n          requestEncoding = encodings[0];\n        }\n        if (requestEncoding === WMTSRequestEncoding.KVP) {\n          if (includes(encodings, WMTSRequestEncoding.KVP)) {\n            urls.push(/** @type {string} */ (gets[i]['href']));\n          }\n        } else {\n          break;\n        }\n      } else if (gets[i]['href']) {\n        requestEncoding = WMTSRequestEncoding.KVP;\n        urls.push(/** @type {string} */ (gets[i]['href']));\n      }\n    }\n  }\n  if (urls.length === 0) {\n    requestEncoding = WMTSRequestEncoding.REST;\n    l['ResourceURL'].forEach(function(element) {\n      if (element['resourceType'] === 'tile') {\n        format = element['format'];\n        urls.push(/** @type {string} */ (element['template']));\n      }\n    });\n  }\n\n  return {\n    urls: urls,\n    layer: config['layer'],\n    matrixSet: matrixSet,\n    format: format,\n    projection: projection,\n    requestEncoding: requestEncoding,\n    tileGrid: tileGrid,\n    style: style,\n    dimensions: dimensions,\n    wrapX: wrapX,\n    crossOrigin: config['crossOrigin']\n  };\n}\n\n/**\n * @param {string} template Template.\n * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n * @this {WMTS}\n */\nfunction createFromWMTSTemplate(template) {\n  var requestEncoding = this.requestEncoding_;\n\n  // context property names are lower case to allow for a case insensitive\n  // replacement as some services use different naming conventions\n  var context = {\n    'layer': this.layer_,\n    'style': this.style_,\n    'tilematrixset': this.matrixSet_\n  };\n\n  if (requestEncoding == WMTSRequestEncoding.KVP) {\n    assign(context, {\n      'Service': 'WMTS',\n      'Request': 'GetTile',\n      'Version': this.version_,\n      'Format': this.format_\n    });\n  }\n\n  // TODO: we may want to create our own appendParams function so that params\n  // order conforms to wmts spec guidance, and so that we can avoid to escape\n  // special template params\n\n  template = (requestEncoding == WMTSRequestEncoding.KVP) ?\n    appendParams(template, context) :\n    template.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n      return (p.toLowerCase() in context) ? context[p.toLowerCase()] : m;\n    });\n\n  var tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (\n    this.tileGrid);\n  var dimensions = this.dimensions_;\n\n  return (\n    /**\n     * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        var localContext = {\n          'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n          'TileCol': tileCoord[1],\n          'TileRow': tileCoord[2]\n        };\n        assign(localContext, dimensions);\n        var url = template;\n        if (requestEncoding == WMTSRequestEncoding.KVP) {\n          url = appendParams(url, localContext);\n        } else {\n          url = url.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n            return localContext[p];\n          });\n        }\n        return url;\n      }\n    }\n  );\n}\n\n//# sourceMappingURL=WMTS.js.map","/**\n * @module ol/source/Zoomify\n */\nimport {DEFAULT_TILE_SIZE} from '../tilegrid/common.js';\n\nimport ImageTile from '../ImageTile.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTileUrlFunctions} from '../tileurlfunction.js';\nimport {assert} from '../asserts.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getTopLeft} from '../extent.js';\nimport {toSize} from '../size.js';\nimport TileImage from './TileImage.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\n\n\n/**\n * @enum {string}\n */\nvar TierSizeCalculation = {\n  DEFAULT: 'default',\n  TRUNCATED: 'truncated'\n};\n\n\nexport var CustomTile = /*@__PURE__*/(function (ImageTile) {\n  function CustomTile(tileGrid, tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n    ImageTile.call(this, tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.zoomifyImage_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tileSize_ = toSize(tileGrid.getTileSize(tileCoord[0]));\n\n  }\n\n  if ( ImageTile ) CustomTile.__proto__ = ImageTile;\n  CustomTile.prototype = Object.create( ImageTile && ImageTile.prototype );\n  CustomTile.prototype.constructor = CustomTile;\n\n  /**\n   * @inheritDoc\n   */\n  CustomTile.prototype.getImage = function getImage () {\n    if (this.zoomifyImage_) {\n      return this.zoomifyImage_;\n    }\n    var image = ImageTile.prototype.getImage.call(this);\n    if (this.state == TileState.LOADED) {\n      var tileSize = this.tileSize_;\n      if (image.width == tileSize[0] && image.height == tileSize[1]) {\n        this.zoomifyImage_ = image;\n        return image;\n      } else {\n        var context = createCanvasContext2D(tileSize[0], tileSize[1]);\n        context.drawImage(image, 0, 0);\n        this.zoomifyImage_ = context.canvas;\n        return context.canvas;\n      }\n    } else {\n      return image;\n    }\n  };\n\n  return CustomTile;\n}(ImageTile));\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Tile cache size. Default is four times as many tiles as a fullscreen map needs.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value  you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {string} [url] URL template or base URL of the Zoomify service.\n * A base URL is the fixed part\n * of the URL, excluding the tile group, z, x, and y folder structure, e.g.\n * `http://my.zoomify.info/IMAGE.TIF/`. A URL template must include\n * `{TileGroup}`, `{x}`, `{y}`, and `{z}` placeholders, e.g.\n * `http://my.zoomify.info/IMAGE.TIF/{TileGroup}/{z}-{x}-{y}.jpg`.\n * Internet Imaging Protocol (IIP) with JTL extension can be also used with\n * `{tileIndex}` and `{z}` placeholders, e.g.\n * `http://my.zoomify.info?FIF=IMAGE.TIF&JTL={z},{tileIndex}`.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {string} [tierSizeCalculation] Tier size calculation method: `default` or `truncated`.\n * @property {import(\"../size.js\").Size} [size] Size of the image.\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the TileGrid that is created.\n * Default sets the TileGrid in the\n * fourth quadrant, meaning extent is `[0, -height, width, 0]`. To change the\n * extent to the first quadrant (the default for OpenLayers 2) set the extent\n * as `[0, 0, width, height]`.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [tileSize=256] Tile size. Same tile size is used for all zoom levels.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data in Zoomify format (both Zoomify and Internet\n * Imaging Protocol are supported).\n * @api\n */\nvar Zoomify = /*@__PURE__*/(function (TileImage) {\n  function Zoomify(opt_options) {\n\n    var options = opt_options || {};\n\n    var size = options.size;\n    var tierSizeCalculation = options.tierSizeCalculation !== undefined ?\n      options.tierSizeCalculation :\n      TierSizeCalculation.DEFAULT;\n\n    var imageWidth = size[0];\n    var imageHeight = size[1];\n    var extent = options.extent || [0, -size[1], size[0], 0];\n    var tierSizeInTiles = [];\n    var tileSize = options.tileSize || DEFAULT_TILE_SIZE;\n    var tileSizeForTierSizeCalculation = tileSize;\n\n    switch (tierSizeCalculation) {\n      case TierSizeCalculation.DEFAULT:\n        while (imageWidth > tileSizeForTierSizeCalculation || imageHeight > tileSizeForTierSizeCalculation) {\n          tierSizeInTiles.push([\n            Math.ceil(imageWidth / tileSizeForTierSizeCalculation),\n            Math.ceil(imageHeight / tileSizeForTierSizeCalculation)\n          ]);\n          tileSizeForTierSizeCalculation += tileSizeForTierSizeCalculation;\n        }\n        break;\n      case TierSizeCalculation.TRUNCATED:\n        var width = imageWidth;\n        var height = imageHeight;\n        while (width > tileSizeForTierSizeCalculation || height > tileSizeForTierSizeCalculation) {\n          tierSizeInTiles.push([\n            Math.ceil(width / tileSizeForTierSizeCalculation),\n            Math.ceil(height / tileSizeForTierSizeCalculation)\n          ]);\n          width >>= 1;\n          height >>= 1;\n        }\n        break;\n      default:\n        assert(false, 53); // Unknown `tierSizeCalculation` configured\n        break;\n    }\n\n    tierSizeInTiles.push([1, 1]);\n    tierSizeInTiles.reverse();\n\n    var resolutions = [1];\n    var tileCountUpToTier = [0];\n    for (var i = 1, ii = tierSizeInTiles.length; i < ii; i++) {\n      resolutions.push(1 << i);\n      tileCountUpToTier.push(\n        tierSizeInTiles[i - 1][0] * tierSizeInTiles[i - 1][1] +\n          tileCountUpToTier[i - 1]\n      );\n    }\n    resolutions.reverse();\n\n    var tileGrid = new TileGrid({\n      tileSize: tileSize,\n      extent: extent,\n      origin: getTopLeft(extent),\n      resolutions: resolutions\n    });\n\n    var url = options.url;\n    if (url && url.indexOf('{TileGroup}') == -1 && url.indexOf('{tileIndex}') == -1) {\n      url += '{TileGroup}/{z}-{x}-{y}.jpg';\n    }\n    var urls = expandUrl(url);\n\n    /**\n     * @param {string} template Template.\n     * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n     */\n    function createFromTemplate(template) {\n\n      return (\n        /**\n         * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n         * @param {number} pixelRatio Pixel ratio.\n         * @param {import(\"../proj/Projection.js\").default} projection Projection.\n         * @return {string|undefined} Tile URL.\n         */\n        function(tileCoord, pixelRatio, projection) {\n          if (!tileCoord) {\n            return undefined;\n          } else {\n            var tileCoordZ = tileCoord[0];\n            var tileCoordX = tileCoord[1];\n            var tileCoordY = tileCoord[2];\n            var tileIndex =\n                tileCoordX +\n                tileCoordY * tierSizeInTiles[tileCoordZ][0];\n            var tileSize = tileGrid.getTileSize(tileCoordZ);\n            var tileWidth = Array.isArray(tileSize) ? tileSize[0] : tileSize;\n            var tileGroup = ((tileIndex + tileCountUpToTier[tileCoordZ]) / tileWidth) | 0;\n            var localContext = {\n              'z': tileCoordZ,\n              'x': tileCoordX,\n              'y': tileCoordY,\n              'tileIndex': tileIndex,\n              'TileGroup': 'TileGroup' + tileGroup\n            };\n            return template.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n              return localContext[p];\n            });\n          }\n        }\n      );\n    }\n\n    var tileUrlFunction = createFromTileUrlFunctions(urls.map(createFromTemplate));\n\n    var ZoomifyTileClass = CustomTile.bind(null, tileGrid);\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: ZoomifyTileClass,\n      tileGrid: tileGrid,\n      tileUrlFunction: tileUrlFunction,\n      transition: options.transition\n    });\n\n  }\n\n  if ( TileImage ) Zoomify.__proto__ = TileImage;\n  Zoomify.prototype = Object.create( TileImage && TileImage.prototype );\n  Zoomify.prototype.constructor = Zoomify;\n\n  return Zoomify;\n}(TileImage));\n\nexport default Zoomify;\n\n//# sourceMappingURL=Zoomify.js.map","/**\n * @module ol/webgl/Buffer\n */\nimport {STATIC_DRAW, STREAM_DRAW, DYNAMIC_DRAW} from '../webgl.js';\n\n/**\n * @enum {number}\n */\nvar BufferUsage = {\n  STATIC_DRAW: STATIC_DRAW,\n  STREAM_DRAW: STREAM_DRAW,\n  DYNAMIC_DRAW: DYNAMIC_DRAW\n};\n\n\nvar WebGLArrayBuffer = function WebGLArrayBuffer(opt_arr, opt_usage) {\n\n  /**\n   * @private\n   * @type {Array<number>}\n   */\n  this.arr_ = opt_arr !== undefined ? opt_arr : [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.usage_ = opt_usage !== undefined ? opt_usage : BufferUsage.STATIC_DRAW;\n\n};\n\n/**\n * @return {Array<number>} Array.\n */\nWebGLArrayBuffer.prototype.getArray = function getArray () {\n  return this.arr_;\n};\n\n/**\n * @return {number} Usage.\n */\nWebGLArrayBuffer.prototype.getUsage = function getUsage () {\n  return this.usage_;\n};\n\nexport default WebGLArrayBuffer;\n\n//# sourceMappingURL=Buffer.js.map","/**\n * @module ol/renderer/webgl/PointsLayer\n */\nimport LayerRenderer from '../Layer';\nimport WebGLArrayBuffer from '../../webgl/Buffer';\nimport {DYNAMIC_DRAW, ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER, FLOAT} from '../../webgl';\nimport WebGLHelper, {DefaultAttrib} from '../../webgl/Helper';\nimport GeometryType from '../../geom/GeometryType';\n\nvar VERTEX_SHADER = \"\\n  precision mediump float;\\n  attribute vec2 a_position;\\n  attribute vec2 a_texCoord;\\n  attribute float a_rotateWithView;\\n  attribute vec2 a_offsets;\\n  attribute float a_opacity;\\n  attribute vec4 a_color;\\n  \\n  uniform mat4 u_projectionMatrix;\\n  uniform mat4 u_offsetScaleMatrix;\\n  uniform mat4 u_offsetRotateMatrix;\\n  \\n  varying vec2 v_texCoord;\\n  varying float v_opacity;\\n  varying vec4 v_color;\\n  \\n  void main(void) {\\n    mat4 offsetMatrix = u_offsetScaleMatrix;\\n    if (a_rotateWithView == 1.0) {\\n      offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n    }\\n    vec4 offsets = offsetMatrix * vec4(a_offsets, 0.0, 0.0);\\n    gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\\n    v_texCoord = a_texCoord;\\n    v_opacity = a_opacity;\\n    v_color = a_color;\\n  }\";\n\nvar FRAGMENT_SHADER = \"\\n  precision mediump float;\\n  \\n  uniform sampler2D u_texture;\\n\\n  varying vec2 v_texCoord;\\n  varying float v_opacity;\\n  varying vec4 v_color;\\n  \\n  void main(void) {\\n    if (v_opacity == 0.0) {\\n      discard;\\n    }\\n    vec4 textureColor = texture2D(u_texture, v_texCoord);\\n    gl_FragColor = v_color * textureColor;\\n    gl_FragColor.a *= v_opacity;\\n    gl_FragColor.rgb *= gl_FragColor.a;\\n  }\";\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object.<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../../Feature\").default):number} [sizeCallback] Will be called on every feature in the\n * source to compute the size of the quad on screen (in pixels). This is only done on source change.\n * @property {function(import(\"../../Feature\").default, number):number} [coordCallback] Will be called on every feature in the\n * source to compute the coordinate of the quad center on screen (in pixels). This is only done on source change.\n * The second argument is 0 for `x` component and 1 for `y`.\n * @property {function(import(\"../../Feature\").default, number):number} [texCoordCallback] Will be called on every feature in the\n * source to compute the texture coordinates of each corner of the quad (without effect if no `texture` option defined). This is only done on source change.\n * The second argument is 0 for `u0` component, 1 for `v0`, 2 for `u1`, and 3 for `v1`.\n * @property {function(import(\"../../Feature\").default, number, number):number} [colorCallback] Will be called on every feature in the\n * source to compute the color of each corner of the quad. This is only done on source change.\n * The second argument is 0 for bottom left, 1 for bottom right, 2 for top right and 3 for top left\n * The third argument is 0 for red, 1 for green, 2 for blue and 3 for alpha\n * The return value should be between 0 and 1.\n * @property {function(import(\"../../Feature\").default):number} [opacityCallback] Will be called on every feature in the\n * source to compute the opacity of the quad on screen (from 0 to 1). This is only done on source change.\n * Note: this is multiplied with the color of the point which can also have an alpha value < 1.\n * @property {function(import(\"../../Feature\").default):boolean} [rotateWithViewCallback] Will be called on every feature in the\n * source to compute whether the quad on screen must stay upwards (`false`) or follow the view rotation (`true`).\n * This is only done on source change.\n * @property {HTMLCanvasElement|HTMLImageElement|ImageData} [texture] Texture to use on points. `texCoordCallback` and `sizeCallback`\n * must be defined for this to have any effect.\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object.<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * Please note that `u_texture` is reserved for the main texture slot.\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @classdesc\n * WebGL vector renderer optimized for points.\n * All features will be rendered as quads (two triangles forming a square). New data will be flushed to the GPU\n * every time the vector source changes.\n *\n * Use shaders to customize the final output. The following attributes are available:\n * * `vec2 a_position`\n * * `vec2 a_texCoord`\n * * `vec2 a_offsets`\n * * `float a_rotateWithView`\n * * `float a_opacity`\n * * `float a_color`\n *\n * The following uniform is used for the main texture: `u_texture`.\n *\n * Please note that the main shader output should have premultiplied alpha, otherwise the colors will be blended\n * additively.\n *\n * Points are rendered as quads with the following structure:\n *\n *   (u0, v1)      (u1, v1)\n *  [3]----------[2]\n *   |`           |\n *   |  `         |\n *   |    `       |\n *   |      `     |\n *   |        `   |\n *   |          ` |\n *  [0]----------[1]\n *   (u0, v0)      (u1, v0)\n *\n * This uses {@link module:ol/webgl/Helper~WebGLHelper} internally.\n *\n * Default shaders are shown hereafter:\n *\n * * Vertex shader:\n *   ```\n *   precision mediump float;\n *\n *   attribute vec2 a_position;\n *   attribute vec2 a_texCoord;\n *   attribute float a_rotateWithView;\n *   attribute vec2 a_offsets;\n *   attribute float a_opacity;\n *   attribute vec4 a_color;\n *\n *   uniform mat4 u_projectionMatrix;\n *   uniform mat4 u_offsetScaleMatrix;\n *   uniform mat4 u_offsetRotateMatrix;\n *\n *   varying vec2 v_texCoord;\n *   varying float v_opacity;\n *   varying vec4 v_color;\n *\n *   void main(void) {\n *     mat4 offsetMatrix = u_offsetScaleMatrix;\n *     if (a_rotateWithView == 1.0) {\n *       offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\n *     }\n *     vec4 offsets = offsetMatrix * vec4(a_offsets, 0.0, 0.0);\n *     gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\n *     v_texCoord = a_texCoord;\n *     v_opacity = a_opacity;\n *     v_color = a_color;\n *   }\n *   ```\n *\n * * Fragment shader:\n *   ```\n *   precision mediump float;\n *\n *   uniform sampler2D u_texture;\n *\n *   varying vec2 v_texCoord;\n *   varying float v_opacity;\n *   varying vec4 v_color;\n *\n *   void main(void) {\n *     if (v_opacity == 0.0) {\n *       discard;\n *     }\n *     vec4 textureColor = texture2D(u_texture, v_texCoord);\n *     gl_FragColor = v_color * textureColor;\n *     gl_FragColor.a *= v_opacity;\n *     gl_FragColor.rgb *= gl_FragColor.a;\n *   }\n *   ```\n *\n * @api\n */\nvar WebGLPointsLayerRenderer = /*@__PURE__*/(function (LayerRenderer) {\n  function WebGLPointsLayerRenderer(vectorLayer, opt_options) {\n    LayerRenderer.call(this, vectorLayer);\n\n    var options = opt_options || {};\n\n    var uniforms = options.uniforms || {};\n    uniforms.u_texture = options.texture || this.getDefaultTexture();\n    this.helper_ = new WebGLHelper({\n      postProcesses: options.postProcesses,\n      uniforms: uniforms\n    });\n\n    this.sourceRevision_ = -1;\n\n    this.verticesBuffer_ = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n    this.indicesBuffer_ = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n\n    this.program_ = this.helper_.getProgram(\n      options.fragmentShader || FRAGMENT_SHADER,\n      options.vertexShader || VERTEX_SHADER\n    );\n\n    this.helper_.useProgram(this.program_);\n\n    this.sizeCallback_ = options.sizeCallback || function() {\n      return 1;\n    };\n    this.coordCallback_ = options.coordCallback || function(feature, index) {\n      var geom = /** @type {import(\"../../geom/Point\").default} */ (feature.getGeometry());\n      return geom.getCoordinates()[index];\n    };\n    this.opacityCallback_ = options.opacityCallback || function() {\n      return 1;\n    };\n    this.texCoordCallback_ = options.texCoordCallback || function(feature, index) {\n      return index < 2 ? 0 : 1;\n    };\n    this.colorCallback_ = options.colorCallback || function(feature, index, component) {\n      return 1;\n    };\n    this.rotateWithViewCallback_ = options.rotateWithViewCallback || function() {\n      return false;\n    };\n  }\n\n  if ( LayerRenderer ) WebGLPointsLayerRenderer.__proto__ = LayerRenderer;\n  WebGLPointsLayerRenderer.prototype = Object.create( LayerRenderer && LayerRenderer.prototype );\n  WebGLPointsLayerRenderer.prototype.constructor = WebGLPointsLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  WebGLPointsLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    LayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLPointsLayerRenderer.prototype.renderFrame = function renderFrame (frameState, layerState) {\n    this.helper_.drawElements(0, this.indicesBuffer_.getArray().length);\n    this.helper_.finalizeDraw(frameState);\n    var canvas = this.helper_.getCanvas();\n\n    var opacity = layerState.opacity;\n    if (opacity !== parseFloat(canvas.style.opacity)) {\n      canvas.style.opacity = opacity;\n    }\n\n    return canvas;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLPointsLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState) {\n    var this$1 = this;\n\n    var vectorLayer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var vectorSource = /** @type {import(\"../../source/Vector.js\").default} */ (vectorLayer.getSource());\n\n    var stride = 12;\n\n    this.helper_.prepareDraw(frameState);\n\n    if (this.sourceRevision_ < vectorSource.getRevision()) {\n      this.sourceRevision_ = vectorSource.getRevision();\n\n      var viewState = frameState.viewState;\n      var projection = viewState.projection;\n      var resolution = viewState.resolution;\n\n      // loop on features to fill the buffer\n      vectorSource.loadFeatures([-Infinity, -Infinity, Infinity, Infinity], resolution, projection);\n      vectorSource.forEachFeature(function (feature) {\n        if (!feature.getGeometry() || feature.getGeometry().getType() !== GeometryType.POINT) {\n          return;\n        }\n        var x = this$1.coordCallback_(feature, 0);\n        var y = this$1.coordCallback_(feature, 1);\n        var u0 = this$1.texCoordCallback_(feature, 0);\n        var v0 = this$1.texCoordCallback_(feature, 1);\n        var u1 = this$1.texCoordCallback_(feature, 2);\n        var v1 = this$1.texCoordCallback_(feature, 3);\n        var size = this$1.sizeCallback_(feature);\n        var opacity = this$1.opacityCallback_(feature);\n        var rotateWithView = this$1.rotateWithViewCallback_(feature) ? 1 : 0;\n        var v0_r = this$1.colorCallback_(feature, 0, 0);\n        var v0_g = this$1.colorCallback_(feature, 0, 1);\n        var v0_b = this$1.colorCallback_(feature, 0, 2);\n        var v0_a = this$1.colorCallback_(feature, 0, 3);\n        var v1_r = this$1.colorCallback_(feature, 1, 0);\n        var v1_g = this$1.colorCallback_(feature, 1, 1);\n        var v1_b = this$1.colorCallback_(feature, 1, 2);\n        var v1_a = this$1.colorCallback_(feature, 1, 3);\n        var v2_r = this$1.colorCallback_(feature, 2, 0);\n        var v2_g = this$1.colorCallback_(feature, 2, 1);\n        var v2_b = this$1.colorCallback_(feature, 2, 2);\n        var v2_a = this$1.colorCallback_(feature, 2, 3);\n        var v3_r = this$1.colorCallback_(feature, 3, 0);\n        var v3_g = this$1.colorCallback_(feature, 3, 1);\n        var v3_b = this$1.colorCallback_(feature, 3, 2);\n        var v3_a = this$1.colorCallback_(feature, 3, 3);\n        var baseIndex = this$1.verticesBuffer_.getArray().length / stride;\n\n        this$1.verticesBuffer_.getArray().push(\n          x, y, -size / 2, -size / 2, u0, v0, opacity, rotateWithView, v0_r, v0_g, v0_b, v0_a,\n          x, y, +size / 2, -size / 2, u1, v0, opacity, rotateWithView, v1_r, v1_g, v1_b, v1_a,\n          x, y, +size / 2, +size / 2, u1, v1, opacity, rotateWithView, v2_r, v2_g, v2_b, v2_a,\n          x, y, -size / 2, +size / 2, u0, v1, opacity, rotateWithView, v3_r, v3_g, v3_b, v3_a\n        );\n        this$1.indicesBuffer_.getArray().push(\n          baseIndex, baseIndex + 1, baseIndex + 3,\n          baseIndex + 1, baseIndex + 2, baseIndex + 3\n        );\n      });\n    }\n\n    // write new data\n    this.helper_.bindBuffer(ARRAY_BUFFER, this.verticesBuffer_);\n    this.helper_.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer_);\n\n    var bytesPerFloat = Float32Array.BYTES_PER_ELEMENT;\n    this.helper_.enableAttributeArray(DefaultAttrib.POSITION, 2, FLOAT, bytesPerFloat * stride, 0);\n    this.helper_.enableAttributeArray(DefaultAttrib.OFFSETS, 2, FLOAT, bytesPerFloat * stride, bytesPerFloat * 2);\n    this.helper_.enableAttributeArray(DefaultAttrib.TEX_COORD, 2, FLOAT, bytesPerFloat * stride, bytesPerFloat * 4);\n    this.helper_.enableAttributeArray(DefaultAttrib.OPACITY, 1, FLOAT, bytesPerFloat * stride, bytesPerFloat * 6);\n    this.helper_.enableAttributeArray(DefaultAttrib.ROTATE_WITH_VIEW, 1, FLOAT, bytesPerFloat * stride, bytesPerFloat * 7);\n    this.helper_.enableAttributeArray(DefaultAttrib.COLOR, 4, FLOAT, bytesPerFloat * stride, bytesPerFloat * 8);\n\n    return true;\n  };\n\n  /**\n   * Will return the last shader compilation errors. If no error happened, will return null;\n   * @return {string|null} Errors, or null if last compilation was successful\n   * @api\n   */\n  WebGLPointsLayerRenderer.prototype.getShaderCompileErrors = function getShaderCompileErrors () {\n    return this.helper_.getShaderCompileErrors();\n  };\n\n  /**\n   * Returns a texture of 1x1 pixel, white\n   * @private\n   * @return {ImageData} Image data.\n   */\n  WebGLPointsLayerRenderer.prototype.getDefaultTexture = function getDefaultTexture () {\n    var canvas = document.createElement('canvas');\n    var image = canvas.getContext('2d').createImageData(1, 1);\n    image.data[0] = image.data[1] = image.data[2] = image.data[3] = 255;\n    return image;\n  };\n\n  return WebGLPointsLayerRenderer;\n}(LayerRenderer));\n\nexport default WebGLPointsLayerRenderer;\n\n//# sourceMappingURL=PointsLayer.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nvar Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12\n};\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\n\n\nexport default Instruction;\n\n//# sourceMappingURL=Instruction.js.map","/**\n * @module ol/render/canvas/Builder\n */\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {buffer, clone, coordinateRelationship} from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray} from '../../geom/flat/inflate.js';\nimport VectorContext from '../VectorContext.js';\nimport {defaultFillStyle, defaultStrokeStyle,\n  defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset,\n  defaultLineDash, defaultLineCap} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\n\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, import(\"../canvas.js\").TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n\nvar CanvasBuilder = /*@__PURE__*/(function (VectorContext) {\n  function CanvasBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n    VectorContext.call(this);\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n\n  }\n\n  if ( VectorContext ) CanvasBuilder.__proto__ = VectorContext;\n  CanvasBuilder.prototype = Object.create( VectorContext && VectorContext.prototype );\n  CanvasBuilder.prototype.constructor = CanvasBuilder;\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  CanvasBuilder.prototype.applyPixelRatio = function applyPixelRatio (dashArray) {\n    var pixelRatio = this.pixelRatio;\n    return pixelRatio == 1 ? dashArray : dashArray.map(function(dash) {\n      return dash * pixelRatio;\n    });\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  CanvasBuilder.prototype.appendFlatCoordinates = function appendFlatCoordinates (flatCoordinates, offset, end, stride, closed, skipFirst) {\n\n    var myEnd = this.coordinates.length;\n    var extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    var lastXCoord = flatCoordinates[offset];\n    var lastYCoord = flatCoordinates[offset + 1];\n    var nextCoord = this.tmpCoordinate_;\n    var skipped = true;\n\n    var i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          this.coordinates[myEnd++] = lastXCoord;\n          this.coordinates[myEnd++] = lastYCoord;\n        }\n        this.coordinates[myEnd++] = nextCoord[0];\n        this.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else if (nextRel === Relationship.INTERSECTING) {\n        this.coordinates[myEnd++] = nextCoord[0];\n        this.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      this.coordinates[myEnd++] = lastXCoord;\n      this.coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  CanvasBuilder.prototype.drawCustomCoordinates_ = function drawCustomCoordinates_ (flatCoordinates, offset, ends, stride, builderEnds) {\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var builderEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  };\n\n  /**\n   * @inheritDoc.\n   */\n  CanvasBuilder.prototype.drawCustom = function drawCustom (geometry, feature, renderer) {\n    this.beginGeometry(geometry, feature);\n    var type = geometry.getType();\n    var stride = geometry.getStride();\n    var builderBegin = this.coordinates.length;\n    var flatCoordinates, builderEnd, builderEnds, builderEndss;\n    var offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry);\n      flatCoordinates = geometry.getOrientedFlatCoordinates();\n      builderEndss = [];\n      var endss = geometry.getEndss();\n      offset = 0;\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var myEnds = [];\n        offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n        builderEndss.push(myEnds);\n      }\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        builderBegin, builderEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n    } else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n      builderEnds = [];\n      flatCoordinates = (type == GeometryType.POLYGON) ?\n        /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates() :\n        geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(flatCoordinates, 0,\n        /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(),\n        stride, builderEnds);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        builderBegin, builderEnds, geometry, renderer, inflateCoordinatesArray]);\n    } else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatCoordinates(\n        flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        builderBegin, builderEnd, geometry, renderer, inflateCoordinates]);\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      builderEnd = this.coordinates.length;\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        builderBegin, builderEnd, geometry, renderer]);\n    }\n    this.endGeometry(geometry, feature);\n  };\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  CanvasBuilder.prototype.beginGeometry = function beginGeometry (geometry, feature) {\n    this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  };\n\n  /**\n   * @return {SerializableInstructions} the serializable instructions.\n   */\n  CanvasBuilder.prototype.finish = function finish () {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates\n    };\n  };\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  CanvasBuilder.prototype.reverseHitDetectionInstructions = function reverseHitDetectionInstructions () {\n    var hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    var i;\n    var n = hitDetectionInstructions.length;\n    var instruction;\n    var type;\n    var begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {CanvasInstruction} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasBuilder.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    var state = this.state;\n    if (fillStyle) {\n      var fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(fillStyleColor ?\n        fillStyleColor : defaultFillStyle);\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      var strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(strokeStyleColor ?\n        strokeStyleColor : defaultStrokeStyle);\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap = strokeStyleLineCap !== undefined ?\n        strokeStyleLineCap : defaultLineCap;\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash ?\n        strokeStyleLineDash.slice() : defaultLineDash;\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset ?\n        strokeStyleLineDashOffset : defaultLineDashOffset;\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin = strokeStyleLineJoin !== undefined ?\n        strokeStyleLineJoin : defaultLineJoin;\n      var strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth = strokeStyleWidth !== undefined ?\n        strokeStyleWidth : defaultLineWidth;\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit = strokeStyleMiterLimit !== undefined ?\n        strokeStyleMiterLimit : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @return {Array<*>} Fill instruction.\n   */\n  CanvasBuilder.prototype.createFill = function createFill (state, geometry) {\n    var fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  CanvasBuilder.prototype.applyStroke = function applyStroke (state) {\n    this.instructions.push(this.createStroke(state));\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  CanvasBuilder.prototype.createStroke = function createStroke (state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n      state.lineJoin, state.miterLimit,\n      this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n    ];\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState, (import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default)):Array<*>} createFill Create fill.\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   */\n  CanvasBuilder.prototype.updateFillStyle = function updateFillStyle (state, createFill, geometry) {\n    var fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state, geometry));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  CanvasBuilder.prototype.updateStrokeStyle = function updateStrokeStyle (state, applyStroke) {\n    var strokeStyle = state.strokeStyle;\n    var lineCap = state.lineCap;\n    var lineDash = state.lineDash;\n    var lineDashOffset = state.lineDashOffset;\n    var lineJoin = state.lineJoin;\n    var lineWidth = state.lineWidth;\n    var miterLimit = state.miterLimit;\n    if (state.currentStrokeStyle != strokeStyle ||\n        state.currentLineCap != lineCap ||\n        (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n        state.currentLineDashOffset != lineDashOffset ||\n        state.currentLineJoin != lineJoin ||\n        state.currentLineWidth != lineWidth ||\n        state.currentMiterLimit != miterLimit) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  };\n\n  /**\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  CanvasBuilder.prototype.endGeometry = function endGeometry (geometry, feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  };\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  CanvasBuilder.prototype.getBufferedMaxExtent = function getBufferedMaxExtent () {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        var width = this.resolution * (this.maxLineWidth + 1) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  };\n\n  return CanvasBuilder;\n}(VectorContext));\n\n\nexport default CanvasBuilder;\n\n//# sourceMappingURL=Builder.js.map","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasInstruction from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\n\nvar CanvasImageBuilder = /*@__PURE__*/(function (CanvasBuilder) {\n  function CanvasImageBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n    CanvasBuilder.call(this, tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n  }\n\n  if ( CanvasBuilder ) CanvasImageBuilder.__proto__ = CanvasBuilder;\n  CanvasImageBuilder.prototype = Object.create( CanvasBuilder && CanvasBuilder.prototype );\n  CanvasImageBuilder.prototype.constructor = CanvasImageBuilder;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} My end.\n   */\n  CanvasImageBuilder.prototype.drawCoordinates_ = function drawCoordinates_ (flatCoordinates, offset, end, stride) {\n    return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageBuilder.prototype.drawPoint = function drawPoint (pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    var flatCoordinates = pointGeometry.getFlatCoordinates();\n    var stride = pointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.width_\n    ]);\n    this.endGeometry(pointGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageBuilder.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    var stride = multiPointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.drawCoordinates_(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.width_\n    ]);\n    this.endGeometry(multiPointGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageBuilder.prototype.finish = function finish () {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return CanvasBuilder.prototype.finish.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageBuilder.prototype.setImageStyle = function setImageStyle (imageStyle, declutterGroup) {\n    var anchor = imageStyle.getAnchor();\n    var size = imageStyle.getSize();\n    var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n    var image = imageStyle.getImage(1);\n    var origin = imageStyle.getOrigin();\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScale();\n    this.width_ = size[0];\n  };\n\n  return CanvasImageBuilder;\n}(CanvasBuilder));\n\n\nexport default CanvasImageBuilder;\n\n//# sourceMappingURL=ImageBuilder.js.map","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasInstruction, {strokeInstruction, beginPathInstruction} from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\n\nvar CanvasLineStringBuilder = /*@__PURE__*/(function (CanvasBuilder) {\n  function CanvasLineStringBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n    CanvasBuilder.call(this, tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  if ( CanvasBuilder ) CanvasLineStringBuilder.__proto__ = CanvasBuilder;\n  CanvasLineStringBuilder.prototype = Object.create( CanvasBuilder && CanvasBuilder.prototype );\n  CanvasLineStringBuilder.prototype.constructor = CanvasLineStringBuilder;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  CanvasLineStringBuilder.prototype.drawFlatCoordinates_ = function drawFlatCoordinates_ (flatCoordinates, offset, end, stride) {\n    var myBegin = this.coordinates.length;\n    var myEnd = this.appendFlatCoordinates(\n      flatCoordinates, offset, end, stride, false, false);\n    var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringBuilder.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    var stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(lineStringGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringBuilder.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    var ends = multiLineStringGeometry.getEnds();\n    var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    var stride = multiLineStringGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(multiLineStringGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringBuilder.prototype.finish = function finish () {\n    var state = this.state;\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return CanvasBuilder.prototype.finish.call(this);\n  };\n\n  /**\n   * @inheritDoc.\n   */\n  CanvasLineStringBuilder.prototype.applyStroke = function applyStroke (state) {\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    CanvasBuilder.prototype.applyStroke.call(this, state);\n    this.instructions.push(beginPathInstruction);\n  };\n\n  return CanvasLineStringBuilder;\n}(CanvasBuilder));\n\n\nexport default CanvasLineStringBuilder;\n\n//# sourceMappingURL=LineStringBuilder.js.map","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport {asString} from '../../color.js';\nimport {snap} from '../../geom/flat/simplify.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport CanvasInstruction, {\n  fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction\n} from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\n\n\nvar CanvasPolygonBuilder = /*@__PURE__*/(function (CanvasBuilder) {\n  function CanvasPolygonBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n    CanvasBuilder.call(this, tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  if ( CanvasBuilder ) CanvasPolygonBuilder.__proto__ = CanvasBuilder;\n  CanvasPolygonBuilder.prototype = Object.create( CanvasBuilder && CanvasBuilder.prototype );\n  CanvasPolygonBuilder.prototype.constructor = CanvasPolygonBuilder;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasPolygonBuilder.prototype.drawFlatCoordinatess_ = function drawFlatCoordinatess_ (flatCoordinates, offset, ends, stride) {\n    var state = this.state;\n    var fill = state.fillStyle !== undefined;\n    var stroke = state.strokeStyle != undefined;\n    var numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (var i = 0; i < numEnds; ++i) {\n      var end = ends[i];\n      var myBegin = this.coordinates.length;\n      var myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n      var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonBuilder.prototype.drawCircle = function drawCircle (circleGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(circleGeometry);\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var flatCoordinates = circleGeometry.getFlatCoordinates();\n    var stride = circleGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    this.appendFlatCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n    var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(fillInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(circleGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonBuilder.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(polygonGeometry);\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var ends = polygonGeometry.getEnds();\n    var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    var stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n    this.endGeometry(polygonGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonBuilder.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(multiPolygonGeometry);\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var endss = multiPolygonGeometry.getEndss();\n    var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    var stride = multiPolygonGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n    }\n    this.endGeometry(multiPolygonGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonBuilder.prototype.finish = function finish () {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    var tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      var coordinates = this.coordinates;\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return CanvasBuilder.prototype.finish.call(this);\n  };\n\n  /**\n   * @private\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   */\n  CanvasPolygonBuilder.prototype.setFillStrokeStyles_ = function setFillStrokeStyles_ (geometry) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill, geometry);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  };\n\n  return CanvasPolygonBuilder;\n}(CanvasBuilder));\n\n\nexport default CanvasPolygonBuilder;\n\n//# sourceMappingURL=PolygonBuilder.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  var chunkStart = offset;\n  var chunkEnd = offset;\n  var chunkM = 0;\n  var m = 0;\n  var start = offset;\n  var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n\n//# sourceMappingURL=straightchunk.js.map","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport {getUid} from '../../util.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {labelCache, defaultTextAlign, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {};\nTEXT_ALIGN['left'] = 0;\nTEXT_ALIGN['end'] = 0;\nTEXT_ALIGN['center'] = 0.5;\nTEXT_ALIGN['right'] = 1;\nTEXT_ALIGN['start'] = 1;\nTEXT_ALIGN['top'] = 0;\nTEXT_ALIGN['middle'] = 0.5;\nTEXT_ALIGN['hanging'] = 0.2;\nTEXT_ALIGN['alphabetic'] = 0.8;\nTEXT_ALIGN['ideographic'] = 0.8;\nTEXT_ALIGN['bottom'] = 1;\n\n\nvar CanvasTextBuilder = /*@__PURE__*/(function (CanvasBuilder) {\n  function CanvasTextBuilder(tolerance, maxExtent, resolution, pixelRatio) {\n    CanvasBuilder.call(this, tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterGroup}\n     */\n    this.declutterGroup_;\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    labelCache.prune();\n  }\n\n  if ( CanvasBuilder ) CanvasTextBuilder.__proto__ = CanvasBuilder;\n  CanvasTextBuilder.prototype = Object.create( CanvasBuilder && CanvasBuilder.prototype );\n  CanvasTextBuilder.prototype.constructor = CanvasTextBuilder;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTextBuilder.prototype.finish = function finish () {\n    var instructions = CanvasBuilder.prototype.finish.call(this);\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTextBuilder.prototype.drawText = function drawText (geometry, feature) {\n    var fillState = this.textFillState_;\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    var begin = this.coordinates.length;\n\n    var geometryType = geometry.getType();\n    var flatCoordinates = null;\n    var end = 2;\n    var stride = 2;\n    var i, ii;\n\n    if (textState.placement === TextPlacement.LINE) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      var ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      stride = geometry.getStride();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = geometry.getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = geometry.getEnds().slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        var endss = geometry.getEndss();\n        ends = [];\n        for (i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      var textAlign = textState.textAlign;\n      var flatOffset = 0;\n      var flatEnd;\n      for (var o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (i = flatOffset; i < flatEnd; i += stride) {\n          this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        end = this.coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end, this.declutterGroup_);\n        begin = end;\n      }\n      this.endGeometry(geometry, feature);\n\n    } else {\n\n      var geometryWidths = null;\n      if (!textState.overflow) {\n        geometryWidths = [];\n      }\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = geometry.getFlatCoordinates();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          var interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          end = flatCoordinates.length;\n          if (end == 0) {\n            return;\n          }\n          break;\n        default:\n      }\n      end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill, geometry);\n          this.hitDetectionInstructions.push(this.createFill(this.state, geometry));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      var pixelRatio = this.pixelRatio;\n      this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n        null, NaN, NaN, this.declutterGroup_, NaN, 1, 0, 0,\n        this.textRotateWithView_, this.textRotation_, 1, NaN,\n        textState.padding == defaultPadding ?\n          defaultPadding : textState.padding.map(function(p) {\n            return p * pixelRatio;\n          }),\n        !!textState.backgroundFill, !!textState.backgroundStroke,\n        this.text_, this.textKey_, this.strokeKey_, this.fillKey_,\n        this.textOffsetX_, this.textOffsetY_, geometryWidths\n      ]);\n      this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n        null, NaN, NaN, this.declutterGroup_, NaN, 1, 0, 0,\n        this.textRotateWithView_, this.textRotation_, 1 / this.pixelRatio, NaN,\n        textState.padding,\n        !!textState.backgroundFill, !!textState.backgroundStroke,\n        this.text_, this.textKey_, this.strokeKey_, this.fillKey_,\n        this.textOffsetX_, this.textOffsetY_, geometryWidths\n      ]);\n\n      this.endGeometry(geometry, feature);\n    }\n  };\n\n  /**\n   * @private\n   */\n  CanvasTextBuilder.prototype.saveTextStates_ = function saveTextStates_ () {\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    var fillState = this.textFillState_;\n\n    var strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash\n        };\n      }\n    }\n    var textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale\n      };\n    }\n    var fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle\n        };\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   */\n  CanvasTextBuilder.prototype.drawChars_ = function drawChars_ (begin, end, declutterGroup) {\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n\n    var strokeKey = this.strokeKey_;\n    var textKey = this.textKey_;\n    var fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n\n    var pixelRatio = this.pixelRatio;\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n\n    var offsetY = this.textOffsetY_ * pixelRatio;\n    var text = this.text_;\n    var textScale = textState.scale;\n    var strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n\n    this.instructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      pixelRatio,\n      offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      1,\n      offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n    ]);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTextBuilder.prototype.setTextStyle = function setTextStyle (textStyle, declutterGroup) {\n    var textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      this.declutterGroup_ = /** @type {import(\"../canvas.js\").DeclutterGroup} */ (declutterGroup);\n\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = this.textFillState_ = null;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = this.textFillState_ = /** @type {import(\"../canvas.js\").FillState} */ ({});\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle);\n      }\n\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = this.textStrokeState_ = null;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = this.textStrokeState_ = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n        }\n        var lineDash = textStrokeStyle.getLineDash();\n        var lineDashOffset = textStrokeStyle.getLineDashOffset();\n        var lineWidth = textStrokeStyle.getWidth();\n        var miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n            lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n            lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n            miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle);\n      }\n\n      textState = this.textState_;\n      var font = textStyle.getFont() || defaultFont;\n      checkFont(font);\n      var textScale = textStyle.getScale();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? 1 : textScale;\n\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState ?\n        (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n        strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n        strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n        '';\n      this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n      this.fillKey_ = fillState ?\n        (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n        '';\n    }\n  };\n\n  return CanvasTextBuilder;\n}(CanvasBuilder));\n\n\nexport default CanvasTextBuilder;\n\n//# sourceMappingURL=TextBuilder.js.map","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport {createEmpty} from '../../extent.js';\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nvar BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder\n};\n\n\nvar BuilderGroup = function BuilderGroup(tolerance, maxExtent, resolution, pixelRatio, declutter) {\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.declutter_ = declutter;\n\n  /**\n   * @type {import(\"../canvas.js\").DeclutterGroup}\n   * @private\n   */\n  this.declutterGroup_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.tolerance_ = tolerance;\n\n  /**\n   * @private\n   * @type {import(\"../../extent.js\").Extent}\n   */\n  this.maxExtent_ = maxExtent;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelRatio_ = pixelRatio;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.resolution_ = resolution;\n\n  /**\n   * @private\n   * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n   */\n  this.buildersByZIndex_ = {};\n};\n\n/**\n * @param {boolean} group Group with previous builder.\n * @return {Array<*>} The resulting instruction group.\n */\nBuilderGroup.prototype.addDeclutter = function addDeclutter (group) {\n  var declutter = null;\n  if (this.declutter_) {\n    if (group) {\n      declutter = this.declutterGroup_;\n      /** @type {number} */ (declutter[4])++;\n    } else {\n      declutter = this.declutterGroup_ = createEmpty();\n      declutter.push(1);\n    }\n  }\n  return declutter;\n};\n\n/**\n * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n */\nBuilderGroup.prototype.finish = function finish () {\n  var builderInstructions = {};\n  for (var zKey in this.buildersByZIndex_) {\n    builderInstructions[zKey] = builderInstructions[zKey] || {};\n    var builders = this.buildersByZIndex_[zKey];\n    for (var builderKey in builders) {\n      var builderInstruction = builders[builderKey].finish();\n      builderInstructions[zKey][builderKey] = builderInstruction;\n    }\n  }\n  return builderInstructions;\n};\n\n/**\n * @param {number|undefined} zIndex Z index.\n * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n * @return {import(\"../VectorContext.js\").default} Replay.\n */\nBuilderGroup.prototype.getBuilder = function getBuilder (zIndex, builderType) {\n  var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n  var replays = this.buildersByZIndex_[zIndexKey];\n  if (replays === undefined) {\n    replays = {};\n    this.buildersByZIndex_[zIndexKey] = replays;\n  }\n  var replay = replays[builderType];\n  if (replay === undefined) {\n    var Constructor = BATCH_CONSTRUCTORS[builderType];\n    replay = new Constructor(this.tolerance_, this.maxExtent_,\n      this.resolution_, this.pixelRatio_);\n    replays[builderType] = replay;\n  }\n  return replay;\n};\n\nexport default BuilderGroup;\n\n//# sourceMappingURL=BuilderGroup.js.map","/**\n * @module ol/render/canvas/BuilderType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text'\n};\n\n//# sourceMappingURL=BuilderType.js.map","/**\n * @module ol/geom/flat/length\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  var length = 0;\n  for (var i = offset + stride; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n\n//# sourceMappingURL=length.js.map","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @return {Array<Array<*>>} The result array of null if `maxAngle` was\n * exceeded. Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates, offset, end, stride, text, startM, maxAngle, scale, measureAndCacheTextWidth, font, cache) {\n  var result = [];\n\n  // Keep text upright\n  var reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n\n  var numChars = text.length;\n\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  offset += stride;\n  var x2 = flatCoordinates[offset];\n  var y2 = flatCoordinates[offset + 1];\n  var segmentM = 0;\n  var segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n\n  var chunk = '';\n  var chunkLength = 0;\n  var data, index, previousAngle;\n  for (var i = 0; i < numChars; ++i) {\n    index = reverse ? numChars - i - 1 : i;\n    var char = text.charAt(index);\n    chunk = reverse ? char + chunk : chunk + char;\n    var charLength = scale * measureAndCacheTextWidth(font, chunk, cache) - chunkLength;\n    chunkLength += charLength;\n    var charM = startM + charLength / 2;\n    while (offset < end - stride && segmentM + segmentLength < charM) {\n      x1 = x2;\n      y1 = y2;\n      offset += stride;\n      x2 = flatCoordinates[offset];\n      y2 = flatCoordinates[offset + 1];\n      segmentM += segmentLength;\n      segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    }\n    var segmentPos = charM - segmentM;\n    var angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -Math.PI : Math.PI;\n    }\n    if (previousAngle !== undefined) {\n      var delta = angle - previousAngle;\n      delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    var interpolate = segmentPos / segmentLength;\n    var x = lerp(x1, x2, interpolate);\n    var y = lerp(y1, y2, interpolate);\n    if (previousAngle == angle) {\n      if (reverse) {\n        data[0] = x;\n        data[1] = y;\n        data[2] = charLength / 2;\n      }\n      data[4] = chunk;\n    } else {\n      chunk = char;\n      chunkLength = charLength;\n      data = [x, y, charLength / 2, angle, chunk];\n      if (reverse) {\n        result.unshift(data);\n      } else {\n        result.push(data);\n      }\n      previousAngle = angle;\n    }\n    startM += charLength;\n  }\n  return result;\n}\n\n//# sourceMappingURL=textpath.js.map","/**\n * @module ol/render/canvas/Executor\n */\nimport {getUid} from '../../util.js';\nimport {equals} from '../../array.js';\nimport {createEmpty, createOrUpdate,\n  createOrUpdateEmpty, extend, intersects} from '../../extent.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport {drawImage, resetTransform, defaultPadding, defaultTextBaseline} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  apply as applyTransform,\n  setFromArray as transformSetFromArray\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {labelCache, defaultTextAlign, measureTextHeight, measureAndCacheTextWidth, measureTextWidths} from '../canvas.js';\nimport Disposable from '../../Disposable.js';\n\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, import(\"../canvas.js\").TextState>} textStates The text states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").FillState>} fillStates The fill states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").StrokeState>} strokeStates The stroke states (decluttering).\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nvar tmpExtent = createEmpty();\n\n/**\n * @type {!import(\"../../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nvar p4 = [];\n\n\nvar Executor = /*@__PURE__*/(function (Disposable) {\n  function Executor(resolution, pixelRatio, overlaps, declutterTree, instructions) {\n    Disposable.call(this);\n    /**\n     * @type {?}\n     */\n    this.declutterTree = declutterTree;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n  }\n\n  if ( Disposable ) Executor.__proto__ = Disposable;\n  Executor.prototype = Object.create( Disposable && Disposable.prototype );\n  Executor.prototype.constructor = Executor;\n\n  /**\n   * @inheritDoc\n   */\n  Executor.prototype.disposeInternal = function disposeInternal () {\n    labelCache.release(this);\n    Disposable.prototype.disposeInternal.call(this);\n  };\n\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {HTMLCanvasElement} Image.\n   */\n  Executor.prototype.getTextImage = function getTextImage (text, textKey, fillKey, strokeKey) {\n    var label;\n    var key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n\n    if (!labelCache.containsKey(key)) {\n      var strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n      var fillState = fillKey ? this.fillStates[fillKey] : null;\n      var textState = this.textStates[textKey];\n      var pixelRatio = this.pixelRatio;\n      var scale = textState.scale * pixelRatio;\n      var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n      var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n      var lines = text.split('\\n');\n      var numLines = lines.length;\n      var widths = [];\n      var width = measureTextWidths(textState.font, lines, widths);\n      var lineHeight = measureTextHeight(textState.font);\n      var height = lineHeight * numLines;\n      var renderWidth = (width + strokeWidth);\n      var context = createCanvasContext2D(\n        Math.ceil(renderWidth * scale),\n        Math.ceil((height + strokeWidth) * scale));\n      label = context.canvas;\n      labelCache.set(key, label);\n      if (scale != 1) {\n        context.scale(scale, scale);\n      }\n      context.font = textState.font;\n      if (strokeKey) {\n        context.strokeStyle = strokeState.strokeStyle;\n        context.lineWidth = strokeWidth;\n        context.lineCap = /** @type {CanvasLineCap} */ (strokeState.lineCap);\n        context.lineJoin = /** @type {CanvasLineJoin} */ (strokeState.lineJoin);\n        context.miterLimit = strokeState.miterLimit;\n        if (context.setLineDash && strokeState.lineDash.length) {\n          context.setLineDash(strokeState.lineDash);\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (fillKey) {\n        context.fillStyle = fillState.fillStyle;\n      }\n      context.textBaseline = 'middle';\n      context.textAlign = 'center';\n      var leftRight = (0.5 - align);\n      var x = align * label.width / scale + leftRight * strokeWidth;\n      var i;\n      if (strokeKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n      if (fillKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n    }\n    return labelCache.get(key, this);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  Executor.prototype.replayTextBackground_ = function replayTextBackground_ (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(context, /** @type {Array<*>} */ (strokeInstruction));\n      context.stroke();\n    }\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   * @param {number} height Height.\n   * @param {number} opacity Opacity.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {number} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {number} width Width.\n   * @param {Array<number>} padding Padding.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  Executor.prototype.replayImage_ = function replayImage_ (\n    context,\n    x,\n    y,\n    image,\n    anchorX,\n    anchorY,\n    declutterGroup,\n    height,\n    opacity,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    width,\n    padding,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    var fillStroke = fillInstruction || strokeInstruction;\n    anchorX *= scale;\n    anchorY *= scale;\n    x -= anchorX;\n    y -= anchorY;\n\n    var w = (width + originX > image.width) ? image.width - originX : width;\n    var h = (height + originY > image.height) ? image.height - originY : height;\n    var boxW = padding[3] + w * scale + padding[1];\n    var boxH = padding[0] + h * scale + padding[2];\n    var boxX = x - padding[3];\n    var boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = p4[0] = boxX;\n      p1[1] = p2[1] = boxY;\n      p2[0] = p3[0] = boxX + boxW;\n      p3[1] = p4[1] = boxY + boxH;\n    }\n\n    var transform = null;\n    if (rotation !== 0) {\n      var centerX = x + anchorX;\n      var centerY = y + anchorY;\n      transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n\n      applyTransform(tmpTransform, p1);\n      applyTransform(tmpTransform, p2);\n      applyTransform(tmpTransform, p3);\n      applyTransform(tmpTransform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n    }\n    var canvas = context.canvas;\n    var strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n    var intersects =\n        tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n        tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n\n    if (declutterGroup) {\n      if (!intersects && declutterGroup[4] == 1) {\n        return;\n      }\n      extend(declutterGroup, tmpExtent);\n      var declutterArgs = intersects ?\n        [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\n        null;\n      if (declutterArgs && fillStroke) {\n        declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n      }\n      declutterGroup.push(declutterArgs);\n    } else if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(context, p1, p2, p3, p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction));\n      }\n      drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n    }\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  Executor.prototype.fill_ = function fill_ (context) {\n    if (this.alignFill_) {\n      var origin = applyTransform(this.renderedTransform_, [0, 0]);\n      var repeatSize = 512 * this.pixelRatio;\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.setTransform.apply(context, resetTransform);\n    }\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  Executor.prototype.setStrokeStyle_ = function setStrokeStyle_ (context, instruction) {\n    context.strokeStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (context.setLineDash) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  };\n\n  /**\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  Executor.prototype.renderDeclutter_ = function renderDeclutter_ (declutterGroup, feature) {\n    if (declutterGroup && declutterGroup.length > 5) {\n      var groupCount = declutterGroup[4];\n      if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n        /** @type {import(\"../../structs/RBush.js\").Entry} */\n        var box = {\n          minX: /** @type {number} */ (declutterGroup[0]),\n          minY: /** @type {number} */ (declutterGroup[1]),\n          maxX: /** @type {number} */ (declutterGroup[2]),\n          maxY: /** @type {number} */ (declutterGroup[3]),\n          value: feature\n        };\n        if (!this.declutterTree.collides(box)) {\n          this.declutterTree.insert(box);\n          for (var j = 5, jj = declutterGroup.length; j < jj; ++j) {\n            var declutterData = /** @type {Array} */ (declutterGroup[j]);\n            if (declutterData) {\n              if (declutterData.length > 11) {\n                this.replayTextBackground_(declutterData[0],\n                  declutterData[13], declutterData[14], declutterData[15], declutterData[16],\n                  declutterData[11], declutterData[12]);\n              }\n              drawImage.apply(undefined, declutterData);\n            }\n          }\n        }\n        declutterGroup.length = 5;\n        createOrUpdateEmpty(declutterGroup);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {string} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: HTMLCanvasElement, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  Executor.prototype.drawTextImageWithPointPlacement_ = function drawTextImageWithPointPlacement_ (text, textKey, strokeKey, fillKey) {\n    var textState = this.textStates[textKey];\n\n    var label = this.getTextImage(text, textKey, fillKey, strokeKey);\n\n    var strokeState = this.strokeStates[strokeKey];\n    var pixelRatio = this.pixelRatio;\n    var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n    var baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    var anchorX = align * label.width / pixelRatio + 2 * (0.5 - align) * strokeWidth;\n    var anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY\n    };\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike): T|undefined} featureCallback Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  Executor.prototype.execute_ = function execute_ (\n    context,\n    transform,\n    skippedFeaturesHash,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    opt_hitExtent\n  ) {\n    /** @type {Array<number>} */\n    var pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates, 0, this.coordinates.length, 2,\n        transform, this.pixelCoordinates_);\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    var skipFeatures = !isEmpty(skippedFeaturesHash);\n    var i = 0; // instruction index\n    var ii = instructions.length; // end of instructions\n    var d = 0; // data index\n    var dd; // end of per-instruction data\n    var anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image, text, textKey;\n    var strokeKey, fillKey;\n    var pendingFill = 0;\n    var pendingStroke = 0;\n    var lastFillInstruction = null;\n    var lastStrokeInstruction = null;\n    var coordinateCache = this.coordinateCache_;\n    var viewRotation = this.viewRotation_;\n\n    var state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n    var /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    var x, y;\n    while (i < ii) {\n      var instruction = instructions[i];\n      var type = /** @type {CanvasInstruction} */ (instruction[0]);\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n          if ((skipFeatures && skippedFeaturesHash[getUid(feature)]) || !feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (opt_hitExtent !== undefined && !intersects(\n            opt_hitExtent, feature.getGeometry().getExtent())) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          var x1 = pixelCoordinates[d];\n          var y1 = pixelCoordinates[d + 1];\n          var x2 = pixelCoordinates[d + 2];\n          var y2 = pixelCoordinates[d + 3];\n          var dx = x2 - x1;\n          var dy = y2 - y1;\n          var r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          var geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n          var renderer = instruction[4];\n          var fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          var coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[6]);\n          var height = /** @type {number} */ (instruction[7]);\n          var opacity = /** @type {number} */ (instruction[8]);\n          var originX = /** @type {number} */ (instruction[9]);\n          var originY = /** @type {number} */ (instruction[10]);\n          var rotateWithView = /** @type {boolean} */ (instruction[11]);\n          var rotation = /** @type {number} */ (instruction[12]);\n          var scale = /** @type {number} */ (instruction[13]);\n          var width = /** @type {number} */ (instruction[14]);\n\n\n          if (!image && instruction.length >= 19) {\n            // create label images\n            text = /** @type {string} */ (instruction[18]);\n            textKey = /** @type {string} */ (instruction[19]);\n            strokeKey = /** @type {string} */ (instruction[20]);\n            fillKey = /** @type {string} */ (instruction[21]);\n            var labelWithAnchor = this.drawTextImageWithPointPlacement_(text, textKey, strokeKey, fillKey);\n            image = instruction[3] = labelWithAnchor.label;\n            var textOffsetX = /** @type {number} */ (instruction[22]);\n            anchorX = instruction[4] = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            var textOffsetY = /** @type {number} */ (instruction[23]);\n            anchorY = instruction[5] = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            height = instruction[7] = image.height;\n            width = instruction[14] = image.width;\n          }\n\n          var geometryWidths = (void 0);\n          if (instruction.length > 24) {\n            geometryWidths = /** @type {number} */ (instruction[24]);\n          }\n\n          var padding = (void 0), backgroundFill = (void 0), backgroundStroke = (void 0);\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = backgroundStroke = false;\n          }\n\n          if (rotateWithView) {\n            rotation += viewRotation;\n          }\n          var widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (geometryWidths && geometryWidths[widthIndex++] < width / this.pixelRatio) {\n              continue;\n            }\n            this.replayImage_(context,\n              pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY,\n              declutterGroup, height, opacity, originX, originY, rotation, scale,\n              snapToPixel, width, padding,\n              backgroundFill ? /** @type {Array<*>} */ (lastFillInstruction) : null,\n              backgroundStroke ? /** @type {Array<*>} */ (lastStrokeInstruction) : null);\n          }\n          this.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          var begin = /** @type {number} */ (instruction[1]);\n          var end = /** @type {number} */ (instruction[2]);\n          var baseline = /** @type {number} */ (instruction[3]);\n          declutterGroup = featureCallback ? null : /** @type {import(\"../canvas.js\").DeclutterGroup} */ (instruction[4]);\n          var overflow = /** @type {number} */ (instruction[5]);\n          fillKey = /** @type {string} */ (instruction[6]);\n          var maxAngle = /** @type {number} */ (instruction[7]);\n          var measurePixelRatio = /** @type {number} */ (instruction[8]);\n          var offsetY = /** @type {number} */ (instruction[9]);\n          strokeKey = /** @type {string} */ (instruction[10]);\n          var strokeWidth = /** @type {number} */ (instruction[11]);\n          text = /** @type {string} */ (instruction[12]);\n          textKey = /** @type {string} */ (instruction[13]);\n          var pixelRatioScale = /** @type {number} */ (instruction[14]);\n\n          var textState = this.textStates[textKey];\n          var font = textState.font;\n          var textScale = textState.scale * measurePixelRatio;\n\n          var cachedWidths = (void 0);\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = this.widths_[font] = {};\n          }\n\n          var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          var textLength = textScale * measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            var textAlign = this.textStates[textKey].textAlign;\n            var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            var parts = drawTextOnPath(\n              pixelCoordinates, begin, end, 2, text, startM, maxAngle, textScale, measureAndCacheTextWidth, font, cachedWidths);\n            if (parts) {\n              var c = (void 0), cc = (void 0), chars = (void 0), label = (void 0), part = (void 0);\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.getTextImage(chars, textKey, '', strokeKey);\n                  anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                  anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                  this.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), pixelRatioScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.getTextImage(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  this.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), pixelRatioScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n            }\n          }\n          this.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n            var result = featureCallback(feature);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   */\n  Executor.prototype.execute = function execute (context, transform, viewRotation, skippedFeaturesHash, snapToPixel) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(context, transform,\n      skippedFeaturesHash, this.instructions, snapToPixel, undefined, undefined);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {function(import(\"../../Feature.js\").FeatureLike): T=} opt_featureCallback\n   *     Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  Executor.prototype.executeHitDetection = function executeHitDetection (\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(context, transform, skippedFeaturesHash,\n      this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n  };\n\n  return Executor;\n}(Disposable));\n\n\nexport default Executor;\n\n//# sourceMappingURL=Executor.js.map","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport BuilderType from './BuilderType.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\nimport Executor from './Executor.js';\nimport Disposable from '../../Disposable.js';\n\n/**\n * @const\n * @type {Array<BuilderType>}\n */\nvar ORDER = [\n  BuilderType.POLYGON,\n  BuilderType.CIRCLE,\n  BuilderType.LINE_STRING,\n  BuilderType.IMAGE,\n  BuilderType.TEXT,\n  BuilderType.DEFAULT\n];\n\n\nvar ExecutorGroup = /*@__PURE__*/(function (Disposable) {\n  function ExecutorGroup(maxExtent, resolution, pixelRatio, overlaps, declutterTree, allInstructions, opt_renderBuffer) {\n    Disposable.call(this);\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = declutterTree;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = createCanvasContext2D(1, 1);\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  if ( Disposable ) ExecutorGroup.__proto__ = Disposable;\n  ExecutorGroup.prototype = Object.create( Disposable && Disposable.prototype );\n  ExecutorGroup.prototype.constructor = ExecutorGroup;\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  ExecutorGroup.prototype.clip = function clip (context, transform) {\n    var flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  };\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<BuilderType, import(\"./Builder.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  ExecutorGroup.prototype.createExecutors_ = function createExecutors_ (allInstructions) {\n    for (var zIndex in allInstructions) {\n      var executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        this.executorsByZIndex_[zIndex] = executors = {};\n      }\n      var instructionByZindex = allInstructions[zIndex];\n      for (var builderType in instructionByZindex) {\n        var instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_, instructions);\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ExecutorGroup.prototype.disposeInternal = function disposeInternal () {\n    for (var z in this.executorsByZIndex_) {\n      var executors = this.executorsByZIndex_[z];\n      for (var key in executors) {\n        executors[key].disposeInternal();\n      }\n    }\n    Disposable.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @param {Array<BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  ExecutorGroup.prototype.hasExecutors = function hasExecutors (executors) {\n    for (var zIndex in this.executorsByZIndex_) {\n      var candidates = this.executorsByZIndex_[zIndex];\n      for (var i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function(import(\"../../Feature.js\").FeatureLike): T} callback Feature callback.\n   * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>} declutterReplays Declutter replays.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  ExecutorGroup.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    skippedFeaturesHash,\n    callback,\n    declutterReplays\n  ) {\n\n    hitTolerance = Math.round(hitTolerance);\n    var contextSize = hitTolerance * 2 + 1;\n    var transform = composeTransform(this.hitDetectionTransform_,\n      hitTolerance + 0.5, hitTolerance + 0.5,\n      1 / resolution, -1 / resolution,\n      -rotation,\n      -coordinate[0], -coordinate[1]);\n    var context = this.hitDetectionContext_;\n\n    if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    var hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n    }\n\n    var mask = getCircleArray(hitTolerance);\n    var declutteredFeatures;\n    if (this.declutterTree_) {\n      declutteredFeatures = this.declutterTree_.all().map(function(entry) {\n        return entry.value;\n      });\n    }\n\n    var builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @return {?} Callback result.\n     */\n    function featureCallback(feature) {\n      var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n      for (var i = 0; i < contextSize; i++) {\n        for (var j = 0; j < contextSize; j++) {\n          if (mask[i][j]) {\n            if (imageData[(j * contextSize + i) * 4 + 3] > 0) {\n              var result = (void 0);\n              if (!(declutteredFeatures && (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) ||\n                  declutteredFeatures.indexOf(feature) !== -1) {\n                result = callback(feature);\n              }\n              if (result) {\n                return result;\n              } else {\n                context.clearRect(0, 0, contextSize, contextSize);\n                return undefined;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    var i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      var zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          if (declutterReplays &&\n              (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) {\n            var declutter = declutterReplays[zIndexKey];\n            if (!declutter) {\n              declutterReplays[zIndexKey] = [executor, transform.slice(0)];\n            } else {\n              declutter.push(executor, transform.slice(0));\n            }\n          } else {\n            result = executor.executeHitDetection(context, transform, rotation,\n              skippedFeaturesHash, featureCallback, hitExtent);\n            if (result) {\n              return result;\n            }\n          }\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  ExecutorGroup.prototype.getClipCoords = function getClipCoords (transform) {\n    var maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    var minX = maxExtent[0];\n    var minY = maxExtent[1];\n    var maxX = maxExtent[2];\n    var maxY = maxExtent[3];\n    var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(\n      flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  };\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"./BuilderType.js\").default} builderType Builder type.\n   * @return {import(\"../VectorContext.js\").default} Executor.\n   */\n  ExecutorGroup.prototype.getExecutor = function getExecutor (zIndex, builderType) {\n    var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    var executors = this.executorsByZIndex_[zIndexKey];\n    if (executors === undefined) {\n      executors = {};\n      this.executorsByZIndex_[zIndexKey] = executors;\n    }\n    var executor = executors[builderType];\n    if (executor === undefined) {\n      // FIXME: it should not be possible to ask for an executor that does not exist\n      executor = new Executor(\n        this.resolution_, this.pixelRatio_, this.overlaps_, {\n          instructions: [],\n          hitDetectionInstructions: [],\n          coordinates: []\n        },\n        this.declutterTree_);\n      executors[builderType] = executor;\n    }\n    return executor;\n  };\n\n  /**\n   * @return {Object<string, Object<BuilderType, CanvasReplay>>} Replays.\n   */\n  ExecutorGroup.prototype.getExecutors = function getExecutors () {\n    return this.executorsByZIndex_;\n  };\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  ExecutorGroup.prototype.isEmpty = function isEmpty$1 () {\n    return isEmpty(this.executorsByZIndex_);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<BuilderType>=} opt_builderTypes Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>=} opt_declutterReplays Declutter replays.\n   */\n  ExecutorGroup.prototype.execute = function execute (context, transform, viewRotation, skippedFeaturesHash, snapToPixel, opt_builderTypes,\n    opt_declutterReplays) {\n\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    var builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n    var i, ii, j, jj, replays, replay;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      var zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        var builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          if (opt_declutterReplays &&\n              (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) {\n            var declutter = opt_declutterReplays[zIndexKey];\n            if (!declutter) {\n              opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            replay.execute(context, transform, viewRotation, skippedFeaturesHash, snapToPixel);\n          }\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  };\n\n  return ExecutorGroup;\n}(Disposable));\n\n\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<Array<(boolean|undefined)>>>}\n */\nvar circleArrayCache = {\n  0: [[true]]\n};\n\n\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array<Array<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n  var i;\n  var radius = Math.floor(array.length / 2);\n  if (x >= radius) {\n    for (i = radius; i < x; i++) {\n      array[i][y] = true;\n    }\n  } else if (x < radius) {\n    for (i = x + 1; i < radius; i++) {\n      array[i][y] = true;\n    }\n  }\n}\n\n\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<Array<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n  if (circleArrayCache[radius] !== undefined) {\n    return circleArrayCache[radius];\n  }\n\n  var arraySize = radius * 2 + 1;\n  var arr = new Array(arraySize);\n  for (var i = 0; i < arraySize; i++) {\n    arr[i] = new Array(arraySize);\n  }\n\n  var x = radius;\n  var y = 0;\n  var error = 0;\n\n  while (x >= y) {\n    fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n\n    y++;\n    error += 1 + 2 * y;\n    if (2 * (error - x) + 1 > 0) {\n      x -= 1;\n      error += 1 - 2 * x;\n    }\n  }\n\n  circleArrayCache[radius] = arr;\n  return arr;\n}\n\n\n/**\n * @param {!Object<string, Array<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n */\nexport function replayDeclutter(declutterReplays, context, rotation, snapToPixel) {\n  var zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n  var skippedFeatureUids = {};\n  for (var z = 0, zz = zs.length; z < zz; ++z) {\n    var executorData = declutterReplays[zs[z].toString()];\n    for (var i = 0, ii = executorData.length; i < ii;) {\n      var executor = executorData[i++];\n      var transform = executorData[i++];\n      executor.execute(context, transform, rotation, skippedFeatureUids, snapToPixel);\n    }\n  }\n}\n\n\nexport default ExecutorGroup;\n\n//# sourceMappingURL=ExecutorGroup.js.map","/**\n * @module ol/renderer/vector\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport BuilderType from '../render/canvas/BuilderType.js';\n\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nvar GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry\n};\n\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  var tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var circleReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.CIRCLE);\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n    textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(this: T, import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\n  var loading = false;\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    var imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener, thisArg);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener, thisArg);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\n\n  return loading;\n}\n\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\n  var geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n  var renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    var geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  var replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n  replay.drawCustom(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer());\n}\n\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n  var geometries = geometry.getGeometriesArray();\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    var geometryRenderer =\n        GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(replayGroup, geometries[i], style, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderLineStringGeometry(builderGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n    textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiLineStringGeometry(builderGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n    textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderMultiPolygonGeometry(builderGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n    textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPointGeometry(builderGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\n    imageReplay.drawPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n    textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiPointGeometry(builderGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n    textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n    textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n//# sourceMappingURL=vector.js.map","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport {getUid} from '../../util.js';\nimport ViewHint from '../../ViewHint.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, createEmpty, containsExtent, getWidth} from '../../extent.js';\nimport {labelCache} from '../../render/canvas.js';\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\nimport {toString as transformToString, makeScale, makeInverse} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = /*@__PURE__*/(function (CanvasLayerRenderer) {\n  function CanvasVectorLayerRenderer(vectorLayer) {\n\n    CanvasLayerRenderer.call(this, vectorLayer);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = vectorLayer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n  }\n\n  if ( CanvasLayerRenderer ) CanvasVectorLayerRenderer.__proto__ = CanvasLayerRenderer;\n  CanvasVectorLayerRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  CanvasVectorLayerRenderer.prototype.constructor = CanvasVectorLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.renderFrame = function renderFrame (frameState, layerState) {\n    var context = this.context;\n    var canvas = context.canvas;\n\n    var replayGroup = this.replayGroup_;\n    if (!replayGroup || replayGroup.isEmpty()) {\n      if (canvas.width > 0) {\n        canvas.width = 0;\n      }\n      return canvas;\n    }\n\n    var pixelRatio = frameState.pixelRatio;\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform_, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform_, this.pixelTransform_);\n\n    // resize and clear\n    var width = Math.round(frameState.size[0] * pixelRatio);\n    var height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      var canvasTransform = transformToString(this.pixelTransform_);\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    var extent = frameState.extent;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var rotation = viewState.rotation;\n    var projectionExtent = projection.getExtent();\n    var vectorSource = /** @type {import(\"../../source/Vector.js\").default} */ (this.getLayer().getSource());\n\n    // clipped rendering if layer extent is set\n    var clipExtent = layerState.extent;\n    var clipped = clipExtent !== undefined;\n    if (clipped) {\n      this.clip(context, frameState, clipExtent);\n    }\n\n    if (this.declutterTree_) {\n      this.declutterTree_.clear();\n    }\n\n\n    var viewHints = frameState.viewHints;\n    var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n\n    var transform = this.getRenderTransform(frameState, width, height, 0);\n    var skippedFeatureUids = layerState.managed ? frameState.skippedFeatureUids : {};\n    replayGroup.execute(context, transform, rotation, skippedFeatureUids, snapToPixel);\n\n    if (vectorSource.getWrapX() && projection.canWrapX() && !containsExtent(projectionExtent, extent)) {\n      var startX = extent[0];\n      var worldWidth = getWidth(projectionExtent);\n      var world = 0;\n      var offsetX;\n      while (startX < projectionExtent[0]) {\n        --world;\n        offsetX = worldWidth * world;\n        var transform$1 = this.getRenderTransform(frameState, width, height, offsetX);\n        replayGroup.execute(context, transform$1, rotation, skippedFeatureUids, snapToPixel);\n        startX += worldWidth;\n      }\n      world = 0;\n      startX = extent[2];\n      while (startX > projectionExtent[2]) {\n        ++world;\n        offsetX = worldWidth * world;\n        var transform$2 = this.getRenderTransform(frameState, width, height, offsetX);\n        replayGroup.execute(context, transform$2, rotation, skippedFeatureUids, snapToPixel);\n        startX -= worldWidth;\n      }\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    var opacity = layerState.opacity;\n    if (opacity !== parseFloat(canvas.style.opacity)) {\n      canvas.style.opacity = opacity;\n    }\n\n    return canvas;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.replayGroup_) {\n      return undefined;\n    } else {\n      var resolution = frameState.viewState.resolution;\n      var rotation = frameState.viewState.rotation;\n      var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n      /** @type {!Object<string, boolean>} */\n      var features = {};\n      var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @return {?} Callback result.\n         */\n        function(feature) {\n          var key = getUid(feature);\n          if (!(key in features)) {\n            features[key] = true;\n            return callback.call(thisArg, feature, layer);\n          }\n        }, null);\n      return result;\n    }\n  };\n\n  /**\n   * @param {import(\"../../events/Event.js\").default} event Event.\n   */\n  CanvasVectorLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var vectorLayer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var vectorSource = /** @type {import(\"../../source/Vector.js\").default} */ (vectorLayer.getSource());\n\n    var animating = frameState.viewHints[ViewHint.ANIMATING];\n    var interacting = frameState.viewHints[ViewHint.INTERACTING];\n    var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n        (!updateWhileInteracting && interacting)) {\n      return true;\n    }\n\n    var frameStateExtent = frameState.extent;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var resolution = viewState.resolution;\n    var pixelRatio = frameState.pixelRatio;\n    var vectorLayerRevision = vectorLayer.getRevision();\n    var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    var extent = buffer(frameStateExtent,\n      vectorLayerRenderBuffer * resolution);\n    var projectionExtent = viewState.projection.getExtent();\n\n    if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n        !containsExtent(projectionExtent, frameState.extent)) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      var worldWidth = getWidth(projectionExtent);\n      var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n    }\n\n    if (!this.dirty_ &&\n        this.renderedResolution_ == resolution &&\n        this.renderedRevision_ == vectorLayerRevision &&\n        this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n        containsExtent(this.renderedExtent_, extent)) {\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    if (this.replayGroup_) {\n      this.replayGroup_.dispose();\n    }\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    var replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio), extent, resolution,\n      pixelRatio, !!this.declutterTree_);\n\n    vectorSource.loadFeatures(extent, resolution, projection);\n\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @this {CanvasVectorLayerRenderer}\n     */\n    var render = function(feature) {\n      var styles;\n      var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n      if (styles) {\n        var dirty = this.renderFeature(\n          feature, resolution, pixelRatio, styles, replayGroup);\n        this.dirty_ = this.dirty_ || dirty;\n      }\n    }.bind(this);\n    if (vectorLayerRenderOrder) {\n      /** @type {Array<import(\"../../Feature.js\").default>} */\n      var features = [];\n      vectorSource.forEachFeatureInExtent(extent,\n        /**\n         * @param {import(\"../../Feature.js\").default} feature Feature.\n         */\n        function(feature) {\n          features.push(feature);\n        });\n      features.sort(vectorLayerRenderOrder);\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        render(features[i]);\n      }\n    } else {\n      vectorSource.forEachFeatureInExtent(extent, render);\n    }\n\n    var replayGroupInstructions = replayGroup.finish();\n    var executorGroup = new ExecutorGroup(extent, resolution,\n      pixelRatio, vectorSource.getOverlaps(), this.declutterTree_,\n      replayGroupInstructions, vectorLayer.getRenderBuffer());\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.replayGroup_ = executorGroup;\n\n    this.replayGroupChanged = true;\n    return true;\n  };\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, resolution, pixelRatio, styles, builderGroup) {\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          builderGroup, feature, styles[i],\n          getSquaredRenderTolerance(resolution, pixelRatio),\n          this.handleStyleImageChange_, this) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup, feature, styles,\n        getSquaredRenderTolerance(resolution, pixelRatio),\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  };\n\n  return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\n\n\nexport default CanvasVectorLayerRenderer;\n\n//# sourceMappingURL=VectorLayer.js.map","/**\n * @module ol/layer/VectorTileRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  HYBRID: 'hybrid'\n};\n\n//# sourceMappingURL=VectorTileRenderType.js.map","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport {getUid} from '../../util.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {listen, unlisten, unlistenByKey} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, containsCoordinate, equals, getIntersection, getTopLeft, intersects} from '../../extent.js';\nimport VectorTileRenderType from '../../layer/VectorTileRenderType.js';\nimport {equivalent as equivalentProjection} from '../../proj.js';\nimport Units from '../../proj/Units.js';\nimport ReplayType from '../../render/canvas/BuilderType.js';\nimport {labelCache} from '../../render/canvas.js';\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport {getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  compose as composeTransform,\n  reset as resetTransform,\n  scale as scaleTransform,\n  translate as translateTransform,\n  toString as transformToString,\n  makeScale,\n  makeInverse\n} from '../../transform.js';\nimport CanvasExecutorGroup, {replayDeclutter} from '../../render/canvas/ExecutorGroup.js';\nimport {clear} from '../../obj.js';\n\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas/BuilderType.js\").default>>}\n */\nvar IMAGE_REPLAYS = {\n  'image': [ReplayType.POLYGON, ReplayType.CIRCLE,\n    ReplayType.LINE_STRING, ReplayType.IMAGE, ReplayType.TEXT],\n  'hybrid': [ReplayType.POLYGON, ReplayType.LINE_STRING]\n};\n\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas/BuilderType.js\").default>>}\n */\nvar VECTOR_REPLAYS = {\n  'image': [ReplayType.DEFAULT],\n  'hybrid': [ReplayType.IMAGE, ReplayType.TEXT, ReplayType.DEFAULT]\n};\n\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n */\nvar CanvasVectorTileLayerRenderer = /*@__PURE__*/(function (CanvasTileLayerRenderer) {\n  function CanvasVectorTileLayerRenderer(layer) {\n    CanvasTileLayerRenderer.call(this, layer);\n\n    var baseCanvas = this.context.canvas;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.overlayContext_ = createCanvasContext2D();\n\n    var overlayCanvas = this.overlayContext_.canvas;\n    overlayCanvas.style.position = 'absolute';\n    overlayCanvas.style.transformOrigin = 'top left';\n\n    var container = document.createElement('div');\n    var style = container.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n\n    container.appendChild(baseCanvas);\n    container.appendChild(overlayCanvas);\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.container_ = container;\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels for the overlay canvas.\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.overlayPixelTransform_ = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels for the overlay canvas.\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inverseOverlayPixelTransform_ = createTransform();\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = layer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../../VectorRenderTile.js\").default>}\n     */\n    this.renderTileImageQueue_ = {};\n\n    /**\n     * @type {Object<string, import(\"../../events.js\").EventsKey>}\n     */\n    this.tileListenerKeys_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n\n    // Use closest resolution.\n    this.zDirection = 0;\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  if ( CanvasTileLayerRenderer ) CanvasVectorTileLayerRenderer.__proto__ = CanvasTileLayerRenderer;\n  CanvasVectorTileLayerRenderer.prototype = Object.create( CanvasTileLayerRenderer && CanvasTileLayerRenderer.prototype );\n  CanvasVectorTileLayerRenderer.prototype.constructor = CanvasVectorTileLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasTileLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection\").default} projection Projection.\n   */\n  CanvasVectorTileLayerRenderer.prototype.prepareTile = function prepareTile (tile, pixelRatio, projection) {\n    var tileUid = getUid(tile);\n    var state = tile.getState();\n    if (((state === TileState.LOADED && tile.hifi) ||\n        state === TileState.ERROR || state === TileState.ABORT) &&\n        tileUid in this.tileListenerKeys_) {\n      unlistenByKey(this.tileListenerKeys_[tileUid]);\n      delete this.tileListenerKeys_[tileUid];\n    }\n    if (state === TileState.LOADED || state === TileState.ERROR) {\n      this.updateExecutorGroup_(tile, pixelRatio, projection);\n      if (this.tileImageNeedsRender_(tile, pixelRatio, projection)) {\n        this.renderTileImageQueue_[tileUid] = tile;\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (CanvasTileLayerRenderer.prototype.getTile.call(this, z, x, y, pixelRatio, projection));\n    if (tile.getState() < TileState.LOADED) {\n      var tileUid = getUid(tile);\n      if (!(tileUid in this.tileListenerKeys_)) {\n        var listenerKey = listen(tile, EventType.CHANGE, this.prepareTile.bind(this, tile, pixelRatio, projection));\n        this.tileListenerKeys_[tileUid] = listenerKey;\n      }\n    } else {\n      this.prepareTile(tile, pixelRatio, projection);\n    }\n    return tile;\n  };\n\n  /**\n   * @inheritdoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.isDrawableTile = function isDrawableTile (tile) {\n    return CanvasTileLayerRenderer.prototype.isDrawableTile.call(this, tile) && tile.hasContext(this.getLayer());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.getTileImage = function getTileImage (tile) {\n    var tileLayer = /** @type {import(\"../../layer/Tile.js\").default} */ (this.getLayer());\n    return tile.getImage(tileLayer);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\n    var layerRevision = layer.getRevision();\n    if (this.renderedLayerRevision_ != layerRevision) {\n      this.renderedTiles.length = 0;\n    }\n    this.renderedLayerRevision_ = layerRevision;\n    return CanvasTileLayerRenderer.prototype.prepareFrame.call(this, frameState, layerState);\n  };\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.updateExecutorGroup_ = function updateExecutorGroup_ (tile, pixelRatio, projection) {\n    var this$1 = this;\n\n    var layer = /** @type {import(\"../../layer/Vector.js\").default} */ (this.getLayer());\n    var revision = layer.getRevision();\n    var renderOrder = /** @type {import(\"../../render.js\").OrderFunction} */ (layer.getRenderOrder()) || null;\n\n    var builderState = tile.getReplayState(layer);\n    if (!builderState.dirty && builderState.renderedRevision == revision &&\n        builderState.renderedRenderOrder == renderOrder && builderState.renderedZ === tile.sourceZ) {\n      return;\n    }\n\n    var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n    var sourceTileGrid = source.getTileGrid();\n    var tileGrid = source.getTileGridForProjection(projection);\n    var zoom = tile.tileCoord[0];\n    var resolution = tileGrid.getResolution(zoom);\n    var tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n\n    var sourceTiles = tile.load();\n    var layerUid = getUid(layer);\n    var executorGroups = tile.executorGroups[layerUid];\n    if (executorGroups) {\n      for (var i = 0, ii = executorGroups.length; i < ii; ++i) {\n        executorGroups[i].dispose();\n      }\n    }\n    tile.executorGroups[layerUid] = [];\n    var loop = function ( t, tt ) {\n      var sourceTile = sourceTiles[t];\n      if (sourceTile.getState() != TileState.LOADED) {\n        return;\n      }\n      var sourceTileCoord = sourceTile.tileCoord;\n      var sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      var sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      var bufferedExtent = equals(sourceTileExtent, sharedExtent) ? null :\n        buffer(sharedExtent, layer.getRenderBuffer() * resolution, this$1.tmpExtent);\n      var tileProjection = sourceTile.getProjection();\n      var reproject = false;\n      if (!equivalentProjection(projection, tileProjection)) {\n        reproject = true;\n        sourceTile.setProjection(projection);\n      }\n      builderState.dirty = false;\n      var builderGroup = new CanvasBuilderGroup(0, sharedExtent, resolution,\n        pixelRatio, !!this$1.declutterTree_);\n      var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      var render = function(feature) {\n        var styles;\n        var styleFunction = feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          var dirty = this.renderFeature(feature, squaredTolerance, styles, builderGroup);\n          this.dirty_ = this.dirty_ || dirty;\n          builderState.dirty = builderState.dirty || dirty;\n        }\n      };\n\n      var features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== builderState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (var i$1 = 0, ii$1 = features.length; i$1 < ii$1; ++i$1) {\n        var feature = features[i$1];\n        if (reproject) {\n          if (tileProjection.getUnits() == Units.TILE_PIXELS) {\n            // projected tile extent\n            tileProjection.setWorldExtent(sourceTileExtent);\n            // tile extent in tile pixel space\n            tileProjection.setExtent(sourceTile.getExtent());\n          }\n          feature.getGeometry().transform(tileProjection, projection);\n        }\n        if (!bufferedExtent || intersects(bufferedExtent, feature.getGeometry().getExtent())) {\n          render.call(this$1, feature);\n        }\n      }\n      var executorGroupInstructions = builderGroup.finish();\n      // no need to clip when the render tile is covered by a single source tile\n      var replayExtent = layer.getDeclutter() && sourceTiles.length === 1 ?\n        null :\n        sharedExtent;\n      var renderingReplayGroup = new CanvasExecutorGroup(replayExtent, resolution,\n        pixelRatio, source.getOverlaps(), this$1.declutterTree_, executorGroupInstructions, layer.getRenderBuffer());\n      tile.executorGroups[layerUid].push(renderingReplayGroup);\n    };\n\n    for (var t = 0, tt = sourceTiles.length; t < tt; ++t) loop( t, tt );\n    builderState.renderedRevision = revision;\n    builderState.renderedZ = tile.sourceZ;\n    builderState.renderedRenderOrder = renderOrder;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var resolution = frameState.viewState.resolution;\n    var rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    var layer = this.getLayer();\n    var source = /** @type {import(\"../../source/VectorTile\").default} */ (layer.getSource());\n    var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n    /** @type {!Object<string, boolean>} */\n    var features = {};\n\n    var renderedTiles = /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (this.renderedTiles);\n\n    var bufferedExtent, found;\n    var i, ii;\n    for (i = 0, ii = renderedTiles.length; i < ii; ++i) {\n      var tile = renderedTiles[i];\n      var tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      bufferedExtent = buffer(tileExtent, hitTolerance * resolution, bufferedExtent);\n      if (!containsCoordinate(bufferedExtent, coordinate)) {\n        continue;\n      }\n      var executorGroups = tile.executorGroups[getUid(layer)];\n      for (var t = 0, tt = executorGroups.length; t < tt; ++t) {\n        var executorGroup = executorGroups[t];\n        found = found || executorGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n          /**\n           * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n           * @return {?} Callback result.\n           */\n          function(feature) {\n            var key = getUid(feature);\n            if (!(key in features)) {\n              features[key] = true;\n              return callback.call(thisArg, feature, layer);\n            }\n          }, null);\n      }\n    }\n    return found;\n  };\n\n  /**\n   * @param {import(\"../../VectorTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../transform.js\").Transform} transform Transform.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.getReplayTransform_ = function getReplayTransform_ (tile, frameState) {\n    var layer = this.getLayer();\n    var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n    var tileGrid = source.getTileGrid();\n    var tileCoord = tile.tileCoord;\n    var tileResolution = tileGrid.getResolution(tileCoord[0]);\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var renderResolution = viewState.resolution / pixelRatio;\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    var center = viewState.center;\n    var origin = getTopLeft(tileExtent);\n    var size = frameState.size;\n    var offsetX = Math.round(pixelRatio * size[0] / 2);\n    var offsetY = Math.round(pixelRatio * size[1] / 2);\n    return composeTransform(this.tmpTransform_,\n      offsetX, offsetY,\n      tileResolution / renderResolution, tileResolution / renderResolution,\n      viewState.rotation,\n      (origin[0] - center[0]) / tileResolution,\n      (center[1] - origin[1]) / tileResolution);\n  };\n\n  /**\n   * @param {import(\"../../events/Event.js\").default} event Event.\n   */\n  CanvasVectorTileLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderFrame = function renderFrame (frameState, layerState) {\n    CanvasTileLayerRenderer.prototype.renderFrame.call(this, frameState, layerState);\n\n    var layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\n    var viewHints = frameState.viewHints;\n    var hifi = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n    var renderMode = layer.getRenderMode();\n    if (renderMode === VectorTileRenderType.IMAGE) {\n      this.renderTileImages_(hifi, frameState);\n      return this.container_;\n    }\n\n    var context = this.overlayContext_;\n    var declutterReplays = layer.getDeclutter() ? {} : null;\n    var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n    var replayTypes = VECTOR_REPLAYS[renderMode];\n    var pixelRatio = frameState.pixelRatio;\n    var rotation = frameState.viewState.rotation;\n    var size = frameState.size;\n\n    // set forward and inverse pixel transforms\n    makeScale(this.overlayPixelTransform_, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inverseOverlayPixelTransform_, this.overlayPixelTransform_);\n\n    // resize and clear\n    var canvas = context.canvas;\n    var width = Math.round(size[0] * pixelRatio);\n    var height = Math.round(size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      var canvasTransform = transformToString(this.overlayPixelTransform_);\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (declutterReplays) {\n      this.declutterTree_.clear();\n    }\n    var tiles = this.renderedTiles;\n    var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n    var clips = [];\n    for (var i = tiles.length - 1; i >= 0; --i) {\n      var tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (tiles[i]);\n      if (tile.getState() == TileState.ABORT) {\n        continue;\n      }\n      var tileCoord = tile.tileCoord;\n      var tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      var worldOffset = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tileExtent[0];\n      var transform = this.getRenderTransform(frameState, width, height, worldOffset);\n      var executorGroups = tile.executorGroups[getUid(layer)];\n      for (var t = 0, tt = executorGroups.length; t < tt; ++t) {\n        var executorGroup = executorGroups[t];\n        if (!executorGroup.hasExecutors(replayTypes)) {\n          // sourceTile has no instructions of the types we want to render\n          continue;\n        }\n        var currentZ = tile.tileCoord[0];\n        var zs = (void 0), currentClip = (void 0);\n        if (!declutterReplays) {\n          zs = [];\n          currentClip = executorGroup.getClipCoords(transform);\n          context.save();\n\n          // Create a clip mask for regions in this low resolution tile that are\n          // already filled by a higher resolution tile\n          for (var j = 0, jj = clips.length; j < jj; ++j) {\n            var clip = clips[j];\n            if (currentZ < zs[j]) {\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher resolution tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n        }\n        executorGroup.execute(context, transform, rotation, {}, hifi, replayTypes, declutterReplays);\n        if (!declutterReplays) {\n          context.restore();\n          clips.push(currentClip);\n          zs.push(currentZ);\n        }\n      }\n    }\n    if (declutterReplays) {\n      replayDeclutter(declutterReplays, context, rotation, hifi);\n    }\n\n    var opacity = layerState.opacity;\n    if (opacity !== parseFloat(canvas.style.opacity)) {\n      canvas.style.opacity = opacity;\n    }\n\n    // Now that we have rendered the tiles we have already, let's prepare new tile images\n    // for the next frame\n    this.renderTileImages_(hifi, frameState);\n\n    return this.container_;\n  };\n\n  /**\n   * @param {boolean} hifi We have time to render a high fidelity map image.\n   * @param {import('../../PluggableMap.js').FrameState} frameState Frame state.\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderTileImages_ = function renderTileImages_ (hifi, frameState) {\n    // When we don't have time to render hifi, only render tiles until we have used up\n    // half of the frame budget of 16 ms\n    for (var uid in this.renderTileImageQueue_) {\n      if (!hifi && Date.now() - frameState.time > 8) {\n        break;\n      }\n      var tile = this.renderTileImageQueue_[uid];\n      frameState.animate = true;\n      delete this.renderTileImageQueue_[uid];\n      this.renderTileImage_(tile, frameState.pixelRatio, frameState.viewState.projection);\n    }\n    clear(this.renderTileImageQueue_);\n  };\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} executorGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, squaredTolerance, styles, executorGroup) {\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          executorGroup, feature, styles[i], squaredTolerance,\n          this.handleStyleImageChange_, this) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        executorGroup, feature, styles, squaredTolerance,\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  };\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} A new tile image was rendered.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.tileImageNeedsRender_ = function tileImageNeedsRender_ (tile, pixelRatio, projection) {\n    var layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\n    var replayState = tile.getReplayState(layer);\n    var revision = layer.getRevision();\n    var sourceZ = tile.sourceZ;\n    return replayState.renderedTileRevision !== revision || replayState.renderedTileZ !== sourceZ;\n  };\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderTileImage_ = function renderTileImage_ (tile, pixelRatio, projection) {\n    var layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (this.getLayer());\n    var replayState = tile.getReplayState(layer);\n    var revision = layer.getRevision();\n    var executorGroups = tile.executorGroups[getUid(layer)];\n    replayState.renderedTileRevision = revision;\n    replayState.renderedTileZ = tile.sourceZ;\n    var tileCoord = tile.wrappedTileCoord;\n    var z = tileCoord[0];\n    var source = /** @type {import(\"../../source/VectorTile.js\").default} */ (layer.getSource());\n    var tileGrid = source.getTileGridForProjection(projection);\n    var resolution = tileGrid.getResolution(z);\n    var context = tile.getContext(layer);\n    var size = source.getTilePixelSize(z, pixelRatio, projection);\n    context.canvas.width = size[0];\n    context.canvas.height = size[1];\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    for (var i = 0, ii = executorGroups.length; i < ii; ++i) {\n      var executorGroup = executorGroups[i];\n      var pixelScale = pixelRatio / resolution;\n      var transform = resetTransform(this.tmpTransform_);\n      scaleTransform(transform, pixelScale, -pixelScale);\n      translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n      executorGroup.execute(context, transform, 0, {}, true, IMAGE_REPLAYS[layer.getRenderMode()]);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.getDataAtPixel = function getDataAtPixel (pixel, frameState, hitTolerance) {\n    var data = CanvasTileLayerRenderer.prototype.getDataAtPixel.call(this, pixel, frameState, hitTolerance);\n    if (data) {\n      return data;\n    }\n\n    var renderPixel = applyTransform(this.inverseOverlayPixelTransform_, pixel.slice());\n    var context = this.overlayContext_;\n\n    try {\n      data = context.getImageData(Math.round(renderPixel[0]), Math.round(renderPixel[1]), 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  };\n\n  return CanvasVectorTileLayerRenderer;\n}(CanvasTileLayerRenderer));\n\n\nexport default CanvasVectorTileLayerRenderer;\n\n//# sourceMappingURL=VectorTileLayer.js.map","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport {assign} from '../obj.js';\nimport {createDefaultStyle, toFunction as toStyleFunction} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  RENDER_ORDER: 'renderOrder'\n};\n\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseVectorLayer = /*@__PURE__*/(function (Layer) {\n  function BaseVectorLayer(opt_options) {\n    var options = opt_options ?\n      opt_options : /** @type {Options} */ ({});\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    Layer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ = options.renderBuffer !== undefined ?\n      options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n      options.updateWhileAnimating : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n      options.updateWhileInteracting : false;\n\n  }\n\n  if ( Layer ) BaseVectorLayer.__proto__ = Layer;\n  BaseVectorLayer.prototype = Object.create( Layer && Layer.prototype );\n  BaseVectorLayer.prototype.constructor = BaseVectorLayer;\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  BaseVectorLayer.prototype.getDeclutter = function getDeclutter () {\n    return this.declutter_;\n  };\n\n  /**\n   * @param {boolean} declutter Declutter.\n   */\n  BaseVectorLayer.prototype.setDeclutter = function setDeclutter (declutter) {\n    this.declutter_ = declutter;\n  };\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  BaseVectorLayer.prototype.getRenderBuffer = function getRenderBuffer () {\n    return this.renderBuffer_;\n  };\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  BaseVectorLayer.prototype.getRenderOrder = function getRenderOrder () {\n    return (\n    /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER))\n    );\n  };\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike}\n   *     Layer style.\n   * @api\n   */\n  BaseVectorLayer.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  BaseVectorLayer.prototype.getStyleFunction = function getStyleFunction () {\n    return this.styleFunction_;\n  };\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  BaseVectorLayer.prototype.getUpdateWhileAnimating = function getUpdateWhileAnimating () {\n    return this.updateWhileAnimating_;\n  };\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  BaseVectorLayer.prototype.getUpdateWhileInteracting = function getUpdateWhileInteracting () {\n    return this.updateWhileInteracting_;\n  };\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  BaseVectorLayer.prototype.setRenderOrder = function setRenderOrder (renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  };\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If it is `undefined` the default style is used. If\n   * it is `null` the layer has no style (a `null` style), so only features\n   * that have their own styles will be rendered in the layer. See\n   * {@link module:ol/style} for information on the default style.\n   * @param {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null|undefined} style Layer style.\n   * @api\n   */\n  BaseVectorLayer.prototype.setStyle = function setStyle (style) {\n    this.style_ = style !== undefined ? style : createDefaultStyle;\n    this.styleFunction_ = style === null ?\n      undefined : toStyleFunction(this.style_);\n    this.changed();\n  };\n\n  return BaseVectorLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Vector vectorsource} of the layer.\n * @function\n * @return {import(\"../source/Vector.js\").default} Source.\n * @api\n */\nBaseVectorLayer.prototype.getSource;\n\n\nexport default BaseVectorLayer;\n\n//# sourceMappingURL=BaseVector.js.map","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n\n/**\n * @typedef {import(\"./BaseVector.js\").Options} Options\n */\n\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar VectorLayer = /*@__PURE__*/(function (BaseVectorLayer) {\n  function VectorLayer(opt_options) {\n    BaseVectorLayer.call(this, opt_options);\n  }\n\n  if ( BaseVectorLayer ) VectorLayer.__proto__ = BaseVectorLayer;\n  VectorLayer.prototype = Object.create( BaseVectorLayer && BaseVectorLayer.prototype );\n  VectorLayer.prototype.constructor = VectorLayer;\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  VectorLayer.prototype.createRenderer = function createRenderer () {\n    return new CanvasVectorLayerRenderer(this);\n  };\n\n  return VectorLayer;\n}(BaseVectorLayer));\n\n\nexport default VectorLayer;\n\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\n  var pointX = NaN;\n  var pointY = NaN;\n  var n = (end - offset) / stride;\n  if (n === 1) {\n    pointX = flatCoordinates[offset];\n    pointY = flatCoordinates[offset + 1];\n  } else if (n == 2) {\n    pointX = (1 - fraction) * flatCoordinates[offset] +\n        fraction * flatCoordinates[offset + stride];\n    pointY = (1 - fraction) * flatCoordinates[offset + 1] +\n        fraction * flatCoordinates[offset + stride + 1];\n  } else if (n !== 0) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length = 0;\n    var cumulativeLengths = [0];\n    for (var i = offset + stride; i < end; i += stride) {\n      var x2 = flatCoordinates[i];\n      var y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    var target = fraction * length;\n    var index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      var t = (target - cumulativeLengths[-index - 2]) /\n          (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      var o = offset + (-index - 2) * stride;\n      pointX = lerp(\n        flatCoordinates[o], flatCoordinates[o + stride], t);\n      pointY = lerp(\n        flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\n    } else {\n      pointX = flatCoordinates[offset + index * stride];\n      pointY = flatCoordinates[offset + index * stride + 1];\n    }\n  }\n  if (opt_dest) {\n    opt_dest[0] = pointX;\n    opt_dest[1] = pointY;\n    return opt_dest;\n  } else {\n    return [pointX, pointY];\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n  if (end == offset) {\n    return null;\n  }\n  var coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  var lo = offset / stride;\n  var hi = end / stride;\n  while (lo < hi) {\n    var mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  var m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  var m1 = flatCoordinates[(lo + 1) * stride - 1];\n  var t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (var i = 0; i < stride - 1; ++i) {\n    coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i],\n      flatCoordinates[lo * stride + i], t));\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n  }\n  var coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates, offset, end, stride, m, false);\n    }\n    offset = end;\n  }\n  return null;\n}\n\n//# sourceMappingURL=interpolate.js.map","/**\n * @module ol/geom/LineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nvar LineString = /*@__PURE__*/(function (SimpleGeometry) {\n  function LineString(coordinates, opt_layout) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) LineString.__proto__ = SimpleGeometry;\n  LineString.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  LineString.prototype.constructor = LineString;\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  LineString.prototype.appendCoordinate = function appendCoordinate (coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @override\n   * @api\n   */\n  LineString.prototype.clone = function clone () {\n    return new LineString(this.flatCoordinates.slice(), this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LineString.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  LineString.prototype.forEachSegment = function forEachSegment$1 (callback) {\n    return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n  };\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  LineString.prototype.getCoordinateAtM = function getCoordinateAtM (m, opt_extrapolate) {\n    if (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) {\n      return null;\n    }\n    var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(this.flatCoordinates, 0,\n      this.flatCoordinates.length, this.stride, m, extrapolate);\n  };\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  LineString.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_dest Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  LineString.prototype.getCoordinateAt = function getCoordinateAt (fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      fraction, opt_dest);\n  };\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  LineString.prototype.getLength = function getLength () {\n    return lineStringLength(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  LineString.prototype.getFlatMidpoint = function getFlatMidpoint () {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LineString.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LineString.prototype.getType = function getType () {\n    return GeometryType.LINE_STRING;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LineString.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLineString(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      extent);\n  };\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  LineString.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return LineString;\n}(SimpleGeometry));\n\n\nexport default LineString;\n\n//# sourceMappingURL=LineString.js.map","/**\n * @module ol/geom/flat/geodesic\n */\nimport {squaredSegmentDistance, toRadians, toDegrees} from '../../math.js';\nimport {get as getProjection, getTransform} from '../../proj.js';\n\n\n/**\n * @param {function(number): import(\"../../coordinate.js\").Coordinate} interpolate Interpolate function.\n * @param {import(\"../../proj.js\").TransformFunction} transform Transform from longitude/latitude to\n *     projected coordinates.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nfunction line(interpolate, transform, squaredTolerance) {\n  // FIXME reduce garbage generation\n  // FIXME optimize stack operations\n\n  /** @type {Array<number>} */\n  var flatCoordinates = [];\n\n  var geoA = interpolate(0);\n  var geoB = interpolate(1);\n\n  var a = transform(geoA);\n  var b = transform(geoB);\n\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n  var geoStack = [geoB, geoA];\n  /** @type {Array<import(\"../../coordinate.js\").Coordinate>} */\n  var stack = [b, a];\n  /** @type {Array<number>} */\n  var fractionStack = [1, 0];\n\n  /** @type {!Object<string, boolean>} */\n  var fractions = {};\n\n  var maxIterations = 1e5;\n  var geoM, m, fracA, fracB, fracM, key;\n\n  while (--maxIterations > 0 && fractionStack.length > 0) {\n    // Pop the a coordinate off the stack\n    fracA = fractionStack.pop();\n    geoA = geoStack.pop();\n    a = stack.pop();\n    // Add the a coordinate if it has not been added yet\n    key = fracA.toString();\n    if (!(key in fractions)) {\n      flatCoordinates.push(a[0], a[1]);\n      fractions[key] = true;\n    }\n    // Pop the b coordinate off the stack\n    fracB = fractionStack.pop();\n    geoB = geoStack.pop();\n    b = stack.pop();\n    // Find the m point between the a and b coordinates\n    fracM = (fracA + fracB) / 2;\n    geoM = interpolate(fracM);\n    m = transform(geoM);\n    if (squaredSegmentDistance(m[0], m[1], a[0], a[1],\n      b[0], b[1]) < squaredTolerance) {\n      // If the m point is sufficiently close to the straight line, then we\n      // discard it.  Just use the b coordinate and move on to the next line\n      // segment.\n      flatCoordinates.push(b[0], b[1]);\n      key = fracB.toString();\n      fractions[key] = true;\n    } else {\n      // Otherwise, we need to subdivide the current line segment.  Split it\n      // into two and push the two line segments onto the stack.\n      fractionStack.push(fracB, fracM, fracM, fracA);\n      stack.push(b, m, m, a);\n      geoStack.push(geoB, geoM, geoM, geoA);\n    }\n  }\n\n  return flatCoordinates;\n}\n\n\n/**\n * Generate a great-circle arcs between two lat/lon points.\n * @param {number} lon1 Longitude 1 in degrees.\n * @param {number} lat1 Latitude 1 in degrees.\n * @param {number} lon2 Longitude 2 in degrees.\n * @param {number} lat2 Latitude 2 in degrees.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function greatCircleArc(lon1, lat1, lon2, lat2, projection, squaredTolerance) {\n  var geoProjection = getProjection('EPSG:4326');\n\n  var cosLat1 = Math.cos(toRadians(lat1));\n  var sinLat1 = Math.sin(toRadians(lat1));\n  var cosLat2 = Math.cos(toRadians(lat2));\n  var sinLat2 = Math.sin(toRadians(lat2));\n  var cosDeltaLon = Math.cos(toRadians(lon2 - lon1));\n  var sinDeltaLon = Math.sin(toRadians(lon2 - lon1));\n  var d = sinLat1 * sinLat2 + cosLat1 * cosLat2 * cosDeltaLon;\n\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function(frac) {\n      if (1 <= d) {\n        return [lon2, lat2];\n      }\n      var D = frac * Math.acos(d);\n      var cosD = Math.cos(D);\n      var sinD = Math.sin(D);\n      var y = sinDeltaLon * cosLat2;\n      var x = cosLat1 * sinLat2 - sinLat1 * cosLat2 * cosDeltaLon;\n      var theta = Math.atan2(y, x);\n      var lat = Math.asin(sinLat1 * cosD + cosLat1 * sinD * Math.cos(theta));\n      var lon = toRadians(lon1) +\n            Math.atan2(Math.sin(theta) * sinD * cosLat1,\n              cosD - sinLat1 * Math.sin(lat));\n      return [toDegrees(lon), toDegrees(lat)];\n    }, getTransform(geoProjection, projection), squaredTolerance);\n}\n\n\n/**\n * Generate a meridian (line at constant longitude).\n * @param {number} lon Longitude.\n * @param {number} lat1 Latitude 1.\n * @param {number} lat2 Latitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function meridian(lon, lat1, lat2, projection, squaredTolerance) {\n  var epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function(frac) {\n      return [lon, lat1 + ((lat2 - lat1) * frac)];\n    },\n    getTransform(epsg4326Projection, projection), squaredTolerance);\n}\n\n\n/**\n * Generate a parallel (line at constant latitude).\n * @param {number} lat Latitude.\n * @param {number} lon1 Longitude 1.\n * @param {number} lon2 Longitude 2.\n * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function parallel(lat, lon1, lon2, projection, squaredTolerance) {\n  var epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n     */\n    function(frac) {\n      return [lon1 + ((lon2 - lon1) * frac), lat];\n    },\n    getTransform(epsg4326Projection, projection), squaredTolerance);\n}\n\n//# sourceMappingURL=geodesic.js.map","/**\n * @module ol/layer/Graticule\n */\nimport VectorLayer from './Vector.js';\nimport {assign} from '../obj.js';\nimport {degreesToStringHDMS} from '../coordinate';\nimport Text from '../style/Text';\nimport Fill from '../style/Fill';\nimport Stroke from '../style/Stroke';\nimport LineString from '../geom/LineString.js';\nimport VectorSource from '../source/Vector';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n  transformExtent\n} from '../proj';\nimport {getCenter, intersects, equals, getIntersection, isEmpty} from '../extent';\nimport {clamp} from '../math';\nimport Style from '../style/Style';\nimport Feature from '../Feature';\nimport {bbox} from '../loadingstrategy';\nimport {meridian, parallel} from '../geom/flat/geodesic';\nimport GeometryLayout from '../geom/GeometryLayout';\nimport Point from '../geom/Point';\nimport Collection from '../Collection';\n\n\n/**\n * @type {Stroke}\n * @private\n * @const\n */\nvar DEFAULT_STROKE_STYLE = new Stroke({\n  color: 'rgba(0,0,0,0.2)'\n});\n\n/**\n * @type {Array<number>}\n * @private\n */\nvar INTERVALS = [\n  90, 45, 30, 20, 10, 5, 2, 1, 0.5, 0.2, 0.1, 0.05, 0.01, 0.005, 0.002, 0.001\n];\n\n/**\n * @typedef {Object} GraticuleLabelDataType\n * @property {Point} geom\n * @property {string} text\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [maxLines=100] The maximum number of meridians and\n * parallels from the center of the map. The default value of 100 means that at\n * most 200 meridians and 200 parallels will be displayed. The default value is\n * appropriate for conformal projections like Spherical Mercator. If you\n * increase the value, more lines will be drawn and the drawing performance will\n * decrease.\n * @property {Stroke} [strokeStyle='rgba(0,0,0,0.2)'] The\n * stroke style to use for drawing the graticule. If not provided, a not fully\n * opaque black will be used.\n * @property {number} [targetSize=100] The target size of the graticule cells,\n * in pixels.\n * @property {boolean} [showLabels=false] Render a label with the respective\n * latitude/longitude for each graticule line.\n * @property {function(number):string} [lonLabelFormatter] Label formatter for\n * longitudes. This function is called with the longitude as argument, and\n * should return a formatted string representing the longitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {function(number):string} [latLabelFormatter] Label formatter for\n * latitudes. This function is called with the latitude as argument, and\n * should return a formatted string representing the latitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {number} [lonLabelPosition=0] Longitude label position in fractions\n * (0..1) of view extent. 0 means at the bottom of the viewport, 1 means at the\n * top.\n * @property {number} [latLabelPosition=1] Latitude label position in fractions\n * (0..1) of view extent. 0 means at the left of the viewport, 1 means at the\n * right.\n * @property {Text} [lonLabelStyle] Longitude label text\n * style. If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textBaseline: 'bottom',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: new Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textBaseline` configuration will not work well for\n * `lonLabelPosition` configurations that position labels close to the top of\n * the viewport.\n * @property {Text} [latLabelStyle] Latitude label text style.\n * If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textAlign: 'end',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textAlign` configuration will not work well for\n * `latLabelPosition` configurations that position labels close to the left of\n * the viewport.\n * @property {Array<number>} [intervals=[90, 45, 30, 20, 10, 5, 2, 1, 0.5, 0.2, 0.1, 0.05, 0.01, 0.005, 0.002, 0.001]]\n * Intervals (in degrees) for the graticule. Example to limit graticules to 30 and 10 degrees intervals:\n * ```js\n * [30, 10]\n * ```\n * @property {boolean} [wrapX=true] Whether to repeat the graticule horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer that renders a grid for a coordinate system.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @api\n */\nvar Graticule = /*@__PURE__*/(function (VectorLayer) {\n  function Graticule(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.maxLines;\n    delete baseOptions.strokeStyle;\n    delete baseOptions.targetSize;\n    delete baseOptions.showLabels;\n    delete baseOptions.lonLabelFormatter;\n    delete baseOptions.latLabelFormatter;\n    delete baseOptions.lonLabelPosition;\n    delete baseOptions.latLabelPosition;\n    delete baseOptions.lonLabelStyle;\n    delete baseOptions.latLabelStyle;\n    delete baseOptions.intervals;\n    VectorLayer.call(this, baseOptions);\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLat_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLon_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLat_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLon_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLatP_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLonP_ = Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLatP_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minLonP_ = -Infinity;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.targetSize_ = options.targetSize !== undefined ? options.targetSize : 100;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxLines_ = options.maxLines !== undefined ? options.maxLines : 100;\n\n    /**\n     * @type {Array<LineString>}\n     * @private\n     */\n    this.meridians_ = [];\n\n    /**\n     * @type {Array<LineString>}\n     * @private\n     */\n    this.parallels_ = [];\n\n    /**\n     * @type {Stroke}\n     * @private\n     */\n    this.strokeStyle_ = options.strokeStyle !== undefined ? options.strokeStyle : DEFAULT_STROKE_STYLE;\n\n    /**\n     * @type {import(\"../proj.js\").TransformFunction|undefined}\n     * @private\n     */\n    this.fromLonLatTransform_ = undefined;\n\n    /**\n     * @type {import(\"../proj.js\").TransformFunction|undefined}\n     * @private\n     */\n    this.toLonLatTransform_ = undefined;\n\n    /**\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.projectionCenterLonLat_ = null;\n\n    /**\n     * @type {Array<GraticuleLabelDataType>}\n     * @private\n     */\n    this.meridiansLabels_ = null;\n\n    /**\n     * @type {Array<GraticuleLabelDataType>}\n     * @private\n     */\n    this.parallelsLabels_ = null;\n\n    if (options.showLabels) {\n\n      /**\n       * @type {null|function(number):string}\n       * @private\n       */\n      this.lonLabelFormatter_ = options.lonLabelFormatter == undefined ?\n        degreesToStringHDMS.bind(this, 'EW') : options.lonLabelFormatter;\n\n      /**\n       * @type {function(number):string}\n       * @private\n       */\n      this.latLabelFormatter_ = options.latLabelFormatter == undefined ?\n        degreesToStringHDMS.bind(this, 'NS') : options.latLabelFormatter;\n\n      /**\n       * Longitude label position in fractions (0..1) of view extent. 0 means\n       * bottom, 1 means top.\n       * @type {number}\n       * @private\n       */\n      this.lonLabelPosition_ = options.lonLabelPosition == undefined ? 0 :\n        options.lonLabelPosition;\n\n      /**\n       * Latitude Label position in fractions (0..1) of view extent. 0 means left, 1\n       * means right.\n       * @type {number}\n       * @private\n       */\n      this.latLabelPosition_ = options.latLabelPosition == undefined ? 1 :\n        options.latLabelPosition;\n\n      /**\n       * @type {Object.<string,Style>}\n       * @private\n       */\n      this.lonLabelStyleCache_ = {};\n\n      /**\n       * @private\n       * @param {import(\"../Feature\").default} feature Feature\n       * @return {Style} style\n       */\n      this.lonLabelStyle_ = function(feature) {\n        var label = feature.get('graticule_label');\n        if (!this.lonLabelStyleCache_[label]) {\n          this.lonLabelStyleCache_[label] = new Style({\n            text: options.lonLabelStyle !== undefined ? options.lonLabelStyle :\n              new Text({\n                text: label,\n                font: '12px Calibri,sans-serif',\n                textBaseline: 'bottom',\n                fill: new Fill({\n                  color: 'rgba(0,0,0,1)'\n                }),\n                stroke: new Stroke({\n                  color: 'rgba(255,255,255,1)',\n                  width: 3\n                })\n              })\n          });\n        }\n        return this.lonLabelStyleCache_[label];\n      }.bind(this);\n\n      /**\n       * @type {Object.<string,Style>}\n       * @private\n       */\n      this.latLabelStyleCache_ = {};\n\n      /**\n       * @private\n       * @param {import(\"../Feature\").default} feature Feature\n       * @return {Style} style\n       */\n      this.latLabelStyle_ = function(feature) {\n        var label = feature.get('graticule_label');\n        if (!this.latLabelStyleCache_[label]) {\n          this.latLabelStyleCache_[label] = new Style({\n            text: options.latLabelStyle !== undefined ? options.latLabelStyle :\n              new Text({\n                text: label,\n                font: '12px Calibri,sans-serif',\n                textAlign: 'right',\n                fill: new Fill({\n                  color: 'rgba(0,0,0,1)'\n                }),\n                stroke: new Stroke({\n                  color: 'rgba(255,255,255,1)',\n                  width: 3\n                })\n              })\n          });\n        }\n        return this.latLabelStyleCache_[label];\n      }.bind(this);\n\n      this.meridiansLabels_ = [];\n      this.parallelsLabels_ = [];\n    }\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.intervals_ = options.intervals !== undefined ? options.intervals : INTERVALS;\n\n    // use a source with a custom loader for lines & text\n    this.setSource(\n      new VectorSource({\n        loader: this.loaderFunction.bind(this),\n        strategy: bbox,\n        features: new Collection(),\n        overlaps: false,\n        useSpatialIndex: false,\n        wrapX: options.wrapX\n      })\n    );\n\n    /**\n     * feature pool to use when updating graticule\n     * @type {Array<Feature>}\n     * @private\n     */\n    this.featurePool_ = [];\n\n    /**\n     * @type {Style}\n     * @private\n     */\n    this.lineStyle_ = new Style({\n      stroke: this.strokeStyle_\n    });\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    this.setRenderOrder(null);\n\n    this.renderBuffer_ = 0;\n\n    this.updateWhileAnimating_ = true;\n    this.updateWhileInteracting_ = true;\n\n    this.tmpExtent_ = null;\n  }\n\n  if ( VectorLayer ) Graticule.__proto__ = VectorLayer;\n  Graticule.prototype = Object.create( VectorLayer && VectorLayer.prototype );\n  Graticule.prototype.constructor = Graticule;\n\n  /**\n   * Update geometries in the source based on current view\n   * @param {import(\"../extent\").Extent} extent Extent\n   * @param {number} resolution Resolution\n   * @param {import(\"../proj/Projection.js\").default} projection Projection\n   */\n  Graticule.prototype.loaderFunction = function loaderFunction (extent, resolution, projection) {\n    var source = /** @type {import(\"../source/Vector.js\").default} */ (this.getSource());\n\n    // only consider the intersection between our own extent & the requested one\n    var layerExtent = this.getExtent() || [-Infinity, -Infinity, Infinity, Infinity];\n    var renderExtent = getIntersection(layerExtent, extent, this.tmpExtent_);\n\n    // we should not keep track of loaded extents\n    setTimeout(function() {\n      source.removeLoadedExtent(extent);\n    }, 0);\n\n    if (this.renderedExtent_ && equals(this.renderedExtent_, renderExtent)) {\n      return;\n    }\n    this.renderedExtent_ = renderExtent;\n\n    // bail out if nothing to render\n    if (isEmpty(renderExtent)) {\n      return;\n    }\n\n    // update projection info\n    var center = getCenter(renderExtent);\n    var squaredTolerance = resolution * resolution / 4;\n\n    var updateProjectionInfo = !this.projection_ ||\n      !equivalentProjection(this.projection_, projection);\n\n    if (updateProjectionInfo) {\n      this.updateProjectionInfo_(projection);\n    }\n\n    this.createGraticule_(renderExtent, center, resolution, squaredTolerance);\n\n    // first make sure we have enough features in the pool\n    var featureCount = this.meridians_.length + this.parallels_.length;\n    if (this.meridiansLabels_) {\n      featureCount += this.meridiansLabels_.length;\n    }\n    if (this.parallelsLabels_) {\n      featureCount += this.parallelsLabels_.length;\n    }\n\n    var feature;\n    while (featureCount > this.featurePool_.length) {\n      feature = new Feature();\n      this.featurePool_.push(feature);\n    }\n\n    var featuresColl = source.getFeaturesCollection();\n    featuresColl.clear();\n    var poolIndex = 0;\n\n    // add features for the lines & labels\n    var i, l;\n    for (i = 0, l = this.meridians_.length; i < l; ++i) {\n      feature = this.featurePool_[poolIndex++];\n      feature.setGeometry(this.meridians_[i]);\n      feature.setStyle(this.lineStyle_);\n      featuresColl.push(feature);\n    }\n    for (i = 0, l = this.parallels_.length; i < l; ++i) {\n      feature = this.featurePool_[poolIndex++];\n      feature.setGeometry(this.parallels_[i]);\n      feature.setStyle(this.lineStyle_);\n      featuresColl.push(feature);\n    }\n    var labelData;\n    if (this.meridiansLabels_) {\n      for (i = 0, l = this.meridiansLabels_.length; i < l; ++i) {\n        labelData = this.meridiansLabels_[i];\n        feature = this.featurePool_[poolIndex++];\n        feature.setGeometry(labelData.geom);\n        feature.setStyle(this.lonLabelStyle_);\n        feature.set('graticule_label', labelData.text);\n        featuresColl.push(feature);\n      }\n    }\n    if (this.parallelsLabels_) {\n      for (i = 0, l = this.parallelsLabels_.length; i < l; ++i) {\n        labelData = this.parallelsLabels_[i];\n        feature = this.featurePool_[poolIndex++];\n        feature.setGeometry(labelData.geom);\n        feature.setStyle(this.latLabelStyle_);\n        feature.set('graticule_label', labelData.text);\n        featuresColl.push(feature);\n      }\n    }\n  };\n\n  /**\n   * @param {number} lon Longitude.\n   * @param {number} minLat Minimal latitude.\n   * @param {number} maxLat Maximal latitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {number} Index.\n   * @private\n   */\n  Graticule.prototype.addMeridian_ = function addMeridian_ (lon, minLat, maxLat, squaredTolerance, extent, index) {\n    var lineString = this.getMeridian_(lon, minLat, maxLat, squaredTolerance, index);\n    if (intersects(lineString.getExtent(), extent)) {\n      if (this.meridiansLabels_) {\n        var textPoint = this.getMeridianPoint_(lineString, extent, index);\n        this.meridiansLabels_[index] = {\n          geom: textPoint,\n          text: this.lonLabelFormatter_(lon)\n        };\n      }\n      this.meridians_[index++] = lineString;\n    }\n    return index;\n  };\n\n  /**\n   * @param {number} lat Latitude.\n   * @param {number} minLon Minimal longitude.\n   * @param {number} maxLon Maximal longitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {number} Index.\n   * @private\n   */\n  Graticule.prototype.addParallel_ = function addParallel_ (lat, minLon, maxLon, squaredTolerance, extent, index) {\n    var lineString = this.getParallel_(lat, minLon, maxLon, squaredTolerance, index);\n    if (intersects(lineString.getExtent(), extent)) {\n      if (this.parallelsLabels_) {\n        var textPoint = this.getParallelPoint_(lineString, extent, index);\n        this.parallelsLabels_[index] = {\n          geom: textPoint,\n          text: this.latLabelFormatter_(lat)\n        };\n      }\n      this.parallels_[index++] = lineString;\n    }\n    return index;\n  };\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @private\n   */\n  Graticule.prototype.createGraticule_ = function createGraticule_ (extent, center, resolution, squaredTolerance) {\n    var interval = this.getInterval_(resolution);\n    if (interval == -1) {\n      this.meridians_.length = this.parallels_.length = 0;\n      if (this.meridiansLabels_) {\n        this.meridiansLabels_.length = 0;\n      }\n      if (this.parallelsLabels_) {\n        this.parallelsLabels_.length = 0;\n      }\n      return;\n    }\n\n    var centerLonLat = this.toLonLatTransform_(center);\n    var centerLon = centerLonLat[0];\n    var centerLat = centerLonLat[1];\n    var maxLines = this.maxLines_;\n    var cnt, idx, lat, lon;\n\n    var validExtent = [\n      Math.max(extent[0], this.minLonP_),\n      Math.max(extent[1], this.minLatP_),\n      Math.min(extent[2], this.maxLonP_),\n      Math.min(extent[3], this.maxLatP_)\n    ];\n\n    validExtent = transformExtent(validExtent, this.projection_, 'EPSG:4326');\n    var maxLat = validExtent[3];\n    var maxLon = validExtent[2];\n    var minLat = validExtent[1];\n    var minLon = validExtent[0];\n\n    // Create meridians\n\n    centerLon = Math.floor(centerLon / interval) * interval;\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n    idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, 0);\n\n    cnt = 0;\n    while (lon != this.minLon_ && cnt++ < maxLines) {\n      lon = Math.max(lon - interval, this.minLon_);\n      idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, idx);\n    }\n\n    lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n    cnt = 0;\n    while (lon != this.maxLon_ && cnt++ < maxLines) {\n      lon = Math.min(lon + interval, this.maxLon_);\n      idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, idx);\n    }\n\n    this.meridians_.length = idx;\n    if (this.meridiansLabels_) {\n      this.meridiansLabels_.length = idx;\n    }\n\n    // Create parallels\n\n    centerLat = Math.floor(centerLat / interval) * interval;\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n    idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, 0);\n\n    cnt = 0;\n    while (lat != this.minLat_ && cnt++ < maxLines) {\n      lat = Math.max(lat - interval, this.minLat_);\n      idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, idx);\n    }\n\n    lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n    cnt = 0;\n    while (lat != this.maxLat_ && cnt++ < maxLines) {\n      lat = Math.min(lat + interval, this.maxLat_);\n      idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, idx);\n    }\n\n    this.parallels_.length = idx;\n    if (this.parallelsLabels_) {\n      this.parallelsLabels_.length = idx;\n    }\n\n  };\n\n  /**\n   * @param {number} resolution Resolution.\n   * @return {number} The interval in degrees.\n   * @private\n   */\n  Graticule.prototype.getInterval_ = function getInterval_ (resolution) {\n    var centerLon = this.projectionCenterLonLat_[0];\n    var centerLat = this.projectionCenterLonLat_[1];\n    var interval = -1;\n    var target = Math.pow(this.targetSize_ * resolution, 2);\n    /** @type {Array<number>} **/\n    var p1 = [];\n    /** @type {Array<number>} **/\n    var p2 = [];\n    for (var i = 0, ii = this.intervals_.length; i < ii; ++i) {\n      var delta = this.intervals_[i] / 2;\n      p1[0] = centerLon - delta;\n      p1[1] = centerLat - delta;\n      p2[0] = centerLon + delta;\n      p2[1] = centerLat + delta;\n      this.fromLonLatTransform_(p1, p1);\n      this.fromLonLatTransform_(p2, p2);\n      var dist = Math.pow(p2[0] - p1[0], 2) + Math.pow(p2[1] - p1[1], 2);\n      if (dist <= target) {\n        break;\n      }\n      interval = this.intervals_[i];\n    }\n    return interval;\n  };\n\n  /**\n   * @param {number} lon Longitude.\n   * @param {number} minLat Minimal latitude.\n   * @param {number} maxLat Maximal latitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} The meridian line string.\n   * @param {number} index Index.\n   * @private\n   */\n  Graticule.prototype.getMeridian_ = function getMeridian_ (lon, minLat, maxLat, squaredTolerance, index) {\n    var flatCoordinates = meridian(lon, minLat, maxLat, this.projection_, squaredTolerance);\n    var lineString = this.meridians_[index];\n    if (!lineString) {\n      lineString = this.meridians_[index] = new LineString(flatCoordinates, GeometryLayout.XY);\n    } else {\n      lineString.setFlatCoordinates(GeometryLayout.XY, flatCoordinates);\n      lineString.changed();\n    }\n    return lineString;\n  };\n\n  /**\n   * @param {LineString} lineString Meridian\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {Point} Meridian point.\n   * @private\n   */\n  Graticule.prototype.getMeridianPoint_ = function getMeridianPoint_ (lineString, extent, index) {\n    var flatCoordinates = lineString.getFlatCoordinates();\n    var clampedBottom = Math.max(extent[1], flatCoordinates[1]);\n    var clampedTop = Math.min(extent[3], flatCoordinates[flatCoordinates.length - 1]);\n    var lat = clamp(\n      extent[1] + Math.abs(extent[1] - extent[3]) * this.lonLabelPosition_,\n      clampedBottom, clampedTop);\n    var coordinate = [flatCoordinates[0], lat];\n    var point;\n    if (index in this.meridiansLabels_) {\n      point = this.meridiansLabels_[index].geom;\n      point.setCoordinates(coordinate);\n    } else {\n      point = new Point(coordinate);\n    }\n    return point;\n  };\n\n  /**\n   * Get the list of meridians.  Meridians are lines of equal longitude.\n   * @return {Array<LineString>} The meridians.\n   * @api\n   */\n  Graticule.prototype.getMeridians = function getMeridians () {\n    return this.meridians_;\n  };\n\n  /**\n   * @param {number} lat Latitude.\n   * @param {number} minLon Minimal longitude.\n   * @param {number} maxLon Maximal longitude.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} The parallel line string.\n   * @param {number} index Index.\n   * @private\n   */\n  Graticule.prototype.getParallel_ = function getParallel_ (lat, minLon, maxLon, squaredTolerance, index) {\n    var flatCoordinates = parallel(lat, minLon, maxLon, this.projection_, squaredTolerance);\n    var lineString = this.parallels_[index];\n    if (!lineString) {\n      lineString = new LineString(flatCoordinates, GeometryLayout.XY);\n    } else {\n      lineString.setFlatCoordinates(GeometryLayout.XY, flatCoordinates);\n      lineString.changed();\n    }\n    return lineString;\n  };\n\n\n  /**\n   * @param {LineString} lineString Parallels.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} index Index.\n   * @return {Point} Parallel point.\n   * @private\n   */\n  Graticule.prototype.getParallelPoint_ = function getParallelPoint_ (lineString, extent, index) {\n    var flatCoordinates = lineString.getFlatCoordinates();\n    var clampedLeft = Math.max(extent[0], flatCoordinates[0]);\n    var clampedRight = Math.min(extent[2], flatCoordinates[flatCoordinates.length - 2]);\n    var lon = clamp(\n      extent[0] + Math.abs(extent[0] - extent[2]) * this.latLabelPosition_,\n      clampedLeft, clampedRight);\n    var coordinate = [lon, flatCoordinates[1]];\n    var point;\n    if (index in this.parallelsLabels_) {\n      point = this.parallelsLabels_[index].geom;\n      point.setCoordinates(coordinate);\n    } else {\n      point = new Point(coordinate);\n    }\n    return point;\n  };\n\n  /**\n   * Get the list of parallels.  Parallels are lines of equal latitude.\n   * @return {Array<LineString>} The parallels.\n   * @api\n   */\n  Graticule.prototype.getParallels = function getParallels () {\n    return this.parallels_;\n  };\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  Graticule.prototype.updateProjectionInfo_ = function updateProjectionInfo_ (projection) {\n    var epsg4326Projection = getProjection('EPSG:4326');\n\n    var worldExtent = projection.getWorldExtent();\n    var worldExtentP = transformExtent(worldExtent, epsg4326Projection, projection);\n\n    this.maxLat_ = worldExtent[3];\n    this.maxLon_ = worldExtent[2];\n    this.minLat_ = worldExtent[1];\n    this.minLon_ = worldExtent[0];\n\n    this.maxLatP_ = worldExtentP[3];\n    this.maxLonP_ = worldExtentP[2];\n    this.minLatP_ = worldExtentP[1];\n    this.minLonP_ = worldExtentP[0];\n\n    this.fromLonLatTransform_ = getTransform(epsg4326Projection, projection);\n\n    this.toLonLatTransform_ = getTransform(projection, epsg4326Projection);\n\n    this.projectionCenterLonLat_ = this.toLonLatTransform_(getCenter(projection.getExtent()));\n\n    this.projection_ = projection;\n  };\n\n  return Graticule;\n}(VectorLayer));\n\n\nexport default Graticule;\n\n//# sourceMappingURL=Graticule.js.map","/**\n * @module ol/layer/Heatmap\n */\nimport {listen} from '../events.js';\nimport {getChangeEventType} from '../Object.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport VectorLayer from './Vector.js';\nimport {assign} from '../obj.js';\nimport WebGLPointsLayerRenderer from '../renderer/webgl/PointsLayer';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\n * of the heatmap, specified as an array of CSS color strings.\n * @property {number} [radius=8] Radius size in pixels.\n * @property {number} [blur=15] Blur size in pixels.\n * @property {number} [shadow=250] Shadow size in pixels.\n * @property {string|function(import(\"../Feature.js\").default):number} [weight='weight'] The feature\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\n * should range from 0 to 1 (and values outside will be clamped to that range).\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  BLUR: 'blur',\n  GRADIENT: 'gradient',\n  RADIUS: 'radius'\n};\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\n\n\n/**\n * @classdesc\n * Layer for rendering vector data as a heatmap.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @api\n */\nvar Heatmap = /*@__PURE__*/(function (VectorLayer) {\n  function Heatmap(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.gradient;\n    delete baseOptions.radius;\n    delete baseOptions.blur;\n    delete baseOptions.shadow;\n    delete baseOptions.weight;\n    VectorLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.gradient_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.shadow_ = options.shadow !== undefined ? options.shadow : 250;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.circleImage_ = undefined;\n\n    /**\n     * @private\n     * @type {Array<Array<import(\"../style/Style.js\").default>>}\n     */\n    this.styleCache_ = null;\n\n    listen(this,\n      getChangeEventType(Property.GRADIENT),\n      this.handleGradientChanged_, this);\n\n    this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\n\n    this.setBlur(options.blur !== undefined ? options.blur : 15);\n\n    this.setRadius(options.radius !== undefined ? options.radius : 8);\n\n    var weight = options.weight ? options.weight : 'weight';\n    if (typeof weight === 'string') {\n      this.weightFunction_ = function(feature) {\n        return feature.get(weight);\n      };\n    } else {\n      this.weightFunction_ = weight;\n    }\n\n    // For performance reasons, don't sort the features before rendering.\n    // The render order is not relevant for a heatmap representation.\n    this.setRenderOrder(null);\n  }\n\n  if ( VectorLayer ) Heatmap.__proto__ = VectorLayer;\n  Heatmap.prototype = Object.create( VectorLayer && VectorLayer.prototype );\n  Heatmap.prototype.constructor = Heatmap;\n\n  /**\n   * Return the blur size in pixels.\n   * @return {number} Blur size in pixels.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.getBlur = function getBlur () {\n    return /** @type {number} */ (this.get(Property.BLUR));\n  };\n\n  /**\n   * Return the gradient colors as array of strings.\n   * @return {Array<string>} Colors.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.getGradient = function getGradient () {\n    return /** @type {Array<string>} */ (this.get(Property.GRADIENT));\n  };\n\n  /**\n   * Return the size of the radius in pixels.\n   * @return {number} Radius size in pixel.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.getRadius = function getRadius () {\n    return /** @type {number} */ (this.get(Property.RADIUS));\n  };\n\n  /**\n   * @private\n   */\n  Heatmap.prototype.handleGradientChanged_ = function handleGradientChanged_ () {\n    this.gradient_ = createGradient(this.getGradient());\n  };\n\n  /**\n   * Set the blur size in pixels.\n   * @param {number} blur Blur size in pixels.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.setBlur = function setBlur (blur) {\n    this.set(Property.BLUR, blur);\n  };\n\n  /**\n   * Set the gradient colors as array of strings.\n   * @param {Array<string>} colors Gradient.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.setGradient = function setGradient (colors) {\n    this.set(Property.GRADIENT, colors);\n  };\n\n  /**\n   * Set the size of the radius in pixels.\n   * @param {number} radius Radius size in pixel.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.setRadius = function setRadius (radius) {\n    this.set(Property.RADIUS, radius);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Heatmap.prototype.createRenderer = function createRenderer () {\n    return new WebGLPointsLayerRenderer(this, {\n      vertexShader: \"\\n        precision mediump float;\\n        attribute vec2 a_position;\\n        attribute vec2 a_texCoord;\\n        attribute float a_rotateWithView;\\n        attribute vec2 a_offsets;\\n        attribute float a_opacity;\\n        \\n        uniform mat4 u_projectionMatrix;\\n        uniform mat4 u_offsetScaleMatrix;\\n        uniform mat4 u_offsetRotateMatrix;\\n        uniform float u_size;\\n        \\n        varying vec2 v_texCoord;\\n        varying float v_opacity;\\n        \\n        void main(void) {\\n          mat4 offsetMatrix = u_offsetScaleMatrix;\\n          if (a_rotateWithView == 1.0) {\\n            offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n          }\\n          vec4 offsets = offsetMatrix * vec4(a_offsets, 0.0, 0.0);\\n          gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets * u_size;\\n          v_texCoord = a_texCoord;\\n          v_opacity = a_opacity;\\n        }\",\n      fragmentShader: \"\\n        precision mediump float;\\n        uniform float u_resolution;\\n        uniform float u_blurSlope;\\n        \\n        varying vec2 v_texCoord;\\n        varying float v_opacity;\\n        \\n        void main(void) {\\n          vec2 texCoord = v_texCoord * 2.0 - vec2(1.0, 1.0);\\n          float sqRadius = texCoord.x * texCoord.x + texCoord.y * texCoord.y;\\n          float value = (1.0 - sqrt(sqRadius)) * u_blurSlope;\\n          float alpha = smoothstep(0.0, 1.0, value) * v_opacity;\\n          gl_FragColor = vec4(1.0, 1.0, 1.0, alpha);\\n        }\",\n      uniforms: {\n        u_size: function() {\n          return (this.get(Property.RADIUS) + this.get(Property.BLUR)) * 2;\n        }.bind(this),\n        u_blurSlope: function() {\n          return this.get(Property.RADIUS) / Math.max(1, this.get(Property.BLUR));\n        }.bind(this),\n        u_resolution: function(frameState) {\n          return frameState.viewState.resolution;\n        }\n      },\n      postProcesses: [\n        {\n          fragmentShader: \"\\n            precision mediump float;\\n\\n            uniform sampler2D u_image;\\n            uniform sampler2D u_gradientTexture;\\n\\n            varying vec2 v_texCoord;\\n            varying vec2 v_screenCoord;\\n\\n            void main() {\\n              vec4 color = texture2D(u_image, v_texCoord);\\n              gl_FragColor.a = color.a;\\n              gl_FragColor.rgb = texture2D(u_gradientTexture, vec2(0.5, color.a)).rgb;\\n              gl_FragColor.rgb *= gl_FragColor.a;\\n            }\",\n          uniforms: {\n            u_gradientTexture: this.gradient_\n          }\n        }\n      ],\n      opacityCallback: function(feature) {\n        return this.weightFunction_(feature);\n      }.bind(this)\n    });\n  };\n\n  return Heatmap;\n}(VectorLayer));\n\n\n/**\n * @param {Array<string>} colors A list of colored.\n * @return {HTMLCanvasElement} canvas with gradient texture.\n */\nfunction createGradient(colors) {\n  var width = 1;\n  var height = 256;\n  var context = createCanvasContext2D(width, height);\n\n  var gradient = context.createLinearGradient(0, 0, width, height);\n  var step = 1 / (colors.length - 1);\n  for (var i = 0, ii = colors.length; i < ii; ++i) {\n    gradient.addColorStop(i * step, colors[i]);\n  }\n\n  context.fillStyle = gradient;\n  context.fillRect(0, 0, width, height);\n\n  return context.canvas;\n}\n\n\nexport default Heatmap;\n\n//# sourceMappingURL=Heatmap.js.map","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport ImageCanvas from '../../ImageCanvas.js';\nimport ViewHint from '../../ViewHint.js';\nimport {equals} from '../../array.js';\nimport {getHeight, getWidth, isEmpty, scaleFromCenter} from '../../extent.js';\nimport {assign} from '../../obj.js';\nimport CanvasImageLayerRenderer from './ImageLayer.js';\nimport CanvasVectorLayerRenderer from './VectorLayer.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasVectorImageLayerRenderer = /*@__PURE__*/(function (CanvasImageLayerRenderer) {\n  function CanvasVectorImageLayerRenderer(layer) {\n    CanvasImageLayerRenderer.call(this, layer);\n\n    /**\n     * @type {!Array<string>}\n     */\n    this.skippedFeatures_ = [];\n\n    /**\n     * @private\n     * @type {import(\"./VectorLayer.js\").default}\n     */\n    this.vectorRenderer_ = new CanvasVectorLayerRenderer(layer);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.layerImageRatio_ = layer.getImageRatio();\n\n  }\n\n  if ( CanvasImageLayerRenderer ) CanvasVectorImageLayerRenderer.__proto__ = CanvasImageLayerRenderer;\n  CanvasVectorImageLayerRenderer.prototype = Object.create( CanvasImageLayerRenderer && CanvasImageLayerRenderer.prototype );\n  CanvasVectorImageLayerRenderer.prototype.constructor = CanvasVectorImageLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorImageLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    this.vectorRenderer_.dispose();\n    CanvasImageLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorImageLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var pixelRatio = frameState.pixelRatio;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    var hints = frameState.viewHints;\n    var vectorRenderer = this.vectorRenderer_;\n    var renderedExtent = frameState.extent;\n    if (this.layerImageRatio_ !== 1) {\n      renderedExtent = renderedExtent.slice(0);\n      scaleFromCenter(renderedExtent, this.layerImageRatio_);\n    }\n\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] && !isEmpty(renderedExtent)) {\n      var skippedFeatures = this.skippedFeatures_;\n      var context = vectorRenderer.context;\n      var imageFrameState = /** @type {import(\"../../PluggableMap.js\").FrameState} */ (assign({}, frameState, {\n        size: [\n          getWidth(renderedExtent) / viewResolution,\n          getHeight(renderedExtent) / viewResolution\n        ],\n        viewState: /** @type {import(\"../../View.js\").State} */ (assign({}, frameState.viewState, {\n          rotation: 0\n        }))\n      }));\n      var newSkippedFeatures = Object.keys(imageFrameState.skippedFeatureUids).sort();\n      var image = new ImageCanvas(renderedExtent, viewResolution, pixelRatio, context.canvas, function(callback) {\n        if (vectorRenderer.prepareFrame(imageFrameState, layerState) &&\n              (vectorRenderer.replayGroupChanged ||\n              !equals(skippedFeatures, newSkippedFeatures))) {\n          context.canvas.width = imageFrameState.size[0] * pixelRatio;\n          context.canvas.height = imageFrameState.size[1] * pixelRatio;\n          vectorRenderer.renderFrame(imageFrameState, layerState);\n          skippedFeatures = newSkippedFeatures;\n          callback();\n        }\n      });\n      if (this.loadImage(image)) {\n        this.image_ = image;\n        this.skippedFeatures_ = skippedFeatures;\n      }\n    }\n\n    if (this.image_) {\n      var image$1 = this.image_;\n      var imageResolution = image$1.getResolution();\n      var imagePixelRatio = image$1.getPixelRatio();\n      this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n    }\n\n    return !!this.image_;\n  };\n\n  /**\n   * @override\n   */\n  CanvasVectorImageLayerRenderer.prototype.preRender = function preRender () {};\n\n  /**\n   * @override\n   */\n  CanvasVectorImageLayerRenderer.prototype.postRender = function postRender () {};\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback);\n    } else {\n      return CanvasImageLayerRenderer.prototype.forEachFeatureAtCoordinate.call(this, coordinate, frameState, hitTolerance, callback);\n    }\n  };\n\n  return CanvasVectorImageLayerRenderer;\n}(CanvasImageLayerRenderer));\n\n\nexport default CanvasVectorImageLayerRenderer;\n\n//# sourceMappingURL=VectorImageLayer.js.map","/**\n * @module ol/layer/VectorImage\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport {assign} from '../obj.js';\nimport CanvasVectorImageLayerRenderer from '../renderer/canvas/VectorImageLayer.js';\n\n/**\n * @typedef {import(\"./BaseVector.js\").Options} Options\n * @property {number} [imageRatio=1] Ratio by which the rendered extent should be larger than the\n * viewport extent. A larger ratio avoids cut images during panning, but will cause a decrease in performance.\n */\n\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar VectorImageLayer = /*@__PURE__*/(function (BaseVectorLayer) {\n  function VectorImageLayer(opt_options) {\n    var options = opt_options ? opt_options : /** @type {Options} */ ({});\n\n    var baseOptions = assign({}, options);\n    delete baseOptions.imageRatio;\n    BaseVectorLayer.call(this, baseOptions);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.imageRatio_ = options.imageRatio !== undefined ? options.imageRatio : 1;\n\n  }\n\n  if ( BaseVectorLayer ) VectorImageLayer.__proto__ = BaseVectorLayer;\n  VectorImageLayer.prototype = Object.create( BaseVectorLayer && BaseVectorLayer.prototype );\n  VectorImageLayer.prototype.constructor = VectorImageLayer;\n\n  /**\n   * @return {number} Ratio between rendered extent size and viewport extent size.\n   */\n  VectorImageLayer.prototype.getImageRatio = function getImageRatio () {\n    return this.imageRatio_;\n  };\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  VectorImageLayer.prototype.createRenderer = function createRenderer () {\n    return new CanvasVectorImageLayerRenderer(this);\n  };\n\n  return VectorImageLayer;\n}(BaseVectorLayer));\n\n\nexport default VectorImageLayer;\n\n//# sourceMappingURL=VectorImage.js.map","/**\n * @module ol/layer/VectorTile\n */\nimport {assert} from '../asserts.js';\nimport TileProperty from './TileProperty.js';\nimport BaseVectorLayer from './BaseVector.js';\nimport VectorTileRenderType from './VectorTileRenderType.js';\nimport CanvasVectorTileLayerRenderer from '../renderer/canvas/VectorTileLayer.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {import(\"./VectorTileRenderType.js\").default|string} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but point symbols and texts\n *    are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *\n * When `declutter` is set to `true`, `'hybrid'` will be used instead of `'image'`.\n * @property {import(\"../source/VectorTile.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority. When set to `true`, a `renderMode` of `'image'` will be overridden with\n * `'hybrid'`.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @param {Options=} opt_options Options.\n * @api\n */\nvar VectorTileLayer = /*@__PURE__*/(function (BaseVectorLayer) {\n  function VectorTileLayer(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var baseOptions = /** @type {Object} */ (assign({}, options));\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n\n    BaseVectorLayer.call(/** @type {import(\"./Vector.js\").Options} */ this, (baseOptions));\n\n    var renderMode = options.renderMode || VectorTileRenderType.HYBRID;\n    assert(renderMode == undefined ||\n       renderMode == VectorTileRenderType.IMAGE ||\n       renderMode == VectorTileRenderType.HYBRID,\n    28); // `renderMode` must be `'image'` or `'hybrid'`\n\n    if (options.declutter && renderMode == VectorTileRenderType.IMAGE) {\n      renderMode = VectorTileRenderType.HYBRID;\n    }\n\n    /**\n     * @private\n     * @type {VectorTileRenderType}\n     */\n    this.renderMode_ = renderMode;\n\n    this.setPreload(options.preload ? options.preload : 0);\n    this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n      options.useInterimTilesOnError : true);\n\n  }\n\n  if ( BaseVectorLayer ) VectorTileLayer.__proto__ = BaseVectorLayer;\n  VectorTileLayer.prototype = Object.create( BaseVectorLayer && BaseVectorLayer.prototype );\n  VectorTileLayer.prototype.constructor = VectorTileLayer;\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  VectorTileLayer.prototype.createRenderer = function createRenderer () {\n    return new CanvasVectorTileLayerRenderer(this);\n  };\n\n  /**\n   * @return {VectorTileRenderType} The render mode.\n   */\n  VectorTileLayer.prototype.getRenderMode = function getRenderMode () {\n    return this.renderMode_;\n  };\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  VectorTileLayer.prototype.getPreload = function getPreload () {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  };\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  VectorTileLayer.prototype.getUseInterimTilesOnError = function getUseInterimTilesOnError () {\n    return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n  };\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  VectorTileLayer.prototype.setPreload = function setPreload (preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  };\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  VectorTileLayer.prototype.setUseInterimTilesOnError = function setUseInterimTilesOnError (useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  };\n\n  return VectorTileLayer;\n}(BaseVectorLayer));\n\n\n/**\n * Return the associated {@link module:ol/source/VectorTile vectortilesource} of the layer.\n * @function\n * @return {import(\"../source/VectorTile.js\").default} Source.\n * @api\n */\nVectorTileLayer.prototype.getSource;\nexport default VectorTileLayer;\n\n//# sourceMappingURL=VectorTile.js.map","/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\n\nimport {TRUE} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Interaction from './Interaction.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array<typeof import(\"../format/Feature.js\").default>} [formatConstructors] Format constructors.\n * @property {import(\"../source/Vector.js\").default} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {HTMLElement} [target] The element that is used as the drop target, default is the viewport element.\n */\n\n\n/**\n * @enum {string}\n */\nvar DragAndDropEventType = {\n  /**\n   * Triggered when features are added\n   * @event DragAndDropEvent#addfeatures\n   * @api\n   */\n  ADD_FEATURES: 'addfeatures'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n */\nvar DragAndDropEvent = /*@__PURE__*/(function (Event) {\n  function DragAndDropEvent(type, file, opt_features, opt_projection) {\n\n    Event.call(this, type);\n\n    /**\n     * The features parsed from dropped data.\n     * @type {Array<import(\"../Feature.js\").FeatureLike>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n\n    /**\n     * The dropped file.\n     * @type {File}\n     * @api\n     */\n    this.file = file;\n\n    /**\n     * The feature projection.\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     * @api\n     */\n    this.projection = opt_projection;\n\n  }\n\n  if ( Event ) DragAndDropEvent.__proto__ = Event;\n  DragAndDropEvent.prototype = Object.create( Event && Event.prototype );\n  DragAndDropEvent.prototype.constructor = DragAndDropEvent;\n\n  return DragAndDropEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n * @api\n *\n * @fires DragAndDropEvent\n */\nvar DragAndDrop = /*@__PURE__*/(function (Interaction) {\n  function DragAndDrop(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(this, {\n      handleEvent: TRUE\n    });\n\n    /**\n     * @private\n     * @type {Array<typeof import(\"../format/Feature.js\").default>}\n     */\n    this.formatConstructors_ = options.formatConstructors ?\n      options.formatConstructors : [];\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = options.projection ?\n      getProjection(options.projection) : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.dropListenKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../source/Vector.js\").default}\n     */\n    this.source_ = options.source || null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target = options.target ? options.target : null;\n\n  }\n\n  if ( Interaction ) DragAndDrop.__proto__ = Interaction;\n  DragAndDrop.prototype = Object.create( Interaction && Interaction.prototype );\n  DragAndDrop.prototype.constructor = DragAndDrop;\n\n  /**\n   * @param {File} file File.\n   * @param {Event} event Load event.\n   * @private\n   */\n  DragAndDrop.prototype.handleResult_ = function handleResult_ (file, event) {\n    var result = event.target.result;\n    var map = this.getMap();\n    var projection = this.projection_;\n    if (!projection) {\n      var view = map.getView();\n      projection = view.getProjection();\n    }\n\n    var formatConstructors = this.formatConstructors_;\n    var features = [];\n    for (var i = 0, ii = formatConstructors.length; i < ii; ++i) {\n      var format = new formatConstructors[i]();\n      features = this.tryReadFeatures_(format, result, {\n        featureProjection: projection\n      });\n      if (features && features.length > 0) {\n        break;\n      }\n    }\n    if (this.source_) {\n      this.source_.clear();\n      this.source_.addFeatures(features);\n    }\n    this.dispatchEvent(\n      new DragAndDropEvent(\n        DragAndDropEventType.ADD_FEATURES, file,\n        features, projection));\n  };\n\n  /**\n   * @private\n   */\n  DragAndDrop.prototype.registerListeners_ = function registerListeners_ () {\n    var map = this.getMap();\n    if (map) {\n      var dropArea = this.target ? this.target : map.getViewport();\n      this.dropListenKeys_ = [\n        listen(dropArea, EventType.DROP, handleDrop, this),\n        listen(dropArea, EventType.DRAGENTER, handleStop, this),\n        listen(dropArea, EventType.DRAGOVER, handleStop, this),\n        listen(dropArea, EventType.DROP, handleStop, this)\n      ];\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragAndDrop.prototype.setActive = function setActive (active) {\n    Interaction.prototype.setActive.call(this, active);\n    if (active) {\n      this.registerListeners_();\n    } else {\n      this.unregisterListeners_();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragAndDrop.prototype.setMap = function setMap (map) {\n    this.unregisterListeners_();\n    Interaction.prototype.setMap.call(this, map);\n    if (this.getActive()) {\n      this.registerListeners_();\n    }\n  };\n\n  /**\n   * @param {import(\"../format/Feature.js\").default} format Format.\n   * @param {string} text Text.\n   * @param {import(\"../format/Feature.js\").ReadOptions} options Read options.\n   * @private\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  DragAndDrop.prototype.tryReadFeatures_ = function tryReadFeatures_ (format, text, options) {\n    try {\n      return format.readFeatures(text, options);\n    } catch (e) {\n      return null;\n    }\n  };\n\n  /**\n   * @private\n   */\n  DragAndDrop.prototype.unregisterListeners_ = function unregisterListeners_ () {\n    if (this.dropListenKeys_) {\n      this.dropListenKeys_.forEach(unlistenByKey);\n      this.dropListenKeys_ = null;\n    }\n  };\n\n  return DragAndDrop;\n}(Interaction));\n\n\n/**\n * @param {DragEvent} event Event.\n * @this {DragAndDrop}\n */\nfunction handleDrop(event) {\n  var files = event.dataTransfer.files;\n  for (var i = 0, ii = files.length; i < ii; ++i) {\n    var file = files.item(i);\n    var reader = new FileReader();\n    reader.addEventListener(EventType.LOAD, this.handleResult_.bind(this, file));\n    reader.readAsText(file);\n  }\n}\n\n\n/**\n * @param {DragEvent} event Event.\n */\nfunction handleStop(event) {\n  event.stopPropagation();\n  event.preventDefault();\n  event.dataTransfer.dropEffect = 'copy';\n}\n\n\nexport default DragAndDrop;\n\n//# sourceMappingURL=DragAndDrop.js.map","/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {shiftKeyOnly, mouseOnly} from '../events/condition.js';\nimport {rotate, rotateWithoutConstraints, zoom, zoomWithoutConstraints} from './Interaction.js';\nimport PointerInteraction from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n * @api\n */\nvar DragRotateAndZoom = /*@__PURE__*/(function (PointerInteraction) {\n  function DragRotateAndZoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    PointerInteraction.call(/** @type {import(\"./Pointer.js\").Options} */ this, (options));\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastMagnitude_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n  }\n\n  if ( PointerInteraction ) DragRotateAndZoom.__proto__ = PointerInteraction;\n  DragRotateAndZoom.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragRotateAndZoom.prototype.constructor = DragRotateAndZoom;\n\n  /**\n   * @inheritDoc\n   */\n  DragRotateAndZoom.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    var map = mapBrowserEvent.map;\n    var size = map.getSize();\n    var offset = mapBrowserEvent.pixel;\n    var deltaX = offset[0] - size[0] / 2;\n    var deltaY = size[1] / 2 - offset[1];\n    var theta = Math.atan2(deltaY, deltaX);\n    var magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    var view = map.getView();\n    if (view.getConstraints().rotation !== disable && this.lastAngle_ !== undefined) {\n      var angleDelta = theta - this.lastAngle_;\n      rotateWithoutConstraints(view, view.getRotation() - angleDelta);\n    }\n    this.lastAngle_ = theta;\n    if (this.lastMagnitude_ !== undefined) {\n      var resolution = this.lastMagnitude_ * (view.getResolution() / magnitude);\n      zoomWithoutConstraints(view, resolution);\n    }\n    if (this.lastMagnitude_ !== undefined) {\n      this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n    }\n    this.lastMagnitude_ = magnitude;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragRotateAndZoom.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    var direction = this.lastScaleDelta_ - 1;\n    rotate(view, view.getRotation());\n    zoom(view, view.getResolution(), undefined, this.duration_, direction);\n    this.lastScaleDelta_ = 0;\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  DragRotateAndZoom.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (this.condition_(mapBrowserEvent)) {\n      mapBrowserEvent.map.getView().setHint(ViewHint.INTERACTING, 1);\n      this.lastAngle_ = undefined;\n      this.lastMagnitude_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return DragRotateAndZoom;\n}(PointerInteraction));\n\nexport default DragRotateAndZoom;\n\n//# sourceMappingURL=DragRotateAndZoom.js.map","/**\n * @module ol/geom/Circle\n */\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nvar Circle = /*@__PURE__*/(function (SimpleGeometry) {\n  function Circle(center, opt_radius, opt_layout) {\n    SimpleGeometry.call(this);\n    if (opt_layout !== undefined && opt_radius === undefined) {\n      this.setFlatCoordinates(opt_layout, center);\n    } else {\n      var radius = opt_radius ? opt_radius : 0;\n      this.setCenterAndRadius(center, radius, opt_layout);\n    }\n  }\n\n  if ( SimpleGeometry ) Circle.__proto__ = SimpleGeometry;\n  Circle.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Circle.prototype.constructor = Circle;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @override\n   * @api\n   */\n  Circle.prototype.clone = function clone () {\n    return new Circle(this.flatCoordinates.slice(), undefined, this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    var flatCoordinates = this.flatCoordinates;\n    var dx = x - flatCoordinates[0];\n    var dy = y - flatCoordinates[1];\n    var squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (var i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        var delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (var i$1 = 2; i$1 < this.stride; ++i$1) {\n          closestPoint[i$1] = flatCoordinates[i$1];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.containsXY = function containsXY (x, y) {\n    var flatCoordinates = this.flatCoordinates;\n    var dx = x - flatCoordinates[0];\n    var dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  };\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  Circle.prototype.getCenter = function getCenter () {\n    return this.flatCoordinates.slice(0, this.stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.computeExtent = function computeExtent (extent) {\n    var flatCoordinates = this.flatCoordinates;\n    var radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n      extent);\n  };\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  Circle.prototype.getRadius = function getRadius () {\n    return Math.sqrt(this.getRadiusSquared_());\n  };\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  Circle.prototype.getRadiusSquared_ = function getRadiusSquared_ () {\n    var dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    var dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Circle.prototype.getType = function getType () {\n    return GeometryType.CIRCLE;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Circle.prototype.intersectsExtent = function intersectsExtent (extent) {\n    var circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      var center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate, this);\n    }\n    return false;\n\n  };\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  Circle.prototype.setCenter = function setCenter (center) {\n    var stride = this.stride;\n    var radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    var flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (var i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  };\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @api\n   */\n  Circle.prototype.setCenterAndRadius = function setCenterAndRadius (center, radius, opt_layout) {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    var flatCoordinates = this.flatCoordinates;\n    var offset = deflateCoordinate(\n      flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (var i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.getCoordinates = function getCoordinates () {\n    return null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Circle.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {};\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  Circle.prototype.setRadius = function setRadius (radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  };\n\n  return Circle;\n}(SimpleGeometry));\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/geom/MultiLineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {interpolatePoint, lineStringsCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nvar MultiLineString = /*@__PURE__*/(function (SimpleGeometry) {\n  function MultiLineString(coordinates, opt_layout, opt_ends) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.ends_ = opt_ends;\n    } else {\n      var layout = this.getLayout();\n      var lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      var flatCoordinates = [];\n      var ends = [];\n      for (var i = 0, ii = lineStrings.length; i < ii; ++i) {\n        var lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n\n  }\n\n  if ( SimpleGeometry ) MultiLineString.__proto__ = SimpleGeometry;\n  MultiLineString.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiLineString.prototype.constructor = MultiLineString;\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  MultiLineString.prototype.appendLineString = function appendLineString (lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.clone = function clone () {\n    return new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiLineString.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  MultiLineString.prototype.getCoordinateAtM = function getCoordinateAtM (m, opt_extrapolate, opt_interpolate) {\n    if ((this.layout != GeometryLayout.XYM &&\n         this.layout != GeometryLayout.XYZM) ||\n        this.flatCoordinates.length === 0) {\n      return null;\n    }\n    var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(this.flatCoordinates, 0,\n      this.ends_, this.stride, m, extrapolate, interpolate);\n  };\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinatesArray(\n      this.flatCoordinates, 0, this.ends_, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  MultiLineString.prototype.getEnds = function getEnds () {\n    return this.ends_;\n  };\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  MultiLineString.prototype.getLineString = function getLineString (index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  };\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  MultiLineString.prototype.getLineStrings = function getLineStrings () {\n    var flatCoordinates = this.flatCoordinates;\n    var ends = this.ends_;\n    var layout = this.layout;\n    /** @type {Array<LineString>} */\n    var lineStrings = [];\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var lineString = new LineString(flatCoordinates.slice(offset, end), layout);\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  };\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  MultiLineString.prototype.getFlatMidpoints = function getFlatMidpoints () {\n    var midpoints = [];\n    var flatCoordinates = this.flatCoordinates;\n    var offset = 0;\n    var ends = this.ends_;\n    var stride = this.stride;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var midpoint = interpolatePoint(\n        flatCoordinates, offset, end, stride, 0.5);\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiLineString.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiLineString.prototype.getType = function getType () {\n    return GeometryType.MULTI_LINE_STRING;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiLineString.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates, 0, this.ends_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  };\n\n  return MultiLineString;\n}(SimpleGeometry));\n\n\nexport default MultiLineString;\n\n//# sourceMappingURL=MultiLineString.js.map","/**\n * @module ol/geom/MultiPoint\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nvar MultiPoint = /*@__PURE__*/(function (SimpleGeometry) {\n  function MultiPoint(coordinates, opt_layout) {\n    SimpleGeometry.call(this);\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n  }\n\n  if ( SimpleGeometry ) MultiPoint.__proto__ = SimpleGeometry;\n  MultiPoint.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiPoint.prototype.constructor = MultiPoint;\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  MultiPoint.prototype.appendPoint = function appendPoint (point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.clone = function clone () {\n    var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n    return multiPoint;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPoint.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    var flatCoordinates = this.flatCoordinates;\n    var stride = this.stride;\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var squaredDistance = squaredDx(\n        x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (var j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  };\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  MultiPoint.prototype.getPoint = function getPoint (index) {\n    var n = !this.flatCoordinates ? 0 : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(this.flatCoordinates.slice(\n      index * this.stride, (index + 1) * this.stride), this.layout);\n  };\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  MultiPoint.prototype.getPoints = function getPoints () {\n    var flatCoordinates = this.flatCoordinates;\n    var layout = this.layout;\n    var stride = this.stride;\n    /** @type {Array<Point>} */\n    var points = [];\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPoint.prototype.getType = function getType () {\n    return GeometryType.MULTI_POINT;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPoint.prototype.intersectsExtent = function intersectsExtent (extent) {\n    var flatCoordinates = this.flatCoordinates;\n    var stride = this.stride;\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var x = flatCoordinates[i];\n      var y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return MultiPoint;\n}(SimpleGeometry));\n\n\nexport default MultiPoint;\n\n//# sourceMappingURL=MultiPoint.js.map","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  var flatCenters = [];\n  var extent = createEmpty();\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n\n//# sourceMappingURL=center.js.map","/**\n * @module ol/geom/MultiPolygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta} from './flat/closest.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRingsArray} from './flat/orient.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nvar MultiPolygon = /*@__PURE__*/(function (SimpleGeometry) {\n  function MultiPolygon(coordinates, opt_layout, opt_endss) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      var layout = this.getLayout();\n      var polygons = /** @type {Array<Polygon>} */ (coordinates);\n      var flatCoordinates = [];\n      var endss = [];\n      for (var i = 0, ii = polygons.length; i < ii; ++i) {\n        var polygon = polygons[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        var offset = flatCoordinates.length;\n        var ends = polygon.getEnds();\n        for (var j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(/** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates),\n        opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) MultiPolygon.__proto__ = SimpleGeometry;\n  MultiPolygon.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiPolygon.prototype.constructor = MultiPolygon;\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  MultiPolygon.prototype.appendPolygon = function appendPolygon (polygon) {\n    /** @type {Array<number>} */\n    var ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      var offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.clone = function clone () {\n    var len = this.endss_.length;\n    var newEndss = new Array(len);\n    for (var i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    return new MultiPolygon(\n      this.flatCoordinates.slice(), this.layout, newEndss);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.endss_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.containsXY = function containsXY (x, y) {\n    return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n  };\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  MultiPolygon.prototype.getArea = function getArea () {\n    return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n  };\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.getCoordinates = function getCoordinates (opt_right) {\n    var flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates, 0, this.endss_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates, 0, this.endss_, this.stride);\n  };\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  MultiPolygon.prototype.getEndss = function getEndss () {\n    return this.endss_;\n  };\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  MultiPolygon.prototype.getFlatInteriorPoints = function getFlatInteriorPoints () {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      var flatCenters = linearRingssCenter(\n        this.flatCoordinates, 0, this.endss_, this.stride);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n        flatCenters);\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  };\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  MultiPolygon.prototype.getInteriorPoints = function getInteriorPoints () {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\n  };\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  MultiPolygon.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n    if (this.orientedRevision_ != this.getRevision()) {\n      var flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(\n        flatCoordinates, 0, this.endss_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRingsArray(\n              this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates, 0, this.endss_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEndss);\n    return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\n  };\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  MultiPolygon.prototype.getPolygon = function getPolygon (index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    var offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      var prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    var ends = this.endss_[index].slice();\n    var end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\n  };\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  MultiPolygon.prototype.getPolygons = function getPolygons () {\n    var layout = this.layout;\n    var flatCoordinates = this.flatCoordinates;\n    var endss = this.endss_;\n    var polygons = [];\n    var offset = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n      var ends = endss[i].slice();\n      var end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (var j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      var polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPolygon.prototype.getType = function getType () {\n    return GeometryType.MULTI_POLYGON;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPolygon.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      var lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  };\n\n  return MultiPolygon;\n}(SimpleGeometry));\n\n\nexport default MultiPolygon;\n\n//# sourceMappingURL=MultiPolygon.js.map","/**\n * @module ol/interaction/Draw\n */\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {getChangeEventType} from '../Object.js';\nimport {squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {noModifierKeys, always, shiftKeyOnly} from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport {POINTER_TYPE} from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport PointerInteraction from './Pointer.js';\nimport InteractionProperty from './Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {GeometryType} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for sketch features.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n\n\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n\n\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n\n\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry as\n * arguments, and returns a geometry. The optional existing geometry is the\n * geometry that is returned when the function is called without a second\n * argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default=):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nvar Mode = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n\n/**\n * @enum {string}\n */\nvar DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nvar DrawEvent = /*@__PURE__*/(function (Event) {\n  function DrawEvent(type, feature) {\n\n    Event.call(this, type);\n\n    /**\n     * The feature being drawn.\n     * @type {Feature}\n     * @api\n     */\n    this.feature = feature;\n\n  }\n\n  if ( Event ) DrawEvent.__proto__ = Event;\n  DrawEvent.prototype = Object.create( Event && Event.prototype );\n  DrawEvent.prototype.constructor = DrawEvent;\n\n  return DrawEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nvar Draw = /*@__PURE__*/(function (PointerInteraction) {\n  function Draw(options) {\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {?}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {import(\"../Collection.js\").default<Feature>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {GeometryType}\n     * @private\n     */\n    this.type_ = /** @type {GeometryType} */ (options.type);\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints ?\n      options.minPoints :\n      (this.mode_ === Mode.POLYGON ? 3 : 2);\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n    var geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      if (this.type_ === GeometryType.CIRCLE) {\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function(coordinates, opt_geometry) {\n          var circle = opt_geometry ? /** @type {Circle} */ (opt_geometry) :\n            new Circle([NaN, NaN]);\n          var squaredLength = squaredCoordinateDistance(\n            coordinates[0], coordinates[1]);\n          circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n          return circle;\n        };\n      } else {\n        var Constructor;\n        var mode = this.mode_;\n        if (mode === Mode.POINT) {\n          Constructor = Point;\n        } else if (mode === Mode.LINE_STRING) {\n          Constructor = LineString;\n        } else if (mode === Mode.POLYGON) {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function(coordinates, opt_geometry) {\n          var geometry = opt_geometry;\n          if (geometry) {\n            if (mode === Mode.POLYGON) {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n              } else {\n                geometry.setCoordinates([]);\n              }\n            } else {\n              geometry.setCoordinates(coordinates);\n            }\n          } else {\n            geometry = new Constructor(coordinates);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {Feature}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {Feature}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {SketchCoordType}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {Feature}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {LineCoordType}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance ?\n      options.clickTolerance * options.clickTolerance : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false\n      }),\n      style: options.style ? options.style :\n        getDefaultStyleFunction(),\n      updateWhileInteracting: true\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition ?\n        options.freehandCondition : shiftKeyOnly;\n    }\n\n    listen(this,\n      getChangeEventType(InteractionProperty.ACTIVE),\n      this.updateState_, this);\n\n  }\n\n  if ( PointerInteraction ) Draw.__proto__ = PointerInteraction;\n  Draw.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  Draw.prototype.constructor = Draw;\n\n  /**\n   * @inheritDoc\n   */\n  Draw.prototype.setMap = function setMap (map) {\n    PointerInteraction.prototype.setMap.call(this, map);\n    this.updateState_();\n  };\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  Draw.prototype.getOverlay = function getOverlay () {\n    return this.overlay_;\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n   * @override\n   * @api\n   */\n  Draw.prototype.handleEvent = function handleEvent (event) {\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\n      // Avoid context menu for long taps when drawing on mobile\n      event.preventDefault();\n    }\n    this.freehand_ = this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n    var move = event.type === MapBrowserEventType.POINTERMOVE;\n    var pass = true;\n    if (!this.freehand_ && this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n      var now = Date.now();\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n        this.downPx_ = event.pixel;\n        this.shouldHandle_ = !this.freehand_;\n        move = true;\n      } else {\n        this.lastDragTime_ = undefined;\n      }\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n    }\n    if (this.freehand_ &&\n        event.type === MapBrowserEventType.POINTERDRAG &&\n        this.sketchFeature_ !== null) {\n      this.addToDrawing_(event);\n      pass = false;\n    } else if (this.freehand_ &&\n        event.type === MapBrowserEventType.POINTERDOWN) {\n      pass = false;\n    } else if (move) {\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\n      if (pass && this.freehand_) {\n        pass = this.handlePointerMove_(event);\n      } else if (/** @type {MapBrowserPointerEvent} */ (event).pointerEvent.pointerType == POINTER_TYPE ||\n          (event.type === MapBrowserEventType.POINTERDRAG && this.downTimeout_ === undefined)) {\n        this.handlePointerMove_(event);\n      }\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\n      pass = false;\n    }\n\n    return PointerInteraction.prototype.handleEvent.call(this, event) && pass;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Draw.prototype.handleDownEvent = function handleDownEvent (event) {\n    this.shouldHandle_ = !this.freehand_;\n\n    if (this.freehand_) {\n      this.downPx_ = event.pixel;\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event);\n      }\n      return true;\n    } else if (this.condition_(event)) {\n      this.lastDragTime_ = Date.now();\n      this.downTimeout_ = setTimeout(function() {\n        this.handlePointerMove_(new MapBrowserPointerEvent(\n          MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, false, event.frameState));\n      }.bind(this), this.dragVertexDelay_);\n      this.downPx_ = event.pixel;\n      return true;\n    } else {\n      this.lastDragTime_ = undefined;\n      return false;\n    }\n  };\n\n\n  /**\n   * @inheritDoc\n   */\n  Draw.prototype.handleUpEvent = function handleUpEvent (event) {\n    var pass = true;\n\n    if (this.downTimeout_) {\n      clearTimeout(this.downTimeout_);\n      this.downTimeout_ = undefined;\n    }\n\n    this.handlePointerMove_(event);\n\n    var circleMode = this.mode_ === Mode.CIRCLE;\n\n    if (this.shouldHandle_) {\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event);\n        if (this.mode_ === Mode.POINT) {\n          this.finishDrawing();\n        }\n      } else if (this.freehand_ || circleMode) {\n        this.finishDrawing();\n      } else if (this.atFinish_(event)) {\n        if (this.finishCondition_(event)) {\n          this.finishDrawing();\n        }\n      } else {\n        this.addToDrawing_(event);\n      }\n      pass = false;\n    } else if (this.freehand_) {\n      this.finishCoordinate_ = null;\n      this.abortDrawing_();\n    }\n    if (!pass && this.stopClick_) {\n      event.stopPropagation();\n    }\n    return pass;\n  };\n\n  /**\n   * Handle move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n   * @return {boolean} Pass the event to other interactions.\n   * @private\n   */\n  Draw.prototype.handlePointerMove_ = function handlePointerMove_ (event) {\n    if (this.downPx_ &&\n        ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))) {\n      var downPx = this.downPx_;\n      var clickPx = event.pixel;\n      var dx = downPx[0] - clickPx[0];\n      var dy = downPx[1] - clickPx[1];\n      var squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_ ?\n        squaredDistance > this.squaredClickTolerance_ :\n        squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return true;\n      }\n    }\n\n    if (this.finishCoordinate_) {\n      this.modifyDrawing_(event);\n    } else {\n      this.createOrUpdateSketchPoint_(event);\n    }\n    return true;\n  };\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  Draw.prototype.atFinish_ = function atFinish_ (event) {\n    var at = false;\n    if (this.sketchFeature_) {\n      var potentiallyDone = false;\n      var potentiallyFinishCoordinates = [this.finishCoordinate_];\n      if (this.mode_ === Mode.LINE_STRING) {\n        potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n      } else if (this.mode_ === Mode.POLYGON) {\n        var sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\n        potentiallyFinishCoordinates = [sketchCoords[0][0], sketchCoords[0][sketchCoords[0].length - 2]];\n      }\n      if (potentiallyDone) {\n        var map = event.map;\n        for (var i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          var finishCoordinate = potentiallyFinishCoordinates[i];\n          var finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          var pixel = event.pixel;\n          var dx = pixel[0] - finishPixel[0];\n          var dy = pixel[1] - finishPixel[1];\n          var snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  };\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  Draw.prototype.createOrUpdateSketchPoint_ = function createOrUpdateSketchPoint_ (event) {\n    var coordinates = event.coordinate.slice();\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      var sketchPointGeom = /** @type {Point} */ (this.sketchPoint_.getGeometry());\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  };\n\n  /**\n   * Start the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  Draw.prototype.startDrawing_ = function startDrawing_ (event) {\n    var start = event.coordinate;\n    this.finishCoordinate_ = start;\n    if (this.mode_ === Mode.POINT) {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === Mode.POLYGON) {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(\n        new LineString(this.sketchLineCoords_));\n    }\n    var geometry = this.geometryFunction_(this.sketchCoords_);\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n  };\n\n  /**\n   * Modify the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  Draw.prototype.modifyDrawing_ = function modifyDrawing_ (event) {\n    var coordinate = event.coordinate;\n    var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\n    var coordinates, last;\n    if (this.mode_ === Mode.POINT) {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(event)) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(/** @type {!LineCoordType} */ (this.sketchCoords_), geometry);\n    if (this.sketchPoint_) {\n      var sketchPointGeom = /** @type {Point} */ (this.sketchPoint_.getGeometry());\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    /** @type {LineString} */\n    var sketchLineGeom;\n    if (geometry.getType() == GeometryType.POLYGON &&\n        this.mode_ !== Mode.POLYGON) {\n      if (!this.sketchLine_) {\n        this.sketchLine_ = new Feature();\n      }\n      var ring = /** @type {Polygon} */ (geometry).getLinearRing(0);\n      sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\n      if (!sketchLineGeom) {\n        sketchLineGeom = new LineString(ring.getFlatCoordinates(), ring.getLayout());\n        this.sketchLine_.setGeometry(sketchLineGeom);\n      } else {\n        sketchLineGeom.setFlatCoordinates(\n          ring.getLayout(), ring.getFlatCoordinates());\n        sketchLineGeom.changed();\n      }\n    } else if (this.sketchLineCoords_) {\n      sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  };\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  Draw.prototype.addToDrawing_ = function addToDrawing_ (event) {\n    var coordinate = event.coordinate;\n    var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\n    var done;\n    var coordinates;\n    if (this.mode_ === Mode.LINE_STRING) {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry);\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry);\n    }\n    this.updateSketchFeatures_();\n    if (done) {\n      this.finishDrawing();\n    }\n  };\n\n  /**\n   * Remove last point of the feature currently being drawn.\n   * @api\n   */\n  Draw.prototype.removeLastPoint = function removeLastPoint () {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (this.sketchFeature_.getGeometry());\n    var coordinates;\n    /** @type {LineString} */\n    var sketchLineGeom;\n    if (this.mode_ === Mode.LINE_STRING) {\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      coordinates.splice(-2, 1);\n      this.geometryFunction_(coordinates, geometry);\n      if (coordinates.length >= 2) {\n        this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n      }\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      coordinates.splice(-2, 1);\n      sketchLineGeom = /** @type {LineString} */ (this.sketchLine_.getGeometry());\n      sketchLineGeom.setCoordinates(coordinates);\n      this.geometryFunction_(this.sketchCoords_, geometry);\n    }\n\n    if (coordinates.length === 0) {\n      this.finishCoordinate_ = null;\n    }\n\n    this.updateSketchFeatures_();\n  };\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @api\n   */\n  Draw.prototype.finishDrawing = function finishDrawing () {\n    var sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return;\n    }\n    var coordinates = this.sketchCoords_;\n    var geometry = /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (sketchFeature.getGeometry());\n    if (this.mode_ === Mode.LINE_STRING) {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry);\n    } else if (this.mode_ === Mode.POLYGON) {\n      // remove the redundant last point in ring\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\n      this.geometryFunction_(coordinates, geometry);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === GeometryType.MULTI_POINT) {\n      sketchFeature.setGeometry(new MultiPoint([/** @type {PointCoordType} */(coordinates)]));\n    } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n      sketchFeature.setGeometry(new MultiLineString([/** @type {LineCoordType} */(coordinates)]));\n    } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n      sketchFeature.setGeometry(new MultiPolygon([/** @type {PolyCoordType} */(coordinates)]));\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n  };\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {Feature} The sketch feature (or null if none).\n   * @private\n   */\n  Draw.prototype.abortDrawing_ = function abortDrawing_ () {\n    this.finishCoordinate_ = null;\n    var sketchFeature = this.sketchFeature_;\n    if (sketchFeature) {\n      this.sketchFeature_ = null;\n      this.sketchPoint_ = null;\n      this.sketchLine_ = null;\n      /** @type {VectorSource} */ (this.overlay_.getSource()).clear(true);\n    }\n    return sketchFeature;\n  };\n\n  /**\n   * Extend an existing geometry by adding additional points. This only works\n   * on features with `LineString` geometries, where the interaction will\n   * extend lines by adding points to the end of the coordinates array.\n   * @param {!Feature} feature Feature to be extended.\n   * @api\n   */\n  Draw.prototype.extend = function extend (feature) {\n    var geometry = feature.getGeometry();\n    var lineString = /** @type {LineString} */ (geometry);\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    var last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.updateSketchFeatures_();\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n  };\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  Draw.prototype.updateSketchFeatures_ = function updateSketchFeatures_ () {\n    var sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    var overlaySource = /** @type {VectorSource} */ (this.overlay_.getSource());\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  };\n\n  /**\n   * @private\n   */\n  Draw.prototype.updateState_ = function updateState_ () {\n    var map = this.getMap();\n    var active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing_();\n    }\n    this.overlay_.setMap(active ? map : null);\n  };\n\n  return Draw;\n}(PointerInteraction));\n\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  var styles = createEditingStyle();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `import(\"../geom/Circle.js\").Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a\n *     polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n  return function(coordinates, opt_geometry) {\n    var center = /** @type {LineCoordType} */ (coordinates)[0];\n    var end = /** @type {LineCoordType} */ (coordinates)[1];\n    var radius = Math.sqrt(\n      squaredCoordinateDistance(center, end));\n    var geometry = opt_geometry ? /** @type {Polygon} */ (opt_geometry) :\n      fromCircle(new Circle(center), opt_sides);\n    var angle = opt_angle;\n    if (!opt_angle) {\n      var x = end[0] - center[0];\n      var y = end[1] - center[1];\n      angle = Math.atan(y / x) - (x < 0 ? Math.PI : 0);\n    }\n    makeRegular(geometry, center, radius, angle);\n    return geometry;\n  };\n}\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return (\n    function(coordinates, opt_geometry) {\n      var extent = boundingExtent(/** @type {LineCoordType} */ (coordinates));\n      var boxCoordinates = [[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]];\n      var geometry = opt_geometry;\n      if (geometry) {\n        geometry.setCoordinates(boxCoordinates);\n      } else {\n        geometry = new Polygon(boxCoordinates);\n      }\n      return geometry;\n    }\n  );\n}\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {GeometryType} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n  var mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Mode.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Mode.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Mode.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Mode.CIRCLE;\n  }\n  return (\n    /** @type {!Mode} */ (mode)\n  );\n}\n\n\nexport default Draw;\n\n//# sourceMappingURL=Draw.js.map","/**\n * @module ol/interaction/Extent\n */\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {squaredDistanceToSegment, closestOnSegment, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\nimport Event from '../events/Event.js';\nimport {boundingExtent, getArea} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {import(\"../style/Style.js\").StyleLike} [boxStyle]\n * Style for the drawn extent box. Defaults to\n * {@link module:ol/style/Style~createEditing()['Polygon']}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to\n * {@link module:ol/style/Style~createEditing()['Point']}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n\n\n/**\n * @enum {string}\n */\nvar ExtentEventType = {\n  /**\n   * Triggered after the extent is changed\n   * @event ExtentEventType#extentchanged\n   * @api\n   */\n  EXTENTCHANGED: 'extentchanged'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~ExtentInteraction} instances are\n * instances of this type.\n */\nvar ExtentInteractionEvent = /*@__PURE__*/(function (Event) {\n  function ExtentInteractionEvent(extent) {\n    Event.call(this, ExtentEventType.EXTENTCHANGED);\n\n    /**\n     * The current extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = extent;\n  }\n\n  if ( Event ) ExtentInteractionEvent.__proto__ = Event;\n  ExtentInteractionEvent.prototype = Object.create( Event && Event.prototype );\n  ExtentInteractionEvent.prototype.constructor = ExtentInteractionEvent;\n\n  return ExtentInteractionEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @fires Event\n * @api\n */\nvar ExtentInteraction = /*@__PURE__*/(function (PointerInteraction) {\n  function ExtentInteraction(opt_options) {\n\n    var options = opt_options || {};\n\n    PointerInteraction.call(/** @type {import(\"./Pointer.js\").Options} */ this, (options));\n\n    /**\n     * Extent of the drawn box\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.extent_ = null;\n\n    /**\n     * Handler for pointer move events\n     * @type {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null}\n     * @private\n     */\n    this.pointerHandler_ = null;\n\n    /**\n     * Pixel threshold to snap to extent\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n      options.pixelTolerance : 10;\n\n    /**\n     * Is the pointer snapped to an extent vertex\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Feature for displaying the visible extent\n     * @type {Feature}\n     * @private\n     */\n    this.extentFeature_ = null;\n\n    /**\n     * Feature for displaying the visible pointer\n     * @type {Feature}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    if (!opt_options) {\n      opt_options = {};\n    }\n\n    /**\n     * Layer for the extentFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    this.extentOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!opt_options.wrapX\n      }),\n      style: opt_options.boxStyle ? opt_options.boxStyle : getDefaultExtentStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    /**\n     * Layer for the vertexFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    this.vertexOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!opt_options.wrapX\n      }),\n      style: opt_options.pointerStyle ? opt_options.pointerStyle : getDefaultPointerStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    if (opt_options.extent) {\n      this.setExtent(opt_options.extent);\n    }\n  }\n\n  if ( PointerInteraction ) ExtentInteraction.__proto__ = PointerInteraction;\n  ExtentInteraction.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  ExtentInteraction.prototype.constructor = ExtentInteraction;\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel cursor location\n   * @param {import(\"../PluggableMap.js\").default} map map\n   * @returns {import(\"../coordinate.js\").Coordinate|null} snapped vertex on extent\n   * @private\n   */\n  ExtentInteraction.prototype.snapToVertex_ = function snapToVertex_ (pixel, map) {\n    var pixelCoordinate = map.getCoordinateFromPixel(pixel);\n    var sortByDistance = function(a, b) {\n      return squaredDistanceToSegment(pixelCoordinate, a) -\n          squaredDistanceToSegment(pixelCoordinate, b);\n    };\n    var extent = this.getExtent();\n    if (extent) {\n      //convert extents to line segments and find the segment closest to pixelCoordinate\n      var segments = getSegments(extent);\n      segments.sort(sortByDistance);\n      var closestSegment = segments[0];\n\n      var vertex = (closestOnSegment(pixelCoordinate,\n        closestSegment));\n      var vertexPixel = map.getPixelFromCoordinate(vertex);\n\n      //if the distance is within tolerance, snap to the segment\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        //test if we should further snap to a vertex\n        var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n        var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n        var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n        var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n        var dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex = squaredDist1 > squaredDist2 ?\n            closestSegment[1] : closestSegment[0];\n        }\n        return vertex;\n      }\n    }\n    return null;\n  };\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent pointer move event\n   * @private\n   */\n  ExtentInteraction.prototype.handlePointerMove_ = function handlePointerMove_ (mapBrowserEvent) {\n    var pixel = mapBrowserEvent.pixel;\n    var map = mapBrowserEvent.map;\n\n    var vertex = this.snapToVertex_(pixel, map);\n    if (!vertex) {\n      vertex = map.getCoordinateFromPixel(pixel);\n    }\n    this.createOrUpdatePointerFeature_(vertex);\n  };\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent extent\n   * @returns {Feature} extent as featrue\n   * @private\n   */\n  ExtentInteraction.prototype.createOrUpdateExtentFeature_ = function createOrUpdateExtentFeature_ (extent) {\n    var extentFeature = this.extentFeature_;\n\n    if (!extentFeature) {\n      if (!extent) {\n        extentFeature = new Feature({});\n      } else {\n        extentFeature = new Feature(polygonFromExtent(extent));\n      }\n      this.extentFeature_ = extentFeature;\n      /** @type {VectorSource} */ (this.extentOverlay_.getSource()).addFeature(extentFeature);\n    } else {\n      if (!extent) {\n        extentFeature.setGeometry(undefined);\n      } else {\n        extentFeature.setGeometry(polygonFromExtent(extent));\n      }\n    }\n    return extentFeature;\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} vertex location of feature\n   * @returns {Feature} vertex as feature\n   * @private\n   */\n  ExtentInteraction.prototype.createOrUpdatePointerFeature_ = function createOrUpdatePointerFeature_ (vertex) {\n    var vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(vertex));\n      this.vertexFeature_ = vertexFeature;\n      /** @type {VectorSource} */ (this.vertexOverlay_.getSource()).addFeature(vertexFeature);\n    } else {\n      var geometry = /** @type {Point} */ (vertexFeature.getGeometry());\n      geometry.setCoordinates(vertex);\n    }\n    return vertexFeature;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ExtentInteraction.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    if (!(/** @type {import(\"../MapBrowserPointerEvent.js\").default} */ (mapBrowserEvent).pointerEvent)) {\n      return true;\n    }\n    //display pointer (if not dragging)\n    if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE && !this.handlingDownUpSequence) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    //call pointer to determine up/down/drag\n    PointerInteraction.prototype.handleEvent.call(this, mapBrowserEvent);\n    //return false to stop propagation\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ExtentInteraction.prototype.handleDownEvent = function handleDownEvent (mapBrowserEvent) {\n    var pixel = mapBrowserEvent.pixel;\n    var map = mapBrowserEvent.map;\n\n    var extent = this.getExtent();\n    var vertex = this.snapToVertex_(pixel, map);\n\n    //find the extent corner opposite the passed corner\n    var getOpposingPoint = function(point) {\n      var x_ = null;\n      var y_ = null;\n      if (point[0] == extent[0]) {\n        x_ = extent[2];\n      } else if (point[0] == extent[2]) {\n        x_ = extent[0];\n      }\n      if (point[1] == extent[1]) {\n        y_ = extent[3];\n      } else if (point[1] == extent[3]) {\n        y_ = extent[1];\n      }\n      if (x_ !== null && y_ !== null) {\n        return [x_, y_];\n      }\n      return null;\n    };\n    if (vertex && extent) {\n      var x = (vertex[0] == extent[0] || vertex[0] == extent[2]) ? vertex[0] : null;\n      var y = (vertex[1] == extent[1] || vertex[1] == extent[3]) ? vertex[1] : null;\n\n      //snap to point\n      if (x !== null && y !== null) {\n        this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n      //snap to edge\n      } else if (x !== null) {\n        this.pointerHandler_ = getEdgeHandler(\n          getOpposingPoint([x, extent[1]]),\n          getOpposingPoint([x, extent[3]])\n        );\n      } else if (y !== null) {\n        this.pointerHandler_ = getEdgeHandler(\n          getOpposingPoint([extent[0], y]),\n          getOpposingPoint([extent[2], y])\n        );\n      }\n    //no snap - new bbox\n    } else {\n      vertex = map.getCoordinateFromPixel(pixel);\n      this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n      this.pointerHandler_ = getPointHandler(vertex);\n    }\n    return true; //event handled; start downup sequence\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ExtentInteraction.prototype.handleDragEvent = function handleDragEvent (mapBrowserEvent) {\n    if (this.pointerHandler_) {\n      var pixelCoordinate = mapBrowserEvent.coordinate;\n      this.setExtent(this.pointerHandler_(pixelCoordinate));\n      this.createOrUpdatePointerFeature_(pixelCoordinate);\n    }\n    return true;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ExtentInteraction.prototype.handleUpEvent = function handleUpEvent (mapBrowserEvent) {\n    this.pointerHandler_ = null;\n    //If bbox is zero area, set to null;\n    var extent = this.getExtent();\n    if (!extent || getArea(extent) === 0) {\n      this.setExtent(null);\n    }\n    return false; //Stop handling downup sequence\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ExtentInteraction.prototype.setMap = function setMap (map) {\n    this.extentOverlay_.setMap(map);\n    this.vertexOverlay_.setMap(map);\n    PointerInteraction.prototype.setMap.call(this, map);\n  };\n\n  /**\n   * Returns the current drawn extent in the view projection\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n  ExtentInteraction.prototype.getExtent = function getExtent () {\n    return this.extent_;\n  };\n\n  /**\n   * Manually sets the drawn extent, using the view projection.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent\n   * @api\n   */\n  ExtentInteraction.prototype.setExtent = function setExtent (extent) {\n    //Null extent means no bbox\n    this.extent_ = extent ? extent : null;\n    this.createOrUpdateExtentFeature_(extent);\n    this.dispatchEvent(new ExtentInteractionEvent(this.extent_));\n  };\n\n  return ExtentInteraction;\n}(PointerInteraction));\n\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n  var style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POLYGON];\n  };\n}\n\n/**\n * Returns the default style for the pointer\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n  var style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @returns {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n  return function(point) {\n    return boundingExtent([fixedPoint, point]);\n  };\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {import(\"../coordinate.js\").Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @returns {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n  if (fixedP1[0] == fixedP2[0]) {\n    return function(point) {\n      return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n    };\n  } else if (fixedP1[1] == fixedP2[1]) {\n    return function(point) {\n      return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n    };\n  } else {\n    return null;\n  }\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent extent\n * @returns {Array<Array<import(\"../coordinate.js\").Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n  return [\n    [[extent[0], extent[1]], [extent[0], extent[3]]],\n    [[extent[0], extent[3]], [extent[2], extent[3]]],\n    [[extent[2], extent[3]], [extent[2], extent[1]]],\n    [[extent[2], extent[1]], [extent[0], extent[1]]]\n  ];\n}\n\n\nexport default ExtentInteraction;\n\n//# sourceMappingURL=Extent.js.map","/**\n * @module ol/interaction/Modify\n */\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {equals} from '../array.js';\nimport {equals as coordinatesEqual, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment, closestOnSegment} from '../coordinate.js';\nimport {listen, unlisten} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {always, primaryAction, altKeyOnly, singleClick} from '../events/condition.js';\nimport {boundingExtent, buffer, createOrUpdateFromCoordinate} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nvar CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nvar CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\n\n/**\n * @enum {string}\n */\nvar ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend'\n};\n\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array<number>} [depth]\n * @property {Feature} feature\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry\n * @property {number} [index]\n * @property {Array<import(\"../extent.js\").Extent>} segment\n * @property {Array<SegmentData>} [featureSegments]\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition~primaryAction}.\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition~singleClick} with\n * {@link module:ol/events/condition~altKeyOnly} results in a vertex deletion.\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex should be added to the sketch\n * features. Default is {@link module:ol/events/condition~always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style used for the features being modified. By default the default edit\n * style is used (see {@link module:ol/style}).\n * @property {VectorSource} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the features option.\n * @property {Collection<Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the source option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nexport var ModifyEvent = /*@__PURE__*/(function (Event) {\n  function ModifyEvent(type, features, mapBrowserPointerEvent) {\n    Event.call(this, type);\n\n    /**\n     * The features being modified.\n     * @type {Collection<Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserPointerEvent;\n\n  }\n\n  if ( Event ) ModifyEvent.__proto__ = Event;\n  ModifyEvent.prototype = Object.create( Event && Event.prototype );\n  ModifyEvent.prototype.constructor = ModifyEvent;\n\n  return ModifyEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires ModifyEvent\n * @api\n */\nvar Modify = /*@__PURE__*/(function (PointerInteraction) {\n  function Modify(options) {\n\n    PointerInteraction.call(/** @type {import(\"./Pointer.js\").Options} */ this, (options));\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : primaryAction;\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultDeleteCondition_ = function(mapBrowserEvent) {\n      return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n    };\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.deleteCondition_ = options.deleteCondition ?\n      options.deleteCondition : this.defaultDeleteCondition_;\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.insertVertexCondition_ = options.insertVertexCondition ?\n      options.insertVertexCondition : always;\n\n    /**\n     * Editing vertex.\n     * @type {Feature}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    /**\n     * Segments intersecting {@link this.vertexFeature_} by segment uid.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.vertexSegments_ = null;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.lastPixel_ = [0, 0];\n\n    /**\n     * Tracks if the next `singleclick` event should be ignored to prevent\n     * accidental deletion right after vertex creation.\n     * @type {boolean}\n     * @private\n     */\n    this.ignoreNextSingleClick_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.modified_ = false;\n\n    /**\n     * Segment RTree for each layer\n     * @type {RBush<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n      options.pixelTolerance : 10;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Indicate whether the interaction is currently changing a feature's\n     * coordinates.\n     * @type {boolean}\n     * @private\n     */\n    this.changingFeature_ = false;\n\n    /**\n     * @type {Array}\n     * @private\n     */\n    this.dragSegments_ = [];\n\n    /**\n     * Draw overlay where sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX\n      }),\n      style: options.style ? options.style :\n        getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    /**\n     * @const\n     * @private\n     * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_,\n      'LineString': this.writeLineStringGeometry_,\n      'LinearRing': this.writeLineStringGeometry_,\n      'Polygon': this.writePolygonGeometry_,\n      'MultiPoint': this.writeMultiPointGeometry_,\n      'MultiLineString': this.writeMultiLineStringGeometry_,\n      'MultiPolygon': this.writeMultiPolygonGeometry_,\n      'Circle': this.writeCircleGeometry_,\n      'GeometryCollection': this.writeGeometryCollectionGeometry_\n    };\n\n\n    /**\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = null;\n\n    var features;\n    if (options.source) {\n      this.source_ = options.source;\n      features = new Collection(this.source_.getFeatures());\n      listen(this.source_, VectorEventType.ADDFEATURE,\n        this.handleSourceAdd_, this);\n      listen(this.source_, VectorEventType.REMOVEFEATURE,\n        this.handleSourceRemove_, this);\n    } else {\n      features = options.features;\n    }\n    if (!features) {\n      throw new Error('The modify interaction requires features or a source');\n    }\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.features_ = features;\n\n    this.features_.forEach(this.addFeature_.bind(this));\n    listen(this.features_, CollectionEventType.ADD,\n      this.handleFeatureAdd_, this);\n    listen(this.features_, CollectionEventType.REMOVE,\n      this.handleFeatureRemove_, this);\n\n    /**\n     * @type {import(\"../MapBrowserPointerEvent.js\").default}\n     * @private\n     */\n    this.lastPointerEvent_ = null;\n\n  }\n\n  if ( PointerInteraction ) Modify.__proto__ = PointerInteraction;\n  Modify.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  Modify.prototype.constructor = Modify;\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  Modify.prototype.addFeature_ = function addFeature_ (feature) {\n    var geometry = feature.getGeometry();\n    if (geometry && geometry.getType() in this.SEGMENT_WRITERS_) {\n      this.SEGMENT_WRITERS_[geometry.getType()].call(this, feature, geometry);\n    }\n    var map = this.getMap();\n    if (map && map.isRendered() && this.getActive()) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n    listen(feature, EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  };\n\n  /**\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} evt Map browser event\n   * @private\n   */\n  Modify.prototype.willModifyFeatures_ = function willModifyFeatures_ (evt) {\n    if (!this.modified_) {\n      this.modified_ = true;\n      this.dispatchEvent(new ModifyEvent(\n        ModifyEventType.MODIFYSTART, this.features_, evt));\n    }\n  };\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  Modify.prototype.removeFeature_ = function removeFeature_ (feature) {\n    this.removeFeatureSegmentData_(feature);\n    // Remove the vertex feature if the collection of canditate features\n    // is empty.\n    if (this.vertexFeature_ && this.features_.getLength() === 0) {\n      /** @type {VectorSource} */ (this.overlay_.getSource()).removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    unlisten(feature, EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  };\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  Modify.prototype.removeFeatureSegmentData_ = function removeFeatureSegmentData_ (feature) {\n    var rBush = this.rBush_;\n    var /** @type {Array<SegmentData>} */ nodesToRemove = [];\n    rBush.forEach(\n      /**\n       * @param {SegmentData} node RTree node.\n       */\n      function(node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n    for (var i = nodesToRemove.length - 1; i >= 0; --i) {\n      var nodeToRemove = nodesToRemove[i];\n      for (var j = this.dragSegments_.length - 1; j >= 0; --j) {\n        if (this.dragSegments_[j][0] === nodeToRemove) {\n          this.dragSegments_.splice(j, 1);\n        }\n      }\n      rBush.remove(nodeToRemove);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Modify.prototype.setActive = function setActive (active) {\n    if (this.vertexFeature_ && !active) {\n      /** @type {VectorSource} */ (this.overlay_.getSource()).removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    PointerInteraction.prototype.setActive.call(this, active);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Modify.prototype.setMap = function setMap (map) {\n    this.overlay_.setMap(map);\n    PointerInteraction.prototype.setMap.call(this, map);\n  };\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  Modify.prototype.getOverlay = function getOverlay () {\n    return this.overlay_;\n  };\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  Modify.prototype.handleSourceAdd_ = function handleSourceAdd_ (event) {\n    if (event.feature) {\n      this.features_.push(event.feature);\n    }\n  };\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  Modify.prototype.handleSourceRemove_ = function handleSourceRemove_ (event) {\n    if (event.feature) {\n      this.features_.remove(event.feature);\n    }\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  Modify.prototype.handleFeatureAdd_ = function handleFeatureAdd_ (evt) {\n    this.addFeature_(/** @type {Feature} */ (evt.element));\n  };\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  Modify.prototype.handleFeatureChange_ = function handleFeatureChange_ (evt) {\n    if (!this.changingFeature_) {\n      var feature = /** @type {Feature} */ (evt.target);\n      this.removeFeature_(feature);\n      this.addFeature_(feature);\n    }\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  Modify.prototype.handleFeatureRemove_ = function handleFeatureRemove_ (evt) {\n    var feature = /** @type {Feature} */ (evt.element);\n    this.removeFeature_(feature);\n  };\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {Point} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writePointGeometry_ = function writePointGeometry_ (feature, geometry) {\n    var coordinates = geometry.getCoordinates();\n    var segmentData = /** @type {SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  };\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeMultiPointGeometry_ = function writeMultiPointGeometry_ (feature, geometry) {\n    var points = geometry.getCoordinates();\n    for (var i = 0, ii = points.length; i < ii; ++i) {\n      var coordinates = points[i];\n      var segmentData = /** @type {SegmentData} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [i],\n        index: i,\n        segment: [coordinates, coordinates]\n      });\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  };\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeLineStringGeometry_ = function writeLineStringGeometry_ (feature, geometry) {\n    var coordinates = geometry.getCoordinates();\n    for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      var segment = coordinates.slice(i, i + 2);\n      var segmentData = /** @type {SegmentData} */ ({\n        feature: feature,\n        geometry: geometry,\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  };\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeMultiLineStringGeometry_ = function writeMultiLineStringGeometry_ (feature, geometry) {\n    var lines = geometry.getCoordinates();\n    for (var j = 0, jj = lines.length; j < jj; ++j) {\n      var coordinates = lines[j];\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        var segment = coordinates.slice(i, i + 2);\n        var segmentData = /** @type {SegmentData} */ ({\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  };\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writePolygonGeometry_ = function writePolygonGeometry_ (feature, geometry) {\n    var rings = geometry.getCoordinates();\n    for (var j = 0, jj = rings.length; j < jj; ++j) {\n      var coordinates = rings[j];\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        var segment = coordinates.slice(i, i + 2);\n        var segmentData = /** @type {SegmentData} */ ({\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  };\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeMultiPolygonGeometry_ = function writeMultiPolygonGeometry_ (feature, geometry) {\n    var polygons = geometry.getCoordinates();\n    for (var k = 0, kk = polygons.length; k < kk; ++k) {\n      var rings = polygons[k];\n      for (var j = 0, jj = rings.length; j < jj; ++j) {\n        var coordinates = rings[j];\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          var segment = coordinates.slice(i, i + 2);\n          var segmentData = /** @type {SegmentData} */ ({\n            feature: feature,\n            geometry: geometry,\n            depth: [j, k],\n            index: i,\n            segment: segment\n          });\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  };\n\n  /**\n   * We convert a circle into two segments.  The segment at index\n   * {@link CIRCLE_CENTER_INDEX} is the\n   * circle's center (a point).  The segment at index\n   * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n   * the circumference, and is not a line segment.\n   *\n   * @param {Feature} feature Feature.\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeCircleGeometry_ = function writeCircleGeometry_ (feature, geometry) {\n    var coordinates = geometry.getCenter();\n    var centerSegmentData = /** @type {SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CENTER_INDEX,\n      segment: [coordinates, coordinates]\n    });\n    var circumferenceSegmentData = /** @type {SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CIRCUMFERENCE_INDEX,\n      segment: [coordinates, coordinates]\n    });\n    var featureSegments = [centerSegmentData, circumferenceSegmentData];\n    centerSegmentData.featureSegments = circumferenceSegmentData.featureSegments = featureSegments;\n    this.rBush_.insert(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n    this.rBush_.insert(geometry.getExtent(), circumferenceSegmentData);\n  };\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  Modify.prototype.writeGeometryCollectionGeometry_ = function writeGeometryCollectionGeometry_ (feature, geometry) {\n    var geometries = geometry.getGeometriesArray();\n    for (var i = 0; i < geometries.length; ++i) {\n      this.SEGMENT_WRITERS_[geometries[i].getType()].call(this, feature, geometries[i]);\n    }\n  };\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @return {Feature} Vertex feature.\n   * @private\n   */\n  Modify.prototype.createOrUpdateVertexFeature_ = function createOrUpdateVertexFeature_ (coordinates) {\n    var vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(coordinates));\n      this.vertexFeature_ = vertexFeature;\n      /** @type {VectorSource} */ (this.overlay_.getSource()).addFeature(vertexFeature);\n    } else {\n      var geometry = /** @type {Point} */ (vertexFeature.getGeometry());\n      geometry.setCoordinates(coordinates);\n    }\n    return vertexFeature;\n  };\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may modify the geometry.\n   * @override\n   */\n  Modify.prototype.handleEvent = function handleEvent (mapBrowserEvent) {\n    if (!(/** @type {import(\"../MapBrowserPointerEvent.js\").default} */ (mapBrowserEvent).pointerEvent)) {\n      return true;\n    }\n    this.lastPointerEvent_ = mapBrowserEvent;\n\n    var handled;\n    if (!mapBrowserEvent.map.getView().getInteracting() &&\n        mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n        !this.handlingDownUpSequence) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n      if (mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK || !this.ignoreNextSingleClick_) {\n        handled = this.removePoint();\n      } else {\n        handled = true;\n      }\n    }\n\n    if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n      this.ignoreNextSingleClick_ = false;\n    }\n\n    return PointerInteraction.prototype.handleEvent.call(this, mapBrowserEvent) && !handled;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Modify.prototype.handleDragEvent = function handleDragEvent (evt) {\n    this.ignoreNextSingleClick_ = false;\n    this.willModifyFeatures_(evt);\n\n    var vertex = evt.coordinate;\n    for (var i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n      var dragSegment = this.dragSegments_[i];\n      var segmentData = dragSegment[0];\n      var depth = segmentData.depth;\n      var geometry = segmentData.geometry;\n      var coordinates = (void 0);\n      var segment = segmentData.segment;\n      var index = dragSegment[1];\n\n      while (vertex.length < geometry.getStride()) {\n        vertex.push(segment[index][vertex.length]);\n      }\n\n      switch (geometry.getType()) {\n        case GeometryType.POINT:\n          coordinates = vertex;\n          segment[0] = segment[1] = vertex;\n          break;\n        case GeometryType.MULTI_POINT:\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index] = vertex;\n          segment[0] = segment[1] = vertex;\n          break;\n        case GeometryType.LINE_STRING:\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.POLYGON:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.CIRCLE:\n          segment[0] = segment[1] = vertex;\n          if (segmentData.index === CIRCLE_CENTER_INDEX) {\n            this.changingFeature_ = true;\n            geometry.setCenter(vertex);\n            this.changingFeature_ = false;\n          } else { // We're dragging the circle's circumference:\n            this.changingFeature_ = true;\n            geometry.setRadius(coordinateDistance(geometry.getCenter(), vertex));\n            this.changingFeature_ = false;\n          }\n          break;\n        default:\n          // pass\n      }\n\n      if (coordinates) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n      }\n    }\n    this.createOrUpdateVertexFeature_(vertex);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Modify.prototype.handleDownEvent = function handleDownEvent (evt) {\n    if (!this.condition_(evt)) {\n      return false;\n    }\n    this.handlePointerAtPixel_(evt.pixel, evt.map);\n    var pixelCoordinate = evt.map.getCoordinateFromPixel(evt.pixel);\n    this.dragSegments_.length = 0;\n    this.modified_ = false;\n    var vertexFeature = this.vertexFeature_;\n    if (vertexFeature) {\n      var insertVertices = [];\n      var geometry = /** @type {Point} */ (vertexFeature.getGeometry());\n      var vertex = geometry.getCoordinates();\n      var vertexExtent = boundingExtent([vertex]);\n      var segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n      var componentSegments = {};\n      segmentDataMatches.sort(compareIndexes);\n      for (var i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n        var segmentDataMatch = segmentDataMatches[i];\n        var segment = segmentDataMatch.segment;\n        var uid = getUid(segmentDataMatch.feature);\n        var depth = segmentDataMatch.depth;\n        if (depth) {\n          uid += '-' + depth.join('-'); // separate feature components\n        }\n        if (!componentSegments[uid]) {\n          componentSegments[uid] = new Array(2);\n        }\n        if (segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\n        segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n\n          var closestVertex = closestOnSegmentData(pixelCoordinate, segmentDataMatch);\n          if (coordinatesEqual(closestVertex, vertex) && !componentSegments[uid][0]) {\n            this.dragSegments_.push([segmentDataMatch, 0]);\n            componentSegments[uid][0] = segmentDataMatch;\n          }\n        } else if (coordinatesEqual(segment[0], vertex) &&\n            !componentSegments[uid][0]) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n        } else if (coordinatesEqual(segment[1], vertex) &&\n            !componentSegments[uid][1]) {\n\n          // prevent dragging closed linestrings by the connecting node\n          if ((segmentDataMatch.geometry.getType() ===\n              GeometryType.LINE_STRING ||\n              segmentDataMatch.geometry.getType() ===\n              GeometryType.MULTI_LINE_STRING) &&\n              componentSegments[uid][0] &&\n              componentSegments[uid][0].index === 0) {\n            continue;\n          }\n\n          this.dragSegments_.push([segmentDataMatch, 1]);\n          componentSegments[uid][1] = segmentDataMatch;\n        } else if (getUid(segment) in this.vertexSegments_ &&\n            (!componentSegments[uid][0] && !componentSegments[uid][1]) &&\n            this.insertVertexCondition_(evt)) {\n          insertVertices.push([segmentDataMatch, vertex]);\n        }\n      }\n      if (insertVertices.length) {\n        this.willModifyFeatures_(evt);\n      }\n      for (var j = insertVertices.length - 1; j >= 0; --j) {\n        this.insertVertex_.apply(this, insertVertices[j]);\n      }\n    }\n    return !!this.vertexFeature_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Modify.prototype.handleUpEvent = function handleUpEvent (evt) {\n    for (var i = this.dragSegments_.length - 1; i >= 0; --i) {\n      var segmentData = this.dragSegments_[i][0];\n      var geometry = segmentData.geometry;\n      if (geometry.getType() === GeometryType.CIRCLE) {\n        // Update a circle object in the R* bush:\n        var coordinates = geometry.getCenter();\n        var centerSegmentData = segmentData.featureSegments[0];\n        var circumferenceSegmentData = segmentData.featureSegments[1];\n        centerSegmentData.segment[0] = centerSegmentData.segment[1] = coordinates;\n        circumferenceSegmentData.segment[0] = circumferenceSegmentData.segment[1] = coordinates;\n        this.rBush_.update(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n        this.rBush_.update(geometry.getExtent(), circumferenceSegmentData);\n      } else {\n        this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n      }\n    }\n    if (this.modified_) {\n      this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n      this.modified_ = false;\n    }\n    return false;\n  };\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @private\n   */\n  Modify.prototype.handlePointerMove_ = function handlePointerMove_ (evt) {\n    this.lastPixel_ = evt.pixel;\n    this.handlePointerAtPixel_(evt.pixel, evt.map);\n  };\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @private\n   */\n  Modify.prototype.handlePointerAtPixel_ = function handlePointerAtPixel_ (pixel, map) {\n    var pixelCoordinate = map.getCoordinateFromPixel(pixel);\n    var sortByDistance = function(a, b) {\n      return pointDistanceToSegmentDataSquared(pixelCoordinate, a) -\n          pointDistanceToSegmentDataSquared(pixelCoordinate, b);\n    };\n\n    var box = buffer(createOrUpdateFromCoordinate(pixelCoordinate),\n      map.getView().getResolution() * this.pixelTolerance_);\n\n    var rBush = this.rBush_;\n    var nodes = rBush.getInExtent(box);\n    if (nodes.length > 0) {\n      nodes.sort(sortByDistance);\n      var node = nodes[0];\n      var closestSegment = node.segment;\n      var vertex = closestOnSegmentData(pixelCoordinate, node);\n      var vertexPixel = map.getPixelFromCoordinate(vertex);\n      var dist = coordinateDistance(pixel, vertexPixel);\n      if (dist <= this.pixelTolerance_) {\n        /** @type {Object<string, boolean>} */\n        var vertexSegments = {};\n\n        if (node.geometry.getType() === GeometryType.CIRCLE &&\n        node.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n\n          this.snappedToVertex_ = true;\n          this.createOrUpdateVertexFeature_(vertex);\n        } else {\n          var pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          var pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          var squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          var squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          this.snappedToVertex_ = dist <= this.pixelTolerance_;\n          if (this.snappedToVertex_) {\n            vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n          }\n          this.createOrUpdateVertexFeature_(vertex);\n          for (var i = 1, ii = nodes.length; i < ii; ++i) {\n            var segment = nodes[i].segment;\n            if ((coordinatesEqual(closestSegment[0], segment[0]) &&\n                coordinatesEqual(closestSegment[1], segment[1]) ||\n                (coordinatesEqual(closestSegment[0], segment[1]) &&\n                coordinatesEqual(closestSegment[1], segment[0])))) {\n              vertexSegments[getUid(segment)] = true;\n            } else {\n              break;\n            }\n          }\n        }\n\n        vertexSegments[getUid(closestSegment)] = true;\n        this.vertexSegments_ = vertexSegments;\n        return;\n      }\n    }\n    if (this.vertexFeature_) {\n      /** @type {VectorSource} */ (this.overlay_.getSource()).removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n  };\n\n  /**\n   * @param {SegmentData} segmentData Segment data.\n   * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n   * @private\n   */\n  Modify.prototype.insertVertex_ = function insertVertex_ (segmentData, vertex) {\n    var segment = segmentData.segment;\n    var feature = segmentData.feature;\n    var geometry = segmentData.geometry;\n    var depth = segmentData.depth;\n    var index = /** @type {number} */ (segmentData.index);\n    var coordinates;\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(0);\n    }\n\n    switch (geometry.getType()) {\n      case GeometryType.MULTI_LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.MULTI_POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates.splice(index + 1, 0, vertex);\n        break;\n      default:\n        return;\n    }\n\n    this.setGeometryCoordinates_(geometry, coordinates);\n    var rTree = this.rBush_;\n    rTree.remove(segmentData);\n    this.updateSegmentIndices_(geometry, index, depth, 1);\n    var newSegmentData = /** @type {SegmentData} */ ({\n      segment: [segment[0], vertex],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index\n    });\n    rTree.insert(boundingExtent(newSegmentData.segment),\n      newSegmentData);\n    this.dragSegments_.push([newSegmentData, 1]);\n\n    var newSegmentData2 = /** @type {SegmentData} */ ({\n      segment: [vertex, segment[1]],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index + 1\n    });\n    rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n    this.dragSegments_.push([newSegmentData2, 0]);\n    this.ignoreNextSingleClick_ = true;\n  };\n\n  /**\n   * Removes the vertex currently being pointed.\n   * @return {boolean} True when a vertex was removed.\n   * @api\n   */\n  Modify.prototype.removePoint = function removePoint () {\n    if (this.lastPointerEvent_ && this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG) {\n      var evt = this.lastPointerEvent_;\n      this.willModifyFeatures_(evt);\n      var removed = this.removeVertex_();\n      this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n      this.modified_ = false;\n      return removed;\n    }\n    return false;\n  };\n\n  /**\n   * Removes a vertex from all matching features.\n   * @return {boolean} True when a vertex was removed.\n   * @private\n   */\n  Modify.prototype.removeVertex_ = function removeVertex_ () {\n    var dragSegments = this.dragSegments_;\n    var segmentsByFeature = {};\n    var deleted = false;\n    var component, coordinates, dragSegment, geometry, i, index, left;\n    var newIndex, right, segmentData, uid;\n    for (i = dragSegments.length - 1; i >= 0; --i) {\n      dragSegment = dragSegments[i];\n      segmentData = dragSegment[0];\n      uid = getUid(segmentData.feature);\n      if (segmentData.depth) {\n        // separate feature components\n        uid += '-' + segmentData.depth.join('-');\n      }\n      if (!(uid in segmentsByFeature)) {\n        segmentsByFeature[uid] = {};\n      }\n      if (dragSegment[1] === 0) {\n        segmentsByFeature[uid].right = segmentData;\n        segmentsByFeature[uid].index = segmentData.index;\n      } else if (dragSegment[1] == 1) {\n        segmentsByFeature[uid].left = segmentData;\n        segmentsByFeature[uid].index = segmentData.index + 1;\n      }\n\n    }\n    for (uid in segmentsByFeature) {\n      right = segmentsByFeature[uid].right;\n      left = segmentsByFeature[uid].left;\n      index = segmentsByFeature[uid].index;\n      newIndex = index - 1;\n      if (left !== undefined) {\n        segmentData = left;\n      } else {\n        segmentData = right;\n      }\n      if (newIndex < 0) {\n        newIndex = 0;\n      }\n      geometry = segmentData.geometry;\n      coordinates = geometry.getCoordinates();\n      component = coordinates;\n      deleted = false;\n      switch (geometry.getType()) {\n        case GeometryType.MULTI_LINE_STRING:\n          if (coordinates[segmentData.depth[0]].length > 2) {\n            coordinates[segmentData.depth[0]].splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case GeometryType.LINE_STRING:\n          if (coordinates.length > 2) {\n            coordinates.splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case GeometryType.MULTI_POLYGON:\n          component = component[segmentData.depth[1]];\n          /* falls through */\n        case GeometryType.POLYGON:\n          component = component[segmentData.depth[0]];\n          if (component.length > 4) {\n            if (index == component.length - 1) {\n              index = 0;\n            }\n            component.splice(index, 1);\n            deleted = true;\n            if (index === 0) {\n              // close the ring again\n              component.pop();\n              component.push(component[0]);\n              newIndex = component.length - 1;\n            }\n          }\n          break;\n        default:\n          // pass\n      }\n\n      if (deleted) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n        var segments = [];\n        if (left !== undefined) {\n          this.rBush_.remove(left);\n          segments.push(left.segment[0]);\n        }\n        if (right !== undefined) {\n          this.rBush_.remove(right);\n          segments.push(right.segment[1]);\n        }\n        if (left !== undefined && right !== undefined) {\n          var newSegmentData = /** @type {SegmentData} */ ({\n            depth: segmentData.depth,\n            feature: segmentData.feature,\n            geometry: segmentData.geometry,\n            index: newIndex,\n            segment: segments\n          });\n          this.rBush_.insert(boundingExtent(newSegmentData.segment),\n            newSegmentData);\n        }\n        this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n        if (this.vertexFeature_) {\n          /** @type {VectorSource} */ (this.overlay_.getSource()).removeFeature(this.vertexFeature_);\n          this.vertexFeature_ = null;\n        }\n        dragSegments.length = 0;\n      }\n\n    }\n    return deleted;\n  };\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {Array} coordinates Coordinates.\n   * @private\n   */\n  Modify.prototype.setGeometryCoordinates_ = function setGeometryCoordinates_ (geometry, coordinates) {\n    this.changingFeature_ = true;\n    geometry.setCoordinates(coordinates);\n    this.changingFeature_ = false;\n  };\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {number} index Index.\n   * @param {Array<number>|undefined} depth Depth.\n   * @param {number} delta Delta (1 or -1).\n   * @private\n   */\n  Modify.prototype.updateSegmentIndices_ = function updateSegmentIndices_ (geometry, index, depth, delta) {\n    this.rBush_.forEachInExtent(geometry.getExtent(), function(segmentDataMatch) {\n      if (segmentDataMatch.geometry === geometry &&\n          (depth === undefined || segmentDataMatch.depth === undefined ||\n          equals(segmentDataMatch.depth, depth)) &&\n          segmentDataMatch.index > index) {\n        segmentDataMatch.index += delta;\n      }\n    });\n  };\n\n  return Modify;\n}(PointerInteraction));\n\n\n/**\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction pointDistanceToSegmentDataSquared(pointCoordinates, segmentData) {\n  var geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE) {\n    var circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (geometry);\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      var distanceToCenterSquared =\n            squaredCoordinateDistance(circleGeometry.getCenter(), pointCoordinates);\n      var distanceToCircumference =\n            Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n  return squaredDistanceToSegment(pointCoordinates, segmentData.segment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData) {\n  var geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE &&\n  segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n    return geometry.getClosestPoint(pointCoordinates);\n  }\n  return closestOnSegment(pointCoordinates, segmentData.segment);\n}\n\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  var style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\n\nexport default Modify;\n\n//# sourceMappingURL=Modify.js.map","/**\n * @module ol/interaction/Select\n */\nimport {getUid} from '../util.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {extend, includes} from '../array.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {singleClick, never, shiftKeyOnly, pointerMove} from '../events/condition.js';\nimport {TRUE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Interaction from './Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {clear} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @enum {string}\n */\nvar SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select'\n};\n\n\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default):boolean} FilterFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition~singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style}).\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition~shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {boolean} [wrapX=true] Wrap the world horizontally on the selection\n * overlay.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nvar SelectEvent = /*@__PURE__*/(function (Event) {\n  function SelectEvent(type, selected, deselected, mapBrowserEvent) {\n    Event.call(this, type);\n\n    /**\n     * Selected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.selected = selected;\n\n    /**\n     * Deselected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.deselected = deselected;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n\n  }\n\n  if ( Event ) SelectEvent.__proto__ = Event;\n  SelectEvent.prototype = Object.create( Event && Event.prototype );\n  SelectEvent.prototype.constructor = SelectEvent;\n\n  return SelectEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * Selected features are added to an internal unmanaged layer.\n *\n * @fires SelectEvent\n * @api\n */\nvar Select = /*@__PURE__*/(function (Interaction) {\n  function Select(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : singleClick;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.removeCondition_ = options.removeCondition ? options.removeCondition : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.toggleCondition_ = options.toggleCondition ? options.toggleCondition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multi_ = options.multi ? options.multi : false;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    var featureOverlay = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        features: options.features,\n        wrapX: options.wrapX\n      }),\n      style: options.style ? options.style :\n        getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    /**\n     * @private\n     * @type {VectorLayer}\n     */\n    this.featureOverlay_ = featureOverlay;\n\n    /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\n    var layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        var layers = options.layers;\n        layerFilter = function(layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object<string, import(\"../layer/Layer.js\").default>}\n     */\n    this.featureLayerAssociation_ = {};\n\n    var features = this.getFeatures();\n    listen(features, CollectionEventType.ADD,\n      this.addFeature_, this);\n    listen(features, CollectionEventType.REMOVE,\n      this.removeFeature_, this);\n  }\n\n  if ( Interaction ) Select.__proto__ = Interaction;\n  Select.prototype = Object.create( Interaction && Interaction.prototype );\n  Select.prototype.constructor = Select;\n\n  /**\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\n   * @private\n   */\n  Select.prototype.addFeatureLayerAssociation_ = function addFeatureLayerAssociation_ (feature, layer) {\n    this.featureLayerAssociation_[getUid(feature)] = layer;\n  };\n\n  /**\n   * Get the selected features.\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} Features collection.\n   * @api\n   */\n  Select.prototype.getFeatures = function getFeatures () {\n    return /** @type {VectorSource} */ (this.featureOverlay_.getSource()).getFeaturesCollection();\n  };\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @returns {number} Hit tolerance in pixels.\n   * @api\n   */\n  Select.prototype.getHitTolerance = function getHitTolerance () {\n    return this.hitTolerance_;\n  };\n\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of\n   * the (last) selected feature. Note that this will not work with any\n   * programmatic method like pushing features to\n   * {@link module:ol/interaction/Select~Select#getFeatures collection}.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature\n   * @return {VectorLayer} Layer.\n   * @api\n   */\n  Select.prototype.getLayer = function getLayer (feature) {\n    return (\n      /** @type {VectorLayer} */ (this.featureLayerAssociation_[getUid(feature)])\n    );\n  };\n\n  /**\n   * Get the overlay layer that this interaction renders selected features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  Select.prototype.getOverlay = function getOverlay () {\n    return this.featureOverlay_;\n  };\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  Select.prototype.setHitTolerance = function setHitTolerance (hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  };\n\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @override\n   * @api\n   */\n  Select.prototype.setMap = function setMap (map) {\n    var currentMap = this.getMap();\n    var selectedFeatures = this.getFeatures();\n    if (currentMap) {\n      selectedFeatures.forEach(currentMap.unskipFeature.bind(currentMap));\n    }\n    Interaction.prototype.setMap.call(this, map);\n    this.featureOverlay_.setMap(map);\n    if (map) {\n      selectedFeatures.forEach(map.skipFeature.bind(map));\n    }\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  Select.prototype.addFeature_ = function addFeature_ (evt) {\n    var map = this.getMap();\n    if (map) {\n      map.skipFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n    }\n  };\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  Select.prototype.removeFeature_ = function removeFeature_ (evt) {\n    var map = this.getMap();\n    if (map) {\n      map.unskipFeature(/** @type {import(\"../Feature.js\").default} */ (evt.element));\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @private\n   */\n  Select.prototype.removeFeatureLayerAssociation_ = function removeFeatureLayerAssociation_ (feature) {\n    delete this.featureLayerAssociation_[getUid(feature)];\n  };\n\n  return Select;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\n * selected state of features.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {Select}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!this.condition_(mapBrowserEvent)) {\n    return true;\n  }\n  var add = this.addCondition_(mapBrowserEvent);\n  var remove = this.removeCondition_(mapBrowserEvent);\n  var toggle = this.toggleCondition_(mapBrowserEvent);\n  var set = !add && !remove && !toggle;\n  var map = mapBrowserEvent.map;\n  var features = this.getFeatures();\n  var deselected = [];\n  var selected = [];\n  if (set) {\n    // Replace the currently selected feature(s) with the feature(s) at the\n    // pixel, or clear the selected feature(s) if there is no feature at\n    // the pixel.\n    clear(this.featureLayerAssociation_);\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      (\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function(feature, layer) {\n          if (this.filter_(feature, layer)) {\n            selected.push(feature);\n            this.addFeatureLayerAssociation_(feature, layer);\n            return !this.multi_;\n          }\n        }).bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n    for (var i = features.getLength() - 1; i >= 0; --i) {\n      var feature = features.item(i);\n      var index = selected.indexOf(feature);\n      if (index > -1) {\n        // feature is already selected\n        selected.splice(index, 1);\n      } else {\n        features.remove(feature);\n        deselected.push(feature);\n      }\n    }\n    if (selected.length !== 0) {\n      features.extend(selected);\n    }\n  } else {\n    // Modify the currently selected feature(s).\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      (\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function(feature, layer) {\n          if (this.filter_(feature, layer)) {\n            if ((add || toggle) && !includes(features.getArray(), feature)) {\n              selected.push(feature);\n              this.addFeatureLayerAssociation_(feature, layer);\n            } else if ((remove || toggle) && includes(features.getArray(), feature)) {\n              deselected.push(feature);\n              this.removeFeatureLayerAssociation_(feature);\n            }\n            return !this.multi_;\n          }\n        }).bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n    for (var j = deselected.length - 1; j >= 0; --j) {\n      features.remove(deselected[j]);\n    }\n    features.extend(selected);\n  }\n  if (selected.length > 0 || deselected.length > 0) {\n    this.dispatchEvent(\n      new SelectEvent(SelectEventType.SELECT,\n        selected, deselected, mapBrowserEvent));\n  }\n  return pointerMove(mapBrowserEvent);\n}\n\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  var styles = createEditingStyle();\n  extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\n  extend(styles[GeometryType.GEOMETRY_COLLECTION], styles[GeometryType.LINE_STRING]);\n\n  return function(feature, resolution) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\nexport default Select;\n\n//# sourceMappingURL=Select.js.map","/**\n * @module ol/interaction/Snap\n */\nimport {getUid} from '../util.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, closestOnCircle, closestOnSegment, squaredDistanceToSegment} from '../coordinate.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction from './Pointer.js';\nimport {getValues} from '../obj.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n\n/**\n * @typedef {Object} Result\n * @property {boolean} snapped\n * @property {import(\"../coordinate.js\").Coordinate|null} vertex\n * @property {import(\"../pixel.js\").Pixel|null} vertexPixel\n */\n\n\n/**\n * @typedef {Object} SegmentData\n * @property {import(\"../Feature.js\").default} feature\n * @property {Array<import(\"../coordinate.js\").Coordinate>} segment\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {import(\"../source/Vector.js\").default} [source] Snap to features from this source. Either this option or features should be provided\n */\n\n\n/**\n * @param  {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n * @return {import(\"../Feature.js\").default} Feature.\n */\nfunction getFeatureFromEvent(evt) {\n  if (/** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature) {\n    return /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature;\n  } else if (/** @type {import(\"../Collection.js\").CollectionEvent} */ (evt).element) {\n    return /** @type {import(\"../Feature.js\").default} */ (/** @type {import(\"../Collection.js\").CollectionEvent} */ (evt).element);\n  }\n\n}\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap';\n *\n *     var snap = new Snap({\n *       source: source\n *     });\n *\n * @api\n */\nvar Snap = /*@__PURE__*/(function (PointerInteraction) {\n  function Snap(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.handleDownEvent) {\n      pointerOptions.handleDownEvent = TRUE;\n    }\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    PointerInteraction.call(this, pointerOptions);\n\n    /**\n     * @type {import(\"../source/Vector.js\").default}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.edge_ = options.edge !== undefined ? options.edge : true;\n\n    /**\n     * @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featuresListenerKeys_ = [];\n\n    /**\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featureChangeListenerKeys_ = {};\n\n    /**\n     * Extents are preserved so indexed segment can be quickly removed\n     * when its feature geometry changes\n     * @type {Object<string, import(\"../extent.js\").Extent>}\n     * @private\n     */\n    this.indexedFeaturesExtents_ = {};\n\n    /**\n     * If a feature geometry changes while a pointer drag|move event occurs, the\n     * feature doesn't get updated right away.  It will be at the next 'pointerup'\n     * event fired.\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.pendingFeatures_ = {};\n\n    /**\n     * Used for distance sorting in sortByDistance_\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.pixelCoordinate_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n      options.pixelTolerance : 10;\n\n    /**\n     * @type {function(SegmentData, SegmentData): number}\n     * @private\n     */\n    this.sortByDistance_ = sortByDistance.bind(this);\n\n\n    /**\n    * Segment RTree for each layer\n    * @type {import(\"../structs/RBush.js\").default<SegmentData>}\n    * @private\n    */\n    this.rBush_ = new RBush();\n\n\n    /**\n    * @const\n    * @private\n    * @type {Object<string, function(import(\"../Feature.js\").default, import(\"../geom/Geometry.js\").default): void>}\n    */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_,\n      'LineString': this.writeLineStringGeometry_,\n      'LinearRing': this.writeLineStringGeometry_,\n      'Polygon': this.writePolygonGeometry_,\n      'MultiPoint': this.writeMultiPointGeometry_,\n      'MultiLineString': this.writeMultiLineStringGeometry_,\n      'MultiPolygon': this.writeMultiPolygonGeometry_,\n      'GeometryCollection': this.writeGeometryCollectionGeometry_,\n      'Circle': this.writeCircleGeometry_\n    };\n  }\n\n  if ( PointerInteraction ) Snap.__proto__ = PointerInteraction;\n  Snap.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  Snap.prototype.constructor = Snap;\n\n  /**\n   * Add a feature to the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {boolean=} opt_listen Whether to listen to the feature change or not\n   *     Defaults to `true`.\n   * @api\n   */\n  Snap.prototype.addFeature = function addFeature (feature, opt_listen) {\n    var register = opt_listen !== undefined ? opt_listen : true;\n    var feature_uid = getUid(feature);\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      var segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (segmentWriter) {\n        this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n        segmentWriter.call(this, feature, geometry);\n      }\n    }\n\n    if (register) {\n      this.featureChangeListenerKeys_[feature_uid] = listen(\n        feature,\n        EventType.CHANGE,\n        this.handleFeatureChange_, this);\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @private\n   */\n  Snap.prototype.forEachFeatureAdd_ = function forEachFeatureAdd_ (feature) {\n    this.addFeature(feature);\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @private\n   */\n  Snap.prototype.forEachFeatureRemove_ = function forEachFeatureRemove_ (feature) {\n    this.removeFeature(feature);\n  };\n\n  /**\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  Snap.prototype.getFeatures_ = function getFeatures_ () {\n    var features;\n    if (this.features_) {\n      features = this.features_;\n    } else if (this.source_) {\n      features = this.source_.getFeatures();\n    }\n    return features;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Snap.prototype.handleEvent = function handleEvent (evt) {\n    var result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n    if (result.snapped) {\n      evt.coordinate = result.vertex.slice(0, 2);\n      evt.pixel = result.vertexPixel;\n    }\n    return PointerInteraction.prototype.handleEvent.call(this, evt);\n  };\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  Snap.prototype.handleFeatureAdd_ = function handleFeatureAdd_ (evt) {\n    var feature = getFeatureFromEvent(evt);\n    this.addFeature(feature);\n  };\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  Snap.prototype.handleFeatureRemove_ = function handleFeatureRemove_ (evt) {\n    var feature = getFeatureFromEvent(evt);\n    this.removeFeature(feature);\n  };\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  Snap.prototype.handleFeatureChange_ = function handleFeatureChange_ (evt) {\n    var feature = /** @type {import(\"../Feature.js\").default} */ (evt.target);\n    if (this.handlingDownUpSequence) {\n      var uid = getUid(feature);\n      if (!(uid in this.pendingFeatures_)) {\n        this.pendingFeatures_[uid] = feature;\n      }\n    } else {\n      this.updateFeature_(feature);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Snap.prototype.handleUpEvent = function handleUpEvent (evt) {\n    var featuresToUpdate = getValues(this.pendingFeatures_);\n    if (featuresToUpdate.length) {\n      featuresToUpdate.forEach(this.updateFeature_.bind(this));\n      this.pendingFeatures_ = {};\n    }\n    return false;\n  };\n\n  /**\n   * Remove a feature from the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n   *     or not. Defaults to `true`.\n   * @api\n   */\n  Snap.prototype.removeFeature = function removeFeature (feature, opt_unlisten) {\n    var unregister = opt_unlisten !== undefined ? opt_unlisten : true;\n    var feature_uid = getUid(feature);\n    var extent = this.indexedFeaturesExtents_[feature_uid];\n    if (extent) {\n      var rBush = this.rBush_;\n      var nodesToRemove = [];\n      rBush.forEachInExtent(extent, function(node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n      for (var i = nodesToRemove.length - 1; i >= 0; --i) {\n        rBush.remove(nodesToRemove[i]);\n      }\n    }\n\n    if (unregister) {\n      unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n      delete this.featureChangeListenerKeys_[feature_uid];\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Snap.prototype.setMap = function setMap (map) {\n    var currentMap = this.getMap();\n    var keys = this.featuresListenerKeys_;\n    var features = /** @type {Array<import(\"../Feature.js\").default>} */ (this.getFeatures_());\n\n    if (currentMap) {\n      keys.forEach(unlistenByKey);\n      keys.length = 0;\n      features.forEach(this.forEachFeatureRemove_.bind(this));\n    }\n    PointerInteraction.prototype.setMap.call(this, map);\n\n    if (map) {\n      if (this.features_) {\n        keys.push(\n          listen(this.features_, CollectionEventType.ADD,\n            this.handleFeatureAdd_, this),\n          listen(this.features_, CollectionEventType.REMOVE,\n            this.handleFeatureRemove_, this)\n        );\n      } else if (this.source_) {\n        keys.push(\n          listen(this.source_, VectorEventType.ADDFEATURE,\n            this.handleFeatureAdd_, this),\n          listen(this.source_, VectorEventType.REMOVEFEATURE,\n            this.handleFeatureRemove_, this)\n        );\n      }\n      features.forEach(this.forEachFeatureAdd_.bind(this));\n    }\n  };\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate Coordinate\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @return {Result} Snap result\n   */\n  Snap.prototype.snapTo = function snapTo (pixel, pixelCoordinate, map) {\n\n    var lowerLeft = map.getCoordinateFromPixel(\n      [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n    var upperRight = map.getCoordinateFromPixel(\n      [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n    var box = boundingExtent([lowerLeft, upperRight]);\n\n    var segments = this.rBush_.getInExtent(box);\n\n    // If snapping on vertices only, don't consider circles\n    if (this.vertex_ && !this.edge_) {\n      segments = segments.filter(function(segment) {\n        return segment.feature.getGeometry().getType() !==\n            GeometryType.CIRCLE;\n      });\n    }\n\n    var snappedToVertex = false;\n    var snapped = false;\n    var vertex = null;\n    var vertexPixel = null;\n    var dist, pixel1, pixel2, squaredDist1, squaredDist2;\n    if (segments.length > 0) {\n      this.pixelCoordinate_ = pixelCoordinate;\n      segments.sort(this.sortByDistance_);\n      var closestSegment = segments[0].segment;\n      var isCircle = segments[0].feature.getGeometry().getType() ===\n          GeometryType.CIRCLE;\n      if (this.vertex_ && !this.edge_) {\n        pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n        pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n        squaredDist1 = squaredCoordinateDistance(pixel, pixel1);\n        squaredDist2 = squaredCoordinateDistance(pixel, pixel2);\n        dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        snappedToVertex = dist <= this.pixelTolerance_;\n        if (snappedToVertex) {\n          snapped = true;\n          vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n          vertexPixel = map.getPixelFromCoordinate(vertex);\n        }\n      } else if (this.edge_) {\n        if (isCircle) {\n          vertex = closestOnCircle(pixelCoordinate,\n            /** @type {import(\"../geom/Circle.js\").default} */ (segments[0].feature.getGeometry()));\n        } else {\n          vertex = closestOnSegment(pixelCoordinate, closestSegment);\n        }\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n        if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n          snapped = true;\n          if (this.vertex_ && !isCircle) {\n            pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n            pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n            squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n            squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n            dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n            snappedToVertex = dist <= this.pixelTolerance_;\n            if (snappedToVertex) {\n              vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n              vertexPixel = map.getPixelFromCoordinate(vertex);\n            }\n          }\n        }\n      }\n      if (snapped) {\n        vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n      }\n    }\n    return {\n      snapped: snapped,\n      vertex: vertex,\n      vertexPixel: vertexPixel\n    };\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  Snap.prototype.updateFeature_ = function updateFeature_ (feature) {\n    this.removeFeature(feature, false);\n    this.addFeature(feature, false);\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeCircleGeometry_ = function writeCircleGeometry_ (feature, geometry) {\n    var polygon = fromCircle(geometry);\n    var coordinates = polygon.getCoordinates()[0];\n    for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      var segment = coordinates.slice(i, i + 2);\n      var segmentData = {\n        feature: feature,\n        segment: segment\n      };\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeGeometryCollectionGeometry_ = function writeGeometryCollectionGeometry_ (feature, geometry) {\n    var geometries = geometry.getGeometriesArray();\n    for (var i = 0; i < geometries.length; ++i) {\n      var segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n      if (segmentWriter) {\n        segmentWriter.call(this, feature, geometries[i]);\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeLineStringGeometry_ = function writeLineStringGeometry_ (feature, geometry) {\n    var coordinates = geometry.getCoordinates();\n    for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      var segment = coordinates.slice(i, i + 2);\n      var segmentData = {\n        feature: feature,\n        segment: segment\n      };\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeMultiLineStringGeometry_ = function writeMultiLineStringGeometry_ (feature, geometry) {\n    var lines = geometry.getCoordinates();\n    for (var j = 0, jj = lines.length; j < jj; ++j) {\n      var coordinates = lines[j];\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        var segment = coordinates.slice(i, i + 2);\n        var segmentData = {\n          feature: feature,\n          segment: segment\n        };\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeMultiPointGeometry_ = function writeMultiPointGeometry_ (feature, geometry) {\n    var points = geometry.getCoordinates();\n    for (var i = 0, ii = points.length; i < ii; ++i) {\n      var coordinates = points[i];\n      var segmentData = {\n        feature: feature,\n        segment: [coordinates, coordinates]\n      };\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writeMultiPolygonGeometry_ = function writeMultiPolygonGeometry_ (feature, geometry) {\n    var polygons = geometry.getCoordinates();\n    for (var k = 0, kk = polygons.length; k < kk; ++k) {\n      var rings = polygons[k];\n      for (var j = 0, jj = rings.length; j < jj; ++j) {\n        var coordinates = rings[j];\n        for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          var segment = coordinates.slice(i, i + 2);\n          var segmentData = {\n            feature: feature,\n            segment: segment\n          };\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writePointGeometry_ = function writePointGeometry_ (feature, geometry) {\n    var coordinates = geometry.getCoordinates();\n    var segmentData = {\n      feature: feature,\n      segment: [coordinates, coordinates]\n    };\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  Snap.prototype.writePolygonGeometry_ = function writePolygonGeometry_ (feature, geometry) {\n    var rings = geometry.getCoordinates();\n    for (var j = 0, jj = rings.length; j < jj; ++j) {\n      var coordinates = rings[j];\n      for (var i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        var segment = coordinates.slice(i, i + 2);\n        var segmentData = {\n          feature: feature,\n          segment: segment\n        };\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  };\n\n  return Snap;\n}(PointerInteraction));\n\n\n/**\n * Sort segments by distance, helper function\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in distance.\n * @this {Snap}\n */\nfunction sortByDistance(a, b) {\n  var deltaA = squaredDistanceToSegment(this.pixelCoordinate_, a.segment);\n  var deltaB = squaredDistanceToSegment(this.pixelCoordinate_, b.segment);\n  return deltaA - deltaB;\n}\n\nexport default Snap;\n\n//# sourceMappingURL=Snap.js.map","/**\n * @module ol/interaction/Translate\n */\nimport Collection from '../Collection.js';\nimport {getChangeEventType} from '../Object.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {TRUE} from '../functions.js';\nimport {includes} from '../array.js';\nimport PointerInteraction from './Pointer.js';\nimport InteractionProperty from './Property.js';\n\n\n/**\n * @enum {string}\n */\nvar TranslateEventType = {\n  /**\n   * Triggered upon feature translation start.\n   * @event TranslateEvent#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event TranslateEvent#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event TranslateEvent#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {Collection<import(\"../Feature.js\").default>} [features] Only features contained in this collection will be able to be translated. If\n * not specified, all features on the map will be able to be translated.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n */\nexport var TranslateEvent = /*@__PURE__*/(function (Event) {\n  function TranslateEvent(type, features, coordinate) {\n\n    Event.call(this, type);\n\n    /**\n     * The features being translated.\n     * @type {Collection<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n  }\n\n  if ( Event ) TranslateEvent.__proto__ = Event;\n  TranslateEvent.prototype = Object.create( Event && Event.prototype );\n  TranslateEvent.prototype.constructor = TranslateEvent;\n\n  return TranslateEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n *\n * @fires TranslateEvent\n * @api\n */\nvar Translate = /*@__PURE__*/(function (PointerInteraction) {\n  function Translate(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    PointerInteraction.call(/** @type {import(\"./Pointer.js\").Options} */ this, (options));\n\n    /**\n     * The last position we translated to.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.lastCoordinate_ = null;\n\n\n    /**\n     * @type {Collection<import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.features_ = options.features !== undefined ? options.features : null;\n\n    /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\n    var layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        var layers = options.layers;\n        layerFilter = function(layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @type {import(\"../Feature.js\").default}\n     * @private\n     */\n    this.lastFeature_ = null;\n\n    listen(this,\n      getChangeEventType(InteractionProperty.ACTIVE),\n      this.handleActiveChanged_, this);\n\n  }\n\n  if ( PointerInteraction ) Translate.__proto__ = PointerInteraction;\n  Translate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  Translate.prototype.constructor = Translate;\n\n  /**\n   * @inheritDoc\n   */\n  Translate.prototype.handleDownEvent = function handleDownEvent (event) {\n    this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n    if (!this.lastCoordinate_ && this.lastFeature_) {\n      this.lastCoordinate_ = event.coordinate;\n      this.handleMoveEvent(event);\n\n      var features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATESTART, features,\n          event.coordinate));\n      return true;\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Translate.prototype.handleUpEvent = function handleUpEvent (event) {\n    if (this.lastCoordinate_) {\n      this.lastCoordinate_ = null;\n      this.handleMoveEvent(event);\n\n      var features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATEEND, features,\n          event.coordinate));\n      return true;\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Translate.prototype.handleDragEvent = function handleDragEvent (event) {\n    if (this.lastCoordinate_) {\n      var newCoordinate = event.coordinate;\n      var deltaX = newCoordinate[0] - this.lastCoordinate_[0];\n      var deltaY = newCoordinate[1] - this.lastCoordinate_[1];\n\n      var features = this.features_ || new Collection([this.lastFeature_]);\n\n      features.forEach(function(feature) {\n        var geom = feature.getGeometry();\n        geom.translate(deltaX, deltaY);\n        feature.setGeometry(geom);\n      });\n\n      this.lastCoordinate_ = newCoordinate;\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATING, features,\n          newCoordinate));\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Translate.prototype.handleMoveEvent = function handleMoveEvent (event) {\n    var elem = event.map.getViewport();\n\n    // Change the cursor to grab/grabbing if hovering any of the features managed\n    // by the interaction\n    if (this.featuresAtPixel_(event.pixel, event.map)) {\n      elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n      elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n    } else {\n      elem.classList.remove('ol-grab', 'ol-grabbing');\n    }\n  };\n\n  /**\n   * Tests to see if the given coordinates intersects any of our selected\n   * features.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel coordinate to test for intersection.\n   * @param {import(\"../PluggableMap.js\").default} map Map to test the intersection on.\n   * @return {import(\"../Feature.js\").default} Returns the feature found at the specified pixel\n   * coordinates.\n   * @private\n   */\n  Translate.prototype.featuresAtPixel_ = function featuresAtPixel_ (pixel, map) {\n    return map.forEachFeatureAtPixel(pixel,\n      function(feature) {\n        if (!this.features_ || includes(this.features_.getArray(), feature)) {\n          return feature;\n        }\n      }.bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n  };\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @returns {number} Hit tolerance in pixels.\n   * @api\n   */\n  Translate.prototype.getHitTolerance = function getHitTolerance () {\n    return this.hitTolerance_;\n  };\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  Translate.prototype.setHitTolerance = function setHitTolerance (hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Translate.prototype.setMap = function setMap (map) {\n    var oldMap = this.getMap();\n    PointerInteraction.prototype.setMap.call(this, map);\n    this.updateState_(oldMap);\n  };\n\n  /**\n   * @private\n   */\n  Translate.prototype.handleActiveChanged_ = function handleActiveChanged_ () {\n    this.updateState_(null);\n  };\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} oldMap Old map.\n   * @private\n   */\n  Translate.prototype.updateState_ = function updateState_ (oldMap) {\n    var map = this.getMap();\n    var active = this.getActive();\n    if (!map || !active) {\n      map = map || oldMap;\n      if (map) {\n        var elem = map.getViewport();\n        elem.classList.remove('ol-grab', 'ol-grabbing');\n      }\n    }\n  };\n\n  return Translate;\n}(PointerInteraction));\n\nexport default Translate;\n\n//# sourceMappingURL=Translate.js.map","/**\n * @module ol/geom/GeometryCollection\n */\nimport {listen, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nvar GeometryCollection = /*@__PURE__*/(function (Geometry) {\n  function GeometryCollection(opt_geometries) {\n\n    Geometry.call(this);\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = opt_geometries ? opt_geometries : null;\n\n    this.listenGeometriesChange_();\n  }\n\n  if ( Geometry ) GeometryCollection.__proto__ = Geometry;\n  GeometryCollection.prototype = Object.create( Geometry && Geometry.prototype );\n  GeometryCollection.prototype.constructor = GeometryCollection;\n\n  /**\n   * @private\n   */\n  GeometryCollection.prototype.unlistenGeometriesChange_ = function unlistenGeometriesChange_ () {\n    if (!this.geometries_) {\n      return;\n    }\n    for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      unlisten(\n        this.geometries_[i], EventType.CHANGE,\n        this.changed, this);\n    }\n  };\n\n  /**\n   * @private\n   */\n  GeometryCollection.prototype.listenGeometriesChange_ = function listenGeometriesChange_ () {\n    if (!this.geometries_) {\n      return;\n    }\n    for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      listen(\n        this.geometries_[i], EventType.CHANGE,\n        this.changed, this);\n    }\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @override\n   * @api\n   */\n  GeometryCollection.prototype.clone = function clone () {\n    var geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    return geometryCollection;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x, y, closestPoint, minSquaredDistance);\n    }\n    return minSquaredDistance;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.containsXY = function containsXY (x, y) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.computeExtent = function computeExtent (extent) {\n    createOrUpdateEmpty(extent);\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  };\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  GeometryCollection.prototype.getGeometries = function getGeometries () {\n    return cloneGeometries(this.geometries_);\n  };\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  GeometryCollection.prototype.getGeometriesArray = function getGeometriesArray () {\n    return this.geometries_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\n      clear(this.simplifiedGeometryCache);\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n    var key = squaredTolerance.toString();\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n      return this.simplifiedGeometryCache[key];\n    } else {\n      var simplifiedGeometries = [];\n      var geometries = this.geometries_;\n      var simplified = false;\n      for (var i = 0, ii = geometries.length; i < ii; ++i) {\n        var geometry = geometries[i];\n        var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n        simplifiedGeometries.push(simplifiedGeometry);\n        if (simplifiedGeometry !== geometry) {\n          simplified = true;\n        }\n      }\n      if (simplified) {\n        var simplifiedGeometryCollection = new GeometryCollection(null);\n        simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n        this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n        return simplifiedGeometryCollection;\n      } else {\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n        return this;\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.getType = function getType () {\n    return GeometryType.GEOMETRY_COLLECTION;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.intersectsExtent = function intersectsExtent (extent) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  GeometryCollection.prototype.isEmpty = function isEmpty () {\n    return this.geometries_.length === 0;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.rotate = function rotate (angle, anchor) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.scale = function scale (sx, opt_sy, opt_anchor) {\n    var anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, opt_sy, anchor);\n    }\n    this.changed();\n  };\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  GeometryCollection.prototype.setGeometries = function setGeometries (geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  };\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  GeometryCollection.prototype.setGeometriesArray = function setGeometriesArray (geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.applyTransform = function applyTransform (transformFn) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.translate = function translate (deltaX, deltaY) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.disposeInternal = function disposeInternal () {\n    this.unlistenGeometriesChange_();\n    Geometry.prototype.disposeInternal.call(this);\n  };\n\n  return GeometryCollection;\n}(Geometry));\n\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  var clonedGeometries = [];\n  for (var i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\n\nexport default GeometryCollection;\n\n//# sourceMappingURL=GeometryCollection.js.map","/**\n * @module ol/format/Feature\n */\nimport {assign} from '../obj.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection, equivalent as equivalentProjection, transformExtent} from '../proj.js';\n\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent of the tile being read. This is only used and\n * required for {@link module:ol/format/MVT}.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nvar FeatureFormat = function FeatureFormat() {\n\n  /**\n   * @protected\n   * @type {import(\"../proj/Projection.js\").default}\n   */\n  this.dataProjection = null;\n\n  /**\n   * @protected\n   * @type {import(\"../proj/Projection.js\").default}\n   */\n  this.defaultFeatureProjection = null;\n\n};\n\n/**\n * Adds the data projection to the read options.\n * @param {Document|Node|Object|string} source Source.\n * @param {ReadOptions=} opt_options Options.\n * @return {ReadOptions|undefined} Options.\n * @protected\n */\nFeatureFormat.prototype.getReadOptions = function getReadOptions (source, opt_options) {\n  var options;\n  if (opt_options) {\n    options = {\n      dataProjection: opt_options.dataProjection ?\n        opt_options.dataProjection : this.readProjection(source),\n      featureProjection: opt_options.featureProjection\n    };\n  }\n  return this.adaptOptions(options);\n};\n\n/**\n * Sets the `dataProjection` on the options, if no `dataProjection`\n * is set.\n * @param {WriteOptions|ReadOptions|undefined} options\n *   Options.\n * @protected\n * @return {WriteOptions|ReadOptions|undefined}\n *   Updated options.\n */\nFeatureFormat.prototype.adaptOptions = function adaptOptions (options) {\n  return assign({\n    dataProjection: this.dataProjection,\n    featureProjection: this.defaultFeatureProjection\n  }, options);\n};\n\n/**\n * Get the extent from the source of the last {@link readFeatures} call.\n * @return {import(\"../extent.js\").Extent} Tile extent.\n */\nFeatureFormat.prototype.getLastExtent = function getLastExtent () {\n  return null;\n};\n\n/**\n * @abstract\n * @return {import(\"./FormatType.js\").default} Format.\n */\nFeatureFormat.prototype.getType = function getType () {\n  return abstract();\n};\n\n/**\n * Read a single feature from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @param {ReadOptions=} opt_options Read options.\n * @return {import(\"../Feature.js\").FeatureLike} Feature.\n */\nFeatureFormat.prototype.readFeature = function readFeature (source, opt_options) {\n  return abstract();\n};\n\n/**\n * Read all features from a source.\n *\n * @abstract\n * @param {Document|Node|ArrayBuffer|Object|string} source Source.\n * @param {ReadOptions=} opt_options Read options.\n * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n */\nFeatureFormat.prototype.readFeatures = function readFeatures (source, opt_options) {\n  return abstract();\n};\n\n/**\n * Read a single geometry from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @param {ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nFeatureFormat.prototype.readGeometry = function readGeometry (source, opt_options) {\n  return abstract();\n};\n\n/**\n * Read the projection from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @return {import(\"../proj/Projection.js\").default} Projection.\n */\nFeatureFormat.prototype.readProjection = function readProjection (source) {\n  return abstract();\n};\n\n/**\n * Encode a feature in this format.\n *\n * @abstract\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeFeature = function writeFeature (feature, opt_options) {\n  return abstract();\n};\n\n/**\n * Encode an array of features in this format.\n *\n * @abstract\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeFeatures = function writeFeatures (features, opt_options) {\n  return abstract();\n};\n\n/**\n * Write a single geometry in this format.\n *\n * @abstract\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeGeometry = function writeGeometry (geometry, opt_options) {\n  return abstract();\n};\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {(WriteOptions|ReadOptions)=} opt_options Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n  var featureProjection = opt_options ? getProjection(opt_options.featureProjection) : null;\n  var dataProjection = opt_options ? getProjection(opt_options.dataProjection) : null;\n\n  var transformed;\n  if (featureProjection && dataProjection && !equivalentProjection(featureProjection, dataProjection)) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection);\n  } else {\n    transformed = geometry;\n  }\n  if (write && opt_options && /** @type {WriteOptions} */ (opt_options).decimals !== undefined) {\n    var power = Math.pow(10, /** @type {WriteOptions} */ (opt_options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    var transform = function(coordinates) {\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions=} opt_options Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n  var featureProjection = opt_options ? getProjection(opt_options.featureProjection) : null;\n  var dataProjection = opt_options ? getProjection(opt_options.dataProjection) : null;\n\n  if (featureProjection && dataProjection && !equivalentProjection(featureProjection, dataProjection)) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  } else {\n    return extent;\n  }\n}\n\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/format/JSONFeature\n */\nimport {abstract} from '../util.js';\nimport FeatureFormat from './Feature.js';\nimport FormatType from './FormatType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nvar JSONFeature = /*@__PURE__*/(function (FeatureFormat) {\n  function JSONFeature() {\n    FeatureFormat.call(this);\n  }\n\n  if ( FeatureFormat ) JSONFeature.__proto__ = FeatureFormat;\n  JSONFeature.prototype = Object.create( FeatureFormat && FeatureFormat.prototype );\n  JSONFeature.prototype.constructor = JSONFeature;\n\n  /**\n   * @inheritDoc\n   */\n  JSONFeature.prototype.getType = function getType () {\n    return FormatType.JSON;\n  };\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  JSONFeature.prototype.readFeature = function readFeature (source, opt_options) {\n    return this.readFeatureFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  };\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  JSONFeature.prototype.readFeatures = function readFeatures (source, opt_options) {\n    return this.readFeaturesFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  JSONFeature.prototype.readFeatureFromObject = function readFeatureFromObject (object, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  JSONFeature.prototype.readFeaturesFromObject = function readFeaturesFromObject (object, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  JSONFeature.prototype.readGeometry = function readGeometry (source, opt_options) {\n    return this.readGeometryFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  JSONFeature.prototype.readGeometryFromObject = function readGeometryFromObject (object, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  JSONFeature.prototype.readProjection = function readProjection (source) {\n    return this.readProjectionFromObject(getObject(source));\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  JSONFeature.prototype.readProjectionFromObject = function readProjectionFromObject (object) {\n    return abstract();\n  };\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  JSONFeature.prototype.writeFeature = function writeFeature (feature, opt_options) {\n    return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  JSONFeature.prototype.writeFeatureObject = function writeFeatureObject (feature, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  JSONFeature.prototype.writeFeatures = function writeFeatures (features, opt_options) {\n    return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  JSONFeature.prototype.writeFeaturesObject = function writeFeaturesObject (features, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  JSONFeature.prototype.writeGeometry = function writeGeometry (geometry, opt_options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  JSONFeature.prototype.writeGeometryObject = function writeGeometryObject (geometry, opt_options) {\n    return abstract();\n  };\n\n  return JSONFeature;\n}(FeatureFormat));\n\n\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    var object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  } else {\n    return null;\n  }\n}\n\n\nexport default JSONFeature;\n\n//# sourceMappingURL=JSONFeature.js.map","/**\n * @module ol/format/EsriJSON\n */\nimport Feature from '../Feature.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent} from '../extent.js';\nimport {transformGeometryWithOptions} from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {linearRingIsClockwise} from '../geom/flat/orient.js';\nimport {isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {import(\"arcgis-rest-api\").Feature} EsriJSONFeature\n * @typedef {import(\"arcgis-rest-api\").FeatureSet} EsriJSONFeatureSet\n * @typedef {import(\"arcgis-rest-api\").Geometry} EsriJSONGeometry\n * @typedef {import(\"arcgis-rest-api\").Point} EsriJSONPoint\n * @typedef {import(\"arcgis-rest-api\").Polyline} EsriJSONPolyline\n * @typedef {import(\"arcgis-rest-api\").Polygon} EsriJSONPolygon\n * @typedef {import(\"arcgis-rest-api\").Multipoint} EsriJSONMultipoint\n * @typedef {import(\"arcgis-rest-api\").HasZM} EsriJSONHasZM\n * @typedef {import(\"arcgis-rest-api\").Position} EsriJSONPosition\n * @typedef {import(\"arcgis-rest-api\").SpatialReferenceWkid} EsriJSONSpatialReferenceWkid\n */\n\n\n/**\n * @typedef {Object} EsriJSONMultiPolygon\n * @property {Array<Array<Array<Array<number>>>>} rings Rings for the MultiPolygon.\n * @property {boolean} [hasM] If the polygon coordinates have an M value.\n * @property {boolean} [hasZ] If the polygon coordinates have a Z value.\n * @property {EsriJSONSpatialReferenceWkid} [spatialReference] The coordinate reference system.\n */\n\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default, function(EsriJSONGeometry): import(\"../geom/Geometry.js\").default>}\n */\nvar GEOMETRY_READERS = {};\nGEOMETRY_READERS[GeometryType.POINT] = readPointGeometry;\nGEOMETRY_READERS[GeometryType.LINE_STRING] = readLineStringGeometry;\nGEOMETRY_READERS[GeometryType.POLYGON] = readPolygonGeometry;\nGEOMETRY_READERS[GeometryType.MULTI_POINT] = readMultiPointGeometry;\nGEOMETRY_READERS[GeometryType.MULTI_LINE_STRING] = readMultiLineStringGeometry;\nGEOMETRY_READERS[GeometryType.MULTI_POLYGON] = readMultiPolygonGeometry;\n\n\n/**\n * @const\n * @type {Object<string, function(import(\"../geom/Geometry.js\").default, import(\"./Feature.js\").WriteOptions=): (EsriJSONGeometry)>}\n */\nvar GEOMETRY_WRITERS = {};\nGEOMETRY_WRITERS[GeometryType.POINT] = writePointGeometry;\nGEOMETRY_WRITERS[GeometryType.LINE_STRING] = writeLineStringGeometry;\nGEOMETRY_WRITERS[GeometryType.POLYGON] = writePolygonGeometry;\nGEOMETRY_WRITERS[GeometryType.MULTI_POINT] = writeMultiPointGeometry;\nGEOMETRY_WRITERS[GeometryType.MULTI_LINE_STRING] = writeMultiLineStringGeometry;\nGEOMETRY_WRITERS[GeometryType.MULTI_POLYGON] = writeMultiPolygonGeometry;\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [geometryName] Geometry name to use when creating features.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the EsriJSON format.\n *\n * @api\n */\nvar EsriJSON = /*@__PURE__*/(function (JSONFeature) {\n  function EsriJSON(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    JSONFeature.call(this);\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n  }\n\n  if ( JSONFeature ) EsriJSON.__proto__ = JSONFeature;\n  EsriJSON.prototype = Object.create( JSONFeature && JSONFeature.prototype );\n  EsriJSON.prototype.constructor = EsriJSON;\n\n  /**\n   * @inheritDoc\n   */\n  EsriJSON.prototype.readFeatureFromObject = function readFeatureFromObject (object, opt_options) {\n    var esriJSONFeature = /** @type {EsriJSONFeature} */ (object);\n    var geometry = readGeometry(esriJSONFeature.geometry, opt_options);\n    var feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    }\n    feature.setGeometry(geometry);\n    if (opt_options && opt_options.idField &&\n      esriJSONFeature.attributes[opt_options.idField]) {\n      feature.setId(/** @type {number} */(esriJSONFeature.attributes[opt_options.idField]));\n    }\n    if (esriJSONFeature.attributes) {\n      feature.setProperties(esriJSONFeature.attributes, true);\n    }\n    return feature;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  EsriJSON.prototype.readFeaturesFromObject = function readFeaturesFromObject (object, opt_options) {\n    var options = opt_options ? opt_options : {};\n    if (object['features']) {\n      var esriJSONFeatureSet = /** @type {EsriJSONFeatureSet} */ (object);\n      /** @type {Array<import(\"../Feature.js\").default>} */\n      var features = [];\n      var esriJSONFeatures = esriJSONFeatureSet.features;\n      options.idField = object.objectIdFieldName;\n      for (var i = 0, ii = esriJSONFeatures.length; i < ii; ++i) {\n        features.push(this.readFeatureFromObject(esriJSONFeatures[i], options));\n      }\n      return features;\n    } else {\n      return [this.readFeatureFromObject(object, options)];\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  EsriJSON.prototype.readGeometryFromObject = function readGeometryFromObject (object, opt_options) {\n    return readGeometry(/** @type {EsriJSONGeometry} */(object), opt_options);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  EsriJSON.prototype.readProjectionFromObject = function readProjectionFromObject (object) {\n    if (object['spatialReference'] && object['spatialReference']['wkid'] !== undefined) {\n      var spatialReference = /** @type {EsriJSONSpatialReferenceWkid} */ (object['spatialReference']);\n      var crs = spatialReference.wkid;\n      return getProjection('EPSG:' + crs);\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * Encode a geometry as a EsriJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {EsriJSONGeometry} Object.\n   * @override\n   * @api\n   */\n  EsriJSON.prototype.writeGeometryObject = function writeGeometryObject (geometry, opt_options) {\n    return writeGeometry(geometry, this.adaptOptions(opt_options));\n  };\n\n  /**\n   * Encode a feature as a esriJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   * @override\n   * @api\n   */\n  EsriJSON.prototype.writeFeatureObject = function writeFeatureObject (feature, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    var object = {};\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      object['geometry'] = writeGeometry(geometry, opt_options);\n      if (opt_options && opt_options.featureProjection) {\n        object['geometry']['spatialReference'] = /** @type {EsriJSONSpatialReferenceWkid} */({\n          wkid: Number(getProjection(opt_options.featureProjection).getCode().split(':').pop())\n        });\n      }\n    }\n    var properties = feature.getProperties();\n    delete properties[feature.getGeometryName()];\n    if (!isEmpty(properties)) {\n      object['attributes'] = properties;\n    } else {\n      object['attributes'] = {};\n    }\n    return object;\n  };\n\n  /**\n   * Encode an array of features as a EsriJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {EsriJSONFeatureSet} EsriJSON Object.\n   * @override\n   * @api\n   */\n  EsriJSON.prototype.writeFeaturesObject = function writeFeaturesObject (features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    var objects = [];\n    for (var i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], opt_options));\n    }\n    return {\n      'features': objects\n    };\n  };\n\n  return EsriJSON;\n}(JSONFeature));\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n  /** @type {import(\"../geom/GeometryType.js\").default} */\n  var type;\n  if (typeof object['x'] === 'number' && typeof object['y'] === 'number') {\n    type = GeometryType.POINT;\n  } else if (object['points']) {\n    type = GeometryType.MULTI_POINT;\n  } else if (object['paths']) {\n    var esriJSONPolyline = /** @type {EsriJSONPolyline} */ (object);\n    if (esriJSONPolyline.paths.length === 1) {\n      type = GeometryType.LINE_STRING;\n    } else {\n      type = GeometryType.MULTI_LINE_STRING;\n    }\n  } else if (object['rings']) {\n    var esriJSONPolygon = /** @type {EsriJSONPolygon} */ (object);\n    var layout = getGeometryLayout(esriJSONPolygon);\n    var rings = convertRings(esriJSONPolygon.rings, layout);\n    if (rings.length === 1) {\n      type = GeometryType.POLYGON;\n      object['rings'] = rings[0];\n    } else {\n      type = GeometryType.MULTI_POLYGON;\n      object['rings'] = rings;\n    }\n  }\n  var geometryReader = GEOMETRY_READERS[type];\n  return transformGeometryWithOptions(geometryReader(object), false, opt_options);\n}\n\n\n/**\n * Determines inner and outer rings.\n * Checks if any polygons in this array contain any other polygons in this\n * array. It is used for checking for holes.\n * Logic inspired by: https://github.com/Esri/terraformer-arcgis-parser\n * @param {Array<!Array<!Array<number>>>} rings Rings.\n * @param {import(\"../geom/GeometryLayout.js\").default} layout Geometry layout.\n * @return {Array<!Array<!Array<!Array<number>>>>} Transformed rings.\n */\nfunction convertRings(rings, layout) {\n  var flatRing = [];\n  var outerRings = [];\n  var holes = [];\n  var i, ii;\n  for (i = 0, ii = rings.length; i < ii; ++i) {\n    flatRing.length = 0;\n    deflateCoordinates(flatRing, 0, rings[i], layout.length);\n    // is this ring an outer ring? is it clockwise?\n    var clockwise = linearRingIsClockwise(flatRing, 0,\n      flatRing.length, layout.length);\n    if (clockwise) {\n      outerRings.push([rings[i]]);\n    } else {\n      holes.push(rings[i]);\n    }\n  }\n  while (holes.length) {\n    var hole = holes.shift();\n    var matched = false;\n    // loop over all outer rings and see if they contain our hole.\n    for (i = outerRings.length - 1; i >= 0; i--) {\n      var outerRing = outerRings[i][0];\n      var containsHole = containsExtent(\n        new LinearRing(outerRing).getExtent(),\n        new LinearRing(hole).getExtent()\n      );\n      if (containsHole) {\n        // the hole is contained push it into our polygon\n        outerRings[i].push(hole);\n        matched = true;\n        break;\n      }\n    }\n    if (!matched) {\n      // no outer rings contain this hole turn it into and outer\n      // ring (reverse it)\n      outerRings.push([hole.reverse()]);\n    }\n  }\n  return outerRings;\n}\n\n\n/**\n * @param {EsriJSONPoint} object Object.\n * @return {import(\"../geom/Geometry.js\").default} Point.\n */\nfunction readPointGeometry(object) {\n  var point;\n  if (object.m !== undefined && object.z !== undefined) {\n    point = new Point([object.x, object.y, object.z, object.m],\n      GeometryLayout.XYZM);\n  } else if (object.z !== undefined) {\n    point = new Point([object.x, object.y, object.z],\n      GeometryLayout.XYZ);\n  } else if (object.m !== undefined) {\n    point = new Point([object.x, object.y, object.m],\n      GeometryLayout.XYM);\n  } else {\n    point = new Point([object.x, object.y]);\n  }\n  return point;\n}\n\n\n/**\n * @param {EsriJSONPolyline} object Object.\n * @return {import(\"../geom/Geometry.js\").default} LineString.\n */\nfunction readLineStringGeometry(object) {\n  var layout = getGeometryLayout(object);\n  return new LineString(object.paths[0], layout);\n}\n\n\n/**\n * @param {EsriJSONPolyline} object Object.\n * @return {import(\"../geom/Geometry.js\").default} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  var layout = getGeometryLayout(object);\n  return new MultiLineString(object.paths, layout);\n}\n\n\n/**\n * @param {EsriJSONHasZM} object Object.\n * @return {import(\"../geom/GeometryLayout.js\").default} The geometry layout to use.\n */\nfunction getGeometryLayout(object) {\n  var layout = GeometryLayout.XY;\n  if (object.hasZ === true && object.hasM === true) {\n    layout = GeometryLayout.XYZM;\n  } else if (object.hasZ === true) {\n    layout = GeometryLayout.XYZ;\n  } else if (object.hasM === true) {\n    layout = GeometryLayout.XYM;\n  }\n  return layout;\n}\n\n\n/**\n * @param {EsriJSONMultipoint} object Object.\n * @return {import(\"../geom/Geometry.js\").default} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  var layout = getGeometryLayout(object);\n  return new MultiPoint(object.points, layout);\n}\n\n\n/**\n * @param {EsriJSONMultiPolygon} object Object.\n * @return {import(\"../geom/Geometry.js\").default} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  var layout = getGeometryLayout(object);\n  return new MultiPolygon(object.rings, layout);\n}\n\n\n/**\n * @param {EsriJSONPolygon} object Object.\n * @return {import(\"../geom/Geometry.js\").default} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  var layout = getGeometryLayout(object);\n  return new Polygon(object.rings, layout);\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONPoint} EsriJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  var coordinates = /** @type {import(\"../geom/Point.js\").default} */ (geometry).getCoordinates();\n  /** @type {EsriJSONPoint} */\n  var esriJSON;\n  var layout = /** @type {import(\"../geom/Point.js\").default} */ (geometry).getLayout();\n  if (layout === GeometryLayout.XYZ) {\n    esriJSON = {\n      x: coordinates[0],\n      y: coordinates[1],\n      z: coordinates[2]\n    };\n  } else if (layout === GeometryLayout.XYM) {\n    esriJSON = {\n      x: coordinates[0],\n      y: coordinates[1],\n      m: coordinates[2]\n    };\n  } else if (layout === GeometryLayout.XYZM) {\n    esriJSON = {\n      x: coordinates[0],\n      y: coordinates[1],\n      z: coordinates[2],\n      m: coordinates[3]\n    };\n  } else if (layout === GeometryLayout.XY) {\n    esriJSON = {\n      x: coordinates[0],\n      y: coordinates[1]\n    };\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n  return esriJSON;\n}\n\n\n/**\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @return {Object} Object with boolean hasZ and hasM keys.\n */\nfunction getHasZM(geometry) {\n  var layout = geometry.getLayout();\n  return {\n    hasZ: (layout === GeometryLayout.XYZ ||\n      layout === GeometryLayout.XYZM),\n    hasM: (layout === GeometryLayout.XYM ||\n      layout === GeometryLayout.XYZM)\n  };\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolyline} EsriJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  var lineString = /** @type {import(\"../geom/LineString.js\").default} */ (geometry);\n  var hasZM = getHasZM(lineString);\n  return {\n    hasZ: hasZM.hasZ,\n    hasM: hasZM.hasM,\n    paths: [\n      /** @type {Array<EsriJSONPosition>} */ (lineString.getCoordinates())\n    ]\n  };\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolygon} EsriJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  var polygon = /** @type {import(\"../geom/Polygon.js\").default} */ (geometry);\n  // Esri geometries use the left-hand rule\n  var hasZM = getHasZM(polygon);\n  return {\n    hasZ: hasZM.hasZ,\n    hasM: hasZM.hasM,\n    rings: /** @type {Array<Array<EsriJSONPosition>>} */ (polygon.getCoordinates(false))\n  };\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolyline} EsriJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  var multiLineString = /** @type {import(\"../geom/MultiLineString.js\").default} */ (geometry);\n  var hasZM = getHasZM(multiLineString);\n  return {\n    hasZ: hasZM.hasZ,\n    hasM: hasZM.hasM,\n    paths: /** @type {Array<Array<EsriJSONPosition>>} */ (multiLineString.getCoordinates())\n  };\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONMultipoint} EsriJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  var multiPoint = /** @type {import(\"../geom/MultiPoint.js\").default} */ (geometry);\n  var hasZM = getHasZM(multiPoint);\n  return {\n    hasZ: hasZM.hasZ,\n    hasM: hasZM.hasM,\n    points: /** @type {Array<EsriJSONPosition>} */ (multiPoint.getCoordinates())\n  };\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolygon} EsriJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  var hasZM = getHasZM(/** @type {import(\"../geom/MultiPolygon.js\").default} */(geometry));\n  var coordinates = /** @type {import(\"../geom/MultiPolygon.js\").default} */ (geometry).getCoordinates(false);\n  var output = [];\n  for (var i = 0; i < coordinates.length; i++) {\n    for (var x = coordinates[i].length - 1; x >= 0; x--) {\n      output.push(coordinates[i][x]);\n    }\n  }\n  return {\n    hasZ: hasZM.hasZ,\n    hasM: hasZM.hasM,\n    rings: /** @type {Array<Array<EsriJSONPosition>>} */ (output)\n  };\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {EsriJSONGeometry} EsriJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  var geometryWriter = GEOMETRY_WRITERS[geometry.getType()];\n  return geometryWriter(transformGeometryWithOptions(geometry, true, opt_options), opt_options);\n}\n\n\nexport default EsriJSON;\n\n//# sourceMappingURL=EsriJSON.js.map","/**\n * @module ol/format/XMLFeature\n */\nimport {abstract} from '../util.js';\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport {isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @abstract\n */\nvar XMLFeature = /*@__PURE__*/(function (FeatureFormat) {\n  function XMLFeature() {\n    FeatureFormat.call(this);\n\n    /**\n     * @type {XMLSerializer}\n     * @private\n     */\n    this.xmlSerializer_ = new XMLSerializer();\n  }\n\n  if ( FeatureFormat ) XMLFeature.__proto__ = FeatureFormat;\n  XMLFeature.prototype = Object.create( FeatureFormat && FeatureFormat.prototype );\n  XMLFeature.prototype.constructor = XMLFeature;\n\n  /**\n   * @inheritDoc\n   */\n  XMLFeature.prototype.getType = function getType () {\n    return FormatType.XML;\n  };\n\n  /**\n   * Read a single feature.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  XMLFeature.prototype.readFeature = function readFeature (source, opt_options) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readFeatureFromDocument(doc, opt_options);\n    } else if (isDocument(source)) {\n      return this.readFeatureFromDocument(/** @type {Document} */ (source), opt_options);\n    } else {\n      return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n    }\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  XMLFeature.prototype.readFeatureFromDocument = function readFeatureFromDocument (doc, opt_options) {\n    var features = this.readFeaturesFromDocument(doc, opt_options);\n    if (features.length > 0) {\n      return features[0];\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  XMLFeature.prototype.readFeatureFromNode = function readFeatureFromNode (node, opt_options) {\n    return null; // not implemented\n  };\n\n  /**\n   * Read all features from a feature collection.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  XMLFeature.prototype.readFeatures = function readFeatures (source, opt_options) {\n    if (!source) {\n      return [];\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readFeaturesFromDocument(doc, opt_options);\n    } else if (isDocument(source)) {\n      return this.readFeaturesFromDocument(\n        /** @type {Document} */ (source), opt_options);\n    } else {\n      return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n    }\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  XMLFeature.prototype.readFeaturesFromDocument = function readFeaturesFromDocument (doc, opt_options) {\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    var features = [];\n    for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(features, this.readFeaturesFromNode(n, opt_options));\n      }\n    }\n    return features;\n  };\n\n  /**\n   * @abstract\n   * @param {Node} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  XMLFeature.prototype.readFeaturesFromNode = function readFeaturesFromNode (node, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  XMLFeature.prototype.readGeometry = function readGeometry (source, opt_options) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readGeometryFromDocument(doc, opt_options);\n    } else if (isDocument(source)) {\n      return this.readGeometryFromDocument(\n        /** @type {Document} */ (source), opt_options);\n    } else {\n      return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n    }\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  XMLFeature.prototype.readGeometryFromDocument = function readGeometryFromDocument (doc, opt_options) {\n    return null; // not implemented\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  XMLFeature.prototype.readGeometryFromNode = function readGeometryFromNode (node, opt_options) {\n    return null; // not implemented\n  };\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  XMLFeature.prototype.readProjection = function readProjection (source) {\n    if (!source) {\n      return null;\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readProjectionFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readProjectionFromDocument(/** @type {Document} */ (source));\n    } else {\n      return this.readProjectionFromNode(/** @type {Node} */ (source));\n    }\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  XMLFeature.prototype.readProjectionFromDocument = function readProjectionFromDocument (doc) {\n    return this.dataProjection;\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  XMLFeature.prototype.readProjectionFromNode = function readProjectionFromNode (node) {\n    return this.dataProjection;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  XMLFeature.prototype.writeFeature = function writeFeature (feature, opt_options) {\n    var node = this.writeFeatureNode(feature, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  };\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n   * @protected\n   * @return {Node} Node.\n   */\n  XMLFeature.prototype.writeFeatureNode = function writeFeatureNode (feature, opt_options) {\n    return null; // not implemented\n  };\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Result.\n   * @api\n   */\n  XMLFeature.prototype.writeFeatures = function writeFeatures (features, opt_options) {\n    var node = this.writeFeaturesNode(features, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  };\n\n  /**\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   */\n  XMLFeature.prototype.writeFeaturesNode = function writeFeaturesNode (features, opt_options) {\n    return null; // not implemented\n  };\n\n  /**\n   * @inheritDoc\n   */\n  XMLFeature.prototype.writeGeometry = function writeGeometry (geometry, opt_options) {\n    var node = this.writeGeometryNode(geometry, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  };\n\n  /**\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   */\n  XMLFeature.prototype.writeGeometryNode = function writeGeometryNode (geometry, opt_options) {\n    return null; // not implemented\n  };\n\n  return XMLFeature;\n}(FeatureFormat));\n\n\nexport default XMLFeature;\n\n//# sourceMappingURL=XMLFeature.js.map","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformGeometryWithOptions, transformExtentWithOptions} from './Feature.js';\nimport XMLFeature from './XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport {getAllTextContent, getAttributeNS, makeArrayPusher, makeReplacer, parseNode, pushParseAndPop} from '../xml.js';\n\n\n/**\n * @const\n * @type {string}\n */\nexport var GMLNS = 'http://www.opengis.net/gml';\n\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n */\nvar ONLY_WHITESPACE_RE = /^[\\s\\xa0]*$/;\n\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] Feature\n * namespace. If not defined will be derived from GML. If multiple\n * feature types have been configured which come from different feature\n * namespaces, this will be an object with the keys being the prefixes used\n * in the entries of featureType array. The values of the object will be the\n * feature namespaces themselves. So for instance there might be a featureType\n * item `topp:states` in the `featureType` array and then there will be a key\n * `topp` in the featureNS object with value `http://www.openplans.org/topp`.\n * @property {Array<string>|string} [featureType] Feature type(s) to parse.\n * If multiple feature types need to be configured\n * which come from different feature namespaces, `featureNS` will be an object\n * with the keys being the prefixes used in the entries of featureType array.\n * The values of the object will be the feature namespaces themselves.\n * So for instance there might be a featureType item `topp:states` and then\n * there will be a key named `topp` in the featureNS object with value\n * `http://www.openplans.org/topp`.\n * @property {string} srsName srsName to use when writing geometries.\n * @property {boolean} [surface=false] Write gml:Surface instead of gml:Polygon\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [curve=false] Write gml:Curve instead of gml:LineString\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [multiCurve=true] Write gml:MultiCurve instead of gml:MultiLineString.\n * Since the latter is deprecated in GML 3.\n * @property {boolean} [multiSurface=true] Write gml:multiSurface instead of\n * gml:MultiPolygon. Since the latter is deprecated in GML 3.\n * @property {string} [schemaLocation] Optional schemaLocation to use when\n * writing out the GML, this will override the default provided.\n * @property {boolean} [hasZ=false] If coordinates have a Z value.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes GML2 and GML3.\n *\n * @abstract\n */\nvar GMLBase = /*@__PURE__*/(function (XMLFeature) {\n  function GMLBase(opt_options) {\n    XMLFeature.call(this);\n\n    var options = /** @type {Options} */ (opt_options ? opt_options : {});\n\n    /**\n     * @protected\n     * @type {Array<string>|string|undefined}\n     */\n    this.featureType = options.featureType;\n\n    /**\n     * @protected\n     * @type {Object<string, string>|string|undefined}\n     */\n    this.featureNS = options.featureNS;\n\n    /**\n     * @protected\n     * @type {string}\n     */\n    this.srsName = options.srsName;\n\n    /**\n     * @protected\n     * @type {string}\n     */\n    this.schemaLocation = '';\n\n    /**\n     * @type {Object<string, Object<string, Object>>}\n     */\n    this.FEATURE_COLLECTION_PARSERS = {};\n    this.FEATURE_COLLECTION_PARSERS[this.namespace] = {\n      'featureMember': makeArrayPusher(this.readFeaturesInternal),\n      'featureMembers': makeReplacer(this.readFeaturesInternal)\n    };\n  }\n\n  if ( XMLFeature ) GMLBase.__proto__ = XMLFeature;\n  GMLBase.prototype = Object.create( XMLFeature && XMLFeature.prototype );\n  GMLBase.prototype.constructor = GMLBase;\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<Feature> | undefined} Features.\n   */\n  GMLBase.prototype.readFeaturesInternal = function readFeaturesInternal (node, objectStack) {\n    var localName = node.localName;\n    var features = null;\n    if (localName == 'FeatureCollection') {\n      features = pushParseAndPop([],\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    } else if (localName == 'featureMembers' || localName == 'featureMember') {\n      var context = objectStack[0];\n      var featureType = context['featureType'];\n      var featureNS = context['featureNS'];\n      var prefix = 'p';\n      var defaultPrefix = 'p0';\n      if (!featureType && node.childNodes) {\n        featureType = [], featureNS = {};\n        for (var i = 0, ii = node.childNodes.length; i < ii; ++i) {\n          var child = node.childNodes[i];\n          if (child.nodeType === 1) {\n            var ft = child.nodeName.split(':').pop();\n            if (featureType.indexOf(ft) === -1) {\n              var key = '';\n              var count = 0;\n              var uri = child.namespaceURI;\n              for (var candidate in featureNS) {\n                if (featureNS[candidate] === uri) {\n                  key = candidate;\n                  break;\n                }\n                ++count;\n              }\n              if (!key) {\n                key = prefix + count;\n                featureNS[key] = uri;\n              }\n              featureType.push(key + ':' + ft);\n            }\n          }\n        }\n        if (localName != 'featureMember') {\n          // recheck featureType for each featureMember\n          context['featureType'] = featureType;\n          context['featureNS'] = featureNS;\n        }\n      }\n      if (typeof featureNS === 'string') {\n        var ns = featureNS;\n        featureNS = {};\n        featureNS[defaultPrefix] = ns;\n      }\n      /** @type {Object<string, Object<string, import(\"../xml.js\").Parser>>} */\n      var parsersNS = {};\n      var featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n      for (var p in featureNS) {\n        /** @type {Object<string, import(\"../xml.js\").Parser>} */\n        var parsers = {};\n        for (var i$1 = 0, ii$1 = featureTypes.length; i$1 < ii$1; ++i$1) {\n          var featurePrefix = featureTypes[i$1].indexOf(':') === -1 ?\n            defaultPrefix : featureTypes[i$1].split(':')[0];\n          if (featurePrefix === p) {\n            parsers[featureTypes[i$1].split(':').pop()] =\n                (localName == 'featureMembers') ?\n                  makeArrayPusher(this.readFeatureElement, this) :\n                  makeReplacer(this.readFeatureElement, this);\n          }\n        }\n        parsersNS[featureNS[p]] = parsers;\n      }\n      if (localName == 'featureMember') {\n        features = pushParseAndPop(undefined, parsersNS, node, objectStack);\n      } else {\n        features = pushParseAndPop([], parsersNS, node, objectStack);\n      }\n    }\n    if (features === null) {\n      features = [];\n    }\n    return features;\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent|undefined} Geometry.\n   */\n  GMLBase.prototype.readGeometryElement = function readGeometryElement (node, objectStack) {\n    var context = /** @type {Object} */ (objectStack[0]);\n    context['srsName'] = node.firstElementChild.getAttribute('srsName');\n    context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n    var geometry = pushParseAndPop(null, this.GEOMETRY_PARSERS, node, objectStack, this);\n    if (geometry) {\n      if (Array.isArray(geometry)) {\n        return transformExtentWithOptions(/** @type {import(\"../extent.js\").Extent} */ (geometry), context);\n      } else {\n        return transformGeometryWithOptions(/** @type {import(\"../geom/Geometry.js\").default} */ (geometry), false, context);\n      }\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {boolean} asFeature whether result should be wrapped as a feature.\n   * @return {Feature|Object} Feature\n   */\n  GMLBase.prototype.readFeatureElementInternal = function readFeatureElementInternal (node, objectStack, asFeature) {\n    var geometryName;\n    var values = {};\n    for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n      var value = (void 0);\n      var localName = n.localName;\n      // first, check if it is simple attribute\n      if (n.childNodes.length === 0\n              || (n.childNodes.length === 1 && (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n        value = getAllTextContent(n, false);\n        if (ONLY_WHITESPACE_RE.test(value)) {\n          value = undefined;\n        }\n      } else {\n        if (asFeature) {\n          //if feature, try it as a geometry\n          value = this.readGeometryElement(n, objectStack);\n        }\n        if (!value) { //if not a geometry or not a feature, treat it as a complex attribute\n          value = this.readFeatureElementInternal(n, objectStack, false);\n        } else if (localName !== 'boundedBy') {\n          // boundedBy is an extent and must not be considered as a geometry\n          geometryName = localName;\n        }\n      }\n\n      if (values[localName]) {\n        if (!(values[localName] instanceof Array)) {\n          values[localName] = [values[localName]];\n        }\n        values[localName].push(value);\n      } else {\n        values[localName] = value;\n      }\n\n      var len = n.attributes.length;\n      if (len > 0) {\n        values[localName] = {_content_: values[localName]};\n        for (var i = 0; i < len; i++) {\n          var attName = n.attributes[i].name;\n          values[localName][attName] = n.attributes[i].value;\n        }\n      }\n    }\n    if (!asFeature) {\n      return values;\n    } else {\n      var feature = new Feature(values);\n      if (geometryName) {\n        feature.setGeometryName(geometryName);\n      }\n      var fid = node.getAttribute('fid') ||\n           getAttributeNS(node, this.namespace, 'id');\n      if (fid) {\n        feature.setId(fid);\n      }\n      return feature;\n    }\n  };\n\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Feature} Feature.\n   */\n  GMLBase.prototype.readFeatureElement = function readFeatureElement (node, objectStack) {\n    return this.readFeatureElementInternal(node, objectStack, true);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Point|undefined} Point.\n   */\n  GMLBase.prototype.readPoint = function readPoint (node, objectStack) {\n    var flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\n    if (flatCoordinates) {\n      return new Point(flatCoordinates, GeometryLayout.XYZ);\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPoint|undefined} MultiPoint.\n   */\n  GMLBase.prototype.readMultiPoint = function readMultiPoint (node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    var coordinates = pushParseAndPop([],\n      this.MULTIPOINT_PARSERS_, node, objectStack, this);\n    if (coordinates) {\n      return new MultiPoint(coordinates);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiLineString|undefined} MultiLineString.\n   */\n  GMLBase.prototype.readMultiLineString = function readMultiLineString (node, objectStack) {\n    /** @type {Array<LineString>} */\n    var lineStrings = pushParseAndPop([],\n      this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n    if (lineStrings) {\n      return new MultiLineString(lineStrings);\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {MultiPolygon|undefined} MultiPolygon.\n   */\n  GMLBase.prototype.readMultiPolygon = function readMultiPolygon (node, objectStack) {\n    /** @type {Array<Polygon>} */\n    var polygons = pushParseAndPop([], this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n    if (polygons) {\n      return new MultiPolygon(polygons);\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  GMLBase.prototype.pointMemberParser_ = function pointMemberParser_ (node, objectStack) {\n    parseNode(this.POINTMEMBER_PARSERS_, node, objectStack, this);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  GMLBase.prototype.lineStringMemberParser_ = function lineStringMemberParser_ (node, objectStack) {\n    parseNode(this.LINESTRINGMEMBER_PARSERS_, node, objectStack, this);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  GMLBase.prototype.polygonMemberParser_ = function polygonMemberParser_ (node, objectStack) {\n    parseNode(this.POLYGONMEMBER_PARSERS_, node, objectStack, this);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LineString|undefined} LineString.\n   */\n  GMLBase.prototype.readLineString = function readLineString (node, objectStack) {\n    var flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\n    if (flatCoordinates) {\n      var lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n      return lineString;\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>|undefined} LinearRing flat coordinates.\n   */\n  GMLBase.prototype.readFlatLinearRing_ = function readFlatLinearRing_ (node, objectStack) {\n    var ring = pushParseAndPop(null,\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS, node,\n      objectStack, this);\n    if (ring) {\n      return ring;\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {LinearRing|undefined} LinearRing.\n   */\n  GMLBase.prototype.readLinearRing = function readLinearRing (node, objectStack) {\n    var flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\n    if (flatCoordinates) {\n      return new LinearRing(flatCoordinates, GeometryLayout.XYZ);\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Polygon|undefined} Polygon.\n   */\n  GMLBase.prototype.readPolygon = function readPolygon (node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    var flatLinearRings = pushParseAndPop([null],\n      this.FLAT_LINEAR_RINGS_PARSERS, node, objectStack, this);\n    if (flatLinearRings && flatLinearRings[0]) {\n      var flatCoordinates = flatLinearRings[0];\n      var ends = [flatCoordinates.length];\n      var i, ii;\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n        extend(flatCoordinates, flatLinearRings[i]);\n        ends.push(flatCoordinates.length);\n      }\n      return new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>} Flat coordinates.\n   */\n  GMLBase.prototype.readFlatCoordinatesFromNode_ = function readFlatCoordinatesFromNode_ (node, objectStack) {\n    return pushParseAndPop(null, this.GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack, this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GMLBase.prototype.readGeometryFromNode = function readGeometryFromNode (node, opt_options) {\n    var geometry = this.readGeometryElement(node,\n      [this.getReadOptions(node, opt_options ? opt_options : {})]);\n    return geometry ? geometry : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GMLBase.prototype.readFeaturesFromNode = function readFeaturesFromNode (node, opt_options) {\n    var options = {\n      featureType: this.featureType,\n      featureNS: this.featureNS\n    };\n    if (opt_options) {\n      assign(options, this.getReadOptions(node, opt_options));\n    }\n    var features = this.readFeaturesInternal(node, [options]);\n    return features || [];\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GMLBase.prototype.readProjectionFromNode = function readProjectionFromNode (node) {\n    return getProjection(this.srsName ? this.srsName : node.firstElementChild.getAttribute('srsName'));\n  };\n\n  return GMLBase;\n}(XMLFeature));\n\n\nGMLBase.prototype.namespace = GMLNS;\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGMLBase.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {}\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGMLBase.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {}\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGMLBase.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {}\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser_),\n    'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeArrayPusher(GMLBase.prototype.lineStringMemberParser_),\n    'lineStringMembers': makeArrayPusher(GMLBase.prototype.lineStringMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser_),\n    'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing_)\n  }\n};\n\nexport default GMLBase;\n\n//# sourceMappingURL=GMLBase.js.map","/**\n * @module ol/format/xsd\n */\nimport {getAllTextContent, DOCUMENT} from '../xml.js';\nimport {padNumber} from '../string.js';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  var s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  var m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  var s = getAllTextContent(node, false);\n  var dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  var s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  var m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeInteger(node) {\n  var s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  var m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, (bool) ? '1' : '0');\n}\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(DOCUMENT.createCDATASection(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  var date = new Date(dateTime * 1000);\n  var string = date.getUTCFullYear() + '-' +\n      padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      padNumber(date.getUTCDate(), 2) + 'T' +\n      padNumber(date.getUTCHours(), 2) + ':' +\n      padNumber(date.getUTCMinutes(), 2) + ':' +\n      padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  var string = decimal.toPrecision();\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  var string = nonNegativeInteger.toString();\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n//# sourceMappingURL=xsd.js.map","/**\n * @module ol/format/GML3\n */\nimport {extend} from '../array.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformExtentWithOptions, transformGeometryWithOptions} from './Feature.js';\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport {readNonNegativeIntegerString, writeStringTextNode} from './xsd.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport {createElementNS, getAllTextContent, makeArrayPusher, makeChildAppender,\n  makeReplacer, makeSimpleNodeFactory, OBJECT_PROPERTY_NODE_FACTORY, parseNode,\n  pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI} from '../xml.js';\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nvar schemaLocation = GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @api\n */\nvar GML3 = /*@__PURE__*/(function (GMLBase) {\n  function GML3(opt_options) {\n    var options = /** @type {import(\"./GMLBase.js\").Options} */\n        (opt_options ? opt_options : {});\n\n    GMLBase.call(this, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.surface_ = options.surface !== undefined ? options.surface : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.curve_ = options.curve !== undefined ? options.curve : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multiCurve_ = options.multiCurve !== undefined ?\n      options.multiCurve : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multiSurface_ = options.multiSurface !== undefined ?\n      options.multiSurface : true;\n\n    /**\n     * @inheritDoc\n     */\n    this.schemaLocation = options.schemaLocation ?\n      options.schemaLocation : schemaLocation;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hasZ = options.hasZ !== undefined ?\n      options.hasZ : false;\n\n  }\n\n  if ( GMLBase ) GML3.__proto__ = GMLBase;\n  GML3.prototype = Object.create( GMLBase && GMLBase.prototype );\n  GML3.prototype.constructor = GML3;\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {MultiLineString|undefined} MultiLineString.\n   */\n  GML3.prototype.readMultiCurve_ = function readMultiCurve_ (node, objectStack) {\n    /** @type {Array<LineString>} */\n    var lineStrings = pushParseAndPop([],\n      this.MULTICURVE_PARSERS_, node, objectStack, this);\n    if (lineStrings) {\n      var multiLineString = new MultiLineString(lineStrings);\n      return multiLineString;\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {MultiPolygon|undefined} MultiPolygon.\n   */\n  GML3.prototype.readMultiSurface_ = function readMultiSurface_ (node, objectStack) {\n    /** @type {Array<Polygon>} */\n    var polygons = pushParseAndPop([],\n      this.MULTISURFACE_PARSERS_, node, objectStack, this);\n    if (polygons) {\n      return new MultiPolygon(polygons);\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  GML3.prototype.curveMemberParser_ = function curveMemberParser_ (node, objectStack) {\n    parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  GML3.prototype.surfaceMemberParser_ = function surfaceMemberParser_ (node, objectStack) {\n    parseNode(this.SURFACEMEMBER_PARSERS_,\n      node, objectStack, this);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<(Array<number>)>|undefined} flat coordinates.\n   */\n  GML3.prototype.readPatch_ = function readPatch_ (node, objectStack) {\n    return pushParseAndPop([null],\n      this.PATCHES_PARSERS_, node, objectStack, this);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>|undefined} flat coordinates.\n   */\n  GML3.prototype.readSegment_ = function readSegment_ (node, objectStack) {\n    return pushParseAndPop([null],\n      this.SEGMENTS_PARSERS_, node, objectStack, this);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<(Array<number>)>|undefined} flat coordinates.\n   */\n  GML3.prototype.readPolygonPatch_ = function readPolygonPatch_ (node, objectStack) {\n    return pushParseAndPop([null],\n      this.FLAT_LINEAR_RINGS_PARSERS, node, objectStack, this);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>|undefined} flat coordinates.\n   */\n  GML3.prototype.readLineStringSegment_ = function readLineStringSegment_ (node, objectStack) {\n    return pushParseAndPop([null],\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS,\n      node, objectStack, this);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  GML3.prototype.interiorParser_ = function interiorParser_ (node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    var flatLinearRing = pushParseAndPop(undefined,\n      this.RING_PARSERS, node, objectStack, this);\n    if (flatLinearRing) {\n      var flatLinearRings = /** @type {Array<Array<number>>} */\n          (objectStack[objectStack.length - 1]);\n      flatLinearRings.push(flatLinearRing);\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  GML3.prototype.exteriorParser_ = function exteriorParser_ (node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    var flatLinearRing = pushParseAndPop(undefined,\n      this.RING_PARSERS, node, objectStack, this);\n    if (flatLinearRing) {\n      var flatLinearRings = /** @type {Array<Array<number>>} */\n          (objectStack[objectStack.length - 1]);\n      flatLinearRings[0] = flatLinearRing;\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Polygon|undefined} Polygon.\n   */\n  GML3.prototype.readSurface_ = function readSurface_ (node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    var flatLinearRings = pushParseAndPop([null],\n      this.SURFACE_PARSERS_, node, objectStack, this);\n    if (flatLinearRings && flatLinearRings[0]) {\n      var flatCoordinates = flatLinearRings[0];\n      var ends = [flatCoordinates.length];\n      var i, ii;\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n        extend(flatCoordinates, flatLinearRings[i]);\n        ends.push(flatCoordinates.length);\n      }\n      return new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {LineString|undefined} LineString.\n   */\n  GML3.prototype.readCurve_ = function readCurve_ (node, objectStack) {\n    /** @type {Array<number>} */\n    var flatCoordinates = pushParseAndPop([null],\n      this.CURVE_PARSERS_, node, objectStack, this);\n    if (flatCoordinates) {\n      var lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n      return lineString;\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n   */\n  GML3.prototype.readEnvelope_ = function readEnvelope_ (node, objectStack) {\n    /** @type {Array<number>} */\n    var flatCoordinates = pushParseAndPop([null],\n      this.ENVELOPE_PARSERS_, node, objectStack, this);\n    return createOrUpdate(flatCoordinates[1][0],\n      flatCoordinates[1][1], flatCoordinates[2][0],\n      flatCoordinates[2][1]);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  GML3.prototype.readFlatPos_ = function readFlatPos_ (node, objectStack) {\n    var s = getAllTextContent(node, false);\n    var re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n    /** @type {Array<number>} */\n    var flatCoordinates = [];\n    var m;\n    while ((m = re.exec(s))) {\n      flatCoordinates.push(parseFloat(m[1]));\n      s = s.substr(m[0].length);\n    }\n    if (s !== '') {\n      return undefined;\n    }\n    var context = objectStack[0];\n    var containerSrs = context['srsName'];\n    var axisOrientation = 'enu';\n    if (containerSrs) {\n      var proj = getProjection(containerSrs);\n      axisOrientation = proj.getAxisOrientation();\n    }\n    if (axisOrientation === 'neu') {\n      var i, ii;\n      for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n        var y = flatCoordinates[i];\n        var x = flatCoordinates[i + 1];\n        flatCoordinates[i] = x;\n        flatCoordinates[i + 1] = y;\n      }\n    }\n    var len = flatCoordinates.length;\n    if (len == 2) {\n      flatCoordinates.push(0);\n    }\n    if (len === 0) {\n      return undefined;\n    }\n    return flatCoordinates;\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  GML3.prototype.readFlatPosList_ = function readFlatPosList_ (node, objectStack) {\n    var s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n    var context = objectStack[0];\n    var containerSrs = context['srsName'];\n    var contextDimension = context['srsDimension'];\n    var axisOrientation = 'enu';\n    if (containerSrs) {\n      var proj = getProjection(containerSrs);\n      axisOrientation = proj.getAxisOrientation();\n    }\n    var coords = s.split(/\\s+/);\n    // The \"dimension\" attribute is from the GML 3.0.1 spec.\n    var dim = 2;\n    if (node.getAttribute('srsDimension')) {\n      dim = readNonNegativeIntegerString(\n        node.getAttribute('srsDimension'));\n    } else if (node.getAttribute('dimension')) {\n      dim = readNonNegativeIntegerString(\n        node.getAttribute('dimension'));\n    } else if (/** @type {Element} */ (node.parentNode).getAttribute('srsDimension')) {\n      dim = readNonNegativeIntegerString(\n        /** @type {Element} */ (node.parentNode).getAttribute('srsDimension'));\n    } else if (contextDimension) {\n      dim = readNonNegativeIntegerString(contextDimension);\n    }\n    var x, y, z;\n    var flatCoordinates = [];\n    for (var i = 0, ii = coords.length; i < ii; i += dim) {\n      x = parseFloat(coords[i]);\n      y = parseFloat(coords[i + 1]);\n      z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n      if (axisOrientation.substr(0, 2) === 'en') {\n        flatCoordinates.push(x, y, z);\n      } else {\n        flatCoordinates.push(y, x, z);\n      }\n    }\n    return flatCoordinates;\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} value Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writePos_ = function writePos_ (node, value, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsDimension = hasZ ? '3' : '2';\n    node.setAttribute('srsDimension', srsDimension);\n    var srsName = context['srsName'];\n    var axisOrientation = 'enu';\n    if (srsName) {\n      axisOrientation = getProjection(srsName).getAxisOrientation();\n    }\n    var point = value.getCoordinates();\n    var coords;\n    // only 2d for simple features profile\n    if (axisOrientation.substr(0, 2) === 'en') {\n      coords = (point[0] + ' ' + point[1]);\n    } else {\n      coords = (point[1] + ' ' + point[0]);\n    }\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      var z = point[2] || 0;\n      coords += ' ' + z;\n    }\n    writeStringTextNode(node, coords);\n  };\n\n  /**\n   * @param {Array<number>} point Point geometry.\n   * @param {string=} opt_srsName Optional srsName\n   * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n   * @return {string} The coords string.\n   * @private\n   */\n  GML3.prototype.getCoords_ = function getCoords_ (point, opt_srsName, opt_hasZ) {\n    var axisOrientation = 'enu';\n    if (opt_srsName) {\n      axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n    }\n    var coords = ((axisOrientation.substr(0, 2) === 'en') ?\n      point[0] + ' ' + point[1] :\n      point[1] + ' ' + point[0]);\n    if (opt_hasZ) {\n      // For newly created points, Z can be undefined.\n      var z = point[2] || 0;\n      coords += ' ' + z;\n    }\n\n    return coords;\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString|import(\"../geom/LinearRing.js\").default} value Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writePosList_ = function writePosList_ (node, value, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsDimension = hasZ ? '3' : '2';\n    node.setAttribute('srsDimension', srsDimension);\n    var srsName = context['srsName'];\n    // only 2d for simple features profile\n    var points = value.getCoordinates();\n    var len = points.length;\n    var parts = new Array(len);\n    var point;\n    for (var i = 0; i < len; ++i) {\n      point = points[i];\n      parts[i] = this.getCoords_(point, srsName, hasZ);\n    }\n    writeStringTextNode(node, parts.join(' '));\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writePoint_ = function writePoint_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var pos = createElementNS(node.namespaceURI, 'pos');\n    node.appendChild(pos);\n    this.writePos_(pos, geometry, objectStack);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  GML3.prototype.writeEnvelope = function writeEnvelope (node, extent, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var keys = ['lowerCorner', 'upperCorner'];\n    var values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: node}), this.ENVELOPE_SERIALIZERS_,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack, keys, this);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeLinearRing_ = function writeLinearRing_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var posList = createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  };\n\n  /**\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string=} opt_nodeName Node name.\n   * @return {Node} Node.\n   * @private\n   */\n  GML3.prototype.RING_NODE_FACTORY_ = function RING_NODE_FACTORY_ (value, objectStack, opt_nodeName) {\n    var context = objectStack[objectStack.length - 1];\n    var parentNode = context.node;\n    var exteriorWritten = context['exteriorWritten'];\n    if (exteriorWritten === undefined) {\n      context['exteriorWritten'] = true;\n    }\n    return createElementNS(parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'interior' : 'exterior');\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Polygon} geometry Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeSurfaceOrPolygon_ = function writeSurfaceOrPolygon_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n      var rings = geometry.getLinearRings();\n      pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        this.RING_SERIALIZERS_,\n        this.RING_NODE_FACTORY_,\n        rings, objectStack, undefined, this);\n    } else if (node.nodeName === 'Surface') {\n      var patches = createElementNS(node.namespaceURI, 'patches');\n      node.appendChild(patches);\n      this.writeSurfacePatches_(\n        patches, geometry, objectStack);\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {LineString} geometry LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeCurveOrLineString_ = function writeCurveOrLineString_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'LineString' ||\n        node.nodeName === 'LineStringSegment') {\n      var posList = createElementNS(node.namespaceURI, 'posList');\n      node.appendChild(posList);\n      this.writePosList_(posList, geometry, objectStack);\n    } else if (node.nodeName === 'Curve') {\n      var segments = createElementNS(node.namespaceURI, 'segments');\n      node.appendChild(segments);\n      this.writeCurveSegments_(segments,\n        geometry, objectStack);\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {MultiPolygon} geometry MultiPolygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeMultiSurfaceOrPolygon_ = function writeMultiSurfaceOrPolygon_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    var surface = context['surface'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var polygons = geometry.getPolygons();\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n      objectStack, undefined, this);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeMultiPoint_ = function writeMultiPoint_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n    var hasZ = context['hasZ'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var points = geometry.getPoints();\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n      this.POINTMEMBER_SERIALIZERS_,\n      makeSimpleNodeFactory('pointMember'), points,\n      objectStack, undefined, this);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {MultiLineString} geometry MultiLineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeMultiCurveOrLineString_ = function writeMultiCurveOrLineString_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    var curve = context['curve'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var lines = geometry.getLineStrings();\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n      objectStack, undefined, this);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeRing_ = function writeRing_ (node, ring, objectStack) {\n    var linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n    node.appendChild(linearRing);\n    this.writeLinearRing_(linearRing, ring, objectStack);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeSurfaceOrPolygonMember_ = function writeSurfaceOrPolygonMember_ (node, polygon, objectStack) {\n    var child = this.GEOMETRY_NODE_FACTORY_(\n      polygon, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Point.js\").default} point Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writePointMember_ = function writePointMember_ (node, point, objectStack) {\n    var child = createElementNS(node.namespaceURI, 'Point');\n    node.appendChild(child);\n    this.writePoint_(child, point, objectStack);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeLineStringOrCurveMember_ = function writeLineStringOrCurveMember_ (node, line, objectStack) {\n    var child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeCurveOrLineString_(child, line, objectStack);\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeSurfacePatches_ = function writeSurfacePatches_ (node, polygon, objectStack) {\n    var child = createElementNS(node.namespaceURI, 'PolygonPatch');\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeCurveSegments_ = function writeCurveSegments_ (node, line, objectStack) {\n    var child = createElementNS(node.namespaceURI,\n      'LineStringSegment');\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  GML3.prototype.writeGeometryElement = function writeGeometryElement (node, geometry, objectStack) {\n    var context = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[objectStack.length - 1]);\n    var item = assign({}, context);\n    item['node'] = node;\n    var value;\n    if (Array.isArray(geometry)) {\n      value = transformExtentWithOptions(/** @type {import(\"../extent.js\").Extent} */ (geometry), context);\n    } else {\n      value = transformGeometryWithOptions(/** @type {import(\"../geom/Geometry.js\").default} */ (geometry), true, context);\n    }\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\n      (item), this.GEOMETRY_SERIALIZERS_,\n      this.GEOMETRY_NODE_FACTORY_, [value],\n      objectStack, undefined, this);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  GML3.prototype.writeFeatureElement = function writeFeatureElement (node, feature, objectStack) {\n    var fid = feature.getId();\n    if (fid) {\n      node.setAttribute('fid', /** @type {string} */ (fid));\n    }\n    var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var featureNS = context['featureNS'];\n    var geometryName = feature.getGeometryName();\n    if (!context.serializers) {\n      context.serializers = {};\n      context.serializers[featureNS] = {};\n    }\n    var properties = feature.getProperties();\n    var keys = [];\n    var values = [];\n    for (var key in properties) {\n      var value = properties[key];\n      if (value !== null) {\n        keys.push(key);\n        values.push(value);\n        if (key == geometryName || typeof /** @type {?} */ (value).getSimplifiedGeometry === 'function') {\n          if (!(key in context.serializers[featureNS])) {\n            context.serializers[featureNS][key] = makeChildAppender(\n              this.writeGeometryElement, this);\n          }\n        } else {\n          if (!(key in context.serializers[featureNS])) {\n            context.serializers[featureNS][key] = makeChildAppender(writeStringTextNode);\n          }\n        }\n      }\n    }\n    var item = assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\n      (item), context.serializers,\n      makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack, keys);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeFeatureMembers_ = function writeFeatureMembers_ (node, features, objectStack) {\n    var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var featureType = context['featureType'];\n    var featureNS = context['featureNS'];\n    /** @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>} */\n    var serializers = {};\n    serializers[featureNS] = {};\n    serializers[featureNS][featureType] = makeChildAppender(\n      this.writeFeatureElement, this);\n    var item = assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\n      (item),\n      serializers,\n      makeSimpleNodeFactory(featureType, featureNS), features,\n      objectStack);\n  };\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string=} opt_nodeName Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  GML3.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function MULTIGEOMETRY_MEMBER_NODE_FACTORY_ (value, objectStack, opt_nodeName) {\n    var parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(this.namespace,\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]);\n  };\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string=} opt_nodeName Node name.\n   * @return {Element|undefined} Node.\n   * @private\n   */\n  GML3.prototype.GEOMETRY_NODE_FACTORY_ = function GEOMETRY_NODE_FACTORY_ (value, objectStack, opt_nodeName) {\n    var context = objectStack[objectStack.length - 1];\n    var multiSurface = context['multiSurface'];\n    var surface = context['surface'];\n    var curve = context['curve'];\n    var multiCurve = context['multiCurve'];\n    var nodeName;\n    if (!Array.isArray(value)) {\n      nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType();\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\n        nodeName = 'MultiSurface';\n      } else if (nodeName === 'Polygon' && surface === true) {\n        nodeName = 'Surface';\n      } else if (nodeName === 'LineString' && curve === true) {\n        nodeName = 'Curve';\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n        nodeName = 'MultiCurve';\n      }\n    } else {\n      nodeName = 'Envelope';\n    }\n    return createElementNS(this.namespace,\n      nodeName);\n  };\n\n  /**\n   * Encode a geometry in GML 3.1.1 Simple Features.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   * @override\n   * @api\n   */\n  GML3.prototype.writeGeometryNode = function writeGeometryNode (geometry, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    var geom = createElementNS(this.namespace, 'geom');\n    var context = {node: geom, hasZ: this.hasZ, srsName: this.srsName,\n      curve: this.curve_, surface: this.surface_,\n      multiSurface: this.multiSurface_, multiCurve: this.multiCurve_};\n    if (opt_options) {\n      assign(context, opt_options);\n    }\n    this.writeGeometryElement(geom, geometry, [context]);\n    return geom;\n  };\n\n  /**\n   * Encode an array of features in the GML 3.1.1 format as an XML node.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n   * @return {Element} Node.\n   * @override\n   * @api\n   */\n  GML3.prototype.writeFeaturesNode = function writeFeaturesNode (features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    var node = createElementNS(this.namespace, 'featureMembers');\n    node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', this.schemaLocation);\n    var context = {\n      srsName: this.srsName,\n      hasZ: this.hasZ,\n      curve: this.curve_,\n      surface: this.surface_,\n      multiSurface: this.multiSurface_,\n      multiCurve: this.multiCurve_,\n      featureNS: this.featureNS,\n      featureType: this.featureType\n    };\n    if (opt_options) {\n      assign(context, opt_options);\n    }\n    this.writeFeatureMembers_(node, features, [context]);\n    return node;\n  };\n\n  return GML3;\n}(GMLBase));\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'pos': makeReplacer(GML3.prototype.readFlatPos_),\n    'posList': makeReplacer(GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser_,\n    'exterior': GML3.prototype.exteriorParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML3.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Surface': makeReplacer(GML3.prototype.readSurface_),\n    'MultiSurface': makeReplacer(\n      GML3.prototype.readMultiSurface_),\n    'Curve': makeReplacer(GML3.prototype.readCurve_),\n    'MultiCurve': makeReplacer(\n      GML3.prototype.readMultiCurve_),\n    'Envelope': makeReplacer(GML3.prototype.readEnvelope_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.MULTICURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'curveMember': makeArrayPusher(\n      GML3.prototype.curveMemberParser_),\n    'curveMembers': makeArrayPusher(\n      GML3.prototype.curveMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.MULTISURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_),\n    'surfaceMembers': makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(\n      GMLBase.prototype.readLineString),\n    'Curve': makeArrayPusher(GML3.prototype.readCurve_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': makeArrayPusher(GML3.prototype.readSurface_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.SURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'patches': makeReplacer(GML3.prototype.readPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.CURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'segments': makeReplacer(GML3.prototype.readSegment_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.ENVELOPE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeArrayPusher(\n      GML3.prototype.readFlatPosList_),\n    'upperCorner': makeArrayPusher(\n      GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.PATCHES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': makeReplacer(\n      GML3.prototype.readPolygonPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML3.prototype.SEGMENTS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': makeReplacer(\n      GML3.prototype.readLineStringSegment_)\n  }\n};\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'exterior': makeChildAppender(GML3.prototype.writeRing_),\n    'interior': makeChildAppender(GML3.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(\n      GML3.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_),\n    'curveMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML3.prototype.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiCurve': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'Point': makeChildAppender(GML3.prototype.writePoint_),\n    'MultiPoint': makeChildAppender(\n      GML3.prototype.writeMultiPoint_),\n    'LineString': makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiLineString': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': makeChildAppender(\n      GML3.prototype.writeLinearRing_),\n    'Polygon': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': makeChildAppender(\n      GML3.prototype.writeEnvelope)\n  }\n};\n\nexport default GML3;\n\n//# sourceMappingURL=GML3.js.map","/**\n * @module ol/format/GML\n */\nimport GML3 from './GML3.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @param {import(\"./GMLBase.js\").Options=} opt_options\n *     Optional configuration object.\n * @api\n */\nvar GML = GML3;\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @function\n * @param {Array<import(\"../Feature.js\").default>} features Features.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @api\n */\nGML.prototype.writeFeaturesNode;\n\nexport default GML;\n\n//# sourceMappingURL=GML.js.map","/**\n * @module ol/format/GML2\n */\nimport {createOrUpdate} from '../extent.js';\nimport {transformExtentWithOptions, transformGeometryWithOptions} from './Feature.js';\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport {writeStringTextNode} from './xsd.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport {createElementNS, getAllTextContent, makeArrayPusher, makeChildAppender,\n  makeReplacer, makeSimpleNodeFactory, OBJECT_PROPERTY_NODE_FACTORY, pushParseAndPop, pushSerializeAndPop} from '../xml.js';\n\n\n/**\n * @const\n * @type {string}\n */\nvar schemaLocation = GMLNS + ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @api\n */\nvar GML2 = /*@__PURE__*/(function (GMLBase) {\n  function GML2(opt_options) {\n    var options = /** @type {import(\"./GMLBase.js\").Options} */\n        (opt_options ? opt_options : {});\n\n    GMLBase.call(this, options);\n\n    this.FEATURE_COLLECTION_PARSERS[GMLNS][\n      'featureMember'] =\n        makeArrayPusher(this.readFeaturesInternal);\n\n    /**\n     * @inheritDoc\n     */\n    this.schemaLocation = options.schemaLocation ?\n      options.schemaLocation : schemaLocation;\n\n  }\n\n  if ( GMLBase ) GML2.__proto__ = GMLBase;\n  GML2.prototype = Object.create( GMLBase && GMLBase.prototype );\n  GML2.prototype.constructor = GML2;\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  GML2.prototype.readFlatCoordinates_ = function readFlatCoordinates_ (node, objectStack) {\n    var s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n    var context = /** @type {import(\"../xml.js\").NodeStackItem} */ (objectStack[0]);\n    var containerSrs = context['srsName'];\n    var axisOrientation = 'enu';\n    if (containerSrs) {\n      var proj = getProjection(containerSrs);\n      if (proj) {\n        axisOrientation = proj.getAxisOrientation();\n      }\n    }\n    var coordsGroups = s.trim().split(/\\s+/);\n    var flatCoordinates = [];\n    for (var i = 0, ii = coordsGroups.length; i < ii; i++) {\n      var coords = coordsGroups[i].split(/,+/);\n      var x = parseFloat(coords[0]);\n      var y = parseFloat(coords[1]);\n      var z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n      if (axisOrientation.substr(0, 2) === 'en') {\n        flatCoordinates.push(x, y, z);\n      } else {\n        flatCoordinates.push(y, x, z);\n      }\n    }\n    return flatCoordinates;\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {import(\"../extent.js\").Extent|undefined} Envelope.\n   */\n  GML2.prototype.readBox_ = function readBox_ (node, objectStack) {\n    /** @type {Array<number>} */\n    var flatCoordinates = pushParseAndPop([null],\n      this.BOX_PARSERS_, node, objectStack, this);\n    return createOrUpdate(flatCoordinates[1][0],\n      flatCoordinates[1][1], flatCoordinates[1][3],\n      flatCoordinates[1][4]);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  GML2.prototype.innerBoundaryIsParser_ = function innerBoundaryIsParser_ (node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    var flatLinearRing = pushParseAndPop(undefined,\n      this.RING_PARSERS, node, objectStack, this);\n    if (flatLinearRing) {\n      var flatLinearRings = /** @type {Array<Array<number>>} */\n          (objectStack[objectStack.length - 1]);\n      flatLinearRings.push(flatLinearRing);\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  GML2.prototype.outerBoundaryIsParser_ = function outerBoundaryIsParser_ (node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    var flatLinearRing = pushParseAndPop(undefined,\n      this.RING_PARSERS, node, objectStack, this);\n    if (flatLinearRing) {\n      var flatLinearRings = /** @type {Array<Array<number>>} */\n          (objectStack[objectStack.length - 1]);\n      flatLinearRings[0] = flatLinearRing;\n    }\n  };\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string=} opt_nodeName Node name.\n   * @return {Element|undefined} Node.\n   * @private\n   */\n  GML2.prototype.GEOMETRY_NODE_FACTORY_ = function GEOMETRY_NODE_FACTORY_ (value, objectStack, opt_nodeName) {\n    var context = objectStack[objectStack.length - 1];\n    var multiSurface = context['multiSurface'];\n    var surface = context['surface'];\n    var multiCurve = context['multiCurve'];\n    var nodeName;\n    if (!Array.isArray(value)) {\n      nodeName = /** @type {import(\"../geom/Geometry.js\").default} */ (value).getType();\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\n        nodeName = 'MultiSurface';\n      } else if (nodeName === 'Polygon' && surface === true) {\n        nodeName = 'Surface';\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n        nodeName = 'MultiCurve';\n      }\n    } else {\n      nodeName = 'Envelope';\n    }\n    return createElementNS('http://www.opengis.net/gml',\n      nodeName);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  GML2.prototype.writeFeatureElement = function writeFeatureElement (node, feature, objectStack) {\n    var fid = feature.getId();\n    if (fid) {\n      node.setAttribute('fid', /** @type {string} */ (fid));\n    }\n    var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var featureNS = context['featureNS'];\n    var geometryName = feature.getGeometryName();\n    if (!context.serializers) {\n      context.serializers = {};\n      context.serializers[featureNS] = {};\n    }\n    var properties = feature.getProperties();\n    var keys = [];\n    var values = [];\n    for (var key in properties) {\n      var value = properties[key];\n      if (value !== null) {\n        keys.push(key);\n        values.push(value);\n        if (key == geometryName || typeof /** @type {?} */ (value).getSimplifiedGeometry === 'function') {\n          if (!(key in context.serializers[featureNS])) {\n            context.serializers[featureNS][key] = makeChildAppender(\n              this.writeGeometryElement, this);\n          }\n        } else {\n          if (!(key in context.serializers[featureNS])) {\n            context.serializers[featureNS][key] = makeChildAppender(writeStringTextNode);\n          }\n        }\n      }\n    }\n    var item = assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\n      (item), context.serializers,\n      makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack, keys);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} geometry LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeCurveOrLineString_ = function writeCurveOrLineString_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'LineString' ||\n        node.nodeName === 'LineStringSegment') {\n      var coordinates = this.createCoordinatesNode_(node.namespaceURI);\n      node.appendChild(coordinates);\n      this.writeCoordinates_(coordinates, geometry, objectStack);\n    } else if (node.nodeName === 'Curve') {\n      var segments = createElementNS(node.namespaceURI, 'segments');\n      node.appendChild(segments);\n      this.writeCurveSegments_(segments,\n        geometry, objectStack);\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeLineStringOrCurveMember_ = function writeLineStringOrCurveMember_ (node, line, objectStack) {\n    var child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeCurveOrLineString_(child, line, objectStack);\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry MultiLineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeMultiCurveOrLineString_ = function writeMultiCurveOrLineString_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    var curve = context['curve'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var lines = geometry.getLineStrings();\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n      objectStack, undefined, this);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Geometry.js\").default|import(\"../extent.js\").Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  GML2.prototype.writeGeometryElement = function writeGeometryElement (node, geometry, objectStack) {\n    var context = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[objectStack.length - 1]);\n    var item = assign({}, context);\n    item['node'] = node;\n    var value;\n    if (Array.isArray(geometry)) {\n      value = transformExtentWithOptions(/** @type {import(\"../extent.js\").Extent} */ (geometry), context);\n    } else {\n      value = transformGeometryWithOptions(/** @type {import(\"../geom/Geometry.js\").default} */ (geometry), true, context);\n    }\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\n      (item), this.GEOMETRY_SERIALIZERS_,\n      this.GEOMETRY_NODE_FACTORY_, [value],\n      objectStack, undefined, this);\n  };\n\n  /**\n   * @param {string} namespaceURI XML namespace.\n   * @returns {Element} coordinates node.\n   * @private\n   */\n  GML2.prototype.createCoordinatesNode_ = function createCoordinatesNode_ (namespaceURI) {\n    var coordinates = createElementNS(namespaceURI, 'coordinates');\n    coordinates.setAttribute('decimal', '.');\n    coordinates.setAttribute('cs', ',');\n    coordinates.setAttribute('ts', ' ');\n\n    return coordinates;\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/LineString.js\").default|import(\"../geom/LinearRing.js\").default} value Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeCoordinates_ = function writeCoordinates_ (node, value, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    // only 2d for simple features profile\n    var points = value.getCoordinates();\n    var len = points.length;\n    var parts = new Array(len);\n    for (var i = 0; i < len; ++i) {\n      var point = points[i];\n      parts[i] = this.getCoords_(point, srsName, hasZ);\n    }\n    writeStringTextNode(node, parts.join(' '));\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/LineString.js\").default} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeCurveSegments_ = function writeCurveSegments_ (node, line, objectStack) {\n    var child = createElementNS(node.namespaceURI, 'LineStringSegment');\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} geometry Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeSurfaceOrPolygon_ = function writeSurfaceOrPolygon_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n      var rings = geometry.getLinearRings();\n      pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        this.RING_SERIALIZERS_,\n        this.RING_NODE_FACTORY_,\n        rings, objectStack, undefined, this);\n    } else if (node.nodeName === 'Surface') {\n      var patches = createElementNS(node.namespaceURI, 'patches');\n      node.appendChild(patches);\n      this.writeSurfacePatches_(\n        patches, geometry, objectStack);\n    }\n  };\n\n  /**\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string=} opt_nodeName Node name.\n   * @return {Node} Node.\n   * @private\n   */\n  GML2.prototype.RING_NODE_FACTORY_ = function RING_NODE_FACTORY_ (value, objectStack, opt_nodeName) {\n    var context = objectStack[objectStack.length - 1];\n    var parentNode = context.node;\n    var exteriorWritten = context['exteriorWritten'];\n    if (exteriorWritten === undefined) {\n      context['exteriorWritten'] = true;\n    }\n    return createElementNS(parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeSurfacePatches_ = function writeSurfacePatches_ (node, polygon, objectStack) {\n    var child = createElementNS(node.namespaceURI, 'PolygonPatch');\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} ring LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeRing_ = function writeRing_ (node, ring, objectStack) {\n    var linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n    node.appendChild(linearRing);\n    this.writeLinearRing_(linearRing, ring, objectStack);\n  };\n\n  /**\n   * @param {Array<number>} point Point geometry.\n   * @param {string=} opt_srsName Optional srsName\n   * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n   * @return {string} The coords string.\n   * @private\n   */\n  GML2.prototype.getCoords_ = function getCoords_ (point, opt_srsName, opt_hasZ) {\n    var axisOrientation = 'enu';\n    if (opt_srsName) {\n      axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n    }\n    var coords = ((axisOrientation.substr(0, 2) === 'en') ?\n      point[0] + ',' + point[1] :\n      point[1] + ',' + point[0]);\n    if (opt_hasZ) {\n      // For newly created points, Z can be undefined.\n      var z = point[2] || 0;\n      coords += ',' + z;\n    }\n\n    return coords;\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/Point.js\").default} geometry Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writePoint_ = function writePoint_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    var point = geometry.getCoordinates();\n    var coord = this.getCoords_(point, srsName, hasZ);\n    writeStringTextNode(coordinates, coord);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry MultiPoint geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeMultiPoint_ = function writeMultiPoint_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var points = geometry.getPoints();\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n      this.POINTMEMBER_SERIALIZERS_,\n      makeSimpleNodeFactory('pointMember'), points,\n      objectStack, undefined, this);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Point.js\").default} point Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writePointMember_ = function writePointMember_ (node, point, objectStack) {\n    var child = createElementNS(node.namespaceURI, 'Point');\n    node.appendChild(child);\n    this.writePoint_(child, point, objectStack);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/LinearRing.js\").default} geometry LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeLinearRing_ = function writeLinearRing_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeMultiSurfaceOrPolygon_ = function writeMultiSurfaceOrPolygon_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    var surface = context['surface'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var polygons = geometry.getPolygons();\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n      objectStack, undefined, this);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {import(\"../geom/Polygon.js\").default} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeSurfaceOrPolygonMember_ = function writeSurfaceOrPolygonMember_ (node, polygon, objectStack) {\n    var child = this.GEOMETRY_NODE_FACTORY_(\n      polygon, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeEnvelope = function writeEnvelope (node, extent, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var keys = ['lowerCorner', 'upperCorner'];\n    var values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: node}), this.ENVELOPE_SERIALIZERS_,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack, keys, this);\n  };\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string=} opt_nodeName Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  GML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function MULTIGEOMETRY_MEMBER_NODE_FACTORY_ (value, objectStack, opt_nodeName) {\n    var parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS('http://www.opengis.net/gml',\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]);\n  };\n\n  return GML2;\n}(GMLBase));\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeArrayPusher(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML2.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Box': makeReplacer(GML2.prototype.readBox_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiCurve': makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'Point': makeChildAppender(GML2.prototype.writePoint_),\n    'MultiPoint': makeChildAppender(\n      GML2.prototype.writeMultiPoint_),\n    'LineString': makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiLineString': makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': makeChildAppender(\n      GML2.prototype.writeLinearRing_),\n    'Polygon': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': makeChildAppender(\n      GML2.prototype.writeEnvelope)\n  }\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_),\n    'curveMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': makeChildAppender(GML2.prototype.writeRing_),\n    'innerBoundaryIs': makeChildAppender(GML2.prototype.writeRing_)\n  }\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(\n      GML2.prototype.writePointMember_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML2.prototype.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode)\n  }\n};\n\nexport default GML2;\n\n//# sourceMappingURL=GML2.js.map","/**\n * @module ol/format/GML32\n */\nimport GML3 from './GML3.js';\nimport GMLBase from './GMLBase.js';\nimport {makeArrayPusher, makeReplacer, makeChildAppender} from '../xml.js';\nimport {writeStringTextNode} from '../format/xsd.js';\n\n/**\n * @classdesc Feature format for reading and writing data in the GML format\n *            version 3.2.1.\n * @api\n */\nvar GML32 = /*@__PURE__*/(function (GML3) {\n  function GML32(opt_options) {\n    var options = /** @type {import(\"./GMLBase.js\").Options} */ (opt_options ? opt_options : {});\n\n    GML3.call(this, options);\n\n    /**\n     * @inheritDoc\n     */\n    this.schemaLocation = options.schemaLocation ?\n      options.schemaLocation : this.namespace + ' http://schemas.opengis.net/gml/3.2.1/gml.xsd';\n\n  }\n\n  if ( GML3 ) GML32.__proto__ = GML3;\n  GML32.prototype = Object.create( GML3 && GML3.prototype );\n  GML32.prototype.constructor = GML32;\n\n  return GML32;\n}(GML3));\n\nGML32.prototype.namespace = 'http://www.opengis.net/gml/3.2';\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML32.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'pos': makeReplacer(GML3.prototype.readFlatPos_),\n    'posList': makeReplacer(GML3.prototype.readFlatPosList_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML32.prototype.FLAT_LINEAR_RINGS_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'interior': GML3.prototype.interiorParser_,\n    'exterior': GML3.prototype.exteriorParser_\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML32.prototype.GEOMETRY_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Surface': makeReplacer(GML32.prototype.readSurface_),\n    'MultiSurface': makeReplacer(\n      GML3.prototype.readMultiSurface_),\n    'Curve': makeReplacer(GML32.prototype.readCurve_),\n    'MultiCurve': makeReplacer(\n      GML3.prototype.readMultiCurve_),\n    'Envelope': makeReplacer(GML32.prototype.readEnvelope_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.MULTICURVE_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'curveMember': makeArrayPusher(\n      GML3.prototype.curveMemberParser_),\n    'curveMembers': makeArrayPusher(\n      GML3.prototype.curveMemberParser_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.MULTISURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'surfaceMember': makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_),\n    'surfaceMembers': makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.CURVEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineString': makeArrayPusher(\n      GMLBase.prototype.readLineString),\n    'Curve': makeArrayPusher(GML3.prototype.readCurve_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.SURFACEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': makeArrayPusher(GML3.prototype.readSurface_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.SURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'patches': makeReplacer(GML3.prototype.readPatch_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.CURVE_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'segments': makeReplacer(GML3.prototype.readSegment_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.ENVELOPE_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'lowerCorner': makeArrayPusher(\n      GML3.prototype.readFlatPosList_),\n    'upperCorner': makeArrayPusher(\n      GML3.prototype.readFlatPosList_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.PATCHES_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'PolygonPatch': makeReplacer(\n      GML3.prototype.readPolygonPatch_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.SEGMENTS_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineStringSegment': makeReplacer(\n      GML3.prototype.readLineStringSegment_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'pointMember': makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_),\n    'pointMembers': makeArrayPusher(\n      GMLBase.prototype.pointMemberParser_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'lineStringMember': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_),\n    'lineStringMembers': makeArrayPusher(\n      GMLBase.prototype.lineStringMemberParser_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'polygonMember': makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_),\n    'polygonMembers': makeArrayPusher(\n      GMLBase.prototype.polygonMemberParser_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'Point': makeArrayPusher(\n      GMLBase.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'LineString': makeArrayPusher(\n      GMLBase.prototype.readLineString)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @private\n */\nGML32.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'Polygon': makeArrayPusher(\n      GMLBase.prototype.readPolygon)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n * @protected\n */\nGML32.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml/3.2': {\n    'LinearRing': makeReplacer(\n      GMLBase.prototype.readFlatLinearRing_)\n  }\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML32.prototype.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'exterior': makeChildAppender(GML3.prototype.writeRing_),\n    'interior': makeChildAppender(GML3.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML32.prototype.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML32.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'surfaceMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML32.prototype.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'pointMember': makeChildAppender(\n      GML3.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML32.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'lineStringMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_),\n    'curveMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n * @private\n */\nGML32.prototype.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml/3.2': {\n    'Curve': makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiCurve': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'Point': makeChildAppender(GML32.prototype.writePoint_),\n    'MultiPoint': makeChildAppender(\n      GML3.prototype.writeMultiPoint_),\n    'LineString': makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiLineString': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': makeChildAppender(\n      GML3.prototype.writeLinearRing_),\n    'Polygon': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': makeChildAppender(\n      GML3.prototype.writeEnvelope)\n  }\n};\n\nexport default GML32;\n\n//# sourceMappingURL=GML32.js.map","/**\n * @module ol/format/GPX\n */\nimport Feature from '../Feature.js';\nimport {includes} from '../array.js';\nimport {transformGeometryWithOptions} from './Feature.js';\nimport XMLFeature from './XMLFeature.js';\nimport {readString, readDecimal, readNonNegativeInteger, readDateTime, writeStringTextNode, writeNonNegativeIntegerTextNode, writeDecimalTextNode, writeDateTimeTextNode} from './xsd.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport {get as getProjection} from '../proj.js';\nimport {createElementNS, makeArrayPusher, makeArraySerializer, makeChildAppender,\n  makeObjectPropertySetter, makeSequence, makeSimpleNodeFactory, makeStructureNS,\n  OBJECT_PROPERTY_NODE_FACTORY, parseNode, pushParseAndPop, pushSerializeAndPop,\n  XML_SCHEMA_INSTANCE_URI} from '../xml.js';\n\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1'\n];\n\n\n/**\n * @const\n * @type {string}\n */\nvar SCHEMA_LOCATION = 'http://www.topografix.com/GPX/1/1 ' +\n    'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n\n/**\n * @const\n * @type {Object<string, function(Node, Array<*>): (Feature|undefined)>}\n */\nvar FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar GPX_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': makeArrayPusher(readRte),\n    'trk': makeArrayPusher(readTrk),\n    'wpt': makeArrayPusher(readWpt)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LINK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': makeObjectPropertySetter(readString, 'linkText'),\n    'type': makeObjectPropertySetter(readString, 'linkType')\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar GPX_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': makeChildAppender(writeRte),\n    'trk': makeChildAppender(writeTrk),\n    'wpt': makeChildAppender(writeWpt)\n  });\n\n\n/**\n * @typedef {Object} Options\n * @property {function(Feature, Node)} [readExtensions] Callback function\n * to process `extensions` nodes. To prevent memory leaks, this callback function must\n * not store any references to the node. Note that the `extensions`\n * node is not allowed in GPX 1.0. Moreover, only `extensions`\n * nodes from `wpt`, `rte` and `trk` can be processed, as those are\n * directly mapped to a feature.\n */\n\n/**\n * @typedef {Object} LayoutOptions\n * @property {boolean} [hasZ]\n * @property {boolean} [hasM]\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * Note that {@link module:ol/format/GPX~GPX#readFeature} only reads the first\n * feature of the source.\n *\n * When reading, routes (`<rte>`) are converted into LineString geometries, and\n * tracks (`<trk>`) into MultiLineString. Any properties on route and track\n * waypoints are ignored.\n *\n * When writing, LineString geometries are output as routes (`<rte>`), and\n * MultiLineString as tracks (`<trk>`).\n *\n * @api\n */\nvar GPX = /*@__PURE__*/(function (XMLFeature) {\n  function GPX(opt_options) {\n    XMLFeature.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @type {function(Feature, Node): void|undefined}\n     * @private\n     */\n    this.readExtensions_ = options.readExtensions;\n  }\n\n  if ( XMLFeature ) GPX.__proto__ = XMLFeature;\n  GPX.prototype = Object.create( XMLFeature && XMLFeature.prototype );\n  GPX.prototype.constructor = GPX;\n\n  /**\n   * @param {Array<Feature>} features List of features.\n   * @private\n   */\n  GPX.prototype.handleReadExtensions_ = function handleReadExtensions_ (features) {\n    if (!features) {\n      features = [];\n    }\n    for (var i = 0, ii = features.length; i < ii; ++i) {\n      var feature = features[i];\n      if (this.readExtensions_) {\n        var extensionsNode = feature.get('extensionsNode_') || null;\n        this.readExtensions_(feature, extensionsNode);\n      }\n      feature.set('extensionsNode_', undefined);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GPX.prototype.readFeatureFromNode = function readFeatureFromNode (node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return null;\n    }\n    var featureReader = FEATURE_READER[node.localName];\n    if (!featureReader) {\n      return null;\n    }\n    var feature = featureReader(node, [this.getReadOptions(node, opt_options)]);\n    if (!feature) {\n      return null;\n    }\n    this.handleReadExtensions_([feature]);\n    return feature;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GPX.prototype.readFeaturesFromNode = function readFeaturesFromNode (node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return [];\n    }\n    if (node.localName == 'gpx') {\n      /** @type {Array<Feature>} */\n      var features = pushParseAndPop([], GPX_PARSERS,\n        node, [this.getReadOptions(node, opt_options)]);\n      if (features) {\n        this.handleReadExtensions_(features);\n        return features;\n      } else {\n        return [];\n      }\n    }\n    return [];\n  };\n\n  /**\n   * Encode an array of features in the GPX format as an XML node.\n   * LineString geometries are output as routes (`<rte>`), and MultiLineString\n   * as tracks (`<trk>`).\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   * @override\n   * @api\n   */\n  GPX.prototype.writeFeaturesNode = function writeFeaturesNode (features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    //FIXME Serialize metadata\n    var gpx = createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n    var xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    gpx.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    gpx.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\n    gpx.setAttribute('version', '1.1');\n    gpx.setAttribute('creator', 'OpenLayers');\n\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\n      ({node: gpx}), GPX_SERIALIZERS, GPX_NODE_FACTORY, features, [opt_options]);\n    return gpx;\n  };\n\n  return GPX;\n}(XMLFeature));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar RTE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'number': makeObjectPropertySetter(readNonNegativeInteger),\n    'extensions': parseExtensions,\n    'type': makeObjectPropertySetter(readString),\n    'rtept': parseRtePt\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar RTEPT_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TRK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'number': makeObjectPropertySetter(readNonNegativeInteger),\n    'type': makeObjectPropertySetter(readString),\n    'extensions': parseExtensions,\n    'trkseg': parseTrkSeg\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TRKSEG_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': parseTrkPt\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TRKPT_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar WPT_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime),\n    'magvar': makeObjectPropertySetter(readDecimal),\n    'geoidheight': makeObjectPropertySetter(readDecimal),\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'sym': makeObjectPropertySetter(readString),\n    'type': makeObjectPropertySetter(readString),\n    'fix': makeObjectPropertySetter(readString),\n    'sat': makeObjectPropertySetter(readNonNegativeInteger),\n    'hdop': makeObjectPropertySetter(readDecimal),\n    'vdop': makeObjectPropertySetter(readDecimal),\n    'pdop': makeObjectPropertySetter(readDecimal),\n    'ageofdgpsdata': makeObjectPropertySetter(readDecimal),\n    'dgpsid': makeObjectPropertySetter(readNonNegativeInteger),\n    'extensions': parseExtensions\n  });\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar LINK_SEQUENCE = ['text', 'type'];\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar LINK_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': makeChildAppender(writeStringTextNode),\n    'type': makeChildAppender(writeStringTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar RTE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'rtept'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar RTE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'rtept': makeArraySerializer(makeChildAppender(writeWptType))\n  });\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar RTEPT_TYPE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar TRK_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'trkseg'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar TRK_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'trkseg': makeArraySerializer(makeChildAppender(writeTrkSeg))\n  });\n\n\n/**\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar TRKSEG_NODE_FACTORY = makeSimpleNodeFactory('trkpt');\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar TRKSEG_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': makeChildAppender(writeWptType)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar WPT_TYPE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time', 'magvar', 'geoidheight', 'name', 'cmt', 'desc', 'src',\n    'link', 'sym', 'type', 'fix', 'sat', 'hdop', 'vdop', 'pdop',\n    'ageofdgpsdata', 'dgpsid'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar WPT_TYPE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': makeChildAppender(writeDecimalTextNode),\n    'time': makeChildAppender(writeDateTimeTextNode),\n    'magvar': makeChildAppender(writeDecimalTextNode),\n    'geoidheight': makeChildAppender(writeDecimalTextNode),\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'sym': makeChildAppender(writeStringTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'fix': makeChildAppender(writeStringTextNode),\n    'sat': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'hdop': makeChildAppender(writeDecimalTextNode),\n    'vdop': makeChildAppender(writeDecimalTextNode),\n    'pdop': makeChildAppender(writeDecimalTextNode),\n    'ageofdgpsdata': makeChildAppender(writeDecimalTextNode),\n    'dgpsid': makeChildAppender(writeNonNegativeIntegerTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk'\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, opt_nodeName) {\n  var geometry = /** @type {Feature} */ (value).getGeometry();\n  if (geometry) {\n    var nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      var parentNode = objectStack[objectStack.length - 1].node;\n      return createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Element} node Node.\n * @param {!Object} values Values.\n * @return {Array<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat')));\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {LayoutOptions} layoutOptions Layout options.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {Array<number>=} ends Ends.\n * @return {GeometryLayout} Layout.\n */\nfunction applyLayoutOptions(layoutOptions, flatCoordinates, ends) {\n  var layout = GeometryLayout.XY;\n  var stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = GeometryLayout.XYZM;\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = GeometryLayout.XYZ;\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = GeometryLayout.XYM;\n    stride = 3;\n  }\n  if (stride !== 4) {\n    for (var i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = flatCoordinates.length / 4 * stride;\n    if (ends) {\n      for (var i$1 = 0, ii$1 = ends.length; i$1 < ii$1; i$1++) {\n        ends[i$1] = ends[i$1] / 4 * stride;\n      }\n    }\n  }\n  return layout;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  var values = pushParseAndPop({}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    var rteValues = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n    var flatCoordinates = /** @type {Array<number>} */ (rteValues['flatCoordinates']);\n    var layoutOptions = /** @type {LayoutOptions} */ (rteValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  var values = pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    var trkValues = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n    var flatCoordinates = /** @type {Array<number>} */ (trkValues['flatCoordinates']);\n    var layoutOptions = /** @type {LayoutOptions} */ (trkValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  parseNode(TRKSEG_PARSERS, node, objectStack);\n  var flatCoordinates = /** @type {Array<number>} */\n      (values['flatCoordinates']);\n  var ends = /** @type {Array<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n  var values = pushParseAndPop({\n    'flatCoordinates': [],\n    'layoutOptions': {}\n  }, RTE_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  var flatCoordinates = /** @type {Array<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  var layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  var layout = applyLayoutOptions(layoutOptions, flatCoordinates);\n  var geometry = new LineString(flatCoordinates, layout);\n  transformGeometryWithOptions(geometry, false, options);\n  var feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n  var values = pushParseAndPop({\n    'flatCoordinates': [],\n    'ends': [],\n    'layoutOptions': {}\n  }, TRK_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  var flatCoordinates = /** @type {Array<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  var ends = /** @type {Array<number>} */ (values['ends']);\n  delete values['ends'];\n  var layoutOptions = /** @type {LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  var layout = applyLayoutOptions(layoutOptions, flatCoordinates, ends);\n  var geometry = new MultiLineString(flatCoordinates, layout, ends);\n  transformGeometryWithOptions(geometry, false, options);\n  var feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n  var values = pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  var layoutOptions = /** @type {LayoutOptions} */ ({});\n  var coordinates = appendCoordinate([], layoutOptions, node, values);\n  var layout = applyLayoutOptions(layoutOptions, coordinates);\n  var geometry = new Point(coordinates, layout);\n  transformGeometryWithOptions(geometry, false, options);\n  var feature = new Feature(geometry);\n  feature.setProperties(values, true);\n  return feature;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  var context = objectStack[objectStack.length - 1];\n  var properties = context['properties'];\n  var link = [\n    properties['linkText'],\n    properties['linkType']\n  ];\n  pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ ({node: node}),\n    LINK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    link, objectStack, LINK_SEQUENCE);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var parentNode = context.node;\n  var namespaceURI = parentNode.namespaceURI;\n  var properties = context['properties'];\n  //FIXME Projection handling\n  node.setAttributeNS(null, 'lat', String(coordinate[1]));\n  node.setAttributeNS(null, 'lon', String(coordinate[0]));\n  var geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case GeometryLayout.XYZM:\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n      // fall through\n    case GeometryLayout.XYZ:\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case GeometryLayout.XYM:\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n      // pass\n  }\n  var orderedKeys = (node.nodeName == 'rtept') ?\n    RTEPT_TYPE_SEQUENCE[namespaceURI] :\n    WPT_TYPE_SEQUENCE[namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */\n    ({node: node, 'properties': properties}),\n    WPT_TYPE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n  var properties = feature.getProperties();\n  var context = {node: node};\n  context['properties'] = properties;\n  var geometry = feature.getGeometry();\n  if (geometry.getType() == GeometryType.LINE_STRING) {\n    var lineString = /** @type {LineString} */ (transformGeometryWithOptions(geometry, true, options));\n    context['geometryLayout'] = lineString.getLayout();\n    properties['rtept'] = lineString.getCoordinates();\n  }\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context,\n    RTE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n  var properties = feature.getProperties();\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  var context = {node: node};\n  context['properties'] = properties;\n  var geometry = feature.getGeometry();\n  if (geometry.getType() == GeometryType.MULTI_LINE_STRING) {\n    var multiLineString = /** @type {MultiLineString} */ (transformGeometryWithOptions(geometry, true, options));\n    properties['trkseg'] = multiLineString.getLineStrings();\n  }\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context,\n    TRK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {LineString} lineString LineString.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  var context = {node: node};\n  context['geometryLayout'] = lineString.getLayout();\n  context['properties'] = {};\n  pushSerializeAndPop(context,\n    TRKSEG_SERIALIZERS, TRKSEG_NODE_FACTORY,\n    lineString.getCoordinates(), objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n  var context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  var geometry = feature.getGeometry();\n  if (geometry.getType() == GeometryType.POINT) {\n    var point = /** @type {Point} */ (transformGeometryWithOptions(geometry, true, options));\n    context['geometryLayout'] = point.getLayout();\n    writeWptType(node, point.getCoordinates(), objectStack);\n  }\n}\n\n\nexport default GPX;\n\n//# sourceMappingURL=GPX.js.map","/**\n * @module ol/format/GeoJSON\n */\n\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport {transformGeometryWithOptions} from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign, isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport GeometryType from '../geom/GeometryType.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n  * @api\n */\nvar GeoJSON = /*@__PURE__*/(function (JSONFeature) {\n  function GeoJSON(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    JSONFeature.call(this);\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ?\n        options.dataProjection : 'EPSG:4326');\n\n    if (options.featureProjection) {\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n  }\n\n  if ( JSONFeature ) GeoJSON.__proto__ = JSONFeature;\n  GeoJSON.prototype = Object.create( JSONFeature && JSONFeature.prototype );\n  GeoJSON.prototype.constructor = GeoJSON;\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readFeatureFromObject = function readFeatureFromObject (object, opt_options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    var geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null\n      };\n    }\n\n    var geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\n    var feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (this.extractGeometryName_ && 'geometry_name' in geoJSONFeature !== undefined) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(geometry);\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return feature;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readFeaturesFromObject = function readFeaturesFromObject (object, opt_options) {\n    var geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    var features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      var geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);\n      features = [];\n      var geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (var i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(this.readFeatureFromObject(geoJSONFeatures[i], opt_options));\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, opt_options)];\n    }\n    return features;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readGeometryFromObject = function readGeometryFromObject (object, opt_options) {\n    return readGeometry(/** @type {GeoJSONGeometry} */ (object), opt_options);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readProjectionFromObject = function readProjectionFromObject (object) {\n    var crs = object['crs'];\n    var projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else {\n        assert(false, 36); // Unknown SRS type\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return (\n      /** @type {import(\"../proj/Projection.js\").default} */ (projection)\n    );\n  };\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {GeoJSONFeature} Object.\n   * @override\n   * @api\n   */\n  GeoJSON.prototype.writeFeatureObject = function writeFeatureObject (feature, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n\n    /** @type {GeoJSONFeature} */\n    var object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null\n    };\n\n    var id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, opt_options);\n    }\n\n    var properties = feature.getProperties();\n    delete properties[feature.getGeometryName()];\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n    return object;\n  };\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @override\n   * @api\n   */\n  GeoJSON.prototype.writeFeaturesObject = function writeFeaturesObject (features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    var objects = [];\n    for (var i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], opt_options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects\n    };\n  };\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @override\n   * @api\n   */\n  GeoJSON.prototype.writeGeometryObject = function writeGeometryObject (geometry, opt_options) {\n    return writeGeometry(geometry, this.adaptOptions(opt_options));\n  };\n\n  return GeoJSON;\n}(JSONFeature));\n\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n\n  /**\n   * @type {import(\"../geom/Geometry.js\").default}\n   */\n  var geometry;\n  switch (object['type']) {\n    case GeometryType.POINT: {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geometry = readLineStringGeometry(/** @type {GeoJSONLineString} */ (object));\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geometry = readMultiPointGeometry(/** @type {GeoJSONMultiPoint} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geometry = readMultiLineStringGeometry(/** @type {GeoJSONMultiLineString} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geometry = readMultiPolygonGeometry(/** @type {GeoJSONMultiPolygon} */ (object));\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geometry = readGeometryCollectionGeometry(/** @type {GeoJSONGeometryCollection} */ (object));\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object.type);\n    }\n  }\n  return transformGeometryWithOptions(geometry, false, opt_options);\n}\n\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n  var geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function(geometry) {\n      return readGeometry(geometry, opt_options);\n    });\n  return new GeometryCollection(geometries);\n}\n\n\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object['coordinates']);\n}\n\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object['coordinates']);\n}\n\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  geometry = transformGeometryWithOptions(geometry, true, opt_options);\n  var type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  var geoJSON;\n  switch (type) {\n    case GeometryType.POINT: {\n      geoJSON = writePointGeometry(/** @type {Point} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geoJSON = writeLineStringGeometry(/** @type {LineString} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geoJSON = writePolygonGeometry(/** @type {Polygon} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geoJSON = writeMultiPointGeometry(/** @type {MultiPoint} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geoJSON = writeMultiLineStringGeometry(/** @type {MultiLineString} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geoJSON = writeMultiPolygonGeometry(/** @type {MultiPolygon} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geoJSON = writeGeometryCollectionGeometry(/** @type {GeometryCollection} */ (geometry), opt_options);\n      break;\n    }\n    case GeometryType.CIRCLE: {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: []\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n  var geometries = geometry.getGeometriesArray().map(function(geometry) {\n    var options = assign({}, opt_options);\n    delete options.featureProjection;\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries\n  };\n}\n\n\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates()\n  };\n}\n\n\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates()\n  };\n}\n\n\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates()\n  };\n}\n\n\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  var right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right)\n  };\n}\n\n\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates()\n  };\n}\n\n\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  var right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right)\n  };\n}\n\n\nexport default GeoJSON;\n\n//# sourceMappingURL=GeoJSON.js.map","/**\n * @module ol/format/TextFeature\n */\nimport {abstract} from '../util.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for text feature formats.\n *\n * @abstract\n */\nvar TextFeature = /*@__PURE__*/(function (FeatureFormat) {\n  function TextFeature() {\n    FeatureFormat.call(this);\n  }\n\n  if ( FeatureFormat ) TextFeature.__proto__ = FeatureFormat;\n  TextFeature.prototype = Object.create( FeatureFormat && FeatureFormat.prototype );\n  TextFeature.prototype.constructor = TextFeature;\n\n  /**\n   * @inheritDoc\n   */\n  TextFeature.prototype.getType = function getType () {\n    return FormatType.TEXT;\n  };\n\n  /**\n   * Read the feature from the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  TextFeature.prototype.readFeature = function readFeature (source, opt_options) {\n    return this.readFeatureFromText(getText(source), this.adaptOptions(opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  TextFeature.prototype.readFeatureFromText = function readFeatureFromText (text, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Read the features from the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  TextFeature.prototype.readFeatures = function readFeatures (source, opt_options) {\n    return this.readFeaturesFromText(getText(source), this.adaptOptions(opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  TextFeature.prototype.readFeaturesFromText = function readFeaturesFromText (text, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Read the geometry from the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  TextFeature.prototype.readGeometry = function readGeometry (source, opt_options) {\n    return this.readGeometryFromText(getText(source), this.adaptOptions(opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  TextFeature.prototype.readGeometryFromText = function readGeometryFromText (text, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  TextFeature.prototype.readProjection = function readProjection (source) {\n    return this.readProjectionFromText(getText(source));\n  };\n\n  /**\n   * @param {string} text Text.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  TextFeature.prototype.readProjectionFromText = function readProjectionFromText (text) {\n    return this.dataProjection;\n  };\n\n  /**\n   * Encode a feature as a string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  TextFeature.prototype.writeFeature = function writeFeature (feature, opt_options) {\n    return this.writeFeatureText(feature, this.adaptOptions(opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  TextFeature.prototype.writeFeatureText = function writeFeatureText (feature, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  TextFeature.prototype.writeFeatures = function writeFeatures (features, opt_options) {\n    return this.writeFeaturesText(features, this.adaptOptions(opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  TextFeature.prototype.writeFeaturesText = function writeFeaturesText (features, opt_options) {\n    return abstract();\n  };\n\n  /**\n   * Write a single geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @return {string} Geometry.\n   * @api\n   */\n  TextFeature.prototype.writeGeometry = function writeGeometry (geometry, opt_options) {\n    return this.writeGeometryText(geometry, this.adaptOptions(opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  TextFeature.prototype.writeGeometryText = function writeGeometryText (geometry, opt_options) {\n    return abstract();\n  };\n\n  return TextFeature;\n}(FeatureFormat));\n\n\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {string} Text.\n */\nfunction getText(source) {\n  if (typeof source === 'string') {\n    return source;\n  } else {\n    return '';\n  }\n}\n\n\nexport default TextFeature;\n\n//# sourceMappingURL=TextFeature.js.map","/**\n * @module ol/format/KML\n */\nimport Feature from '../Feature.js';\nimport {extend, includes} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {transformGeometryWithOptions} from './Feature.js';\nimport XMLFeature from './XMLFeature.js';\nimport {readDecimal, readBoolean, readString, writeStringTextNode, writeCDATASection, writeDecimalTextNode, writeBooleanTextNode} from './xsd.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {toRadians} from '../math.js';\nimport {get as getProjection} from '../proj.js';\nimport Fill from '../style/Fill.js';\nimport Icon from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport {createElementNS, getAllTextContent, isDocument, makeArrayExtender,\n  makeArrayPusher, makeChildAppender, makeObjectPropertySetter,\n  makeReplacer, makeSequence, makeSimpleNodeFactory, makeStructureNS,\n  OBJECT_PROPERTY_NODE_FACTORY, parse, parseNode, pushParseAndPop,\n  pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI} from '../xml.js';\n\n/**\n * @typedef {Object} Vec2\n * @property {number} x\n * @property {IconAnchorUnits} xunits\n * @property {number} y\n * @property {IconAnchorUnits} yunits\n * @property {IconOrigin} origin\n */\n\n/**\n * @typedef {Object} GxTrackObject\n * @property {Array<number>} flatCoordinates\n * @property {Array<number>} whens\n */\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar GX_NAMESPACE_URIS = [\n  'http://www.google.com/kml/ext/2.2'\n];\n\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2'\n];\n\n\n/**\n * @const\n * @type {string}\n */\nvar SCHEMA_LOCATION = 'http://www.opengis.net/kml/2.2 ' +\n    'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n\n/**\n * @type {Object<string, IconAnchorUnits>}\n */\nvar ICON_ANCHOR_UNITS_MAP = {\n  'fraction': IconAnchorUnits.FRACTION,\n  'pixels': IconAnchorUnits.PIXELS,\n  'insetPixels': IconAnchorUnits.PIXELS\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PLACEMARK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'MultiGeometry': makeObjectPropertySetter(\n      readMultiGeometry, 'geometry'),\n    'LineString': makeObjectPropertySetter(\n      readLineString, 'geometry'),\n    'LinearRing': makeObjectPropertySetter(\n      readLinearRing, 'geometry'),\n    'Point': makeObjectPropertySetter(\n      readPoint, 'geometry'),\n    'Polygon': makeObjectPropertySetter(\n      readPolygon, 'geometry'),\n    'Style': makeObjectPropertySetter(readStyle),\n    'StyleMap': placemarkStyleMapParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readURI),\n    'visibility': makeObjectPropertySetter(readBoolean)\n  }, makeStructureNS(\n    GX_NAMESPACE_URIS, {\n      'MultiTrack': makeObjectPropertySetter(\n        readGxMultiTrack, 'geometry'),\n      'Track': makeObjectPropertySetter(\n        readGxTrack, 'geometry')\n    }\n  ));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar NETWORK_LINK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'Link': linkParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'visibility': makeObjectPropertySetter(readBoolean)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LINK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'href': makeObjectPropertySetter(readURI)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar REGION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LatLonAltBox': latLonAltBoxParser,\n    'Lod': lodParser\n  });\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar KML_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'Document', 'Placemark'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar KML_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Document': makeChildAppender(writeDocument),\n    'Placemark': makeChildAppender(writePlacemark)\n  });\n\n\n/**\n * @type {import(\"../color.js\").Color}\n */\nvar DEFAULT_COLOR;\n\n/**\n * @type {Fill}\n */\nvar DEFAULT_FILL_STYLE = null;\n\n/**\n * Get the default fill style (or null if not yet set).\n * @return {Fill} The default fill style.\n */\nexport function getDefaultFillStyle() {\n  return DEFAULT_FILL_STYLE;\n}\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nvar DEFAULT_IMAGE_STYLE_ANCHOR;\n\n/**\n * @type {IconAnchorUnits}\n */\nvar DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n\n/**\n * @type {IconAnchorUnits}\n */\nvar DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n\n/**\n * @type {import(\"../size.js\").Size}\n */\nvar DEFAULT_IMAGE_STYLE_SIZE;\n\n/**\n * @type {string}\n */\nvar DEFAULT_IMAGE_STYLE_SRC;\n\n/**\n * @type {number}\n */\nvar DEFAULT_IMAGE_SCALE_MULTIPLIER;\n\n/**\n * @type {import(\"../style/Image.js\").default}\n */\nvar DEFAULT_IMAGE_STYLE = null;\n\n/**\n * Get the default image style (or null if not yet set).\n * @return {import(\"../style/Image.js\").default} The default image style.\n */\nexport function getDefaultImageStyle() {\n  return DEFAULT_IMAGE_STYLE;\n}\n\n/**\n * @type {string}\n */\nvar DEFAULT_NO_IMAGE_STYLE;\n\n/**\n * @type {Stroke}\n */\nvar DEFAULT_STROKE_STYLE = null;\n\n/**\n * Get the default stroke style (or null if not yet set).\n * @return {Stroke} The default stroke style.\n */\nexport function getDefaultStrokeStyle() {\n  return DEFAULT_STROKE_STYLE;\n}\n\n/**\n * @type {Stroke}\n */\nvar DEFAULT_TEXT_STROKE_STYLE;\n\n/**\n * @type {Text}\n */\nvar DEFAULT_TEXT_STYLE = null;\n\n/**\n * Get the default text style (or null if not yet set).\n * @return {Text} The default text style.\n */\nexport function getDefaultTextStyle() {\n  return DEFAULT_TEXT_STYLE;\n}\n\n/**\n * @type {Style}\n */\nvar DEFAULT_STYLE = null;\n\n/**\n * Get the default style (or null if not yet set).\n * @return {Style} The default style.\n */\nexport function getDefaultStyle() {\n  return DEFAULT_STYLE;\n}\n\n/**\n * @type {Array<Style>}\n */\nvar DEFAULT_STYLE_ARRAY = null;\n\n/**\n * Get the default style array (or null if not yet set).\n * @return {Array<Style>} The default style.\n */\nexport function getDefaultStyleArray() {\n  return DEFAULT_STYLE_ARRAY;\n}\n\n\nfunction createStyleDefaults() {\n\n  DEFAULT_COLOR = [255, 255, 255, 1];\n\n  DEFAULT_FILL_STYLE = new Fill({\n    color: DEFAULT_COLOR\n  });\n\n  DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2]; // FIXME maybe [8, 32] ?\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = IconAnchorUnits.PIXELS;\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = IconAnchorUnits.PIXELS;\n\n  DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\n\n  DEFAULT_IMAGE_STYLE_SRC =\n      'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  DEFAULT_IMAGE_SCALE_MULTIPLIER = 0.5;\n\n  DEFAULT_IMAGE_STYLE = new Icon({\n    anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\n    anchorOrigin: IconOrigin.BOTTOM_LEFT,\n    anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n    anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: DEFAULT_IMAGE_SCALE_MULTIPLIER,\n    size: DEFAULT_IMAGE_STYLE_SIZE,\n    src: DEFAULT_IMAGE_STYLE_SRC\n  });\n\n  DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n\n  DEFAULT_STROKE_STYLE = new Stroke({\n    color: DEFAULT_COLOR,\n    width: 1\n  });\n\n  DEFAULT_TEXT_STROKE_STYLE = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2\n  });\n\n  DEFAULT_TEXT_STYLE = new Text({\n    font: 'bold 16px Helvetica',\n    fill: DEFAULT_FILL_STYLE,\n    stroke: DEFAULT_TEXT_STROKE_STYLE,\n    scale: 0.8\n  });\n\n  DEFAULT_STYLE = new Style({\n    fill: DEFAULT_FILL_STYLE,\n    image: DEFAULT_IMAGE_STYLE,\n    text: DEFAULT_TEXT_STYLE,\n    stroke: DEFAULT_STROKE_STYLE,\n    zIndex: 0\n  });\n\n  DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\n\n}\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array<Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\n * a KML source.\n *\n * MultiGeometries are converted into GeometryCollections if they are a mix of\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\n * all of the same type.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @api\n */\nvar KML = /*@__PURE__*/(function (XMLFeature) {\n  function KML(opt_options) {\n    XMLFeature.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    if (!DEFAULT_STYLE_ARRAY) {\n      createStyleDefaults();\n    }\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {Array<Style>}\n     */\n    this.defaultStyle_ = options.defaultStyle ?\n      options.defaultStyle : DEFAULT_STYLE_ARRAY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.extractStyles_ = options.extractStyles !== undefined ?\n      options.extractStyles : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.writeStyles_ = options.writeStyles !== undefined ?\n      options.writeStyles : true;\n\n    /**\n     * @private\n     * @type {!Object<string, (Array<Style>|string)>}\n     */\n    this.sharedStyles_ = {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.showPointNames_ = options.showPointNames !== undefined ?\n      options.showPointNames : true;\n\n  }\n\n  if ( XMLFeature ) KML.__proto__ = XMLFeature;\n  KML.prototype = Object.create( XMLFeature && XMLFeature.prototype );\n  KML.prototype.constructor = KML;\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<Feature>|undefined} Features.\n   */\n  KML.prototype.readDocumentOrFolder_ = function readDocumentOrFolder_ (node, objectStack) {\n    // FIXME use scope somehow\n    var parsersNS = makeStructureNS(\n      NAMESPACE_URIS, {\n        'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\n        'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\n        'Placemark': makeArrayPusher(this.readPlacemark_, this),\n        'Style': this.readSharedStyle_.bind(this),\n        'StyleMap': this.readSharedStyleMap_.bind(this)\n      });\n    /** @type {Array<Feature>} */\n    var features = pushParseAndPop([], parsersNS, node, objectStack, this);\n    if (features) {\n      return features;\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Feature|undefined} Feature.\n   */\n  KML.prototype.readPlacemark_ = function readPlacemark_ (node, objectStack) {\n    var object = pushParseAndPop({'geometry': null},\n      PLACEMARK_PARSERS, node, objectStack);\n    if (!object) {\n      return undefined;\n    }\n    var feature = new Feature();\n    var id = node.getAttribute('id');\n    if (id !== null) {\n      feature.setId(id);\n    }\n    var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n\n    var geometry = object['geometry'];\n    if (geometry) {\n      transformGeometryWithOptions(geometry, false, options);\n    }\n    feature.setGeometry(geometry);\n    delete object['geometry'];\n\n    if (this.extractStyles_) {\n      var style = object['Style'];\n      var styleUrl = object['styleUrl'];\n      var styleFunction = createFeatureStyleFunction(\n        style, styleUrl, this.defaultStyle_, this.sharedStyles_,\n        this.showPointNames_);\n      feature.setStyle(styleFunction);\n    }\n    delete object['Style'];\n    // we do not remove the styleUrl property from the object, so it\n    // gets stored on feature when setProperties is called\n\n    feature.setProperties(object, true);\n\n    return feature;\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  KML.prototype.readSharedStyle_ = function readSharedStyle_ (node, objectStack) {\n    var id = node.getAttribute('id');\n    if (id !== null) {\n      var style = readStyle(node, objectStack);\n      if (style) {\n        var styleUri;\n        var baseURI = node.baseURI;\n        if (!baseURI || baseURI == 'about:blank') {\n          baseURI = window.location.href;\n        }\n        if (baseURI) {\n          var url = new URL('#' + id, baseURI);\n          styleUri = url.href;\n        } else {\n          styleUri = '#' + id;\n        }\n        this.sharedStyles_[styleUri] = style;\n      }\n    }\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  KML.prototype.readSharedStyleMap_ = function readSharedStyleMap_ (node, objectStack) {\n    var id = node.getAttribute('id');\n    if (id === null) {\n      return;\n    }\n    var styleMapValue = readStyleMapValue(node, objectStack);\n    if (!styleMapValue) {\n      return;\n    }\n    var styleUri;\n    var baseURI = node.baseURI;\n    if (!baseURI || baseURI == 'about:blank') {\n      baseURI = window.location.href;\n    }\n    if (baseURI) {\n      var url = new URL('#' + id, baseURI);\n      styleUri = url.href;\n    } else {\n      styleUri = '#' + id;\n    }\n    this.sharedStyles_[styleUri] = styleMapValue;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  KML.prototype.readFeatureFromNode = function readFeatureFromNode (node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return null;\n    }\n    var feature = this.readPlacemark_(\n      node, [this.getReadOptions(node, opt_options)]);\n    if (feature) {\n      return feature;\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  KML.prototype.readFeaturesFromNode = function readFeaturesFromNode (node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return [];\n    }\n    var features;\n    var localName = node.localName;\n    if (localName == 'Document' || localName == 'Folder') {\n      features = this.readDocumentOrFolder_(\n        node, [this.getReadOptions(node, opt_options)]);\n      if (features) {\n        return features;\n      } else {\n        return [];\n      }\n    } else if (localName == 'Placemark') {\n      var feature = this.readPlacemark_(\n        node, [this.getReadOptions(node, opt_options)]);\n      if (feature) {\n        return [feature];\n      } else {\n        return [];\n      }\n    } else if (localName == 'kml') {\n      features = [];\n      for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n        var fs = this.readFeaturesFromNode(n, opt_options);\n        if (fs) {\n          extend(features, fs);\n        }\n      }\n      return features;\n    } else {\n      return [];\n    }\n  };\n\n  /**\n   * Read the name of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {string|undefined} Name.\n   * @api\n   */\n  KML.prototype.readName = function readName (source) {\n    if (!source) {\n      return undefined;\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readNameFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readNameFromDocument(/** @type {Document} */ (source));\n    } else {\n      return this.readNameFromNode(/** @type {Element} */ (source));\n    }\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @return {string|undefined} Name.\n   */\n  KML.prototype.readNameFromDocument = function readNameFromDocument (doc) {\n    for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        var name = this.readNameFromNode(/** @type {Element} */ (n));\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @return {string|undefined} Name.\n   */\n  KML.prototype.readNameFromNode = function readNameFromNode (node) {\n    for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n          n.localName == 'name') {\n        return readString(n);\n      }\n    }\n    for (var n$1 = node.firstElementChild; n$1; n$1 = n$1.nextElementSibling) {\n      var localName = n$1.localName;\n      if (includes(NAMESPACE_URIS, n$1.namespaceURI) &&\n          (localName == 'Document' ||\n           localName == 'Folder' ||\n           localName == 'Placemark' ||\n           localName == 'kml')) {\n        var name = this.readNameFromNode(n$1);\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * Read the network links of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Network links.\n   * @api\n   */\n  KML.prototype.readNetworkLinks = function readNetworkLinks (source) {\n    var networkLinks = [];\n    if (typeof source === 'string') {\n      var doc = parse(source);\n      extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(networkLinks, this.readNetworkLinksFromDocument(\n        /** @type {Document} */ (source)));\n    } else {\n      extend(networkLinks, this.readNetworkLinksFromNode(\n        /** @type {Element} */ (source)));\n    }\n    return networkLinks;\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Network links.\n   */\n  KML.prototype.readNetworkLinksFromDocument = function readNetworkLinksFromDocument (doc) {\n    var networkLinks = [];\n    for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(networkLinks, this.readNetworkLinksFromNode(/** @type {Element} */ (n)));\n      }\n    }\n    return networkLinks;\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Network links.\n   */\n  KML.prototype.readNetworkLinksFromNode = function readNetworkLinksFromNode (node) {\n    var networkLinks = [];\n    for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n          n.localName == 'NetworkLink') {\n        var obj = pushParseAndPop({}, NETWORK_LINK_PARSERS,\n          n, []);\n        networkLinks.push(obj);\n      }\n    }\n    for (var n$1 = node.firstElementChild; n$1; n$1 = n$1.nextElementSibling) {\n      var localName = n$1.localName;\n      if (includes(NAMESPACE_URIS, n$1.namespaceURI) &&\n          (localName == 'Document' ||\n           localName == 'Folder' ||\n           localName == 'kml')) {\n        extend(networkLinks, this.readNetworkLinksFromNode(n$1));\n      }\n    }\n    return networkLinks;\n  };\n\n  /**\n   * Read the regions of the KML.\n   *\n   * @param {Document|Element|string} source Source.\n   * @return {Array<Object>} Regions.\n   * @api\n   */\n  KML.prototype.readRegion = function readRegion (source) {\n    var regions = [];\n    if (typeof source === 'string') {\n      var doc = parse(source);\n      extend(regions, this.readRegionFromDocument(doc));\n    } else if (isDocument(source)) {\n      extend(regions, this.readRegionFromDocument(\n        /** @type {Document} */ (source)));\n    } else {\n      extend(regions, this.readRegionFromNode(\n        /** @type {Element} */ (source)));\n    }\n    return regions;\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Region.\n   */\n  KML.prototype.readRegionFromDocument = function readRegionFromDocument (doc) {\n    var regions = [];\n    for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(regions, this.readRegionFromNode(/** @type {Element} */ (n)));\n      }\n    }\n    return regions;\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @return {Array<Object>} Region.\n   * @api\n   */\n  KML.prototype.readRegionFromNode = function readRegionFromNode (node) {\n    var regions = [];\n    for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n          n.localName == 'Region') {\n        var obj = pushParseAndPop({}, REGION_PARSERS,\n          n, []);\n        regions.push(obj);\n      }\n    }\n    for (var n$1 = node.firstElementChild; n$1; n$1 = n$1.nextElementSibling) {\n      var localName = n$1.localName;\n      if (includes(NAMESPACE_URIS, n$1.namespaceURI) &&\n          (localName == 'Document' ||\n           localName == 'Folder' ||\n           localName == 'kml')) {\n        extend(regions, this.readRegionFromNode(n$1));\n      }\n    }\n    return regions;\n  };\n\n  /**\n   * Encode an array of features in the KML format as an XML node. GeometryCollections,\n   * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n   *\n   * @param {Array<Feature>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   * @override\n   * @api\n   */\n  KML.prototype.writeFeaturesNode = function writeFeaturesNode (features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    var kml = createElementNS(NAMESPACE_URIS[4], 'kml');\n    var xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\n    kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    kml.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\n\n    var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: kml};\n    /** @type {!Object<string, (Array<Feature>|Feature|undefined)>} */\n    var properties = {};\n    if (features.length > 1) {\n      properties['Document'] = features;\n    } else if (features.length == 1) {\n      properties['Placemark'] = features[0];\n    }\n    var orderedKeys = KML_SEQUENCE[kml.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, KML_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY, values, [opt_options], orderedKeys,\n      this);\n    return kml;\n  };\n\n  return KML;\n}(XMLFeature));\n\n\n/**\n * @param {Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {Style} style Style.\n */\nfunction createNameStyleFunction(foundStyle, name) {\n  var textStyle = null;\n  var textOffset = [0, 0];\n  var textAlign = 'start';\n  if (foundStyle.getImage()) {\n    var imageSize = foundStyle.getImage().getImageSize();\n    if (imageSize === null) {\n      imageSize = DEFAULT_IMAGE_STYLE_SIZE;\n    }\n    if (imageSize.length == 2) {\n      var imageScale = foundStyle.getImage().getScale();\n      // Offset the label to be centered to the right of the icon, if there is\n      // one.\n      textOffset[0] = imageScale * imageSize[0] / 2;\n      textOffset[1] = -imageScale * imageSize[1] / 2;\n      textAlign = 'left';\n    }\n  }\n  if (foundStyle.getText() !== null) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    var foundText = foundStyle.getText();\n    textStyle = foundText.clone();\n    textStyle.setFont(foundText.getFont() || DEFAULT_TEXT_STYLE.getFont());\n    textStyle.setScale(foundText.getScale() || DEFAULT_TEXT_STYLE.getScale());\n    textStyle.setFill(foundText.getFill() || DEFAULT_TEXT_STYLE.getFill());\n    textStyle.setStroke(foundText.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\n  } else {\n    textStyle = DEFAULT_TEXT_STYLE.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  var nameStyle = new Style({\n    text: textStyle\n  });\n  return nameStyle;\n}\n\n\n/**\n * @param {Array<Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {import(\"../style/Style.js\").StyleFunction} Feature style function.\n */\nfunction createFeatureStyleFunction(style, styleUrl, defaultStyle, sharedStyles, showPointNames) {\n\n  return (\n    /**\n     * @param {Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array<Style>} Style.\n     */\n    function(feature, resolution) {\n      var drawName = showPointNames;\n      /** @type {Style|undefined} */\n      var nameStyle;\n      var name = '';\n      if (drawName) {\n        var geometry = feature.getGeometry();\n        if (geometry) {\n          drawName = geometry.getType() === GeometryType.POINT;\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (feature.get('name'));\n        drawName = drawName && !!name;\n      }\n\n      if (style) {\n        if (drawName) {\n          nameStyle = createNameStyleFunction(style[0], name);\n          return style.concat(nameStyle);\n        }\n        return style;\n      }\n      if (styleUrl) {\n        var foundStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\n        if (drawName) {\n          nameStyle = createNameStyleFunction(foundStyle[0], name);\n          return foundStyle.concat(nameStyle);\n        }\n        return foundStyle;\n      }\n      if (drawName) {\n        nameStyle = createNameStyleFunction(defaultStyle[0], name);\n        return defaultStyle.concat(nameStyle);\n      }\n      return defaultStyle;\n    }\n  );\n}\n\n\n/**\n * @param {Array<Style>|string|undefined} styleValue Style value.\n * @param {Array<Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array<Style>} Style.\n */\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  } else if (typeof styleValue === 'string') {\n    // KML files in the wild occasionally forget the leading `#` on styleUrls\n    // defined in the same document.  Add a leading `#` if it enables to find\n    // a style.\n    if (!(styleValue in sharedStyles) && ('#' + styleValue in sharedStyles)) {\n      styleValue = '#' + styleValue;\n    }\n    return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n  } else {\n    return defaultStyle;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {import(\"../color.js\").Color|undefined} Color.\n */\nfunction readColor(node) {\n  var s = getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  var m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    var hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255\n    ];\n\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {Array<number>|undefined} Flat coordinates.\n */\nexport function readFlatCoordinates(node) {\n  var s = getAllTextContent(node, false);\n  var flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  var re =\n      /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?))?\\s*/i;\n  var m;\n  while ((m = re.exec(s))) {\n    var x = parseFloat(m[1]);\n    var y = parseFloat(m[2]);\n    var z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readURI(node) {\n  var s = getAllTextContent(node, false).trim();\n  var baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    var url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n}\n\n\n/**\n * @param {Element} node Node.\n * @return {Vec2} Vec2.\n */\nfunction readVec2(node) {\n  var xunits = node.getAttribute('xunits');\n  var yunits = node.getAttribute('yunits');\n  var origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_LEFT;\n    } else {\n      origin = IconOrigin.TOP_LEFT;\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_RIGHT;\n    } else {\n      origin = IconOrigin.TOP_RIGHT;\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: ICON_ANCHOR_UNITS_MAP[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: ICON_ANCHOR_UNITS_MAP[yunits],\n    origin: origin\n  };\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */\nfunction readScale(node) {\n  return readDecimal(node);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar STYLE_MAP_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Pair': pairDataParser\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>|string|undefined} StyleMap.\n */\nfunction readStyleMapValue(node, objectStack) {\n  return pushParseAndPop(undefined,\n    STYLE_MAP_PARSERS, node, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar ICON_STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Icon': makeObjectPropertySetter(readIcon),\n    'heading': makeObjectPropertySetter(readDecimal),\n    'hotSpot': makeObjectPropertySetter(readVec2),\n    'scale': makeObjectPropertySetter(readScale)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction iconStyleParser(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  var object = pushParseAndPop(\n    {}, ICON_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var styleObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var IconObject = 'Icon' in object ? object['Icon'] : {};\n  var drawIcon = (!('Icon' in object) || Object.keys(IconObject).length > 0);\n  var src;\n  var href = /** @type {string|undefined} */\n      (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = DEFAULT_IMAGE_STYLE_SRC;\n  }\n  var anchor, anchorXUnits, anchorYUnits;\n  var anchorOrigin = IconOrigin.BOTTOM_LEFT;\n  var hotSpot = /** @type {Vec2|undefined} */\n      (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (src === DEFAULT_IMAGE_STYLE_SRC) {\n    anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\n    anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n    anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n  } else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    anchor = [0.5, 0];\n    anchorXUnits = IconAnchorUnits.FRACTION;\n    anchorYUnits = IconAnchorUnits.FRACTION;\n  }\n\n  var offset;\n  var x = /** @type {number|undefined} */\n      (IconObject['x']);\n  var y = /** @type {number|undefined} */\n      (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  var size;\n  var w = /** @type {number|undefined} */\n      (IconObject['w']);\n  var h = /** @type {number|undefined} */\n      (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  var rotation;\n  var heading = /** @type {number} */\n      (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  var scale = /** @type {number|undefined} */\n      (object['scale']);\n\n  if (drawIcon) {\n    if (src == DEFAULT_IMAGE_STYLE_SRC) {\n      size = DEFAULT_IMAGE_STYLE_SIZE;\n      if (scale === undefined) {\n        scale = DEFAULT_IMAGE_SCALE_MULTIPLIER;\n      }\n    }\n\n    var imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: 'anonymous', // FIXME should this be configurable?\n      offset: offset,\n      offsetOrigin: IconOrigin.BOTTOM_LEFT,\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: src\n    });\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LABEL_STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'scale': makeObjectPropertySetter(readScale)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction labelStyleParser(node, objectStack) {\n  // FIXME colorMode\n  var object = pushParseAndPop(\n    {}, LABEL_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var styleObject = objectStack[objectStack.length - 1];\n  var textStyle = new Text({\n    fill: new Fill({\n      color: /** @type {import(\"../color.js\").Color} */\n          ('color' in object ? object['color'] : DEFAULT_COLOR)\n    }),\n    scale: /** @type {number|undefined} */\n        (object['scale'])\n  });\n  styleObject['textStyle'] = textStyle;\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LINE_STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'width': makeObjectPropertySetter(readDecimal)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lineStyleParser(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  var object = pushParseAndPop(\n    {}, LINE_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var styleObject = objectStack[objectStack.length - 1];\n  var strokeStyle = new Stroke({\n    color: /** @type {import(\"../color.js\").Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1)\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar POLY_STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'fill': makeObjectPropertySetter(readBoolean),\n    'outline': makeObjectPropertySetter(readBoolean)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction polyStyleParser(node, objectStack) {\n  // FIXME colorMode\n  var object = pushParseAndPop(\n    {}, POLY_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var styleObject = objectStack[objectStack.length - 1];\n  var fillStyle = new Fill({\n    color: /** @type {import(\"../color.js\").Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR)\n  });\n  styleObject['fillStyle'] = fillStyle;\n  var fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  var outline = /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar FLAT_LINEAR_RING_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'coordinates': makeReplacer(readFlatCoordinates)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} LinearRing flat coordinates.\n */\nfunction readFlatLinearRing(node, objectStack) {\n  return pushParseAndPop(null,\n    FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction gxCoordParser(node, objectStack) {\n  var gxTrackObject = /** @type {GxTrackObject} */\n      (objectStack[objectStack.length - 1]);\n  var flatCoordinates = gxTrackObject.flatCoordinates;\n  var s = getAllTextContent(node, false);\n  var re =\n      /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  var m = re.exec(s);\n  if (m) {\n    var x = parseFloat(m[1]);\n    var y = parseFloat(m[2]);\n    var z = parseFloat(m[3]);\n    flatCoordinates.push(x, y, z, 0);\n  } else {\n    flatCoordinates.push(0, 0, 0, 0);\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(\n  GX_NAMESPACE_URIS, {\n    'Track': makeArrayPusher(readGxTrack)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {MultiLineString|undefined} MultiLineString.\n */\nfunction readGxMultiTrack(node, objectStack) {\n  var lineStrings = pushParseAndPop([],\n    GX_MULTITRACK_GEOMETRY_PARSERS, node, objectStack);\n  if (!lineStrings) {\n    return undefined;\n  }\n  return new MultiLineString(lineStrings);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar GX_TRACK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'when': whenParser\n  }, makeStructureNS(\n    GX_NAMESPACE_URIS, {\n      'coord': gxCoordParser\n    }));\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readGxTrack(node, objectStack) {\n  var gxTrackObject = pushParseAndPop(\n    /** @type {GxTrackObject} */ ({\n      flatCoordinates: [],\n      whens: []\n    }), GX_TRACK_PARSERS, node, objectStack);\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  var flatCoordinates = gxTrackObject.flatCoordinates;\n  var whens = gxTrackObject.whens;\n  for (var i = 0, ii = Math.min(flatCoordinates.length, whens.length); i < ii; ++i) {\n    flatCoordinates[4 * i + 3] = whens[i];\n  }\n  return new LineString(flatCoordinates, GeometryLayout.XYZM);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar ICON_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'href': makeObjectPropertySetter(readURI)\n  }, makeStructureNS(\n    GX_NAMESPACE_URIS, {\n      'x': makeObjectPropertySetter(readDecimal),\n      'y': makeObjectPropertySetter(readDecimal),\n      'w': makeObjectPropertySetter(readDecimal),\n      'h': makeObjectPropertySetter(readDecimal)\n    }));\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */\nfunction readIcon(node, objectStack) {\n  var iconObject = pushParseAndPop(\n    {}, ICON_PARSERS, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  } else {\n    return null;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'coordinates': makeReplacer(readFlatCoordinates)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} Flat coordinates.\n */\nfunction readFlatCoordinatesFromNode(node, objectStack) {\n  return pushParseAndPop(null,\n    GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'extrude': makeObjectPropertySetter(readBoolean),\n    'tessellate': makeObjectPropertySetter(readBoolean),\n    'altitudeMode': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {LineString|undefined} LineString.\n */\nfunction readLineString(node, objectStack) {\n  var properties = pushParseAndPop({},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\n    objectStack);\n  var flatCoordinates =\n      readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    var lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n    lineString.setProperties(properties, true);\n    return lineString;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readLinearRing(node, objectStack) {\n  var properties = pushParseAndPop({},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\n    objectStack);\n  var flatCoordinates =\n      readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    var polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, [flatCoordinates.length]);\n    polygon.setProperties(properties, true);\n    return polygon;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar MULTI_GEOMETRY_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LineString': makeArrayPusher(readLineString),\n    'LinearRing': makeArrayPusher(readLinearRing),\n    'MultiGeometry': makeArrayPusher(readMultiGeometry),\n    'Point': makeArrayPusher(readPoint),\n    'Polygon': makeArrayPusher(readPolygon)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readMultiGeometry(node, objectStack) {\n  var geometries = pushParseAndPop([],\n    MULTI_GEOMETRY_PARSERS, node, objectStack);\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  var multiGeometry;\n  var homogeneous = true;\n  var type = geometries[0].getType();\n  var geometry;\n  for (var i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    var layout;\n    var flatCoordinates;\n    if (type == GeometryType.POINT) {\n      var point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (var i$1 = 1, ii$1 = geometries.length; i$1 < ii$1; ++i$1) {\n        geometry = geometries[i$1];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(flatCoordinates, layout);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.LINE_STRING) {\n      multiGeometry = new MultiLineString(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.POLYGON) {\n      multiGeometry = new MultiPolygon(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.GEOMETRY_COLLECTION) {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      assert(false, 37); // Unknown geometry type found\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return (\n    /** @type {import(\"../geom/Geometry.js\").default} */ (multiGeometry)\n  );\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Point|undefined} Point.\n */\nfunction readPoint(node, objectStack) {\n  var properties = pushParseAndPop({},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\n    objectStack);\n  var flatCoordinates =\n      readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    var point = new Point(flatCoordinates, GeometryLayout.XYZ);\n    point.setProperties(properties, true);\n    return point;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'innerBoundaryIs': innerBoundaryIsParser,\n    'outerBoundaryIs': outerBoundaryIsParser\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Polygon|undefined} Polygon.\n */\nfunction readPolygon(node, objectStack) {\n  var properties = pushParseAndPop(/** @type {Object<string,*>} */ ({}),\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\n    objectStack);\n  var flatLinearRings = pushParseAndPop([null],\n    FLAT_LINEAR_RINGS_PARSERS, node, objectStack);\n  if (flatLinearRings && flatLinearRings[0]) {\n    var flatCoordinates = flatLinearRings[0];\n    var ends = [flatCoordinates.length];\n    for (var i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    var polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n    polygon.setProperties(properties, true);\n    return polygon;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'IconStyle': iconStyleParser,\n    'LabelStyle': labelStyleParser,\n    'LineStyle': lineStyleParser,\n    'PolyStyle': polyStyleParser\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<Style>} Style.\n */\nfunction readStyle(node, objectStack) {\n  var styleObject = pushParseAndPop(\n    {}, STYLE_PARSERS, node, objectStack);\n  if (!styleObject) {\n    return null;\n  }\n  var fillStyle = /** @type {Fill} */\n      ('fillStyle' in styleObject ?\n        styleObject['fillStyle'] : DEFAULT_FILL_STYLE);\n  var fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  var imageStyle;\n  if ('imageStyle' in styleObject) {\n    if (styleObject['imageStyle'] != DEFAULT_NO_IMAGE_STYLE) {\n      imageStyle = styleObject['imageStyle'];\n    }\n  } else {\n    imageStyle = DEFAULT_IMAGE_STYLE;\n  }\n  var textStyle = /** @type {Text} */\n      ('textStyle' in styleObject ?\n        styleObject['textStyle'] : DEFAULT_TEXT_STYLE);\n  var strokeStyle = /** @type {Stroke} */\n      ('strokeStyle' in styleObject ?\n        styleObject['strokeStyle'] : DEFAULT_STROKE_STYLE);\n  var outline = /** @type {boolean|undefined} */\n      (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    strokeStyle = null;\n  }\n  return [new Style({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle,\n    zIndex: undefined // FIXME\n  })];\n}\n\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {MultiPoint|MultiLineString|MultiPolygon} multiGeometry A multi-geometry.\n * @param {Array<import(\"../geom/Geometry.js\").default>} geometries List of geometries.\n */\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\n  var ii = geometries.length;\n  var extrudes = new Array(geometries.length);\n  var tessellates = new Array(geometries.length);\n  var altitudeModes = new Array(geometries.length);\n  var hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = hasTessellate = hasAltitudeMode = false;\n  for (var i = 0; i < ii; ++i) {\n    var geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar DATA_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'displayName': makeObjectPropertySetter(readString),\n    'value': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction dataParser(node, objectStack) {\n  var name = node.getAttribute('name');\n  parseNode(DATA_PARSERS, node, objectStack);\n  var featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar EXTENDED_DATA_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Data': dataParser,\n    'SchemaData': schemaDataParser\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction extendedDataParser(node, objectStack) {\n  parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction regionParser(node, objectStack) {\n  parseNode(REGION_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PAIR_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Style': makeObjectPropertySetter(readStyle),\n    'key': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readURI)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction pairDataParser(node, objectStack) {\n  var pairObject = pushParseAndPop(\n    {}, PAIR_PARSERS, node, objectStack);\n  if (!pairObject) {\n    return;\n  }\n  var key = /** @type {string|undefined} */\n      (pairObject['key']);\n  if (key && key == 'normal') {\n    var styleUrl = /** @type {string|undefined} */\n        (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    var style = /** @type {Style} */\n        (pairObject['Style']);\n    if (style) {\n      objectStack[objectStack.length - 1] = style;\n    }\n  }\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction placemarkStyleMapParser(node, objectStack) {\n  var styleMapValue = readStyleMapValue(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  var placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    assert(false, 38); // `styleMapValue` has an unknown type\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar SCHEMA_DATA_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'SimpleData': simpleDataParser\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction schemaDataParser(node, objectStack) {\n  parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction simpleDataParser(node, objectStack) {\n  var name = node.getAttribute('name');\n  if (name !== null) {\n    var data = readString(node);\n    var featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    featureObject[name] = data;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LAT_LON_ALT_BOX_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'altitudeMode': makeObjectPropertySetter(readString),\n    'minAltitude': makeObjectPropertySetter(readDecimal),\n    'maxAltitude': makeObjectPropertySetter(readDecimal),\n    'north': makeObjectPropertySetter(readDecimal),\n    'south': makeObjectPropertySetter(readDecimal),\n    'east': makeObjectPropertySetter(readDecimal),\n    'west': makeObjectPropertySetter(readDecimal)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction latLonAltBoxParser(node, objectStack) {\n  var object = pushParseAndPop({}, LAT_LON_ALT_BOX_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var regionObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north'])\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LOD_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'minLodPixels': makeObjectPropertySetter(readDecimal),\n    'maxLodPixels': makeObjectPropertySetter(readDecimal),\n    'minFadeExtent': makeObjectPropertySetter(readDecimal),\n    'maxFadeExtent': makeObjectPropertySetter(readDecimal)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lodParser(node, objectStack) {\n  var object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar INNER_BOUNDARY_IS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LinearRing': makeReplacer(readFlatLinearRing)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction innerBoundaryIsParser(node, objectStack) {\n  /** @type {Array<number>|undefined} */\n  var flatLinearRing = pushParseAndPop(undefined,\n    INNER_BOUNDARY_IS_PARSERS, node, objectStack);\n  if (flatLinearRing) {\n    var flatLinearRings = /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LinearRing': makeReplacer(readFlatLinearRing)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction outerBoundaryIsParser(node, objectStack) {\n  /** @type {Array<number>|undefined} */\n  var flatLinearRing = pushParseAndPop(undefined,\n    OUTER_BOUNDARY_IS_PARSERS, node, objectStack);\n  if (flatLinearRing) {\n    var flatLinearRings = /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction linkParser(node, objectStack) {\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction whenParser(node, objectStack) {\n  var gxTrackObject = /** @type {GxTrackObject} */\n      (objectStack[objectStack.length - 1]);\n  var whens = gxTrackObject.whens;\n  var s = getAllTextContent(node, false);\n  var when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {import(\"../color.js\").Color|string} color Color.\n */\nfunction writeColorTextNode(node, color) {\n  var rgba = asArray(color);\n  var opacity = (rgba.length == 4) ? rgba[3] : 1;\n  /** @type {Array<string|number>} */\n  var abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  for (var i = 0; i < 4; ++i) {\n    var hex = Math.floor(/** @type {number} */ (abgr[i])).toString(16);\n    abgr[i] = (hex.length == 1) ? '0' + hex : hex;\n  }\n  writeStringTextNode(node, abgr.join(''));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array<number>} coordinates Coordinates.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n\n  var layout = context['layout'];\n  var stride = context['stride'];\n\n  var dimension;\n  if (layout == GeometryLayout.XY ||\n      layout == GeometryLayout.XYM) {\n    dimension = 2;\n  } else if (layout == GeometryLayout.XYZ ||\n      layout == GeometryLayout.XYZM) {\n    dimension = 3;\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n\n  var ii = coordinates.length;\n  var text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (var d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (var i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (var d$1 = 1; d$1 < dimension; ++d$1) {\n        text += ',' + coordinates[i + d$1];\n      }\n    }\n  }\n  writeStringTextNode(node, text);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Data': makeChildAppender(writeDataNode),\n    'value': makeChildAppender(writeDataNodeValue),\n    'displayName': makeChildAppender(writeDataNodeName)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeDataNode(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  var value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\n    }\n\n    if (value !== null && value.value) {\n      pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\n    }\n  } else {\n    pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\n  }\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */\nfunction writeDataNodeName(node, name) {\n  writeCDATASection(node, name);\n}\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */\nfunction writeDataNodeValue(node, value) {\n  writeStringTextNode(node, value);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar DOCUMENT_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Placemark': makeChildAppender(writePlacemark)\n  });\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nvar DOCUMENT_NODE_FACTORY = function(value, objectStack, opt_nodeName) {\n  var parentNode = objectStack[objectStack.length - 1].node;\n  return createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<Feature>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writeDocument(node, features, objectStack) {\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(context, DOCUMENT_SERIALIZERS,\n    DOCUMENT_NODE_FACTORY, features, objectStack, undefined,\n    this);\n}\n\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nvar DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\n\n\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeExtendedData(node, namesAndValues, objectStack) {\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  var names = namesAndValues.names;\n  var values = namesAndValues.values;\n  var length = names.length;\n\n  for (var i = 0; i < length; i++) {\n    pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\n      DATA_NODE_FACTORY, [{name: names[i], value: values[i]}], objectStack);\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar ICON_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'href'\n  ],\n  makeStructureNS(GX_NAMESPACE_URIS, [\n    'x', 'y', 'w', 'h'\n  ]));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar ICON_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'href': makeChildAppender(writeStringTextNode)\n  }, makeStructureNS(\n    GX_NAMESPACE_URIS, {\n      'x': makeChildAppender(writeDecimalTextNode),\n      'y': makeChildAppender(writeDecimalTextNode),\n      'w': makeChildAppender(writeDecimalTextNode),\n      'h': makeChildAppender(writeDecimalTextNode)\n    }));\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nvar GX_NODE_FACTORY = function(value, objectStack, opt_nodeName) {\n  return createElementNS(GX_NAMESPACE_URIS[0],\n    'gx:' + opt_nodeName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIcon(node, icon, objectStack) {\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(context,\n    ICON_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n  orderedKeys =\n      ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\n  values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(context, ICON_SERIALIZERS,\n    GX_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar ICON_STYLE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'scale', 'heading', 'Icon', 'hotSpot'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar ICON_STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Icon': makeChildAppender(writeIcon),\n    'heading': makeChildAppender(writeDecimalTextNode),\n    'hotSpot': makeChildAppender(writeVec2),\n    'scale': makeChildAppender(writeScaleTextNode)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"../style/Icon.js\").default} style Icon style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIconStyle(node, style, objectStack) {\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  var properties = {};\n  var src = style.getSrc();\n  var size = style.getSize();\n  var iconImageSize = style.getImageSize();\n  var iconProperties = {\n    'href': src\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    var anchor = style.getAnchor(); // top-left\n    var origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      var /** @type {Vec2} */ hotSpot = {\n        x: anchor[0],\n        xunits: IconAnchorUnits.PIXELS,\n        y: size[1] - anchor[1],\n        yunits: IconAnchorUnits.PIXELS\n      };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  var scale = style.getScale();\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  var rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, ICON_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar LABEL_STYLE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'color', 'scale'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar LABEL_STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode),\n    'scale': makeChildAppender(writeScaleTextNode)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Text} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLabelStyle(node, style, objectStack) {\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  var properties = {};\n  var fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  var scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys =\n      LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, LABEL_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar LINE_STYLE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'color', 'width'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar LINE_STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode),\n    'width': makeChildAppender(writeDecimalTextNode)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Stroke} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLineStyle(node, style, objectStack) {\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  var properties = {\n    'color': style.getColor(),\n    'width': style.getWidth()\n  };\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, LINE_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nvar GEOMETRY_NODE_FACTORY = function(value, objectStack, opt_nodeName) {\n  if (value) {\n    var parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(parentNode.namespaceURI,\n      GEOMETRY_TYPE_TO_NODENAME[/** @type {import(\"../geom/Geometry.js\").default} */ (value).getType()]);\n  }\n};\n\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\n\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\n\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\n\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LineString': makeChildAppender(\n      writePrimitiveGeometry),\n    'Point': makeChildAppender(\n      writePrimitiveGeometry),\n    'Polygon': makeChildAppender(writePolygon),\n    'GeometryCollection': makeChildAppender(\n      writeMultiGeometry)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeMultiGeometry(node, geometry, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  var context = {node: node};\n  var type = geometry.getType();\n  /** @type {Array<import(\"../geom/Geometry.js\").default>} */\n  var geometries;\n  /** @type {function(*, Array<*>, string=): (Node|undefined)} */\n  var factory;\n  if (type == GeometryType.GEOMETRY_COLLECTION) {\n    geometries = /** @type {GeometryCollection} */ (geometry).getGeometries();\n    factory = GEOMETRY_NODE_FACTORY;\n  } else if (type == GeometryType.MULTI_POINT) {\n    geometries = /** @type {MultiPoint} */ (geometry).getPoints();\n    factory = POINT_NODE_FACTORY;\n  } else if (type == GeometryType.MULTI_LINE_STRING) {\n    geometries =\n        (/** @type {MultiLineString} */ (geometry)).getLineStrings();\n    factory = LINE_STRING_NODE_FACTORY;\n  } else if (type == GeometryType.MULTI_POLYGON) {\n    geometries =\n        (/** @type {MultiPolygon} */ (geometry)).getPolygons();\n    factory = POLYGON_NODE_FACTORY;\n  } else {\n    assert(false, 39); // Unknown geometry type\n  }\n  pushSerializeAndPop(context,\n    MULTI_GEOMETRY_SERIALIZERS, factory,\n    geometries, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar BOUNDARY_IS_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LinearRing': makeChildAppender(\n      writePrimitiveGeometry)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/LinearRing.js\").default} linearRing Linear ring.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeBoundaryIs(node, linearRing, objectStack) {\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(context,\n    BOUNDARY_IS_SERIALIZERS,\n    LINEAR_RING_NODE_FACTORY, [linearRing], objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar PLACEMARK_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ExtendedData': makeChildAppender(writeExtendedData),\n    'MultiGeometry': makeChildAppender(writeMultiGeometry),\n    'LineString': makeChildAppender(writePrimitiveGeometry),\n    'LinearRing': makeChildAppender(writePrimitiveGeometry),\n    'Point': makeChildAppender(writePrimitiveGeometry),\n    'Polygon': makeChildAppender(writePolygon),\n    'Style': makeChildAppender(writeStyle),\n    'address': makeChildAppender(writeStringTextNode),\n    'description': makeChildAppender(writeStringTextNode),\n    'name': makeChildAppender(writeStringTextNode),\n    'open': makeChildAppender(writeBooleanTextNode),\n    'phoneNumber': makeChildAppender(writeStringTextNode),\n    'styleUrl': makeChildAppender(writeStringTextNode),\n    'visibility': makeChildAppender(writeBooleanTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar PLACEMARK_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'open', 'visibility', 'address', 'phoneNumber', 'description',\n    'styleUrl', 'Style'\n  ]);\n\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nvar EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\n\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Element} node Node.\n * @param {Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n * @this {KML}\n */\nfunction writePlacemark(node, feature, objectStack) {\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', /** @type {string} */ (feature.getId()));\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  var properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  var filter = {'address': 1, 'description': 1, 'name': 1, 'open': 1,\n    'phoneNumber': 1, 'styleUrl': 1, 'visibility': 1};\n  filter[feature.getGeometryName()] = 1;\n  var keys = Object.keys(properties || {}).sort().filter(function(v) {\n    return !filter[v];\n  });\n\n  if (keys.length > 0) {\n    var sequence = makeSequence(properties, keys);\n    var namesAndValues = {names: keys, values: sequence};\n    pushSerializeAndPop(context, PLACEMARK_SERIALIZERS,\n      EXTENDEDDATA_NODE_FACTORY, [namesAndValues], objectStack);\n  }\n\n  var styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    var styles = styleFunction(feature, 0);\n    if (styles) {\n      var style = Array.isArray(styles) ? styles[0] : styles;\n      if (this.writeStyles_) {\n        properties['Style'] = style;\n      }\n      var textStyle = style.getText();\n      if (textStyle) {\n        properties['name'] = textStyle.getText();\n      }\n    }\n  }\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, PLACEMARK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n\n  // serialize geometry\n  var options = /** @type {import(\"./Feature.js\").WriteOptions} */ (objectStack[0]);\n  var geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformGeometryWithOptions(geometry, true, options);\n  }\n  pushSerializeAndPop(context, PLACEMARK_SERIALIZERS,\n    GEOMETRY_NODE_FACTORY, [geometry], objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'extrude', 'tessellate', 'altitudeMode', 'coordinates'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'extrude': makeChildAppender(writeBooleanTextNode),\n    'tessellate': makeChildAppender(writeBooleanTextNode),\n    'altitudeMode': makeChildAppender(writeStringTextNode),\n    'coordinates': makeChildAppender(writeCoordinatesTextNode)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\n  var flatCoordinates = geometry.getFlatCoordinates();\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  var properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, PRIMITIVE_GEOMETRY_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar POLYGON_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'outerBoundaryIs': makeChildAppender(\n      writeBoundaryIs),\n    'innerBoundaryIs': makeChildAppender(\n      writeBoundaryIs)\n  });\n\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\n\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\n\n\n/**\n * @param {Node} node Node.\n * @param {Polygon} polygon Polygon.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolygon(node, polygon, objectStack) {\n  var linearRings = polygon.getLinearRings();\n  var outerRing = linearRings.shift();\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  // inner rings\n  pushSerializeAndPop(context,\n    POLYGON_SERIALIZERS,\n    INNER_BOUNDARY_NODE_FACTORY,\n    linearRings, objectStack);\n  // outer ring\n  pushSerializeAndPop(context,\n    POLYGON_SERIALIZERS,\n    OUTER_BOUNDARY_NODE_FACTORY,\n    [outerRing], objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar POLY_STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode)\n  });\n\n\n/**\n * A factory for creating coordinates nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar COLOR_NODE_FACTORY = makeSimpleNodeFactory('color');\n\n\n/**\n * @param {Node} node Node.\n * @param {Fill} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolyStyle(node, style, objectStack) {\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(context, POLY_STYLE_SERIALIZERS,\n    COLOR_NODE_FACTORY, [style.getColor()], objectStack);\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */\nfunction writeScaleTextNode(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  writeDecimalTextNode(node,\n    Math.round(scale * 1e6) / 1e6);\n}\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar STYLE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'IconStyle', 'LabelStyle', 'LineStyle', 'PolyStyle'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'IconStyle': makeChildAppender(writeIconStyle),\n    'LabelStyle': makeChildAppender(writeLabelStyle),\n    'LineStyle': makeChildAppender(writeLineStyle),\n    'PolyStyle': makeChildAppender(writePolyStyle)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Style} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeStyle(node, style, objectStack) {\n  var /** @type {import(\"../xml.js\").NodeStackItem} */ context = {node: node};\n  var properties = {};\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  var imageStyle = style.getImage();\n  var textStyle = style.getText();\n  if (imageStyle && typeof /** @type {?} */ (imageStyle).getSrc === 'function') {\n    properties['IconStyle'] = imageStyle;\n  }\n  if (textStyle) {\n    properties['LabelStyle'] = textStyle;\n  }\n  if (strokeStyle) {\n    properties['LineStyle'] = strokeStyle;\n  }\n  if (fillStyle) {\n    properties['PolyStyle'] = fillStyle;\n  }\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Element} node Node to append a TextNode with the Vec2 to.\n * @param {Vec2} vec2 Vec2.\n */\nfunction writeVec2(node, vec2) {\n  node.setAttribute('x', String(vec2.x));\n  node.setAttribute('y', String(vec2.y));\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n}\n\n\nexport default KML;\n\n//# sourceMappingURL=KML.js.map","/**\n * @module ol/format/IGC\n */\nimport Feature from '../Feature.js';\nimport {transformGeometryWithOptions} from './Feature.js';\nimport TextFeature from './TextFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * IGC altitude/z. One of 'barometric', 'gps', 'none'.\n * @enum {string}\n */\nvar IGCZ = {\n  BAROMETRIC: 'barometric',\n  GPS: 'gps',\n  NONE: 'none'\n};\n\n/**\n * @const\n * @type {RegExp}\n */\nvar B_RECORD_RE =\n    /^B(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{5})([NS])(\\d{3})(\\d{5})([EW])([AV])(\\d{5})(\\d{5})/;\n\n\n/**\n * @const\n * @type {RegExp}\n */\nvar H_RECORD_RE = /^H.([A-Z]{3}).*?:(.*)/;\n\n\n/**\n * @const\n * @type {RegExp}\n */\nvar HFDTE_RECORD_RE = /^HFDTE(\\d{2})(\\d{2})(\\d{2})/;\n\n\n/**\n * A regular expression matching the newline characters `\\r\\n`, `\\r` and `\\n`.\n *\n * @const\n * @type {RegExp}\n */\nvar NEWLINE_RE = /\\r\\n|\\r|\\n/;\n\n\n/**\n * @typedef {Object} Options\n * @property {IGCZ|string} [altitudeMode='none'] Altitude mode. Possible\n * values are `'barometric'`, `'gps'`, and `'none'`.\n */\n\n\n/**\n * @classdesc\n * Feature format for `*.igc` flight recording files.\n *\n * As IGC sources contain a single feature,\n * {@link module:ol/format/IGC~IGC#readFeatures} will return the feature in an\n * array\n *\n * @api\n */\nvar IGC = /*@__PURE__*/(function (TextFeature) {\n  function IGC(opt_options) {\n    TextFeature.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {IGCZ}\n     */\n    this.altitudeMode_ = options.altitudeMode ? options.altitudeMode : IGCZ.NONE;\n  }\n\n  if ( TextFeature ) IGC.__proto__ = TextFeature;\n  IGC.prototype = Object.create( TextFeature && TextFeature.prototype );\n  IGC.prototype.constructor = IGC;\n\n  /**\n   * @inheritDoc\n   */\n  IGC.prototype.readFeatureFromText = function readFeatureFromText (text, opt_options) {\n    var altitudeMode = this.altitudeMode_;\n    var lines = text.split(NEWLINE_RE);\n    /** @type {Object<string, string>} */\n    var properties = {};\n    var flatCoordinates = [];\n    var year = 2000;\n    var month = 0;\n    var day = 1;\n    var lastDateTime = -1;\n    var i, ii;\n    for (i = 0, ii = lines.length; i < ii; ++i) {\n      var line = lines[i];\n      var m = (void 0);\n      if (line.charAt(0) == 'B') {\n        m = B_RECORD_RE.exec(line);\n        if (m) {\n          var hour = parseInt(m[1], 10);\n          var minute = parseInt(m[2], 10);\n          var second = parseInt(m[3], 10);\n          var y = parseInt(m[4], 10) + parseInt(m[5], 10) / 60000;\n          if (m[6] == 'S') {\n            y = -y;\n          }\n          var x = parseInt(m[7], 10) + parseInt(m[8], 10) / 60000;\n          if (m[9] == 'W') {\n            x = -x;\n          }\n          flatCoordinates.push(x, y);\n          if (altitudeMode != IGCZ.NONE) {\n            var z = (void 0);\n            if (altitudeMode == IGCZ.GPS) {\n              z = parseInt(m[11], 10);\n            } else if (altitudeMode == IGCZ.BAROMETRIC) {\n              z = parseInt(m[12], 10);\n            } else {\n              z = 0;\n            }\n            flatCoordinates.push(z);\n          }\n          var dateTime = Date.UTC(year, month, day, hour, minute, second);\n          // Detect UTC midnight wrap around.\n          if (dateTime < lastDateTime) {\n            dateTime = Date.UTC(year, month, day + 1, hour, minute, second);\n          }\n          flatCoordinates.push(dateTime / 1000);\n          lastDateTime = dateTime;\n        }\n      } else if (line.charAt(0) == 'H') {\n        m = HFDTE_RECORD_RE.exec(line);\n        if (m) {\n          day = parseInt(m[1], 10);\n          month = parseInt(m[2], 10) - 1;\n          year = 2000 + parseInt(m[3], 10);\n        } else {\n          m = H_RECORD_RE.exec(line);\n          if (m) {\n            properties[m[1]] = m[2].trim();\n          }\n        }\n      }\n    }\n    if (flatCoordinates.length === 0) {\n      return null;\n    }\n    var layout = altitudeMode == IGCZ.NONE ? GeometryLayout.XYM : GeometryLayout.XYZM;\n    var lineString = new LineString(flatCoordinates, layout);\n    var feature = new Feature(transformGeometryWithOptions(lineString, false, opt_options));\n    feature.setProperties(properties, true);\n    return feature;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  IGC.prototype.readFeaturesFromText = function readFeaturesFromText (text, opt_options) {\n    var feature = this.readFeatureFromText(text, opt_options);\n    if (feature) {\n      return [feature];\n    } else {\n      return [];\n    }\n  };\n\n  return IGC;\n}(TextFeature));\n\nexport default IGC;\n\n//# sourceMappingURL=IGC.js.map","/**\n * @module ol/render/Feature\n */\nimport {extend} from '../array.js';\nimport {createOrUpdateFromCoordinate, createOrUpdateFromFlatCoordinates, getCenter, getHeight} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {getInteriorPointOfArray, getInteriorPointsOfMultiArray} from '../geom/flat/interiorpoint.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {get as getProjection} from '../proj.js';\nimport {transform2D} from '../geom/flat/transform.js';\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\n\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nvar tmpTransform = createTransform();\n\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n *\n * @param {GeometryType} type Geometry type.\n * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n *     to be right-handed for polygons.\n * @param {Array<number>|Array<Array<number>>} ends Ends or Endss.\n * @param {Object<string, *>} properties Properties.\n * @param {number|string|undefined} id Feature id.\n */\nvar RenderFeature = function RenderFeature(type, flatCoordinates, ends, properties, id) {\n  /**\n  * @private\n  * @type {import(\"../extent.js\").Extent|undefined}\n  */\n  this.extent_;\n\n  /**\n  * @private\n  * @type {number|string|undefined}\n  */\n  this.id_ = id;\n\n  /**\n  * @private\n  * @type {GeometryType}\n  */\n  this.type_ = type;\n\n  /**\n  * @private\n  * @type {Array<number>}\n  */\n  this.flatCoordinates_ = flatCoordinates;\n\n  /**\n  * @private\n  * @type {Array<number>}\n  */\n  this.flatInteriorPoints_ = null;\n\n  /**\n  * @private\n  * @type {Array<number>}\n  */\n  this.flatMidpoints_ = null;\n\n  /**\n  * @private\n  * @type {Array<number>|Array<Array<number>>}\n  */\n  this.ends_ = ends;\n\n  /**\n  * @private\n  * @type {Object<string, *>}\n  */\n  this.properties_ = properties;\n\n};\n\n/**\n* Get a feature property by its key.\n* @param {string} key Key\n* @return {*} Value for the requested key.\n* @api\n*/\nRenderFeature.prototype.get = function get (key) {\n  return this.properties_[key];\n};\n\n/**\n* Get the extent of this feature's geometry.\n* @return {import(\"../extent.js\").Extent} Extent.\n* @api\n*/\nRenderFeature.prototype.getExtent = function getExtent () {\n  if (!this.extent_) {\n    this.extent_ = this.type_ === GeometryType.POINT ?\n      createOrUpdateFromCoordinate(this.flatCoordinates_) :\n      createOrUpdateFromFlatCoordinates(\n        this.flatCoordinates_, 0, this.flatCoordinates_.length, 2);\n\n  }\n  return this.extent_;\n};\n\n/**\n* @return {Array<number>} Flat interior points.\n*/\nRenderFeature.prototype.getFlatInteriorPoint = function getFlatInteriorPoint () {\n  if (!this.flatInteriorPoints_) {\n    var flatCenter = getCenter(this.getExtent());\n    this.flatInteriorPoints_ = getInteriorPointOfArray(\n      this.flatCoordinates_, 0, /** @type {Array<number>} */ (this.ends_), 2, flatCenter, 0);\n  }\n  return this.flatInteriorPoints_;\n};\n\n/**\n* @return {Array<number>} Flat interior points.\n*/\nRenderFeature.prototype.getFlatInteriorPoints = function getFlatInteriorPoints () {\n  if (!this.flatInteriorPoints_) {\n    var flatCenters = linearRingssCenter(\n      this.flatCoordinates_, 0, /** @type {Array<Array<number>>} */ (this.ends_), 2);\n    this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n      this.flatCoordinates_, 0, /** @type {Array<Array<number>>} */ (this.ends_), 2, flatCenters);\n  }\n  return this.flatInteriorPoints_;\n};\n\n/**\n* @return {Array<number>} Flat midpoint.\n*/\nRenderFeature.prototype.getFlatMidpoint = function getFlatMidpoint () {\n  if (!this.flatMidpoints_) {\n    this.flatMidpoints_ = interpolatePoint(\n      this.flatCoordinates_, 0, this.flatCoordinates_.length, 2, 0.5);\n  }\n  return this.flatMidpoints_;\n};\n\n/**\n* @return {Array<number>} Flat midpoints.\n*/\nRenderFeature.prototype.getFlatMidpoints = function getFlatMidpoints () {\n  if (!this.flatMidpoints_) {\n    this.flatMidpoints_ = [];\n    var flatCoordinates = this.flatCoordinates_;\n    var offset = 0;\n    var ends = /** @type {Array<number>} */ (this.ends_);\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var midpoint = interpolatePoint(\n        flatCoordinates, offset, end, 2, 0.5);\n      extend(this.flatMidpoints_, midpoint);\n      offset = end;\n    }\n  }\n  return this.flatMidpoints_;\n};\n\n/**\n* Get the feature identifier.This is a stable identifier for the feature and\n* is set when reading data from a remote source.\n* @return {number|string|undefined} Id.\n* @api\n*/\nRenderFeature.prototype.getId = function getId () {\n  return this.id_;\n};\n\n/**\n* @return {Array<number>} Flat coordinates.\n*/\nRenderFeature.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n  return this.flatCoordinates_;\n};\n\n/**\n* For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n* determining the geometry type in style function (see {@link #getType}).\n* @return {RenderFeature} Feature.\n* @api\n*/\nRenderFeature.prototype.getGeometry = function getGeometry () {\n  return this;\n};\n\n/**\n * @param {number} squaredTolerance Squared tolerance.\n * @return {RenderFeature} Simplified geometry.\n */\nRenderFeature.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n  return this;\n};\n\n/**\n* Get the feature properties.\n* @return {Object<string, *>} Feature properties.\n* @api\n*/\nRenderFeature.prototype.getProperties = function getProperties () {\n  return this.properties_;\n};\n\n/**\n* @return {number} Stride.\n*/\nRenderFeature.prototype.getStride = function getStride () {\n  return 2;\n};\n\n/**\n * @return {undefined}\n */\nRenderFeature.prototype.getStyleFunction = function getStyleFunction () {\n  return undefined;\n};\n\n/**\n* Get the type of this feature's geometry.\n* @return {GeometryType} Geometry type.\n* @api\n*/\nRenderFeature.prototype.getType = function getType () {\n  return this.type_;\n};\n\n/**\n* Transform geometry coordinates from tile pixel space to projected.\n* The SRS of the source and destination are expected to be the same.\n*\n* @param {import(\"../proj.js\").ProjectionLike} source The current projection\n* @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.\n*/\nRenderFeature.prototype.transform = function transform (source, destination) {\n  source = getProjection(source);\n  var pixelExtent = source.getExtent();\n  var projectedExtent = source.getWorldExtent();\n  var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n  composeTransform(tmpTransform,\n    projectedExtent[0], projectedExtent[3],\n    scale, -scale, 0,\n    0, 0);\n  transform2D(this.flatCoordinates_, 0, this.flatCoordinates_.length, 2,\n    tmpTransform, this.flatCoordinates_);\n};\n\n\n/**\n * @return {Array<number>|Array<Array<number>>} Ends or endss.\n */\nRenderFeature.prototype.getEnds =\nRenderFeature.prototype.getEndss = function() {\n  return this.ends_;\n};\n\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n    RenderFeature.prototype.getOrientedFlatCoordinates;\n\n\nexport default RenderFeature;\n\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport {assert} from '../asserts.js';\nimport PBF from 'pbf';\nimport FeatureFormat, {transformGeometryWithOptions} from './Feature.js';\nimport FormatType from './FormatType.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {linearRingIsClockwise} from '../geom/flat/orient.js';\nimport Projection from '../proj/Projection.js';\nimport Units from '../proj/Units.js';\nimport RenderFeature from '../render/Feature.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Feature.js\").FeatureClass} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * layers.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @param {Options=} opt_options Options.\n * @api\n */\nvar MVT = /*@__PURE__*/(function (FeatureFormat) {\n  function MVT(opt_options) {\n    FeatureFormat.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @type {Projection}\n     */\n    this.dataProjection = new Projection({\n      code: '',\n      units: Units.TILE_PIXELS\n    });\n\n    /**\n     * @private\n     * @type {import(\"../Feature.js\").FeatureClass}\n     */\n    this.featureClass_ = options.featureClass ? options.featureClass : RenderFeature;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = null;\n\n  }\n\n  if ( FeatureFormat ) MVT.__proto__ = FeatureFormat;\n  MVT.prototype = Object.create( FeatureFormat && FeatureFormat.prototype );\n  MVT.prototype.constructor = MVT;\n\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @param {PBF} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array<number>} ends Array to store ends in.\n   * @private\n   */\n  MVT.prototype.readRawGeometry_ = function readRawGeometry_ (pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n\n    var end = pbf.readVarint() + pbf.pos;\n    var cmd = 1;\n    var length = 0;\n    var x = 0;\n    var y = 0;\n    var coordsLen = 0;\n    var currentEnd = 0;\n\n    while (pbf.pos < end) {\n      if (!length) {\n        var cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) { // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n\n      } else if (cmd === 7) {\n\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(\n            flatCoordinates[currentEnd], flatCoordinates[currentEnd + 1]);\n          coordsLen += 2;\n        }\n\n      } else {\n        assert(false, 59); // Invalid command found in the PBF\n      }\n    }\n\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n\n  };\n\n  /**\n   * @private\n   * @param {PBF} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  MVT.prototype.createFeature_ = function createFeature_ (pbf, rawFeature, opt_options) {\n    var type = rawFeature.type;\n    if (type === 0) {\n      return null;\n    }\n\n    var feature;\n    var id = rawFeature.id;\n    var values = rawFeature.properties;\n    values[this.layerName_] = rawFeature.layer.name;\n\n    var flatCoordinates = [];\n    var ends = [];\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n    var geometryType = getGeometryType(type, ends.length);\n\n    if (this.featureClass_ === RenderFeature) {\n      feature = new this.featureClass_(geometryType, flatCoordinates, ends, values, id);\n    } else {\n      var geom;\n      if (geometryType == GeometryType.POLYGON) {\n        var endss = [];\n        var offset = 0;\n        var prevEndIndex = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n          var end = ends[i];\n          if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n            endss.push(ends.slice(prevEndIndex, i));\n            prevEndIndex = i;\n          }\n          offset = end;\n        }\n        if (endss.length > 1) {\n          geom = new MultiPolygon(flatCoordinates, GeometryLayout.XY, endss);\n        } else {\n          geom = new Polygon(flatCoordinates, GeometryLayout.XY, ends);\n        }\n      } else {\n        geom = geometryType === GeometryType.POINT ? new Point(flatCoordinates, GeometryLayout.XY) :\n          geometryType === GeometryType.LINE_STRING ? new LineString(flatCoordinates, GeometryLayout.XY) :\n            geometryType === GeometryType.POLYGON ? new Polygon(flatCoordinates, GeometryLayout.XY, ends) :\n              geometryType === GeometryType.MULTI_POINT ? new MultiPoint(flatCoordinates, GeometryLayout.XY) :\n                geometryType === GeometryType.MULTI_LINE_STRING ? new MultiLineString(flatCoordinates, GeometryLayout.XY, ends) :\n                  null;\n      }\n      var ctor = /** @type {typeof import(\"../Feature.js\").default} */ (this.featureClass_);\n      feature = new ctor();\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n      var geometry = transformGeometryWithOptions(geom, false, this.adaptOptions(opt_options));\n      feature.setGeometry(geometry);\n      feature.setId(id);\n      feature.setProperties(values, true);\n    }\n\n    return feature;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MVT.prototype.getLastExtent = function getLastExtent () {\n    return this.extent_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MVT.prototype.getType = function getType () {\n    return FormatType.ARRAY_BUFFER;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MVT.prototype.readFeatures = function readFeatures (source, opt_options) {\n    var layers = this.layers_;\n\n    var pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n    var pbfLayers = pbf.readFields(layersPBFReader, {});\n    /** @type {Array<import(\"../Feature.js\").FeatureLike>} */\n    var features = [];\n    for (var name in pbfLayers) {\n      if (layers && layers.indexOf(name) == -1) {\n        continue;\n      }\n      var pbfLayer = pbfLayers[name];\n\n      for (var i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        var rawFeature = readRawFeature(pbf, pbfLayer, i);\n        features.push(this.createFeature_(pbf, rawFeature));\n      }\n      this.extent_ = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n    }\n\n    return features;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MVT.prototype.readProjection = function readProjection (source) {\n    return this.dataProjection;\n  };\n\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array<string>} layers Layers.\n   * @api\n   */\n  MVT.prototype.setLayers = function setLayers (layers) {\n    this.layers_ = layers;\n  };\n\n  return MVT;\n}(FeatureFormat));\n\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {PBF} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    var layer = {\n      keys: [],\n      values: [],\n      features: []\n    };\n    var end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {PBF} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    var value = null;\n    var end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value = tag === 1 ? pbf.readString() :\n        tag === 2 ? pbf.readFloat() :\n          tag === 3 ? pbf.readDouble() :\n            tag === 4 ? pbf.readVarint64() :\n              tag === 5 ? pbf.readVarint() :\n                tag === 6 ? pbf.readSVarint() :\n                  tag === 7 ? pbf.readBoolean() : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {PBF} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    var end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      var key = feature.layer.keys[pbf.readVarint()];\n      var value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @param {PBF} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  var end = pbf.readVarint() + pbf.pos;\n\n  var feature = {\n    layer: layer,\n    type: 0,\n    properties: {}\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n\n/**\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {GeometryType} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {GeometryType} */\n  var geometryType;\n  if (type === 1) {\n    geometryType = numEnds === 1 ?\n      GeometryType.POINT : GeometryType.MULTI_POINT;\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ?\n      GeometryType.LINE_STRING :\n      GeometryType.MULTI_LINE_STRING;\n  } else if (type === 3) {\n    geometryType = GeometryType.POLYGON;\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\nexport default MVT;\n\n//# sourceMappingURL=MVT.js.map","/**\n * @module ol/format/OSMXML\n */\n// FIXME add typedef for stack state objects\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformGeometryWithOptions} from './Feature.js';\nimport XMLFeature from './XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport {pushParseAndPop, makeStructureNS} from '../xml.js';\n\n\n/**\n * @const\n * @type {Array<null>}\n */\nvar NAMESPACE_URIS = [null];\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar WAY_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'nd': readNd,\n    'tag': readTag\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'node': readNode,\n    'way': readWay\n  });\n\n\n/**\n * @classdesc\n * Feature format for reading data in the\n * [OSMXML format](http://wiki.openstreetmap.org/wiki/OSM_XML).\n *\n * @api\n */\nvar OSMXML = /*@__PURE__*/(function (XMLFeature) {\n  function OSMXML() {\n    XMLFeature.call(this);\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n  }\n\n  if ( XMLFeature ) OSMXML.__proto__ = XMLFeature;\n  OSMXML.prototype = Object.create( XMLFeature && XMLFeature.prototype );\n  OSMXML.prototype.constructor = OSMXML;\n\n  /**\n   * @inheritDoc\n   */\n  OSMXML.prototype.readFeaturesFromNode = function readFeaturesFromNode (node, opt_options) {\n    var options = this.getReadOptions(node, opt_options);\n    if (node.localName == 'osm') {\n      var state = pushParseAndPop({\n        nodes: {},\n        ways: [],\n        features: []\n      }, PARSERS, node, [options]);\n      // parse nodes in ways\n      for (var j = 0; j < state.ways.length; j++) {\n        var values = /** @type {Object} */ (state.ways[j]);\n        /** @type {Array<number>} */\n        var flatCoordinates = [];\n        for (var i = 0, ii = values.ndrefs.length; i < ii; i++) {\n          var point = state.nodes[values.ndrefs[i]];\n          extend(flatCoordinates, point);\n        }\n        var geometry = (void 0);\n        if (values.ndrefs[0] == values.ndrefs[values.ndrefs.length - 1]) {\n          // closed way\n          geometry = new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n        } else {\n          geometry = new LineString(flatCoordinates, GeometryLayout.XY);\n        }\n        transformGeometryWithOptions(geometry, false, options);\n        var feature = new Feature(geometry);\n        feature.setId(values.id);\n        feature.setProperties(values.tags, true);\n        state.features.push(feature);\n      }\n      if (state.features) {\n        return state.features;\n      }\n    }\n    return [];\n  };\n\n  return OSMXML;\n}(XMLFeature));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar NODE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'tag': readTag\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readNode(node, objectStack) {\n  var options = /** @type {import(\"./Feature.js\").ReadOptions} */ (objectStack[0]);\n  var state = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var id = node.getAttribute('id');\n  /** @type {import(\"../coordinate.js\").Coordinate} */\n  var coordinates = [\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat'))\n  ];\n  state.nodes[id] = coordinates;\n\n  var values = pushParseAndPop({\n    tags: {}\n  }, NODE_PARSERS, node, objectStack);\n  if (!isEmpty(values.tags)) {\n    var geometry = new Point(coordinates);\n    transformGeometryWithOptions(geometry, false, options);\n    var feature = new Feature(geometry);\n    feature.setId(id);\n    feature.setProperties(values.tags, true);\n    state.features.push(feature);\n  }\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readWay(node, objectStack) {\n  var id = node.getAttribute('id');\n  var values = pushParseAndPop({\n    id: id,\n    ndrefs: [],\n    tags: {}\n  }, WAY_PARSERS, node, objectStack);\n  var state = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  state.ways.push(values);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readNd(node, objectStack) {\n  var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values.ndrefs.push(node.getAttribute('ref'));\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction readTag(node, objectStack) {\n  var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values.tags[node.getAttribute('k')] = node.getAttribute('v');\n}\n\n\nexport default OSMXML;\n\n//# sourceMappingURL=OSMXML.js.map","/**\n * @module ol/geom/flat/flip\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_dest Destination.\n * @param {number=} opt_destOffset Destination offset.\n * @return {Array<number>} Flat coordinates.\n */\nexport function flipXY(flatCoordinates, offset, end, stride, opt_dest, opt_destOffset) {\n  var dest, destOffset;\n  if (opt_dest !== undefined) {\n    dest = opt_dest;\n    destOffset = opt_destOffset !== undefined ? opt_destOffset : 0;\n  } else {\n    dest = [];\n    destOffset = 0;\n  }\n  var j = offset;\n  while (j < end) {\n    var x = flatCoordinates[j++];\n    dest[destOffset++] = flatCoordinates[j++];\n    dest[destOffset++] = x;\n    for (var k = 2; k < stride; ++k) {\n      dest[destOffset++] = flatCoordinates[j++];\n    }\n  }\n  dest.length = destOffset;\n  return dest;\n}\n\n//# sourceMappingURL=flip.js.map","/**\n * @module ol/format/Polyline\n */\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport {transformGeometryWithOptions} from './Feature.js';\nimport TextFeature from './TextFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\nimport {flipXY} from '../geom/flat/flip.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [factor=1e5] The factor by which the coordinates values will be scaled.\n * @property {GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the format reader.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the Encoded\n * Polyline Algorithm Format.\n *\n * When reading features, the coordinates are assumed to be in two dimensions\n * and in [latitude, longitude] order.\n *\n * As Polyline sources contain a single feature,\n * {@link module:ol/format/Polyline~Polyline#readFeatures} will return the\n * feature in an array.\n *\n * @api\n */\nvar Polyline = /*@__PURE__*/(function (TextFeature) {\n  function Polyline(opt_options) {\n    TextFeature.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.factor_ = options.factor ? options.factor : 1e5;\n\n    /**\n     * @private\n     * @type {GeometryLayout}\n     */\n    this.geometryLayout_ = options.geometryLayout ?\n      options.geometryLayout : GeometryLayout.XY;\n  }\n\n  if ( TextFeature ) Polyline.__proto__ = TextFeature;\n  Polyline.prototype = Object.create( TextFeature && TextFeature.prototype );\n  Polyline.prototype.constructor = Polyline;\n\n  /**\n   * @inheritDoc\n   */\n  Polyline.prototype.readFeatureFromText = function readFeatureFromText (text, opt_options) {\n    var geometry = this.readGeometryFromText(text, opt_options);\n    return new Feature(geometry);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polyline.prototype.readFeaturesFromText = function readFeaturesFromText (text, opt_options) {\n    var feature = this.readFeatureFromText(text, opt_options);\n    return [feature];\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polyline.prototype.readGeometryFromText = function readGeometryFromText (text, opt_options) {\n    var stride = getStrideForLayout(this.geometryLayout_);\n    var flatCoordinates = decodeDeltas(text, stride, this.factor_);\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    var coordinates = inflateCoordinates(flatCoordinates, 0, flatCoordinates.length, stride);\n    var lineString = new LineString(coordinates, this.geometryLayout_);\n\n    return transformGeometryWithOptions(lineString, false, this.adaptOptions(opt_options));\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polyline.prototype.writeFeatureText = function writeFeatureText (feature, opt_options) {\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      return this.writeGeometryText(geometry, opt_options);\n    } else {\n      assert(false, 40); // Expected `feature` to have a geometry\n      return '';\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polyline.prototype.writeFeaturesText = function writeFeaturesText (features, opt_options) {\n    return this.writeFeatureText(features[0], opt_options);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polyline.prototype.writeGeometryText = function writeGeometryText (geometry, opt_options) {\n    geometry = /** @type {LineString} */\n      (transformGeometryWithOptions(geometry, true, this.adaptOptions(opt_options)));\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    return encodeDeltas(flatCoordinates, stride, this.factor_);\n  };\n\n  return Polyline;\n}(TextFeature));\n\n\n/**\n * Encode a list of n-dimensional points and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of n-dimensional points.\n * @param {number} stride The number of dimension of the points in the list.\n * @param {number=} opt_factor The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeDeltas(numbers, stride, opt_factor) {\n  var factor = opt_factor ? opt_factor : 1e5;\n  var d;\n\n  var lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  for (var i = 0, ii = numbers.length; i < ii;) {\n    for (d = 0; d < stride; ++d, ++i) {\n      var num = numbers[i];\n      var delta = num - lastNumbers[d];\n      lastNumbers[d] = num;\n\n      numbers[i] = delta;\n    }\n  }\n\n  return encodeFloats(numbers, factor);\n}\n\n\n/**\n * Decode a list of n-dimensional points from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} stride The number of dimension of the points in the\n *     encoded string.\n * @param {number=} opt_factor The factor by which the resulting numbers will\n *     be divided. Default is `1e5`.\n * @return {Array<number>} A list of n-dimensional points.\n * @api\n */\nexport function decodeDeltas(encoded, stride, opt_factor) {\n  var factor = opt_factor ? opt_factor : 1e5;\n  var d;\n\n  /** @type {Array<number>} */\n  var lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  var numbers = decodeFloats(encoded, factor);\n\n  for (var i = 0, ii = numbers.length; i < ii;) {\n    for (d = 0; d < stride; ++d, ++i) {\n      lastNumbers[d] += numbers[i];\n\n      numbers[i] = lastNumbers[d];\n    }\n  }\n\n  return numbers;\n}\n\n\n/**\n * Encode a list of floating point numbers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of floating point numbers.\n * @param {number=} opt_factor The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeFloats(numbers, opt_factor) {\n  var factor = opt_factor ? opt_factor : 1e5;\n  for (var i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] = Math.round(numbers[i] * factor);\n  }\n\n  return encodeSignedIntegers(numbers);\n}\n\n\n/**\n * Decode a list of floating point numbers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number=} opt_factor The factor by which the result will be divided.\n *     Default is `1e5`.\n * @return {Array<number>} A list of floating point numbers.\n * @api\n */\nexport function decodeFloats(encoded, opt_factor) {\n  var factor = opt_factor ? opt_factor : 1e5;\n  var numbers = decodeSignedIntegers(encoded);\n  for (var i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] /= factor;\n  }\n  return numbers;\n}\n\n\n/**\n * Encode a list of signed integers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of signed integers.\n * @return {string} The encoded string.\n */\nexport function encodeSignedIntegers(numbers) {\n  for (var i = 0, ii = numbers.length; i < ii; ++i) {\n    var num = numbers[i];\n    numbers[i] = (num < 0) ? ~(num << 1) : (num << 1);\n  }\n  return encodeUnsignedIntegers(numbers);\n}\n\n\n/**\n * Decode a list of signed integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of signed integers.\n */\nexport function decodeSignedIntegers(encoded) {\n  var numbers = decodeUnsignedIntegers(encoded);\n  for (var i = 0, ii = numbers.length; i < ii; ++i) {\n    var num = numbers[i];\n    numbers[i] = (num & 1) ? ~(num >> 1) : (num >> 1);\n  }\n  return numbers;\n}\n\n\n/**\n * Encode a list of unsigned integers and return an encoded string\n *\n * @param {Array<number>} numbers A list of unsigned integers.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedIntegers(numbers) {\n  var encoded = '';\n  for (var i = 0, ii = numbers.length; i < ii; ++i) {\n    encoded += encodeUnsignedInteger(numbers[i]);\n  }\n  return encoded;\n}\n\n\n/**\n * Decode a list of unsigned integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of unsigned integers.\n */\nexport function decodeUnsignedIntegers(encoded) {\n  var numbers = [];\n  var current = 0;\n  var shift = 0;\n  for (var i = 0, ii = encoded.length; i < ii; ++i) {\n    var b = encoded.charCodeAt(i) - 63;\n    current |= (b & 0x1f) << shift;\n    if (b < 0x20) {\n      numbers.push(current);\n      current = 0;\n      shift = 0;\n    } else {\n      shift += 5;\n    }\n  }\n  return numbers;\n}\n\n\n/**\n * Encode one single unsigned integer and return an encoded string\n *\n * @param {number} num Unsigned integer that should be encoded.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedInteger(num) {\n  var value, encoded = '';\n  while (num >= 0x20) {\n    value = (0x20 | (num & 0x1f)) + 63;\n    encoded += String.fromCharCode(value);\n    num >>= 5;\n  }\n  value = num + 63;\n  encoded += String.fromCharCode(value);\n  return encoded;\n}\n\n\nexport default Polyline;\n\n//# sourceMappingURL=Polyline.js.map","/**\n * @module ol/format/TopoJSON\n */\nimport Feature from '../Feature.js';\nimport {transformGeometryWithOptions} from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {import(\"topojson-specification\").Topology} TopoJSONTopology\n * @typedef {import(\"topojson-specification\").GeometryCollection} TopoJSONGeometryCollection\n * @typedef {import(\"topojson-specification\").GeometryObject} TopoJSONGeometry\n * @typedef {import(\"topojson-specification\").Point} TopoJSONPoint\n * @typedef {import(\"topojson-specification\").MultiPoint} TopoJSONMultiPoint\n * @typedef {import(\"topojson-specification\").LineString} TopoJSONLineString\n * @typedef {import(\"topojson-specification\").MultiLineString} TopoJSONMultiLineString\n * @typedef {import(\"topojson-specification\").Polygon} TopoJSONPolygon\n * @typedef {import(\"topojson-specification\").MultiPolygon} TopoJSONMultiPolygon\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {string} [layerName] Set the name of the TopoJSON topology\n * `objects`'s children as feature property with the specified name. This means\n * that when set to `'layer'`, a topology like\n * ```\n * {\n *   \"type\": \"Topology\",\n *   \"objects\": {\n *     \"example\": {\n *       \"type\": \"GeometryCollection\",\n *       \"geometries\": []\n *     }\n *   }\n * }\n * ```\n * will result in features that have a property `'layer'` set to `'example'`.\n * When not set, no property will be added to features.\n * @property {Array<string>} [layers] Names of the TopoJSON topology's\n * `objects`'s children to read features from.  If not provided, features will\n * be read from all children.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading data in the TopoJSON format.\n *\n * @api\n */\nvar TopoJSON = /*@__PURE__*/(function (JSONFeature) {\n  function TopoJSON(opt_options) {\n    JSONFeature.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.layerName_ = options.layerName;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ?\n        options.dataProjection : 'EPSG:4326');\n\n  }\n\n  if ( JSONFeature ) TopoJSON.__proto__ = JSONFeature;\n  TopoJSON.prototype = Object.create( JSONFeature && JSONFeature.prototype );\n  TopoJSON.prototype.constructor = TopoJSON;\n\n  /**\n   * @inheritDoc\n   */\n  TopoJSON.prototype.readFeaturesFromObject = function readFeaturesFromObject (object, opt_options) {\n    if (object.type == 'Topology') {\n      var topoJSONTopology = /** @type {TopoJSONTopology} */ (object);\n      var transform, scale = null, translate = null;\n      if (topoJSONTopology['transform']) {\n        transform = topoJSONTopology['transform'];\n        scale = transform['scale'];\n        translate = transform['translate'];\n      }\n      var arcs = topoJSONTopology['arcs'];\n      if (transform) {\n        transformArcs(arcs, scale, translate);\n      }\n      /** @type {Array<Feature>} */\n      var features = [];\n      var topoJSONFeatures = topoJSONTopology['objects'];\n      var property = this.layerName_;\n      var feature;\n      for (var objectName in topoJSONFeatures) {\n        if (this.layers_ && this.layers_.indexOf(objectName) == -1) {\n          continue;\n        }\n        if (topoJSONFeatures[objectName].type === 'GeometryCollection') {\n          feature = /** @type {TopoJSONGeometryCollection} */ (topoJSONFeatures[objectName]);\n          features.push.apply(features, readFeaturesFromGeometryCollection(\n            feature, arcs, scale, translate, property, objectName, opt_options));\n        } else {\n          feature = /** @type {TopoJSONGeometry} */ (topoJSONFeatures[objectName]);\n          features.push(readFeatureFromGeometry(\n            feature, arcs, scale, translate, property, objectName, opt_options));\n        }\n      }\n      return features;\n    } else {\n      return [];\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TopoJSON.prototype.readProjectionFromObject = function readProjectionFromObject (object) {\n    return this.dataProjection;\n  };\n\n  return TopoJSON;\n}(JSONFeature));\n\n\n/**\n * @const\n * @type {Object<string, function(TopoJSONGeometry, Array, ...Array=): import(\"../geom/Geometry.js\").default>}\n */\nvar GEOMETRY_READERS = {\n  'Point': readPointGeometry,\n  'LineString': readLineStringGeometry,\n  'Polygon': readPolygonGeometry,\n  'MultiPoint': readMultiPointGeometry,\n  'MultiLineString': readMultiLineStringGeometry,\n  'MultiPolygon': readMultiPolygonGeometry\n};\n\n\n/**\n * Concatenate arcs into a coordinate array.\n * @param {Array<number>} indices Indices of arcs to concatenate.  Negative\n *     values indicate arcs need to be reversed.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs (already\n *     transformed).\n * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates array.\n */\nfunction concatenateArcs(indices, arcs) {\n  /** @type {Array<import(\"../coordinate.js\").Coordinate>} */\n  var coordinates = [];\n  var index, arc;\n  for (var i = 0, ii = indices.length; i < ii; ++i) {\n    index = indices[i];\n    if (i > 0) {\n      // splicing together arcs, discard last point\n      coordinates.pop();\n    }\n    if (index >= 0) {\n      // forward arc\n      arc = arcs[index];\n    } else {\n      // reverse arc\n      arc = arcs[~index].slice().reverse();\n    }\n    coordinates.push.apply(coordinates, arc);\n  }\n  // provide fresh copies of coordinate arrays\n  for (var j = 0, jj = coordinates.length; j < jj; ++j) {\n    coordinates[j] = coordinates[j].slice();\n  }\n  return coordinates;\n}\n\n\n/**\n * Create a point from a TopoJSON geometry object.\n *\n * @param {TopoJSONPoint} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {Point} Geometry.\n */\nfunction readPointGeometry(object, scale, translate) {\n  var coordinates = object['coordinates'];\n  if (scale && translate) {\n    transformVertex(coordinates, scale, translate);\n  }\n  return new Point(coordinates);\n}\n\n\n/**\n * Create a multi-point from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiPoint} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {MultiPoint} Geometry.\n */\nfunction readMultiPointGeometry(object, scale, translate) {\n  var coordinates = object['coordinates'];\n  if (scale && translate) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n      transformVertex(coordinates[i], scale, translate);\n    }\n  }\n  return new MultiPoint(coordinates);\n}\n\n\n/**\n * Create a linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONLineString} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {LineString} Geometry.\n */\nfunction readLineStringGeometry(object, arcs) {\n  var coordinates = concatenateArcs(object['arcs'], arcs);\n  return new LineString(coordinates);\n}\n\n\n/**\n * Create a multi-linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiLineString} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {MultiLineString} Geometry.\n */\nfunction readMultiLineStringGeometry(object, arcs) {\n  var coordinates = [];\n  for (var i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    coordinates[i] = concatenateArcs(object['arcs'][i], arcs);\n  }\n  return new MultiLineString(coordinates);\n}\n\n\n/**\n * Create a polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONPolygon} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {Polygon} Geometry.\n */\nfunction readPolygonGeometry(object, arcs) {\n  var coordinates = [];\n  for (var i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    coordinates[i] = concatenateArcs(object['arcs'][i], arcs);\n  }\n  return new Polygon(coordinates);\n}\n\n\n/**\n * Create a multi-polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONMultiPolygon} object TopoJSON object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @return {MultiPolygon} Geometry.\n */\nfunction readMultiPolygonGeometry(object, arcs) {\n  var coordinates = [];\n  for (var i = 0, ii = object['arcs'].length; i < ii; ++i) {\n    // for each polygon\n    var polyArray = object['arcs'][i];\n    var ringCoords = [];\n    for (var j = 0, jj = polyArray.length; j < jj; ++j) {\n      // for each ring\n      ringCoords[j] = concatenateArcs(polyArray[j], arcs);\n    }\n    coordinates[i] = ringCoords;\n  }\n  return new MultiPolygon(coordinates);\n}\n\n\n/**\n * Create features from a TopoJSON GeometryCollection object.\n *\n * @param {TopoJSONGeometryCollection} collection TopoJSON Geometry\n *     object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {Array<Feature>} Array of features.\n */\nfunction readFeaturesFromGeometryCollection(collection, arcs, scale, translate, property, name, opt_options) {\n  var geometries = collection['geometries'];\n  var features = [];\n  for (var i = 0, ii = geometries.length; i < ii; ++i) {\n    features[i] = readFeatureFromGeometry(\n      geometries[i], arcs, scale, translate, property, name, opt_options);\n  }\n  return features;\n}\n\n\n/**\n * Create a feature from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON geometry object.\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {import(\"./Feature.js\").ReadOptions=} opt_options Read options.\n * @return {Feature} Feature.\n */\nfunction readFeatureFromGeometry(object, arcs, scale, translate, property, name, opt_options) {\n  var geometry;\n  var type = object.type;\n  var geometryReader = GEOMETRY_READERS[type];\n  if ((type === 'Point') || (type === 'MultiPoint')) {\n    geometry = geometryReader(object, scale, translate);\n  } else {\n    geometry = geometryReader(object, arcs);\n  }\n  var feature = new Feature();\n  feature.setGeometry(transformGeometryWithOptions(geometry, false, opt_options));\n  if (object.id !== undefined) {\n    feature.setId(object.id);\n  }\n  var properties = object.properties;\n  if (property) {\n    if (!properties) {\n      properties = {};\n    }\n    properties[property] = name;\n  }\n  if (properties) {\n    feature.setProperties(properties, true);\n  }\n  return feature;\n}\n\n\n/**\n * Apply a linear transform to array of arcs.  The provided array of arcs is\n * modified in place.\n *\n * @param {Array<Array<import(\"../coordinate.js\").Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformArcs(arcs, scale, translate) {\n  for (var i = 0, ii = arcs.length; i < ii; ++i) {\n    transformArc(arcs[i], scale, translate);\n  }\n}\n\n\n/**\n * Apply a linear transform to an arc.  The provided arc is modified in place.\n *\n * @param {Array<import(\"../coordinate.js\").Coordinate>} arc Arc.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformArc(arc, scale, translate) {\n  var x = 0;\n  var y = 0;\n  for (var i = 0, ii = arc.length; i < ii; ++i) {\n    var vertex = arc[i];\n    x += vertex[0];\n    y += vertex[1];\n    vertex[0] = x;\n    vertex[1] = y;\n    transformVertex(vertex, scale, translate);\n  }\n}\n\n\n/**\n * Apply a linear transform to a vertex.  The provided vertex is modified in\n * place.\n *\n * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformVertex(vertex, scale, translate) {\n  vertex[0] = vertex[0] * scale[0] + translate[0];\n  vertex[1] = vertex[1] * scale[1] + translate[1];\n}\n\n\nexport default TopoJSON;\n\n//# sourceMappingURL=TopoJSON.js.map","/**\n * @module ol/format/filter/Filter\n */\n\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @abstract\n */\nvar Filter = function Filter(tagName) {\n\n  /**\n   * @private\n   * @type {!string}\n   */\n  this.tagName_ = tagName;\n};\n\n/**\n * The XML tag name for a filter.\n * @returns {!string} Name.\n */\nFilter.prototype.getTagName = function getTagName () {\n  return this.tagName_;\n};\n\nexport default Filter;\n\n//# sourceMappingURL=Filter.js.map","/**\n * @module ol/format/filter/LogicalNary\n */\nimport {assert} from '../../asserts.js';\nimport Filter from './Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @abstract\n */\nvar LogicalNary = /*@__PURE__*/(function (Filter) {\n  function LogicalNary(tagName, conditions) {\n\n    Filter.call(this, tagName);\n\n    /**\n     * @type {Array<import(\"./Filter.js\").default>}\n     */\n    this.conditions = conditions;\n    assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n  }\n\n  if ( Filter ) LogicalNary.__proto__ = Filter;\n  LogicalNary.prototype = Object.create( Filter && Filter.prototype );\n  LogicalNary.prototype.constructor = LogicalNary;\n\n  return LogicalNary;\n}(Filter));\n\nexport default LogicalNary;\n\n//# sourceMappingURL=LogicalNary.js.map","/**\n * @module ol/format/filter/And\n */\nimport LogicalNary from './LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @abstract\n */\nvar And = /*@__PURE__*/(function (LogicalNary) {\n  function And(conditions) {\n    LogicalNary.call(this, 'And', Array.prototype.slice.call(arguments));\n  }\n\n  if ( LogicalNary ) And.__proto__ = LogicalNary;\n  And.prototype = Object.create( LogicalNary && LogicalNary.prototype );\n  And.prototype.constructor = And;\n\n  return And;\n}(LogicalNary));\n\nexport default And;\n\n//# sourceMappingURL=And.js.map","/**\n * @module ol/format/filter/Bbox\n */\nimport Filter from './Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @api\n */\nvar Bbox = /*@__PURE__*/(function (Filter) {\n  function Bbox(geometryName, extent, opt_srsName) {\n\n    Filter.call(this, 'BBOX');\n\n    /**\n     * @type {!string}\n     */\n    this.geometryName = geometryName;\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @type {string|undefined}\n     */\n    this.srsName = opt_srsName;\n  }\n\n  if ( Filter ) Bbox.__proto__ = Filter;\n  Bbox.prototype = Object.create( Filter && Filter.prototype );\n  Bbox.prototype.constructor = Bbox;\n\n  return Bbox;\n}(Filter));\n\nexport default Bbox;\n\n//# sourceMappingURL=Bbox.js.map","/**\n * @module ol/format/filter/Spatial\n */\nimport Filter from './Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @abstract\n */\nvar Spatial = /*@__PURE__*/(function (Filter) {\n  function Spatial(tagName, geometryName, geometry, opt_srsName) {\n\n    Filter.call(this, tagName);\n\n    /**\n     * @type {!string}\n     */\n    this.geometryName = geometryName || 'the_geom';\n\n    /**\n     * @type {import(\"../../geom/Geometry.js\").default}\n     */\n    this.geometry = geometry;\n\n    /**\n     * @type {string|undefined}\n     */\n    this.srsName = opt_srsName;\n  }\n\n  if ( Filter ) Spatial.__proto__ = Filter;\n  Spatial.prototype = Object.create( Filter && Filter.prototype );\n  Spatial.prototype.constructor = Spatial;\n\n  return Spatial;\n}(Filter));\n\nexport default Spatial;\n\n//# sourceMappingURL=Spatial.js.map","/**\n * @module ol/format/filter/Contains\n */\nimport Spatial from './Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n * @api\n */\nvar Contains = /*@__PURE__*/(function (Spatial) {\n  function Contains(geometryName, geometry, opt_srsName) {\n\n    Spatial.call(this, 'Contains', geometryName, geometry, opt_srsName);\n\n  }\n\n  if ( Spatial ) Contains.__proto__ = Spatial;\n  Contains.prototype = Object.create( Spatial && Spatial.prototype );\n  Contains.prototype.constructor = Contains;\n\n  return Contains;\n}(Spatial));\n\nexport default Contains;\n\n//# sourceMappingURL=Contains.js.map","/**\n * @module ol/format/filter/Comparison\n */\nimport Filter from './Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @abstract\n */\nvar Comparison = /*@__PURE__*/(function (Filter) {\n  function Comparison(tagName, propertyName) {\n\n    Filter.call(this, tagName);\n\n    /**\n     * @type {!string}\n     */\n    this.propertyName = propertyName;\n  }\n\n  if ( Filter ) Comparison.__proto__ = Filter;\n  Comparison.prototype = Object.create( Filter && Filter.prototype );\n  Comparison.prototype.constructor = Comparison;\n\n  return Comparison;\n}(Filter));\n\nexport default Comparison;\n\n//# sourceMappingURL=Comparison.js.map","/**\n * @module ol/format/filter/During\n */\nimport Comparison from './Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n * @api\n */\nvar During = /*@__PURE__*/(function (Comparison) {\n  function During(propertyName, begin, end) {\n    Comparison.call(this, 'During', propertyName);\n\n    /**\n     * @type {!string}\n     */\n    this.begin = begin;\n\n    /**\n     * @type {!string}\n     */\n    this.end = end;\n  }\n\n  if ( Comparison ) During.__proto__ = Comparison;\n  During.prototype = Object.create( Comparison && Comparison.prototype );\n  During.prototype.constructor = During;\n\n  return During;\n}(Comparison));\n\nexport default During;\n\n//# sourceMappingURL=During.js.map","/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport Comparison from './Comparison.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @abstract\n */\nvar ComparisonBinary = /*@__PURE__*/(function (Comparison) {\n  function ComparisonBinary(tagName, propertyName, expression, opt_matchCase) {\n\n    Comparison.call(this, tagName, propertyName);\n\n    /**\n     * @type {!(string|number)}\n     */\n    this.expression = expression;\n\n    /**\n     * @type {boolean|undefined}\n     */\n    this.matchCase = opt_matchCase;\n  }\n\n  if ( Comparison ) ComparisonBinary.__proto__ = Comparison;\n  ComparisonBinary.prototype = Object.create( Comparison && Comparison.prototype );\n  ComparisonBinary.prototype.constructor = ComparisonBinary;\n\n  return ComparisonBinary;\n}(Comparison));\n\nexport default ComparisonBinary;\n\n//# sourceMappingURL=ComparisonBinary.js.map","/**\n * @module ol/format/filter/EqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n * @api\n */\nvar EqualTo = /*@__PURE__*/(function (ComparisonBinary) {\n  function EqualTo(propertyName, expression, opt_matchCase) {\n    ComparisonBinary.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase);\n  }\n\n  if ( ComparisonBinary ) EqualTo.__proto__ = ComparisonBinary;\n  EqualTo.prototype = Object.create( ComparisonBinary && ComparisonBinary.prototype );\n  EqualTo.prototype.constructor = EqualTo;\n\n  return EqualTo;\n}(ComparisonBinary));\n\nexport default EqualTo;\n\n//# sourceMappingURL=EqualTo.js.map","/**\n * @module ol/format/filter/GreaterThan\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n * @api\n */\nvar GreaterThan = /*@__PURE__*/(function (ComparisonBinary) {\n  function GreaterThan(propertyName, expression) {\n    ComparisonBinary.call(this, 'PropertyIsGreaterThan', propertyName, expression);\n  }\n\n  if ( ComparisonBinary ) GreaterThan.__proto__ = ComparisonBinary;\n  GreaterThan.prototype = Object.create( ComparisonBinary && ComparisonBinary.prototype );\n  GreaterThan.prototype.constructor = GreaterThan;\n\n  return GreaterThan;\n}(ComparisonBinary));\n\nexport default GreaterThan;\n\n//# sourceMappingURL=GreaterThan.js.map","/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n * @api\n */\nvar GreaterThanOrEqualTo = /*@__PURE__*/(function (ComparisonBinary) {\n  function GreaterThanOrEqualTo(propertyName, expression) {\n    ComparisonBinary.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression);\n  }\n\n  if ( ComparisonBinary ) GreaterThanOrEqualTo.__proto__ = ComparisonBinary;\n  GreaterThanOrEqualTo.prototype = Object.create( ComparisonBinary && ComparisonBinary.prototype );\n  GreaterThanOrEqualTo.prototype.constructor = GreaterThanOrEqualTo;\n\n  return GreaterThanOrEqualTo;\n}(ComparisonBinary));\n\nexport default GreaterThanOrEqualTo;\n\n//# sourceMappingURL=GreaterThanOrEqualTo.js.map","/**\n * @module ol/format/filter/Intersects\n */\nimport Spatial from './Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n * @api\n */\nvar Intersects = /*@__PURE__*/(function (Spatial) {\n  function Intersects(geometryName, geometry, opt_srsName) {\n    Spatial.call(this, 'Intersects', geometryName, geometry, opt_srsName);\n  }\n\n  if ( Spatial ) Intersects.__proto__ = Spatial;\n  Intersects.prototype = Object.create( Spatial && Spatial.prototype );\n  Intersects.prototype.constructor = Intersects;\n\n  return Intersects;\n}(Spatial));\n\nexport default Intersects;\n\n//# sourceMappingURL=Intersects.js.map","/**\n * @module ol/format/filter/IsBetween\n */\nimport Comparison from './Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n * @api\n */\nvar IsBetween = /*@__PURE__*/(function (Comparison) {\n  function IsBetween(propertyName, lowerBoundary, upperBoundary) {\n    Comparison.call(this, 'PropertyIsBetween', propertyName);\n\n    /**\n     * @type {!number}\n     */\n    this.lowerBoundary = lowerBoundary;\n\n    /**\n     * @type {!number}\n     */\n    this.upperBoundary = upperBoundary;\n\n  }\n\n  if ( Comparison ) IsBetween.__proto__ = Comparison;\n  IsBetween.prototype = Object.create( Comparison && Comparison.prototype );\n  IsBetween.prototype.constructor = IsBetween;\n\n  return IsBetween;\n}(Comparison));\n\nexport default IsBetween;\n\n//# sourceMappingURL=IsBetween.js.map","/**\n * @module ol/format/filter/IsLike\n */\nimport Comparison from './Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n * @api\n */\nvar IsLike = /*@__PURE__*/(function (Comparison) {\n  function IsLike(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n    Comparison.call(this, 'PropertyIsLike', propertyName);\n\n    /**\n     * @type {!string}\n     */\n    this.pattern = pattern;\n\n    /**\n     * @type {!string}\n     */\n    this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\n\n    /**\n     * @type {!string}\n     */\n    this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\n\n    /**\n     * @type {!string}\n     */\n    this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\n\n    /**\n     * @type {boolean|undefined}\n     */\n    this.matchCase = opt_matchCase;\n\n  }\n\n  if ( Comparison ) IsLike.__proto__ = Comparison;\n  IsLike.prototype = Object.create( Comparison && Comparison.prototype );\n  IsLike.prototype.constructor = IsLike;\n\n  return IsLike;\n}(Comparison));\n\nexport default IsLike;\n\n//# sourceMappingURL=IsLike.js.map","/**\n * @module ol/format/filter/IsNull\n */\nimport Comparison from './Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n * @api\n */\nvar IsNull = /*@__PURE__*/(function (Comparison) {\n  function IsNull(propertyName) {\n    Comparison.call(this, 'PropertyIsNull', propertyName);\n  }\n\n  if ( Comparison ) IsNull.__proto__ = Comparison;\n  IsNull.prototype = Object.create( Comparison && Comparison.prototype );\n  IsNull.prototype.constructor = IsNull;\n\n  return IsNull;\n}(Comparison));\n\nexport default IsNull;\n\n//# sourceMappingURL=IsNull.js.map","/**\n * @module ol/format/filter/LessThan\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n * @api\n */\nvar LessThan = /*@__PURE__*/(function (ComparisonBinary) {\n  function LessThan(propertyName, expression) {\n    ComparisonBinary.call(this, 'PropertyIsLessThan', propertyName, expression);\n  }\n\n  if ( ComparisonBinary ) LessThan.__proto__ = ComparisonBinary;\n  LessThan.prototype = Object.create( ComparisonBinary && ComparisonBinary.prototype );\n  LessThan.prototype.constructor = LessThan;\n\n  return LessThan;\n}(ComparisonBinary));\n\nexport default LessThan;\n\n//# sourceMappingURL=LessThan.js.map","/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n * @api\n */\nvar LessThanOrEqualTo = /*@__PURE__*/(function (ComparisonBinary) {\n  function LessThanOrEqualTo(propertyName, expression) {\n    ComparisonBinary.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression);\n  }\n\n  if ( ComparisonBinary ) LessThanOrEqualTo.__proto__ = ComparisonBinary;\n  LessThanOrEqualTo.prototype = Object.create( ComparisonBinary && ComparisonBinary.prototype );\n  LessThanOrEqualTo.prototype.constructor = LessThanOrEqualTo;\n\n  return LessThanOrEqualTo;\n}(ComparisonBinary));\n\nexport default LessThanOrEqualTo;\n\n//# sourceMappingURL=LessThanOrEqualTo.js.map","/**\n * @module ol/format/filter/Not\n */\nimport Filter from './Filter.js';\n\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n * @api\n */\nvar Not = /*@__PURE__*/(function (Filter) {\n  function Not(condition) {\n\n    Filter.call(this, 'Not');\n\n    /**\n     * @type {!import(\"./Filter.js\").default}\n     */\n    this.condition = condition;\n\n  }\n\n  if ( Filter ) Not.__proto__ = Filter;\n  Not.prototype = Object.create( Filter && Filter.prototype );\n  Not.prototype.constructor = Not;\n\n  return Not;\n}(Filter));\n\nexport default Not;\n\n//# sourceMappingURL=Not.js.map","/**\n * @module ol/format/filter/NotEqualTo\n */\nimport ComparisonBinary from './ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n * @api\n */\nvar NotEqualTo = /*@__PURE__*/(function (ComparisonBinary) {\n  function NotEqualTo(propertyName, expression, opt_matchCase) {\n    ComparisonBinary.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase);\n  }\n\n  if ( ComparisonBinary ) NotEqualTo.__proto__ = ComparisonBinary;\n  NotEqualTo.prototype = Object.create( ComparisonBinary && ComparisonBinary.prototype );\n  NotEqualTo.prototype.constructor = NotEqualTo;\n\n  return NotEqualTo;\n}(ComparisonBinary));\n\nexport default NotEqualTo;\n\n//# sourceMappingURL=NotEqualTo.js.map","/**\n * @module ol/format/filter/Or\n */\nimport LogicalNary from './LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n * @api\n */\nvar Or = /*@__PURE__*/(function (LogicalNary) {\n  function Or(conditions) {\n    LogicalNary.call(this, 'Or', Array.prototype.slice.call(arguments));\n  }\n\n  if ( LogicalNary ) Or.__proto__ = LogicalNary;\n  Or.prototype = Object.create( LogicalNary && LogicalNary.prototype );\n  Or.prototype.constructor = Or;\n\n  return Or;\n}(LogicalNary));\n\nexport default Or;\n\n//# sourceMappingURL=Or.js.map","/**\n * @module ol/format/filter/Within\n */\nimport Spatial from './Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n * @api\n */\nvar Within = /*@__PURE__*/(function (Spatial) {\n  function Within(geometryName, geometry, opt_srsName) {\n    Spatial.call(this, 'Within', geometryName, geometry, opt_srsName);\n  }\n\n  if ( Spatial ) Within.__proto__ = Spatial;\n  Within.prototype = Object.create( Spatial && Spatial.prototype );\n  Within.prototype.constructor = Within;\n\n  return Within;\n}(Spatial));\n\nexport default Within;\n\n//# sourceMappingURL=Within.js.map","/**\n * @module ol/format/filter\n */\nimport And from './filter/And.js';\nimport Bbox from './filter/Bbox.js';\nimport Contains from './filter/Contains.js';\nimport During from './filter/During.js';\nimport EqualTo from './filter/EqualTo.js';\nimport GreaterThan from './filter/GreaterThan.js';\nimport GreaterThanOrEqualTo from './filter/GreaterThanOrEqualTo.js';\nimport Intersects from './filter/Intersects.js';\nimport IsBetween from './filter/IsBetween.js';\nimport IsLike from './filter/IsLike.js';\nimport IsNull from './filter/IsNull.js';\nimport LessThan from './filter/LessThan.js';\nimport LessThanOrEqualTo from './filter/LessThanOrEqualTo.js';\nimport Not from './filter/Not.js';\nimport NotEqualTo from './filter/NotEqualTo.js';\nimport Or from './filter/Or.js';\nimport Within from './filter/Within.js';\n\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...import(\"./filter/Filter.js\").default} conditions Filter conditions.\n * @returns {!And} `<And>` operator.\n * @api\n */\nexport function and(conditions) {\n  var params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(And, params));\n}\n\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...import(\"./filter/Filter.js\").default} conditions Filter conditions.\n * @returns {!Or} `<Or>` operator.\n * @api\n */\nexport function or(conditions) {\n  var params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(Or, params));\n}\n\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!import(\"./filter/Filter.js\").default} condition Filter condition.\n * @returns {!Not} `<Not>` operator.\n * @api\n */\nexport function not(condition) {\n  return new Not(condition);\n}\n\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../extent.js\").Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!Bbox} `<BBOX>` operator.\n * @api\n */\nexport function bbox(geometryName, extent, opt_srsName) {\n  return new Bbox(geometryName, extent, opt_srsName);\n}\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!Contains} `<Contains>` operator.\n * @api\n */\nexport function contains(geometryName, geometry, opt_srsName) {\n  return new Contains(geometryName, geometry, opt_srsName);\n}\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!Intersects} `<Intersects>` operator.\n * @api\n */\nexport function intersects(geometryName, geometry, opt_srsName) {\n  return new Intersects(geometryName, geometry, opt_srsName);\n}\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!Within} `<Within>` operator.\n * @api\n */\nexport function within(geometryName, geometry, opt_srsName) {\n  return new Within(geometryName, geometry, opt_srsName);\n}\n\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\nexport function equalTo(propertyName, expression, opt_matchCase) {\n  return new EqualTo(propertyName, expression, opt_matchCase);\n}\n\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\nexport function notEqualTo(propertyName, expression, opt_matchCase) {\n  return new NotEqualTo(propertyName, expression, opt_matchCase);\n}\n\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\nexport function lessThan(propertyName, expression) {\n  return new LessThan(propertyName, expression);\n}\n\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\nexport function lessThanOrEqualTo(propertyName, expression) {\n  return new LessThanOrEqualTo(propertyName, expression);\n}\n\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\nexport function greaterThan(propertyName, expression) {\n  return new GreaterThan(propertyName, expression);\n}\n\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\nexport function greaterThanOrEqualTo(propertyName, expression) {\n  return new GreaterThanOrEqualTo(propertyName, expression);\n}\n\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @returns {!IsNull} `<PropertyIsNull>` operator.\n * @api\n */\nexport function isNull(propertyName) {\n  return new IsNull(propertyName);\n}\n\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @returns {!IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\nexport function between(propertyName, lowerBoundary, upperBoundary) {\n  return new IsBetween(propertyName, lowerBoundary, upperBoundary);\n}\n\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!IsLike} `<PropertyIsLike>` operator.\n * @api\n */\nexport function like(propertyName, pattern,\n  opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  return new IsLike(propertyName, pattern,\n    opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\n}\n\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @returns {!During} `<During>` operator.\n * @api\n */\nexport function during(propertyName, begin, end) {\n  return new During(propertyName, begin, end);\n}\n\n//# sourceMappingURL=filter.js.map","/**\n * @module ol/format/WFS\n */\nimport {assert} from '../asserts.js';\nimport GML2 from './GML2.js';\nimport GML3 from './GML3.js';\nimport GMLBase, {GMLNS} from './GMLBase.js';\nimport {and as andFilter, bbox as bboxFilter} from './filter.js';\nimport XMLFeature from './XMLFeature.js';\nimport {readNonNegativeIntegerString, readNonNegativeInteger, writeStringTextNode} from './xsd.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport {createElementNS, isDocument, makeArrayPusher, makeChildAppender,\n  makeObjectPropertySetter, makeSimpleNodeFactory, parse, parseNode,\n  pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI} from '../xml.js';\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar FEATURE_COLLECTION_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': makeObjectPropertySetter(\n      GMLBase.prototype.readGeometryElement, 'bounds')\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TRANSACTION_SUMMARY_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': makeObjectPropertySetter(readNonNegativeInteger),\n    'totalUpdated': makeObjectPropertySetter(readNonNegativeInteger),\n    'totalDeleted': makeObjectPropertySetter(readNonNegativeInteger)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TRANSACTION_RESPONSE_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': makeObjectPropertySetter(\n      readTransactionSummary, 'transactionSummary'),\n    'InsertResults': makeObjectPropertySetter(\n      readInsertResults, 'insertIds')\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar QUERY_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': makeChildAppender(writeStringTextNode)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar TRANSACTION_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Insert': makeChildAppender(writeFeature),\n    'Update': makeChildAppender(writeUpdate),\n    'Delete': makeChildAppender(writeDelete),\n    'Property': makeChildAppender(writeProperty),\n    'Native': makeChildAppender(writeNative)\n  }\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] The namespace URI used for features.\n * @property {Array<string>|string} [featureType] The feature type to parse. Only used for read operations.\n * @property {GMLBase} [gmlFormat] The GML format to use to parse the response. Default is `ol/format/GML3`.\n * @property {string} [schemaLocation] Optional schemaLocation to use for serialization, this will override the default.\n */\n\n\n/**\n * @typedef {Object} WriteGetFeatureOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {Array<string>} featureTypes The feature type names.\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {string} [outputFormat] Output format.\n * @property {number} [maxFeatures] Maximum number of features to fetch.\n * @property {string} [geometryName] Geometry name to use in a BBOX filter.\n * @property {Array<string>} [propertyNames] Optional list of property names to serialize.\n * @property {string} [viewParams] viewParams GeoServer vendor parameter.\n * @property {number} [startIndex] Start index to use for WFS paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services.\n * @property {number} [count] Number of features to retrieve when paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services. Please note that some\n * Web Feature Services have repurposed `maxfeatures` instead.\n * @property {import(\"../extent.js\").Extent} [bbox] Extent to use for the BBOX filter.\n * @property {import(\"./filter/Filter.js\").default} [filter] Filter condition. See\n * {@link module:ol/format/Filter} for more information.\n * @property {string} [resultType] Indicates what response should be returned,\n * E.g. `hits` only includes the `numberOfFeatures` attribute in the response and no features.\n */\n\n\n/**\n * @typedef {Object} WriteTransactionOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {string} featureType The feature type name.\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {boolean} [hasZ] Must be set to true if the transaction is for\n * a 3D layer. This will allow the Z coordinate to be included in the transaction.\n * @property {Array<Object>} nativeElements Native elements. Currently not supported.\n * @property {import(\"./GMLBase.js\").Options} [gmlOptions] GML options for the WFS transaction writer.\n * @property {string} [version='1.1.0'] WFS version to use for the transaction. Can be either `1.0.0` or `1.1.0`.\n */\n\n\n/**\n * Number of features; bounds/extent.\n * @typedef {Object} FeatureCollectionMetadata\n * @property {number} numberOfFeatures\n * @property {import(\"../extent.js\").Extent} bounds\n */\n\n\n/**\n * Total deleted; total inserted; total updated; array of insert ids.\n * @typedef {Object} TransactionResponse\n * @property {number} totalDeleted\n * @property {number} totalInserted\n * @property {number} totalUpdated\n * @property {Array<string>} insertIds\n */\n\n\n/**\n * @type {string}\n */\nvar FEATURE_PREFIX = 'feature';\n\n\n/**\n * @type {string}\n */\nvar XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n\n/**\n * @type {string}\n */\nvar OGCNS = 'http://www.opengis.net/ogc';\n\n\n/**\n * @type {string}\n */\nvar WFSNS = 'http://www.opengis.net/wfs';\n\n\n/**\n * @type {string}\n */\nvar FESNS = 'http://www.opengis.net/fes';\n\n\n/**\n * @type {Object<string, string>}\n */\nvar SCHEMA_LOCATIONS = {\n  '1.1.0': 'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0': 'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n\n\n/**\n * @const\n * @type {string}\n */\nvar DEFAULT_VERSION = '1.1.0';\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\n * Also see {@link module:ol/format/GMLBase~GMLBase} which is used by this format.\n *\n * @api\n */\nvar WFS = /*@__PURE__*/(function (XMLFeature) {\n  function WFS(opt_options) {\n    XMLFeature.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {Array<string>|string|undefined}\n     */\n    this.featureType_ = options.featureType;\n\n    /**\n     * @private\n     * @type {Object<string, string>|string|undefined}\n     */\n    this.featureNS_ = options.featureNS;\n\n    /**\n     * @private\n     * @type {GMLBase}\n     */\n    this.gmlFormat_ = options.gmlFormat ?\n      options.gmlFormat : new GML3();\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.schemaLocation_ = options.schemaLocation ?\n      options.schemaLocation : SCHEMA_LOCATIONS[DEFAULT_VERSION];\n  }\n\n  if ( XMLFeature ) WFS.__proto__ = XMLFeature;\n  WFS.prototype = Object.create( XMLFeature && XMLFeature.prototype );\n  WFS.prototype.constructor = WFS;\n\n  /**\n   * @return {Array<string>|string|undefined} featureType\n   */\n  WFS.prototype.getFeatureType = function getFeatureType () {\n    return this.featureType_;\n  };\n\n  /**\n   * @param {Array<string>|string|undefined} featureType Feature type(s) to parse.\n   */\n  WFS.prototype.setFeatureType = function setFeatureType (featureType) {\n    this.featureType_ = featureType;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WFS.prototype.readFeaturesFromNode = function readFeaturesFromNode (node, opt_options) {\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var context = {\n      node: node\n    };\n    assign(context, {\n      'featureType': this.featureType_,\n      'featureNS': this.featureNS_\n    });\n\n    assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n    var objectStack = [context];\n    this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLNS][\n      'featureMember'] =\n        makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n    var features = pushParseAndPop([],\n      this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n      objectStack, this.gmlFormat_);\n    if (!features) {\n      features = [];\n    }\n    return features;\n  };\n\n  /**\n   * Read transaction response of the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {TransactionResponse|undefined} Transaction response.\n   * @api\n   */\n  WFS.prototype.readTransactionResponse = function readTransactionResponse (source) {\n    if (!source) {\n      return undefined;\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readTransactionResponseFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readTransactionResponseFromDocument(\n        /** @type {Document} */ (source));\n    } else {\n      return this.readTransactionResponseFromNode(/** @type {Element} */ (source));\n    }\n  };\n\n  /**\n   * Read feature collection metadata of the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   * @api\n   */\n  WFS.prototype.readFeatureCollectionMetadata = function readFeatureCollectionMetadata (source) {\n    if (!source) {\n      return undefined;\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readFeatureCollectionMetadataFromDocument(doc);\n    } else if (isDocument(source)) {\n      return this.readFeatureCollectionMetadataFromDocument(\n        /** @type {Document} */ (source));\n    } else {\n      return this.readFeatureCollectionMetadataFromNode(\n        /** @type {Element} */ (source));\n    }\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n  WFS.prototype.readFeatureCollectionMetadataFromDocument = function readFeatureCollectionMetadataFromDocument (doc) {\n    for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFeatureCollectionMetadataFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @return {FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n  WFS.prototype.readFeatureCollectionMetadataFromNode = function readFeatureCollectionMetadataFromNode (node) {\n    var result = {};\n    var value = readNonNegativeIntegerString(\n      node.getAttribute('numberOfFeatures'));\n    result['numberOfFeatures'] = value;\n    return pushParseAndPop(\n      /** @type {FeatureCollectionMetadata} */ (result),\n      FEATURE_COLLECTION_PARSERS, node, [], this.gmlFormat_);\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @return {TransactionResponse|undefined} Transaction response.\n   */\n  WFS.prototype.readTransactionResponseFromDocument = function readTransactionResponseFromDocument (doc) {\n    for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readTransactionResponseFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @return {TransactionResponse|undefined} Transaction response.\n   */\n  WFS.prototype.readTransactionResponseFromNode = function readTransactionResponseFromNode (node) {\n    return pushParseAndPop(\n      /** @type {TransactionResponse} */({}),\n      TRANSACTION_RESPONSE_PARSERS, node, []);\n  };\n\n  /**\n   * Encode format as WFS `GetFeature` and return the Node.\n   *\n   * @param {WriteGetFeatureOptions} options Options.\n   * @return {Node} Result.\n   * @api\n   */\n  WFS.prototype.writeGetFeature = function writeGetFeature$1 (options) {\n    var node = createElementNS(WFSNS, 'GetFeature');\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', '1.1.0');\n    var filter;\n    if (options) {\n      if (options.handle) {\n        node.setAttribute('handle', options.handle);\n      }\n      if (options.outputFormat) {\n        node.setAttribute('outputFormat', options.outputFormat);\n      }\n      if (options.maxFeatures !== undefined) {\n        node.setAttribute('maxFeatures', String(options.maxFeatures));\n      }\n      if (options.resultType) {\n        node.setAttribute('resultType', options.resultType);\n      }\n      if (options.startIndex !== undefined) {\n        node.setAttribute('startIndex', String(options.startIndex));\n      }\n      if (options.count !== undefined) {\n        node.setAttribute('count', String(options.count));\n      }\n      if (options.viewParams !== undefined) {\n        node.setAttribute('viewParams ', options.viewParams);\n      }\n      filter = options.filter;\n      if (options.bbox) {\n        assert(options.geometryName,\n          12); // `options.geometryName` must also be provided when `options.bbox` is set\n        var bbox = bboxFilter(\n          /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\n        if (filter) {\n          // if bbox and filter are both set, combine the two into a single filter\n          filter = andFilter(filter, bbox);\n        } else {\n          filter = bbox;\n        }\n      }\n    }\n    node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', this.schemaLocation_);\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var context = {\n      node: node\n    };\n    assign(context, {\n      'srsName': options.srsName,\n      'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n      'featurePrefix': options.featurePrefix,\n      'geometryName': options.geometryName,\n      'filter': filter,\n      'propertyNames': options.propertyNames ? options.propertyNames : []\n    });\n\n    assert(Array.isArray(options.featureTypes),\n      11); // `options.featureTypes` should be an Array\n    writeGetFeature(node, /** @type {!Array<string>} */ (options.featureTypes), [context]);\n    return node;\n  };\n\n  /**\n   * Encode format as WFS `Transaction` and return the Node.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} inserts The features to insert.\n   * @param {Array<import(\"../Feature.js\").default>} updates The features to update.\n   * @param {Array<import(\"../Feature.js\").default>} deletes The features to delete.\n   * @param {WriteTransactionOptions} options Write options.\n   * @return {Node} Result.\n   * @api\n   */\n  WFS.prototype.writeTransaction = function writeTransaction (inserts, updates, deletes, options) {\n    var objectStack = [];\n    var node = createElementNS(WFSNS, 'Transaction');\n    var version = options.version ? options.version : DEFAULT_VERSION;\n    var gmlVersion = version === '1.0.0' ? 2 : 3;\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', version);\n    var baseObj;\n    /** @type {import(\"../xml.js\").NodeStackItem} */\n    var obj;\n    if (options) {\n      baseObj = options.gmlOptions ? options.gmlOptions : {};\n      if (options.handle) {\n        node.setAttribute('handle', options.handle);\n      }\n    }\n    var schemaLocation = SCHEMA_LOCATIONS[version];\n    node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', schemaLocation);\n    var featurePrefix = options.featurePrefix ? options.featurePrefix : FEATURE_PREFIX;\n    if (inserts) {\n      obj = assign({node: node}, {'featureNS': options.featureNS,\n        'featureType': options.featureType, 'featurePrefix': featurePrefix,\n        'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName});\n      assign(obj, baseObj);\n      pushSerializeAndPop(obj,\n        TRANSACTION_SERIALIZERS,\n        makeSimpleNodeFactory('Insert'), inserts,\n        objectStack);\n    }\n    if (updates) {\n      obj = assign({node: node}, {'featureNS': options.featureNS,\n        'featureType': options.featureType, 'featurePrefix': featurePrefix,\n        'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName});\n      assign(obj, baseObj);\n      pushSerializeAndPop(obj,\n        TRANSACTION_SERIALIZERS,\n        makeSimpleNodeFactory('Update'), updates,\n        objectStack);\n    }\n    if (deletes) {\n      pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n        'featureType': options.featureType, 'featurePrefix': featurePrefix,\n        'gmlVersion': gmlVersion, 'srsName': options.srsName},\n      TRANSACTION_SERIALIZERS,\n      makeSimpleNodeFactory('Delete'), deletes,\n      objectStack);\n    }\n    if (options.nativeElements) {\n      pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n        'featureType': options.featureType, 'featurePrefix': featurePrefix,\n        'gmlVersion': gmlVersion, 'srsName': options.srsName},\n      TRANSACTION_SERIALIZERS,\n      makeSimpleNodeFactory('Native'), options.nativeElements,\n      objectStack);\n    }\n    return node;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WFS.prototype.readProjectionFromDocument = function readProjectionFromDocument (doc) {\n    for (var n = /** @type {Node} */ (doc.firstChild); n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readProjectionFromNode(n);\n      }\n    }\n    return null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WFS.prototype.readProjectionFromNode = function readProjectionFromNode (node) {\n    if (node.firstElementChild &&\n        node.firstElementChild.firstElementChild) {\n      node = node.firstElementChild.firstElementChild;\n      for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n        if (!(n.childNodes.length === 0 ||\n            (n.childNodes.length === 1 &&\n            n.firstChild.nodeType === 3))) {\n          var objectStack = [{}];\n          this.gmlFormat_.readGeometryElement(n, objectStack);\n          return getProjection(objectStack.pop().srsName);\n        }\n      }\n    }\n\n    return null;\n  };\n\n  return WFS;\n}(XMLFeature));\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n */\nfunction readTransactionSummary(node, objectStack) {\n  return pushParseAndPop(\n    {}, TRANSACTION_SUMMARY_PARSERS, node, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar OGC_FID_PARSERS = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': makeArrayPusher(function(node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  }\n};\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction fidParser(node, objectStack) {\n  parseNode(OGC_FID_PARSERS, node, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar INSERT_RESULTS_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'Feature': fidParser\n  }\n};\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Insert results.\n */\nfunction readInsertResults(node, objectStack) {\n  return pushParseAndPop(\n    [], INSERT_RESULTS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFeature(node, feature, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var featureType = context['featureType'];\n  var featureNS = context['featureNS'];\n  var gmlVersion = context['gmlVersion'];\n  var child = createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeOgcFidFilter(node, fid, objectStack) {\n  var filter = createElementNS(OGCNS, 'Filter');\n  var child = createElementNS(OGCNS, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', /** @type {string} */ (fid));\n  node.appendChild(filter);\n}\n\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @returns {string} The value of the typeName property.\n */\nfunction getTypeName(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix : FEATURE_PREFIX;\n  var prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.indexOf(prefix) === 0) {\n    return featureType;\n  } else {\n    return prefix + featureType;\n  }\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDelete(node, feature, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  var featureType = context['featureType'];\n  var featurePrefix = context['featurePrefix'];\n  var featureNS = context['featureNS'];\n  var typeName = getTypeName(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  var fid = feature.getId();\n  if (fid !== undefined) {\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeUpdate(node, feature, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  var featureType = context['featureType'];\n  var featurePrefix = context['featurePrefix'];\n  var featureNS = context['featureNS'];\n  var typeName = getTypeName(featurePrefix, featureType);\n  var geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  var fid = feature.getId();\n  if (fid !== undefined) {\n    var keys = feature.getKeys();\n    var values = [];\n    for (var i = 0, ii = keys.length; i < ii; i++) {\n      var value = feature.get(keys[i]);\n      if (value !== undefined) {\n        var name = keys[i];\n        if (value && typeof /** @type {?} */ (value).getSimplifiedGeometry === 'function') {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    pushSerializeAndPop(/** @type {import(\"../xml.js\").NodeStackItem} */ (\n      {'gmlVersion': context['gmlVersion'], node: node,\n        'hasZ': context['hasZ'], 'srsName': context['srsName']}),\n    TRANSACTION_SERIALIZERS,\n    makeSimpleNodeFactory('Property'), values,\n    objectStack);\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeProperty(node, pair, objectStack) {\n  var name = createElementNS(WFSNS, 'Name');\n  var context = objectStack[objectStack.length - 1];\n  var gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    var value = createElementNS(WFSNS, 'Value');\n    node.appendChild(value);\n    if (pair.value && typeof /** @type {?} */ (pair.value).getSimplifiedGeometry === 'function') {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      } else {\n        GML3.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      }\n    } else {\n      writeStringTextNode(value, pair.value);\n    }\n  }\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}} nativeElement The native element.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNative(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', String(nativeElement.safeToIgnore));\n  }\n  if (nativeElement.value !== undefined) {\n    writeStringTextNode(node, nativeElement.value);\n  }\n}\n\n\n/**\n * @type {Object<string, Object<string, import(\"../xml.js\").Serializer>>}\n */\nvar GETFEATURE_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Query': makeChildAppender(writeQuery)\n  },\n  'http://www.opengis.net/ogc': {\n    'During': makeChildAppender(writeDuringFilter),\n    'And': makeChildAppender(writeLogicalFilter),\n    'Or': makeChildAppender(writeLogicalFilter),\n    'Not': makeChildAppender(writeNotFilter),\n    'BBOX': makeChildAppender(writeBboxFilter),\n    'Contains': makeChildAppender(writeContainsFilter),\n    'Intersects': makeChildAppender(writeIntersectsFilter),\n    'Within': makeChildAppender(writeWithinFilter),\n    'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n    'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n    'PropertyIsLike': makeChildAppender(writeIsLikeFilter)\n  }\n};\n\n\n/**\n * @param {Element} node Node.\n * @param {string} featureType Feature type.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeQuery(node, featureType, objectStack) {\n  var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var featurePrefix = context['featurePrefix'];\n  var featureNS = context['featureNS'];\n  var propertyNames = context['propertyNames'];\n  var srsName = context['srsName'];\n  var typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = getTypeName(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  node.setAttribute('typeName', typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  }\n  var item = /** @type {import(\"../xml.js\").NodeStackItem} */ (assign({}, context));\n  item.node = node;\n  pushSerializeAndPop(item,\n    QUERY_SERIALIZERS,\n    makeSimpleNodeFactory('PropertyName'), propertyNames,\n    objectStack);\n  var filter = context['filter'];\n  if (filter) {\n    var child = createElementNS(OGCNS, 'Filter');\n    node.appendChild(child);\n    writeFilterCondition(child, filter, objectStack);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFilterCondition(node, filter, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  var item = {node: node};\n  pushSerializeAndPop(item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(filter.getTagName()),\n    [filter], objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Bbox.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeBboxFilter(node, filter, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  writeOgcPropertyName(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Contains.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeContainsFilter(node, filter, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  writeOgcPropertyName(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Intersects.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIntersectsFilter(node, filter, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  writeOgcPropertyName(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Within.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeWithinFilter(node, filter, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  writeOgcPropertyName(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/During.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDuringFilter(node, filter, objectStack) {\n\n  var valueReference = createElementNS(FESNS, 'ValueReference');\n  writeStringTextNode(valueReference, filter.propertyName);\n  node.appendChild(valueReference);\n\n  var timePeriod = createElementNS(GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  var begin = createElementNS(GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  writeTimeInstant(begin, filter.begin);\n\n  var end = createElementNS(GMLNS, 'end');\n  timePeriod.appendChild(end);\n  writeTimeInstant(end, filter.end);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/LogicalNary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLogicalFilter(node, filter, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  var item = {node: node};\n  var conditions = filter.conditions;\n  for (var i = 0, ii = conditions.length; i < ii; ++i) {\n    var condition = conditions[i];\n    pushSerializeAndPop(item,\n      GETFEATURE_SERIALIZERS,\n      makeSimpleNodeFactory(condition.getTagName()),\n      [condition], objectStack);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/Not.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNotFilter(node, filter, objectStack) {\n  /** @type {import(\"../xml.js\").NodeStackItem} */\n  var item = {node: node};\n  var condition = filter.condition;\n  pushSerializeAndPop(item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(condition.getTagName()),\n    [condition], objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/ComparisonBinary.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeComparisonFilter(node, filter, objectStack) {\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writeOgcPropertyName(node, filter.propertyName);\n  writeOgcLiteral(node, '' + filter.expression);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsNull.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsNullFilter(node, filter, objectStack) {\n  writeOgcPropertyName(node, filter.propertyName);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {import(\"./filter/IsBetween.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsBetweenFilter(node, filter, objectStack) {\n  writeOgcPropertyName(node, filter.propertyName);\n\n  var lowerBoundary = createElementNS(OGCNS, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  writeOgcLiteral(lowerBoundary, '' + filter.lowerBoundary);\n\n  var upperBoundary = createElementNS(OGCNS, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  writeOgcLiteral(upperBoundary, '' + filter.upperBoundary);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {import(\"./filter/IsLike.js\").default} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsLikeFilter(node, filter, objectStack) {\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writeOgcPropertyName(node, filter.propertyName);\n  writeOgcLiteral(node, '' + filter.pattern);\n}\n\n\n/**\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n */\nfunction writeOgcExpression(tagName, node, value) {\n  var property = createElementNS(OGCNS, tagName);\n  writeStringTextNode(property, value);\n  node.appendChild(property);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writeOgcPropertyName(node, value) {\n  writeOgcExpression('PropertyName', node, value);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writeOgcLiteral(node, value) {\n  writeOgcExpression('Literal', node, value);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n */\nfunction writeTimeInstant(node, time) {\n  var timeInstant = createElementNS(GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  var timePosition = createElementNS(GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  writeStringTextNode(timePosition, time);\n}\n\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {import(\"./filter/Filter.js\").default} filter Filter.\n * @return {Node} Result.\n * @api\n */\nexport function writeFilter(filter) {\n  var child = createElementNS(OGCNS, 'Filter');\n  writeFilterCondition(child, filter, []);\n  return child;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<string>} featureTypes Feature types.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeGetFeature(node, featureTypes, objectStack) {\n  var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var item = /** @type {import(\"../xml.js\").NodeStackItem} */ (assign({}, context));\n  item.node = node;\n  pushSerializeAndPop(item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory('Query'), featureTypes,\n    objectStack);\n}\n\n\nexport default WFS;\n\n//# sourceMappingURL=WFS.js.map","/**\n * @module ol/format/WKT\n */\nimport Feature from '../Feature.js';\nimport {transformGeometryWithOptions} from './Feature.js';\nimport TextFeature from './TextFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\n\n\n/**\n * Geometry constructors\n * @enum {function (new:import(\"../geom/Geometry.js\").default, Array, GeometryLayout)}\n */\nvar GeometryConstructor = {\n  'POINT': Point,\n  'LINESTRING': LineString,\n  'POLYGON': Polygon,\n  'MULTIPOINT': MultiPoint,\n  'MULTILINESTRING': MultiLineString,\n  'MULTIPOLYGON': MultiPolygon\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [splitCollection=false] Whether to split GeometryCollections into\n * multiple features on reading.\n */\n\n/**\n * @typedef {Object} Token\n * @property {number} type\n * @property {number|string} [value]\n * @property {number} position\n */\n\n/**\n * @const\n * @type {string}\n */\nvar EMPTY = 'EMPTY';\n\n\n/**\n * @const\n * @type {string}\n */\nvar Z = 'Z';\n\n\n/**\n * @const\n * @type {string}\n */\nvar M = 'M';\n\n\n/**\n * @const\n * @type {string}\n */\nvar ZM = 'ZM';\n\n\n/**\n * @const\n * @enum {number}\n */\nvar TokenType = {\n  TEXT: 1,\n  LEFT_PAREN: 2,\n  RIGHT_PAREN: 3,\n  NUMBER: 4,\n  COMMA: 5,\n  EOF: 6\n};\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar WKTGeometryType = {};\nfor (var type in GeometryType) {\n  WKTGeometryType[type] = GeometryType[type].toUpperCase();\n}\n\n\n/**\n * Class to tokenize a WKT string.\n */\nvar Lexer = function Lexer(wkt) {\n\n  /**\n   * @type {string}\n   */\n  this.wkt = wkt;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = -1;\n};\n\n/**\n * @param {string} c Character.\n * @return {boolean} Whether the character is alphabetic.\n * @private\n */\nLexer.prototype.isAlpha_ = function isAlpha_ (c) {\n  return c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z';\n};\n\n/**\n * @param {string} c Character.\n * @param {boolean=} opt_decimal Whether the string number\n *   contains a dot, i.e. is a decimal number.\n * @return {boolean} Whether the character is numeric.\n * @private\n */\nLexer.prototype.isNumeric_ = function isNumeric_ (c, opt_decimal) {\n  var decimal = opt_decimal !== undefined ? opt_decimal : false;\n  return c >= '0' && c <= '9' || c == '.' && !decimal;\n};\n\n/**\n * @param {string} c Character.\n * @return {boolean} Whether the character is whitespace.\n * @private\n */\nLexer.prototype.isWhiteSpace_ = function isWhiteSpace_ (c) {\n  return c == ' ' || c == '\\t' || c == '\\r' || c == '\\n';\n};\n\n/**\n * @return {string} Next string character.\n * @private\n */\nLexer.prototype.nextChar_ = function nextChar_ () {\n  return this.wkt.charAt(++this.index_);\n};\n\n/**\n * Fetch and return the next token.\n * @return {!Token} Next string token.\n */\nLexer.prototype.nextToken = function nextToken () {\n  var c = this.nextChar_();\n  var position = this.index_;\n  /** @type {number|string} */\n  var value = c;\n  var type;\n\n  if (c == '(') {\n    type = TokenType.LEFT_PAREN;\n  } else if (c == ',') {\n    type = TokenType.COMMA;\n  } else if (c == ')') {\n    type = TokenType.RIGHT_PAREN;\n  } else if (this.isNumeric_(c) || c == '-') {\n    type = TokenType.NUMBER;\n    value = this.readNumber_();\n  } else if (this.isAlpha_(c)) {\n    type = TokenType.TEXT;\n    value = this.readText_();\n  } else if (this.isWhiteSpace_(c)) {\n    return this.nextToken();\n  } else if (c === '') {\n    type = TokenType.EOF;\n  } else {\n    throw new Error('Unexpected character: ' + c);\n  }\n\n  return {position: position, value: value, type: type};\n};\n\n/**\n * @return {number} Numeric token value.\n * @private\n */\nLexer.prototype.readNumber_ = function readNumber_ () {\n  var c;\n  var index = this.index_;\n  var decimal = false;\n  var scientificNotation = false;\n  do {\n    if (c == '.') {\n      decimal = true;\n    } else if (c == 'e' || c == 'E') {\n      scientificNotation = true;\n    }\n    c = this.nextChar_();\n  } while (\n    this.isNumeric_(c, decimal) ||\n      // if we haven't detected a scientific number before, 'e' or 'E'\n      // hint that we should continue to read\n      !scientificNotation && (c == 'e' || c == 'E') ||\n      // once we know that we have a scientific number, both '-' and '+'\n      // are allowed\n      scientificNotation && (c == '-' || c == '+')\n  );\n  return parseFloat(this.wkt.substring(index, this.index_--));\n};\n\n/**\n * @return {string} String token value.\n * @private\n */\nLexer.prototype.readText_ = function readText_ () {\n  var c;\n  var index = this.index_;\n  do {\n    c = this.nextChar_();\n  } while (this.isAlpha_(c));\n  return this.wkt.substring(index, this.index_--).toUpperCase();\n};\n\n/**\n * Class to parse the tokens from the WKT string.\n */\nvar Parser = function Parser(lexer) {\n\n  /**\n   * @type {Lexer}\n   * @private\n   */\n  this.lexer_ = lexer;\n\n  /**\n   * @type {Token}\n   * @private\n   */\n  this.token_;\n\n  /**\n   * @type {GeometryLayout}\n   * @private\n   */\n  this.layout_ = GeometryLayout.XY;\n};\n\n/**\n * Fetch the next token form the lexer and replace the active token.\n * @private\n */\nParser.prototype.consume_ = function consume_ () {\n  this.token_ = this.lexer_.nextToken();\n};\n\n/**\n * Tests if the given type matches the type of the current token.\n * @param {TokenType} type Token type.\n * @return {boolean} Whether the token matches the given type.\n */\nParser.prototype.isTokenType = function isTokenType (type) {\n  var isMatch = this.token_.type == type;\n  return isMatch;\n};\n\n/**\n * If the given type matches the current token, consume it.\n * @param {TokenType} type Token type.\n * @return {boolean} Whether the token matches the given type.\n */\nParser.prototype.match = function match (type) {\n  var isMatch = this.isTokenType(type);\n  if (isMatch) {\n    this.consume_();\n  }\n  return isMatch;\n};\n\n/**\n * Try to parse the tokens provided by the lexer.\n * @return {import(\"../geom/Geometry.js\").default} The geometry.\n */\nParser.prototype.parse = function parse () {\n  this.consume_();\n  var geometry = this.parseGeometry_();\n  return geometry;\n};\n\n/**\n * Try to parse the dimensional info.\n * @return {GeometryLayout} The layout.\n * @private\n */\nParser.prototype.parseGeometryLayout_ = function parseGeometryLayout_ () {\n  var layout = GeometryLayout.XY;\n  var dimToken = this.token_;\n  if (this.isTokenType(TokenType.TEXT)) {\n    var dimInfo = dimToken.value;\n    if (dimInfo === Z) {\n      layout = GeometryLayout.XYZ;\n    } else if (dimInfo === M) {\n      layout = GeometryLayout.XYM;\n    } else if (dimInfo === ZM) {\n      layout = GeometryLayout.XYZM;\n    }\n    if (layout !== GeometryLayout.XY) {\n      this.consume_();\n    }\n  }\n  return layout;\n};\n\n/**\n * @return {!Array<import(\"../geom/Geometry.js\").default>} A collection of geometries.\n * @private\n */\nParser.prototype.parseGeometryCollectionText_ = function parseGeometryCollectionText_ () {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    var geometries = [];\n    do {\n      geometries.push(this.parseGeometry_());\n    } while (this.match(TokenType.COMMA));\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return geometries;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {Array<number>} All values in a point.\n * @private\n */\nParser.prototype.parsePointText_ = function parsePointText_ () {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    var coordinates = this.parsePoint_();\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return null;\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {!Array<!Array<number>>} All points in a linestring.\n * @private\n */\nParser.prototype.parseLineStringText_ = function parseLineStringText_ () {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    var coordinates = this.parsePointList_();\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {!Array<!Array<!Array<number>>>} All points in a polygon.\n * @private\n */\nParser.prototype.parsePolygonText_ = function parsePolygonText_ () {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    var coordinates = this.parseLineStringTextList_();\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {!Array<!Array<number>>} All points in a multipoint.\n * @private\n */\nParser.prototype.parseMultiPointText_ = function parseMultiPointText_ () {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    var coordinates;\n    if (this.token_.type == TokenType.LEFT_PAREN) {\n      coordinates = this.parsePointTextList_();\n    } else {\n      coordinates = this.parsePointList_();\n    }\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {!Array<!Array<!Array<number>>>} All linestring points\n *                                        in a multilinestring.\n * @private\n */\nParser.prototype.parseMultiLineStringText_ = function parseMultiLineStringText_ () {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    var coordinates = this.parseLineStringTextList_();\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {!Array<!Array<!Array<!Array<number>>>>} All polygon points in a multipolygon.\n * @private\n */\nParser.prototype.parseMultiPolygonText_ = function parseMultiPolygonText_ () {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    var coordinates = this.parsePolygonTextList_();\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {!Array<number>} A point.\n * @private\n */\nParser.prototype.parsePoint_ = function parsePoint_ () {\n  var coordinates = [];\n  var dimensions = this.layout_.length;\n  for (var i = 0; i < dimensions; ++i) {\n    var token = this.token_;\n    if (this.match(TokenType.NUMBER)) {\n      coordinates.push(/** @type {number} */ (token.value));\n    } else {\n      break;\n    }\n  }\n  if (coordinates.length == dimensions) {\n    return coordinates;\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {!Array<!Array<number>>} An array of points.\n * @private\n */\nParser.prototype.parsePointList_ = function parsePointList_ () {\n  var coordinates = [this.parsePoint_()];\n  while (this.match(TokenType.COMMA)) {\n    coordinates.push(this.parsePoint_());\n  }\n  return coordinates;\n};\n\n/**\n * @return {!Array<!Array<number>>} An array of points.\n * @private\n */\nParser.prototype.parsePointTextList_ = function parsePointTextList_ () {\n  var coordinates = [this.parsePointText_()];\n  while (this.match(TokenType.COMMA)) {\n    coordinates.push(this.parsePointText_());\n  }\n  return coordinates;\n};\n\n/**\n * @return {!Array<!Array<!Array<number>>>} An array of points.\n * @private\n */\nParser.prototype.parseLineStringTextList_ = function parseLineStringTextList_ () {\n  var coordinates = [this.parseLineStringText_()];\n  while (this.match(TokenType.COMMA)) {\n    coordinates.push(this.parseLineStringText_());\n  }\n  return coordinates;\n};\n\n/**\n * @return {!Array<!Array<!Array<!Array<number>>>>} An array of points.\n * @private\n */\nParser.prototype.parsePolygonTextList_ = function parsePolygonTextList_ () {\n  var coordinates = [this.parsePolygonText_()];\n  while (this.match(TokenType.COMMA)) {\n    coordinates.push(this.parsePolygonText_());\n  }\n  return coordinates;\n};\n\n/**\n * @return {boolean} Whether the token implies an empty geometry.\n * @private\n */\nParser.prototype.isEmptyGeometry_ = function isEmptyGeometry_ () {\n  var isEmpty = this.isTokenType(TokenType.TEXT) &&\n      this.token_.value == EMPTY;\n  if (isEmpty) {\n    this.consume_();\n  }\n  return isEmpty;\n};\n\n/**\n * Create an error message for an unexpected token error.\n * @return {string} Error message.\n * @private\n */\nParser.prototype.formatErrorMessage_ = function formatErrorMessage_ () {\n  return 'Unexpected `' + this.token_.value + '` at position ' +\n      this.token_.position + ' in `' + this.lexer_.wkt + '`';\n};\n\n/**\n * @return {!import(\"../geom/Geometry.js\").default} The geometry.\n * @private\n */\nParser.prototype.parseGeometry_ = function parseGeometry_ () {\n  var token = this.token_;\n  if (this.match(TokenType.TEXT)) {\n    var geomType = token.value;\n    this.layout_ = this.parseGeometryLayout_();\n    if (geomType == 'GEOMETRYCOLLECTION') {\n      var geometries = this.parseGeometryCollectionText_();\n      return new GeometryCollection(geometries);\n    } else {\n      var ctor = GeometryConstructor[geomType];\n      if (!ctor) {\n        throw new Error('Invalid geometry type: ' + geomType);\n      }\n\n      var coordinates;\n      switch (geomType) {\n        case 'POINT': {\n          coordinates = this.parsePointText_();\n          break;\n        }\n        case 'LINESTRING': {\n          coordinates = this.parseLineStringText_();\n          break;\n        }\n        case 'POLYGON': {\n          coordinates = this.parsePolygonText_();\n          break;\n        }\n        case 'MULTIPOINT': {\n          coordinates = this.parseMultiPointText_();\n          break;\n        }\n        case 'MULTILINESTRING': {\n          coordinates = this.parseMultiLineStringText_();\n          break;\n        }\n        case 'MULTIPOLYGON': {\n          coordinates = this.parseMultiPolygonText_();\n          break;\n        }\n        default: {\n          throw new Error('Invalid geometry type: ' + geomType);\n        }\n      }\n\n      if (!coordinates) {\n        if (ctor === GeometryConstructor['POINT']) {\n          coordinates = [NaN, NaN];\n        } else {\n          coordinates = [];\n        }\n      }\n      return new ctor(coordinates, this.layout_);\n    }\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n\n/**\n * @classdesc\n * Geometry format for reading and writing data in the `WellKnownText` (WKT)\n * format.\n *\n * @api\n */\nvar WKT = /*@__PURE__*/(function (TextFeature) {\n  function WKT(opt_options) {\n    TextFeature.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n\n    /**\n     * Split GeometryCollection into multiple features.\n     * @type {boolean}\n     * @private\n     */\n    this.splitCollection_ = options.splitCollection !== undefined ?\n      options.splitCollection : false;\n\n  }\n\n  if ( TextFeature ) WKT.__proto__ = TextFeature;\n  WKT.prototype = Object.create( TextFeature && TextFeature.prototype );\n  WKT.prototype.constructor = WKT;\n\n  /**\n   * Parse a WKT string.\n   * @param {string} wkt WKT string.\n   * @return {import(\"../geom/Geometry.js\").default|undefined}\n   *     The geometry created.\n   * @private\n   */\n  WKT.prototype.parse_ = function parse_ (wkt) {\n    var lexer = new Lexer(wkt);\n    var parser = new Parser(lexer);\n    return parser.parse();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WKT.prototype.readFeatureFromText = function readFeatureFromText (text, opt_options) {\n    var geom = this.readGeometryFromText(text, opt_options);\n    if (geom) {\n      var feature = new Feature();\n      feature.setGeometry(geom);\n      return feature;\n    }\n    return null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WKT.prototype.readFeaturesFromText = function readFeaturesFromText (text, opt_options) {\n    var geometries = [];\n    var geometry = this.readGeometryFromText(text, opt_options);\n    if (this.splitCollection_ &&\n        geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n      geometries = (/** @type {GeometryCollection} */ (geometry))\n        .getGeometriesArray();\n    } else {\n      geometries = [geometry];\n    }\n    var features = [];\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      var feature = new Feature();\n      feature.setGeometry(geometries[i]);\n      features.push(feature);\n    }\n    return features;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WKT.prototype.readGeometryFromText = function readGeometryFromText (text, opt_options) {\n    var geometry = this.parse_(text);\n    if (geometry) {\n      return transformGeometryWithOptions(geometry, false, opt_options);\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WKT.prototype.writeFeatureText = function writeFeatureText (feature, opt_options) {\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      return this.writeGeometryText(geometry, opt_options);\n    }\n    return '';\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WKT.prototype.writeFeaturesText = function writeFeaturesText (features, opt_options) {\n    if (features.length == 1) {\n      return this.writeFeatureText(features[0], opt_options);\n    }\n    var geometries = [];\n    for (var i = 0, ii = features.length; i < ii; ++i) {\n      geometries.push(features[i].getGeometry());\n    }\n    var collection = new GeometryCollection(geometries);\n    return this.writeGeometryText(collection, opt_options);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WKT.prototype.writeGeometryText = function writeGeometryText (geometry, opt_options) {\n    return encode(/** @type {import(\"../geom/Geometry.js\").default} */ (\n      transformGeometryWithOptions(geometry, true, opt_options)));\n  };\n\n  return WKT;\n}(TextFeature));\n\n\n/**\n * @param {Point} geom Point geometry.\n * @return {string} Coordinates part of Point as WKT.\n */\nfunction encodePointGeometry(geom) {\n  var coordinates = geom.getCoordinates();\n  if (coordinates.length === 0) {\n    return '';\n  }\n  return coordinates.join(' ');\n}\n\n\n/**\n * @param {MultiPoint} geom MultiPoint geometry.\n * @return {string} Coordinates part of MultiPoint as WKT.\n */\nfunction encodeMultiPointGeometry(geom) {\n  var array = [];\n  var components = geom.getPoints();\n  for (var i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodePointGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {GeometryCollection} geom GeometryCollection geometry.\n * @return {string} Coordinates part of GeometryCollection as WKT.\n */\nfunction encodeGeometryCollectionGeometry(geom) {\n  var array = [];\n  var geoms = geom.getGeometries();\n  for (var i = 0, ii = geoms.length; i < ii; ++i) {\n    array.push(encode(geoms[i]));\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {LineString|import(\"../geom/LinearRing.js\").default} geom LineString geometry.\n * @return {string} Coordinates part of LineString as WKT.\n */\nfunction encodeLineStringGeometry(geom) {\n  var coordinates = geom.getCoordinates();\n  var array = [];\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    array.push(coordinates[i].join(' '));\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {MultiLineString} geom MultiLineString geometry.\n * @return {string} Coordinates part of MultiLineString as WKT.\n */\nfunction encodeMultiLineStringGeometry(geom) {\n  var array = [];\n  var components = geom.getLineStrings();\n  for (var i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodeLineStringGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {Polygon} geom Polygon geometry.\n * @return {string} Coordinates part of Polygon as WKT.\n */\nfunction encodePolygonGeometry(geom) {\n  var array = [];\n  var rings = geom.getLinearRings();\n  for (var i = 0, ii = rings.length; i < ii; ++i) {\n    array.push('(' + encodeLineStringGeometry(rings[i]) + ')');\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {MultiPolygon} geom MultiPolygon geometry.\n * @return {string} Coordinates part of MultiPolygon as WKT.\n */\nfunction encodeMultiPolygonGeometry(geom) {\n  var array = [];\n  var components = geom.getPolygons();\n  for (var i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodePolygonGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n/**\n * @param {import(\"../geom/SimpleGeometry.js\").default} geom SimpleGeometry geometry.\n * @return {string} Potential dimensional information for WKT type.\n */\nfunction encodeGeometryLayout(geom) {\n  var layout = geom.getLayout();\n  var dimInfo = '';\n  if (layout === GeometryLayout.XYZ || layout === GeometryLayout.XYZM) {\n    dimInfo += Z;\n  }\n  if (layout === GeometryLayout.XYM || layout === GeometryLayout.XYZM) {\n    dimInfo += M;\n  }\n  return dimInfo;\n}\n\n\n/**\n * @const\n * @type {Object<string, function(import(\"../geom/Geometry.js\").default): string>}\n */\nvar GeometryEncoder = {\n  'Point': encodePointGeometry,\n  'LineString': encodeLineStringGeometry,\n  'Polygon': encodePolygonGeometry,\n  'MultiPoint': encodeMultiPointGeometry,\n  'MultiLineString': encodeMultiLineStringGeometry,\n  'MultiPolygon': encodeMultiPolygonGeometry,\n  'GeometryCollection': encodeGeometryCollectionGeometry\n};\n\n\n/**\n * Encode a geometry as WKT.\n * @param {!import(\"../geom/Geometry.js\").default} geom The geometry to encode.\n * @return {string} WKT string for the geometry.\n */\nfunction encode(geom) {\n  var type = geom.getType();\n  var geometryEncoder = GeometryEncoder[type];\n  var enc = geometryEncoder(geom);\n  type = type.toUpperCase();\n  if (typeof /** @type {?} */ (geom).getFlatCoordinates === 'function') {\n    var dimInfo = encodeGeometryLayout(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geom));\n    if (dimInfo.length > 0) {\n      type += ' ' + dimInfo;\n    }\n  }\n  if (enc.length === 0) {\n    return type + ' ' + EMPTY;\n  }\n  return type + '(' + enc + ')';\n}\n\n\nexport default WKT;\n\n//# sourceMappingURL=WKT.js.map","/**\n * @module ol/format/XLink\n */\n\n\n/**\n * @const\n * @type {string}\n */\nvar NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Element} node Node.\n * @return {string|undefined} href.\n */\nexport function readHref(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n}\n\n//# sourceMappingURL=XLink.js.map","/**\n * @module ol/format/XML\n */\nimport {isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @abstract\n */\nvar XML = function XML () {};\n\nXML.prototype.read = function read (source) {\n  if (!source) {\n    return null;\n  } else if (typeof source === 'string') {\n    var doc = parse(source);\n    return this.readFromDocument(doc);\n  } else if (isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else {\n    return this.readFromNode(/** @type {Element} */ (source));\n  }\n};\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function readFromDocument (doc) {};\n\n/**\n * @abstract\n * @param {Element} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function readFromNode (node) {};\n\nexport default XML;\n\n//# sourceMappingURL=XML.js.map","/**\n * @module ol/format/WMSCapabilities\n */\nimport {readHref} from './XLink.js';\nimport XML from './XML.js';\nimport {readDecimalString, readString, readNonNegativeInteger, readDecimal, readBooleanString, readNonNegativeIntegerString} from './xsd.js';\nimport {makeArrayPusher, makeObjectPropertyPusher, makeObjectPropertySetter,\n  makeStructureNS, pushParseAndPop} from '../xml.js';\n\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n  null,\n  'http://www.opengis.net/wms'\n];\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Service': makeObjectPropertySetter(readService),\n    'Capability': makeObjectPropertySetter(readCapability)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CAPABILITY_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Request': makeObjectPropertySetter(readRequest),\n    'Exception': makeObjectPropertySetter(readException),\n    'Layer': makeObjectPropertySetter(readCapabilityLayer)\n  });\n\n\n/**\n * @classdesc\n * Format for reading WMS capabilities data\n *\n * @api\n */\nvar WMSCapabilities = /*@__PURE__*/(function (XML) {\n  function WMSCapabilities() {\n    XML.call(this);\n\n    /**\n     * @type {string|undefined}\n     */\n    this.version = undefined;\n  }\n\n  if ( XML ) WMSCapabilities.__proto__ = XML;\n  WMSCapabilities.prototype = Object.create( XML && XML.prototype );\n  WMSCapabilities.prototype.constructor = WMSCapabilities;\n\n  /**\n   * @inheritDoc\n   */\n  WMSCapabilities.prototype.readFromDocument = function readFromDocument (doc) {\n    for (var n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFromNode(n);\n      }\n    }\n    return null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WMSCapabilities.prototype.readFromNode = function readFromNode (node) {\n    this.version = node.getAttribute('version').trim();\n    var wmsCapabilityObject = pushParseAndPop({\n      'version': this.version\n    }, PARSERS, node, []);\n    return wmsCapabilityObject ? wmsCapabilityObject : null;\n  };\n\n  return WMSCapabilities;\n}(XML));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar SERVICE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Name': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'KeywordList': makeObjectPropertySetter(readKeywordList),\n    'OnlineResource': makeObjectPropertySetter(readHref),\n    'ContactInformation': makeObjectPropertySetter(readContactInformation),\n    'Fees': makeObjectPropertySetter(readString),\n    'AccessConstraints': makeObjectPropertySetter(readString),\n    'LayerLimit': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxHeight': makeObjectPropertySetter(readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONTACT_INFORMATION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ContactPersonPrimary': makeObjectPropertySetter(readContactPersonPrimary),\n    'ContactPosition': makeObjectPropertySetter(readString),\n    'ContactAddress': makeObjectPropertySetter(readContactAddress),\n    'ContactVoiceTelephone': makeObjectPropertySetter(readString),\n    'ContactFacsimileTelephone': makeObjectPropertySetter(readString),\n    'ContactElectronicMailAddress': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONTACT_PERSON_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ContactPerson': makeObjectPropertySetter(readString),\n    'ContactOrganization': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONTACT_ADDRESS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'AddressType': makeObjectPropertySetter(readString),\n    'Address': makeObjectPropertySetter(readString),\n    'City': makeObjectPropertySetter(readString),\n    'StateOrProvince': makeObjectPropertySetter(readString),\n    'PostCode': makeObjectPropertySetter(readString),\n    'Country': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar EXCEPTION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Format': makeArrayPusher(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LAYER_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Name': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'KeywordList': makeObjectPropertySetter(readKeywordList),\n    'CRS': makeObjectPropertyPusher(readString),\n    'EX_GeographicBoundingBox': makeObjectPropertySetter(readEXGeographicBoundingBox),\n    'BoundingBox': makeObjectPropertyPusher(readBoundingBox),\n    'Dimension': makeObjectPropertyPusher(readDimension),\n    'Attribution': makeObjectPropertySetter(readAttribution),\n    'AuthorityURL': makeObjectPropertyPusher(readAuthorityURL),\n    'Identifier': makeObjectPropertyPusher(readString),\n    'MetadataURL': makeObjectPropertyPusher(readMetadataURL),\n    'DataURL': makeObjectPropertyPusher(readFormatOnlineresource),\n    'FeatureListURL': makeObjectPropertyPusher(readFormatOnlineresource),\n    'Style': makeObjectPropertyPusher(readStyle),\n    'MinScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'MaxScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'Layer': makeObjectPropertyPusher(readLayer)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar ATTRIBUTION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'OnlineResource': makeObjectPropertySetter(readHref),\n    'LogoURL': makeObjectPropertySetter(readSizedFormatOnlineresource)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS =\n    makeStructureNS(NAMESPACE_URIS, {\n      'westBoundLongitude': makeObjectPropertySetter(readDecimal),\n      'eastBoundLongitude': makeObjectPropertySetter(readDecimal),\n      'southBoundLatitude': makeObjectPropertySetter(readDecimal),\n      'northBoundLatitude': makeObjectPropertySetter(readDecimal)\n    });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar REQUEST_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'GetCapabilities': makeObjectPropertySetter(readOperationType),\n    'GetMap': makeObjectPropertySetter(readOperationType),\n    'GetFeatureInfo': makeObjectPropertySetter(readOperationType)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar OPERATIONTYPE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Format': makeObjectPropertyPusher(readString),\n    'DCPType': makeObjectPropertyPusher(readDCPType)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar DCPTYPE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'HTTP': makeObjectPropertySetter(readHTTP)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar HTTP_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Get': makeObjectPropertySetter(readFormatOnlineresource),\n    'Post': makeObjectPropertySetter(readFormatOnlineresource)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Name': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'LegendURL': makeObjectPropertyPusher(readSizedFormatOnlineresource),\n    'StyleSheetURL': makeObjectPropertySetter(readFormatOnlineresource),\n    'StyleURL': makeObjectPropertySetter(readFormatOnlineresource)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar FORMAT_ONLINERESOURCE_PARSERS =\n    makeStructureNS(NAMESPACE_URIS, {\n      'Format': makeObjectPropertySetter(readString),\n      'OnlineResource': makeObjectPropertySetter(readHref)\n    });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar KEYWORDLIST_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Keyword': makeArrayPusher(readString)\n  });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readAttribution(node, objectStack) {\n  return pushParseAndPop({}, ATTRIBUTION_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Bounding box object.\n */\nfunction readBoundingBox(node, objectStack) {\n  var extent = [\n    readDecimalString(node.getAttribute('minx')),\n    readDecimalString(node.getAttribute('miny')),\n    readDecimalString(node.getAttribute('maxx')),\n    readDecimalString(node.getAttribute('maxy'))\n  ];\n\n  var resolutions = [\n    readDecimalString(node.getAttribute('resx')),\n    readDecimalString(node.getAttribute('resy'))\n  ];\n\n  return {\n    'crs': node.getAttribute('CRS'),\n    'extent': extent,\n    'res': resolutions\n  };\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {import(\"../extent.js\").Extent|undefined} Bounding box object.\n */\nfunction readEXGeographicBoundingBox(node, objectStack) {\n  var geographicBoundingBox = pushParseAndPop(\n    {},\n    EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS,\n    node, objectStack);\n  if (!geographicBoundingBox) {\n    return undefined;\n  }\n  var westBoundLongitude = /** @type {number|undefined} */\n        (geographicBoundingBox['westBoundLongitude']);\n  var southBoundLatitude = /** @type {number|undefined} */\n        (geographicBoundingBox['southBoundLatitude']);\n  var eastBoundLongitude = /** @type {number|undefined} */\n        (geographicBoundingBox['eastBoundLongitude']);\n  var northBoundLatitude = /** @type {number|undefined} */\n        (geographicBoundingBox['northBoundLatitude']);\n  if (westBoundLongitude === undefined || southBoundLatitude === undefined ||\n        eastBoundLongitude === undefined || northBoundLatitude === undefined) {\n    return undefined;\n  }\n  return [\n    westBoundLongitude, southBoundLatitude,\n    eastBoundLongitude, northBoundLatitude\n  ];\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Capability object.\n */\nfunction readCapability(node, objectStack) {\n  return pushParseAndPop({}, CAPABILITY_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Service object.\n */\nfunction readService(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact information object.\n */\nfunction readContactInformation(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_INFORMATION_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact person object.\n */\nfunction readContactPersonPrimary(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_PERSON_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact address object.\n */\nfunction readContactAddress(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_ADDRESS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Format array.\n */\nfunction readException(node, objectStack) {\n  return pushParseAndPop([], EXCEPTION_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nfunction readCapabilityLayer(node, objectStack) {\n  return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nfunction readLayer(node, objectStack) {\n  var parentLayerObject = /**  @type {!Object<string,*>} */ (objectStack[objectStack.length - 1]);\n\n  var layerObject = pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n\n  if (!layerObject) {\n    return undefined;\n  }\n  var queryable = readBooleanString(node.getAttribute('queryable'));\n  if (queryable === undefined) {\n    queryable = parentLayerObject['queryable'];\n  }\n  layerObject['queryable'] = queryable !== undefined ? queryable : false;\n\n  var cascaded = readNonNegativeIntegerString(\n    node.getAttribute('cascaded'));\n  if (cascaded === undefined) {\n    cascaded = parentLayerObject['cascaded'];\n  }\n  layerObject['cascaded'] = cascaded;\n\n  var opaque = readBooleanString(node.getAttribute('opaque'));\n  if (opaque === undefined) {\n    opaque = parentLayerObject['opaque'];\n  }\n  layerObject['opaque'] = opaque !== undefined ? opaque : false;\n\n  var noSubsets = readBooleanString(node.getAttribute('noSubsets'));\n  if (noSubsets === undefined) {\n    noSubsets = parentLayerObject['noSubsets'];\n  }\n  layerObject['noSubsets'] = noSubsets !== undefined ? noSubsets : false;\n\n  var fixedWidth = readDecimalString(node.getAttribute('fixedWidth'));\n  if (!fixedWidth) {\n    fixedWidth = parentLayerObject['fixedWidth'];\n  }\n  layerObject['fixedWidth'] = fixedWidth;\n\n  var fixedHeight = readDecimalString(node.getAttribute('fixedHeight'));\n  if (!fixedHeight) {\n    fixedHeight = parentLayerObject['fixedHeight'];\n  }\n  layerObject['fixedHeight'] = fixedHeight;\n\n  // See 7.2.4.8\n  var addKeys = ['Style', 'CRS', 'AuthorityURL'];\n  addKeys.forEach(function(key) {\n    if (key in parentLayerObject) {\n      var childValue = layerObject[key] || [];\n      layerObject[key] = childValue.concat(parentLayerObject[key]);\n    }\n  });\n\n  var replaceKeys = ['EX_GeographicBoundingBox', 'BoundingBox', 'Dimension',\n    'Attribution', 'MinScaleDenominator', 'MaxScaleDenominator'];\n  replaceKeys.forEach(function(key) {\n    if (!(key in layerObject)) {\n      var parentValue = parentLayerObject[key];\n      layerObject[key] = parentValue;\n    }\n  });\n\n  return layerObject;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Dimension object.\n */\nfunction readDimension(node, objectStack) {\n  var dimensionObject = {\n    'name': node.getAttribute('name'),\n    'units': node.getAttribute('units'),\n    'unitSymbol': node.getAttribute('unitSymbol'),\n    'default': node.getAttribute('default'),\n    'multipleValues': readBooleanString(node.getAttribute('multipleValues')),\n    'nearestValue': readBooleanString(node.getAttribute('nearestValue')),\n    'current': readBooleanString(node.getAttribute('current')),\n    'values': readString(node)\n  };\n  return dimensionObject;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nfunction readFormatOnlineresource(node, objectStack) {\n  return pushParseAndPop({}, FORMAT_ONLINERESOURCE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Request object.\n */\nfunction readRequest(node, objectStack) {\n  return pushParseAndPop({}, REQUEST_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} DCP type object.\n */\nfunction readDCPType(node, objectStack) {\n  return pushParseAndPop({}, DCPTYPE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} HTTP object.\n */\nfunction readHTTP(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Operation type object.\n */\nfunction readOperationType(node, objectStack) {\n  return pushParseAndPop({}, OPERATIONTYPE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nfunction readSizedFormatOnlineresource(node, objectStack) {\n  var formatOnlineresource = readFormatOnlineresource(node, objectStack);\n  if (formatOnlineresource) {\n    var size = [\n      readNonNegativeIntegerString(node.getAttribute('width')),\n      readNonNegativeIntegerString(node.getAttribute('height'))\n    ];\n    formatOnlineresource['size'] = size;\n    return formatOnlineresource;\n  }\n  return undefined;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Authority URL object.\n */\nfunction readAuthorityURL(node, objectStack) {\n  var authorityObject = readFormatOnlineresource(node, objectStack);\n  if (authorityObject) {\n    authorityObject['name'] = node.getAttribute('name');\n    return authorityObject;\n  }\n  return undefined;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Metadata URL object.\n */\nfunction readMetadataURL(node, objectStack) {\n  var metadataObject = readFormatOnlineresource(node, objectStack);\n  if (metadataObject) {\n    metadataObject['type'] = node.getAttribute('type');\n    return metadataObject;\n  }\n  return undefined;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  return pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Keyword list.\n */\nfunction readKeywordList(node, objectStack) {\n  return pushParseAndPop([], KEYWORDLIST_PARSERS, node, objectStack);\n}\n\n\nexport default WMSCapabilities;\n\n//# sourceMappingURL=WMSCapabilities.js.map","/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport {extend, includes} from '../array.js';\nimport GML2 from './GML2.js';\nimport XMLFeature from './XMLFeature.js';\nimport {assign} from '../obj.js';\nimport {makeArrayPusher, makeStructureNS, pushParseAndPop} from '../xml.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array<string>} [layers] If set, only features of the given layers will be returned by the format when read.\n */\n\n\n/**\n * @const\n * @type {string}\n */\nvar featureIdentifier = '_feature';\n\n\n/**\n * @const\n * @type {string}\n */\nvar layerIdentifier = '_layer';\n\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link module:ol/format/GML2~GML2} to read features.\n *\n * @api\n */\nvar WMSGetFeatureInfo = /*@__PURE__*/(function (XMLFeature) {\n  function WMSGetFeatureInfo(opt_options) {\n    XMLFeature.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n\n    /**\n     * @private\n     * @type {GML2}\n     */\n    this.gmlFormat_ = new GML2();\n\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n  }\n\n  if ( XMLFeature ) WMSGetFeatureInfo.__proto__ = XMLFeature;\n  WMSGetFeatureInfo.prototype = Object.create( XMLFeature && XMLFeature.prototype );\n  WMSGetFeatureInfo.prototype.constructor = WMSGetFeatureInfo;\n\n  /**\n   * @return {Array<string>} layers\n   */\n  WMSGetFeatureInfo.prototype.getLayers = function getLayers () {\n    return this.layers_;\n  };\n\n  /**\n   * @param {Array<string>} layers Layers to parse.\n   */\n  WMSGetFeatureInfo.prototype.setLayers = function setLayers (layers) {\n    this.layers_ = layers;\n  };\n\n  /**\n   * @param {Element} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  WMSGetFeatureInfo.prototype.readFeatures_ = function readFeatures_ (node, objectStack) {\n    node.setAttribute('namespaceURI', this.featureNS_);\n    var localName = node.localName;\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    var features = [];\n    if (node.childNodes.length === 0) {\n      return features;\n    }\n    if (localName == 'msGMLOutput') {\n      for (var i = 0, ii = node.childNodes.length; i < ii; i++) {\n        var layer = node.childNodes[i];\n        if (layer.nodeType !== Node.ELEMENT_NODE) {\n          continue;\n        }\n\n        var layerElement = /** @type {Element} */ (layer);\n        var context = objectStack[0];\n\n        var toRemove = layerIdentifier;\n        var layerName = layerElement.localName.replace(toRemove, '');\n\n        if (this.layers_ && !includes(this.layers_, layerName)) {\n          continue;\n        }\n\n        var featureType = layerName +\n            featureIdentifier;\n\n        context['featureType'] = featureType;\n        context['featureNS'] = this.featureNS_;\n\n        /** @type {Object<string, import(\"../xml.js\").Parser>} */\n        var parsers = {};\n        parsers[featureType] = makeArrayPusher(\n          this.gmlFormat_.readFeatureElement, this.gmlFormat_);\n        var parsersNS = makeStructureNS(\n          [context['featureNS'], null], parsers);\n        layerElement.setAttribute('namespaceURI', this.featureNS_);\n        var layerFeatures = pushParseAndPop(\n          [], parsersNS, layerElement, objectStack, this.gmlFormat_);\n        if (layerFeatures) {\n          extend(features, layerFeatures);\n        }\n      }\n    }\n    if (localName == 'FeatureCollection') {\n      var gmlFeatures = pushParseAndPop([],\n        this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n        [{}], this.gmlFormat_);\n      if (gmlFeatures) {\n        features = gmlFeatures;\n      }\n    }\n    return features;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WMSGetFeatureInfo.prototype.readFeaturesFromNode = function readFeaturesFromNode (node, opt_options) {\n    var options = {};\n    if (opt_options) {\n      assign(options, this.getReadOptions(node, opt_options));\n    }\n    return this.readFeatures_(node, [options]);\n  };\n\n  return WMSGetFeatureInfo;\n}(XMLFeature));\n\n\nexport default WMSGetFeatureInfo;\n\n//# sourceMappingURL=WMSGetFeatureInfo.js.map","/**\n * @module ol/format/OWS\n */\nimport {readHref} from './XLink.js';\nimport XML from './XML.js';\nimport {readString} from './xsd.js';\nimport {makeObjectPropertyPusher, makeObjectPropertySetter, makeStructureNS, pushParseAndPop} from '../xml.js';\n\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ServiceIdentification': makeObjectPropertySetter(readServiceIdentification),\n    'ServiceProvider': makeObjectPropertySetter(readServiceProvider),\n    'OperationsMetadata': makeObjectPropertySetter(readOperationsMetadata)\n  });\n\n\nvar OWS = /*@__PURE__*/(function (XML) {\n  function OWS() {\n    XML.call(this);\n  }\n\n  if ( XML ) OWS.__proto__ = XML;\n  OWS.prototype = Object.create( XML && XML.prototype );\n  OWS.prototype.constructor = OWS;\n\n  /**\n   * @inheritDoc\n   */\n  OWS.prototype.readFromDocument = function readFromDocument (doc) {\n    for (var n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFromNode(n);\n      }\n    }\n    return null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  OWS.prototype.readFromNode = function readFromNode (node) {\n    var owsObject = pushParseAndPop({},\n      PARSERS, node, []);\n    return owsObject ? owsObject : null;\n  };\n\n  return OWS;\n}(XML));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar ADDRESS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'DeliveryPoint': makeObjectPropertySetter(readString),\n    'City': makeObjectPropertySetter(readString),\n    'AdministrativeArea': makeObjectPropertySetter(readString),\n    'PostalCode': makeObjectPropertySetter(readString),\n    'Country': makeObjectPropertySetter(readString),\n    'ElectronicMailAddress': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar ALLOWED_VALUES_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Value': makeObjectPropertyPusher(readValue)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONSTRAINT_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'AllowedValues': makeObjectPropertySetter(readAllowedValues)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONTACT_INFO_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Phone': makeObjectPropertySetter(readPhone),\n    'Address': makeObjectPropertySetter(readAddress)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar DCP_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'HTTP': makeObjectPropertySetter(readHttp)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar HTTP_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Get': makeObjectPropertyPusher(readGet),\n    'Post': undefined // TODO\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar OPERATION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'DCP': makeObjectPropertySetter(readDcp)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar OPERATIONS_METADATA_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Operation': readOperation\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PHONE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Voice': makeObjectPropertySetter(readString),\n    'Facsimile': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar REQUEST_METHOD_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Constraint': makeObjectPropertyPusher(readConstraint)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar SERVICE_CONTACT_PARSERS =\n    makeStructureNS(\n      NAMESPACE_URIS, {\n        'IndividualName': makeObjectPropertySetter(readString),\n        'PositionName': makeObjectPropertySetter(readString),\n        'ContactInfo': makeObjectPropertySetter(readContactInfo)\n      });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar SERVICE_IDENTIFICATION_PARSERS =\n    makeStructureNS(\n      NAMESPACE_URIS, {\n        'Abstract': makeObjectPropertySetter(readString),\n        'AccessConstraints': makeObjectPropertySetter(readString),\n        'Fees': makeObjectPropertySetter(readString),\n        'Title': makeObjectPropertySetter(readString),\n        'ServiceTypeVersion': makeObjectPropertySetter(readString),\n        'ServiceType': makeObjectPropertySetter(readString)\n      });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar SERVICE_PROVIDER_PARSERS =\n    makeStructureNS(\n      NAMESPACE_URIS, {\n        'ProviderName': makeObjectPropertySetter(readString),\n        'ProviderSite': makeObjectPropertySetter(readHref),\n        'ServiceContact': makeObjectPropertySetter(readServiceContact)\n      });\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The address.\n */\nfunction readAddress(node, objectStack) {\n  return pushParseAndPop({},\n    ADDRESS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The values.\n */\nfunction readAllowedValues(node, objectStack) {\n  return pushParseAndPop({},\n    ALLOWED_VALUES_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The constraint.\n */\nfunction readConstraint(node, objectStack) {\n  var name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return pushParseAndPop({'name': name},\n    CONSTRAINT_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The contact info.\n */\nfunction readContactInfo(node, objectStack) {\n  return pushParseAndPop({},\n    CONTACT_INFO_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The DCP.\n */\nfunction readDcp(node, objectStack) {\n  return pushParseAndPop({},\n    DCP_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The GET object.\n */\nfunction readGet(node, objectStack) {\n  var href = readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return pushParseAndPop({'href': href},\n    REQUEST_METHOD_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The HTTP object.\n */\nfunction readHttp(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operation.\n */\nfunction readOperation(node, objectStack) {\n  var name = node.getAttribute('name');\n  var value = pushParseAndPop({},\n    OPERATION_PARSERS, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  var object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operations metadata.\n */\nfunction readOperationsMetadata(node, objectStack) {\n  return pushParseAndPop({},\n    OPERATIONS_METADATA_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The phone.\n */\nfunction readPhone(node, objectStack) {\n  return pushParseAndPop({},\n    PHONE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service identification.\n */\nfunction readServiceIdentification(node, objectStack) {\n  return pushParseAndPop(\n    {}, SERVICE_IDENTIFICATION_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service contact.\n */\nfunction readServiceContact(node, objectStack) {\n  return pushParseAndPop(\n    {}, SERVICE_CONTACT_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service provider.\n */\nfunction readServiceProvider(node, objectStack) {\n  return pushParseAndPop(\n    {}, SERVICE_PROVIDER_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {string|undefined} The value.\n */\nfunction readValue(node, objectStack) {\n  return readString(node);\n}\n\n\nexport default OWS;\n\n//# sourceMappingURL=OWS.js.map","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {boundingExtent} from '../extent.js';\nimport OWS from './OWS.js';\nimport {readHref} from './XLink.js';\nimport XML from './XML.js';\nimport {readString, readNonNegativeInteger, readDecimal} from './xsd.js';\nimport {pushParseAndPop, makeStructureNS,\n  makeObjectPropertySetter, makeObjectPropertyPusher, makeArrayPusher} from '../xml.js';\n\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar OWS_NAMESPACE_URIS = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Contents': makeObjectPropertySetter(readContents)\n  });\n\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @api\n */\nvar WMTSCapabilities = /*@__PURE__*/(function (XML) {\n  function WMTSCapabilities() {\n    XML.call(this);\n\n    /**\n     * @type {OWS}\n     * @private\n     */\n    this.owsParser_ = new OWS();\n  }\n\n  if ( XML ) WMTSCapabilities.__proto__ = XML;\n  WMTSCapabilities.prototype = Object.create( XML && XML.prototype );\n  WMTSCapabilities.prototype.constructor = WMTSCapabilities;\n\n  /**\n   * @inheritDoc\n   */\n  WMTSCapabilities.prototype.readFromDocument = function readFromDocument (doc) {\n    for (var n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFromNode(n);\n      }\n    }\n    return null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WMTSCapabilities.prototype.readFromNode = function readFromNode (node) {\n    var version = node.getAttribute('version').trim();\n    var WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n    if (!WMTSCapabilityObject) {\n      return null;\n    }\n    WMTSCapabilityObject['version'] = version;\n    WMTSCapabilityObject = pushParseAndPop(WMTSCapabilityObject, PARSERS, node, []);\n    return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n  };\n\n  return WMTSCapabilities;\n}(XML));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar CONTENTS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Layer': makeObjectPropertyPusher(readLayer),\n    'TileMatrixSet': makeObjectPropertyPusher(readTileMatrixSet)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar LAYER_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Style': makeObjectPropertyPusher(readStyle),\n    'Format': makeObjectPropertyPusher(readString),\n    'TileMatrixSetLink': makeObjectPropertyPusher(readTileMatrixSetLink),\n    'Dimension': makeObjectPropertyPusher(readDimensions),\n    'ResourceURL': makeObjectPropertyPusher(readResourceUrl)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'WGS84BoundingBox': makeObjectPropertySetter(readWgs84BoundingBox),\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LegendURL': makeObjectPropertyPusher(readLegendUrl)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TMS_LINKS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'TileMatrixSet': makeObjectPropertySetter(readString),\n    'TileMatrixSetLimits': makeObjectPropertySetter(readTileMatrixLimitsList)\n  });\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TMS_LIMITS_LIST_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'TileMatrixLimits': makeArrayPusher(readTileMatrixLimits)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TMS_LIMITS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'TileMatrix': makeObjectPropertySetter(readString),\n    'MinTileRow': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxTileRow': makeObjectPropertySetter(readNonNegativeInteger),\n    'MinTileCol': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxTileCol': makeObjectPropertySetter(readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar DIMENSION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Default': makeObjectPropertySetter(readString),\n    'Value': makeObjectPropertyPusher(readString)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar WGS84_BBOX_READERS = makeStructureNS(\n  OWS_NAMESPACE_URIS, {\n    'LowerCorner': makeArrayPusher(readCoordinates),\n    'UpperCorner': makeArrayPusher(readCoordinates)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TMS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'WellKnownScaleSet': makeObjectPropertySetter(readString),\n    'TileMatrix': makeObjectPropertyPusher(readTileMatrix)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'SupportedCRS': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\nvar TM_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'TopLeftCorner': makeObjectPropertySetter(readCoordinates),\n    'ScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'TileWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'TileHeight': makeObjectPropertySetter(readNonNegativeInteger),\n    'MatrixWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'MatrixHeight': makeObjectPropertySetter(readNonNegativeInteger)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readContents(node, objectStack) {\n  return pushParseAndPop({}, CONTENTS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nfunction readLayer(node, objectStack) {\n  return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nfunction readTileMatrixSet(node, objectStack) {\n  return pushParseAndPop({}, TMS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  var style = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  var isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nfunction readTileMatrixSetLink(node, objectStack) {\n  return pushParseAndPop({}, TMS_LINKS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nfunction readDimensions(node, objectStack) {\n  return pushParseAndPop({}, DIMENSION_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nfunction readResourceUrl(node, objectStack) {\n  var format = node.getAttribute('format');\n  var template = node.getAttribute('template');\n  var resourceType = node.getAttribute('resourceType');\n  var resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nfunction readWgs84BoundingBox(node, objectStack) {\n  var coordinates = pushParseAndPop([], WGS84_BBOX_READERS, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nfunction readLegendUrl(node, objectStack) {\n  var legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = readHref(node);\n  return legend;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nfunction readCoordinates(node, objectStack) {\n  var coordinates = readString(node).split(/\\s+/);\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  var x = +coordinates[0];\n  var y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nfunction readTileMatrix(node, objectStack) {\n  return pushParseAndPop({}, TM_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nfunction readTileMatrixLimitsList(node, objectStack) {\n  return pushParseAndPop([], TMS_LIMITS_LIST_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nfunction readTileMatrixLimits(node, objectStack) {\n  return pushParseAndPop({}, TMS_LIMITS_PARSERS, node, objectStack);\n}\n\n\nexport default WMTSCapabilities;\n\n//# sourceMappingURL=WMTSCapabilities.js.map","/**\n * @module ol/control/FullScreen\n */\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED} from '../css.js';\nimport {replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\n\nvar events = ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'];\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n\n\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](http://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @api\n */\nvar FullScreen = /*@__PURE__*/(function (Control) {\n  function FullScreen(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.cssClassName_ = options.className !== undefined ? options.className :\n      'ol-full-screen';\n\n    var label = options.label !== undefined ? options.label : '\\u2922';\n\n    /**\n     * @private\n     * @type {Text}\n     */\n    this.labelNode_ = typeof label === 'string' ?\n      document.createTextNode(label) : label;\n\n    var labelActive = options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n\n    /**\n     * @private\n     * @type {Text}\n     */\n    this.labelActiveNode_ = typeof labelActive === 'string' ?\n      document.createTextNode(labelActive) : labelActive;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.button_ = document.createElement('button');\n\n    var tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n    this.setClassName_(this.button_, isFullScreen());\n    this.button_.setAttribute('type', 'button');\n    this.button_.title = tipLabel;\n    this.button_.appendChild(this.labelNode_);\n\n    listen(this.button_, EventType.CLICK,\n      this.handleClick_, this);\n\n    var cssClasses = this.cssClassName_ + ' ' + CLASS_UNSELECTABLE +\n        ' ' + CLASS_CONTROL + ' ' +\n        (!isFullScreenSupported() ? CLASS_UNSUPPORTED : '');\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.button_);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.keys_ = options.keys !== undefined ? options.keys : false;\n\n    /**\n     * @private\n     * @type {HTMLElement|string|undefined}\n     */\n    this.source_ = options.source;\n\n  }\n\n  if ( Control ) FullScreen.__proto__ = Control;\n  FullScreen.prototype = Object.create( Control && Control.prototype );\n  FullScreen.prototype.constructor = FullScreen;\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  FullScreen.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleFullScreen_();\n  };\n\n  /**\n   * @private\n   */\n  FullScreen.prototype.handleFullScreen_ = function handleFullScreen_ () {\n    if (!isFullScreenSupported()) {\n      return;\n    }\n    var map = this.getMap();\n    if (!map) {\n      return;\n    }\n    if (isFullScreen()) {\n      exitFullScreen();\n    } else {\n      var element;\n      if (this.source_) {\n        element = typeof this.source_ === 'string' ?\n          document.getElementById(this.source_) :\n          this.source_;\n      } else {\n        element = map.getTargetElement();\n      }\n      if (this.keys_) {\n        requestFullScreenWithKeys(element);\n\n      } else {\n        requestFullScreen(element);\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  FullScreen.prototype.handleFullScreenChange_ = function handleFullScreenChange_ () {\n    var map = this.getMap();\n    if (isFullScreen()) {\n      this.setClassName_(this.button_, true);\n      replaceNode(this.labelActiveNode_, this.labelNode_);\n    } else {\n      this.setClassName_(this.button_, false);\n      replaceNode(this.labelNode_, this.labelActiveNode_);\n    }\n    if (map) {\n      map.updateSize();\n    }\n  };\n\n  /**\n   * @param {HTMLElement} element Target element\n   * @param {boolean} fullscreen True if fullscreen class name should be active\n   * @private\n   */\n  FullScreen.prototype.setClassName_ = function setClassName_ (element, fullscreen) {\n    var activeClassName = this.cssClassName_ + '-true';\n    var inactiveClassName = this.cssClassName_ + '-false';\n    var nextClassName = fullscreen ? activeClassName : inactiveClassName;\n    element.classList.remove(activeClassName);\n    element.classList.remove(inactiveClassName);\n    element.classList.add(nextClassName);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  FullScreen.prototype.setMap = function setMap (map) {\n    Control.prototype.setMap.call(this, map);\n    if (map) {\n      for (var i = 0, ii = events.length; i < ii; ++i) {\n        this.listenerKeys.push(\n          listen(document, events[i], this.handleFullScreenChange_, this));\n      }\n    }\n  };\n\n  return FullScreen;\n}(Control));\n\n\n/**\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported() {\n  var body = document.body;\n  return !!(\n    body.webkitRequestFullscreen ||\n    (body.mozRequestFullScreen && document.mozFullScreenEnabled) ||\n    (body.msRequestFullscreen && document.msFullscreenEnabled) ||\n    (body.requestFullscreen && document.fullscreenEnabled)\n  );\n}\n\n/**\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen() {\n  return !!(\n    document.webkitIsFullScreen || document.mozFullScreen ||\n    document.msFullscreenElement || document.fullscreenElement\n  );\n}\n\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.msRequestFullscreen) {\n    element.msRequestFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  }\n}\n\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n  if (element.mozRequestFullScreenWithKeys) {\n    element.mozRequestFullScreenWithKeys();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  } else {\n    requestFullScreen(element);\n  }\n}\n\n/**\n * Exit fullscreen.\n */\nfunction exitFullScreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.msExitFullscreen) {\n    document.msExitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n\nexport default FullScreen;\n\n//# sourceMappingURL=FullScreen.js.map","/**\n * @module ol/control/MousePosition\n */\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport Control from './Control.js';\nimport {getTransformFromProjections, identityTransform, get as getProjection} from '../proj.js';\n\n\n/**\n * @type {string}\n */\nvar PROJECTION = 'projection';\n\n/**\n * @type {string}\n */\nvar COORDINATE_FORMAT = 'coordinateFormat';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string} [undefinedHTML='&#160;'] Markup to show when coordinates are not\n * available (e.g. when the pointer leaves the map viewport).  By default, the last position\n * will be replaced with `'&#160;'` (`&nbsp;`) when the pointer leaves the viewport.  To\n * retain the last rendered position, set this option to something falsey (like an empty\n * string `''`).\n */\n\n\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * On touch devices, which usually do not have a mouse cursor, the coordinates\n * of the currently touched position are shown.\n *\n * @api\n */\nvar MousePosition = /*@__PURE__*/(function (Control) {\n  function MousePosition(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var element = document.createElement('div');\n    element.className = options.className !== undefined ? options.className : 'ol-mouse-position';\n\n    Control.call(this, {\n      element: element,\n      render: options.render || render,\n      target: options.target\n    });\n\n    listen(this,\n      getChangeEventType(PROJECTION),\n      this.handleProjectionChanged_, this);\n\n    if (options.coordinateFormat) {\n      this.setCoordinateFormat(options.coordinateFormat);\n    }\n    if (options.projection) {\n      this.setProjection(options.projection);\n    }\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.undefinedHTML_ = options.undefinedHTML !== undefined ? options.undefinedHTML : '&#160;';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderOnMouseOut_ = !!this.undefinedHTML_;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = element.innerHTML;\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.mapProjection_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../proj.js\").TransformFunction}\n     */\n    this.transform_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastMouseMovePixel_ = null;\n\n  }\n\n  if ( Control ) MousePosition.__proto__ = Control;\n  MousePosition.prototype = Object.create( Control && Control.prototype );\n  MousePosition.prototype.constructor = MousePosition;\n\n  /**\n   * @private\n   */\n  MousePosition.prototype.handleProjectionChanged_ = function handleProjectionChanged_ () {\n    this.transform_ = null;\n  };\n\n  /**\n   * Return the coordinate format type used to render the current position or\n   * undefined.\n   * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  MousePosition.prototype.getCoordinateFormat = function getCoordinateFormat () {\n    return (\n      /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */ (this.get(COORDINATE_FORMAT))\n    );\n  };\n\n  /**\n   * Return the projection that is used to report the mouse position.\n   * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  MousePosition.prototype.getProjection = function getProjection () {\n    return (\n      /** @type {import(\"../proj/Projection.js\").default|undefined} */ (this.get(PROJECTION))\n    );\n  };\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  MousePosition.prototype.handleMouseMove = function handleMouseMove (event) {\n    var map = this.getMap();\n    this.lastMouseMovePixel_ = map.getEventPixel(event);\n    this.updateHTML_(this.lastMouseMovePixel_);\n  };\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  MousePosition.prototype.handleMouseOut = function handleMouseOut (event) {\n    this.updateHTML_(null);\n    this.lastMouseMovePixel_ = null;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MousePosition.prototype.setMap = function setMap (map) {\n    Control.prototype.setMap.call(this, map);\n    if (map) {\n      var viewport = map.getViewport();\n      this.listenerKeys.push(\n        listen(viewport, EventType.MOUSEMOVE, this.handleMouseMove, this),\n        listen(viewport, EventType.TOUCHSTART, this.handleMouseMove, this)\n      );\n      if (this.renderOnMouseOut_) {\n        this.listenerKeys.push(\n          listen(viewport, EventType.MOUSEOUT, this.handleMouseOut, this),\n          listen(viewport, EventType.TOUCHEND, this.handleMouseOut, this)\n        );\n      }\n    }\n  };\n\n  /**\n   * Set the coordinate format type used to render the current position.\n   * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  MousePosition.prototype.setCoordinateFormat = function setCoordinateFormat (format) {\n    this.set(COORDINATE_FORMAT, format);\n  };\n\n  /**\n   * Set the projection that is used to report the mouse position.\n   * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  MousePosition.prototype.setProjection = function setProjection (projection) {\n    this.set(PROJECTION, getProjection(projection));\n  };\n\n  /**\n   * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @private\n   */\n  MousePosition.prototype.updateHTML_ = function updateHTML_ (pixel) {\n    var html = this.undefinedHTML_;\n    if (pixel && this.mapProjection_) {\n      if (!this.transform_) {\n        var projection = this.getProjection();\n        if (projection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_, projection);\n        } else {\n          this.transform_ = identityTransform;\n        }\n      }\n      var map = this.getMap();\n      var coordinate = map.getCoordinateFromPixel(pixel);\n      if (coordinate) {\n        this.transform_(coordinate, coordinate);\n        var coordinateFormat = this.getCoordinateFormat();\n        if (coordinateFormat) {\n          html = coordinateFormat(coordinate);\n        } else {\n          html = coordinate.toString();\n        }\n      }\n    }\n    if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n      this.element.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n  };\n\n  return MousePosition;\n}(Control));\n\n\n/**\n * Update the projection. Rendering of the coordinates is done in\n * `handleMouseMove` and `handleMouseUp`.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {MousePosition}\n * @api\n */\nexport function render(mapEvent) {\n  var frameState = mapEvent.frameState;\n  if (!frameState) {\n    this.mapProjection_ = null;\n  } else {\n    if (this.mapProjection_ != frameState.viewState.projection) {\n      this.mapProjection_ = frameState.viewState.projection;\n      this.transform_ = null;\n    }\n  }\n}\n\n\nexport default MousePosition;\n\n//# sourceMappingURL=MousePosition.js.map","/**\n * @module ol/control/OverviewMap\n */\nimport Collection from '../Collection.js';\nimport Map from '../Map.js';\nimport MapEventType from '../MapEventType.js';\nimport MapProperty from '../MapProperty.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport Overlay from '../Overlay.js';\nimport OverlayPositioning from '../OverlayPositioning.js';\nimport ViewProperty from '../ViewProperty.js';\nimport Control from './Control.js';\nimport {rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {replaceNode} from '../dom.js';\nimport {listen, listenOnce, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight, scaleFromCenter} from '../extent.js';\n\n\n/**\n * Maximum width and/or height extent ratio that determines when the overview\n * map should be zoomed out.\n * @type {number}\n */\nvar MAX_RATIO = 0.75;\n\n\n/**\n * Minimum width and/or height extent ratio that determines when the overview\n * map should be zoomed in.\n * @type {number}\n */\nvar MIN_RATIO = 0.1;\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-overviewmap'] CSS class name.\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\n * @property {string|HTMLElement} [collapseLabel='«'] Text label to use for the\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\n * @property {string|HTMLElement} [label='»'] Text label to use for the collapsed\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {Array<import(\"../layer/Layer.js\").default>|import(\"../Collection.js\").default<import(\"../layer/Layer.js\").default>} layers\n * Layers for the overview map (mandatory).\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\n * @property {import(\"../View.js\").default} [view] Custom view for the overview map. If not provided,\n * a default view with an EPSG:3857 projection will be used.\n */\n\n\n/**\n * Create a new control with a map acting as an overview map for an other\n * defined map.\n *\n * @api\n */\nvar OverviewMap = /*@__PURE__*/(function (Control) {\n  function OverviewMap(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ = options.collapsible !== undefined ?\n      options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    var className = options.className !== undefined ? options.className : 'ol-overviewmap';\n\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\n\n    var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00AB';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    var label = options.label !== undefined ? options.label : '\\u00BB';\n\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n    var activeLabel = (this.collapsible_ && !this.collapsed_) ?\n      this.collapseLabel_ : this.label_;\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    listen(button, EventType.CLICK,\n      this.handleClick_, this);\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.ovmapDiv_ = document.createElement('div');\n    this.ovmapDiv_.className = 'ol-overviewmap-map';\n\n    /**\n     * @type {import(\"../Map.js\").default}\n     * @private\n     */\n    this.ovmap_ = new Map({\n      controls: new Collection(),\n      interactions: new Collection(),\n      view: options.view\n    });\n    var ovmap = this.ovmap_;\n\n    if (options.layers) {\n      /** @type {Array<import(\"../layer/Layer.js\").default>} */ (options.layers).forEach(\n        /**\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         */\n        (function(layer) {\n          ovmap.addLayer(layer);\n        }).bind(this));\n    }\n\n    var box = document.createElement('div');\n    box.className = 'ol-overviewmap-box';\n    box.style.boxSizing = 'border-box';\n\n    /**\n     * @type {import(\"../Overlay.js\").default}\n     * @private\n     */\n    this.boxOverlay_ = new Overlay({\n      position: [0, 0],\n      positioning: OverlayPositioning.BOTTOM_LEFT,\n      element: box\n    });\n    this.ovmap_.addOverlay(this.boxOverlay_);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n        (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n        (this.collapsible_ ? '' : ' ol-uncollapsible');\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ovmapDiv_);\n    element.appendChild(button);\n\n    /* Interactive map */\n\n    var scope = this;\n\n    var overlay = this.boxOverlay_;\n    var overlayBox = this.boxOverlay_.getElement();\n\n    /* Functions definition */\n\n    var computeDesiredMousePosition = function(mousePosition) {\n      return {\n        clientX: mousePosition.clientX - (overlayBox.offsetWidth / 2),\n        clientY: mousePosition.clientY + (overlayBox.offsetHeight / 2)\n      };\n    };\n\n    var move = function(event) {\n      var position = /** @type {?} */ (computeDesiredMousePosition(event));\n      var coordinates = ovmap.getEventCoordinate(/** @type {Event} */ (position));\n\n      overlay.setPosition(coordinates);\n    };\n\n    var endMoving = function(event) {\n      var coordinates = ovmap.getEventCoordinate(event);\n\n      scope.getMap().getView().setCenter(coordinates);\n\n      window.removeEventListener('mousemove', move);\n      window.removeEventListener('mouseup', endMoving);\n    };\n\n    /* Binding */\n\n    overlayBox.addEventListener('mousedown', function() {\n      window.addEventListener('mousemove', move);\n      window.addEventListener('mouseup', endMoving);\n    });\n  }\n\n  if ( Control ) OverviewMap.__proto__ = Control;\n  OverviewMap.prototype = Object.create( Control && Control.prototype );\n  OverviewMap.prototype.constructor = OverviewMap;\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  OverviewMap.prototype.setMap = function setMap (map) {\n    var oldMap = this.getMap();\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      var oldView = oldMap.getView();\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      this.ovmap_.setTarget(null);\n    }\n    Control.prototype.setMap.call(this, map);\n\n    if (map) {\n      this.ovmap_.setTarget(this.ovmapDiv_);\n      this.listenerKeys.push(listen(\n        map, ObjectEventType.PROPERTYCHANGE,\n        this.handleMapPropertyChange_, this));\n\n      var view = map.getView();\n      if (view) {\n        this.bindView_(view);\n        if (view.isDef()) {\n          this.ovmap_.updateSize();\n          this.resetExtent_();\n        }\n      }\n    }\n  };\n\n  /**\n   * Handle map property changes.  This only deals with changes to the map's view.\n   * @param {import(\"../Object.js\").ObjectEvent} event The propertychange event.\n   * @private\n   */\n  OverviewMap.prototype.handleMapPropertyChange_ = function handleMapPropertyChange_ (event) {\n    if (event.key === MapProperty.VIEW) {\n      var oldView = /** @type {import(\"../View.js\").default} */ (event.oldValue);\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      var newView = this.getMap().getView();\n      this.bindView_(newView);\n    }\n  };\n\n  /**\n   * Register listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  OverviewMap.prototype.bindView_ = function bindView_ (view) {\n    listen(view,\n      getChangeEventType(ViewProperty.ROTATION),\n      this.handleRotationChanged_, this);\n  };\n\n  /**\n   * Unregister listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  OverviewMap.prototype.unbindView_ = function unbindView_ (view) {\n    unlisten(view,\n      getChangeEventType(ViewProperty.ROTATION),\n      this.handleRotationChanged_, this);\n  };\n\n  /**\n   * Handle rotation changes to the main map.\n   * TODO: This should rotate the extent rectrangle instead of the\n   * overview map's view.\n   * @private\n   */\n  OverviewMap.prototype.handleRotationChanged_ = function handleRotationChanged_ () {\n    this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\n  };\n\n  /**\n   * Reset the overview map extent if the box size (width or\n   * height) is less than the size of the overview map size times minRatio\n   * or is greater than the size of the overview size times maxRatio.\n   *\n   * If the map extent was not reset, the box size can fits in the defined\n   * ratio sizes. This method then checks if is contained inside the overview\n   * map current extent. If not, recenter the overview map to the current\n   * main map center location.\n   * @private\n   */\n  OverviewMap.prototype.validateExtent_ = function validateExtent_ () {\n    var map = this.getMap();\n    var ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    var mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    var view = map.getView();\n    var extent = view.calculateExtent(mapSize);\n\n    var ovmapSize = /** @type {import(\"../size.js\").Size} */ (ovmap.getSize());\n\n    var ovview = ovmap.getView();\n    var ovextent = ovview.calculateExtent(ovmapSize);\n\n    var topLeftPixel =\n        ovmap.getPixelFromCoordinate(getTopLeft(extent));\n    var bottomRightPixel =\n        ovmap.getPixelFromCoordinate(getBottomRight(extent));\n\n    var boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\n    var boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\n\n    var ovmapWidth = ovmapSize[0];\n    var ovmapHeight = ovmapSize[1];\n\n    if (boxWidth < ovmapWidth * MIN_RATIO ||\n        boxHeight < ovmapHeight * MIN_RATIO ||\n        boxWidth > ovmapWidth * MAX_RATIO ||\n        boxHeight > ovmapHeight * MAX_RATIO) {\n      this.resetExtent_();\n    } else if (!containsExtent(ovextent, extent)) {\n      this.recenter_();\n    }\n  };\n\n  /**\n   * Reset the overview map extent to half calculated min and max ratio times\n   * the extent of the main map.\n   * @private\n   */\n  OverviewMap.prototype.resetExtent_ = function resetExtent_ () {\n    if (MAX_RATIO === 0 || MIN_RATIO === 0) {\n      return;\n    }\n\n    var map = this.getMap();\n    var ovmap = this.ovmap_;\n\n    var mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    var view = map.getView();\n    var extent = view.calculateExtent(mapSize);\n\n    var ovview = ovmap.getView();\n\n    // get how many times the current map overview could hold different\n    // box sizes using the min and max ratio, pick the step in the middle used\n    // to calculate the extent from the main map to set it to the overview map,\n    var steps = Math.log(\n      MAX_RATIO / MIN_RATIO) / Math.LN2;\n    var ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\n    scaleFromCenter(extent, ratio);\n    ovview.fit(extent);\n  };\n\n  /**\n   * Set the center of the overview map to the map center without changing its\n   * resolution.\n   * @private\n   */\n  OverviewMap.prototype.recenter_ = function recenter_ () {\n    var map = this.getMap();\n    var ovmap = this.ovmap_;\n\n    var view = map.getView();\n\n    var ovview = ovmap.getView();\n\n    ovview.setCenter(view.getCenter());\n  };\n\n  /**\n   * Update the box using the main map extent\n   * @private\n   */\n  OverviewMap.prototype.updateBox_ = function updateBox_ () {\n    var map = this.getMap();\n    var ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    var mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    var view = map.getView();\n\n    var ovview = ovmap.getView();\n\n    var rotation = view.getRotation();\n\n    var overlay = this.boxOverlay_;\n    var box = this.boxOverlay_.getElement();\n    var extent = view.calculateExtent(mapSize);\n    var ovresolution = ovview.getResolution();\n    var bottomLeft = getBottomLeft(extent);\n    var topRight = getTopRight(extent);\n\n    // set position using bottom left coordinates\n    var rotateBottomLeft = this.calculateCoordinateRotate_(rotation, bottomLeft);\n    overlay.setPosition(rotateBottomLeft);\n\n    // set box size calculated from map extent size and overview map resolution\n    if (box) {\n      box.style.width = Math.abs((bottomLeft[0] - topRight[0]) / ovresolution) + 'px';\n      box.style.height = Math.abs((topRight[1] - bottomLeft[1]) / ovresolution) + 'px';\n    }\n  };\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate|undefined} Coordinate for rotation and center anchor.\n   * @private\n   */\n  OverviewMap.prototype.calculateCoordinateRotate_ = function calculateCoordinateRotate_ (rotation, coordinate) {\n    var coordinateRotate;\n\n    var map = this.getMap();\n    var view = map.getView();\n\n    var currentCenter = view.getCenter();\n\n    if (currentCenter) {\n      coordinateRotate = [\n        coordinate[0] - currentCenter[0],\n        coordinate[1] - currentCenter[1]\n      ];\n      rotateCoordinate(coordinateRotate, rotation);\n      addCoordinate(coordinateRotate, currentCenter);\n    }\n    return coordinateRotate;\n  };\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  OverviewMap.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleToggle_();\n  };\n\n  /**\n   * @private\n   */\n  OverviewMap.prototype.handleToggle_ = function handleToggle_ () {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n\n    // manage overview map if it had not been rendered before and control\n    // is expanded\n    var ovmap = this.ovmap_;\n    if (!this.collapsed_ && !ovmap.isRendered()) {\n      ovmap.updateSize();\n      this.resetExtent_();\n      listenOnce(ovmap, MapEventType.POSTRENDER,\n        function(event) {\n          this.updateBox_();\n        },\n        this);\n    }\n  };\n\n  /**\n   * Return `true` if the overview map is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  OverviewMap.prototype.getCollapsible = function getCollapsible () {\n    return this.collapsible_;\n  };\n\n  /**\n   * Set whether the overview map should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  OverviewMap.prototype.setCollapsible = function setCollapsible (collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  };\n\n  /**\n   * Collapse or expand the overview map according to the passed parameter. Will\n   * not do anything if the overview map isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  OverviewMap.prototype.setCollapsed = function setCollapsed (collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  };\n\n  /**\n   * Determine if the overview map is collapsed.\n   * @return {boolean} The overview map is collapsed.\n   * @api\n   */\n  OverviewMap.prototype.getCollapsed = function getCollapsed () {\n    return this.collapsed_;\n  };\n\n  /**\n   * Return the overview map.\n   * @return {import(\"../PluggableMap.js\").default} Overview map.\n   * @api\n   */\n  OverviewMap.prototype.getOverviewMap = function getOverviewMap () {\n    return this.ovmap_;\n  };\n\n  return OverviewMap;\n}(Control));\n\n\n/**\n * Update the overview map element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {OverviewMap}\n * @api\n */\nexport function render(mapEvent) {\n  this.validateExtent_();\n  this.updateBox_();\n}\n\n\nexport default OverviewMap;\n\n//# sourceMappingURL=OverviewMap.js.map","/**\n * @module ol/control/ScaleLine\n */\nimport {getChangeEventType} from '../Object.js';\nimport {assert} from '../asserts.js';\nimport Control from './Control.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {listen} from '../events.js';\nimport {getPointResolution, METERS_PER_UNIT} from '../proj.js';\nimport ProjUnits from '../proj/Units.js';\n\n\n/**\n * @type {string}\n */\nvar UNITS_PROP = 'units';\n\n/**\n * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,\n * `'nautical'`, `'metric'`, `'us'`.\n * @enum {string}\n */\nexport var Units = {\n  DEGREES: 'degrees',\n  IMPERIAL: 'imperial',\n  NAUTICAL: 'nautical',\n  METRIC: 'metric',\n  US: 'us'\n};\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nvar LEADING_DIGITS = [1, 2, 5];\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-scale-line'] CSS Class name.\n * @property {number} [minWidth=64] Minimum width in pixels.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {Units|string} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n */\n\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n *\n * @api\n */\nvar ScaleLine = /*@__PURE__*/(function (Control) {\n  function ScaleLine(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var className = options.className !== undefined ? options.className :\n      options.bar ? 'ol-scale-bar' : 'ol-scale-line';\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    listen(\n      this, getChangeEventType(UNITS_PROP),\n      this.handleUnitsChanged_, this);\n\n    this.setUnits(/** @type {Units} */ (options.units) || Units.METRIC);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBar_ = options.bar || false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleBarSteps_ = options.steps || 4;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBarText_ = options.text || false;\n\n  }\n\n  if ( Control ) ScaleLine.__proto__ = Control;\n  ScaleLine.prototype = Object.create( Control && Control.prototype );\n  ScaleLine.prototype.constructor = ScaleLine;\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  ScaleLine.prototype.getUnits = function getUnits () {\n    return this.get(UNITS_PROP);\n  };\n\n  /**\n   * @private\n   */\n  ScaleLine.prototype.handleUnitsChanged_ = function handleUnitsChanged_ () {\n    this.updateElement_();\n  };\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  ScaleLine.prototype.setUnits = function setUnits (units) {\n    this.set(UNITS_PROP, units);\n  };\n\n  /**\n   * @private\n   */\n  ScaleLine.prototype.updateElement_ = function updateElement_ () {\n    var viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var center = viewState.center;\n    var projection = viewState.projection;\n    var units = this.getUnits();\n    var pointResolutionUnits = units == Units.DEGREES ?\n      ProjUnits.DEGREES :\n      ProjUnits.METERS;\n    var pointResolution =\n        getPointResolution(projection, viewState.resolution, center, pointResolutionUnits);\n    if (projection.getUnits() != ProjUnits.DEGREES && projection.getMetersPerUnit()\n      && pointResolutionUnits == ProjUnits.METERS) {\n      pointResolution *= projection.getMetersPerUnit();\n    }\n\n    var nominalCount = this.minWidth_ * pointResolution;\n    var suffix = '';\n    if (units == Units.DEGREES) {\n      var metersPerDegree = METERS_PER_UNIT[ProjUnits.DEGREES];\n      if (projection.getUnits() == ProjUnits.DEGREES) {\n        nominalCount *= metersPerDegree;\n      } else {\n        pointResolution /= metersPerDegree;\n      }\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == Units.IMPERIAL) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == Units.NAUTICAL) {\n      pointResolution /= 1852;\n      suffix = 'nm';\n    } else if (units == Units.METRIC) {\n      if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == Units.US) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      assert(false, 33); // Invalid units\n    }\n\n    var i = 3 * Math.floor(\n      Math.log(this.minWidth_ * pointResolution) / Math.log(10));\n    var count, width;\n    while (true) {\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] *\n          Math.pow(10, Math.floor(i / 3));\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      } else if (width >= this.minWidth_) {\n        break;\n      }\n      ++i;\n    }\n\n    var html;\n    if (this.scaleBar_) {\n      html = this.createScaleBar(width, count, suffix);\n    } else {\n      html = count + ' ' + suffix;\n    }\n\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n  };\n\n  /**\n   * @private\n   * @param {number} width The current width of the scalebar.\n   * @param {number} scale The current scale.\n   * @param {string} suffix The suffix to append to the scale text.\n   * @returns {string} The stringified HTML of the scalebar.\n   */\n  ScaleLine.prototype.createScaleBar = function createScaleBar (width, scale, suffix) {\n    var mapScale = '1 : ' + Math.round(this.getScaleForResolution()).toLocaleString();\n    var scaleSteps = [];\n    var stepWidth = width / this.scaleBarSteps_;\n    var backgroundColor = '#ffffff';\n    for (var i = 0; i < this.scaleBarSteps_; i++) {\n      if (i === 0) {\n        // create the first marker at position 0\n        scaleSteps.push(this.createMarker('absolute', i));\n      }\n      scaleSteps.push(\n        '<div>' +\n          '<div ' +\n            'class=\"ol-scale-singlebar\" ' +\n            'style=' +\n              '\"width: ' + stepWidth + 'px;' +\n              'background-color: ' + backgroundColor + ';\"' +\n          '>' +\n          '</div>' +\n          this.createMarker('relative', i) +\n          /*render text every second step, except when only 2 steps */\n          (i % 2 === 0 || this.scaleBarSteps_ === 2 ?\n            this.createStepText(i, width, false, scale, suffix) :\n            ''\n          ) +\n        '</div>'\n      );\n      if (i === this.scaleBarSteps_ - 1) {\n        {/*render text at the end */}\n        scaleSteps.push(this.createStepText(i + 1, width, true, scale, suffix));\n      }\n      // switch colors of steps between black and white\n      if (backgroundColor === '#ffffff') {\n        backgroundColor = '#000000';\n      } else {\n        backgroundColor = '#ffffff';\n      }\n    }\n\n    var scaleBarText;\n    if (this.scaleBarText_) {\n      scaleBarText = '<div ' +\n      'class=\"ol-scale-text\" ' +\n      'style=\"width: ' + width + 'px;\">' +\n      mapScale +\n    '</div>';\n    } else {\n      scaleBarText = '';\n    }\n    var container = '<div ' +\n      'style=\"display: flex;\">' +\n      scaleBarText +\n      scaleSteps.join('') +\n    '</div>';\n    return container;\n  };\n\n  /**\n   * Creates a marker at given position\n   * @param {string} position - The position, absolute or relative\n   * @param {number} i - The iterator\n   * @returns {string} The stringified div containing the marker\n   */\n  ScaleLine.prototype.createMarker = function createMarker (position, i) {\n    var top = position === 'absolute' ? 3 : -10;\n    return '<div ' +\n        'class=\"ol-scale-step-marker\" ' +\n        'style=\"position: ' + position + ';' +\n          'top: ' + top + 'px;\"' +\n      '></div>';\n  };\n\n  /**\n   * Creates the label for a marker marker at given position\n   * @param {number} i - The iterator\n   * @param {number} width - The width the scalebar will currently use\n   * @param {boolean} isLast - Flag indicating if we add the last step text\n   * @param {number} scale - The current scale for the whole scalebar\n   * @param {string} suffix - The suffix for the scale\n   * @returns {string} The stringified div containing the step text\n   */\n  ScaleLine.prototype.createStepText = function createStepText (i, width, isLast, scale, suffix) {\n    var length = i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_ * i) * 100) / 100;\n    var lengthString = length + (i === 0 ? '' : ' ' + suffix);\n    var margin = i === 0 ? -3 : width / this.scaleBarSteps_ * -1;\n    var minWidth = i === 0 ? 0 : width / this.scaleBarSteps_ * 2;\n    return '<div ' +\n      'class=\"ol-scale-step-text\" ' +\n      'style=\"' +\n        'margin-left: ' + margin + 'px;' +\n        'text-align: ' + (i === 0 ? 'left' : 'center') + '; ' +\n        'min-width: ' + minWidth + 'px;' +\n        'left: ' + (isLast ? width + 'px' : 'unset') + ';\"' +\n      '>' +\n      lengthString +\n    '</div>';\n  };\n\n  /**\n   * Returns the appropriate scale for the given resolution and units.\n   * @return {number} The appropriate scale.\n   */\n  ScaleLine.prototype.getScaleForResolution = function getScaleForResolution () {\n    var resolution = this.getMap().getView().getResolution();\n    var dpi = 25.4 / 0.28;\n    var mpu = this.viewState_.projection.getMetersPerUnit();\n    var inchesPerMeter = 39.37;\n    return parseFloat(resolution.toString()) * mpu * inchesPerMeter * dpi;\n  };\n\n  return ScaleLine;\n}(Control));\n\n/**\n * Update the scale line element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {ScaleLine}\n * @api\n */\nexport function render(mapEvent) {\n  var frameState = mapEvent.frameState;\n  if (!frameState) {\n    this.viewState_ = null;\n  } else {\n    this.viewState_ = frameState.viewState;\n  }\n  this.updateElement_();\n}\n\n\nexport default ScaleLine;\n\n//# sourceMappingURL=ScaleLine.js.map","/**\n * @module ol/control/ZoomSlider\n */\nimport ViewHint from '../ViewHint.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {stopPropagation} from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {clamp} from '../math.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport PointerEventHandler from '../pointer/PointerEventHandler.js';\n\n\n/**\n * The enum for available directions.\n *\n * @enum {number}\n */\nvar Direction = {\n  VERTICAL: 0,\n  HORIZONTAL: 1\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoomslider'] CSS class name.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {function(import(\"../MapEvent.js\").default)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n */\n\n\n/**\n * @classdesc\n * A slider type of control for zooming.\n *\n * Example:\n *\n *     map.addControl(new ZoomSlider());\n *\n * @api\n */\nvar ZoomSlider = /*@__PURE__*/(function (Control) {\n  function ZoomSlider(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render\n    });\n\n    /**\n      * @type {!Array.<import(\"../events.js\").EventsKey>}\n      * @private\n      */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * Will hold the current resolution of the view.\n     *\n     * @type {number|undefined}\n     * @private\n     */\n    this.currentResolution_ = undefined;\n\n    /**\n     * The direction of the slider. Will be determined from actual display of the\n     * container and defaults to Direction.VERTICAL.\n     *\n     * @type {Direction}\n     * @private\n     */\n    this.direction_ = Direction.VERTICAL;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.heightLimit_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.widthLimit_ = 0;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.previousX_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.previousY_;\n\n    /**\n     * The calculated thumb size (border box plus margins).  Set when initSlider_\n     * is called.\n     * @type {import(\"../size.js\").Size}\n     * @private\n     */\n    this.thumbSize_ = null;\n\n    /**\n     * Whether the slider is initialized.\n     * @type {boolean}\n     * @private\n     */\n    this.sliderInitialized_ = false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    var className = options.className !== undefined ? options.className : 'ol-zoomslider';\n    var thumbElement = document.createElement('button');\n    thumbElement.setAttribute('type', 'button');\n    thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\n    var containerElement = this.element;\n    containerElement.className = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    containerElement.appendChild(thumbElement);\n    /**\n     * @type {PointerEventHandler}\n     * @private\n     */\n    this.dragger_ = new PointerEventHandler(containerElement);\n\n    listen(this.dragger_, PointerEventType.POINTERDOWN,\n      this.handleDraggerStart_, this);\n    listen(this.dragger_, PointerEventType.POINTERMOVE,\n      this.handleDraggerDrag_, this);\n    listen(this.dragger_, PointerEventType.POINTERUP,\n      this.handleDraggerEnd_, this);\n\n    listen(containerElement, EventType.CLICK, this.handleContainerClick_, this);\n    listen(thumbElement, EventType.CLICK, stopPropagation);\n  }\n\n  if ( Control ) ZoomSlider.__proto__ = Control;\n  ZoomSlider.prototype = Object.create( Control && Control.prototype );\n  ZoomSlider.prototype.constructor = ZoomSlider;\n\n  /**\n   * @inheritDoc\n   */\n  ZoomSlider.prototype.disposeInternal = function disposeInternal () {\n    this.dragger_.dispose();\n    Control.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ZoomSlider.prototype.setMap = function setMap (map) {\n    Control.prototype.setMap.call(this, map);\n    if (map) {\n      map.render();\n    }\n  };\n\n  /**\n   * Initializes the slider element. This will determine and set this controls\n   * direction_ and also constrain the dragging of the thumb to always be within\n   * the bounds of the container.\n   *\n   * @private\n   */\n  ZoomSlider.prototype.initSlider_ = function initSlider_ () {\n    var container = this.element;\n    var containerSize = {\n      width: container.offsetWidth, height: container.offsetHeight\n    };\n\n    var thumb = /** @type {HTMLElement} */ (container.firstElementChild);\n    var computedStyle = getComputedStyle(thumb);\n    var thumbWidth = thumb.offsetWidth +\n        parseFloat(computedStyle['marginRight']) +\n        parseFloat(computedStyle['marginLeft']);\n    var thumbHeight = thumb.offsetHeight +\n        parseFloat(computedStyle['marginTop']) +\n        parseFloat(computedStyle['marginBottom']);\n    this.thumbSize_ = [thumbWidth, thumbHeight];\n\n    if (containerSize.width > containerSize.height) {\n      this.direction_ = Direction.HORIZONTAL;\n      this.widthLimit_ = containerSize.width - thumbWidth;\n    } else {\n      this.direction_ = Direction.VERTICAL;\n      this.heightLimit_ = containerSize.height - thumbHeight;\n    }\n    this.sliderInitialized_ = true;\n  };\n\n  /**\n   * @param {MouseEvent} event The browser event to handle.\n   * @private\n   */\n  ZoomSlider.prototype.handleContainerClick_ = function handleContainerClick_ (event) {\n    var view = this.getMap().getView();\n\n    var relativePosition = this.getRelativePosition_(\n      event.offsetX - this.thumbSize_[0] / 2,\n      event.offsetY - this.thumbSize_[1] / 2);\n\n    var resolution = this.getResolutionForPosition_(relativePosition);\n\n    view.animate({\n      resolution: view.constrainResolution(resolution),\n      duration: this.duration_,\n      easing: easeOut\n    });\n  };\n\n  /**\n   * Handle dragger start events.\n   * @param {import(\"../pointer/PointerEvent.js\").default} event The drag event.\n   * @private\n   */\n  ZoomSlider.prototype.handleDraggerStart_ = function handleDraggerStart_ (event) {\n    if (!this.dragging_ && event.originalEvent.target === this.element.firstElementChild) {\n      this.getMap().getView().setHint(ViewHint.INTERACTING, 1);\n      this.previousX_ = event.clientX;\n      this.previousY_ = event.clientY;\n      this.dragging_ = true;\n\n      if (this.dragListenerKeys_.length === 0) {\n        var drag = this.handleDraggerDrag_;\n        var end = this.handleDraggerEnd_;\n        this.dragListenerKeys_.push(\n          listen(document, EventType.MOUSEMOVE, drag, this),\n          listen(document, PointerEventType.POINTERMOVE, drag, this),\n          listen(document, EventType.MOUSEUP, end, this),\n          listen(document, PointerEventType.POINTERUP, end, this)\n        );\n      }\n    }\n  };\n\n  /**\n   * Handle dragger drag events.\n   *\n   * @param {import(\"../pointer/PointerEvent.js\").default} event The drag event.\n   * @private\n   */\n  ZoomSlider.prototype.handleDraggerDrag_ = function handleDraggerDrag_ (event) {\n    if (this.dragging_) {\n      var element = /** @type {HTMLElement} */ (this.element.firstElementChild);\n      var deltaX = event.clientX - this.previousX_ + parseFloat(element.style.left);\n      var deltaY = event.clientY - this.previousY_ + parseFloat(element.style.top);\n      var relativePosition = this.getRelativePosition_(deltaX, deltaY);\n      this.currentResolution_ = this.getResolutionForPosition_(relativePosition);\n      this.getMap().getView().setResolution(this.currentResolution_);\n      this.setThumbPosition_(this.currentResolution_);\n      this.previousX_ = event.clientX;\n      this.previousY_ = event.clientY;\n    }\n  };\n\n  /**\n   * Handle dragger end events.\n   * @param {import(\"../pointer/PointerEvent.js\").default} event The drag event.\n   * @private\n   */\n  ZoomSlider.prototype.handleDraggerEnd_ = function handleDraggerEnd_ (event) {\n    if (this.dragging_) {\n      var view = this.getMap().getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n\n      view.animate({\n        resolution: view.constrainResolution(this.currentResolution_),\n        duration: this.duration_,\n        easing: easeOut\n      });\n\n      this.dragging_ = false;\n      this.previousX_ = undefined;\n      this.previousY_ = undefined;\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n    }\n  };\n\n  /**\n   * Positions the thumb inside its container according to the given resolution.\n   *\n   * @param {number} res The res.\n   * @private\n   */\n  ZoomSlider.prototype.setThumbPosition_ = function setThumbPosition_ (res) {\n    var position = this.getPositionForResolution_(res);\n    var thumb = /** @type {HTMLElement} */ (this.element.firstElementChild);\n\n    if (this.direction_ == Direction.HORIZONTAL) {\n      thumb.style.left = this.widthLimit_ * position + 'px';\n    } else {\n      thumb.style.top = this.heightLimit_ * position + 'px';\n    }\n  };\n\n  /**\n   * Calculates the relative position of the thumb given x and y offsets.  The\n   * relative position scales from 0 to 1.  The x and y offsets are assumed to be\n   * in pixel units within the dragger limits.\n   *\n   * @param {number} x Pixel position relative to the left of the slider.\n   * @param {number} y Pixel position relative to the top of the slider.\n   * @return {number} The relative position of the thumb.\n   * @private\n   */\n  ZoomSlider.prototype.getRelativePosition_ = function getRelativePosition_ (x, y) {\n    var amount;\n    if (this.direction_ === Direction.HORIZONTAL) {\n      amount = x / this.widthLimit_;\n    } else {\n      amount = y / this.heightLimit_;\n    }\n    return clamp(amount, 0, 1);\n  };\n\n  /**\n   * Calculates the corresponding resolution of the thumb given its relative\n   * position (where 0 is the minimum and 1 is the maximum).\n   *\n   * @param {number} position The relative position of the thumb.\n   * @return {number} The corresponding resolution.\n   * @private\n   */\n  ZoomSlider.prototype.getResolutionForPosition_ = function getResolutionForPosition_ (position) {\n    var fn = this.getMap().getView().getResolutionForValueFunction();\n    return fn(1 - position);\n  };\n\n  /**\n   * Determines the relative position of the slider for the given resolution.  A\n   * relative position of 0 corresponds to the minimum view resolution.  A\n   * relative position of 1 corresponds to the maximum view resolution.\n   *\n   * @param {number} res The resolution.\n   * @return {number} The relative position value (between 0 and 1).\n   * @private\n   */\n  ZoomSlider.prototype.getPositionForResolution_ = function getPositionForResolution_ (res) {\n    var fn = this.getMap().getView().getValueForResolutionFunction();\n    return 1 - fn(res);\n  };\n\n  return ZoomSlider;\n}(Control));\n\n\n/**\n * Update the zoomslider element.\n * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n * @this {ZoomSlider}\n * @api\n */\nexport function render(mapEvent) {\n  if (!mapEvent.frameState) {\n    return;\n  }\n  if (!this.sliderInitialized_) {\n    this.initSlider_();\n  }\n  var res = mapEvent.frameState.viewState.resolution;\n  if (res !== this.currentResolution_) {\n    this.currentResolution_ = res;\n    this.setThumbPosition_(res);\n  }\n}\n\n\nexport default ZoomSlider;\n\n//# sourceMappingURL=ZoomSlider.js.map","/**\n * @module ol/control/ZoomToExtent\n */\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {import(\"../extent.js\").Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n\n\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @api\n */\nvar ZoomToExtent = /*@__PURE__*/(function (Control) {\n  function ZoomToExtent(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @protected\n     */\n    this.extent = options.extent ? options.extent : null;\n\n    var className = options.className !== undefined ? options.className : 'ol-zoom-extent';\n\n    var label = options.label !== undefined ? options.label : 'E';\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(\n      typeof label === 'string' ? document.createTextNode(label) : label\n    );\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n  }\n\n  if ( Control ) ZoomToExtent.__proto__ = Control;\n  ZoomToExtent.prototype = Object.create( Control && Control.prototype );\n  ZoomToExtent.prototype.constructor = ZoomToExtent;\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  ZoomToExtent.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleZoomToExtent();\n  };\n\n  /**\n   * @protected\n   */\n  ZoomToExtent.prototype.handleZoomToExtent = function handleZoomToExtent () {\n    var map = this.getMap();\n    var view = map.getView();\n    var extent = !this.extent ? view.getProjection().getExtent() : this.extent;\n    view.fit(extent);\n  };\n\n  return ZoomToExtent;\n}(Control));\n\nexport default ZoomToExtent;\n\n//# sourceMappingURL=ZoomToExtent.js.map","import $ol$Collection from './ol/Collection';\nimport $ol$Feature from './ol/Feature';\nimport $ol$Geolocation from './ol/Geolocation';\nimport $ol$Kinetic from './ol/Kinetic';\nimport $ol$Map from './ol/Map';\nimport $ol$Object from './ol/Object';\nimport $ol$Observable from './ol/Observable';\nimport {unByKey as _ol_Observable$unByKey} from './ol/Observable';\nimport $ol$Overlay from './ol/Overlay';\nimport $ol$PluggableMap from './ol/PluggableMap';\nimport $ol$View from './ol/View';\nimport {stableSort as _ol_array$stableSort} from './ol/array';\nimport {asString as _ol_color$asString} from './ol/color';\nimport {asArray as _ol_color$asArray} from './ol/color';\nimport {asColorLike as _ol_colorlike$asColorLike} from './ol/colorlike';\nimport {add as _ol_coordinate$add} from './ol/coordinate';\nimport {createStringXY as _ol_coordinate$createStringXY} from './ol/coordinate';\nimport {format as _ol_coordinate$format} from './ol/coordinate';\nimport {rotate as _ol_coordinate$rotate} from './ol/coordinate';\nimport {toStringHDMS as _ol_coordinate$toStringHDMS} from './ol/coordinate';\nimport {toStringXY as _ol_coordinate$toStringXY} from './ol/coordinate';\nimport {easeIn as _ol_easing$easeIn} from './ol/easing';\nimport {easeOut as _ol_easing$easeOut} from './ol/easing';\nimport {inAndOut as _ol_easing$inAndOut} from './ol/easing';\nimport {linear as _ol_easing$linear} from './ol/easing';\nimport {upAndDown as _ol_easing$upAndDown} from './ol/easing';\nimport {boundingExtent as _ol_extent$boundingExtent} from './ol/extent';\nimport {buffer as _ol_extent$buffer} from './ol/extent';\nimport {containsCoordinate as _ol_extent$containsCoordinate} from './ol/extent';\nimport {containsExtent as _ol_extent$containsExtent} from './ol/extent';\nimport {containsXY as _ol_extent$containsXY} from './ol/extent';\nimport {createEmpty as _ol_extent$createEmpty} from './ol/extent';\nimport {equals as _ol_extent$equals} from './ol/extent';\nimport {extend as _ol_extent$extend} from './ol/extent';\nimport {getArea as _ol_extent$getArea} from './ol/extent';\nimport {getBottomLeft as _ol_extent$getBottomLeft} from './ol/extent';\nimport {getBottomRight as _ol_extent$getBottomRight} from './ol/extent';\nimport {getCenter as _ol_extent$getCenter} from './ol/extent';\nimport {getHeight as _ol_extent$getHeight} from './ol/extent';\nimport {getIntersection as _ol_extent$getIntersection} from './ol/extent';\nimport {getSize as _ol_extent$getSize} from './ol/extent';\nimport {getTopLeft as _ol_extent$getTopLeft} from './ol/extent';\nimport {getTopRight as _ol_extent$getTopRight} from './ol/extent';\nimport {getWidth as _ol_extent$getWidth} from './ol/extent';\nimport {intersects as _ol_extent$intersects} from './ol/extent';\nimport {isEmpty as _ol_extent$isEmpty} from './ol/extent';\nimport {applyTransform as _ol_extent$applyTransform} from './ol/extent';\nimport {xhr as _ol_featureloader$xhr} from './ol/featureloader';\nimport {DEVICE_PIXEL_RATIO as _ol_has$DEVICE_PIXEL_RATIO} from './ol/has';\nimport {GEOLOCATION as _ol_has$GEOLOCATION} from './ol/has';\nimport {TOUCH as _ol_has$TOUCH} from './ol/has';\nimport {defaults as _ol_interaction$defaults} from './ol/interaction';\nimport {all as _ol_loadingstrategy$all} from './ol/loadingstrategy';\nimport {bbox as _ol_loadingstrategy$bbox} from './ol/loadingstrategy';\nimport {tile as _ol_loadingstrategy$tile} from './ol/loadingstrategy';\nimport {addProjection as _ol_proj$addProjection} from './ol/proj';\nimport {get as _ol_proj$get} from './ol/proj';\nimport {getPointResolution as _ol_proj$getPointResolution} from './ol/proj';\nimport {addEquivalentProjections as _ol_proj$addEquivalentProjections} from './ol/proj';\nimport {addCoordinateTransforms as _ol_proj$addCoordinateTransforms} from './ol/proj';\nimport {fromLonLat as _ol_proj$fromLonLat} from './ol/proj';\nimport {toLonLat as _ol_proj$toLonLat} from './ol/proj';\nimport {equivalent as _ol_proj$equivalent} from './ol/proj';\nimport {getTransform as _ol_proj$getTransform} from './ol/proj';\nimport {transform as _ol_proj$transform} from './ol/proj';\nimport {transformExtent as _ol_proj$transformExtent} from './ol/proj';\nimport {toContext as _ol_render$toContext} from './ol/render';\nimport {getVectorContext as _ol_render$getVectorContext} from './ol/render';\nimport {getRenderPixel as _ol_render$getRenderPixel} from './ol/render';\nimport {toSize as _ol_size$toSize} from './ol/size';\nimport {getDistance as _ol_sphere$getDistance} from './ol/sphere';\nimport {getLength as _ol_sphere$getLength} from './ol/sphere';\nimport {getArea as _ol_sphere$getArea} from './ol/sphere';\nimport {createXYZ as _ol_tilegrid$createXYZ} from './ol/tilegrid';\nimport {getUid as _ol$getUid} from './ol';\nimport {getAllTextContent as _ol_xml$getAllTextContent} from './ol/xml';\nimport {parse as _ol_xml$parse} from './ol/xml';\nimport $ol$webgl$Helper from './ol/webgl/Helper';\nimport $ol$webgl$PostProcessingPass from './ol/webgl/PostProcessingPass';\nimport $ol$tilegrid$TileGrid from './ol/tilegrid/TileGrid';\nimport $ol$tilegrid$WMTS from './ol/tilegrid/WMTS';\nimport {createFromCapabilitiesMatrixSet as _ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet} from './ol/tilegrid/WMTS';\nimport $ol$style$Circle from './ol/style/Circle';\nimport $ol$style$Fill from './ol/style/Fill';\nimport $ol$style$Icon from './ol/style/Icon';\nimport {shared as _ol_style_IconImageCache$shared} from './ol/style/IconImageCache';\nimport $ol$style$Image from './ol/style/Image';\nimport $ol$style$RegularShape from './ol/style/RegularShape';\nimport $ol$style$Stroke from './ol/style/Stroke';\nimport $ol$style$Style from './ol/style/Style';\nimport $ol$style$Text from './ol/style/Text';\nimport $ol$source$BingMaps from './ol/source/BingMaps';\nimport $ol$source$CartoDB from './ol/source/CartoDB';\nimport $ol$source$Cluster from './ol/source/Cluster';\nimport $ol$source$Image from './ol/source/Image';\nimport $ol$source$ImageArcGISRest from './ol/source/ImageArcGISRest';\nimport $ol$source$ImageCanvas from './ol/source/ImageCanvas';\nimport $ol$source$ImageMapGuide from './ol/source/ImageMapGuide';\nimport $ol$source$ImageStatic from './ol/source/ImageStatic';\nimport $ol$source$ImageWMS from './ol/source/ImageWMS';\nimport {ATTRIBUTION as _ol_source_OSM$ATTRIBUTION} from './ol/source/OSM';\nimport $ol$source$OSM from './ol/source/OSM';\nimport $ol$source$Raster from './ol/source/Raster';\nimport $ol$source$Source from './ol/source/Source';\nimport $ol$source$Stamen from './ol/source/Stamen';\nimport $ol$source$Tile from './ol/source/Tile';\nimport $ol$source$TileArcGISRest from './ol/source/TileArcGISRest';\nimport $ol$source$TileDebug from './ol/source/TileDebug';\nimport $ol$source$TileImage from './ol/source/TileImage';\nimport $ol$source$TileJSON from './ol/source/TileJSON';\nimport $ol$source$TileWMS from './ol/source/TileWMS';\nimport $ol$source$UTFGrid from './ol/source/UTFGrid';\nimport $ol$source$Vector from './ol/source/Vector';\nimport $ol$source$VectorTile from './ol/source/VectorTile';\nimport $ol$source$WMTS from './ol/source/WMTS';\nimport {optionsFromCapabilities as _ol_source_WMTS$optionsFromCapabilities} from './ol/source/WMTS';\nimport $ol$source$XYZ from './ol/source/XYZ';\nimport $ol$source$Zoomify from './ol/source/Zoomify';\nimport $ol$renderer$Composite from './ol/renderer/Composite';\nimport $ol$renderer$webgl$PointsLayer from './ol/renderer/webgl/PointsLayer';\nimport $ol$renderer$canvas$ImageLayer from './ol/renderer/canvas/ImageLayer';\nimport $ol$renderer$canvas$TileLayer from './ol/renderer/canvas/TileLayer';\nimport $ol$renderer$canvas$VectorLayer from './ol/renderer/canvas/VectorLayer';\nimport $ol$renderer$canvas$VectorTileLayer from './ol/renderer/canvas/VectorTileLayer';\nimport $ol$render$VectorContext from './ol/render/VectorContext';\nimport {labelCache as _ol_render_canvas$labelCache} from './ol/render/canvas';\nimport $ol$proj$Projection from './ol/proj/Projection';\nimport {METERS_PER_UNIT as _ol_proj_Units$METERS_PER_UNIT} from './ol/proj/Units';\nimport {register as _ol_proj_proj4$register} from './ol/proj/proj4';\nimport $ol$layer$Base from './ol/layer/Base';\nimport $ol$layer$BaseImage from './ol/layer/BaseImage';\nimport $ol$layer$BaseTile from './ol/layer/BaseTile';\nimport $ol$layer$BaseVector from './ol/layer/BaseVector';\nimport $ol$layer$Graticule from './ol/layer/Graticule';\nimport $ol$layer$Group from './ol/layer/Group';\nimport $ol$layer$Heatmap from './ol/layer/Heatmap';\nimport $ol$layer$Image from './ol/layer/Image';\nimport $ol$layer$Tile from './ol/layer/Tile';\nimport $ol$layer$Vector from './ol/layer/Vector';\nimport $ol$layer$VectorImage from './ol/layer/VectorImage';\nimport $ol$layer$VectorTile from './ol/layer/VectorTile';\nimport $ol$interaction$DoubleClickZoom from './ol/interaction/DoubleClickZoom';\nimport $ol$interaction$DragAndDrop from './ol/interaction/DragAndDrop';\nimport $ol$interaction$DragBox from './ol/interaction/DragBox';\nimport $ol$interaction$DragPan from './ol/interaction/DragPan';\nimport $ol$interaction$DragRotate from './ol/interaction/DragRotate';\nimport $ol$interaction$DragRotateAndZoom from './ol/interaction/DragRotateAndZoom';\nimport $ol$interaction$DragZoom from './ol/interaction/DragZoom';\nimport $ol$interaction$Draw from './ol/interaction/Draw';\nimport {createRegularPolygon as _ol_interaction_Draw$createRegularPolygon} from './ol/interaction/Draw';\nimport {createBox as _ol_interaction_Draw$createBox} from './ol/interaction/Draw';\nimport $ol$interaction$Extent from './ol/interaction/Extent';\nimport $ol$interaction$Interaction from './ol/interaction/Interaction';\nimport $ol$interaction$KeyboardPan from './ol/interaction/KeyboardPan';\nimport $ol$interaction$KeyboardZoom from './ol/interaction/KeyboardZoom';\nimport $ol$interaction$Modify from './ol/interaction/Modify';\nimport $ol$interaction$MouseWheelZoom from './ol/interaction/MouseWheelZoom';\nimport $ol$interaction$PinchRotate from './ol/interaction/PinchRotate';\nimport $ol$interaction$PinchZoom from './ol/interaction/PinchZoom';\nimport $ol$interaction$Pointer from './ol/interaction/Pointer';\nimport $ol$interaction$Select from './ol/interaction/Select';\nimport $ol$interaction$Snap from './ol/interaction/Snap';\nimport $ol$interaction$Translate from './ol/interaction/Translate';\nimport $ol$geom$Circle from './ol/geom/Circle';\nimport $ol$geom$Geometry from './ol/geom/Geometry';\nimport $ol$geom$GeometryCollection from './ol/geom/GeometryCollection';\nimport $ol$geom$LineString from './ol/geom/LineString';\nimport $ol$geom$LinearRing from './ol/geom/LinearRing';\nimport $ol$geom$MultiLineString from './ol/geom/MultiLineString';\nimport $ol$geom$MultiPoint from './ol/geom/MultiPoint';\nimport $ol$geom$MultiPolygon from './ol/geom/MultiPolygon';\nimport $ol$geom$Point from './ol/geom/Point';\nimport $ol$geom$Polygon from './ol/geom/Polygon';\nimport {circular as _ol_geom_Polygon$circular} from './ol/geom/Polygon';\nimport {fromExtent as _ol_geom_Polygon$fromExtent} from './ol/geom/Polygon';\nimport {fromCircle as _ol_geom_Polygon$fromCircle} from './ol/geom/Polygon';\nimport $ol$geom$SimpleGeometry from './ol/geom/SimpleGeometry';\nimport $ol$format$EsriJSON from './ol/format/EsriJSON';\nimport $ol$format$Feature from './ol/format/Feature';\nimport $ol$format$GML from './ol/format/GML';\nimport $ol$format$GML2 from './ol/format/GML2';\nimport $ol$format$GML3 from './ol/format/GML3';\nimport $ol$format$GML32 from './ol/format/GML32';\nimport $ol$format$GPX from './ol/format/GPX';\nimport $ol$format$GeoJSON from './ol/format/GeoJSON';\nimport $ol$format$IGC from './ol/format/IGC';\nimport $ol$format$KML from './ol/format/KML';\nimport $ol$format$MVT from './ol/format/MVT';\nimport $ol$format$OSMXML from './ol/format/OSMXML';\nimport $ol$format$Polyline from './ol/format/Polyline';\nimport {encodeDeltas as _ol_format_Polyline$encodeDeltas} from './ol/format/Polyline';\nimport {decodeDeltas as _ol_format_Polyline$decodeDeltas} from './ol/format/Polyline';\nimport {encodeFloats as _ol_format_Polyline$encodeFloats} from './ol/format/Polyline';\nimport {decodeFloats as _ol_format_Polyline$decodeFloats} from './ol/format/Polyline';\nimport $ol$format$TopoJSON from './ol/format/TopoJSON';\nimport $ol$format$WFS from './ol/format/WFS';\nimport {writeFilter as _ol_format_WFS$writeFilter} from './ol/format/WFS';\nimport $ol$format$WKT from './ol/format/WKT';\nimport $ol$format$WMSCapabilities from './ol/format/WMSCapabilities';\nimport $ol$format$WMSGetFeatureInfo from './ol/format/WMSGetFeatureInfo';\nimport $ol$format$WMTSCapabilities from './ol/format/WMTSCapabilities';\nimport {and as _ol_format_filter$and} from './ol/format/filter';\nimport {or as _ol_format_filter$or} from './ol/format/filter';\nimport {not as _ol_format_filter$not} from './ol/format/filter';\nimport {bbox as _ol_format_filter$bbox} from './ol/format/filter';\nimport {contains as _ol_format_filter$contains} from './ol/format/filter';\nimport {intersects as _ol_format_filter$intersects} from './ol/format/filter';\nimport {within as _ol_format_filter$within} from './ol/format/filter';\nimport {equalTo as _ol_format_filter$equalTo} from './ol/format/filter';\nimport {notEqualTo as _ol_format_filter$notEqualTo} from './ol/format/filter';\nimport {lessThan as _ol_format_filter$lessThan} from './ol/format/filter';\nimport {lessThanOrEqualTo as _ol_format_filter$lessThanOrEqualTo} from './ol/format/filter';\nimport {greaterThan as _ol_format_filter$greaterThan} from './ol/format/filter';\nimport {greaterThanOrEqualTo as _ol_format_filter$greaterThanOrEqualTo} from './ol/format/filter';\nimport {isNull as _ol_format_filter$isNull} from './ol/format/filter';\nimport {between as _ol_format_filter$between} from './ol/format/filter';\nimport {like as _ol_format_filter$like} from './ol/format/filter';\nimport {during as _ol_format_filter$during} from './ol/format/filter';\nimport $ol$format$filter$Bbox from './ol/format/filter/Bbox';\nimport $ol$format$filter$Contains from './ol/format/filter/Contains';\nimport $ol$format$filter$During from './ol/format/filter/During';\nimport $ol$format$filter$EqualTo from './ol/format/filter/EqualTo';\nimport $ol$format$filter$GreaterThan from './ol/format/filter/GreaterThan';\nimport $ol$format$filter$GreaterThanOrEqualTo from './ol/format/filter/GreaterThanOrEqualTo';\nimport $ol$format$filter$Intersects from './ol/format/filter/Intersects';\nimport $ol$format$filter$IsBetween from './ol/format/filter/IsBetween';\nimport $ol$format$filter$IsLike from './ol/format/filter/IsLike';\nimport $ol$format$filter$IsNull from './ol/format/filter/IsNull';\nimport $ol$format$filter$LessThan from './ol/format/filter/LessThan';\nimport $ol$format$filter$LessThanOrEqualTo from './ol/format/filter/LessThanOrEqualTo';\nimport $ol$format$filter$Not from './ol/format/filter/Not';\nimport $ol$format$filter$NotEqualTo from './ol/format/filter/NotEqualTo';\nimport $ol$format$filter$Or from './ol/format/filter/Or';\nimport $ol$format$filter$Within from './ol/format/filter/Within';\nimport {altKeyOnly as _ol_events_condition$altKeyOnly} from './ol/events/condition';\nimport {altShiftKeysOnly as _ol_events_condition$altShiftKeysOnly} from './ol/events/condition';\nimport {focus as _ol_events_condition$focus} from './ol/events/condition';\nimport {always as _ol_events_condition$always} from './ol/events/condition';\nimport {click as _ol_events_condition$click} from './ol/events/condition';\nimport {never as _ol_events_condition$never} from './ol/events/condition';\nimport {pointerMove as _ol_events_condition$pointerMove} from './ol/events/condition';\nimport {singleClick as _ol_events_condition$singleClick} from './ol/events/condition';\nimport {doubleClick as _ol_events_condition$doubleClick} from './ol/events/condition';\nimport {noModifierKeys as _ol_events_condition$noModifierKeys} from './ol/events/condition';\nimport {platformModifierKeyOnly as _ol_events_condition$platformModifierKeyOnly} from './ol/events/condition';\nimport {shiftKeyOnly as _ol_events_condition$shiftKeyOnly} from './ol/events/condition';\nimport {targetNotEditable as _ol_events_condition$targetNotEditable} from './ol/events/condition';\nimport {mouseOnly as _ol_events_condition$mouseOnly} from './ol/events/condition';\nimport {primaryAction as _ol_events_condition$primaryAction} from './ol/events/condition';\nimport $ol$control$Attribution from './ol/control/Attribution';\nimport {render as _ol_control_Attribution$render} from './ol/control/Attribution';\nimport $ol$control$Control from './ol/control/Control';\nimport $ol$control$FullScreen from './ol/control/FullScreen';\nimport $ol$control$MousePosition from './ol/control/MousePosition';\nimport {render as _ol_control_MousePosition$render} from './ol/control/MousePosition';\nimport $ol$control$OverviewMap from './ol/control/OverviewMap';\nimport {render as _ol_control_OverviewMap$render} from './ol/control/OverviewMap';\nimport $ol$control$Rotate from './ol/control/Rotate';\nimport {render as _ol_control_Rotate$render} from './ol/control/Rotate';\nimport $ol$control$ScaleLine from './ol/control/ScaleLine';\nimport {render as _ol_control_ScaleLine$render} from './ol/control/ScaleLine';\nimport $ol$control$Zoom from './ol/control/Zoom';\nimport $ol$control$ZoomSlider from './ol/control/ZoomSlider';\nimport {render as _ol_control_ZoomSlider$render} from './ol/control/ZoomSlider';\nimport $ol$control$ZoomToExtent from './ol/control/ZoomToExtent';\nimport {defaults as _ol_control$defaults} from './ol/control';\n\nvar ol = {};\n\nol.array = {};\nol.color = {};\nol.colorlike = {};\nol.control = {};\nol.coordinate = {};\nol.easing = {};\nol.events = {};\nol.events.condition = {};\nol.extent = {};\nol.featureloader = {};\nol.format = {};\nol.format.filter = {};\nol.geom = {};\nol.has = {};\nol.interaction = {};\nol.layer = {};\nol.loadingstrategy = {};\nol.proj = {};\nol.proj.Units = {};\nol.proj.proj4 = {};\nol.render = {};\nol.render.canvas = {};\nol.renderer = {};\nol.renderer.canvas = {};\nol.renderer.webgl = {};\nol.size = {};\nol.source = {};\nol.sphere = {};\nol.style = {};\nol.style.IconImageCache = {};\nol.tilegrid = {};\nol.webgl = {};\nol.xml = {};\nol.Collection = $ol$Collection;\nol.Feature = $ol$Feature;\nol.Geolocation = $ol$Geolocation;\nol.Kinetic = $ol$Kinetic;\nol.Map = $ol$Map;\nol.Object = $ol$Object;\nol.Observable = $ol$Observable;\nol.Observable.unByKey = _ol_Observable$unByKey;\nol.Overlay = $ol$Overlay;\nol.PluggableMap = $ol$PluggableMap;\nol.View = $ol$View;\nol.array.stableSort = _ol_array$stableSort;\nol.color.asArray = _ol_color$asArray;\nol.color.asString = _ol_color$asString;\nol.colorlike.asColorLike = _ol_colorlike$asColorLike;\nol.control.Attribution = $ol$control$Attribution;\nol.control.Attribution.render = _ol_control_Attribution$render;\nol.control.Control = $ol$control$Control;\nol.control.FullScreen = $ol$control$FullScreen;\nol.control.MousePosition = $ol$control$MousePosition;\nol.control.MousePosition.render = _ol_control_MousePosition$render;\nol.control.OverviewMap = $ol$control$OverviewMap;\nol.control.OverviewMap.render = _ol_control_OverviewMap$render;\nol.control.Rotate = $ol$control$Rotate;\nol.control.Rotate.render = _ol_control_Rotate$render;\nol.control.ScaleLine = $ol$control$ScaleLine;\nol.control.ScaleLine.render = _ol_control_ScaleLine$render;\nol.control.Zoom = $ol$control$Zoom;\nol.control.ZoomSlider = $ol$control$ZoomSlider;\nol.control.ZoomSlider.render = _ol_control_ZoomSlider$render;\nol.control.ZoomToExtent = $ol$control$ZoomToExtent;\nol.control.defaults = _ol_control$defaults;\nol.coordinate.add = _ol_coordinate$add;\nol.coordinate.createStringXY = _ol_coordinate$createStringXY;\nol.coordinate.format = _ol_coordinate$format;\nol.coordinate.rotate = _ol_coordinate$rotate;\nol.coordinate.toStringHDMS = _ol_coordinate$toStringHDMS;\nol.coordinate.toStringXY = _ol_coordinate$toStringXY;\nol.easing.easeIn = _ol_easing$easeIn;\nol.easing.easeOut = _ol_easing$easeOut;\nol.easing.inAndOut = _ol_easing$inAndOut;\nol.easing.linear = _ol_easing$linear;\nol.easing.upAndDown = _ol_easing$upAndDown;\nol.events.condition.altKeyOnly = _ol_events_condition$altKeyOnly;\nol.events.condition.altShiftKeysOnly = _ol_events_condition$altShiftKeysOnly;\nol.events.condition.always = _ol_events_condition$always;\nol.events.condition.click = _ol_events_condition$click;\nol.events.condition.doubleClick = _ol_events_condition$doubleClick;\nol.events.condition.focus = _ol_events_condition$focus;\nol.events.condition.mouseOnly = _ol_events_condition$mouseOnly;\nol.events.condition.never = _ol_events_condition$never;\nol.events.condition.noModifierKeys = _ol_events_condition$noModifierKeys;\nol.events.condition.platformModifierKeyOnly = _ol_events_condition$platformModifierKeyOnly;\nol.events.condition.pointerMove = _ol_events_condition$pointerMove;\nol.events.condition.primaryAction = _ol_events_condition$primaryAction;\nol.events.condition.shiftKeyOnly = _ol_events_condition$shiftKeyOnly;\nol.events.condition.singleClick = _ol_events_condition$singleClick;\nol.events.condition.targetNotEditable = _ol_events_condition$targetNotEditable;\nol.extent.applyTransform = _ol_extent$applyTransform;\nol.extent.boundingExtent = _ol_extent$boundingExtent;\nol.extent.buffer = _ol_extent$buffer;\nol.extent.containsCoordinate = _ol_extent$containsCoordinate;\nol.extent.containsExtent = _ol_extent$containsExtent;\nol.extent.containsXY = _ol_extent$containsXY;\nol.extent.createEmpty = _ol_extent$createEmpty;\nol.extent.equals = _ol_extent$equals;\nol.extent.extend = _ol_extent$extend;\nol.extent.getArea = _ol_extent$getArea;\nol.extent.getBottomLeft = _ol_extent$getBottomLeft;\nol.extent.getBottomRight = _ol_extent$getBottomRight;\nol.extent.getCenter = _ol_extent$getCenter;\nol.extent.getHeight = _ol_extent$getHeight;\nol.extent.getIntersection = _ol_extent$getIntersection;\nol.extent.getSize = _ol_extent$getSize;\nol.extent.getTopLeft = _ol_extent$getTopLeft;\nol.extent.getTopRight = _ol_extent$getTopRight;\nol.extent.getWidth = _ol_extent$getWidth;\nol.extent.intersects = _ol_extent$intersects;\nol.extent.isEmpty = _ol_extent$isEmpty;\nol.featureloader.xhr = _ol_featureloader$xhr;\nol.format.EsriJSON = $ol$format$EsriJSON;\nol.format.Feature = $ol$format$Feature;\nol.format.GML = $ol$format$GML;\nol.format.GML2 = $ol$format$GML2;\nol.format.GML3 = $ol$format$GML3;\nol.format.GML32 = $ol$format$GML32;\nol.format.GPX = $ol$format$GPX;\nol.format.GeoJSON = $ol$format$GeoJSON;\nol.format.IGC = $ol$format$IGC;\nol.format.KML = $ol$format$KML;\nol.format.MVT = $ol$format$MVT;\nol.format.OSMXML = $ol$format$OSMXML;\nol.format.Polyline = $ol$format$Polyline;\nol.format.Polyline.decodeDeltas = _ol_format_Polyline$decodeDeltas;\nol.format.Polyline.decodeFloats = _ol_format_Polyline$decodeFloats;\nol.format.Polyline.encodeDeltas = _ol_format_Polyline$encodeDeltas;\nol.format.Polyline.encodeFloats = _ol_format_Polyline$encodeFloats;\nol.format.TopoJSON = $ol$format$TopoJSON;\nol.format.WFS = $ol$format$WFS;\nol.format.WFS.writeFilter = _ol_format_WFS$writeFilter;\nol.format.WKT = $ol$format$WKT;\nol.format.WMSCapabilities = $ol$format$WMSCapabilities;\nol.format.WMSGetFeatureInfo = $ol$format$WMSGetFeatureInfo;\nol.format.WMTSCapabilities = $ol$format$WMTSCapabilities;\nol.format.filter.Bbox = $ol$format$filter$Bbox;\nol.format.filter.Contains = $ol$format$filter$Contains;\nol.format.filter.During = $ol$format$filter$During;\nol.format.filter.EqualTo = $ol$format$filter$EqualTo;\nol.format.filter.GreaterThan = $ol$format$filter$GreaterThan;\nol.format.filter.GreaterThanOrEqualTo = $ol$format$filter$GreaterThanOrEqualTo;\nol.format.filter.Intersects = $ol$format$filter$Intersects;\nol.format.filter.IsBetween = $ol$format$filter$IsBetween;\nol.format.filter.IsLike = $ol$format$filter$IsLike;\nol.format.filter.IsNull = $ol$format$filter$IsNull;\nol.format.filter.LessThan = $ol$format$filter$LessThan;\nol.format.filter.LessThanOrEqualTo = $ol$format$filter$LessThanOrEqualTo;\nol.format.filter.Not = $ol$format$filter$Not;\nol.format.filter.NotEqualTo = $ol$format$filter$NotEqualTo;\nol.format.filter.Or = $ol$format$filter$Or;\nol.format.filter.Within = $ol$format$filter$Within;\nol.format.filter.and = _ol_format_filter$and;\nol.format.filter.bbox = _ol_format_filter$bbox;\nol.format.filter.between = _ol_format_filter$between;\nol.format.filter.contains = _ol_format_filter$contains;\nol.format.filter.during = _ol_format_filter$during;\nol.format.filter.equalTo = _ol_format_filter$equalTo;\nol.format.filter.greaterThan = _ol_format_filter$greaterThan;\nol.format.filter.greaterThanOrEqualTo = _ol_format_filter$greaterThanOrEqualTo;\nol.format.filter.intersects = _ol_format_filter$intersects;\nol.format.filter.isNull = _ol_format_filter$isNull;\nol.format.filter.lessThan = _ol_format_filter$lessThan;\nol.format.filter.lessThanOrEqualTo = _ol_format_filter$lessThanOrEqualTo;\nol.format.filter.like = _ol_format_filter$like;\nol.format.filter.not = _ol_format_filter$not;\nol.format.filter.notEqualTo = _ol_format_filter$notEqualTo;\nol.format.filter.or = _ol_format_filter$or;\nol.format.filter.within = _ol_format_filter$within;\nol.geom.Circle = $ol$geom$Circle;\nol.geom.Geometry = $ol$geom$Geometry;\nol.geom.GeometryCollection = $ol$geom$GeometryCollection;\nol.geom.LineString = $ol$geom$LineString;\nol.geom.LinearRing = $ol$geom$LinearRing;\nol.geom.MultiLineString = $ol$geom$MultiLineString;\nol.geom.MultiPoint = $ol$geom$MultiPoint;\nol.geom.MultiPolygon = $ol$geom$MultiPolygon;\nol.geom.Point = $ol$geom$Point;\nol.geom.Polygon = $ol$geom$Polygon;\nol.geom.Polygon.circular = _ol_geom_Polygon$circular;\nol.geom.Polygon.fromCircle = _ol_geom_Polygon$fromCircle;\nol.geom.Polygon.fromExtent = _ol_geom_Polygon$fromExtent;\nol.geom.SimpleGeometry = $ol$geom$SimpleGeometry;\nol.getUid = _ol$getUid;\nol.has.DEVICE_PIXEL_RATIO = _ol_has$DEVICE_PIXEL_RATIO;\nol.has.GEOLOCATION = _ol_has$GEOLOCATION;\nol.has.TOUCH = _ol_has$TOUCH;\nol.interaction.DoubleClickZoom = $ol$interaction$DoubleClickZoom;\nol.interaction.DragAndDrop = $ol$interaction$DragAndDrop;\nol.interaction.DragBox = $ol$interaction$DragBox;\nol.interaction.DragPan = $ol$interaction$DragPan;\nol.interaction.DragRotate = $ol$interaction$DragRotate;\nol.interaction.DragRotateAndZoom = $ol$interaction$DragRotateAndZoom;\nol.interaction.DragZoom = $ol$interaction$DragZoom;\nol.interaction.Draw = $ol$interaction$Draw;\nol.interaction.Draw.createBox = _ol_interaction_Draw$createBox;\nol.interaction.Draw.createRegularPolygon = _ol_interaction_Draw$createRegularPolygon;\nol.interaction.Extent = $ol$interaction$Extent;\nol.interaction.Interaction = $ol$interaction$Interaction;\nol.interaction.KeyboardPan = $ol$interaction$KeyboardPan;\nol.interaction.KeyboardZoom = $ol$interaction$KeyboardZoom;\nol.interaction.Modify = $ol$interaction$Modify;\nol.interaction.MouseWheelZoom = $ol$interaction$MouseWheelZoom;\nol.interaction.PinchRotate = $ol$interaction$PinchRotate;\nol.interaction.PinchZoom = $ol$interaction$PinchZoom;\nol.interaction.Pointer = $ol$interaction$Pointer;\nol.interaction.Select = $ol$interaction$Select;\nol.interaction.Snap = $ol$interaction$Snap;\nol.interaction.Translate = $ol$interaction$Translate;\nol.interaction.defaults = _ol_interaction$defaults;\nol.layer.Base = $ol$layer$Base;\nol.layer.BaseImage = $ol$layer$BaseImage;\nol.layer.BaseTile = $ol$layer$BaseTile;\nol.layer.BaseVector = $ol$layer$BaseVector;\nol.layer.Graticule = $ol$layer$Graticule;\nol.layer.Group = $ol$layer$Group;\nol.layer.Heatmap = $ol$layer$Heatmap;\nol.layer.Image = $ol$layer$Image;\nol.layer.Tile = $ol$layer$Tile;\nol.layer.Vector = $ol$layer$Vector;\nol.layer.VectorImage = $ol$layer$VectorImage;\nol.layer.VectorTile = $ol$layer$VectorTile;\nol.loadingstrategy.all = _ol_loadingstrategy$all;\nol.loadingstrategy.bbox = _ol_loadingstrategy$bbox;\nol.loadingstrategy.tile = _ol_loadingstrategy$tile;\nol.proj.Projection = $ol$proj$Projection;\nol.proj.Units.METERS_PER_UNIT = _ol_proj_Units$METERS_PER_UNIT;\nol.proj.addCoordinateTransforms = _ol_proj$addCoordinateTransforms;\nol.proj.addEquivalentProjections = _ol_proj$addEquivalentProjections;\nol.proj.addProjection = _ol_proj$addProjection;\nol.proj.equivalent = _ol_proj$equivalent;\nol.proj.fromLonLat = _ol_proj$fromLonLat;\nol.proj.get = _ol_proj$get;\nol.proj.getPointResolution = _ol_proj$getPointResolution;\nol.proj.getTransform = _ol_proj$getTransform;\nol.proj.proj4.register = _ol_proj_proj4$register;\nol.proj.toLonLat = _ol_proj$toLonLat;\nol.proj.transform = _ol_proj$transform;\nol.proj.transformExtent = _ol_proj$transformExtent;\nol.render.VectorContext = $ol$render$VectorContext;\nol.render.canvas.labelCache = _ol_render_canvas$labelCache;\nol.render.getRenderPixel = _ol_render$getRenderPixel;\nol.render.getVectorContext = _ol_render$getVectorContext;\nol.render.toContext = _ol_render$toContext;\nol.renderer.Composite = $ol$renderer$Composite;\nol.renderer.canvas.ImageLayer = $ol$renderer$canvas$ImageLayer;\nol.renderer.canvas.ImageLayer = $ol$renderer$canvas$ImageLayer;\nol.renderer.canvas.TileLayer = $ol$renderer$canvas$TileLayer;\nol.renderer.canvas.VectorLayer = $ol$renderer$canvas$VectorLayer;\nol.renderer.canvas.VectorTileLayer = $ol$renderer$canvas$VectorTileLayer;\nol.renderer.webgl.PointsLayer = $ol$renderer$webgl$PointsLayer;\nol.size.toSize = _ol_size$toSize;\nol.source.BingMaps = $ol$source$BingMaps;\nol.source.CartoDB = $ol$source$CartoDB;\nol.source.Cluster = $ol$source$Cluster;\nol.source.Image = $ol$source$Image;\nol.source.ImageArcGISRest = $ol$source$ImageArcGISRest;\nol.source.ImageCanvas = $ol$source$ImageCanvas;\nol.source.ImageMapGuide = $ol$source$ImageMapGuide;\nol.source.ImageStatic = $ol$source$ImageStatic;\nol.source.ImageWMS = $ol$source$ImageWMS;\nol.source.OSM = $ol$source$OSM;\nol.source.OSM.ATTRIBUTION = _ol_source_OSM$ATTRIBUTION;\nol.source.Raster = $ol$source$Raster;\nol.source.Source = $ol$source$Source;\nol.source.Stamen = $ol$source$Stamen;\nol.source.Tile = $ol$source$Tile;\nol.source.TileArcGISRest = $ol$source$TileArcGISRest;\nol.source.TileDebug = $ol$source$TileDebug;\nol.source.TileImage = $ol$source$TileImage;\nol.source.TileJSON = $ol$source$TileJSON;\nol.source.TileWMS = $ol$source$TileWMS;\nol.source.UTFGrid = $ol$source$UTFGrid;\nol.source.Vector = $ol$source$Vector;\nol.source.VectorTile = $ol$source$VectorTile;\nol.source.WMTS = $ol$source$WMTS;\nol.source.WMTS.optionsFromCapabilities = _ol_source_WMTS$optionsFromCapabilities;\nol.source.XYZ = $ol$source$XYZ;\nol.source.Zoomify = $ol$source$Zoomify;\nol.sphere.getArea = _ol_sphere$getArea;\nol.sphere.getDistance = _ol_sphere$getDistance;\nol.sphere.getLength = _ol_sphere$getLength;\nol.style.Circle = $ol$style$Circle;\nol.style.Fill = $ol$style$Fill;\nol.style.Icon = $ol$style$Icon;\nol.style.IconImageCache.shared = _ol_style_IconImageCache$shared;\nol.style.Image = $ol$style$Image;\nol.style.RegularShape = $ol$style$RegularShape;\nol.style.Stroke = $ol$style$Stroke;\nol.style.Style = $ol$style$Style;\nol.style.Text = $ol$style$Text;\nol.tilegrid.TileGrid = $ol$tilegrid$TileGrid;\nol.tilegrid.WMTS = $ol$tilegrid$WMTS;\nol.tilegrid.WMTS.createFromCapabilitiesMatrixSet = _ol_tilegrid_WMTS$createFromCapabilitiesMatrixSet;\nol.tilegrid.createXYZ = _ol_tilegrid$createXYZ;\nol.webgl.Helper = $ol$webgl$Helper;\nol.webgl.PostProcessingPass = $ol$webgl$PostProcessingPass;\nol.xml.getAllTextContent = _ol_xml$getAllTextContent;\nol.xml.parse = _ol_xml$parse;\n\nexport default ol;","/**\n * @module ol/proj/proj4\n */\nimport {addCoordinateTransforms, addProjection, addEquivalentProjections, get} from '../proj.js';\nimport {get as getTransform} from './transforms.js';\nimport Projection from './Projection.js';\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {?} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  var projCodes = Object.keys(proj4.defs);\n  var len = projCodes.length;\n  var i, j;\n  for (i = 0; i < len; ++i) {\n    var code = projCodes[i];\n    if (!get(code)) {\n      var def = proj4.defs(code);\n      addProjection(new Projection({\n        code: code,\n        axisOrientation: def.axis,\n        metersPerUnit: def.to_meter,\n        units: def.units\n      }));\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    var code1 = projCodes[i];\n    var proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      var code2 = projCodes[j];\n      var proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          var transform = proj4(code1, code2);\n          addCoordinateTransforms(proj1, proj2, transform.forward, transform.inverse);\n        }\n      }\n    }\n  }\n}\n\n//# sourceMappingURL=proj4.js.map","/**\n * @module ol/render\n */\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply as multiplyTransform,\n  scale as scaleTransform\n} from './transform.js';\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\n\n\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {import(\"./Feature.js\").FeatureLike} feature\n * @property {import(\"./geom/SimpleGeometry.js\").default} geometry\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n\n\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and returns a `{number}`.\n *\n * @typedef {function(import(\"./Feature.js\").FeatureLike, import(\"./Feature.js\").FeatureLike):number} OrderFunction\n */\n\n\n/**\n * @typedef {Object} ToContextOptions\n * @property {import(\"./size.js\").Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n\n\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render';\n * import Fill from 'ol/style/Fill';\n * import Polygon from 'ol/geom/Polygon';\n *\n * var canvas = document.createElement('canvas');\n * var render = toContext(canvas.getContext('2d'),\n *     { size: [100, 100] });\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]]));\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {ToContextOptions=} opt_options Options.\n * @return {CanvasImmediateRenderer} Canvas Immediate.\n * @api\n */\nexport function toContext(context, opt_options) {\n  var canvas = context.canvas;\n  var options = opt_options ? opt_options : {};\n  var pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n  var size = options.size;\n  if (size) {\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n  }\n  var extent = [0, 0, canvas.width, canvas.height];\n  var transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n  return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n\n/**\n * Gets a vector context for drawing to the event's canvas.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @returns {CanvasImmediateRenderer} Vector context.\n * @api\n */\nexport function getVectorContext(event) {\n  var frameState = event.frameState;\n  var transform = multiplyTransform(event.inversePixelTransform.slice(), frameState.coordinateToPixelTransform);\n  return new CanvasImmediateRenderer(\n    event.context, frameState.pixelRatio, frameState.extent, transform,\n    frameState.viewState.rotation);\n}\n\n/**\n * Gets the pixel of the event's canvas context from the map viewport's CSS pixel.\n * @param {import(\"./render/Event.js\").default} event Render event.\n * @param {import(\"./pixel.js\").Pixel} pixel CSS pixel relative to the top-left\n * corner of the map viewport.\n * @returns {import(\"./pixel.js\").Pixel} Pixel on the event's canvas context.\n * @api\n */\nexport function getRenderPixel(event, pixel) {\n  var result = pixel.slice(0);\n  applyTransform(event.inversePixelTransform.slice(), result);\n  return result;\n}\n\n//# sourceMappingURL=render.js.map"],"sourceRoot":""}