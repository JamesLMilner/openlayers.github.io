{"version":3,"sources":["webpack:///./export-map.js"],"names":["__webpack_require__","r","__webpack_exports__","_src_ol_Map_js__WEBPACK_IMPORTED_MODULE_0__","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_1__","_src_ol_control_js__WEBPACK_IMPORTED_MODULE_2__","_src_ol_format_GeoJSON_js__WEBPACK_IMPORTED_MODULE_3__","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_4__","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_5__","_src_ol_source_js__WEBPACK_IMPORTED_MODULE_6__","_src_ol_source_js__WEBPACK_IMPORTED_MODULE_7__","map","layers","source","url","format","target","controls","Object","attributionOptions","collapsible","view","center","zoom","document","getElementById","addEventListener","once","event","const","canvas","context","navigator","msSaveBlob","msToBlob","toBlob","blob","saveAs","renderSync"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAA,GAAAK,EAAAL,EAAA,KAAAM,EAAAN,EAAA,IAAAO,EAAAP,EAAA,GAAAQ,EAAAR,EAAA,IAAAS,EAAAT,EAAA,GAAAU,EAAAV,EAAA,IAOMW,EAAM,IAAIR,EAAA,GACdS,QACE,IAAIL,EAAA,GACFM,OAAQ,IAAIJ,EAAA,IAEd,IAAID,EAAA,GACFK,OAAQ,IAAIH,EAAA,GACVI,IAAK,iCACLC,OAAQ,IAAIT,EAAA,OAIlBU,OAAQ,MACRC,SAAUC,OAAAb,EAAA,EAAAa,EACRC,oBACEC,aAAa,KAGjBC,KAAM,IAAIjB,EAAA,GACRkB,QAAS,EAAG,GACZC,KAAM,MAIVC,SAASC,eAAe,cAAcC,iBAAiB,QAAS,WAC9Df,EAAIgB,KAAK,iBAAkB,SAASC,GAClCC,IAAMC,EAASF,EAAMG,QAAQD,OACzBE,UAAUC,WACZD,UAAUC,WAAWH,EAAOI,WAAY,WAExCJ,EAAOK,OAAO,SAASC,GACrBC,OAAOD,EAAM,eAInBzB,EAAI2B","file":"export-map.js","sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport {defaults as defaultControls} from '../src/ol/control.js';\nimport GeoJSON from '../src/ol/format/GeoJSON.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\nimport {OSM, Vector as VectorSource} from '../src/ol/source.js';\n\nconst map = new Map({\n  layers: [\n    new TileLayer({\n      source: new OSM()\n    }),\n    new VectorLayer({\n      source: new VectorSource({\n        url: 'data/geojson/countries.geojson',\n        format: new GeoJSON()\n      })\n    })\n  ],\n  target: 'map',\n  controls: defaultControls({\n    attributionOptions: {\n      collapsible: false\n    }\n  }),\n  view: new View({\n    center: [0, 0],\n    zoom: 2\n  })\n});\n\ndocument.getElementById('export-png').addEventListener('click', function() {\n  map.once('rendercomplete', function(event) {\n    const canvas = event.context.canvas;\n    if (navigator.msSaveBlob) {\n      navigator.msSaveBlob(canvas.msToBlob(), 'map.png');\n    } else {\n      canvas.toBlob(function(blob) {\n        saveAs(blob, 'map.png');\n      });\n    }\n  });\n  map.renderSync();\n});\n"],"sourceRoot":""}