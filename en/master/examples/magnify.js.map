{"version":3,"sources":["webpack:///./magnify.js"],"names":["__webpack_require__","r","__webpack_exports__","_src_ol_Map_js__WEBPACK_IMPORTED_MODULE_0__","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_1__","_src_ol_layer_Tile_js__WEBPACK_IMPORTED_MODULE_2__","_src_ol_proj_js__WEBPACK_IMPORTED_MODULE_3__","_src_ol_source_BingMaps_js__WEBPACK_IMPORTED_MODULE_4__","_src_ol_render_js__WEBPACK_IMPORTED_MODULE_5__","imagery","source","key","imagerySet","container","document","getElementById","map","layers","target","view","center","Object","zoom","radius","addEventListener","evt","which","Math","min","render","preventDefault","max","let","mousePosition","event","getEventPixel","on","const","pixel","offset","half","sqrt","pow","context","centerX","centerY","originX","originY","size","round","sourceData","getImageData","data","dest","createImageData","destData","j","i","dI","dJ","sourceI","sourceJ","destOffset","sourceOffset","beginPath","arc","PI","lineWidth","strokeStyle","putImageData","stroke","restore"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAA,GAAAK,EAAAL,EAAA,GAAAM,EAAAN,EAAA,GAAAO,EAAAP,EAAA,IAAAQ,EAAAR,EAAA,IASMS,EAAU,IAAIJ,EAAA,EAAU,CAC5BK,OAAQ,IAAIH,EAAA,EAAS,CAACI,IAHZ,mEAGsBC,WAAY,aAGxCC,EAAYC,SAASC,eAAe,OAEpCC,EAAM,IAAIb,EAAA,EAAI,CAClBc,OAAQ,CAACR,GACTS,OAAQL,EACRM,KAAM,IAAIf,EAAA,EAAK,CACbgB,OAAQC,OAAAf,EAAA,EAAAe,CAAW,EAAE,IAAK,OAC1BC,KAAM,MAINC,EAAS,GACbT,SAASU,iBAAiB,UAAW,SAASC,GAC1B,KAAdA,EAAIC,OACNH,EAASI,KAAKC,IAAIL,EAAS,EAAG,KAC9BP,EAAIa,SACJJ,EAAIK,kBACmB,KAAdL,EAAIC,QACbH,EAASI,KAAKI,IAAIR,EAAS,EAAG,IAC9BP,EAAIa,SACJJ,EAAIK,oBAKRE,IAAIC,EAAgB,KAEpBpB,EAAUW,iBAAiB,YAAa,SAASU,GAC/CD,EAAgBjB,EAAImB,cAAcD,GAClClB,EAAIa,WAGNhB,EAAUW,iBAAiB,WAAY,WACrCS,EAAgB,KAChBjB,EAAIa,WAINpB,EAAQ2B,GAAG,aAAc,SAASF,GAChC,GAAID,EAAe,CAajB,IAZAI,IAAMC,EAAQjB,OAAAb,EAAA,EAAAa,CAAea,EAAOD,GAC9BM,EAASlB,OAAAb,EAAA,EAAAa,CAAea,EAAO,CAACD,EAAc,GAAKV,EAAQU,EAAc,KACzEO,EAAOb,KAAKc,KAAKd,KAAKe,IAAIH,EAAO,GAAKD,EAAM,GAAI,GAAKX,KAAKe,IAAIH,EAAO,GAAKD,EAAM,GAAI,IACpFK,EAAUT,EAAMS,QAChBC,EAAUN,EAAM,GAChBO,EAAUP,EAAM,GAChBQ,EAAUF,EAAUJ,EACpBO,EAAUF,EAAUL,EACpBQ,EAAOrB,KAAKsB,MAAM,EAAIT,EAAO,GAC7BU,EAAaP,EAAQQ,aAAaL,EAASC,EAASC,EAAMA,GAAMI,KAChEC,EAAOV,EAAQW,gBAAgBN,EAAMA,GACrCO,EAAWF,EAAKD,KACbI,EAAI,EAAGA,EAAIR,IAAQQ,EAC1B,IAAKxB,IAAIyB,EAAI,EAAGA,EAAIT,IAAQS,EAAG,CAC7BpB,IAAMqB,EAAKD,EAAIjB,EACTmB,EAAKH,EAAIhB,EAEXoB,EAAUH,EACVI,EAAUL,EAFD7B,KAAKc,KAAKiB,EAAKA,EAAKC,EAAKA,GAG3BnB,IACToB,EAAUjC,KAAKsB,MAAMT,EAAOkB,EAAK,GACjCG,EAAUlC,KAAKsB,MAAMT,EAAOmB,EAAK,IAEnCtB,IAAMyB,EAA8B,GAAhBN,EAAIR,EAAOS,GACzBM,EAA4C,GAA5BF,EAAUb,EAAOY,GACvCL,EAASO,GAAcZ,EAAWa,GAClCR,EAASO,EAAa,GAAKZ,EAAWa,EAAe,GACrDR,EAASO,EAAa,GAAKZ,EAAWa,EAAe,GACrDR,EAASO,EAAa,GAAKZ,EAAWa,EAAe,GAGzDpB,EAAQqB,YACRrB,EAAQsB,IAAIrB,EAASC,EAASL,EAAM,EAAG,EAAIb,KAAKuC,IAChDvB,EAAQwB,UAAY,EAAI3B,EAAOjB,EAC/BoB,EAAQyB,YAAc,wBACtBzB,EAAQ0B,aAAahB,EAAMP,EAASC,GACpCJ,EAAQ2B,SACR3B,EAAQ4B","file":"magnify.js","sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport TileLayer from '../src/ol/layer/Tile.js';\nimport {fromLonLat} from '../src/ol/proj.js';\nimport BingMaps from '../src/ol/source/BingMaps.js';\nimport {getRenderPixel} from '../src/ol/render.js';\n\nconst key = 'As1HiMj1PvLPlqc_gtM7AqZfBL8ZL3VrjaS3zIb22Uvb9WKhuJObROC-qUpa81U5';\n\nconst imagery = new TileLayer({\n  source: new BingMaps({key: key, imagerySet: 'Aerial'})\n});\n\nconst container = document.getElementById('map');\n\nconst map = new Map({\n  layers: [imagery],\n  target: container,\n  view: new View({\n    center: fromLonLat([-109, 46.5]),\n    zoom: 6\n  })\n});\n\nlet radius = 75;\ndocument.addEventListener('keydown', function(evt) {\n  if (evt.which === 38) {\n    radius = Math.min(radius + 5, 150);\n    map.render();\n    evt.preventDefault();\n  } else if (evt.which === 40) {\n    radius = Math.max(radius - 5, 25);\n    map.render();\n    evt.preventDefault();\n  }\n});\n\n// get the pixel position with every move\nlet mousePosition = null;\n\ncontainer.addEventListener('mousemove', function(event) {\n  mousePosition = map.getEventPixel(event);\n  map.render();\n});\n\ncontainer.addEventListener('mouseout', function() {\n  mousePosition = null;\n  map.render();\n});\n\n// after rendering the layer, show an oversampled version around the pointer\nimagery.on('postrender', function(event) {\n  if (mousePosition) {\n    const pixel = getRenderPixel(event, mousePosition);\n    const offset = getRenderPixel(event, [mousePosition[0] + radius, mousePosition[1]]);\n    const half = Math.sqrt(Math.pow(offset[0] - pixel[0], 2) + Math.pow(offset[1] - pixel[1], 2));\n    const context = event.context;\n    const centerX = pixel[0];\n    const centerY = pixel[1];\n    const originX = centerX - half;\n    const originY = centerY - half;\n    const size = Math.round(2 * half + 1);\n    const sourceData = context.getImageData(originX, originY, size, size).data;\n    const dest = context.createImageData(size, size);\n    const destData = dest.data;\n    for (let j = 0; j < size; ++j) {\n      for (let i = 0; i < size; ++i) {\n        const dI = i - half;\n        const dJ = j - half;\n        const dist = Math.sqrt(dI * dI + dJ * dJ);\n        let sourceI = i;\n        let sourceJ = j;\n        if (dist < half) {\n          sourceI = Math.round(half + dI / 2);\n          sourceJ = Math.round(half + dJ / 2);\n        }\n        const destOffset = (j * size + i) * 4;\n        const sourceOffset = (sourceJ * size + sourceI) * 4;\n        destData[destOffset] = sourceData[sourceOffset];\n        destData[destOffset + 1] = sourceData[sourceOffset + 1];\n        destData[destOffset + 2] = sourceData[sourceOffset + 2];\n        destData[destOffset + 3] = sourceData[sourceOffset + 3];\n      }\n    }\n    context.beginPath();\n    context.arc(centerX, centerY, half, 0, 2 * Math.PI);\n    context.lineWidth = 3 * half / radius;\n    context.strokeStyle = 'rgba(255,255,255,0.5)';\n    context.putImageData(dest, originX, originY);\n    context.stroke();\n    context.restore();\n  }\n});\n"],"sourceRoot":""}