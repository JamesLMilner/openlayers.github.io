{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../src/ol/xml.js","webpack:///../src/ol/index.js","webpack:///../src/ol/style.js","webpack:///../src/ol/extent.js","webpack:///../src/ol/centerconstraint.js","webpack:///../src/ol/View.js","webpack:///../src/ol/resolutionconstraint.js","webpack:///../src/ol/geom/flat/textpath.js","webpack:///../src/ol/render/canvas/Instruction.js","webpack:///../src/ol/render/canvas/Replay.js","webpack:///../src/ol/render/canvas/ImageReplay.js","webpack:///../src/ol/render/canvas/LineStringReplay.js","webpack:///../src/ol/render/canvas/PolygonReplay.js","webpack:///../src/ol/geom/flat/straightchunk.js","webpack:///../src/ol/render/canvas/TextReplay.js","webpack:///../src/ol/render/canvas/ReplayGroup.js","webpack:///../src/ol/renderer/canvas/VectorLayer.js","webpack:///../src/ol/renderer/canvas/VectorTileLayer.js","webpack:///../src/ol/Map.js","webpack:///../src/ol/format/xsd.js","webpack:///../src/ol/proj/epsg3857.js","webpack:///../src/ol/proj/epsg4326.js","webpack:///../src/ol/proj/projections.js","webpack:///../src/ol/proj.js","webpack:///../src/ol/events.js","webpack:///../src/ol/geom/GeometryType.js","webpack:///../src/ol/layer/Heatmap.js","webpack:///../src/ol/layer/Tile.js","webpack:///../src/ol/events/EventType.js","webpack:///../src/ol/obj.js","webpack:///../src/ol/array.js","webpack:///../src/ol/source/CartoDB.js","webpack:///../src/ol/source/Cluster.js","webpack:///../src/ol/source/ImageArcGISRest.js","webpack:///../src/ol/source/ImageCanvas.js","webpack:///../src/ol/source/TileArcGISRest.js","webpack:///../src/ol/source/TileDebug.js","webpack:///../src/ol/source.js","webpack:///../src/ol/transform.js","webpack:///../src/ol/TileState.js","webpack:///../src/ol/source/OSM.js","webpack:///../src/ol/math.js","webpack:///../src/ol/webgl.js","webpack:///../src/ol/geom/GeometryLayout.js","webpack:///../src/ol/source/Vector.js","webpack:///../src/ol/Feature.js","webpack:///../src/ol/control/FullScreen.js","webpack:///../src/ol/control/OverviewMap.js","webpack:///../src/ol/control/ScaleLine.js","webpack:///../src/ol/control/ZoomSlider.js","webpack:///../src/ol/control/ZoomToExtent.js","webpack:///../src/ol/control.js","webpack:///../src/ol/render/canvas.js","webpack:///../src/ol/asserts.js","webpack:///../src/ol/functions.js","webpack:///../src/ol/geom/Point.js","webpack:///../src/ol/dom.js","webpack:///../src/ol/Object.js","webpack:///../src/ol/Kinetic.js","webpack:///../src/ol/interaction/DoubleClickZoom.js","webpack:///../src/ol/interaction/DragPan.js","webpack:///../src/ol/interaction/DragRotate.js","webpack:///../src/ol/render/Box.js","webpack:///../src/ol/interaction/DragBox.js","webpack:///../src/ol/interaction/DragZoom.js","webpack:///../src/ol/events/KeyCode.js","webpack:///../src/ol/interaction/KeyboardPan.js","webpack:///../src/ol/interaction/KeyboardZoom.js","webpack:///../src/ol/interaction/MouseWheelZoom.js","webpack:///../src/ol/interaction/PinchRotate.js","webpack:///../src/ol/interaction/PinchZoom.js","webpack:///../src/ol/interaction/DragAndDrop.js","webpack:///../src/ol/interaction/DragRotateAndZoom.js","webpack:///../src/ol/interaction/Modify.js","webpack:///../src/ol/interaction/Snap.js","webpack:///../src/ol/interaction/Translate.js","webpack:///../src/ol/interaction.js","webpack:///../src/ol/coordinate.js","webpack:///../src/ol/ImageState.js","webpack:///../src/ol/events/Event.js","webpack:///../src/ol/events/condition.js","webpack:///../src/ol/layer/Vector.js","webpack:///../src/ol/render/ReplayType.js","webpack:///../src/ol/geom/Polygon.js","webpack:///../src/ol/MapBrowserEventType.js","webpack:///../src/ol/geom/LineString.js","webpack:///../src/ol/format/Feature.js","webpack:///../src/ol/ViewHint.js","webpack:///../src/ol/interaction/Pointer.js","webpack:///../src/ol/format/GeoJSON.js","webpack:///../src/ol/interaction/Interaction.js","webpack:///../src/ol/source/BingMaps.js","webpack:///../src/ol/css.js","webpack:///../src/ol/has.js","webpack:///../src/ol/geom.js","webpack:///../src/ol/source/State.js","webpack:///../src/ol/format/GMLBase.js","webpack:///../src/ol/control/Control.js","webpack:///../src/ol/source/XYZ.js","webpack:///../src/ol/Collection.js","webpack:///../src/ol/geom/SimpleGeometry.js","webpack:///../src/ol/easing.js","webpack:///../src/ol/tilecoord.js","webpack:///../src/ol/size.js","webpack:///../src/ol/proj/Units.js","webpack:///../src/ol/LayerType.js","webpack:///../src/ol/geom/flat/transform.js","webpack:///../src/ol/CollectionEventType.js","webpack:///../src/ol/source/TileJSON.js","webpack:///../src/ol/reproj/Image.js","webpack:///../src/ol/source/Image.js","webpack:///../src/ol/reproj/Tile.js","webpack:///../src/ol/source/TileImage.js","webpack:///../src/ol/layer/Layer.js","webpack:///../src/ol/tilegrid.js","webpack:///../src/ol/proj/Projection.js","webpack:///../node_modules/proj4/lib/global.js","webpack:///../node_modules/proj4/lib/constants/values.js","webpack:///../node_modules/proj4/lib/constants/PrimeMeridian.js","webpack:///../node_modules/proj4/lib/constants/units.js","webpack:///../node_modules/proj4/lib/match.js","webpack:///../node_modules/proj4/lib/projString.js","webpack:///../node_modules/wkt-parser/parser.js","webpack:///../node_modules/wkt-parser/process.js","webpack:///../node_modules/wkt-parser/index.js","webpack:///../node_modules/proj4/lib/defs.js","webpack:///../node_modules/proj4/lib/parseCode.js","webpack:///../node_modules/proj4/lib/extend.js","webpack:///../node_modules/proj4/lib/common/msfnz.js","webpack:///../node_modules/proj4/lib/common/sign.js","webpack:///../node_modules/proj4/lib/common/adjust_lon.js","webpack:///../node_modules/proj4/lib/common/tsfnz.js","webpack:///../node_modules/proj4/lib/common/phi2z.js","webpack:///../node_modules/proj4/lib/projections/longlat.js","webpack:///../node_modules/proj4/lib/projections.js","webpack:///../node_modules/proj4/lib/projections/merc.js","webpack:///../node_modules/proj4/lib/constants/Ellipsoid.js","webpack:///../node_modules/proj4/lib/constants/Datum.js","webpack:///../node_modules/proj4/lib/datum.js","webpack:///../node_modules/proj4/lib/Proj.js","webpack:///../node_modules/proj4/lib/deriveConstants.js","webpack:///../node_modules/proj4/lib/datum_transform.js","webpack:///../node_modules/proj4/lib/datumUtils.js","webpack:///../node_modules/proj4/lib/adjust_axis.js","webpack:///../node_modules/proj4/lib/common/toPoint.js","webpack:///../node_modules/proj4/lib/checkSanity.js","webpack:///../node_modules/proj4/lib/transform.js","webpack:///../node_modules/proj4/lib/core.js","webpack:///../node_modules/mgrs/mgrs.js","webpack:///../node_modules/proj4/lib/Point.js","webpack:///../node_modules/proj4/lib/common/pj_enfn.js","webpack:///../node_modules/proj4/lib/common/pj_mlfn.js","webpack:///../node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack:///../node_modules/proj4/lib/projections/tmerc.js","webpack:///../node_modules/proj4/lib/common/sinh.js","webpack:///../node_modules/proj4/lib/common/hypot.js","webpack:///../node_modules/proj4/lib/common/asinhy.js","webpack:///../node_modules/proj4/lib/common/log1py.js","webpack:///../node_modules/proj4/lib/common/gatg.js","webpack:///../node_modules/proj4/lib/common/clens.js","webpack:///../node_modules/proj4/lib/common/clens_cmplx.js","webpack:///../node_modules/proj4/lib/common/cosh.js","webpack:///../node_modules/proj4/lib/projections/etmerc.js","webpack:///../node_modules/proj4/lib/common/adjust_zone.js","webpack:///../node_modules/proj4/lib/projections/utm.js","webpack:///../node_modules/proj4/lib/common/srat.js","webpack:///../node_modules/proj4/lib/projections/gauss.js","webpack:///../node_modules/proj4/lib/projections/sterea.js","webpack:///../node_modules/proj4/lib/projections/stere.js","webpack:///../node_modules/proj4/lib/projections/somerc.js","webpack:///../node_modules/proj4/lib/projections/omerc.js","webpack:///../node_modules/proj4/lib/projections/lcc.js","webpack:///../node_modules/proj4/lib/projections/krovak.js","webpack:///../node_modules/proj4/lib/common/mlfn.js","webpack:///../node_modules/proj4/lib/common/e0fn.js","webpack:///../node_modules/proj4/lib/common/e1fn.js","webpack:///../node_modules/proj4/lib/common/e2fn.js","webpack:///../node_modules/proj4/lib/common/e3fn.js","webpack:///../node_modules/proj4/lib/common/gN.js","webpack:///../node_modules/proj4/lib/common/adjust_lat.js","webpack:///../node_modules/proj4/lib/common/imlfn.js","webpack:///../node_modules/proj4/lib/projections/cass.js","webpack:///../node_modules/proj4/lib/common/qsfnz.js","webpack:///../node_modules/proj4/lib/projections/laea.js","webpack:///../node_modules/proj4/lib/common/asinz.js","webpack:///../node_modules/proj4/lib/projections/aea.js","webpack:///../node_modules/proj4/lib/projections/gnom.js","webpack:///../node_modules/proj4/lib/common/iqsfnz.js","webpack:///../node_modules/proj4/lib/projections/cea.js","webpack:///../node_modules/proj4/lib/projections/eqc.js","webpack:///../node_modules/proj4/lib/projections/poly.js","webpack:///../node_modules/proj4/lib/projections/nzmg.js","webpack:///../node_modules/proj4/lib/projections/mill.js","webpack:///../node_modules/proj4/lib/projections/sinu.js","webpack:///../node_modules/proj4/lib/projections/moll.js","webpack:///../node_modules/proj4/lib/projections/eqdc.js","webpack:///../node_modules/proj4/lib/projections/vandg.js","webpack:///../node_modules/proj4/lib/projections/aeqd.js","webpack:///../node_modules/proj4/lib/projections/ortho.js","webpack:///../node_modules/proj4/lib/projections/qsc.js","webpack:///../node_modules/proj4/lib/index.js","webpack:///../node_modules/proj4/projs.js","webpack:///../src/ol/geom/MultiLineString.js","webpack:///../src/ol/events/EventTarget.js","webpack:///../src/ol/geom/MultiPoint.js","webpack:///../src/ol/source/TileWMS.js","webpack:///../src/ol/style/Style.js","webpack:///../src/ol/Tile.js","webpack:///../src/ol/layer/Property.js","webpack:///../src/ol/color.js","webpack:///../src/ol/render/EventType.js","webpack:///../src/ol/render/replay.js","webpack:///../src/ol/style/IconOrigin.js","webpack:///../src/ol/ViewProperty.js","webpack:///../src/ol/geom/MultiPolygon.js","webpack:///../src/ol/geom/Geometry.js","webpack:///../src/ol/tileurlfunction.js","webpack:///../src/ol/reproj/common.js","webpack:///../src/ol/extent/Relationship.js","webpack:///../src/ol/source/Stamen.js","webpack:///../src/ol/style/Stroke.js","webpack:///../src/ol/geom/flat/deflate.js","webpack:///../src/ol/geom/flat/inflate.js","webpack:///../src/ol/geom/flat/reverse.js","webpack:///../src/ol/geom/flat/orient.js","webpack:///../src/ol/format/XMLFeature.js","webpack:///../src/ol/renderer/vector.js","webpack:///../src/ol/MapProperty.js","webpack:///../src/ol/layer/Image.js","webpack:///../src/ol/source/WMTSRequestEncoding.js","webpack:///../src/ol/source/WMTS.js","webpack:///../src/ol/Overlay.js","webpack:///../src/ol/colorlike.js","webpack:///../src/ol/style/IconAnchorUnits.js","webpack:///../src/ol/interaction/Draw.js","webpack:///../src/ol/MapBrowserPointerEvent.js","webpack:///../src/ol/pointer/EventType.js","webpack:///../src/ol/OverlayPositioning.js","webpack:///../src/ol/style/Fill.js","webpack:///../src/ol/geom/flat/closest.js","webpack:///../src/ol/format/GML3.js","webpack:///../src/ol/format/GML.js","webpack:///../src/ol/format/WFS.js","webpack:///../src/ol/format.js","webpack:///../src/ol/format/KML.js","webpack:///../src/ol/tilegrid/TileGrid.js","webpack:///../src/ol/source/Tile.js","webpack:///../src/ol/format/FormatType.js","webpack:///../src/ol/geom/flat/contains.js","webpack:///../src/ol/source/VectorEventType.js","webpack:///../src/ol/source/ImageWMS.js","webpack:///../src/ol/uri.js","webpack:///../src/ol/source/TileEventType.js","webpack:///../src/ol/source/UrlTile.js","webpack:///../src/ol/string.js","webpack:///../src/ol/layer/VectorTile.js","webpack:///../src/ol/VectorImageTile.js","webpack:///../src/ol/VectorTile.js","webpack:///../src/ol/source/VectorTile.js","webpack:///../src/ol/proj/proj4.js","webpack:///../src/ol/geom/flat/simplify.js","webpack:///../src/ol/Observable.js","webpack:///../src/ol/ObjectEventType.js","webpack:///../src/ol/render/VectorContext.js","webpack:///../src/ol/rotationconstraint.js","webpack:///../src/ol/pointer/EventSource.js","webpack:///../src/ol/renderer/canvas/TileLayer.js","webpack:///../src/ol/layer/VectorTileRenderType.js","webpack:///../src/ol/source/Source.js","webpack:///../src/ol/structs/RBush.js","webpack:///../src/ol/proj/transforms.js","webpack:///../src/ol/render/Feature.js","webpack:///../src/ol/format/MVT.js","webpack:///../src/ol/format/WMTSCapabilities.js","webpack:///../src/ol/loadingstrategy.js","webpack:///../src/ol/reproj.js","webpack:///../src/ol/geom/LinearRing.js","webpack:///../src/ol/MapEventType.js","webpack:///../src/ol/Disposable.js","webpack:///../src/ol/ImageBase.js","webpack:///../src/ol/source/WMSServerType.js","webpack:///../src/ol/layer/TileProperty.js","webpack:///../src/ol/renderer/Map.js","webpack:///../src/ol/interaction/Select.js","webpack:///../src/ol/tilegrid/common.js","webpack:///../src/ol/format/XML.js","webpack:///../src/ol/format/XLink.js","webpack:///../src/ol/format/TextFeature.js","webpack:///../src/ol/geom/GeometryCollection.js","webpack:///../src/ol/format/JSONFeature.js","webpack:///../src/ol/TileRange.js","webpack:///../src/ol/geom/flat/interpolate.js","webpack:///../src/ol/structs/PriorityQueue.js","webpack:///../src/ol/MapEvent.js","webpack:///../src/ol/source/Raster.js","webpack:///../src/ol/webgl/Shader.js","webpack:///../src/ol/webgl/Fragment.js","webpack:///../src/ol/webgl/Vertex.js","webpack:///../src/ol/render/webgl/circlereplay/defaultshader.js","webpack:///../src/ol/render/webgl/circlereplay/defaultshader/Locations.js","webpack:///../src/ol/vec/mat4.js","webpack:///../src/ol/render/webgl/Replay.js","webpack:///../src/ol/render/webgl.js","webpack:///../src/ol/webgl/Buffer.js","webpack:///../src/ol/render/webgl/CircleReplay.js","webpack:///../src/ol/render/webgl/texturereplay/defaultshader.js","webpack:///../src/ol/render/webgl/texturereplay/defaultshader/Locations.js","webpack:///../src/ol/webgl/ContextEventType.js","webpack:///../src/ol/webgl/Context.js","webpack:///../src/ol/render/webgl/TextureReplay.js","webpack:///../src/ol/render/webgl/ImageReplay.js","webpack:///../src/ol/geom/flat/topology.js","webpack:///../src/ol/render/webgl/linestringreplay/defaultshader.js","webpack:///../src/ol/render/webgl/linestringreplay/defaultshader/Locations.js","webpack:///../src/ol/render/webgl/LineStringReplay.js","webpack:///../src/ol/render/webgl/polygonreplay/defaultshader.js","webpack:///../src/ol/render/webgl/polygonreplay/defaultshader/Locations.js","webpack:///../src/ol/structs/LinkedList.js","webpack:///../src/ol/render/webgl/PolygonReplay.js","webpack:///../src/ol/render/webgl/TextReplay.js","webpack:///../src/ol/render/webgl/ReplayGroup.js","webpack:///../src/ol/render/webgl/Immediate.js","webpack:///../src/ol/renderer/webgl/defaultmapshader.js","webpack:///../src/ol/renderer/webgl/defaultmapshader/Locations.js","webpack:///../src/ol/renderer/webgl/Layer.js","webpack:///../src/ol/renderer/webgl/ImageLayer.js","webpack:///../src/ol/renderer/webgl/Map.js","webpack:///../src/ol/renderer/webgl/tilelayershader.js","webpack:///../src/ol/renderer/webgl/tilelayershader/Locations.js","webpack:///../src/ol/renderer/webgl/TileLayer.js","webpack:///../src/ol/renderer/webgl/VectorLayer.js","webpack:///../src/ol/WebGLMap.js","webpack:///../src/ol/style/Text.js","webpack:///../src/ol/tilegrid/WMTS.js","webpack:///../src/ol/Image.js","webpack:///../src/ol/style/Icon.js","webpack:///../src/ol/render/Event.js","webpack:///../src/ol/style/Image.js","webpack:///../src/ol/geom/flat/intersectsextent.js","webpack:///../src/ol/geom/flat/area.js","webpack:///../src/ol/sphere.js","webpack:///../src/ol/pointer/MouseSource.js","webpack:///../src/ol/source/common.js","webpack:///../src/ol/renderer/canvas/Layer.js","webpack:///../src/ol/renderer/canvas/IntermediateCanvas.js","webpack:///../src/ol/geom/Circle.js","webpack:///../src/ol/net.js","webpack:///../src/ol/structs/LRUCache.js","webpack:///../src/ol/interaction/Property.js","webpack:///../src/ol/geom/flat/interiorpoint.js","webpack:///../src/ol/format/filter/Filter.js","webpack:///../src/ol/format/filter/LogicalNary.js","webpack:///../src/ol/format/filter/And.js","webpack:///../src/ol/format/filter/Bbox.js","webpack:///../src/ol/format/filter/Spatial.js","webpack:///../src/ol/format/filter/Contains.js","webpack:///../src/ol/format/filter/Comparison.js","webpack:///../src/ol/format/filter/During.js","webpack:///../src/ol/format/filter/ComparisonBinary.js","webpack:///../src/ol/format/filter/EqualTo.js","webpack:///../src/ol/format/filter/GreaterThan.js","webpack:///../src/ol/format/filter/GreaterThanOrEqualTo.js","webpack:///../src/ol/format/filter/Intersects.js","webpack:///../src/ol/format/filter/IsBetween.js","webpack:///../src/ol/format/filter/IsLike.js","webpack:///../src/ol/format/filter/IsNull.js","webpack:///../src/ol/format/filter/LessThan.js","webpack:///../src/ol/format/filter/LessThanOrEqualTo.js","webpack:///../src/ol/format/filter/Not.js","webpack:///../src/ol/format/filter/NotEqualTo.js","webpack:///../src/ol/format/filter/Or.js","webpack:///../src/ol/format/filter/Within.js","webpack:///../src/ol/format/filter.js","webpack:///../src/ol/extent/Corner.js","webpack:///../src/ol/format/WKT.js","webpack:///../src/ol/format/TopoJSON.js","webpack:///../src/ol/format/EsriJSON.js","webpack:///../src/ol/source/ImageStatic.js","webpack:///../src/ol/GeolocationProperty.js","webpack:///../src/ol/Geolocation.js","webpack:///../src/ol/format/WMSGetFeatureInfo.js","webpack:///../src/ol/style/Atlas.js","webpack:///../src/ol/source/Zoomify.js","webpack:///../src/ol/render/canvas/Immediate.js","webpack:///../src/ol/ImageCanvas.js","webpack:///../node_modules/rbush/index.js","webpack:///../src/ol/MapBrowserEventHandler.js","webpack:///../src/ol/PluggableMap.js","webpack:///../src/ol/ImageTile.js","webpack:///../src/ol/render/ReplayGroup.js","webpack:///../src/ol/renderer/Layer.js","webpack:///../src/ol/layer/Base.js","webpack:///../src/ol/style/RegularShape.js","webpack:///../src/ol/style/Circle.js","webpack:///../src/ol/layer/Group.js","webpack:///../src/ol/pointer/MsSource.js","webpack:///../src/ol/pointer/NativeSource.js","webpack:///../src/ol/pointer/PointerEvent.js","webpack:///../src/ol/pointer/TouchSource.js","webpack:///../src/ol/pointer/PointerEventHandler.js","webpack:///../src/ol/format/GML2.js","webpack:///../src/ol/style/IconImageCache.js","webpack:///../src/ol/renderer/canvas/Map.js","webpack:///../src/ol/renderer/canvas/ImageLayer.js","webpack:///../src/ol/MapBrowserEvent.js","webpack:///../src/ol/geom/flat/flip.js","webpack:///../src/ol/format/Polyline.js","webpack:///../src/ol/format/WMSCapabilities.js","webpack:///../src/ol/format/OWS.js","webpack:///../src/ol/format/IGC.js","webpack:///../src/ol/format/GPX.js","webpack:///../src/ol/style/AtlasManager.js","webpack:///../src/ol/source/UTFGrid.js","webpack:///../src/ol/source/ImageMapGuide.js","webpack:///../src/ol/style/IconImage.js","webpack:///../src/ol/interaction/Extent.js","webpack:///../src/ol/control/Zoom.js","webpack:///../src/ol/control/Rotate.js","webpack:///../src/ol/control/Attribution.js","webpack:///../src/ol/control/util.js","webpack:///../src/ol/geom/flat/geodesic.js","webpack:///../src/ol/Graticule.js","webpack:///../src/ol/control/MousePosition.js","webpack:///../src/ol/render.js","webpack:///../src/ol/reproj/Triangulation.js","webpack:///../src/ol/TileCache.js","webpack:///../src/ol/style/TextPlacement.js","webpack:///../src/ol/featureloader.js","webpack:///../src/ol/layer/VectorRenderType.js","webpack:///../src/ol/geom/flat/center.js","webpack:///../src/ol/geom/flat/length.js","webpack:///../src/ol/geom/flat/segments.js","webpack:///../src/ol/TileQueue.js","webpack:///../src/ol/AssertionError.js","webpack:///../node_modules/pbf/index.js","webpack:///../node_modules/pixelworks/lib/index.js","webpack:///../node_modules/ieee754/index.js","webpack:///../node_modules/pixelworks/lib/util.js","webpack:///../node_modules/pixelworks/lib/processor.js","webpack:///../node_modules/quickselect/quickselect.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_array_js__WEBPACK_IMPORTED_MODULE_0__","DOCUMENT","document","implementation","createDocument","XML_SCHEMA_INSTANCE_URI","createElementNS","namespaceURI","qualifiedName","getAllTextContent","node","normalizeWhitespace","getAllTextContent_","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","String","nodeValue","replace","firstChild","nextSibling","join","isDocument","Document","isNode","getAttributeNS","parse","xml","DOMParser","parseFromString","makeArrayExtender","valueReader","opt_this","objectStack","undefined","this","array","makeArrayPusher","makeReplacer","makeObjectPropertyPusher","opt_property","localName","makeObjectPropertySetter","makeChildAppender","nodeWriter","appendChild","makeArraySerializer","serializersNS","nodeFactory","serializers","makeSimpleNodeFactory","serialize","opt_nodeName","opt_namespaceURI","fixedNodeName","nodeName","OBJECT_PROPERTY_NODE_FACTORY","makeSequence","orderedKeys","sequence","Array","makeStructureNS","namespaceURIs","structure","opt_structureNS","structureNS","ii","parseNode","parsersNS","firstElementChild","nextElementSibling","parsers","parser","pushParseAndPop","pop","values","opt_keys","pushSerializeAndPop","_webgl_js__WEBPACK_IMPORTED_MODULE_0__","DEBUG_WEBGL","WEBGL_MAX_TEXTURE_SIZE","WEBGL_EXTENSIONS","HAS_WEBGL","canvas","createElement","gl","failIfMajorPerformanceCaveat","getParameter","MAX_TEXTURE_SIZE","getSupportedExtensions","e","VERSION","inherits","childCtor","parentCtor","constructor","uidCounter_","getUid","obj","ol_uid","__webpack_exports__","_style_Text_js__WEBPACK_IMPORTED_MODULE_10__","_extent_Relationship_js__WEBPACK_IMPORTED_MODULE_2__","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","buffer","opt_extent","clone","closestSquaredDistanceXY","x","y","dx","dy","containsCoordinate","coordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","minX","minY","maxX","maxY","relationship","UNKNOWN","LEFT","RIGHT","BELOW","ABOVE","INTERSECTING","Infinity","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","extendCoordinates","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","end","stride","extendFlatCoordinates","equals","extend","extendXY","Math","min","max","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","isEmpty","getWidth","getHeight","getCenter","getCorner","corner","_extent_Corner_js__WEBPACK_IMPORTED_MODULE_1__","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","_asserts_js__WEBPACK_IMPORTED_MODULE_0__","getForViewAndSize","center","resolution","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","getIntersection","intersection","intersects","returnOrUpdate","scaleFromCenter","deltaX","deltaY","intersectsSegment","start","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","xs","ys","_boundingExtentXYs","none","DEFAULT_MIN_ZOOM","View","opt_options","ol_Object","options","hints_","animations_","updateAnimationKey_","updateAnimations_","projection_","proj","projection","applyOptions_","isNoopAnimation","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","ol","properties","ViewProperty","CENTER","resolutionConstraintInfo","resolutionConstraint","maxResolution","minResolution","minZoom","maxZoom","zoomFactor","resolutions","delta","direction","z","math","index","floor","power","pow","createSnapToResolutions","getExtent","ol_extent","Units","DEGREES","getMetersPerUnit","defaultMaxResolution","common","defaultMinResolution","log","opt_maxLevel","oldLevel","newLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","createExtent","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","rotationconstraint","createRotationConstraint","constraints_","RESOLUTION","zoom","constrainResolution","Number","getResolution","ROTATION","setProperties","options_","getUpdatedOptions_","newOptions","getZoom","getRotation","animate","var_args","animationCount","arguments","isDef","state","setCenter","setZoom","setRotation","setTimeout","Date","now","series","complete","anchor","duration","easing","PI","setHint","ViewHint","ANIMATING","getAnimating","getInteracting","INTERACTING","cancelAnimations","cancelAnimationFrame","more","seriesComplete","jj","elapsed","fraction","progress","set","calculateCenterZoom","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","getSizeFromViewport_","selector","element","querySelector","metrics","getComputedStyle","parseInt","width","height","constrainCenter","opt_delta","opt_direction","getConstraints","getHints","opt_hints","calculateExtent","opt_size","asserts","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","getProjection","getResolutions","getResolutionForExtent","xResolution","yResolution","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","getState","nearest","getResolutionForZoom","fit","geometryOrExtent","geometry","SimpleGeometry","getType","GeometryType","CIRCLE","Polygon","rotate","isArray","padding","coords","getFlatCoordinates","cosAngle","sinAngle","minRotX","minRotY","maxRotX","maxRotY","getStride","rotX","rotY","isNaN","constrainedResolution","centerRotX","centerRotY","functions","setResolution","centerOn","position","centerX","centerY","opt_anchor","hint","changed","drawTextOnPath","text","measure","startM","maxAngle","reverse","numChars","previousAngle","segmentM","segmentLength","sqrt","chunk","chunkLength","char","charAt","charLength","charM","segmentPos","angle","atan2","abs","interpolate","unshift","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","Instruction_fillInstruction","Instruction_strokeInstruction","beginPathInstruction","closePathInstruction","canvas_Instruction","CanvasReplay","tolerance","maxExtent","pixelRatio","overlaps","declutterTree","VectorContext","maxLineWidth","alignFill_","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","coordinateCache_","renderedTransform_","ol_transform","hitDetectionInstructions","pixelCoordinates_","viewRotation_","tmpExtent","tmpTransform","replayTextBackground_","context","p1","p2","p3","p4","fillInstruction","strokeInstruction","beginPath","moveTo","lineTo","fill_","setStrokeStyle_","stroke","replayImage_","image","anchorX","anchorY","declutterGroup","opacity","originX","originY","scale","snapToPixel","fillStroke","w","h","boxW","boxH","boxX","boxY","transform","strokePadding","round","declutterArgs","render_canvas","applyPixelRatio","dashArray","map","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastCoord","nextCoord","NaN","lastRel","nextRel","skipped","Relationship","drawCustomCoordinates_","ends","replayEnds","replayEnd","drawCustom","feature","renderer","beginGeometry","type","replayBegin","replayEndss","MULTI_POLYGON","getOrientedFlatCoordinates","endss","getEndss","myEnds","inflate","POLYGON","MULTI_LINE_STRING","getEnds","LINE_STRING","MULTI_POINT","POINT","endGeometry","origin","repeatSize","translate","fill","setTransform","instruction","strokeStyle","lineWidth","lineCap","lineJoin","miterLimit","has","lineDashOffset","setLineDash","renderDeclutter_","groupCount","box","collides","insert","declutterData","replay_","skippedFeaturesHash","featureCallback","opt_hitExtent","pixelCoordinates","flat_transform","skipFeatures","dd","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","batchSize","toString","getGeometry","arc","closePath","fn","rotateWithView","backgroundFill","backgroundStroke","begin","baseline","overflow","fillKey","offsetY","strokeKey","strokeWidth","textKey","textScale","pathLength","flat_length","textLength","textAlign","textStates","parts","render_replay","cc","chars","label","part","getImage","fillStyle","replay","replayHitDetection","opt_featureCallback","reverseHitDetectionInstructions","setFillStrokeStyle","fillStyleColor","getColor","colorlike","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","lineDash","strokeStyleLineDashOffset","getLineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","strokeStyleMiterLimit","getMiterLimit","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","finish","Replay","CanvasImageReplay","declutterGroup_","hitDetectionImage_","image_","anchorX_","anchorY_","height_","opacity_","originX_","originY_","rotateWithView_","rotation_","scale_","snapToPixel_","width_","drawCoordinates_","drawPoint","pointGeometry","myBegin","drawMultiPoint","multiPointGeometry","setImageStyle","imageStyle","getAnchor","getSize","hitDetectionImage","getHitDetectionImage","getOrigin","getOpacity","getRotateWithView","getScale","getSnapToPixel","ImageReplay","CanvasLineStringReplay","drawFlatCoordinates_","moveToLineToInstruction","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","lastStroke","LineStringReplay","CanvasPolygonReplay","drawFlatCoordinatess_","numEnds","drawCircle","circleGeometry","setFillStrokeStyles_","color","circleInstruction","drawPolygon","polygonGeometry","drawMultiPolygon","multiPolygonGeometry","simplify","PolygonReplay","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","CanvasTextReplay","labels_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textKey_","fillKey_","strokeKey_","widths_","prune","drawText","fillState","strokeState","textState","geometryType","placement","TextPlacement","LINE","flatEnd","flatOffset","oo","range","drawChars_","getFlatMidpoint","getFlatMidpoints","getFlatInteriorPoint","interiorPoints","getFlatInteriorPoints","drawTextImage_","containsKey","align","lines","split","numLines","widths","font","currentWidth","measureTextWidths","lineHeight","renderWidth","dom","ceil","textBaseline","leftRight","strokeText","fillText","setTextStyle","textStyle","textFillStyle","getFill","textStrokeStyle","getStroke","getFont","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","getText","BATCH_CONSTRUCTORS","Circle","Default","Image","LineString","Text","CanvasReplayGroup","opt_renderBuffer","ReplayGroup","declutterTree_","tolerance_","maxExtent_","overlaps_","pixelRatio_","resolution_","renderBuffer_","replaysByZIndex_","hitDetectionContext_","hitDetectionTransform_","circleArrayCache","fillCircleArrayRowToMiddle","radius","addDeclutter","group","declutter","clip","flatClipCoords","getClipCoords","hasReplays","replays","zIndex","candidates","zKey","replayKey","forEachFeatureAtCoordinate","hitTolerance","declutterReplays","contextSize","hitExtent","clearRect","mask","arraySize","arr","error","getCircleArray","declutteredFeatures","replayType","imageData","getImageData","ReplayType","IMAGE","TEXT","indexOf","all","entry","zs","keys","sort","zIndexKey","getReplay","Constructor","getReplays","opt_replayTypes","opt_declutterReplays","save","replayTypes","restore","canvas_ReplayGroup","CanvasVectorLayerRenderer","vectorLayer","Layer","getDeclutter","rbush_default","dirty_","renderedRevision_","renderedResolution_","renderedExtent_","renderedRenderOrder_","replayGroup_","replayGroupChanged","events","EventType","CLEAR","handleFontsChanged_","layer","LayerType","VECTOR","mapRenderer","disposeInternal","compose","frameState","layerState","skippedFeatureUids","managed","viewState","projectionExtent","vectorSource","getLayer","getSource","getTransform","clipExtent","clipped","replayGroup","clear","replayContext","drawOffsetX","drawOffsetY","transparentLayer","hasRenderListeners","hasListener","render_EventType","RENDER","drawWidth","drawHeight","drawSize","alpha","globalAlpha","getWrapX","canWrapX","worldWidth","offsetX","world","dispatchRenderEvent","mainContextAlpha","drawImage","composeFrame","preCompose","postCompose","thisArg","features","event","getVisible","handleStyleImageChange_","renderIfReadyAndVisible","prepareFrame","animating","viewHints","interacting","updateWhileAnimating","getUpdateWhileAnimating","updateWhileInteracting","getUpdateWhileInteracting","frameStateExtent","vectorLayerRevision","getRevision","vectorLayerRenderBuffer","getRenderBuffer","vectorLayerRenderOrder","getRenderOrder","vector","gutter","getOverlaps","loadFeatures","render","styles","styleFunction","getStyleFunction","dirty","renderFeature","forEachFeatureInExtent","loading","VectorLayer","IMAGE_REPLAYS","hybrid","VECTOR_REPLAYS","DEFAULT","CanvasVectorTileLayerRenderer","TileLayer","renderedLayerRevision_","tmpTransform_","zDirection","getRenderMode","VectorTileRenderType","VECTOR_TILE","getTile","tile","TileState","LOADED","createReplayGroup_","renderTileImage_","layerRevision","renderedTiles","renderMode","revision","renderOrder","replayState","getReplayState","renderedRevision","renderedRenderOrder","source","sourceTileGrid","getTileGrid","getTileGridForProjection","tileCoord","tileExtent","zIndexKeys","tt","tileKeys","sourceTile","sourceTileCoord","sourceTileExtent","getTileCoordExtent","sharedExtent","bufferedExtent","tileProjection","reproject","setProjection","squaredTolerance","getFeatures","getUnits","TILE_PIXELS","setWorldExtent","setExtent","setReplayGroup","found","getReplayGroup","getReplayTransform_","tileGrid","tileResolution","renderResolution","tiles","clips","ABORT","worldOffset","currentZ","currentClip","zz","replayData","replayDeclutter","renderedTileRevision","wrappedTileCoord","getContext","getTilePixelSize","pixelScale","VectorTileLayer","Map_Map","controls","util","interactions","interaction","PluggableMap","createRenderer","Map","registerLayerRenderers","ImageLayer","_string_js__WEBPACK_IMPORTED_MODULE_1__","readBoolean","readBooleanString","_xml_js__WEBPACK_IMPORTED_MODULE_0__","string","exec","readDateTime","dateTime","readDecimal","readDecimalString","parseFloat","readNonNegativeInteger","readNonNegativeIntegerString","readString","trim","writeBooleanTextNode","bool","writeStringTextNode","writeCDATASection","createCDATASection","writeDateTimeTextNode","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","createTextNode","writeDecimalTextNode","decimal","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","EPSG3857Projection","code","Projection","units","METERS","global","worldExtent","getPointResolution","point","PROJECTIONS","fromEPSG4326","input","opt_output","opt_dimension","dimension","output","halfSize","tan","epsg3857_toEPSG4326","atan","exp","epsg4326_EXTENT","METERS_PER_UNIT","EPSG4326Projection","opt_axisOrientation","axisOrientation","metersPerUnit","epsg4326_PROJECTIONS","cache","cloneTransform","identityTransform","addProjection","add","getCode","transforms","proj_get","projectionLike","opt_units","pointResolution","getPointResolutionFunc","toEPSG4326","getTransformFromProjections","vertices","sphere","addEquivalentProjections","projections","forEach","addProjections","destination","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","addCoordinateTransforms","forward","inverse","sourceProj","destProj","fromLonLat","opt_projection","toLonLat","lonLat","lon","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","sourceCode","destinationCode","transformFunc","transformExtent","projections1","projections2","forwardTransform","inverseTransform","addEquivalentTransforms","_obj_js__WEBPACK_IMPORTED_MODULE_0__","findListener","listeners","listener","opt_setDeleteIndex","listenerObj","bindTo","deleteIndex","getListeners","target","listenerMap","ol_lm","getListenerMap","removeListeners","removeEventListener","boundListener","listen","opt_once","callOnce","addEventListener","evt","unlistenByKey","bindListener","listenOnce","unlisten","unlistenAll","LINEAR_RING","GEOMETRY_COLLECTION","Property","DEFAULT_GRADIENT","Heatmap","baseOptions","gradient","blur","shadow","weight","Vector","gradient_","shadow_","circleImage_","styleCache_","handleGradientChanged_","setGradient","setBlur","setRadius","handleStyleChanged_","weightFunction","setStyle","style","Style","Icon","src","setRenderOrder","handleRender_","createCircle_","getRadius","getBlur","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","toDataURL","getGradient","colors","createLinearGradient","step","addColorStop","fillRect","createGradient","view8","putImageData","layer_Heatmap","_obj_js__WEBPACK_IMPORTED_MODULE_4__","preload","useInterimTilesOnError","_layer_Layer_js__WEBPACK_IMPORTED_MODULE_2__","setPreload","setUseInterimTilesOnError","_LayerType_js__WEBPACK_IMPORTED_MODULE_1__","TILE","_index_js__WEBPACK_IMPORTED_MODULE_0__","getPreload","_layer_TileProperty_js__WEBPACK_IMPORTED_MODULE_3__","PRELOAD","getUseInterimTilesOnError","USE_INTERIM_TILES_ON_ERROR","CHANGE","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","ERROR","KEYDOWN","KEYPRESS","LOAD","MOUSEDOWN","MOUSEMOVE","MOUSEOUT","MOUSEUP","MOUSEWHEEL","MSPOINTERDOWN","RESIZE","TOUCHSTART","TOUCHMOVE","TOUCHEND","WHEEL","assign","var_sources","TypeError","getValues","binarySearch","haystack","needle","opt_comparator","mid","cmp","comparator","numberSafeCompareFunction","low","high","a","b","includes","linearFindNearest","reverseSubArray","tmp","extension","remove","find","func","arr1","arr2","len1","stableSort","compareFnc","findIndex","every","el","idx","isSorted","opt_func","opt_strict","compare","currentVal","res","CartoDB","account_","account","mapId_","config_","config","templateCache_","XYZ","attributions","cacheSize","crossOrigin","State","LOADING","wrapX","initializeMap_","getConfig","updateConfig","setConfig","paramHash","JSON","stringify","applyTemplate_","mapUrl","client","XMLHttpRequest","handleInitResponse_","handleInitError_","open","setRequestHeader","send","status","response","responseText","err","setState","READY","tilesUrl","cdn_url","https","layergroupid","setUrl","source_CartoDB","Cluster","distance","geometryFunction","Point","refresh","getDistance","cluster","addFeatures","setDistance","mapDistance","clustered","getCoordinates","neighbors","getFeaturesInExtent","neighbor","uid","createCluster","centroid","Feature","source_Cluster","ImageArcGISRest","crossOrigin_","hidpi_","hidpi","url_","url","imageLoadFunction_","imageLoadFunction","params_","params","imageSize_","ratio_","ratio","getParams","getImageInternal","findNearestResolution","getPixelRatio","F","FORMAT","TRANSPARENT","halfWidth","halfHeight","imageResolution","getRequestUrl_","ol_Image","handleImageChange","getImageLoadFunction","srid","modifiedUrl","uri","getUrl","setImageLoadFunction","updateParams","source_ImageArcGISRest","ImageCanvasSource","canvasFunction_","canvasFunction","canvas_","canvasElement","ImageCanvas","source_ImageCanvas","TileArcGISRest","TileImage","reprojectionErrorThreshold","tileLoadFunction","urls","transition","tmpExtent_","setKey","getKeyForParams_","tileSize","tilecoord","getTilePixelRatio","fixedTileUrlFunction","ol_size","getTileSize","tmpSize","baseParams","source_TileArcGISRest","LabeledTile","ol_Tile","tileSize_","strokeRect","load","TileDebug","Tile","opaque","tileCoordKey","tileCache","textTileCoord","getTileCoordForTileUrlFunction","source_TileDebug","Zoomify","tmp_","reset","multiply","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","f","setFromArray","dx1","dy1","sx","sy","dx2","dy2","invert","det","mat","determinant","IDLE","EMPTY","_source_XYZ_js__WEBPACK_IMPORTED_MODULE_1__","ATTRIBUTION","OSM","clamp","cosh","roundUpToPowerOfTwo","LN2","squaredSegmentDistance","squaredDistance","solveLinearSystem","maxRow","maxEl","absValue","coef","k","toDegrees","angleInRadians","toRadians","angleInDegrees","modulo","lerp","ONE","SRC_ALPHA","COLOR_ATTACHMENT0","COLOR_BUFFER_BIT","TRIANGLES","TRIANGLE_STRIP","ONE_MINUS_SRC_ALPHA","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","STREAM_DRAW","STATIC_DRAW","DYNAMIC_DRAW","CULL_FACE","BLEND","STENCIL_TEST","DEPTH_TEST","SCISSOR_TEST","UNSIGNED_BYTE","UNSIGNED_SHORT","UNSIGNED_INT","FLOAT","RGBA","FRAGMENT_SHADER","VERTEX_SHADER","LINEAR","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_2D","TEXTURE0","CLAMP_TO_EDGE","FRAMEBUFFER","CONTEXT_IDS","opt_attributes","XY","XYM","XYZM","_structs_RBush_js__WEBPACK_IMPORTED_MODULE_17__","VectorSourceEvent","opt_feature","_events_Event_js__WEBPACK_IMPORTED_MODULE_7__","VectorSource","_source_Source_js__WEBPACK_IMPORTED_MODULE_14__","_source_State_js__WEBPACK_IMPORTED_MODULE_15__","loader_","_functions_js__WEBPACK_IMPORTED_MODULE_11__","format_","format","loader","_asserts_js__WEBPACK_IMPORTED_MODULE_5__","_featureloader_js__WEBPACK_IMPORTED_MODULE_10__","strategy_","strategy","_loadingstrategy_js__WEBPACK_IMPORTED_MODULE_12__","useSpatialIndex","collection","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","undefIdIndex_","featureChangeKeys_","featuresCollection_","_Collection_js__WEBPACK_IMPORTED_MODULE_1__","getArray","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","dispatchEvent","_source_VectorEventType_js__WEBPACK_IMPORTED_MODULE_16__","ADDFEATURE","_events_js__WEBPACK_IMPORTED_MODULE_6__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_8__","handleFeatureChange_","_ObjectEventType_js__WEBPACK_IMPORTED_MODULE_3__","PROPERTYCHANGE","valid","id","getId","extents","newFeatures","geometryFeatures","modifyingCollection","REMOVEFEATURE","_CollectionEventType_js__WEBPACK_IMPORTED_MODULE_2__","ADD","REMOVE","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","intersectsCoordinate","forEachInExtent","forEachFeatureIntersectingExtent","intersectsExtent","getFeaturesCollection","getAll","_obj_js__WEBPACK_IMPORTED_MODULE_13__","_array_js__WEBPACK_IMPORTED_MODULE_4__","getFeaturesAtCoordinate","getInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","closestPoint","minSquaredDistance","previousMinSquaredDistance","closestPointXY","minDistance","getFeatureById","getFormat","update","sid","removeFromIdIndex_","CHANGEFEATURE","hasFeature","loadedExtentsRtree","extentsToLoad","extentToLoad","_extent_js__WEBPACK_IMPORTED_MODULE_9__","removeLoadedExtent","removed","setLoader","_style_Style_js__WEBPACK_IMPORTED_MODULE_6__","opt_geometryOrProperties","_Object_js__WEBPACK_IMPORTED_MODULE_4__","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","_events_js__WEBPACK_IMPORTED_MODULE_1__","handleGeometryChanged_","_geom_Geometry_js__WEBPACK_IMPORTED_MODULE_5__","setGeometry","_index_js__WEBPACK_IMPORTED_MODULE_3__","getProperties","setGeometryName","getGeometryName","getStyle","handleGeometryChange_","_events_EventType_js__WEBPACK_IMPORTED_MODULE_2__","createStyleFunction","setId","getChangeType","changeType","body","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","requestFullscreen","FullScreen","cssClassName_","className","labelNode_","labelActive","labelActiveNode_","tipLabel","button","isFullScreen","setAttribute","title","handleClick_","cssClasses","css","isFullScreenSupported","Control","keys_","source_","mozFullScreenEnabled","msFullscreenEnabled","fullscreenEnabled","webkitIsFullScreen","mozFullScreen","msFullscreenElement","fullscreenElement","requestFullScreen","preventDefault","handleFullScreen_","getMap","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","getElementById","getTargetElement","mozRequestFullScreenWithKeys","Element","ALLOW_KEYBOARD_INPUT","requestFullScreenWithKeys","handleFullScreenChange_","updateSize","setMap","listenerKeys","control_FullScreen","OverviewMap","collapsed_","collapsed","collapsible_","collapsible","collapseLabel","collapseLabel_","textContent","label_","activeLabel","ovmapDiv_","ovmap_","Collection","view","ovmap","layers","addLayer","boxSizing","boxOverlay_","Overlay","positioning","OverlayPositioning","addOverlay","scope","overlay","overlayBox","getElement","move","getEventCoordinate","mousePosition","clientX","offsetWidth","clientY","offsetHeight","computeDesiredMousePosition","setPosition","endMoving","getView","mapEvent","validateExtent_","updateBox_","oldMap","oldView","unbindView_","setTarget","ObjectEventType","handleMapPropertyChange_","getLayers","getLength","setLayerGroup","getLayerGroup","bindView_","resetExtent_","MapProperty","VIEW","newView","handleRotationChanged_","isRendered","mapSize","ovmapSize","ovextent","topLeftPixel","getPixelFromCoordinate","bottomRightPixel","boxWidth","boxHeight","ovmapWidth","ovmapHeight","recenter_","ovview","steps","MAX_RATIO","ovresolution","bottomLeft","topRight","rotateBottomLeft","calculateCoordinateRotate_","coordinateRotate","ol_coordinate","handleToggle_","classList","toggle","MapEventType","POSTRENDER","getCollapsible","setCollapsible","setCollapsed","getCollapsed","getOverviewMap","control_OverviewMap","ScaleLine_Units","LEADING_DIGITS","ScaleLine","innerElement_","element_","viewState_","minWidth_","minWidth","renderedVisible_","renderedWidth_","renderedHTML_","ScaleLine_render","handleUnitsChanged_","setUnits","updateElement_","display","pointResolutionUnits","nominalCount","suffix","metersPerDegree","count","html","innerHTML","control_ScaleLine","Direction","ZoomSlider","currentResolution_","direction_","dragging_","heightLimit_","widthLimit_","previousX_","previousY_","thumbSize_","sliderInitialized_","duration_","thumbElement","containerElement","dragger_","PointerEventHandler","pointer_EventType","POINTERDOWN","handleDraggerStart_","POINTERMOVE","handleDraggerDrag_","POINTERUP","handleDraggerEnd_","handleContainerClick_","Event","ZoomSlider_render","initSlider_","setThumbPosition_","dispose","container","containerSize","thumb","computedStyle","thumbWidth","thumbHeight","relativePosition","getRelativePosition_","getResolutionForPosition_","originalEvent","left","top","getPositionForResolution_","amount","control_ZoomSlider","ZoomToExtent","handleZoomToExtent","control_ZoomToExtent","_transform_js__WEBPACK_IMPORTED_MODULE_4__","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","labelCache","_structs_LRUCache_js__WEBPACK_IMPORTED_MODULE_3__","checkedFonts","measureContext","textHeights","checkFont","retries","checked","referenceFonts","len","interval","referenceWidth","isAvailable","getMeasureContext","available","referenceFont","measureText","check","done","_obj_js__WEBPACK_IMPORTED_MODULE_2__","clearInterval","fontSpec","fontFamilies","_css_js__WEBPACK_IMPORTED_MODULE_0__","fontFamily","setInterval","_dom_js__WEBPACK_IMPORTED_MODULE_1__","measureTextHeight","span","heights","margin","removeChild","measureTextWidth","rotateAtOffset","resetTransform","_AssertionError_js__WEBPACK_IMPORTED_MODULE_0__","assert","assertion","errorCode","TRUE","FALSE","UNDEFINED","_math_js__WEBPACK_IMPORTED_MODULE_6__","opt_layout","_geom_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_4__","setCoordinates","setFlatCoordinates","layout","computeExtent","_extent_js__WEBPACK_IMPORTED_MODULE_1__","_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_3__","setLayout","_geom_flat_deflate_js__WEBPACK_IMPORTED_MODULE_5__","_geom_GeometryLayout_js__WEBPACK_IMPORTED_MODULE_2__","setFlatCoordinatesInternal","createCanvasContext2D","opt_width","opt_height","outerWidth","marginLeft","marginRight","outerHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","removeChildren","lastChild","ObjectEvent","oldValue","_events_Event_js__WEBPACK_IMPORTED_MODULE_3__","BaseObject","opt_values","_Observable_js__WEBPACK_IMPORTED_MODULE_2__","values_","changeEventTypeCache","getChangeEventType","getKeys","notify","eventType","_ObjectEventType_js__WEBPACK_IMPORTED_MODULE_1__","opt_silent","unset","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","getAngle","ol_Kinetic","DoubleClickZoom","delta_","Interaction","handleEvent","mapBrowserEvent","stopEvent","browserEvent","MapBrowserEventType","shiftKey","interaction_DoubleClickZoom","DragPan","Pointer","handleDownEvent","handleDragEvent","handleUpEvent","kinetic_","kinetic","lastCentroid","lastPointersCount_","condition_","condition","events_condition","noKinetic_","targetPointers","centerpx","dest","getCoordinateFromPixel","handlingDownUpSequence","shouldStopEvent","interaction_DragPan","DragRotate","DragRotate_handleDownEvent","DragRotate_handleDragEvent","DragRotate_handleUpEvent","lastAngle_","pixel","theta","interaction_DragRotate","RenderBox","geometry_","map_","startPixel_","endPixel_","Disposable","render_","startPixel","endPixel","getOverlayContainer","setPixels","createOrUpdateGeometry","Box","DragBoxEventType","BOXSTART","BOXDRAG","BOXEND","DragBoxEvent","DragBox","DragBox_handleDownEvent","DragBox_handleDragEvent","DragBox_handleUpEvent","box_","minArea_","minArea","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","onBoxEnd","interaction_DragBox","DragZoom","out_","out","mapExtent","boxPixelExtent","factor","interaction_DragZoom","KeyCode","UP","DOWN","KeyboardPan","KeyboardPan_handleEvent","defaultCondition_","pixelDelta_","pixelDelta","keyCode","mapUnitsDelta","interaction_KeyboardPan","KeyboardZoom","KeyboardZoom_handleEvent","charCode","charCodeAt","interaction_KeyboardZoom","Mode","TRACKPAD","MouseWheelZoom","MouseWheelZoom_handleEvent","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","trackpadZoomBuffer_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","clearTimeout","decrementInteractingHint_","rebound","timeLeft","handleWheelZoom_","setMouseAnchor","interaction_MouseWheelZoom","PinchRotate","PinchRotate_handleDownEvent","PinchRotate_handleDragEvent","PinchRotate_handleUpEvent","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","viewportPosition","getViewport","getBoundingClientRect","interaction_PinchRotate","PinchZoom","PinchZoom_handleDownEvent","PinchZoom_handleDragEvent","PinchZoom_handleUpEvent","lastDistance_","lastScaleDelta_","scaleDelta","newResolution","interaction_PinchZoom","DragAndDropEventType","DragAndDropEvent","file","opt_features","DragAndDrop","formatConstructors_","formatConstructors","dropListenKeys_","handleDrop","files","dataTransfer","item","reader","FileReader","handleResult_","readAsText","handleStop","stopPropagation","dropEffect","formatConstructor","tryReadFeatures_","featureProjection","registerListeners_","dropArea","setActive","active","unregisterListeners_","getActive","readFeatures","interaction_DragAndDrop","DragRotateAndZoom","DragRotateAndZoom_handleDownEvent","DragRotateAndZoom_handleDragEvent","DragRotateAndZoom_handleUpEvent","lastMagnitude_","magnitude","angleDelta","interaction_DragRotateAndZoom","ModifyEventType","MODIFYSTART","MODIFYEND","ModifyEvent","mapBrowserPointerEvent","Modify","Modify_handleDownEvent","Modify_handleDragEvent","Modify_handleEvent","Modify_handleUpEvent","defaultDeleteCondition_","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexFeature_","vertexSegments_","lastPixel_","ignoreNextSingleClick_","modified_","rBush_","RBush","pixelTolerance_","pixelTolerance","snappedToVertex_","changingFeature_","dragSegments_","overlay_","source_Vector","getDefaultStyleFunction","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","LinearRing","writePolygonGeometry_","MultiPoint","writeMultiPointGeometry_","MultiLineString","writeMultiLineStringGeometry_","MultiPolygon","writeMultiPolygonGeometry_","writeCircleGeometry_","GeometryCollection","writeGeometryCollectionGeometry_","VectorEventType","handleSourceAdd_","handleSourceRemove_","Error","features_","addFeature_","CollectionEventType","handleFeatureAdd_","handleFeatureRemove_","lastPointerEvent_","CIRCLE_CENTER_INDEX","CIRCLE_CIRCUMFERENCE_INDEX","compareIndexes","handlePointerAtPixel_","pixelCoordinate","vertexFeature","insertVertices","vertex","vertexExtent","segmentDataMatches","componentSegments","segmentDataMatch","segment","depth","closestVertex","closestOnSegmentData","willModifyFeatures_","insertVertex_","dragSegment","segmentData","setGeometryCoordinates_","createOrUpdateVertexFeature_","centerSegmentData","featureSegments","circumferenceSegmentData","MapBrowserPointerEvent","handled","handlePointerMove_","SINGLECLICK","removePoint","pointDistanceToSegmentDataSquared","pointCoordinates","distanceToCenterSquared","distanceToCircumference","getClosestPoint","removeFeature_","removeFeatureSegmentData_","rBush","nodesToRemove","points","rings","polygons","kk","geometries","getGeometriesArray","sortByDistance","nodes","closestSegment","vertexPixel","dist","vertexSegments","pixel1","pixel2","squaredDist1","squaredDist2","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","POINTERDRAG","removeVertex_","dragSegments","segmentsByFeature","component","newIndex","right","deleted","segments","interaction_Modify","Snap","Snap_handleEvent","Snap_handleUpEvent","vertex_","edge_","edge","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","sortByDistance_","deltaA","deltaB","snapTo","snapped","featuresToUpdate","updateFeature_","opt_listen","register","feature_uid","segmentWriter","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","opt_unlisten","unregister","currentMap","lowerLeft","upperRight","snappedToVertex","isCircle","interaction_Snap","TranslateEventType","TRANSLATESTART","TRANSLATING","TRANSLATEEND","TranslateEvent","Translate","Translate_handleDownEvent","Translate_handleDragEvent","handleMoveEvent","Translate_handleUpEvent","layerFilter","lastCoordinate_","layerFilter_","hitTolerance_","lastFeature_","ACTIVE","handleActiveChanged_","featuresAtPixel_","newCoordinate","geom","elem","forEachFeatureAtPixel","getHitTolerance","setHitTolerance","updateState_","interaction_Translate","defaults","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","closestOnCircle","circle","closestOnSegment","along","createStringXY","opt_fractionDigits","template","toFixed","toStringXY","degreesToStringHDMS","hemispheres","degrees","normalizedDegrees","_math_js__WEBPACK_IMPORTED_MODULE_0__","dflPrecision","precision","deg","sec","coordinate1","coordinate2","coord1","coord2","squaredDistanceToSegment","toStringHDMS","propagationStopped","_has_js__WEBPACK_IMPORTED_MODULE_3__","altKeyOnly","altKey","metaKey","ctrlKey","altShiftKeysOnly","focus","activeElement","always","_functions_js__WEBPACK_IMPORTED_MODULE_2__","click","_MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_0__","mouseActionButton","never","pointerMove","singleClick","noModifierKeys","platformModifierKeyOnly","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","_asserts_js__WEBPACK_IMPORTED_MODULE_1__","pointerEvent","pointerType","primaryAction","isPrimary","_style_Style_js__WEBPACK_IMPORTED_MODULE_5__","renderBuffer","declutter_","updateWhileAnimating_","updateWhileInteracting_","renderMode_","_layer_VectorRenderType_js__WEBPACK_IMPORTED_MODULE_3__","setDeclutter","_math_js__WEBPACK_IMPORTED_MODULE_18__","_geom_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_7__","ends_","flatInteriorPointRevision_","flatInteriorPoint_","maxDelta_","maxDeltaRevision_","orientedRevision_","orientedFlatCoordinates_","circular","opt_n","opt_sphereRadius","_array_js__WEBPACK_IMPORTED_MODULE_1__","_sphere_js__WEBPACK_IMPORTED_MODULE_8__","polygon","_geom_GeometryLayout_js__WEBPACK_IMPORTED_MODULE_3__","fromExtent","fromCircle","opt_sides","opt_angle","sides","getLayout","arrayLength","makeRegular","startAngle","appendLinearRing","linearRing","_extent_js__WEBPACK_IMPORTED_MODULE_2__","_geom_flat_closest_js__WEBPACK_IMPORTED_MODULE_10__","_geom_flat_contains_js__WEBPACK_IMPORTED_MODULE_11__","_geom_flat_area_js__WEBPACK_IMPORTED_MODULE_9__","opt_right","_geom_flat_orient_js__WEBPACK_IMPORTED_MODULE_16__","_geom_flat_inflate_js__WEBPACK_IMPORTED_MODULE_13__","flatCenter","_geom_flat_interiorpoint_js__WEBPACK_IMPORTED_MODULE_14__","getInteriorPoint","_geom_Point_js__WEBPACK_IMPORTED_MODULE_6__","getLinearRingCount","getLinearRing","_geom_LinearRing_js__WEBPACK_IMPORTED_MODULE_5__","getLinearRings","linearRings","getSimplifiedGeometryInternal","simplifiedFlatCoordinates","simplifiedEnds","_geom_flat_simplify_js__WEBPACK_IMPORTED_MODULE_17__","simplifiedPolygon","_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_4__","_geom_flat_intersectsextent_js__WEBPACK_IMPORTED_MODULE_15__","_geom_flat_deflate_js__WEBPACK_IMPORTED_MODULE_12__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_0__","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","_geom_flat_simplify_js__WEBPACK_IMPORTED_MODULE_13__","_geom_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_5__","flatMidpoint_","flatMidpointRevision_","appendCoordinate","lineString","_geom_flat_closest_js__WEBPACK_IMPORTED_MODULE_6__","forEachSegment","_geom_flat_segments_js__WEBPACK_IMPORTED_MODULE_12__","getCoordinateAtM","opt_extrapolate","extrapolate","_geom_flat_interpolate_js__WEBPACK_IMPORTED_MODULE_9__","_geom_flat_inflate_js__WEBPACK_IMPORTED_MODULE_8__","getCoordinateAt","opt_dest","_geom_flat_length_js__WEBPACK_IMPORTED_MODULE_11__","simplifiedLineString","_geom_flat_intersectsextent_js__WEBPACK_IMPORTED_MODULE_10__","_geom_flat_deflate_js__WEBPACK_IMPORTED_MODULE_7__","_proj_js__WEBPACK_IMPORTED_MODULE_2__","FeatureFormat","dataProjection","defaultFeatureProjection","transformWithOptions","write","transformed","_geom_Geometry_js__WEBPACK_IMPORTED_MODULE_0__","decimals","getReadOptions","readProjection","adaptOptions","_obj_js__WEBPACK_IMPORTED_MODULE_1__","getLastExtent","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","_obj_js__WEBPACK_IMPORTED_MODULE_5__","_functions_js__WEBPACK_IMPORTED_MODULE_1__","PointerInteraction","_interaction_Interaction_js__WEBPACK_IMPORTED_MODULE_4__","handleDownEvent_","handleDragEvent_","handleMoveEvent_","handleUpEvent_","trackedPointers_","pointerEvents","_MapBrowserPointerEvent_js__WEBPACK_IMPORTED_MODULE_3__","updateTrackedPointers_","_MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_2__","handledUp","isPointerDraggingEvent","pointerId","_proj_js__WEBPACK_IMPORTED_MODULE_13__","GeoJSON","_format_JSONFeature_js__WEBPACK_IMPORTED_MODULE_4__","geometryName","extractGeometryName_","extractGeometryName","GEOMETRY_READERS","_geom_Point_js__WEBPACK_IMPORTED_MODULE_10__","_geom_LineString_js__WEBPACK_IMPORTED_MODULE_6__","_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_11__","_geom_MultiPoint_js__WEBPACK_IMPORTED_MODULE_8__","_geom_MultiLineString_js__WEBPACK_IMPORTED_MODULE_7__","_geom_MultiPolygon_js__WEBPACK_IMPORTED_MODULE_9__","_geom_GeometryCollection_js__WEBPACK_IMPORTED_MODULE_5__","GEOMETRY_WRITERS","rightHanded","_obj_js__WEBPACK_IMPORTED_MODULE_12__","geometryReader","_format_Feature_js__WEBPACK_IMPORTED_MODULE_3__","geometryWriter","readFeatureFromObject","geoJSONFeature","_Feature_js__WEBPACK_IMPORTED_MODULE_2__","geometry_name","readFeaturesFromObject","geoJSONFeatures","readGeometryFromObject","readProjectionFromObject","crs","writeFeatureObject","writeFeaturesObject","objects","writeGeometryObject","_math_js__WEBPACK_IMPORTED_MODULE_4__","_Object_js__WEBPACK_IMPORTED_MODULE_1__","pan","opt_duration","_easing_js__WEBPACK_IMPORTED_MODULE_2__","rotateWithoutConstraints","currentRotation","zoomWithoutConstraints","zoomByDelta","_interaction_Property_js__WEBPACK_IMPORTED_MODULE_3__","_tilegrid_js__WEBPACK_IMPORTED_MODULE_8__","BingMaps","_source_TileImage_js__WEBPACK_IMPORTED_MODULE_6__","_proj_js__WEBPACK_IMPORTED_MODULE_4__","_source_State_js__WEBPACK_IMPORTED_MODULE_5__","tilePixelRatio","culture_","culture","maxZoom_","apiKey_","imagerySet_","imagerySet","_net_js__WEBPACK_IMPORTED_MODULE_3__","handleImageryMetadataResponse","getApiKey","getImagerySet","statusCode","statusDescription","authenticationResultCode","resourceSets","resources","resource","zoomMax","imageWidth","imageHeight","zoomMin","tileUrlFunction","_tileurlfunction_js__WEBPACK_IMPORTED_MODULE_1__","imageUrlSubdomains","subdomain","quadKeyTileCoord","imageUrl","_tilecoord_js__WEBPACK_IMPORTED_MODULE_7__","imageryProviders","setAttributions","imageryProvider","intersecting","coverageAreas","coverageArea","bbox","epsg4326Extent","attribution","getFontFamilies","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","family","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","CANVAS_LINE_DASH","GEOLOCATION","TOUCH","POINTER","MSPOINTER","WEBGL","_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_7__","_xml_js__WEBPACK_IMPORTED_MODULE_15__","GMLNS","GMLBase","featureType","featureNS","srsName","schemaLocation","FEATURE_COLLECTION_PARSERS","featureMember","readFeaturesInternal","featureMembers","_format_XMLFeature_js__WEBPACK_IMPORTED_MODULE_4__","ONLY_WHITESPACE_RE","prefix","defaultPrefix","childNodes","child","ft","candidate","featureTypes","readFeatureElement","readGeometryElement","getAttribute","GEOMETRY_PARSERS_","fid","test","readPoint","readFlatCoordinatesFromNode_","_geom_Point_js__WEBPACK_IMPORTED_MODULE_11__","_geom_GeometryLayout_js__WEBPACK_IMPORTED_MODULE_5__","readMultiPoint","MULTIPOINT_PARSERS_","_geom_MultiPoint_js__WEBPACK_IMPORTED_MODULE_9__","readMultiLineString","lineStrings","MULTILINESTRING_PARSERS_","multiLineString","_geom_MultiLineString_js__WEBPACK_IMPORTED_MODULE_8__","setLineStrings","readMultiPolygon","MULTIPOLYGON_PARSERS_","multiPolygon","_geom_MultiPolygon_js__WEBPACK_IMPORTED_MODULE_10__","setPolygons","pointMemberParser_","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","readLineString","readFlatLinearRing_","ring","GEOMETRY_FLAT_COORDINATES_PARSERS_","readLinearRing","_geom_LinearRing_js__WEBPACK_IMPORTED_MODULE_7__","readPolygon","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS_","_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_12__","http://www.opengis.net/gml","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","readGeometryFromNode","readFeaturesFromNode","readProjectionFromNode","_proj_js__WEBPACK_IMPORTED_MODULE_14__","_events_js__WEBPACK_IMPORTED_MODULE_5__","_Object_js__WEBPACK_IMPORTED_MODULE_3__","target_","_dom_js__WEBPACK_IMPORTED_MODULE_4__","getOverlayContainerStopEvent","_MapEventType_js__WEBPACK_IMPORTED_MODULE_2__","_tilegrid_js__WEBPACK_IMPORTED_MODULE_2__","_source_TileImage_js__WEBPACK_IMPORTED_MODULE_1__","_events_Event_js__WEBPACK_IMPORTED_MODULE_4__","CollectionEvent","opt_element","opt_array","unique_","unique","array_","assertUnique_","updateLength_","insertAt","removeAt","prev","setAt","opt_except","_AssertionError_js__WEBPACK_IMPORTED_MODULE_1__","_obj_js__WEBPACK_IMPORTED_MODULE_6__","_geom_Geometry_js__WEBPACK_IMPORTED_MODULE_3__","_geom_GeometryLayout_js__WEBPACK_IMPORTED_MODULE_4__","getStrideForLayout","transformGeom2D","simpleGeometry","_geom_flat_transform_js__WEBPACK_IMPORTED_MODULE_5__","getFirstCoordinate","getLastCoordinate","getSimplifiedGeometry","simplifiedGeometryRevision","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometry","nesting","getLayoutForStride","opt_sy","easeIn","easeOut","inAndOut","linear","opt_tileCoord","getKeyZXY","getKey","fromKey","hash","quadKey","digits","fromCharCode","withinExtentAndZ","tileRange","getTileRangeForExtentAndZ","getFullTileRange","num","hasArea","toSize","FEET","PIXELS","USFEET","transform2D","TileJSON","tileJSON_","_source_TileImage_js__WEBPACK_IMPORTED_MODULE_7__","_proj_js__WEBPACK_IMPORTED_MODULE_5__","_source_State_js__WEBPACK_IMPORTED_MODULE_6__","jsonp","_net_js__WEBPACK_IMPORTED_MODULE_4__","handleTileJSONResponse","handleTileJSONError","onXHRLoad_","onXHRError_","tileJSON","_asserts_js__WEBPACK_IMPORTED_MODULE_2__","getTileJSON","epsg4326Projection","bounds","_extent_js__WEBPACK_IMPORTED_MODULE_3__","minzoom","maxzoom","getAttributions","attributionExtent","ReprojImage","targetProj","targetExtent","getImageFunction","targetProj_","maxSourceExtent_","maxTargetExtent","limitedTargetExtent","reproj","errorThresholdInPixels","triangulation_","Triangulation","targetResolution_","targetExtent_","sourceExtent","calculateSourceExtent","sourceImage_","sourcePixelRatio_","sourceListenerKey_","ImageState","ImageBase","unlistenSource_","reproject_","sourceState","defaultImageLoadFunction","ImageSourceEventType","ImageSourceEvent","ImageSource","Source","reprojectedImage_","reprojectedRevision_","ReprojTile","targetTileGrid","getTileFunction","opt_errorThreshold","opt_renderEdges","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxSourceExtent","sourceProjExtent","isFinite","getTriangles","getZForResolution","sourceRange","srcX","srcY","unlistenSources_","sources","leftToLoad","sourceListenKey","reproj_Tile","UrlTile","defaultTileLoadFunction","tileClass","ImageTile","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","renderReprojectionEdges_","imageTile","canExpireCache","expireCache","usedTiles","usedTileCache","getTileCacheForProjection","getGutter","ol_proj","getGutterInternal","getOpaque","thisProj","projKey","ol_tilegrid","TileCache","highWaterMark","createTile_","urlTileCoord","tileUrl","tileOptions","handleTileChange","newTile","getTileInternal","interimTile","refreshInterimChain","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","_source_State_js__WEBPACK_IMPORTED_MODULE_8__","_layer_Base_js__WEBPACK_IMPORTED_MODULE_4__","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","_events_js__WEBPACK_IMPORTED_MODULE_0__","_layer_Property_js__WEBPACK_IMPORTED_MODULE_5__","SOURCE","handleSourcePropertyChange_","setSource","visibleAtResolution","visible","_index_js__WEBPACK_IMPORTED_MODULE_2__","getLayersArray","getLayerStatesArray","opt_states","states","getLayerState","getSourceState","handleSourceChange_","_events_EventType_js__WEBPACK_IMPORTED_MODULE_1__","_render_EventType_js__WEBPACK_IMPORTED_MODULE_7__","PRECOMPOSE","layerStatesArray","layerStates","_tilegrid_TileGrid_js__WEBPACK_IMPORTED_MODULE_7__","getForProjection","getDefaultTileGrid","createForProjection","setDefaultTileGrid","getTileCoordCenter","extentFromProjection","worldsAway","getTileCoordForCoordAndZ","createXYZ","resolutionsFromExtent","opt_maxZoom","opt_tileSize","_tilegrid_common_js__WEBPACK_IMPORTED_MODULE_0__","_size_js__WEBPACK_IMPORTED_MODULE_1__","opt_corner","_extent_Corner_js__WEBPACK_IMPORTED_MODULE_3__","createForExtent","half","_proj_Units_js__WEBPACK_IMPORTED_MODULE_6__","_proj_Units_js__WEBPACK_IMPORTED_MODULE_0__","code_","units_","extent_","worldExtent_","axisOrientation_","global_","canWrapX_","getPointResolutionFunc_","defaultTileGrid_","metersPerUnit_","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","setGetPointResolution","PJD_3PARAM","PJD_7PARAM","PJD_WGS84","PJD_NODATUM","SEC_TO_RAD","HALF_PI","SIXTH","RA4","RA6","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","PrimeMeridian_exports","greenwich","lisbon","paris","bogota","madrid","rome","bern","jakarta","ferro","brussels","stockholm","athens","oslo","to_meter","us-ft","ignoredChar","match","testkey","lkey","projString","defData","paramName","paramVal","paramOutname","self","paramObj","v","reduce","datum","rf","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","lonc","longc","x_0","y_0","k_0","k0","r_a","R_A","zone","south","utmSouth","towgs84","datum_params","unit","from_greenwich","pm","nadgrids","datumCode","axis","substr","txt","Parser","NEUTRAL","whitespace","latin","keyword","endThings","digets","level","place","root","stack","currentObject","mapit","thing","newObj","sExpr","convert","readCharicter","neutral","quoted","afterquote","number","word","afterItem","newObjects","wkt_parser_D2R","d2r","wkt_parser","wkt","lisp","projName","local","PROJECTION","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","ellps","outName","inName","rename","cleanWKT","defs","that","def","EPSG","ESRI","IAU2000","console","WGS84","GOOGLE","lib_defs","codeWords","parseCode","testObj","testDef","some","testWKT","testProj","msfnz","eccent","sinphi","cosphi","con","sign","adjust_lon","tsfnz","phi","com","phi2z","ts","dphi","eccnth","identity","pt","projs","init","es","lat","names","projections_names","projStore","Ellipsoid_exports","MERIT","ellipseName","SGS85","GRS80","IAU76","airy","APL4","NWL9D","mod_airy","andrae","aust_SA","GRS67","bessel","bess_nam","clrk66","clrk80","clrk58","CPM","delmbr","engelis","evrst30","evrst48","evrst56","evrst69","evrstSS","fschr60","fschr60m","fschr68","helmert","hough","intl","kaula","lerch","mprts","new_intl","plessis","krass","SEasia","walbeck","WGS60","WGS66","WGS7","Datum_exports","wgs84","ellipse","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","lib_datum","ep2","datum_type","srsCode","json","ourProj","datumDef","sphere_","deriveConstants_sphere","ecc","eccentricity","datumObj","Proj","checkParams","compareDatums","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","geodeticToGeocentric","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricToWgs84","x_tmp","y_tmp","z_tmp","geocentricFromWgs84","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","X","Y","Z","geocentricToGeodetic","adjust_axis","denorm","xin","yin","zin","toPoint","checkSanity","checkCoord","checkNotWGS","datum_transform","core_wgs84","transformer","from","to","transformedArray","checkProj","oProj","core","fromProj","toProj","coord","single","NUM_100K_SETS","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","mgrs_A","I","O","mgrs_V","mgrs_Z","mgrs","mgrs_forward","UTMtoLL","decode","toUpperCase","bottom","mgrs_toPoint","ll","accuracy","utm","seasting","easting","snorthing","northing","zoneNumber","zoneLetter","setParm","get100kSetForZone","setColumn","setRow","column","row","parm","colOrigin","rowOrigin","colInt","rowInt","rollover","getLetter100kID","get100kID","encode","N","T","C","A","M","LongOriginRad","ZoneNumber","Lat","Long","LatRad","degToRad","LongRad","UTMEasting","UTMNorthing","LetterDesignator","getLetterDesignator","LLtoUTM","radToDeg","rad","N1","T1","C1","R1","D","LongOrigin","mu","phi1Rad","mgrsString","testChar","hunK","sb","substring","east100k","curCol","eastingValue","rewindMarker","getEastingFromChar","north100k","curRow","northingValue","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","warn","fromMGRS","mgrsStr","toMGRS","lib_Point","C08","pj_enfn","en","pj_mlfn","sphi","cphi","pj_inv_mlfn","arg","tmerc","ml0","delta_lon","sin_phi","cos_phi","al","als","cs","tq","ml","tan_phi","ds","g","temp","asin","sinh","hypot","asinhy","log1py","gatg","pp","B","cos_2B","h1","h2","clens","arg_r","hr","hr1","hr2","clens_cmplx","arg_i","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","cosh_arg_i","hi1","hi","etmerc","cgb","cbg","utg","gtu","np","Qn","Zb","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","adjust_zone","dependsOn","srat","esinp","gauss_MAX_ITER","gauss","rc","phic0","ratexp","K","sterea","sinc0","cosc0","R2","sinc","cosc","cosl","rho","stere","coslat0","sinlat0","cons","ms1","X0","ssfn_","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","ce","Chi","phit","eccen","somerc","phy0","lambda0","sinPhy0","semiMajorAxis","flattening","R","b0","k1","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","omerc","no_off","no_rot","bl","fl","t0","dl","t1","t2","hl","jl","pl","dlon12","dlon10","gamma0","uc","us","vs","ql","sl","tl","vl","ul","POSITIVE_INFINITY","qp","sp","tp","vp","up","lcc","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","f0","rh1","krovak","s45","s90","fi0","alfa","uq","u0","n0","s0","ro0","ad","gfi","u","deltav","eps","ro","czech","fi1","ok","mlfn","e0","e3","e0fn","e1fn","e2fn","e3fn","gN","adjust_lat","imlfn","cass","lam","nl","asq","cl","ml1","phi1","nl1","rl1","tl1","dsq","qsfnz","P00","P01","P02","P10","P11","P20","laea","S_POLE","N_POLE","EQUIT","OBLIQ","mmf","apa","APA","authset","rq","xmf","ymf","sinb1","cosb1","sinph0","cosph0","coslam","sinlam","q","sinb","cosb","phi0","cCe","sCe","ab","cosz","sinz","beta","authlat","asinz","aea","sin_po","cos_po","qs1","qs2","t3","qs0","ns0","qs","phi1z","eccnts","gnom","sin_p14","cos_p14","infinity_dist","coslon","iqsfnz","cea","eqc","dlat","poly_MAX_ITER","poly","tanphi","mln","mlnp","ma","nzmg","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","mill","sinu_MAX_ITER","sinu","C_y","C_x","V","moll","delta_theta","eqdc","ml2","vandg","sinth","costh","gsq","msq","xx","yy","xys","c3","m1","th1","aeqd","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","H","GH","Hs","kp","cos_c","s2","s3","s4","cosAz","Ee","ortho","FACE_ENUM","FRONT","BACK","TOP","BOTTOM","AREA_ENUM","AREA_0","AREA_1","AREA_2","AREA_3","qsc_fwd_equat_face_theta","qsc_shift_lon_origin","slon","qsc","face","one_minus_f","one_minus_f_squared","xy","sinlon","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","defaultDatum","version","proj4_package","proj4","proj4_projs","_geom_flat_simplify_js__WEBPACK_IMPORTED_MODULE_12__","_geom_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_6__","appendLineString","_geom_flat_closest_js__WEBPACK_IMPORTED_MODULE_7__","opt_interpolate","_geom_flat_interpolate_js__WEBPACK_IMPORTED_MODULE_10__","_geom_flat_inflate_js__WEBPACK_IMPORTED_MODULE_9__","getLineString","_geom_LineString_js__WEBPACK_IMPORTED_MODULE_5__","getLineStrings","midpoints","midpoint","simplifiedMultiLineString","_geom_flat_intersectsextent_js__WEBPACK_IMPORTED_MODULE_11__","_geom_flat_deflate_js__WEBPACK_IMPORTED_MODULE_8__","EventTarget","_Disposable_js__WEBPACK_IMPORTED_MODULE_1__","pendingRemovals_","dispatching_","listeners_","propagate","pendingRemovals","_functions_js__WEBPACK_IMPORTED_MODULE_3__","_events_js__WEBPACK_IMPORTED_MODULE_2__","opt_type","_math_js__WEBPACK_IMPORTED_MODULE_9__","appendPoint","multiPoint","getPoint","_geom_Point_js__WEBPACK_IMPORTED_MODULE_5__","getPoints","_uri_js__WEBPACK_IMPORTED_MODULE_13__","TileWMS","transparent","_source_TileImage_js__WEBPACK_IMPORTED_MODULE_9__","v13_","serverType_","updateV13_","_index_js__WEBPACK_IMPORTED_MODULE_1__","getGetFeatureInfoUrl","projectionObj","_proj_js__WEBPACK_IMPORTED_MODULE_6__","sourceProjectionObj","getTileCoordForCoordAndResolution","_size_js__WEBPACK_IMPORTED_MODULE_8__","_reproj_js__WEBPACK_IMPORTED_MODULE_7__","SERVICE","_common_js__WEBPACK_IMPORTED_MODULE_0__","REQUEST","QUERY_LAYERS","_source_WMSServerType_js__WEBPACK_IMPORTED_MODULE_10__","GEOSERVER","dpi","MAPSERVER","CARMENTA_SERVER","QGIS","_math_js__WEBPACK_IMPORTED_MODULE_5__","_tilecoord_js__WEBPACK_IMPORTED_MODULE_11__","_string_js__WEBPACK_IMPORTED_MODULE_12__","_style_Stroke_js__WEBPACK_IMPORTED_MODULE_4__","geometryFunction_","defaultGeometryFunction","renderer_","stroke_","zIndex_","toFunction","getZIndex","getRenderer","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","setZIndex","defaultStyles","createDefaultStyle","_style_Fill_js__WEBPACK_IMPORTED_MODULE_3__","_style_Circle_js__WEBPACK_IMPORTED_MODULE_2__","createEditingStyle","white","blue","_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__","concat","_events_EventType_js__WEBPACK_IMPORTED_MODULE_4__","_events_EventTarget_js__WEBPACK_IMPORTED_MODULE_3__","transition_","transitionStarts_","getInterimTile","_TileState_js__WEBPACK_IMPORTED_MODULE_1__","getTileCoord","getAlpha","time","inTransition","endTransition","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","_math_js__WEBPACK_IMPORTED_MODULE_1__","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","fromString","rgb","fromNamed","hasAlpha","normalize","fromStringInternal_","asArray","POSTCOMPOSE","_render_ReplayType_js__WEBPACK_IMPORTED_MODULE_0__","ORDER","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","appendPolygon","newEndss","_geom_flat_area_js__WEBPACK_IMPORTED_MODULE_8__","flatCenters","_geom_flat_center_js__WEBPACK_IMPORTED_MODULE_9__","getInteriorPoints","_geom_MultiPoint_js__WEBPACK_IMPORTED_MODULE_5__","simplifiedEndss","simplifiedMultiPolygon","getPolygon","prevEnds","_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_6__","getPolygons","lastEnds","_transform_js__WEBPACK_IMPORTED_MODULE_7__","Geometry","extentRevision_","opt_closestPoint","inCoordinates","outCoordinates","pixelExtent","projectedExtent","_geom_flat_transform_js__WEBPACK_IMPORTED_MODULE_4__","_tilecoord_js__WEBPACK_IMPORTED_MODULE_2__","createFromTemplate","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","nullTileUrlFunction","expandUrl","startCharCode","stopCharCode","stop","ENABLE_RASTER_REPROJECTION","ERROR_THRESHOLD","_source_XYZ_js__WEBPACK_IMPORTED_MODULE_2__","ATTRIBUTIONS","_source_OSM_js__WEBPACK_IMPORTED_MODULE_1__","LayerConfig","terrain","terrain-background","terrain-labels","terrain-lines","toner-background","toner","toner-hybrid","toner-labels","toner-lines","toner-lite","watercolor","ProviderConfig","Stamen","provider","providerConfig","layerConfig","Stroke","color_","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","checksum_","setColor","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","getChecksum","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","deflateMultiCoordinatesArray","coordinatesss","opt_endss","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","opt_coordinatesss","linearRingIsClockwise","linearRingIsOriented","isClockwise","linearRingsAreOriented","orientLinearRings","orientLinearRingsArray","_xml_js__WEBPACK_IMPORTED_MODULE_4__","XMLFeature","xmlSerializer_","XMLSerializer","_format_Feature_js__WEBPACK_IMPORTED_MODULE_2__","_format_FormatType_js__WEBPACK_IMPORTED_MODULE_3__","XML","readFeatureFromDocument","readFeatureFromNode","doc","readFeaturesFromDocument","ELEMENT_NODE","readGeometryFromDocument","readProjectionFromDocument","writeFeatureNode","serializeToString","writeFeaturesNode","writeGeometryNode","_render_ReplayType_js__WEBPACK_IMPORTED_MODULE_3__","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","getImageState","_ImageState_js__WEBPACK_IMPORTED_MODULE_1__","imageReplay","textReplay","lineStringReplay","polygonReplay","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","imageState","unlistenImageChange","listenImageChange","renderGeometry","_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_2__","getGeometries","renderFeatureInternal","LAYERGROUP","SIZE","TARGET","WMTSRequestEncoding","KVP","REST","optionsFromCapabilities","WMTS_WMTS","version_","dimensions_","dimensions","layer_","matrixSet_","matrixSet","tileurlfunction","requestEncoding_","requestEncoding","tilematrixset","Service","Request","Version","Format","createFromWMTSTemplate_","localContext","TileMatrix","getMatrixId","TileCol","TileRow","getKeyForDimensions_","wmtsCap","ol_array","elt","tileMatrixSets","supportedCRS","proj1","proj2","matrixLimits","matrixSets","matrixSetObj","projConfig","wgs84BoundingBox","wgs84ProjectionExtent","WMTS","gets","encodings","setUrls","setTileUrlFunction","getDimensions","getMatrixSet","getRequestEncoding","getVersion","updateDimensions","_extent_js__WEBPACK_IMPORTED_MODULE_7__","_Object_js__WEBPACK_IMPORTED_MODULE_2__","insertFirst","_css_js__WEBPACK_IMPORTED_MODULE_4__","autoPan","autoPanAnimation","autoPanMargin","rendered","bottom_","left_","right_","top_","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","_OverlayPositioning_js__WEBPACK_IMPORTED_MODULE_3__","getOffset","getPosition","getPositioning","_dom_js__WEBPACK_IMPORTED_MODULE_5__","_MapEventType_js__WEBPACK_IMPORTED_MODULE_1__","updatePixelPosition","insertBefore","panIntoView","mapRect","getRect","overlayRect","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","pageXOffset","pageYOffset","setVisible","updateRenderedPosition","CENTER_RIGHT","BOTTOM_CENTER","CENTER_CENTER","TOP_CENTER","CENTER_LEFT","getOptions","_color_js__WEBPACK_IMPORTED_MODULE_0__","asColorLike","CanvasPattern","CanvasGradient","isColorLike","FRACTION","_style_Style_js__WEBPACK_IMPORTED_MODULE_25__","DrawEventType","DrawEvent","_events_Event_js__WEBPACK_IMPORTED_MODULE_8__","Draw","_interaction_Pointer_js__WEBPACK_IMPORTED_MODULE_21__","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","snapTolerance_","snapTolerance","type_","_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_13__","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","opt_geometry","_geom_Circle_js__WEBPACK_IMPORTED_MODULE_12__","squaredLength","_coordinate_js__WEBPACK_IMPORTED_MODULE_6__","setCenterAndRadius","_geom_Point_js__WEBPACK_IMPORTED_MODULE_19__","_geom_LineString_js__WEBPACK_IMPORTED_MODULE_14__","_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_20__","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","_layer_Vector_js__WEBPACK_IMPORTED_MODULE_23__","_source_Vector_js__WEBPACK_IMPORTED_MODULE_24__","_events_condition_js__WEBPACK_IMPORTED_MODULE_9__","freehandCondition_","freehand","freehandCondition","_events_js__WEBPACK_IMPORTED_MODULE_7__","_Object_js__WEBPACK_IMPORTED_MODULE_5__","_interaction_Property_js__WEBPACK_IMPORTED_MODULE_22__","_MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_3__","pass","addToDrawing_","_pointer_MouseSource_js__WEBPACK_IMPORTED_MODULE_18__","startDrawing_","_MapBrowserPointerEvent_js__WEBPACK_IMPORTED_MODULE_4__","circleMode","finishDrawing","atFinish_","abortDrawing_","createRegularPolygon","createBox","_extent_js__WEBPACK_IMPORTED_MODULE_10__","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","finishCoordinate","finishPixel","updateSketchFeatures_","last","sketchLineGeom","removeLastPoint","sketchFeature","_geom_MultiPoint_js__WEBPACK_IMPORTED_MODULE_16__","_geom_MultiLineString_js__WEBPACK_IMPORTED_MODULE_15__","_geom_MultiPolygon_js__WEBPACK_IMPORTED_MODULE_17__","sketchFeatures","overlaySource","_MapBrowserEvent_js__WEBPACK_IMPORTED_MODULE_1__","opt_dragging","opt_frameState","_color_js__WEBPACK_IMPORTED_MODULE_1__","Fill","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","multiArrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","opt_tmpPoint","tmpPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","GML3_schemaLocation","GML3","surface_","surface","curve_","curve","multiCurve_","multiCurve","multiSurface_","multiSurface","hasZ","readMultiCurve_","MULTICURVE_PARSERS_","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","flatLinearRing","exteriorParser_","readSurface_","SURFACE_PARSERS_","GeometryLayout","readCurve_","CURVE_PARSERS_","readEnvelope_","ENVELOPE_PARSERS_","readFlatPos_","re","containerSrs","readFlatPosList_","contextDimension","dim","xsd","pos","posList","interior","exterior","Surface","MultiSurface","Curve","MultiCurve","Envelope","curveMember","curveMembers","surfaceMember","surfaceMembers","patches","lowerCorner","upperCorner","PolygonPatch","LineStringSegment","writePos_","srsDimension","getCoords_","opt_srsName","opt_hasZ","writePosList_","writePoint_","writeEnvelope","ENVELOPE_SERIALIZERS_","writeLinearRing_","RING_NODE_FACTORY_","exteriorWritten","writeSurfaceOrPolygon_","RING_SERIALIZERS_","writeSurfacePatches_","writeCurveOrLineString_","writeCurveSegments_","writeMultiSurfaceOrPolygon_","SURFACEORPOLYGONMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writeMultiPoint_","POINTMEMBER_SERIALIZERS_","writeMultiCurveOrLineString_","LINESTRINGORCURVEMEMBER_SERIALIZERS_","writeRing_","writeSurfaceOrPolygonMember_","GEOMETRY_NODE_FACTORY_","writePointMember_","writeLineStringOrCurveMember_","line","writeGeometryElement","ol_obj","GEOMETRY_SERIALIZERS_","writeFeatureElement","writeFeatureMembers_","MULTIGEOMETRY_TO_MEMBER_NODENAME","setAttributeNS","format_GML3","GML","format_GML","FEATURE_PREFIX","XMLNS","OGCNS","WFSNS","FESNS","SCHEMA_LOCATIONS","1.1.0","1.0.0","WFS","featureType_","featureNS_","gmlFormat_","gmlFormat","schemaLocation_","getFeatureType","setFeatureType","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","boundedBy","TRANSACTION_SUMMARY_PARSERS","http://www.opengis.net/wfs","totalInserted","totalUpdated","totalDeleted","OGC_FID_PARSERS","http://www.opengis.net/ogc","FeatureId","INSERT_RESULTS_PARSERS","TRANSACTION_RESPONSE_PARSERS","TransactionSummary","InsertResults","QUERY_SERIALIZERS","PropertyName","writeOgcFidFilter","getTypeName","featurePrefix","TRANSACTION_SERIALIZERS","Insert","gmlVersion","GML2","Update","typeName","Delete","pair","Native","nativeElement","vendorId","safeToIgnore","GETFEATURE_SERIALIZERS","Query","propertyNames","writeFilterCondition","During","valueReference","propertyName","timePeriod","writeTimeInstant","And","writeLogicalFilter","Or","Not","getTagName","BBOX","writeOgcPropertyName","Contains","Intersects","Within","PropertyIsEqualTo","writeComparisonFilter","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","PropertyIsBetween","lowerBoundary","writeOgcLiteral","upperBoundary","PropertyIsLike","wildCard","singleChar","escapeChar","matchCase","pattern","conditions","expression","writeOgcExpression","timeInstant","timePosition","writeGetFeature","handle","outputFormat","maxFeatures","resultType","startIndex","format_filter","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","nativeElements","format_WFS","WMTSCapabilities","_xml_js__WEBPACK_IMPORTED_MODULE_26__","DEFAULT_COLOR","DEFAULT_IMAGE_STYLE_ANCHOR","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS","DEFAULT_IMAGE_STYLE_SIZE","DEFAULT_IMAGE_STYLE_SRC","DEFAULT_IMAGE_SCALE_MULTIPLIER","DEFAULT_FILL_STYLE","DEFAULT_NO_IMAGE_STYLE","DEFAULT_IMAGE_STYLE","DEFAULT_TEXT_STROKE_STYLE","DEFAULT_STROKE_STYLE","DEFAULT_TEXT_STYLE","DEFAULT_STYLE","DEFAULT_STYLE_ARRAY","KML","_format_XMLFeature_js__WEBPACK_IMPORTED_MODULE_6__","_style_Fill_js__WEBPACK_IMPORTED_MODULE_19__","_style_IconAnchorUnits_js__WEBPACK_IMPORTED_MODULE_21__","_style_Icon_js__WEBPACK_IMPORTED_MODULE_20__","anchorOrigin","_style_IconOrigin_js__WEBPACK_IMPORTED_MODULE_22__","anchorXUnits","anchorYUnits","_style_Stroke_js__WEBPACK_IMPORTED_MODULE_23__","_style_Text_js__WEBPACK_IMPORTED_MODULE_25__","_style_Style_js__WEBPACK_IMPORTED_MODULE_24__","_proj_js__WEBPACK_IMPORTED_MODULE_18__","defaultStyle_","defaultStyle","extractStyles_","extractStyles","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","GX_NAMESPACE_URIS","NAMESPACE_URIS","ICON_ANCHOR_UNITS_MAP","pixels","insetPixels","createNameStyleFunction","foundStyle","textOffset","imageSize","getImageSize","imageScale","foundText","setFont","setScale","setOffsetX","setOffsetY","setTextAlign","createFeatureStyleFunction","styleUrl","sharedStyles","nameStyle","drawName","_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_10__","findStyle","styleValue","readColor","hexColor","readFlatCoordinates","readURI","baseURI","location","href","URL","readScale","_format_xsd_js__WEBPACK_IMPORTED_MODULE_7__","STYLE_MAP_PARSERS","Pair","pairObject","PAIR_PARSERS","readStyleMapValue","ICON_STYLE_PARSERS","iconObject","ICON_PARSERS","heading","hotSpot","xunits","yunits","LABEL_STYLE_PARSERS","LINE_STYLE_PARSERS","POLY_STYLE_PARSERS","outline","FLAT_LINEAR_RING_PARSERS","readFlatLinearRing","GX_MULTITRACK_GEOMETRY_PARSERS","Track","readGxTrack","GX_TRACK_PARSERS","when","whens","gxTrackObject","_geom_LineString_js__WEBPACK_IMPORTED_MODULE_11__","_geom_GeometryLayout_js__WEBPACK_IMPORTED_MODULE_9__","GEOMETRY_FLAT_COORDINATES_PARSERS","readFlatCoordinatesFromNode","EXTRUDE_AND_ALTITUDE_MODE_PARSERS","extrude","tessellate","altitudeMode","_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_16__","MULTI_GEOMETRY_PARSERS","MultiGeometry","readMultiGeometry","_geom_GeometryCollection_js__WEBPACK_IMPORTED_MODULE_8__","multiGeometry","homogeneous","_array_js__WEBPACK_IMPORTED_MODULE_2__","_geom_MultiPoint_js__WEBPACK_IMPORTED_MODULE_13__","setCommonGeometryProperties","_geom_MultiLineString_js__WEBPACK_IMPORTED_MODULE_12__","_geom_MultiPolygon_js__WEBPACK_IMPORTED_MODULE_14__","_asserts_js__WEBPACK_IMPORTED_MODULE_3__","_geom_Point_js__WEBPACK_IMPORTED_MODULE_15__","FLAT_LINEAR_RINGS_PARSERS","innerBoundaryIs","INNER_BOUNDARY_IS_PARSERS","outerBoundaryIs","OUTER_BOUNDARY_IS_PARSERS","STYLE_PARSERS","IconStyle","styleObject","IconObject","drawIcon","_math_js__WEBPACK_IMPORTED_MODULE_17__","offsetOrigin","LabelStyle","LineStyle","PolyStyle","readStyle","extrudes","tessellates","altitudeModes","hasExtrude","hasTessellate","hasAltitudeMode","DATA_PARSERS","displayName","EXTENDED_DATA_PARSERS","Data","featureObject","SchemaData","SCHEMA_DATA_PARSERS","extendedDataParser","REGION_PARSERS","LatLonAltBox","LAT_LON_ALT_BOX_PARSERS","regionObject","Lod","LOD_PARSERS","lodObject","regionParser","SimpleData","minAltitude","maxAltitude","north","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","NETWORK_LINK_PARSERS","ExtendedData","Region","Link","LINK_PARSERS","address","description","phoneNumber","visibility","PLACEMARK_PARSERS","StyleMap","styleMapValue","placemarkObject","MultiTrack","writeColorTextNode","rgba","_color_js__WEBPACK_IMPORTED_MODULE_4__","abgr","hex","readDocumentOrFolder_","Folder","Placemark","readPlacemark_","readSharedStyle_","readSharedStyleMap_","_Feature_js__WEBPACK_IMPORTED_MODULE_1__","_format_Feature_js__WEBPACK_IMPORTED_MODULE_5__","styleUri","fs","readName","readNameFromDocument","readNameFromNode","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","readRegion","regions","readRegionFromDocument","readRegionFromNode","EXTENDEDDATA_NODE_SERIALIZERS","DOCUMENT_SERIALIZERS","writePlacemark","DOCUMENT_NODE_FACTORY","DATA_NODE_FACTORY","ICON_SEQUENCE","ICON_SERIALIZERS","GX_NODE_FACTORY","ICON_STYLE_SEQUENCE","ICON_STYLE_SERIALIZERS","icon","vec2","writeScaleTextNode","LABEL_STYLE_SEQUENCE","LABEL_STYLE_SERIALIZERS","LINE_STYLE_SEQUENCE","LINE_STYLE_SERIALIZERS","GEOMETRY_TYPE_TO_NODENAME","GEOMETRY_NODE_FACTORY","POINT_NODE_FACTORY","LINE_STRING_NODE_FACTORY","LINEAR_RING_NODE_FACTORY","POLYGON_NODE_FACTORY","MULTI_GEOMETRY_SERIALIZERS","writePrimitiveGeometry","writePolygon","writeMultiGeometry","factory","BOUNDARY_IS_SERIALIZERS","writeBoundaryIs","PLACEMARK_SERIALIZERS","namesAndValues","STYLE_SEQUENCE","STYLE_SERIALIZERS","PLACEMARK_SEQUENCE","EXTENDEDDATA_NODE_FACTORY","PRIMITIVE_GEOMETRY_SEQUENCE","PRIMITIVE_GEOMETRY_SERIALIZERS","POLYGON_SERIALIZERS","INNER_BOUNDARY_NODE_FACTORY","OUTER_BOUNDARY_NODE_FACTORY","outerRing","POLY_STYLE_SERIALIZERS","COLOR_NODE_FACTORY","getSrc","iconImageSize","iconProperties","KML_SEQUENCE","KML_SERIALIZERS","kml","xmlnsUri","TileGrid","_array_js__WEBPACK_IMPORTED_MODULE_3__","origins","origin_","origins_","_extent_js__WEBPACK_IMPORTED_MODULE_4__","tileSizes_","tileSizes","fullTileRanges_","tmpSize_","sizes","_TileRange_js__WEBPACK_IMPORTED_MODULE_2__","calculateTileRanges_","tmpTileCoord","forEachTileCoord","forEachTileCoordParentTileRange","opt_tileRange","tileCoordExtent","getTileCoordChildTileRange","getTileRangeExtent","_size_js__WEBPACK_IMPORTED_MODULE_6__","getTileCoordForXYAndZ_","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordResolution","fullTileRanges","_tilegrid_js__WEBPACK_IMPORTED_MODULE_9__","TileSource","_source_Source_js__WEBPACK_IMPORTED_MODULE_7__","opaque_","tilePixelRatio_","_TileCache_js__WEBPACK_IMPORTED_MODULE_2__","key_","forEachLoadedTile","loaded","covered","_tilecoord_js__WEBPACK_IMPORTED_MODULE_8__","_TileState_js__WEBPACK_IMPORTED_MODULE_3__","useTile","TileSourceEvent","_extent_js__WEBPACK_IMPORTED_MODULE_0__","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","linearRingssContainsXY","ImageWMS","_source_Image_js__WEBPACK_IMPORTED_MODULE_10__","GETFEATUREINFO_IMAGE_SIZE","_proj_js__WEBPACK_IMPORTED_MODULE_8__","_reproj_js__WEBPACK_IMPORTED_MODULE_9__","_extent_js__WEBPACK_IMPORTED_MODULE_6__","_obj_js__WEBPACK_IMPORTED_MODULE_7__","viewWidth","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","_Image_js__WEBPACK_IMPORTED_MODULE_2__","_events_js__WEBPACK_IMPORTED_MODULE_4__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_5__","_source_WMSServerType_js__WEBPACK_IMPORTED_MODULE_11__","appendParams","keyParams","encodeURIComponent","TileEventType","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","tileState","setTileLoadFunction","opt_key","pruneExceptNewestZ","padNumber","opt_precision","numberString","compareVersions","v1","v2","s1","n1","n2","_layer_VectorTileRenderType_js__WEBPACK_IMPORTED_MODULE_5__","HYBRID","_layer_Vector_js__WEBPACK_IMPORTED_MODULE_4__","VectorImageTile","sourceRevision","sourceTiles","context_","replayState_","sourceRevision_","loadListenerKeys_","sourceTileListenerKeys_","sourceZ","useLoadedOnly","loadCount","sourceTileKey","consumers","finishLoading_","tileKey","errorSourceTiles","empty","defaultLoadFunction","featureloader","onLoad","onError","VectorTile","replayGroups_","tileLoadFunction_","DEFAULT_EXTENT","setFeatures","ol_VectorTile","VectorTile_VectorTile","tileGrids_","ol_VectorImageTile","_Projection_js__WEBPACK_IMPORTED_MODULE_2__","projCodes","_proj_js__WEBPACK_IMPORTED_MODULE_0__","code1","code2","_transforms_js__WEBPACK_IMPORTED_MODULE_1__","douglasPeucker","simplifiedOffset","markers","first","maxSquaredDistance","douglasPeuckerArray","snap","quantize","quantizeArray","quantizeMultiArray","_events_EventType_js__WEBPACK_IMPORTED_MODULE_3__","Observable","_events_EventTarget_js__WEBPACK_IMPORTED_MODULE_2__","revision_","unByKey","on","once","un","drawGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","opt_declutterGroup","disable","createSnapToN","createSnapToZero","opt_tolerance","EventSource","dispatcher","mapping","mapping_","getEvents","getHandlerForEvent","_transform_js__WEBPACK_IMPORTED_MODULE_8__","CanvasTileLayerRenderer","tileLayer","_canvas_IntermediateCanvas_js__WEBPACK_IMPORTED_MODULE_7__","oversampling_","newTiles_","tmpTileRange_","imageTransform_","isDrawableTile_","viewResolution","viewCenter","tileSource","oversampling","imageExtent","tilesToDrawByZ","findLoadedTiles","createLoadedTileFinder","hints","animatingOrInteracting","_ViewHint_js__WEBPACK_IMPORTED_MODULE_4__","tmpTileRange","childTileRange","renderedResolution","tilePixelSize","currentScale","currentTilePixelSize","tileGutter","tilesToDraw","drawTileImage","coordinateToCanvasPixelTransform","updateUsedTiles","manageTilePyramid","scheduleExpireCache","alphaChanged","getImageTransform","_source_State_js__WEBPACK_IMPORTED_MODULE_4__","_proj_js__WEBPACK_IMPORTED_MODULE_3__","attributions_","adaptAttributions_","state_","wrapX_","attributionLike","_obj_js__WEBPACK_IMPORTED_MODULE_3__","opt_maxEntries","rbush_","rbush__WEBPACK_IMPORTED_MODULE_1___default","items_","items","search","forEach_","rbush","RenderFeature","flatCoordinates_","flatMidpoints_","properties_","interiorpoint","render_Feature","MVT","featureClass_","featureClass","layerName_","layerName","layers_","layersPBFReader","tag","pbf","readVarint","readFields","layerPBFReader","readFloat","readDouble","readVarint64","readSVarint","featurePBFReader","readRawFeature","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","getGeometryType","prevEndIndex","orient","FormatType","pbf_default","pbfLayers","pbfLayer","setLayers","_xml_js__WEBPACK_IMPORTED_MODULE_6__","_format_XML_js__WEBPACK_IMPORTED_MODULE_4__","owsParser_","_format_OWS_js__WEBPACK_IMPORTED_MODULE_2__","OWS_NAMESPACE_URIS","PARSERS","Contents","CONTENTS_PARSERS","LAYER_PARSERS","TileMatrixSet","TMS_PARSERS","isDefault","_format_xsd_js__WEBPACK_IMPORTED_MODULE_5__","TileMatrixSetLink","TMS_LINKS_PARSERS","Dimension","DIMENSION_PARSERS","ResourceURL","resourceType","Title","Abstract","WGS84BoundingBox","WGS84_BBOX_READERS","Identifier","LegendURL","legend","_format_XLink_js__WEBPACK_IMPORTED_MODULE_3__","TileMatrixSetLimits","TMS_LIMITS_LIST_PARSERS","TileMatrixLimits","TMS_LIMITS_PARSERS","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","Value","LowerCorner","readCoordinates","UpperCorner","WellKnownScaleSet","TM_PARSERS","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","read","readFromDocument","readFromNode","WMTSCapabilityObject","calculateSourceResolution","targetMetersPerUnit","sourceMetersPerUnit","compensationFactor","enlargeClipPoint","centroidX","centroidY","dX","dY","triangulation","_dom_js__WEBPACK_IMPORTED_MODULE_0__","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","triangle","v0","u1","u2","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","_math_js__WEBPACK_IMPORTED_MODULE_2__","p0","_geom_flat_simplify_js__WEBPACK_IMPORTED_MODULE_9__","_geom_flat_area_js__WEBPACK_IMPORTED_MODULE_5__","simplifiedLinearRing","MOVESTART","MOVEEND","_functions_js__WEBPACK_IMPORTED_MODULE_0__","disposed_","_events_EventTarget_js__WEBPACK_IMPORTED_MODULE_1__","MapRenderer","layerRenderers_","layerRendererListeners_","layerRendererConstructors_","expireIconCache","_style_IconImageCache_js__WEBPACK_IMPORTED_MODULE_7__","expire","sortByZIndex","state1","state2","constructors","getLayerRendererConstructors","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","removeLayerRenderers","removeLayerRendererByKey_","thisArg2","translatedCoordinate","_layer_Layer_js__WEBPACK_IMPORTED_MODULE_6__","layerRenderer","getLayerRenderer","forEachLayerAtPixel","hasFeatureAtCoordinate","_functions_js__WEBPACK_IMPORTED_MODULE_5__","layerKey","handleLayerRendererChange_","getLayerRendererByKey","getLayerRenderers","renderFrame","removeUnusedLayerRenderers_","scheduleExpireIconCache","postRenderFunctions","scheduleRemoveUnusedLayerRenderers","_style_Style_js__WEBPACK_IMPORTED_MODULE_12__","SelectEventType","SELECT","SelectEvent","selected","deselected","Select","_interaction_Interaction_js__WEBPACK_IMPORTED_MODULE_8__","_events_condition_js__WEBPACK_IMPORTED_MODULE_5__","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","_functions_js__WEBPACK_IMPORTED_MODULE_6__","featureOverlay","_layer_Vector_js__WEBPACK_IMPORTED_MODULE_9__","_source_Vector_js__WEBPACK_IMPORTED_MODULE_11__","_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_7__","featureOverlay_","featureLayerAssociation_","_events_js__WEBPACK_IMPORTED_MODULE_3__","_CollectionEventType_js__WEBPACK_IMPORTED_MODULE_1__","_obj_js__WEBPACK_IMPORTED_MODULE_10__","addFeatureLayerAssociation_","removeFeatureLayerAssociation_","selectedFeatures","unskipFeature","skipFeature","DEFAULT_TILE_SIZE","DEFAULT_MAX_ZOOM","readHref","NAMESPACE_URI","_format_FormatType_js__WEBPACK_IMPORTED_MODULE_2__","TextFeature","_format_Feature_js__WEBPACK_IMPORTED_MODULE_1__","readFeatureFromText","readFeaturesFromText","readGeometryFromText","readProjectionFromText","writeFeatureText","writeFeaturesText","writeGeometryText","opt_geometries","_geom_Geometry_js__WEBPACK_IMPORTED_MODULE_4__","geometries_","listenGeometriesChange_","cloneGeometries","clonedGeometries","unlistenGeometriesChange_","geometryCollection","setGeometries","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_5__","JSONFeature","getObject","TileRange","contains","containsTileRange","interpolatePoint","pointX","pointY","cumulativeLengths","lineStringCoordinateAtM","lo","m0","lineStringsCoordinateAtM","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","_events_Event_js__WEBPACK_IMPORTED_MODULE_1__","MapEvent","_transform_js__WEBPACK_IMPORTED_MODULE_19__","RasterEventType","RasterOperationType","RasterSourceEvent","_events_Event_js__WEBPACK_IMPORTED_MODULE_5__","RasterSource","worker_","operationType_","operationType","threads_","threads","renderers_","renderers","createRenderers","rr","_events_EventType_js__WEBPACK_IMPORTED_MODULE_6__","tileQueue_","_TileQueue_js__WEBPACK_IMPORTED_MODULE_2__","requestedFrameState_","renderedImageCanvas_","frameState_","tileQueue","wantedTiles","_source_Image_js__WEBPACK_IMPORTED_MODULE_16__","operation","setOperation","lib","opt_lib","pixelworks_lib_index__WEBPACK_IMPORTED_MODULE_7__","imageOps","queue","updateFrameState_","_extent_js__WEBPACK_IMPORTED_MODULE_8__","allSourcesReady_","ready","_source_State_js__WEBPACK_IMPORTED_MODULE_17__","renderedExtent","processSources_","loadMoreTiles","imageDatas","process","onWorkerComplete_","_dom_js__WEBPACK_IMPORTED_MODULE_3__","_ImageCanvas_js__WEBPACK_IMPORTED_MODULE_1__","sharedContext","_source_Tile_js__WEBPACK_IMPORTED_MODULE_18__","_layer_Tile_js__WEBPACK_IMPORTED_MODULE_12__","_renderer_canvas_TileLayer_js__WEBPACK_IMPORTED_MODULE_15__","createTileRenderer","_layer_Image_js__WEBPACK_IMPORTED_MODULE_11__","_renderer_canvas_ImageLayer_js__WEBPACK_IMPORTED_MODULE_14__","createImageRenderer","_layer_Layer_js__WEBPACK_IMPORTED_MODULE_10__","_LayerType_js__WEBPACK_IMPORTED_MODULE_9__","WebGLShader","isAnimated","Shader","WebGLFragment","webgl","Fragment","WebGLVertex","Vertex","fragment","defaultshader_Locations","program","u_projectionMatrix","getUniformLocation","u_offsetScaleMatrix","u_offsetRotateMatrix","u_lineWidth","u_pixelRatio","u_opacity","u_fillColor","u_strokeColor","u_size","a_position","getAttribLocation","a_instruction","a_radius","fromTransform","mat4","WebGLReplay","projectionMatrix_","offsetRotateMatrix_","offsetScaleMatrix_","tmpMat4_","indices","indicesBuffer","startIndices","startIndicesFeature","verticesBuffer","getDeleteResourcesFunction","setUpProgram","shutDownProgram","locations","drawReplay","hitDetection","drawHitDetectionReplayOneByOne","drawHitDetectionReplay","oneByOne","drawHitDetectionReplayAll","DEPTH_BUFFER_BIT","getGL","tmpStencil","tmpStencilFunc","tmpStencilMaskVal","tmpStencilRef","tmpStencilMask","tmpStencilOpFail","tmpStencilOpPass","tmpStencilOpZFail","isEnabled","STENCIL_FUNC","STENCIL_VALUE_MASK","STENCIL_REF","STENCIL_WRITEMASK","STENCIL_FAIL","STENCIL_PASS_DEPTH_PASS","STENCIL_PASS_DEPTH_FAIL","enable","STENCIL_BUFFER_BIT","stencilMask","stencilFunc","ALWAYS","stencilOp","KEEP","REPLACE","NOTEQUAL","bindBuffer","projectionMatrix","offsetScaleMatrix","offsetRotateMatrix","uniformMatrix4fv","uniform1f","drawElements","elementType","hasOESElementIndexUint","numItems","offsetInBytes","DEFAULT_FILLSTYLE","DEFAULT_LINEDASH","DEFAULT_STROKESTYLE","EPSILON","triangleIsCounterClockwise","BufferUsage","WebGLBuffer","opt_arr","opt_usage","arr_","usage_","getUsage","Buffer","WebGLCircleReplay","defaultLocations_","styles_","styleIndices_","radius_","fillColor","strokeColor","numVertices","numIndices","lastState","deleteBuffer","getProgram","useProgram","enableVertexAttribArray","vertexAttribPointer","uniform2fv","disableVertexAttribArray","nextStyle","setFillStyle_","drawReplaySkipping_","groupStart","featureUid","featureIndex","featureStart","uniform4fv","CircleReplay","defaultshader_fragment","defaultshader_vertex","texturereplay_defaultshader_Locations","u_image","a_texCoord","a_offsets","a_opacity","a_rotateWithView","ContextEventType","WebGLContext","gl_","bufferCache_","shaderCache_","programCache_","currentProgram_","hitDetectionFramebuffer_","hitDetectionTexture_","hitDetectionRenderbuffer_","getExtension","handleWebGLContextLost","handleWebGLContextRestored","createTextureInternal","opt_wrapS","opt_wrapT","texture","createTexture","bindTexture","texParameteri","createEmptyTexture","texImage2D","buf","bufferKey","bufferCacheEntry","createBuffer","arrayBuffer","Float32Array","Uint32Array","Uint16Array","bufferData","isContextLost","deleteProgram","deleteShader","deleteFramebuffer","deleteRenderbuffer","deleteTexture","getCanvas","getHitDetectionFramebuffer","initHitDetectionFramebuffer_","getShader","shaderObject","shaderKey","shader","createShader","shaderSource","compileShader","fragmentShaderObject","vertexShaderObject","programKey","createProgram","attachShader","linkProgram","framebuffer","createFramebuffer","bindFramebuffer","renderbuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","DEPTH_COMPONENT16","framebufferTexture2D","framebufferRenderbuffer","DEPTH_ATTACHMENT","Context","WebGLTextureReplay","groupIndices","hitDetectionGroupIndices","defaultLocations","textures","getTextures","drawCoordinates","createTextures","images","texturePerImage","getHitDetectionTextures","drawReplaySkipping","groupEnd","hitDetectionTextures","opt_all","TextureReplay","WebGLImageReplay","images_","hitDetectionImages_","textures_","hitDetectionTextures_","currentImage","lineStringIsClosed","flat_area","linestringreplay_defaultshader_fragment","linestringreplay_defaultshader_vertex","linestringreplay_defaultshader_Locations","u_miterLimit","u_color","a_lastPos","a_nextPos","a_direction","WebGLLineStringReplay","startCoords","lastSign","addVertices_","product","isValid_","firstP","lastP","indexCount","drawPolygonCoordinates","holeFlatCoordinates","setPolygonStyle","opt_index","getCurrentIndex","tmpDepthFunc","DEPTH_FUNC","tmpDepthMask","DEPTH_WRITEMASK","depthMask","depthFunc","polygonreplay_defaultshader_fragment","polygonreplay_defaultshader_vertex","polygonreplay_defaultshader_Locations","LinkedList","opt_circular","first_","last_","head_","circular_","length_","insertItem","next","head","removeItem","firstItem","lastItem","nextItem","getNextItem","prevItem","getPrevItem","getCurrItem","setFirstItem","list","structs_LinkedList","WebGLPolygonReplay","rtree","processFlatCoordinates_","maxCoords","getMaxCoords_","holeLists","holeList","classifyPoints_","currList","currItem","getIntersections_","bridgeHole_","triangulate_","clockwise","createPoint_","insertItem_","seg","ccw","pointsReclassified","reflex","removeItem_","hole","holeMaxX","listMaxX","bestPoint","p5","minDist","intersectingSegments","currSeg","calculateIntersection_","pointsInTriangle","getPointsInTriangle_","currPoint","currTheta","p0Bridge","p1Bridge","simple","isSimple_","clipEars_","resolveSelfIntersections_","splitPolygon_","isClockwise_","processedEars","variableCriterion","diagonalIsInside_","opt_touch","resolvedIntersections","breakCond","intersections","newPolygon","newRtree","opt_rtree","opt_reflex","segmentsInExtent","denom","ub","p1IsLeftOf","p1IsRightOf","p3IsLeftOf","p3IsRightOf","p1InCone","p3InCone","currIndex","currLineIndex","holes","holeFlatCoords","lineDeleter","nullStrokeStyle","WebGLTextReplay","measureCanvas_","textAlign_","textBaseline_","offsetX_","offsetY_","atlases_","currAtlas_","glyphAtlas","textSize","getTextSize_","currX","currY","charArr","charInfo","atlas","getInfo","drawText_","textHeight","str","sum","curr","addCharToAtlas_","mCtx","ctx","textFillStyleColor","textStrokeStyleColor","getAtlas_","calculateHash_","AtlasManager","space","HIT_DETECTION_SIZE","WebGLReplayGroup","replayHitDetection_","Uint8Array","readPixels","webgl_ReplayGroup","WebGLImmediateRenderer","center_","size_","imageStyle_","fillStyle_","strokeStyle_","textStyle_","Immediate","defaultmapshader_fragment","defaultmapshader_vertex","defaultmapshader_Locations","u_texCoordMatrix","u_texture","WebGLLayerRenderer","arrayBuffer_","framebufferDimension","texCoordMatrix","postRenderFunction","dispatchComposeEvent_","uniform1i","getTexCoordMatrix","getProjectionMatrix","getTexture","drawArrays","composeEvent","webgl_Layer","WebGLImageLayerRenderer","imageLayer","hitCanvasContext_","hitTransformationMatrix_","createTexture_","imageElement","imageSource","loadImage","updateProjectionMatrix_","canvasWidth","canvasHeight","canvasExtentWidth","canvasExtentHeight","getHitTransformationMatrix_","pixelOnFrameBuffer","mapCoordTransform","projectionMatrixInv","WebGLMapRenderer","clipTileCanvasWidth_","clipTileCanvasHeight_","clipTileContext_","antialias","preserveDrawingBuffer","stencil","textureCache_","LRUCache","focus_","tileTextureQueue_","tileCenter","loadNextTileTexture_","bindTileTexture","textureCacheFrameMarkerCount_","initializeGL_","magFilter","minFilter","textureCacheEntry","clipTileCanvas","clipTileContext","vectorContext","expireCache_","peekLast","peekLastKey","getTileTextureQueue","activeTexture","blendFuncSeparate","isTileTextureLoaded","layerStatesToDraw","layer_Layer","clearColor","viewport","webgl_Map","tilelayershader_fragment","tilelayershader_vertex","tilelayershader_Locations","u_tileOffset","WebGLTileLayerRenderer","fragmentShader_","vertexShader_","locations_","renderArrayBuffer_","renderedTileRange_","renderedFramebufferExtent_","tilePixelResolution","framebufferExtent","tileRangeSize","maxDimension","framebufferExtentDimension","allTilesLoaded","drawable","fullyLoaded","tileTextureQueue","pixelOnMapScaled","pixelOnFrameBufferScaled","WebGLVectorLayerRenderer","layerState_","scissor","WebGLMap","control","_style_TextPlacement_js__WEBPACK_IMPORTED_MODULE_1__","font_","_style_Fill_js__WEBPACK_IMPORTED_MODULE_0__","maxAngle_","placement_","overflow_","backgroundFill_","backgroundStroke_","padding_","setOverflow","setMaxAngle","setPlacement","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","_tilegrid_TileGrid_js__WEBPACK_IMPORTED_MODULE_3__","WMTSTileGrid","matrixIds_","matrixIds","createFromCapabilitiesMatrixSet","opt_matrixLimits","switchOriginXY","matrixAvailable","elt_ml","tileWidth","tileHeight","getMatrixIds","_extent_js__WEBPACK_IMPORTED_MODULE_5__","ImageWrapper","_ImageBase_js__WEBPACK_IMPORTED_MODULE_1__","_ImageState_js__WEBPACK_IMPORTED_MODULE_2__","src_","imageListenerKeys_","handleImageError_","unlistenImage_","handleImageLoad_","_style_Image_js__WEBPACK_IMPORTED_MODULE_9__","normalizedAnchor_","anchorOrigin_","_style_IconOrigin_js__WEBPACK_IMPORTED_MODULE_8__","anchorXUnits_","_style_IconAnchorUnits_js__WEBPACK_IMPORTED_MODULE_6__","anchorYUnits_","img","imgSize","_color_js__WEBPACK_IMPORTED_MODULE_3__","iconImage_","_style_IconImage_js__WEBPACK_IMPORTED_MODULE_7__","offset_","offsetOrigin_","getHitDetectionImageSize","RenderEvent","opt_vectorContext","opt_context","opt_glContext","glContext","ImageStyle","setOpacity","setRotateWithView","setSnapToPixel","_flat_segments_js__WEBPACK_IMPORTED_MODULE_2__","intersectsLineString","coordinatesExtent","point1","point2","intersectsLineStringArray","intersectsLinearRingArray","_flat_contains_js__WEBPACK_IMPORTED_MODULE_1__","intersectsLinearRing","intersectsLinearRingMultiArray","twiceArea","linearRingss","DEFAULT_RADIUS","opt_radius","deltaLatBy2","deltaLonBy2","getLengthInternal","getAreaInternal","bearing","lon1","dByR","_pointer_EventSource_js__WEBPACK_IMPORTED_MODULE_1__","MouseSource","mousedown","mousemove","mouseup","mouseover","mouseout","pointerMap","lastTouches","POINTER_ID","POINTER_TYPE","prepareEvent","inEvent","cloneEvent","pd","isEventSimulatedFromTouch_","lts","cancel","down","cleanupMouse","enterOver","leaveOut","DEFAULT_WMS_VERSION","CanvasLayerRenderer","_Layer_js__WEBPACK_IMPORTED_MODULE_7__","transform_","topLeft","bottomRight","_render_canvas_js__WEBPACK_IMPORTED_MODULE_5__","opt_transform","_render_canvas_Immediate_js__WEBPACK_IMPORTED_MODULE_6__","_render_Event_js__WEBPACK_IMPORTED_MODULE_3__","forEachLayerAtCoordinate","_render_EventType_js__WEBPACK_IMPORTED_MODULE_4__","_transform_js__WEBPACK_IMPORTED_MODULE_6__","IntermediateCanvasRenderer","_canvas_Layer_js__WEBPACK_IMPORTED_MODULE_5__","imageTransform","dw","dh","_functions_js__WEBPACK_IMPORTED_MODULE_4__","_coordinate_js__WEBPACK_IMPORTED_MODULE_1__","_dom_js__WEBPACK_IMPORTED_MODULE_2__","getRadiusSquared_","circleExtent","opt_errback","opt_callbackParam","script","cleanup","async","timer","getElementsByTagName","opt_highWaterMark","count_","entries_","oldest_","newest_","value_","newer","older","peekFirstKey","setSize","getInteriorPointOfArray","flatCentersOffset","maxSegmentLength","getInteriorPointsOfMultiArray","Filter","tagName_","filter_Filter","LogicalNary","filter_LogicalNary","filter_And","Bbox","filter_Bbox","Spatial","filter_Spatial","Comparison","filter_Comparison","ComparisonBinary","opt_matchCase","filter_ComparisonBinary","EqualTo","filter_EqualTo","GreaterThan","GreaterThanOrEqualTo","IsBetween","IsLike","opt_wildCard","opt_singleChar","opt_escapeChar","filter_IsLike","IsNull","LessThan","LessThanOrEqualTo","NotEqualTo","and","Function","equalTo","like","_geom_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_13__","TokenType","Lexer","index_","isAlpha_","isNumeric_","opt_decimal","isWhiteSpace_","nextChar_","nextToken","token","readNumber_","readText_","scientificNotation","lexer","lexer_","token_","layout_","_geom_GeometryLayout_js__WEBPACK_IMPORTED_MODULE_6__","consume_","isTokenType","isMatch","parseGeometry_","parseGeometryLayout_","dimToken","dimInfo","parseGeometryCollectionText_","isEmptyGeometry_","formatErrorMessage_","parsePointText_","parsePoint_","parseLineStringText_","parsePointList_","parsePolygonText_","parseLineStringTextList_","parseMultiPointText_","parsePointTextList_","parseMultiLineStringText_","parseMultiPolygonText_","parsePolygonTextList_","WKT","_format_TextFeature_js__WEBPACK_IMPORTED_MODULE_3__","splitCollection_","splitCollection","encodePointGeometry","encodeLineStringGeometry","encodePolygonGeometry","GeometryEncoder","components","geoms","enc","geometryEncoder","encodeGeometryLayout","parse_","GeometryConstructor","LINESTRING","_geom_LineString_js__WEBPACK_IMPORTED_MODULE_7__","MULTIPOINT","MULTILINESTRING","MULTIPOLYGON","GeometryParser","geomType","_geom_GeometryCollection_js__WEBPACK_IMPORTED_MODULE_4__","ctor","_proj_js__WEBPACK_IMPORTED_MODULE_10__","TopoJSON","_format_JSONFeature_js__WEBPACK_IMPORTED_MODULE_3__","transformVertex","_geom_Point_js__WEBPACK_IMPORTED_MODULE_8__","arcs","concatenateArcs","_geom_LineString_js__WEBPACK_IMPORTED_MODULE_4__","_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_9__","_geom_MultiPoint_js__WEBPACK_IMPORTED_MODULE_6__","_geom_MultiLineString_js__WEBPACK_IMPORTED_MODULE_5__","polyArray","ringCoords","_geom_MultiPolygon_js__WEBPACK_IMPORTED_MODULE_7__","readFeaturesFromGeometryCollection","readFeatureFromGeometry","transformArc","topoJSONTopology","transformArcs","topoJSONFeatures","objectName","_geom_Point_js__WEBPACK_IMPORTED_MODULE_13__","getGeometryLayout","_geom_LineString_js__WEBPACK_IMPORTED_MODULE_8__","paths","_geom_Polygon_js__WEBPACK_IMPORTED_MODULE_14__","_geom_MultiPoint_js__WEBPACK_IMPORTED_MODULE_11__","_geom_MultiLineString_js__WEBPACK_IMPORTED_MODULE_10__","_geom_MultiPolygon_js__WEBPACK_IMPORTED_MODULE_12__","esriJSON","hasZM","getHasZM","hasM","EsriJSON","_format_JSONFeature_js__WEBPACK_IMPORTED_MODULE_5__","flatRing","outerRings","_geom_flat_deflate_js__WEBPACK_IMPORTED_MODULE_15__","matched","containsHole","_geom_LinearRing_js__WEBPACK_IMPORTED_MODULE_9__","convertRings","_obj_js__WEBPACK_IMPORTED_MODULE_17__","_format_Feature_js__WEBPACK_IMPORTED_MODULE_4__","esriJSONFeature","idField","attributes","esriJSONFeatures","objectIdFieldName","esriJSONObject","spatialReference","wkid","_source_Image_js__WEBPACK_IMPORTED_MODULE_8__","Static","_proj_js__WEBPACK_IMPORTED_MODULE_7__","_Image_js__WEBPACK_IMPORTED_MODULE_1__","targetWidth","GeolocationProperty","Geolocation","position_","watchId_","handleProjectionChanged_","handleTrackingChanged_","trackingOptions","setTrackingOptions","setTracking","tracking","getTracking","geolocation","watchPosition","positionChange_","positionError_","getTrackingOptions","clearWatch","altitude","altitudeAccuracy","longitude","latitude","projectedPosition","speed","getAccuracy","getAccuracyGeometry","getAltitude","getAltitudeAccuracy","getHeading","getSpeed","_xml_js__WEBPACK_IMPORTED_MODULE_5__","WMSGetFeatureInfo","_format_GML2_js__WEBPACK_IMPORTED_MODULE_2__","_format_XMLFeature_js__WEBPACK_IMPORTED_MODULE_3__","readFeatures_","toRemove","layerFeatures","gmlFeatures","Atlas","space_","emptyBlocks_","renderCallback","block","split_","newBlock1","newBlock2","updateBlocks_","args","_tilegrid_TileGrid_js__WEBPACK_IMPORTED_MODULE_10__","TierSizeCalculation","CustomTile","_ImageTile_js__WEBPACK_IMPORTED_MODULE_2__","zoomifyImage_","_dom_js__WEBPACK_IMPORTED_MODULE_6__","tierSizeCalculation","tierSizeInTiles","tileSizeForTierSizeCalculation","tileCountUpToTier","_tileurlfunction_js__WEBPACK_IMPORTED_MODULE_4__","tileCoordZ","tileIndex","TileGroup","ZoomifyTileClass","_transform_js__WEBPACK_IMPORTED_MODULE_10__","CanvasImmediateRenderer","_VectorContext_js__WEBPACK_IMPORTED_MODULE_8__","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageSnapToPixel_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","_geom_flat_transform_js__WEBPACK_IMPORTED_MODULE_6__","localTransform","setContextFillState_","setContextStrokeState_","setContextTextState_","moveToLineTo_","close","drawRings_","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","_has_js__WEBPACK_IMPORTED_MODULE_7__","contextTextState","_canvas_js__WEBPACK_IMPORTED_MODULE_9__","_colorlike_js__WEBPACK_IMPORTED_MODULE_2__","imageAnchor","imageImage","imageOrigin","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","opt_loader","error_","getError","handleLoad_","default","quickselect","maxEntries","_maxEntries","_minEntries","_initFormat","findItem","equalsFn","calcBBox","toBBox","distBBox","children","destNode","createNode","leaf","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","enlargedArea","intersectionArea","multiSelect","_all","childBBox","nodesToSearch","_build","_splitRoot","tmpNode","_insert","goingUp","path","indexes","_condense","compareMinX","compareMinY","toJSON","fromJSON","right2","right3","N2","_chooseSubtree","targetNode","enlargement","minEnlargement","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","bbox1","bbox2","overlap","minOverlap","_allDistMargin","leftBBox","rightBBox","siblings","compareArr","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerEventHandler_","documentPointerEventHandler_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","updateActivePointers_","handlePointerUp_","isMouseActionButton_","isMoving_","dragging","ol_MapBrowserEventHandler","optionsInternal","keyboardEventTarget","layerGroup","Group","overlays","createOptionsInternal","maxTilesLoading_","maxTilesLoading","loadTilesWhileAnimating_","loadTilesWhileAnimating","loadTilesWhileInteracting_","loadTilesWhileInteracting","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","msTouchAction","touchAction","overlayContainer_","overlayContainerStopEvent_","overlayEvents","events_EventType","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyHandlerKeys_","handleBrowserEvent","overlays_","overlayIdIndex_","handleResize_","postRenderFunctions_","TileQueue","getTilePriority","handleTileChange_","skippedFeatureUids_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","addOverlayInternal_","addControl","getControls","addInteraction","getInteractions","getOverlays","getFeaturesAtPixel","opt_layerFilter","opt_this2","hasFeatureAtPixel","getEventPixel","eventPosition","changedTouches","getTarget","getOverlayById","tileSourceKey","MapBrowserEvent","interactionsArray","handlePostRender","maxTotalLoading","maxNewLoads","getTilesLoading","targetElement","handleViewPropertyChanged_","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","pixelResolution","setView","_Tile_js__WEBPACK_IMPORTED_MODULE_1__","getBlankImage","_TileState_js__WEBPACK_IMPORTED_MODULE_2__","naturalWidth","naturalHeight","_source_State_js__WEBPACK_IMPORTED_MODULE_7__","LayerRenderer","handleImageChange_","opt_tileCallback","BaseLayer","_layer_Property_js__WEBPACK_IMPORTED_MODULE_2__","_math_js__WEBPACK_IMPORTED_MODULE_3__","setMaxResolution","setMinResolution","zindex","_style_Image_js__WEBPACK_IMPORTED_MODULE_6__","RegularShape","checksums_","hitDetectionCanvas_","radius1","radius2_","radius2","hitDetectionImageSize_","atlasManager_","atlasManager","getRadius2","_ImageState_js__WEBPACK_IMPORTED_MODULE_4__","_colorlike_js__WEBPACK_IMPORTED_MODULE_1__","renderOptions","draw_","createHitDetectionCanvas_","hasCustomHitDetectionImage","renderHitDetectionCallback","drawHitDetectionCanvas_","info","hitImage","angle0","radiusC","strokeChecksum","fillChecksum","checksum","_style_RegularShape_js__WEBPACK_IMPORTED_MODULE_1__","CircleStyle","_source_State_js__WEBPACK_IMPORTED_MODULE_11__","LayerGroup","_layer_Base_js__WEBPACK_IMPORTED_MODULE_9__","layersListenerKeys_","listenerKeys_","handleLayersChanged_","handleLayerChange_","handleLayersAdd_","handleLayersRemove_","layersArray","_ObjectEventType_js__WEBPACK_IMPORTED_MODULE_4__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_7__","collectionEvent","ownLayerState","MsSource","MSPointerDown","msPointerDown","MSPointerMove","msPointerMove","MSPointerUp","msPointerUp","MSPointerOut","msPointerOut","MSPointerOver","msPointerOver","MSPointerCancel","msPointerCancel","MSGotPointerCapture","msGotPointerCapture","MSLostPointerCapture","msLostPointerCapture","POINTER_TYPES","prepareEvent_","makeEvent","pointer_MsSource","NativeSource","pointerdown","pointerDown","pointermove","pointerup","pointerUp","pointerout","pointerOut","pointerover","pointerOver","pointercancel","pointerCancel","gotpointercapture","gotPointerCapture","lostpointercapture","lostPointerCapture","fireNativeEvent","pointer_NativeSource","PointerEvent","opt_eventDict","eventDict","buttons","getButtons_","pressure","getPressure_","bubbles","cancelable","detail","screenX","screenY","relatedTarget","tiltX","tiltY","hwTimestamp","HAS_BUTTONS","which","ev","MouseEvent","pointer_PointerEvent","TouchSource","mouseSource","touchstart","touchmove","touchend","touchcancel","firstTouchId_","clickCount_","resetId_","dedupTimeout_","isPrimaryTouch_","inTouch","identifier","setPrimaryTouch_","cancelResetClickCount_","removePrimaryPointer_","inPointer","resetClickCount_","resetClickCountHandler_","touchToPointer_","webkitRadiusX","radiusX","webkitRadiusY","radiusY","webkitForce","force","processTouches_","inFunction","touches","pointer","findTouch_","touchList","searchId","vacuumTouches_","cancelOut_","dedupSynthMouse_","overDown_","outTarget","over","enter","moveOverOut_","outEvent","upOut_","leave","cleanUpPointer_","lt","pointer_TouchSource","eventMap_","eventSourceList_","registerSources","CLONE_PROPS","registerSource","register_","newEvents","handler","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","eventName","ol_events","eventCopy","fireEvent","contains_","contained","inType","wrapMouseEvent","_xml_js__WEBPACK_IMPORTED_MODULE_8__","_format_GMLBase_js__WEBPACK_IMPORTED_MODULE_3__","readFlatCoordinates_","coordsGroups","readBox_","BOX_PARSERS_","innerBoundaryIsParser_","outerBoundaryIsParser_","_format_xsd_js__WEBPACK_IMPORTED_MODULE_4__","createCoordinatesNode_","writeCoordinates_","IconImageCache","cache_","cacheSize_","maxCacheSize_","iconImage","maxCacheSize","shared","layerRendererConstructors","CanvasMapRenderer","_Map_js__WEBPACK_IMPORTED_MODULE_10__","_css_js__WEBPACK_IMPORTED_MODULE_3__","_transform_js__WEBPACK_IMPORTED_MODULE_0__","_render_canvas_Immediate_js__WEBPACK_IMPORTED_MODULE_9__","_render_Event_js__WEBPACK_IMPORTED_MODULE_6__","_render_canvas_js__WEBPACK_IMPORTED_MODULE_8__","_layer_Layer_js__WEBPACK_IMPORTED_MODULE_5__","numLayers","_transform_js__WEBPACK_IMPORTED_MODULE_11__","CanvasImageLayerRenderer","_canvas_IntermediateCanvas_js__WEBPACK_IMPORTED_MODULE_10__","skippedFeatures_","vectorRenderer_","_LayerType_js__WEBPACK_IMPORTED_MODULE_3__","_Map_js__WEBPACK_IMPORTED_MODULE_9__","_layer_VectorRenderType_js__WEBPACK_IMPORTED_MODULE_7__","vectorRenderer","_reproj_common_js__WEBPACK_IMPORTED_MODULE_0__","skippedFeatures","imageFrameState","_obj_js__WEBPACK_IMPORTED_MODULE_8__","newSkippedFeatures","_ImageCanvas_js__WEBPACK_IMPORTED_MODULE_2__","_array_js__WEBPACK_IMPORTED_MODULE_5__","imagePixelRatio","_MapEvent_js__WEBPACK_IMPORTED_MODULE_1__","flipXY","opt_destOffset","destOffset","Polyline","factor_","geometryLayout_","geometryLayout","encodeDeltas","numbers","opt_factor","lastNumbers","encoded","encodeUnsignedInteger","encodeUnsignedIntegers","encodeSignedIntegers","encodeFloats","decodeDeltas","current","decodeUnsignedIntegers","decodeSignedIntegers","decodeFloats","format_Feature","WMSCapabilities","_format_XML_js__WEBPACK_IMPORTED_MODULE_2__","SERVICE_PARSERS","Capability","CAPABILITY_PARSERS","REQUEST_PARSERS","Exception","EXCEPTION_PARSERS","Name","_format_xsd_js__WEBPACK_IMPORTED_MODULE_3__","KeywordList","readKeywordList","OnlineResource","_format_XLink_js__WEBPACK_IMPORTED_MODULE_1__","ContactInformation","CONTACT_INFORMATION_PARSERS","Fees","AccessConstraints","LayerLimit","MaxWidth","MaxHeight","ContactPersonPrimary","CONTACT_PERSON_PARSERS","ContactPosition","ContactAddress","CONTACT_ADDRESS_PARSERS","ContactVoiceTelephone","ContactFacsimileTelephone","ContactElectronicMailAddress","ContactPerson","ContactOrganization","AddressType","Address","City","StateOrProvince","PostCode","Country","CRS","EX_GeographicBoundingBox","geographicBoundingBox","EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS","westBoundLongitude","southBoundLatitude","eastBoundLongitude","northBoundLatitude","BoundingBox","unitSymbol","multipleValues","nearestValue","Attribution","ATTRIBUTION_PARSERS","AuthorityURL","authorityObject","readFormatOnlineresource","MetadataURL","metadataObject","DataURL","FeatureListURL","MinScaleDenominator","MaxScaleDenominator","parentLayerObject","layerObject","queryable","cascaded","noSubsets","fixedWidth","fixedHeight","childValue","parentValue","LogoURL","readSizedFormatOnlineresource","GetCapabilities","readOperationType","GetMap","GetFeatureInfo","OPERATIONTYPE_PARSERS","DCPType","DCPTYPE_PARSERS","HTTP","HTTP_PARSERS","Get","Post","StyleSheetURL","StyleURL","FORMAT_ONLINERESOURCE_PARSERS","KEYWORDLIST_PARSERS","Keyword","formatOnlineresource","wmsCapabilityObject","OWS","ServiceIdentification","SERVICE_IDENTIFICATION_PARSERS","ServiceProvider","SERVICE_PROVIDER_PARSERS","OperationsMetadata","OPERATIONS_METADATA_PARSERS","ADDRESS_PARSERS","DeliveryPoint","AdministrativeArea","PostalCode","ElectronicMailAddress","ALLOWED_VALUES_PARSERS","CONSTRAINT_PARSERS","AllowedValues","CONTACT_INFO_PARSERS","Phone","PHONE_PARSERS","DCP_PARSERS","REQUEST_METHOD_PARSERS","OPERATION_PARSERS","DCP","Operation","Voice","Facsimile","Constraint","SERVICE_CONTACT_PARSERS","IndividualName","PositionName","ContactInfo","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","owsObject","IGCZ","IGC","altitudeMode_","B_RECORD_RE","H_RECORD_RE","HFDTE_RECORD_RE","NEWLINE_RE","year","month","day","lastDateTime","hour","minute","second","UTC","_xml_js__WEBPACK_IMPORTED_MODULE_11__","GPX","readExtensions_","readExtensions","FEATURE_READER","rte","readRte","trk","readTrk","wpt","readWpt","GPX_PARSERS","RTE_PARSERS","cmt","desc","link","parseLink","extensions","parseExtensions","rtept","RTEPT_PARSERS","rteValues","layoutOptions","ele","TRK_PARSERS","trkseg","TRKSEG_PARSERS","trkpt","TRKPT_PARSERS","trkValues","WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","LINK_SEQUENCE","LINK_SERIALIZERS","RTE_SEQUENCE","RTE_SERIALIZERS","writeLink","writeWptType","RTEPT_TYPE_SEQUENCE","TRK_SEQUENCE","TRK_SERIALIZERS","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","GPX_NODE_FACTORY","GPX_SERIALIZERS","applyLayoutOptions","_geom_Point_js__WEBPACK_IMPORTED_MODULE_9__","handleReadExtensions_","extensionsNode","featureReader","gpx","_style_Atlas_js__WEBPACK_IMPORTED_MODULE_2__","currentSize_","initialSize","maxSize_","maxSize","currentHitSize_","hitAtlases_","getInfo_","hitInfo","mergeInfos_","atlases","opt_renderHitCallback","add_","renderHitCallback","isHitAtlas","_tilegrid_js__WEBPACK_IMPORTED_MODULE_13__","preemptive","preemptive_","grid_","data_","jsonp_","getData","xRelative","yRelative","forDataAtCoordinate","opt_request","loadInternal_","handleError_","grid","_net_js__WEBPACK_IMPORTED_MODULE_8__","UTFGrid","_source_Tile_js__WEBPACK_IMPORTED_MODULE_11__","_proj_js__WEBPACK_IMPORTED_MODULE_9__","_source_State_js__WEBPACK_IMPORTED_MODULE_10__","tileUrlFunction_","_tileurlfunction_js__WEBPACK_IMPORTED_MODULE_3__","template_","_asserts_js__WEBPACK_IMPORTED_MODULE_4__","getTemplate","forDataAtCoordinateAndResolution","grids","_tilecoord_js__WEBPACK_IMPORTED_MODULE_12__","_uri_js__WEBPACK_IMPORTED_MODULE_7__","ImageMapGuide","_source_Image_js__WEBPACK_IMPORTED_MODULE_6__","displayDpi_","displayDpi","useOverlay_","useOverlay","baseUrl","mcsW","mcsH","devW","devH","mpp","OPERATION","LOCALE","CLIENTAGENT","CLIP","SETDISPLAYDPI","SETDISPLAYWIDTH","SETDISPLAYHEIGHT","SETVIEWSCALE","SETVIEWCENTERX","SETVIEWCENTERY","_style_IconImageCache_js__WEBPACK_IMPORTED_MODULE_6__","IconImage","imageState_","tainting_","_ImageState_js__WEBPACK_IMPORTED_MODULE_5__","determineTainting_","dispatchChangeEvent_","replaceColor_","imgData","_style_Style_js__WEBPACK_IMPORTED_MODULE_13__","ExtentEventType","ExtentInteractionEvent","ExtentInteraction","pointerHandler_","extentFeature_","_interaction_Pointer_js__WEBPACK_IMPORTED_MODULE_10__","extentOverlay_","_layer_Vector_js__WEBPACK_IMPORTED_MODULE_11__","_source_Vector_js__WEBPACK_IMPORTED_MODULE_12__","boxStyle","getDefaultExtentStyleFunction","vertexOverlay_","pointerStyle","getDefaultPointerStyleFunction","snapToVertex_","getOpposingPoint","x_","y_","getPointHandler","getEdgeHandler","createOrUpdatePointerFeature_","fixedPoint","fixedP1","fixedP2","_coordinate_js__WEBPACK_IMPORTED_MODULE_4__","getSegments","createOrUpdateExtentFeature_","extentFeature","_easing_js__WEBPACK_IMPORTED_MODULE_5__","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","outElement","_control_Control_js__WEBPACK_IMPORTED_MODULE_3__","zoomByDelta_","_index_js__WEBPACK_IMPORTED_MODULE_5__","Rotate","_css_js__WEBPACK_IMPORTED_MODULE_1__","callResetNorth_","resetNorth","_control_Control_js__WEBPACK_IMPORTED_MODULE_0__","autoHide_","autoHide","msTransform","webkitTransform","resetNorth_","_layer_Layer_js__WEBPACK_IMPORTED_MODULE_7__","ulElement_","_control_Control_js__WEBPACK_IMPORTED_MODULE_2__","renderedAttributions_","getSourceAttributions_","lookup","visibleAttributions","attributionGetter","_Zoom_js__WEBPACK_IMPORTED_MODULE_3__","_Collection_js__WEBPACK_IMPORTED_MODULE_0__","zoomOptions","_Rotate_js__WEBPACK_IMPORTED_MODULE_2__","rotateOptions","_Attribution_js__WEBPACK_IMPORTED_MODULE_1__","attributionOptions","geodesic_line","geoA","geoB","geoStack","fractionStack","fractions","geoM","fracA","fracB","fracM","maxIterations","INTERVALS","Graticule","postcomposeListenerKey_","maxLat_","maxLon_","minLat_","minLon_","maxLatP_","maxLonP_","minLatP_","minLonP_","targetSize_","targetSize","maxLines_","maxLines","meridians_","parallels_","fromLonLatTransform_","toLonLatTransform_","projectionCenterLonLat_","meridiansLabels_","parallelsLabels_","showLabels","lonLabelFormatter_","lonLabelFormatter","latLabelFormatter_","latLabelFormatter","lonLabelPosition_","lonLabelPosition","latLabelPosition_","latLabelPosition","lonLabelStyle_","lonLabelStyle","latLabelStyle_","latLabelStyle","addMeridian_","minLat","maxLat","getMeridian_","textPoint","getMeridianPoint_","clampedBottom","clampedTop","addParallel_","minLon","maxLon","getParallel_","getParallelPoint_","clampedLeft","clampedRight","createGraticule_","getInterval_","centerLonLat","centerLon","centerLat","cnt","validExtent","frac","meridian","getMeridians","lon2","parallel","getParallels","handlePostCompose_","labelData","updateProjectionInfo_","worldExtentP","MousePosition","_control_Control_js__WEBPACK_IMPORTED_MODULE_4__","coordinateFormat","setCoordinateFormat","undefinedHTML_","undefinedHTML","renderOnMouseOut_","mapProjection_","lastMouseMovePixel_","updateHTML_","getCoordinateFormat","handleMouseMove","handleMouseOut","_render_canvas_Immediate_js__WEBPACK_IMPORTED_MODULE_2__","toContext","_has_js__WEBPACK_IMPORTED_MODULE_0__","_transform_js__WEBPACK_IMPORTED_MODULE_1__","errorThreshold","sourceProj_","transformInvCache","transformInv","transformInv_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","centerSrc","bc","bcSrc","da","daSrc","abSrc","cd","cdSrc","_structs_LRUCache_js__WEBPACK_IMPORTED_MODULE_1__","_format_FormatType_js__WEBPACK_IMPORTED_MODULE_1__","loadFeaturesXhr","success","failure","xhr","responseType","onload","responseXML","onerror","lineStringLength","ret","_structs_PriorityQueue_js__WEBPACK_IMPORTED_MODULE_4__","tilePriorityFunction","tileChangeCallback","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","newLoads","abortedTiles","AssertionError","message","Pbf","ieee754","ArrayBuffer","isView","Varint","Fixed64","Bytes","Fixed32","readPackedEnd","toNum","isSigned","makeRoomForExtraLength","startPos","extraLen","realloc","writePackedVarint","writeVarint","writePackedSVarint","writeSVarint","writePackedFloat","writeFloat","writePackedDouble","writeDouble","writePackedBoolean","writeBoolean","writePackedFixed32","writeFixed32","writePackedSFixed32","writeSFixed32","writePackedFixed64","writeFixed64","writePackedSFixed64","writeSFixed64","readUInt32","writeInt32","readInt32","destroy","readField","skip","readMessage","readFixed32","readSFixed32","readFixed64","readSFixed64","readVarintRemainder","b3","bytesPerSequence","readUtf8","readBytes","subarray","readPackedVarint","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","writeBigVarintLow","lsb","writeBigVarintHigh","writeBigVarint","writeString","lead","writeUtf8","writeBytes","writeRawMessage","writeMessage","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","Processor","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","rt","hasImageData","ImageData","_","newImageData","createImageData","createMinion","workerHasImageData","newWorkerImageData","buffers","meta","numBuffers","numBytes","byteLength","Uint8ClampedArray","arrays","createWorker","onMessage","blob","Blob","createObjectURL","worker","Worker","_imageOps","workers","_onWorkerMessage","minion","postMessage","createFauxWorker","_workers","_queue","_maxQueueLength","_running","_dataLookup","_job","inputs","_enqueue","_dispatch","_destroyed","job","slices","_resolveJob","swap","defaultCompare","quickselectStep","sd","newLeft","newRight"],"mappings":"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","file":"common.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// run deferred modules from other chunks\n \tcheckDeferredModules();\n","/**\n * @module ol/xml\n */\nimport {extend} from './array.js';\n\n\n/**\n * When using {@link module:ol/xml~makeChildAppender} or\n * {@link module:ol/xml~makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Node} node\n */\n\n\n/**\n * @typedef {function(Node, Array.<*>)} Parser\n */\n\n\n/**\n * @typedef {function(Node, *, Array.<*>)} Serializer\n */\n\n\n/**\n * This document should be used when creating nodes for XML serializations. This\n * document is also used by {@link module:ol/xml~createElementNS}\n * @const\n * @type {Document}\n */\nexport const DOCUMENT = document.implementation.createDocument('', '', null);\n\n\n/**\n * @type {string}\n */\nexport const XML_SCHEMA_INSTANCE_URI = 'http://www.w3.org/2001/XMLSchema-instance';\n\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Node} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n  return DOCUMENT.createElementNS(namespaceURI, qualifiedName);\n}\n\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array.<string>} accumulator Accumulator.\n * @private\n * @return {Array.<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n  if (node.nodeType == Node.CDATA_SECTION_NODE ||\n      node.nodeType == Node.TEXT_NODE) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    let n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n}\n\n\n/**\n * @param {?} value Value.\n * @return {boolean} Is document.\n */\nexport function isDocument(value) {\n  return value instanceof Document;\n}\n\n\n/**\n * @param {?} value Value.\n * @return {boolean} Is node.\n */\nexport function isNode(value) {\n  return value instanceof Node;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n}\n\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n}\n\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array.<*>): (Array.<*>|undefined)}\n *     valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {module:ol/xml~Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array.<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      const value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        const array = /** @type {Array.<*>} */ (objectStack[objectStack.length - 1]);\n        extend(array, value);\n      }\n    }\n  );\n}\n\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array.<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {module:ol/xml~Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array.<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      const value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        const array = /** @type {Array.<*>} */ (objectStack[objectStack.length - 1]);\n        array.push(value);\n      }\n    });\n}\n\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array.<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {module:ol/xml~Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array.<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      const value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    });\n}\n\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Node, Array.<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {module:ol/xml~Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array.<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      const value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n        const property = opt_property !== undefined ? opt_property : node.localName;\n        let array;\n        if (property in object) {\n          array = object[property];\n        } else {\n          array = object[property] = [];\n        }\n        array.push(value);\n      }\n    });\n}\n\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Node, Array.<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {module:ol/xml~Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array.<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      const value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n        const property = opt_property !== undefined ? opt_property : node.localName;\n        object[property] = value;\n      }\n    });\n}\n\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array.<*>)}\n *     nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {module:ol/xml~Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, opt_this) {\n  return function(node, value, objectStack) {\n    nodeWriter.call(opt_this !== undefined ? opt_this : this, node, value, objectStack);\n    const parent = /** @type {module:ol/xml~NodeStackItem} */ (objectStack[objectStack.length - 1]);\n    const parentNode = parent.node;\n    parentNode.appendChild(node);\n  };\n}\n\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml~serialize}. This can be used by the parent writer to have the\n * 'nodeWriter' called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Node, V, Array.<*>)}\n *     nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {module:ol/xml~Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, opt_this) {\n  let serializersNS, nodeFactory;\n  return function(node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      const serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = makeSimpleNodeFactory(node.localName);\n    }\n    serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n}\n\n\n/**\n * Create a node factory which can use the `opt_keys` passed to\n * {@link module:ol/xml~serialize} or {@link module:ol/xml~pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string=} opt_nodeName Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string=} opt_namespaceURI Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array.<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(opt_nodeName, opt_namespaceURI) {\n  const fixedNodeName = opt_nodeName;\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array.<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Node} Node.\n     */\n    function(value, objectStack, opt_nodeName) {\n      const context = /** @type {module:ol/xml~NodeStackItem} */ (objectStack[objectStack.length - 1]);\n      const node = context.node;\n      let nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = opt_nodeName;\n      }\n\n      const namespaceURI = opt_namespaceURI !== undefined ? opt_namespaceURI : node.namespaceURI;\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n}\n\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nexport const OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n\n\n/**\n * Create an array of `values` to be used with {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `opt_key` argument.\n * @param {Object.<string, V>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array.<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array.<V>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n * @template V\n */\nexport function makeSequence(object, orderedKeys) {\n  const length = orderedKeys.length;\n  const sequence = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n}\n\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array.<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object.<string, T>=} opt_structureNS Namespaced structure to add to.\n * @return {Object.<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, opt_structureNS) {\n  /**\n   * @type {Object.<string, T>}\n   */\n  const structureNS = opt_structureNS !== undefined ? opt_structureNS : {};\n  let i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n}\n\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object.<string, Object.<string, module:ol/xml~Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, opt_this) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      const parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(opt_this, n, objectStack);\n      }\n    }\n  }\n}\n\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object.<string, Object.<string, module:ol/xml~Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(object, parsersNS, node, objectStack, opt_this) {\n  objectStack.push(object);\n  parseNode(parsersNS, node, objectStack, opt_this);\n  return /** @type {T} */ (objectStack.pop());\n}\n\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object.<string, Object.<string, module:ol/xml~Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array.<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array.<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array.<*>} objectStack Node stack.\n * @param {Array.<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(\n  serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n  const length = (opt_keys !== undefined ? opt_keys : values).length;\n  let value, node;\n  for (let i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(opt_this !== undefined ? opt_this : this, value, objectStack,\n        opt_keys !== undefined ? opt_keys[i] : undefined);\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName]\n          .call(opt_this, node, value, objectStack);\n      }\n    }\n  }\n}\n\n\n/**\n * @param {O} object Object.\n * @param {Object.<string, Object.<string, module:ol/xml~Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array.<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array.<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array.<*>} objectStack Node stack.\n * @param {Array.<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(object, serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n  objectStack.push(object);\n  serialize(serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this);\n  return /** @type {O|undefined} */ (objectStack.pop());\n}\n","/**\n * @module ol\n */\n\nimport {getContext} from './webgl.js';\n\n\n/**\n * An array with two elements, representing a pixel. The first element is the\n * x-coordinate, the second the y-coordinate of the pixel.\n * @typedef {Array.<number>} Pixel\n * @api\n */\n\n\n/**\n * Include debuggable shader sources.  Default is `true`. This should be set to\n * `false` for production builds.\n * TODO: move to a separate ol-webgl package\n * @type {boolean}\n */\nexport const DEBUG_WEBGL = true;\n\n\n/**\n * TODO: move to a separate ol-webgl package\n * The maximum supported WebGL texture size in pixels. If WebGL is not\n * supported, the value is set to `undefined`.\n * @type {number|undefined}\n */\nlet WEBGL_MAX_TEXTURE_SIZE; // value is set below\n\n\n/**\n * TODO: move to a separate ol-webgl package\n * List of supported WebGL extensions.\n * @type {Array.<string>}\n */\nlet WEBGL_EXTENSIONS; // value is set below\n\n\n/**\n * TODO: move to a separate ol-webgl package\n * WebGL is available.\n * @type {boolean}\n */\nlet HAS_WEBGL = false;\n\n\nif (typeof window !== 'undefined' && 'WebGLRenderingContext' in window) {\n  try {\n    const canvas = /** @type {HTMLCanvasElement} */ (document.createElement('CANVAS'));\n    const gl = getContext(canvas, {failIfMajorPerformanceCaveat: true});\n    if (gl) {\n      HAS_WEBGL = true;\n      WEBGL_MAX_TEXTURE_SIZE = /** @type {number} */ (gl.getParameter(gl.MAX_TEXTURE_SIZE));\n      WEBGL_EXTENSIONS = gl.getSupportedExtensions();\n    }\n  } catch (e) {\n    // pass\n  }\n}\n\nexport {HAS_WEBGL, WEBGL_MAX_TEXTURE_SIZE, WEBGL_EXTENSIONS};\n\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '5.0.0-beta.14';\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n *\n *     function ParentClass(a, b) { }\n *     ParentClass.prototype.foo = function(a) { }\n *\n *     function ChildClass(a, b, c) {\n *       // Call parent constructor\n *       ParentClass.call(this, a, b);\n *     }\n *     inherits(ChildClass, ParentClass);\n *\n *     var child = new ChildClass('a', 'b', 'see');\n *     child.foo(); // This works.\n *\n * @param {!Function} childCtor Child constructor.\n * @param {!Function} parentCtor Parent constructor.\n * @function\n * @api\n */\nexport function inherits(childCtor, parentCtor) {\n  childCtor.prototype = Object.create(parentCtor.prototype);\n  childCtor.prototype.constructor = childCtor;\n}\n\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {number} The unique ID for the object.\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = ++uidCounter_);\n}\n","/**\n * @module ol/style\n */\n\n\nexport {default as Atlas} from './style/Atlas.js';\nexport {default as AtlasManager} from './style/AtlasManager.js';\nexport {default as Circle} from './style/Circle.js';\nexport {default as Fill} from './style/Fill.js';\nexport {default as Icon} from './style/Icon.js';\nexport {default as IconImage} from './style/IconImage.js';\nexport {default as Image} from './style/Image.js';\nexport {default as RegularShape} from './style/RegularShape.js';\nexport {default as Stroke} from './style/Stroke.js';\nexport {default as Style} from './style/Style.js';\nexport {default as Text} from './style/Text.js';\n","/**\n * @module ol/extent\n */\nimport {assert} from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array.<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @return {module:ol/extent~Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Array.<number>} xs Xs.\n * @param {Array.<number>} ys Ys.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @private\n * @return {module:ol/extent~Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n\n/**\n * Return extent increased by the provided value.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value\n    ];\n  }\n}\n\n\n/**\n * Creates a clone of an extent.\n *\n * @param {module:ol/extent~Extent} extent Extent to clone.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n      extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {module:ol/extent~Extent} extent The extent.\n * @param {module:ol/coordinate~Coordinate} coordinate The coordinate.\n * @return {module:ol/extent/Relationship} The relationship (bitwise compare with\n *     module:ol/extent/Relationship~Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n\n/**\n * Create an empty extent.\n * @return {module:ol/extent~Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(\n    Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n\n/**\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} rings Rings.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n\n/**\n * Determine if two extents are equivalent.\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n      extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n\n\n/**\n * Modify an extent to include another extent.\n * @param {module:ol/extent~Extent} extent1 The extent to be modified.\n * @param {module:ol/extent~Extent} extent2 The extent that will be included in the first.\n * @return {module:ol/extent~Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} rings Rings.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(this:T, module:ol/coordinate~Coordinate): S} callback Callback.\n * @param {T=} opt_this Value to use as `this` when executing `callback`.\n * @return {S|boolean} Value.\n * @template S, T\n */\nexport function forEachCorner(extent, callback, opt_this) {\n  let val;\n  val = callback.call(opt_this, getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n\n/**\n * Get the size of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n\n/**\n * Get the center coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n\n/**\n * Get a corner coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/extent/Corner} corner Corner.\n * @return {module:ol/coordinate~Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return (\n    /** @type {!module:ol/coordinate~Coordinate} */ (coordinate)\n  );\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {module:ol/size~Size} size Size.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n  const dx = resolution * size[0] / 2;\n  const dy = resolution * size[1] / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3),\n    opt_extent);\n}\n\n\n/**\n * Get the height of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n\n/**\n * Get the intersection of two extents.\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @param {module:ol/extent~Extent=} opt_extent Optional extent to populate with intersection.\n * @return {module:ol/extent~Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n\n/**\n * Get the size (width, height) of an extent.\n * @param {module:ol/extent~Extent} extent The extent.\n * @return {module:ol/size~Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n\n/**\n * Get the top left coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n\n/**\n * Get the top right coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n\n/**\n * Get the width of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n\n/**\n * Determine if one extent intersects another.\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return extent1[0] <= extent2[2] &&\n      extent1[2] >= extent2[0] &&\n      extent1[1] <= extent2[3] &&\n      extent1[3] >= extent2[1];\n}\n\n\n/**\n * Determine if an extent is empty.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {module:ol/extent~Extent} extent The extent.\n * @param {module:ol/coordinate~Coordinate} start Segment start coordinate.\n * @param {module:ol/coordinate~Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (startRel === Relationship.INTERSECTING ||\n      endRel === Relationship.INTERSECTING) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) &&\n        !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - ((endY - maxY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.RIGHT) &&\n        !(startRel & Relationship.RIGHT)) {\n      // potentially intersects right\n      y = endY - ((endX - maxX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n    if (!intersects && !!(endRel & Relationship.BELOW) &&\n        !(startRel & Relationship.BELOW)) {\n      // potentially intersects bottom\n      x = endX - ((endY - minY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.LEFT) &&\n        !(startRel & Relationship.LEFT)) {\n      // potentially intersects left\n      y = endY - ((endX - minX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n\n  }\n  return intersects;\n}\n\n\n/**\n * Apply a transform function to the extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/proj~TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n  const coordinates = [\n    extent[0], extent[1],\n    extent[0], extent[3],\n    extent[2], extent[1],\n    extent[2], extent[3]\n  ];\n  transformFn(coordinates, coordinates, 2);\n  const xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n  const ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((module:ol/coordinate~Coordinate|undefined)): (module:ol/coordinate~Coordinate|undefined)} Type\n */\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/centerconstraint~Type} The constraint.\n */\nexport function createExtent(extent) {\n  return (\n    /**\n     * @param {module:ol/coordinate~Coordinate=} center Center.\n     * @return {module:ol/coordinate~Coordinate|undefined} Center.\n     */\n    function(center) {\n      if (center) {\n        return [\n          clamp(center[0], extent[0], extent[2]),\n          clamp(center[1], extent[1], extent[3])\n        ];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate=} center Center.\n * @return {module:ol/coordinate~Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/View\n */\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {inherits, getUid} from './index.js';\nimport {UNDEFINED} from './functions.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport {createSnapToResolutions, createSnapToPower} from './resolutionconstraint.js';\nimport {createSnapToZero, createSnapToN, none as rotationNone, disable} from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual} from './coordinate.js';\nimport {inAndOut} from './easing.js';\nimport {getForViewAndSize, getCenter, getHeight, getWidth, isEmpty} from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport SimpleGeometry from './geom/SimpleGeometry.js';\nimport {clamp, modulo} from './math.js';\nimport {assign} from './obj.js';\nimport {createProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\n\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {module:ol/coordinate~Coordinate} [sourceCenter]\n * @property {module:ol/coordinate~Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [sourceRotation]\n * @property {module:ol/coordinate~Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n\n\n/**\n * @typedef {Object} Constraints\n * @property {module:ol/centerconstraint~Type} center\n * @property {module:ol/resolutionconstraint~Type} resolution\n * @property {module:ol/rotationconstraint~Type} rotation\n */\n\n\n/**\n * @typedef {Object} FitOptions\n * @property {module:ol/size~Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array.<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [constrainResolution=true] Constrain the resolution.\n * @property {boolean} [nearest=false] If `constrainResolution` is `true`, get\n * the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n\n/**\n * @typedef {Object} ViewOptions\n * @property {module:ol/coordinate~Coordinate} [center] The initial center for\n * the view. The coordinate system for the center is specified with the\n * `projection` option. Layer sources will not be fetched if this is not set,\n * but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {module:ol/extent~Extent} [extent] The extent that constrains the\n * center, in other words, center cannot be set outside this extent.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array.<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view. The initial\n * resolution is determined using the {@link #constrainResolution} method.\n * @property {number} [zoomFactor=2] The zoom factor used to determine the\n * resolution constraint.\n */\n\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {module:ol/coordinate~Coordinate|undefined} center The center of the view at the end of\n * the animation.\n * @property {number|undefined} zoom The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number|undefined} resolution The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number|undefined} rotation The rotation of the view at the end of\n * the animation.\n * @property {module:ol/coordinate~Coordinate|undefined} anchor Optional anchor to remained fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {module:ol/coordinate~Coordinate} center\n * @property {module:ol/proj/Projection} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * ### The view states\n *\n * An View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * An View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view. Any value can be passed to the setters. And the value\n * that is passed to a setter will effectively be the value set in the view,\n * and returned by the corresponding getter.\n *\n * But a View object also has a *resolution constraint*, a\n * *rotation constraint* and a *center constraint*.\n *\n * As said above, no constraints are applied when the setters are used to set\n * new states for the view. Applying constraints is done explicitly through\n * the use of the `constrain*` functions (`constrainResolution` and\n * `constrainRotation` and `constrainCenter`).\n *\n * The main users of the constraints are the interactions and the\n * controls. For example, double-clicking on the map changes the view to\n * the \"next\" resolution. And releasing the fingers after pinch-zooming\n * snaps to the closest resolution (with an animation).\n *\n * The *resolution constraint* snaps to specific resolutions. It is\n * determined by the following options: `resolutions`, `maxResolution`,\n * `maxZoom`, and `zoomFactor`. If `resolutions` is set, the other three\n * options are ignored. See documentation for each option for more\n * information.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default the rotation value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the center is not constrained at all.\n *\n * @constructor\n * @extends {module:ol/Object}\n * @param {module:ol/View~ViewOptions=} opt_options View options.\n * @api\n */\nconst View = function(opt_options) {\n  BaseObject.call(this);\n\n  const options = assign({}, opt_options);\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.hints_ = [0, 0];\n\n  /**\n   * @private\n   * @type {Array.<Array.<module:ol/View~Animation>>}\n   */\n  this.animations_ = [];\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.updateAnimationKey_;\n\n  this.updateAnimations_ = this.updateAnimations_.bind(this);\n\n  /**\n   * @private\n   * @const\n   * @type {module:ol/proj/Projection}\n   */\n  this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n  this.applyOptions_(options);\n};\n\ninherits(View, BaseObject);\n\n\n/**\n * Set up the view with the given options.\n * @param {module:ol/View~ViewOptions} options View options.\n */\nView.prototype.applyOptions_ = function(options) {\n\n  /**\n   * @type {Object.<string, *>}\n   */\n  const properties = {};\n  properties[ViewProperty.CENTER] = options.center !== undefined ?\n    options.center : null;\n\n  const resolutionConstraintInfo = createResolutionConstraint(options);\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n  /**\n   * @private\n   * @type {Array.<number>|undefined}\n   */\n  this.resolutions_ = options.resolutions;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n  const centerConstraint = createCenterConstraint(options);\n  const resolutionConstraint = resolutionConstraintInfo.constraint;\n  const rotationConstraint = createRotationConstraint(options);\n\n  /**\n   * @private\n   * @type {module:ol/View~Constraints}\n   */\n  this.constraints_ = {\n    center: centerConstraint,\n    resolution: resolutionConstraint,\n    rotation: rotationConstraint\n  };\n\n  if (options.resolution !== undefined) {\n    properties[ViewProperty.RESOLUTION] = options.resolution;\n  } else if (options.zoom !== undefined) {\n    properties[ViewProperty.RESOLUTION] = this.constrainResolution(\n      this.maxResolution_, options.zoom - this.minZoom_);\n\n    if (this.resolutions_) { // in case map zoom is out of min/max zoom range\n      properties[ViewProperty.RESOLUTION] = clamp(\n        Number(this.getResolution() || properties[ViewProperty.RESOLUTION]),\n        this.minResolution_, this.maxResolution_);\n    }\n  }\n  properties[ViewProperty.ROTATION] = options.rotation !== undefined ? options.rotation : 0;\n  this.setProperties(properties);\n\n  /**\n   * @private\n   * @type {module:ol/View~ViewOptions}\n   */\n  this.options_ = options;\n\n};\n\n/**\n * Get an updated version of the view options used to construct the view.  The\n * current resolution (or zoom), center, and rotation are applied to any stored\n * options.  The provided options can be used to apply new min/max zoom or\n * resolution limits.\n * @param {module:ol/View~ViewOptions} newOptions New options to be applied.\n * @return {module:ol/View~ViewOptions} New options updated with the current view state.\n */\nView.prototype.getUpdatedOptions_ = function(newOptions) {\n  const options = assign({}, this.options_);\n\n  // preserve resolution (or zoom)\n  if (options.resolution !== undefined) {\n    options.resolution = this.getResolution();\n  } else {\n    options.zoom = this.getZoom();\n  }\n\n  // preserve center\n  options.center = this.getCenter();\n\n  // preserve rotation\n  options.rotation = this.getRotation();\n\n  return assign({}, options, newOptions);\n};\n\n\n/**\n * Animate the view.  The view's center, zoom (or resolution), and rotation\n * can be animated for smooth transitions between view states.  For example,\n * to animate the view to a new zoom level:\n *\n *     view.animate({zoom: view.getZoom() + 1});\n *\n * By default, the animation lasts one second and uses in-and-out easing.  You\n * can customize this behavior by including `duration` (in milliseconds) and\n * `easing` options (see {@link module:ol/easing}).\n *\n * To chain together multiple animations, call the method with multiple\n * animation objects.  For example, to first zoom and then pan:\n *\n *     view.animate({zoom: 10}, {center: [0, 0]});\n *\n * If you provide a function as the last argument to the animate method, it\n * will get called at the end of an animation series.  The callback will be\n * called with `true` if the animation series completed on its own or `false`\n * if it was cancelled.\n *\n * Animations are cancelled by user interactions (e.g. dragging the map) or by\n * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n * (or another method that calls one of these).\n *\n * @param {...(module:ol/View~AnimationOptions|function(boolean))} var_args Animation\n *     options.  Multiple animations can be run in series by passing multiple\n *     options objects.  To run multiple animations in parallel, call the method\n *     multiple times.  An optional callback can be provided as a final\n *     argument.  The callback will be called with a boolean indicating whether\n *     the animation completed without being cancelled.\n * @api\n */\nView.prototype.animate = function(var_args) {\n  let animationCount = arguments.length;\n  let callback;\n  if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n    callback = arguments[animationCount - 1];\n    --animationCount;\n  }\n  if (!this.isDef()) {\n    // if view properties are not yet set, shortcut to the final state\n    const state = arguments[animationCount - 1];\n    if (state.center) {\n      this.setCenter(state.center);\n    }\n    if (state.zoom !== undefined) {\n      this.setZoom(state.zoom);\n    }\n    if (state.rotation !== undefined) {\n      this.setRotation(state.rotation);\n    }\n    if (callback) {\n      setTimeout(function() {\n        callback(true);\n      }, 0);\n    }\n    return;\n  }\n  let start = Date.now();\n  let center = this.getCenter().slice();\n  let resolution = this.getResolution();\n  let rotation = this.getRotation();\n  const series = [];\n  for (let i = 0; i < animationCount; ++i) {\n    const options = /** @type {module:ol/View~AnimationOptions} */ (arguments[i]);\n\n    const animation = /** @type {module:ol/View~Animation} */ ({\n      start: start,\n      complete: false,\n      anchor: options.anchor,\n      duration: options.duration !== undefined ? options.duration : 1000,\n      easing: options.easing || inAndOut\n    });\n\n    if (options.center) {\n      animation.sourceCenter = center;\n      animation.targetCenter = options.center;\n      center = animation.targetCenter;\n    }\n\n    if (options.zoom !== undefined) {\n      animation.sourceResolution = resolution;\n      animation.targetResolution = this.constrainResolution(\n        this.maxResolution_, options.zoom - this.minZoom_, 0);\n      resolution = animation.targetResolution;\n    } else if (options.resolution) {\n      animation.sourceResolution = resolution;\n      animation.targetResolution = options.resolution;\n      resolution = animation.targetResolution;\n    }\n\n    if (options.rotation !== undefined) {\n      animation.sourceRotation = rotation;\n      const delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n      animation.targetRotation = rotation + delta;\n      rotation = animation.targetRotation;\n    }\n\n    animation.callback = callback;\n\n    // check if animation is a no-op\n    if (isNoopAnimation(animation)) {\n      animation.complete = true;\n      // we still push it onto the series for callback handling\n    } else {\n      start += animation.duration;\n    }\n    series.push(animation);\n  }\n  this.animations_.push(series);\n  this.setHint(ViewHint.ANIMATING, 1);\n  this.updateAnimations_();\n};\n\n\n/**\n * Determine if the view is being animated.\n * @return {boolean} The view is being animated.\n * @api\n */\nView.prototype.getAnimating = function() {\n  return this.hints_[ViewHint.ANIMATING] > 0;\n};\n\n\n/**\n * Determine if the user is interacting with the view, such as panning or zooming.\n * @return {boolean} The view is being interacted with.\n * @api\n */\nView.prototype.getInteracting = function() {\n  return this.hints_[ViewHint.INTERACTING] > 0;\n};\n\n\n/**\n * Cancel any ongoing animations.\n * @api\n */\nView.prototype.cancelAnimations = function() {\n  this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n  for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n    const series = this.animations_[i];\n    if (series[0].callback) {\n      series[0].callback(false);\n    }\n  }\n  this.animations_.length = 0;\n};\n\n/**\n * Update all animations.\n */\nView.prototype.updateAnimations_ = function() {\n  if (this.updateAnimationKey_ !== undefined) {\n    cancelAnimationFrame(this.updateAnimationKey_);\n    this.updateAnimationKey_ = undefined;\n  }\n  if (!this.getAnimating()) {\n    return;\n  }\n  const now = Date.now();\n  let more = false;\n  for (let i = this.animations_.length - 1; i >= 0; --i) {\n    const series = this.animations_[i];\n    let seriesComplete = true;\n    for (let j = 0, jj = series.length; j < jj; ++j) {\n      const animation = series[j];\n      if (animation.complete) {\n        continue;\n      }\n      const elapsed = now - animation.start;\n      let fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n      if (fraction >= 1) {\n        animation.complete = true;\n        fraction = 1;\n      } else {\n        seriesComplete = false;\n      }\n      const progress = animation.easing(fraction);\n      if (animation.sourceCenter) {\n        const x0 = animation.sourceCenter[0];\n        const y0 = animation.sourceCenter[1];\n        const x1 = animation.targetCenter[0];\n        const y1 = animation.targetCenter[1];\n        const x = x0 + progress * (x1 - x0);\n        const y = y0 + progress * (y1 - y0);\n        this.set(ViewProperty.CENTER, [x, y]);\n      }\n      if (animation.sourceResolution && animation.targetResolution) {\n        const resolution = progress === 1 ?\n          animation.targetResolution :\n          animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n        if (animation.anchor) {\n          this.set(ViewProperty.CENTER,\n            this.calculateCenterZoom(resolution, animation.anchor));\n        }\n        this.set(ViewProperty.RESOLUTION, resolution);\n      }\n      if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n        const rotation = progress === 1 ?\n          modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n          animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n        if (animation.anchor) {\n          this.set(ViewProperty.CENTER,\n            this.calculateCenterRotate(rotation, animation.anchor));\n        }\n        this.set(ViewProperty.ROTATION, rotation);\n      }\n      more = true;\n      if (!animation.complete) {\n        break;\n      }\n    }\n    if (seriesComplete) {\n      this.animations_[i] = null;\n      this.setHint(ViewHint.ANIMATING, -1);\n      const callback = series[0].callback;\n      if (callback) {\n        setTimeout(function() {\n          callback(true);\n        }, 0);\n      }\n    }\n  }\n  // prune completed series\n  this.animations_ = this.animations_.filter(Boolean);\n  if (more && this.updateAnimationKey_ === undefined) {\n    this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_);\n  }\n};\n\n/**\n * @param {number} rotation Target rotation.\n * @param {module:ol/coordinate~Coordinate} anchor Rotation anchor.\n * @return {module:ol/coordinate~Coordinate|undefined} Center for rotation and anchor.\n */\nView.prototype.calculateCenterRotate = function(rotation, anchor) {\n  let center;\n  const currentCenter = this.getCenter();\n  if (currentCenter !== undefined) {\n    center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n    rotateCoordinate(center, rotation - this.getRotation());\n    addCoordinate(center, anchor);\n  }\n  return center;\n};\n\n\n/**\n * @param {number} resolution Target resolution.\n * @param {module:ol/coordinate~Coordinate} anchor Zoom anchor.\n * @return {module:ol/coordinate~Coordinate|undefined} Center for resolution and anchor.\n */\nView.prototype.calculateCenterZoom = function(resolution, anchor) {\n  let center;\n  const currentCenter = this.getCenter();\n  const currentResolution = this.getResolution();\n  if (currentCenter !== undefined && currentResolution !== undefined) {\n    const x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n    const y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n    center = [x, y];\n  }\n  return center;\n};\n\n\n/**\n * @private\n * @return {module:ol/size~Size} Viewport size or `[100, 100]` when no viewport is found.\n */\nView.prototype.getSizeFromViewport_ = function() {\n  const size = [100, 100];\n  const selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\n  const element = document.querySelector(selector);\n  if (element) {\n    const metrics = getComputedStyle(element);\n    size[0] = parseInt(metrics.width, 10);\n    size[1] = parseInt(metrics.height, 10);\n  }\n  return size;\n};\n\n\n/**\n * Get the constrained center of this view.\n * @param {module:ol/coordinate~Coordinate|undefined} center Center.\n * @return {module:ol/coordinate~Coordinate|undefined} Constrained center.\n * @api\n */\nView.prototype.constrainCenter = function(center) {\n  return this.constraints_.center(center);\n};\n\n\n/**\n * Get the constrained resolution of this view.\n * @param {number|undefined} resolution Resolution.\n * @param {number=} opt_delta Delta. Default is `0`.\n * @param {number=} opt_direction Direction. Default is `0`.\n * @return {number|undefined} Constrained resolution.\n * @api\n */\nView.prototype.constrainResolution = function(resolution, opt_delta, opt_direction) {\n  const delta = opt_delta || 0;\n  const direction = opt_direction || 0;\n  return this.constraints_.resolution(resolution, delta, direction);\n};\n\n\n/**\n * Get the constrained rotation of this view.\n * @param {number|undefined} rotation Rotation.\n * @param {number=} opt_delta Delta. Default is `0`.\n * @return {number|undefined} Constrained rotation.\n * @api\n */\nView.prototype.constrainRotation = function(rotation, opt_delta) {\n  const delta = opt_delta || 0;\n  return this.constraints_.rotation(rotation, delta);\n};\n\n\n/**\n * Get the view center.\n * @return {module:ol/coordinate~Coordinate|undefined} The center of the view.\n * @observable\n * @api\n */\nView.prototype.getCenter = function() {\n  return (\n    /** @type {module:ol/coordinate~Coordinate|undefined} */ (this.get(ViewProperty.CENTER))\n  );\n};\n\n\n/**\n * @return {module:ol/View~Constraints} Constraints.\n */\nView.prototype.getConstraints = function() {\n  return this.constraints_;\n};\n\n\n/**\n * @param {Array.<number>=} opt_hints Destination array.\n * @return {Array.<number>} Hint.\n */\nView.prototype.getHints = function(opt_hints) {\n  if (opt_hints !== undefined) {\n    opt_hints[0] = this.hints_[0];\n    opt_hints[1] = this.hints_[1];\n    return opt_hints;\n  } else {\n    return this.hints_.slice();\n  }\n};\n\n\n/**\n * Calculate the extent for the current view state and the passed size.\n * The size is the pixel dimensions of the box into which the calculated extent\n * should fit. In most cases you want to get the extent of the entire map,\n * that is `map.getSize()`.\n * @param {module:ol/size~Size=} opt_size Box pixel size. If not provided, the size of the\n * first map that uses this view will be used.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nView.prototype.calculateExtent = function(opt_size) {\n  const size = opt_size || this.getSizeFromViewport_();\n  const center = /** @type {!module:ol/coordinate~Coordinate} */ (this.getCenter());\n  assert(center, 1); // The view center is not defined\n  const resolution = /** @type {!number} */ (this.getResolution());\n  assert(resolution !== undefined, 2); // The view resolution is not defined\n  const rotation = /** @type {!number} */ (this.getRotation());\n  assert(rotation !== undefined, 3); // The view rotation is not defined\n\n  return getForViewAndSize(center, resolution, rotation, size);\n};\n\n\n/**\n * Get the maximum resolution of the view.\n * @return {number} The maximum resolution of the view.\n * @api\n */\nView.prototype.getMaxResolution = function() {\n  return this.maxResolution_;\n};\n\n\n/**\n * Get the minimum resolution of the view.\n * @return {number} The minimum resolution of the view.\n * @api\n */\nView.prototype.getMinResolution = function() {\n  return this.minResolution_;\n};\n\n\n/**\n * Get the maximum zoom level for the view.\n * @return {number} The maximum zoom level.\n * @api\n */\nView.prototype.getMaxZoom = function() {\n  return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n};\n\n\n/**\n * Set a new maximum zoom level for the view.\n * @param {number} zoom The maximum zoom level.\n * @api\n */\nView.prototype.setMaxZoom = function(zoom) {\n  this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n};\n\n\n/**\n * Get the minimum zoom level for the view.\n * @return {number} The minimum zoom level.\n * @api\n */\nView.prototype.getMinZoom = function() {\n  return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n};\n\n\n/**\n * Set a new minimum zoom level for the view.\n * @param {number} zoom The minimum zoom level.\n * @api\n */\nView.prototype.setMinZoom = function(zoom) {\n  this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n};\n\n\n/**\n * Get the view projection.\n * @return {module:ol/proj/Projection} The projection of the view.\n * @api\n */\nView.prototype.getProjection = function() {\n  return this.projection_;\n};\n\n\n/**\n * Get the view resolution.\n * @return {number|undefined} The resolution of the view.\n * @observable\n * @api\n */\nView.prototype.getResolution = function() {\n  return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n};\n\n\n/**\n * Get the resolutions for the view. This returns the array of resolutions\n * passed to the constructor of the View, or undefined if none were given.\n * @return {Array.<number>|undefined} The resolutions of the view.\n * @api\n */\nView.prototype.getResolutions = function() {\n  return this.resolutions_;\n};\n\n\n/**\n * Get the resolution for a provided extent (in map units) and size (in pixels).\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/size~Size=} opt_size Box pixel size.\n * @return {number} The resolution at which the provided extent will render at\n *     the given size.\n * @api\n */\nView.prototype.getResolutionForExtent = function(extent, opt_size) {\n  const size = opt_size || this.getSizeFromViewport_();\n  const xResolution = getWidth(extent) / size[0];\n  const yResolution = getHeight(extent) / size[1];\n  return Math.max(xResolution, yResolution);\n};\n\n\n/**\n * Return a function that returns a value between 0 and 1 for a\n * resolution. Exponential scaling is assumed.\n * @param {number=} opt_power Power.\n * @return {function(number): number} Resolution for value function.\n */\nView.prototype.getResolutionForValueFunction = function(opt_power) {\n  const power = opt_power || 2;\n  const maxResolution = this.maxResolution_;\n  const minResolution = this.minResolution_;\n  const max = Math.log(maxResolution / minResolution) / Math.log(power);\n  return (\n    /**\n     * @param {number} value Value.\n     * @return {number} Resolution.\n     */\n    function(value) {\n      const resolution = maxResolution / Math.pow(power, value * max);\n      return resolution;\n    });\n};\n\n\n/**\n * Get the view rotation.\n * @return {number} The rotation of the view in radians.\n * @observable\n * @api\n */\nView.prototype.getRotation = function() {\n  return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n};\n\n\n/**\n * Return a function that returns a resolution for a value between\n * 0 and 1. Exponential scaling is assumed.\n * @param {number=} opt_power Power.\n * @return {function(number): number} Value for resolution function.\n */\nView.prototype.getValueForResolutionFunction = function(opt_power) {\n  const power = opt_power || 2;\n  const maxResolution = this.maxResolution_;\n  const minResolution = this.minResolution_;\n  const max = Math.log(maxResolution / minResolution) / Math.log(power);\n  return (\n    /**\n     * @param {number} resolution Resolution.\n     * @return {number} Value.\n     */\n    function(resolution) {\n      const value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n      return value;\n    });\n};\n\n\n/**\n * @return {module:ol/View~State} View state.\n */\nView.prototype.getState = function() {\n  const center = /** @type {module:ol/coordinate~Coordinate} */ (this.getCenter());\n  const projection = this.getProjection();\n  const resolution = /** @type {number} */ (this.getResolution());\n  const rotation = this.getRotation();\n  return (\n    /** @type {module:ol/View~State} */ ({\n      center: center.slice(),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      rotation: rotation,\n      zoom: this.getZoom()\n    })\n  );\n};\n\n\n/**\n * Get the current zoom level.  If you configured your view with a resolutions\n * array (this is rare), this method may return non-integer zoom levels (so\n * the zoom level is not safe to use as an index into a resolutions array).\n * @return {number|undefined} Zoom.\n * @api\n */\nView.prototype.getZoom = function() {\n  let zoom;\n  const resolution = this.getResolution();\n  if (resolution !== undefined) {\n    zoom = this.getZoomForResolution(resolution);\n  }\n  return zoom;\n};\n\n\n/**\n * Get the zoom level for a resolution.\n * @param {number} resolution The resolution.\n * @return {number|undefined} The zoom level for the provided resolution.\n * @api\n */\nView.prototype.getZoomForResolution = function(resolution) {\n  let offset = this.minZoom_ || 0;\n  let max, zoomFactor;\n  if (this.resolutions_) {\n    const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n    offset = nearest;\n    max = this.resolutions_[nearest];\n    if (nearest == this.resolutions_.length - 1) {\n      zoomFactor = 2;\n    } else {\n      zoomFactor = max / this.resolutions_[nearest + 1];\n    }\n  } else {\n    max = this.maxResolution_;\n    zoomFactor = this.zoomFactor_;\n  }\n  return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n};\n\n\n/**\n * Get the resolution for a zoom level.\n * @param {number} zoom Zoom level.\n * @return {number} The view resolution for the provided zoom level.\n * @api\n */\nView.prototype.getResolutionForZoom = function(zoom) {\n  return /** @type {number} */ (this.constrainResolution(\n    this.maxResolution_, zoom - this.minZoom_, 0));\n};\n\n\n/**\n * Fit the given geometry or extent based on the given map size and border.\n * The size is pixel dimensions of the box to fit the extent into.\n * In most cases you will want to use the map size, that is `map.getSize()`.\n * Takes care of the map angle.\n * @param {module:ol/geom/SimpleGeometry|module:ol/extent~Extent} geometryOrExtent The geometry or\n *     extent to fit the view to.\n * @param {module:ol/View~FitOptions=} opt_options Options.\n * @api\n */\nView.prototype.fit = function(geometryOrExtent, opt_options) {\n  const options = opt_options || {};\n  let size = options.size;\n  if (!size) {\n    size = this.getSizeFromViewport_();\n  }\n  /** @type {module:ol/geom/SimpleGeometry} */\n  let geometry;\n  if (!(geometryOrExtent instanceof SimpleGeometry)) {\n    assert(Array.isArray(geometryOrExtent),\n      24); // Invalid extent or geometry provided as `geometry`\n    assert(!isEmpty(geometryOrExtent),\n      25); // Cannot fit empty extent provided as `geometry`\n    geometry = polygonFromExtent(geometryOrExtent);\n  } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n    geometryOrExtent = geometryOrExtent.getExtent();\n    geometry = polygonFromExtent(geometryOrExtent);\n    geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\n  } else {\n    geometry = geometryOrExtent;\n  }\n\n  const padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n  const constrainResolution = options.constrainResolution !== undefined ?\n    options.constrainResolution : true;\n  const nearest = options.nearest !== undefined ? options.nearest : false;\n  let minResolution;\n  if (options.minResolution !== undefined) {\n    minResolution = options.minResolution;\n  } else if (options.maxZoom !== undefined) {\n    minResolution = this.constrainResolution(\n      this.maxResolution_, options.maxZoom - this.minZoom_, 0);\n  } else {\n    minResolution = 0;\n  }\n  const coords = geometry.getFlatCoordinates();\n\n  // calculate rotated extent\n  const rotation = this.getRotation();\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let minRotX = +Infinity;\n  let minRotY = +Infinity;\n  let maxRotX = -Infinity;\n  let maxRotY = -Infinity;\n  const stride = geometry.getStride();\n  for (let i = 0, ii = coords.length; i < ii; i += stride) {\n    const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n    const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n    minRotX = Math.min(minRotX, rotX);\n    minRotY = Math.min(minRotY, rotY);\n    maxRotX = Math.max(maxRotX, rotX);\n    maxRotY = Math.max(maxRotY, rotY);\n  }\n\n  // calculate resolution\n  let resolution = this.getResolutionForExtent(\n    [minRotX, minRotY, maxRotX, maxRotY],\n    [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n  resolution = isNaN(resolution) ? minResolution :\n    Math.max(resolution, minResolution);\n  if (constrainResolution) {\n    let constrainedResolution = this.constrainResolution(resolution, 0, 0);\n    if (!nearest && constrainedResolution < resolution) {\n      constrainedResolution = this.constrainResolution(\n        constrainedResolution, -1, 0);\n    }\n    resolution = constrainedResolution;\n  }\n\n  // calculate center\n  sinAngle = -sinAngle; // go back to original rotation\n  let centerRotX = (minRotX + maxRotX) / 2;\n  let centerRotY = (minRotY + maxRotY) / 2;\n  centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n  centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n  const centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n  const centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n  const center = [centerX, centerY];\n  const callback = options.callback ? options.callback : UNDEFINED;\n\n  if (options.duration !== undefined) {\n    this.animate({\n      resolution: resolution,\n      center: center,\n      duration: options.duration,\n      easing: options.easing\n    }, callback);\n  } else {\n    this.setResolution(resolution);\n    this.setCenter(center);\n    setTimeout(callback.bind(undefined, true), 0);\n  }\n};\n\n\n/**\n * Center on coordinate and view position.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/size~Size} size Box pixel size.\n * @param {module:ol~Pixel} position Position on the view to center on.\n * @api\n */\nView.prototype.centerOn = function(coordinate, size, position) {\n  // calculate rotated position\n  const rotation = this.getRotation();\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  const resolution = this.getResolution();\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  this.setCenter([centerX, centerY]);\n};\n\n\n/**\n * @return {boolean} Is defined.\n */\nView.prototype.isDef = function() {\n  return !!this.getCenter() && this.getResolution() !== undefined;\n};\n\n\n/**\n * Rotate the view around a given coordinate.\n * @param {number} rotation New rotation value for the view.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor The rotation center.\n * @api\n */\nView.prototype.rotate = function(rotation, opt_anchor) {\n  if (opt_anchor !== undefined) {\n    const center = this.calculateCenterRotate(rotation, opt_anchor);\n    this.setCenter(center);\n  }\n  this.setRotation(rotation);\n};\n\n\n/**\n * Set the center of the current view.\n * @param {module:ol/coordinate~Coordinate|undefined} center The center of the view.\n * @observable\n * @api\n */\nView.prototype.setCenter = function(center) {\n  this.set(ViewProperty.CENTER, center);\n  if (this.getAnimating()) {\n    this.cancelAnimations();\n  }\n};\n\n\n/**\n * @param {module:ol/ViewHint} hint Hint.\n * @param {number} delta Delta.\n * @return {number} New value.\n */\nView.prototype.setHint = function(hint, delta) {\n  this.hints_[hint] += delta;\n  this.changed();\n  return this.hints_[hint];\n};\n\n\n/**\n * Set the resolution for this view.\n * @param {number|undefined} resolution The resolution of the view.\n * @observable\n * @api\n */\nView.prototype.setResolution = function(resolution) {\n  this.set(ViewProperty.RESOLUTION, resolution);\n  if (this.getAnimating()) {\n    this.cancelAnimations();\n  }\n};\n\n\n/**\n * Set the rotation for this view.\n * @param {number} rotation The rotation of the view in radians.\n * @observable\n * @api\n */\nView.prototype.setRotation = function(rotation) {\n  this.set(ViewProperty.ROTATION, rotation);\n  if (this.getAnimating()) {\n    this.cancelAnimations();\n  }\n};\n\n\n/**\n * Zoom to a specific zoom level.\n * @param {number} zoom Zoom level.\n * @api\n */\nView.prototype.setZoom = function(zoom) {\n  this.setResolution(this.getResolutionForZoom(zoom));\n};\n\n\n/**\n * @param {module:ol/View~ViewOptions} options View options.\n * @return {module:ol/centerconstraint~Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    return createExtent(options.extent);\n  } else {\n    return centerNone;\n  }\n}\n\n\n/**\n * @param {module:ol/View~ViewOptions} options View options.\n * @return {{constraint: module:ol/resolutionconstraint~Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom = options.minZoom !== undefined ?\n    options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom = options.maxZoom !== undefined ?\n    options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor = options.zoomFactor !== undefined ?\n    options.zoomFactor : defaultZoomFactor;\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution = resolutions[maxZoom] !== undefined ?\n      resolutions[maxZoom] : resolutions[resolutions.length - 1];\n    resolutionConstraint = createSnapToResolutions(\n      resolutions);\n  } else {\n    // calculate the default min and max resolution\n    const projection = createProjection(options.projection, 'EPSG:3857');\n    const extent = projection.getExtent();\n    const size = !extent ?\n      // use an extent that can fit the whole world if need be\n      360 * METERS_PER_UNIT[Units.DEGREES] /\n            projection.getMetersPerUnit() :\n      Math.max(getWidth(extent), getHeight(extent));\n\n    const defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(\n      defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution = defaultMaxResolution / Math.pow(\n      defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom = minZoom + Math.floor(\n      Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    resolutionConstraint = createSnapToPower(\n      zoomFactor, maxResolution, maxZoom - minZoom);\n  }\n  return {constraint: resolutionConstraint, maxResolution: maxResolution,\n    minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor};\n}\n\n\n/**\n * @param {module:ol/View~ViewOptions} options View options.\n * @return {module:ol/rotationconstraint~Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation = options.enableRotation !== undefined ?\n    options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n\n/**\n * Determine if an animation involves no view change.\n * @param {module:ol/View~Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\nexport default View;\n","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number, number): (number|undefined)} Type\n */\n\n\n/**\n * @param {Array.<number>} resolutions Resolutions.\n * @return {module:ol/resolutionconstraint~Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        let z = linearFindNearest(resolutions, resolution, direction);\n        z = clamp(z + delta, 0, resolutions.length - 1);\n        const index = Math.floor(z);\n        if (z != index && index < resolutions.length - 1) {\n          const power = resolutions[index] / resolutions[index + 1];\n          return resolutions[index] / Math.pow(power, z - index);\n        } else {\n          return resolutions[index];\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_maxLevel Maximum level.\n * @return {module:ol/resolutionconstraint~Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_maxLevel) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        const offset = -direction / 2 + 0.5;\n        const oldLevel = Math.floor(\n          Math.log(maxResolution / resolution) / Math.log(power) + offset);\n        let newLevel = Math.max(oldLevel + delta, 0);\n        if (opt_maxLevel !== undefined) {\n          newLevel = Math.min(newLevel, opt_maxLevel);\n        }\n        return maxResolution / Math.pow(power, newLevel);\n      } else {\n        return undefined;\n      }\n    });\n}\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {function(string):number} measure Measure function returning the\n * width of the character passed as 1st argument.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @return {Array.<Array.<*>>} The result array of null if `maxAngle` was\n * exceeded. Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates, offset, end, stride, text, measure, startM, maxAngle) {\n  const result = [];\n\n  // Keep text upright\n  const reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n\n  const numChars = text.length;\n\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  offset += stride;\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let segmentM = 0;\n  let segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n\n  let chunk = '';\n  let chunkLength = 0;\n  let data, index, previousAngle;\n  for (let i = 0; i < numChars; ++i) {\n    index = reverse ? numChars - i - 1 : i;\n    const char = text.charAt(index);\n    chunk = reverse ? char + chunk : chunk + char;\n    const charLength = measure(chunk) - chunkLength;\n    chunkLength += charLength;\n    const charM = startM + charLength / 2;\n    while (offset < end - stride && segmentM + segmentLength < charM) {\n      x1 = x2;\n      y1 = y2;\n      offset += stride;\n      x2 = flatCoordinates[offset];\n      y2 = flatCoordinates[offset + 1];\n      segmentM += segmentLength;\n      segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    }\n    const segmentPos = charM - segmentM;\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -Math.PI : Math.PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    const interpolate = segmentPos / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    if (previousAngle == angle) {\n      if (reverse) {\n        data[0] = x;\n        data[1] = y;\n        data[2] = charLength / 2;\n      }\n      data[4] = chunk;\n    } else {\n      chunk = char;\n      chunkLength = charLength;\n      data = [x, y, charLength / 2, angle, chunk];\n      if (reverse) {\n        result.unshift(data);\n      } else {\n        result.push(data);\n      }\n      previousAngle = angle;\n    }\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12\n};\n\n\n/**\n * @type {Array.<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n\n/**\n * @type {Array.<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n\n/**\n * @type {Array.<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n\n/**\n * @type {Array.<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\n\nexport default Instruction;\n","/**\n * @module ol/render/canvas/Replay\n */\nimport {getUid, inherits} from '../../index.js';\nimport {UNDEFINED} from '../../functions.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {buffer, clone, coordinateRelationship, createEmpty, createOrUpdate,\n  createOrUpdateEmpty, extend, extendCoordinate, intersects} from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray} from '../../geom/flat/inflate.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {isEmpty} from '../../obj.js';\nimport VectorContext from '../VectorContext.js';\nimport {drawImage, resetTransform, defaultPadding, defaultFillStyle, defaultStrokeStyle,\n  defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset,\n  defaultLineDash, defaultLineCap} from '../canvas.js';\nimport CanvasInstruction from '../canvas/Instruction.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  apply as applyTransform,\n  setFromArray as transformSetFromArray\n} from '../../transform.js';\n\n/**\n * @constructor\n * @extends {module:ol/render/VectorContext}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Maximum extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay can have overlapping geometries.\n * @param {?} declutterTree Declutter tree.\n * @struct\n */\nconst CanvasReplay = function(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n  VectorContext.call(this);\n\n  /**\n   * @type {?}\n   */\n  this.declutterTree = declutterTree;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.tolerance = tolerance;\n\n  /**\n   * @protected\n   * @const\n   * @type {module:ol/extent~Extent}\n   */\n  this.maxExtent = maxExtent;\n\n  /**\n   * @protected\n   * @type {boolean}\n   */\n  this.overlaps = overlaps;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.pixelRatio = pixelRatio;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.maxLineWidth = 0;\n\n  /**\n   * @protected\n   * @const\n   * @type {number}\n   */\n  this.resolution = resolution;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.alignFill_;\n\n  /**\n   * @private\n   * @type {Array.<*>}\n   */\n  this.beginGeometryInstruction1_ = null;\n\n  /**\n   * @private\n   * @type {Array.<*>}\n   */\n  this.beginGeometryInstruction2_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.bufferedMaxExtent_ = null;\n\n  /**\n   * @protected\n   * @type {Array.<*>}\n   */\n  this.instructions = [];\n\n  /**\n   * @protected\n   * @type {Array.<number>}\n   */\n  this.coordinates = [];\n\n  /**\n   * @private\n   * @type {!Object.<number,module:ol/coordinate~Coordinate|Array.<module:ol/coordinate~Coordinate>|Array.<Array.<module:ol/coordinate~Coordinate>>>}\n   */\n  this.coordinateCache_ = {};\n\n  /**\n   * @private\n   * @type {!module:ol/transform~Transform}\n   */\n  this.renderedTransform_ = createTransform();\n\n  /**\n   * @protected\n   * @type {Array.<*>}\n   */\n  this.hitDetectionInstructions = [];\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.pixelCoordinates_ = null;\n\n  /**\n   * @protected\n   * @type {module:ol/render/canvas~FillStrokeState}\n   */\n  this.state = /** @type {module:ol/render/canvas~FillStrokeState} */ ({});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.viewRotation_ = 0;\n\n};\n\ninherits(CanvasReplay, VectorContext);\n\n\n/**\n * @type {module:ol/extent~Extent}\n */\nconst tmpExtent = createEmpty();\n\n\n/**\n * @type {!module:ol/transform~Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/coordinate~Coordinate} p1 1st point of the background box.\n * @param {module:ol/coordinate~Coordinate} p2 2nd point of the background box.\n * @param {module:ol/coordinate~Coordinate} p3 3rd point of the background box.\n * @param {module:ol/coordinate~Coordinate} p4 4th point of the background box.\n * @param {Array.<*>} fillInstruction Fill instruction.\n * @param {Array.<*>} strokeInstruction Stroke instruction.\n */\nCanvasReplay.prototype.replayTextBackground_ = function(context, p1, p2, p3, p4,\n  fillInstruction, strokeInstruction) {\n  context.beginPath();\n  context.moveTo.apply(context, p1);\n  context.lineTo.apply(context, p2);\n  context.lineTo.apply(context, p3);\n  context.lineTo.apply(context, p4);\n  context.lineTo.apply(context, p1);\n  if (fillInstruction) {\n    this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n    this.fill_(context);\n  }\n  if (strokeInstruction) {\n    this.setStrokeStyle_(context, /** @type {Array.<*>} */ (strokeInstruction));\n    context.stroke();\n  }\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} anchorX Anchor X.\n * @param {number} anchorY Anchor Y.\n * @param {module:ol/render/canvas~DeclutterGroup} declutterGroup Declutter group.\n * @param {number} height Height.\n * @param {number} opacity Opacity.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} rotation Rotation.\n * @param {number} scale Scale.\n * @param {boolean} snapToPixel Snap to pixel.\n * @param {number} width Width.\n * @param {Array.<number>} padding Padding.\n * @param {Array.<*>} fillInstruction Fill instruction.\n * @param {Array.<*>} strokeInstruction Stroke instruction.\n */\nCanvasReplay.prototype.replayImage_ = function(context, x, y, image,\n  anchorX, anchorY, declutterGroup, height, opacity, originX, originY,\n  rotation, scale, snapToPixel, width, padding, fillInstruction, strokeInstruction) {\n  const fillStroke = fillInstruction || strokeInstruction;\n  anchorX *= scale;\n  anchorY *= scale;\n  x -= anchorX;\n  y -= anchorY;\n\n  const w = (width + originX > image.width) ? image.width - originX : width;\n  const h = (height + originY > image.height) ? image.height - originY : height;\n  const boxW = padding[3] + w * scale + padding[1];\n  const boxH = padding[0] + h * scale + padding[2];\n  const boxX = x - padding[3];\n  const boxY = y - padding[0];\n\n  /** @type {module:ol/coordinate~Coordinate} */\n  let p1;\n  /** @type {module:ol/coordinate~Coordinate} */\n  let p2;\n  /** @type {module:ol/coordinate~Coordinate} */\n  let p3;\n  /** @type {module:ol/coordinate~Coordinate} */\n  let p4;\n  if (fillStroke || rotation !== 0) {\n    p1 = [boxX, boxY];\n    p2 = [boxX + boxW, boxY];\n    p3 = [boxX + boxW, boxY + boxH];\n    p4 = [boxX, boxY + boxH];\n  }\n\n  let transform = null;\n  if (rotation !== 0) {\n    const centerX = x + anchorX;\n    const centerY = y + anchorY;\n    transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n\n    createOrUpdateEmpty(tmpExtent);\n    extendCoordinate(tmpExtent, applyTransform(tmpTransform, p1));\n    extendCoordinate(tmpExtent, applyTransform(tmpTransform, p2));\n    extendCoordinate(tmpExtent, applyTransform(tmpTransform, p3));\n    extendCoordinate(tmpExtent, applyTransform(tmpTransform, p4));\n  } else {\n    createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n  }\n  const canvas = context.canvas;\n  const strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n  const intersects =\n      tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n      tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n\n  if (snapToPixel) {\n    x = Math.round(x);\n    y = Math.round(y);\n  }\n\n  if (declutterGroup) {\n    if (!intersects && declutterGroup[4] == 1) {\n      return;\n    }\n    extend(declutterGroup, tmpExtent);\n    const declutterArgs = intersects ?\n      [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\n      null;\n    if (declutterArgs && fillStroke) {\n      declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n    }\n    declutterGroup.push(declutterArgs);\n  } else if (intersects) {\n    if (fillStroke) {\n      this.replayTextBackground_(context, p1, p2, p3, p4,\n        /** @type {Array.<*>} */ (fillInstruction),\n        /** @type {Array.<*>} */ (strokeInstruction));\n    }\n    drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n  }\n};\n\n\n/**\n * @protected\n * @param {Array.<number>} dashArray Dash array.\n * @return {Array.<number>} Dash array with pixel ratio applied\n */\nCanvasReplay.prototype.applyPixelRatio = function(dashArray) {\n  const pixelRatio = this.pixelRatio;\n  return pixelRatio == 1 ? dashArray : dashArray.map(function(dash) {\n    return dash * pixelRatio;\n  });\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {boolean} closed Last input coordinate equals first.\n * @param {boolean} skipFirst Skip first coordinate.\n * @protected\n * @return {number} My end.\n */\nCanvasReplay.prototype.appendFlatCoordinates = function(flatCoordinates, offset, end, stride, closed, skipFirst) {\n\n  let myEnd = this.coordinates.length;\n  const extent = this.getBufferedMaxExtent();\n  if (skipFirst) {\n    offset += stride;\n  }\n  const lastCoord = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  const nextCoord = [NaN, NaN];\n  let skipped = true;\n\n  let i, lastRel, nextRel;\n  for (i = offset + stride; i < end; i += stride) {\n    nextCoord[0] = flatCoordinates[i];\n    nextCoord[1] = flatCoordinates[i + 1];\n    nextRel = coordinateRelationship(extent, nextCoord);\n    if (nextRel !== lastRel) {\n      if (skipped) {\n        this.coordinates[myEnd++] = lastCoord[0];\n        this.coordinates[myEnd++] = lastCoord[1];\n      }\n      this.coordinates[myEnd++] = nextCoord[0];\n      this.coordinates[myEnd++] = nextCoord[1];\n      skipped = false;\n    } else if (nextRel === Relationship.INTERSECTING) {\n      this.coordinates[myEnd++] = nextCoord[0];\n      this.coordinates[myEnd++] = nextCoord[1];\n      skipped = false;\n    } else {\n      skipped = true;\n    }\n    lastCoord[0] = nextCoord[0];\n    lastCoord[1] = nextCoord[1];\n    lastRel = nextRel;\n  }\n\n  // Last coordinate equals first or only one point to append:\n  if ((closed && skipped) || i === offset + stride) {\n    this.coordinates[myEnd++] = lastCoord[0];\n    this.coordinates[myEnd++] = lastCoord[1];\n  }\n  return myEnd;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array.<number>} replayEnds Replay ends.\n * @return {number} Offset.\n */\nCanvasReplay.prototype.drawCustomCoordinates_ = function(flatCoordinates, offset, ends, stride, replayEnds) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const replayEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n    replayEnds.push(replayEnd);\n    offset = end;\n  }\n  return offset;\n};\n\n\n/**\n * @inheritDoc.\n */\nCanvasReplay.prototype.drawCustom = function(geometry, feature, renderer) {\n  this.beginGeometry(geometry, feature);\n  const type = geometry.getType();\n  const stride = geometry.getStride();\n  const replayBegin = this.coordinates.length;\n  let flatCoordinates, replayEnd, replayEnds, replayEndss;\n  let offset;\n  if (type == GeometryType.MULTI_POLYGON) {\n    geometry = /** @type {module:ol/geom/MultiPolygon} */ (geometry);\n    flatCoordinates = geometry.getOrientedFlatCoordinates();\n    replayEndss = [];\n    const endss = geometry.getEndss();\n    offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const myEnds = [];\n      offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n      replayEndss.push(myEnds);\n    }\n    this.instructions.push([CanvasInstruction.CUSTOM,\n      replayBegin, replayEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n  } else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n    replayEnds = [];\n    flatCoordinates = (type == GeometryType.POLYGON) ?\n      /** @type {module:ol/geom/Polygon} */ (geometry).getOrientedFlatCoordinates() :\n      geometry.getFlatCoordinates();\n    offset = this.drawCustomCoordinates_(flatCoordinates, 0,\n      /** @type {module:ol/geom/Polygon|module:ol/geom/MultiLineString} */ (geometry).getEnds(),\n      stride, replayEnds);\n    this.instructions.push([CanvasInstruction.CUSTOM,\n      replayBegin, replayEnds, geometry, renderer, inflateCoordinatesArray]);\n  } else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n    flatCoordinates = geometry.getFlatCoordinates();\n    replayEnd = this.appendFlatCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n    this.instructions.push([CanvasInstruction.CUSTOM,\n      replayBegin, replayEnd, geometry, renderer, inflateCoordinates]);\n  } else if (type == GeometryType.POINT) {\n    flatCoordinates = geometry.getFlatCoordinates();\n    this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n    replayEnd = this.coordinates.length;\n    this.instructions.push([CanvasInstruction.CUSTOM,\n      replayBegin, replayEnd, geometry, renderer]);\n  }\n  this.endGeometry(geometry, feature);\n};\n\n\n/**\n * @protected\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nCanvasReplay.prototype.beginGeometry = function(geometry, feature) {\n  this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n  this.instructions.push(this.beginGeometryInstruction1_);\n  this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n  this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n};\n\n\n/**\n * @private\n * @param {CanvasRenderingContext2D} context Context.\n */\nCanvasReplay.prototype.fill_ = function(context) {\n  if (this.alignFill_) {\n    const origin = applyTransform(this.renderedTransform_, [0, 0]);\n    const repeatSize = 512 * this.pixelRatio;\n    context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n    context.rotate(this.viewRotation_);\n  }\n  context.fill();\n  if (this.alignFill_) {\n    context.setTransform.apply(context, resetTransform);\n  }\n};\n\n\n/**\n * @private\n * @param {CanvasRenderingContext2D} context Context.\n * @param {Array.<*>} instruction Instruction.\n */\nCanvasReplay.prototype.setStrokeStyle_ = function(context, instruction) {\n  context.strokeStyle = /** @type {module:ol/colorlike~ColorLike} */ (instruction[1]);\n  context.lineWidth = /** @type {number} */ (instruction[2]);\n  context.lineCap = /** @type {string} */ (instruction[3]);\n  context.lineJoin = /** @type {string} */ (instruction[4]);\n  context.miterLimit = /** @type {number} */ (instruction[5]);\n  if (CANVAS_LINE_DASH) {\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array.<number>} */ (instruction[6]));\n  }\n};\n\n\n/**\n * @param {module:ol/render/canvas~DeclutterGroup} declutterGroup Declutter group.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nCanvasReplay.prototype.renderDeclutter_ = function(declutterGroup, feature) {\n  if (declutterGroup && declutterGroup.length > 5) {\n    const groupCount = declutterGroup[4];\n    if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n      /** @type {module:ol/structs/RBush~Entry} */\n      const box = {\n        minX: /** @type {number} */ (declutterGroup[0]),\n        minY: /** @type {number} */ (declutterGroup[1]),\n        maxX: /** @type {number} */ (declutterGroup[2]),\n        maxY: /** @type {number} */ (declutterGroup[3]),\n        value: feature\n      };\n      if (!this.declutterTree.collides(box)) {\n        this.declutterTree.insert(box);\n        for (let j = 5, jj = declutterGroup.length; j < jj; ++j) {\n          const declutterData = /** @type {Array} */ (declutterGroup[j]);\n          if (declutterData) {\n            if (declutterData.length > 11) {\n              this.replayTextBackground_(declutterData[0],\n                declutterData[13], declutterData[14], declutterData[15], declutterData[16],\n                declutterData[11], declutterData[12]);\n            }\n            drawImage.apply(undefined, declutterData);\n          }\n        }\n      }\n      declutterGroup.length = 5;\n      createOrUpdateEmpty(declutterGroup);\n    }\n  }\n};\n\n\n/**\n * @private\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *     to skip.\n * @param {Array.<*>} instructions Instructions array.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined}\n *     featureCallback Feature callback.\n * @param {module:ol/extent~Extent=} opt_hitExtent Only check features that intersect this\n *     extent.\n * @return {T|undefined} Callback result.\n * @template T\n */\nCanvasReplay.prototype.replay_ = function(\n  context, transform, skippedFeaturesHash,\n  instructions, featureCallback, opt_hitExtent) {\n  /** @type {Array.<number>} */\n  let pixelCoordinates;\n  if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n    pixelCoordinates = this.pixelCoordinates_;\n  } else {\n    if (!this.pixelCoordinates_) {\n      this.pixelCoordinates_ = [];\n    }\n    pixelCoordinates = transform2D(\n      this.coordinates, 0, this.coordinates.length, 2,\n      transform, this.pixelCoordinates_);\n    transformSetFromArray(this.renderedTransform_, transform);\n  }\n  const skipFeatures = !isEmpty(skippedFeaturesHash);\n  let i = 0; // instruction index\n  const ii = instructions.length; // end of instructions\n  let d = 0; // data index\n  let dd; // end of per-instruction data\n  let anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image;\n  let pendingFill = 0;\n  let pendingStroke = 0;\n  let lastFillInstruction = null;\n  let lastStrokeInstruction = null;\n  const coordinateCache = this.coordinateCache_;\n  const viewRotation = this.viewRotation_;\n\n  const state = /** @type {module:ol/render~State} */ ({\n    context: context,\n    pixelRatio: this.pixelRatio,\n    resolution: this.resolution,\n    rotation: viewRotation\n  });\n\n  // When the batch size gets too big, performance decreases. 200 is a good\n  // balance between batch size and number of fill/stroke instructions.\n  const batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n  let /** @type {module:ol/Feature|module:ol/render/Feature} */ feature;\n  let x, y;\n  while (i < ii) {\n    const instruction = instructions[i];\n    const type = /** @type {module:ol/render/canvas/Instruction} */ (instruction[0]);\n    switch (type) {\n      case CanvasInstruction.BEGIN_GEOMETRY:\n        feature = /** @type {module:ol/Feature|module:ol/render/Feature} */ (instruction[1]);\n        if ((skipFeatures &&\n            skippedFeaturesHash[getUid(feature).toString()]) ||\n            !feature.getGeometry()) {\n          i = /** @type {number} */ (instruction[2]);\n        } else if (opt_hitExtent !== undefined && !intersects(\n          opt_hitExtent, feature.getGeometry().getExtent())) {\n          i = /** @type {number} */ (instruction[2]) + 1;\n        } else {\n          ++i;\n        }\n        break;\n      case CanvasInstruction.BEGIN_PATH:\n        if (pendingFill > batchSize) {\n          this.fill_(context);\n          pendingFill = 0;\n        }\n        if (pendingStroke > batchSize) {\n          context.stroke();\n          pendingStroke = 0;\n        }\n        if (!pendingFill && !pendingStroke) {\n          context.beginPath();\n          prevX = prevY = NaN;\n        }\n        ++i;\n        break;\n      case CanvasInstruction.CIRCLE:\n        d = /** @type {number} */ (instruction[1]);\n        const x1 = pixelCoordinates[d];\n        const y1 = pixelCoordinates[d + 1];\n        const x2 = pixelCoordinates[d + 2];\n        const y2 = pixelCoordinates[d + 3];\n        const dx = x2 - x1;\n        const dy = y2 - y1;\n        const r = Math.sqrt(dx * dx + dy * dy);\n        context.moveTo(x1 + r, y1);\n        context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n        ++i;\n        break;\n      case CanvasInstruction.CLOSE_PATH:\n        context.closePath();\n        ++i;\n        break;\n      case CanvasInstruction.CUSTOM:\n        d = /** @type {number} */ (instruction[1]);\n        dd = instruction[2];\n        const geometry = /** @type {module:ol/geom/SimpleGeometry} */ (instruction[3]);\n        const renderer = instruction[4];\n        const fn = instruction.length == 6 ? instruction[5] : undefined;\n        state.geometry = geometry;\n        state.feature = feature;\n        if (!(i in coordinateCache)) {\n          coordinateCache[i] = [];\n        }\n        const coords = coordinateCache[i];\n        if (fn) {\n          fn(pixelCoordinates, d, dd, 2, coords);\n        } else {\n          coords[0] = pixelCoordinates[d];\n          coords[1] = pixelCoordinates[d + 1];\n          coords.length = 2;\n        }\n        renderer(coords, state);\n        ++i;\n        break;\n      case CanvasInstruction.DRAW_IMAGE:\n        d = /** @type {number} */ (instruction[1]);\n        dd = /** @type {number} */ (instruction[2]);\n        image =  /** @type {HTMLCanvasElement|HTMLVideoElement|Image} */\n            (instruction[3]);\n        // Remaining arguments in DRAW_IMAGE are in alphabetical order\n        anchorX = /** @type {number} */ (instruction[4]);\n        anchorY = /** @type {number} */ (instruction[5]);\n        declutterGroup = featureCallback ? null : /** @type {module:ol/render/canvas~DeclutterGroup} */ (instruction[6]);\n        const height = /** @type {number} */ (instruction[7]);\n        const opacity = /** @type {number} */ (instruction[8]);\n        const originX = /** @type {number} */ (instruction[9]);\n        const originY = /** @type {number} */ (instruction[10]);\n        const rotateWithView = /** @type {boolean} */ (instruction[11]);\n        let rotation = /** @type {number} */ (instruction[12]);\n        const scale = /** @type {number} */ (instruction[13]);\n        const snapToPixel = /** @type {boolean} */ (instruction[14]);\n        const width = /** @type {number} */ (instruction[15]);\n\n        let padding, backgroundFill, backgroundStroke;\n        if (instruction.length > 16) {\n          padding = /** @type {Array.<number>} */ (instruction[16]);\n          backgroundFill = /** @type {boolean} */ (instruction[17]);\n          backgroundStroke = /** @type {boolean} */ (instruction[18]);\n        } else {\n          padding = defaultPadding;\n          backgroundFill = backgroundStroke = false;\n        }\n\n        if (rotateWithView) {\n          rotation += viewRotation;\n        }\n        for (; d < dd; d += 2) {\n          this.replayImage_(context,\n            pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY,\n            declutterGroup, height, opacity, originX, originY, rotation, scale,\n            snapToPixel, width, padding,\n            backgroundFill ? /** @type {Array.<*>} */ (lastFillInstruction) : null,\n            backgroundStroke ? /** @type {Array.<*>} */ (lastStrokeInstruction) : null);\n        }\n        this.renderDeclutter_(declutterGroup, feature);\n        ++i;\n        break;\n      case CanvasInstruction.DRAW_CHARS:\n        const begin = /** @type {number} */ (instruction[1]);\n        const end = /** @type {number} */ (instruction[2]);\n        const baseline = /** @type {number} */ (instruction[3]);\n        declutterGroup = featureCallback ? null : /** @type {module:ol/render/canvas~DeclutterGroup} */ (instruction[4]);\n        const overflow = /** @type {number} */ (instruction[5]);\n        const fillKey = /** @type {string} */ (instruction[6]);\n        const maxAngle = /** @type {number} */ (instruction[7]);\n        const measure = /** @type {function(string):number} */ (instruction[8]);\n        const offsetY = /** @type {number} */ (instruction[9]);\n        const strokeKey = /** @type {string} */ (instruction[10]);\n        const strokeWidth =  /** @type {number} */ (instruction[11]);\n        const text = /** @type {string} */ (instruction[12]);\n        const textKey = /** @type {string} */ (instruction[13]);\n        const textScale = /** @type {number} */ (instruction[14]);\n\n        const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n        const textLength = measure(text);\n        if (overflow || textLength <= pathLength) {\n          const textAlign = /** @type {module:ol~render} */ (this).textStates[textKey].textAlign;\n          const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n          const parts = drawTextOnPath(\n            pixelCoordinates, begin, end, 2, text, measure, startM, maxAngle);\n          if (parts) {\n            let c, cc, chars, label, part;\n            if (strokeKey) {\n              for (c = 0, cc = parts.length; c < cc; ++c) {\n                part = parts[c]; // x, y, anchorX, rotation, chunk\n                chars = /** @type {string} */ (part[4]);\n                label = /** @type {module:ol~render} */ (this).getImage(chars, textKey, '', strokeKey);\n                anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                this.replayImage_(context,\n                  /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                  anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                  /** @type {number} */ (part[3]), textScale, false, label.width,\n                  defaultPadding, null, null);\n              }\n            }\n            if (fillKey) {\n              for (c = 0, cc = parts.length; c < cc; ++c) {\n                part = parts[c]; // x, y, anchorX, rotation, chunk\n                chars = /** @type {string} */ (part[4]);\n                label = /** @type {module:ol~render} */ (this).getImage(chars, textKey, fillKey, '');\n                anchorX = /** @type {number} */ (part[2]);\n                anchorY = baseline * label.height - offsetY;\n                this.replayImage_(context,\n                  /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                  anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                  /** @type {number} */ (part[3]), textScale, false, label.width,\n                  defaultPadding, null, null);\n              }\n            }\n          }\n        }\n        this.renderDeclutter_(declutterGroup, feature);\n        ++i;\n        break;\n      case CanvasInstruction.END_GEOMETRY:\n        if (featureCallback !== undefined) {\n          feature = /** @type {module:ol/Feature|module:ol/render/Feature} */ (instruction[1]);\n          const result = featureCallback(feature);\n          if (result) {\n            return result;\n          }\n        }\n        ++i;\n        break;\n      case CanvasInstruction.FILL:\n        if (batchSize) {\n          pendingFill++;\n        } else {\n          this.fill_(context);\n        }\n        ++i;\n        break;\n      case CanvasInstruction.MOVE_TO_LINE_TO:\n        d = /** @type {number} */ (instruction[1]);\n        dd = /** @type {number} */ (instruction[2]);\n        x = pixelCoordinates[d];\n        y = pixelCoordinates[d + 1];\n        roundX = (x + 0.5) | 0;\n        roundY = (y + 0.5) | 0;\n        if (roundX !== prevX || roundY !== prevY) {\n          context.moveTo(x, y);\n          prevX = roundX;\n          prevY = roundY;\n        }\n        for (d += 2; d < dd; d += 2) {\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n            context.lineTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n        }\n        ++i;\n        break;\n      case CanvasInstruction.SET_FILL_STYLE:\n        lastFillInstruction = instruction;\n        this.alignFill_ = instruction[2];\n\n        if (pendingFill) {\n          this.fill_(context);\n          pendingFill = 0;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n        }\n\n        context.fillStyle = /** @type {module:ol/colorlike~ColorLike} */ (instruction[1]);\n        ++i;\n        break;\n      case CanvasInstruction.SET_STROKE_STYLE:\n        lastStrokeInstruction = instruction;\n        if (pendingStroke) {\n          context.stroke();\n          pendingStroke = 0;\n        }\n        this.setStrokeStyle_(context, /** @type {Array.<*>} */ (instruction));\n        ++i;\n        break;\n      case CanvasInstruction.STROKE:\n        if (batchSize) {\n          pendingStroke++;\n        } else {\n          context.stroke();\n        }\n        ++i;\n        break;\n      default:\n        ++i; // consume the instruction anyway, to avoid an infinite loop\n        break;\n    }\n  }\n  if (pendingFill) {\n    this.fill_(context);\n  }\n  if (pendingStroke) {\n    context.stroke();\n  }\n  return undefined;\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {number} viewRotation View rotation.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *     to skip.\n */\nCanvasReplay.prototype.replay = function(\n  context, transform, viewRotation, skippedFeaturesHash) {\n  this.viewRotation_ = viewRotation;\n  this.replay_(context, transform,\n    skippedFeaturesHash, this.instructions, undefined, undefined);\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {number} viewRotation View rotation.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *     to skip.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T=} opt_featureCallback\n *     Feature callback.\n * @param {module:ol/extent~Extent=} opt_hitExtent Only check features that intersect this\n *     extent.\n * @return {T|undefined} Callback result.\n * @template T\n */\nCanvasReplay.prototype.replayHitDetection = function(\n  context, transform, viewRotation, skippedFeaturesHash,\n  opt_featureCallback, opt_hitExtent) {\n  this.viewRotation_ = viewRotation;\n  return this.replay_(context, transform, skippedFeaturesHash,\n    this.hitDetectionInstructions, opt_featureCallback, opt_hitExtent);\n};\n\n\n/**\n * Reverse the hit detection instructions.\n */\nCanvasReplay.prototype.reverseHitDetectionInstructions = function() {\n  const hitDetectionInstructions = this.hitDetectionInstructions;\n  // step 1 - reverse array\n  hitDetectionInstructions.reverse();\n  // step 2 - reverse instructions within geometry blocks\n  let i;\n  const n = hitDetectionInstructions.length;\n  let instruction;\n  let type;\n  let begin = -1;\n  for (i = 0; i < n; ++i) {\n    instruction = hitDetectionInstructions[i];\n    type = /** @type {module:ol/render/canvas/Instruction} */ (instruction[0]);\n    if (type == CanvasInstruction.END_GEOMETRY) {\n      begin = i;\n    } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n      instruction[2] = i;\n      reverseSubArray(this.hitDetectionInstructions, begin, i);\n      begin = -1;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasReplay.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {\n  const state = this.state;\n  if (fillStyle) {\n    const fillStyleColor = fillStyle.getColor();\n    state.fillStyle = asColorLike(fillStyleColor ?\n      fillStyleColor : defaultFillStyle);\n  } else {\n    state.fillStyle = undefined;\n  }\n  if (strokeStyle) {\n    const strokeStyleColor = strokeStyle.getColor();\n    state.strokeStyle = asColorLike(strokeStyleColor ?\n      strokeStyleColor : defaultStrokeStyle);\n    const strokeStyleLineCap = strokeStyle.getLineCap();\n    state.lineCap = strokeStyleLineCap !== undefined ?\n      strokeStyleLineCap : defaultLineCap;\n    const strokeStyleLineDash = strokeStyle.getLineDash();\n    state.lineDash = strokeStyleLineDash ?\n      strokeStyleLineDash.slice() : defaultLineDash;\n    const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n    state.lineDashOffset = strokeStyleLineDashOffset ?\n      strokeStyleLineDashOffset : defaultLineDashOffset;\n    const strokeStyleLineJoin = strokeStyle.getLineJoin();\n    state.lineJoin = strokeStyleLineJoin !== undefined ?\n      strokeStyleLineJoin : defaultLineJoin;\n    const strokeStyleWidth = strokeStyle.getWidth();\n    state.lineWidth = strokeStyleWidth !== undefined ?\n      strokeStyleWidth : defaultLineWidth;\n    const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n    state.miterLimit = strokeStyleMiterLimit !== undefined ?\n      strokeStyleMiterLimit : defaultMiterLimit;\n\n    if (state.lineWidth > this.maxLineWidth) {\n      this.maxLineWidth = state.lineWidth;\n      // invalidate the buffered max extent cache\n      this.bufferedMaxExtent_ = null;\n    }\n  } else {\n    state.strokeStyle = undefined;\n    state.lineCap = undefined;\n    state.lineDash = null;\n    state.lineDashOffset = undefined;\n    state.lineJoin = undefined;\n    state.lineWidth = undefined;\n    state.miterLimit = undefined;\n  }\n};\n\n\n/**\n * @param {module:ol/render/canvas~FillStrokeState} state State.\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n * @return {Array.<*>} Fill instruction.\n */\nCanvasReplay.prototype.createFill = function(state, geometry) {\n  const fillStyle = state.fillStyle;\n  const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n  if (typeof fillStyle !== 'string') {\n    // Fill is a pattern or gradient - align it!\n    fillInstruction.push(true);\n  }\n  return fillInstruction;\n};\n\n\n/**\n * @param {module:ol/render/canvas~FillStrokeState} state State.\n */\nCanvasReplay.prototype.applyStroke = function(state) {\n  this.instructions.push(this.createStroke(state));\n};\n\n\n/**\n * @param {module:ol/render/canvas~FillStrokeState} state State.\n * @return {Array.<*>} Stroke instruction.\n */\nCanvasReplay.prototype.createStroke = function(state) {\n  return [\n    CanvasInstruction.SET_STROKE_STYLE,\n    state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n    state.lineJoin, state.miterLimit,\n    this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n  ];\n};\n\n\n/**\n * @param {module:ol/render/canvas~FillStrokeState} state State.\n * @param {function(this:module:ol/render/canvas/Replay, module:ol/render/canvas~FillStrokeState, (module:ol/geom/Geometry|module:ol/render/Feature)):Array.<*>} createFill Create fill.\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n */\nCanvasReplay.prototype.updateFillStyle = function(state, createFill, geometry) {\n  const fillStyle = state.fillStyle;\n  if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n    if (fillStyle !== undefined) {\n      this.instructions.push(createFill.call(this, state, geometry));\n    }\n    state.currentFillStyle = fillStyle;\n  }\n};\n\n\n/**\n * @param {module:ol/render/canvas~FillStrokeState} state State.\n * @param {function(this:module:ol/render/canvas/Replay, module:ol/render/canvas~FillStrokeState)} applyStroke Apply stroke.\n */\nCanvasReplay.prototype.updateStrokeStyle = function(state, applyStroke) {\n  const strokeStyle = state.strokeStyle;\n  const lineCap = state.lineCap;\n  const lineDash = state.lineDash;\n  const lineDashOffset = state.lineDashOffset;\n  const lineJoin = state.lineJoin;\n  const lineWidth = state.lineWidth;\n  const miterLimit = state.miterLimit;\n  if (state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit) {\n    if (strokeStyle !== undefined) {\n      applyStroke.call(this, state);\n    }\n    state.currentStrokeStyle = strokeStyle;\n    state.currentLineCap = lineCap;\n    state.currentLineDash = lineDash;\n    state.currentLineDashOffset = lineDashOffset;\n    state.currentLineJoin = lineJoin;\n    state.currentLineWidth = lineWidth;\n    state.currentMiterLimit = miterLimit;\n  }\n};\n\n\n/**\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nCanvasReplay.prototype.endGeometry = function(geometry, feature) {\n  this.beginGeometryInstruction1_[2] = this.instructions.length;\n  this.beginGeometryInstruction1_ = null;\n  this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n  this.beginGeometryInstruction2_ = null;\n  const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n  this.instructions.push(endGeometryInstruction);\n  this.hitDetectionInstructions.push(endGeometryInstruction);\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nCanvasReplay.prototype.finish = UNDEFINED;\n\n\n/**\n * Get the buffered rendering extent.  Rendering will be clipped to the extent\n * provided to the constructor.  To account for symbolizers that may intersect\n * this extent, we calculate a buffered extent (e.g. based on stroke width).\n * @return {module:ol/extent~Extent} The buffered rendering extent.\n * @protected\n */\nCanvasReplay.prototype.getBufferedMaxExtent = function() {\n  if (!this.bufferedMaxExtent_) {\n    this.bufferedMaxExtent_ = clone(this.maxExtent);\n    if (this.maxLineWidth > 0) {\n      const width = this.resolution * (this.maxLineWidth + 1) / 2;\n      buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n    }\n  }\n  return this.bufferedMaxExtent_;\n};\nexport default CanvasReplay;\n","/**\n * @module ol/render/canvas/ImageReplay\n */\nimport {inherits} from '../../index.js';\nimport CanvasInstruction from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\n\n/**\n * @constructor\n * @extends {module:ol/render/canvas/Replay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Maximum extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay can have overlapping geometries.\n * @param {?} declutterTree Declutter tree.\n * @struct\n */\nconst CanvasImageReplay = function(\n  tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n  CanvasReplay.call(this,\n    tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n  /**\n   * @private\n   * @type {module:ol/render/canvas~DeclutterGroup}\n   */\n  this.declutterGroup_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|HTMLVideoElement|Image}\n   */\n  this.hitDetectionImage_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|HTMLVideoElement|Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.anchorX_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.anchorY_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.height_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.opacity_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.originX_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.originY_ = undefined;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = undefined;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.snapToPixel_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.width_ = undefined;\n\n};\n\ninherits(CanvasImageReplay, CanvasReplay);\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @private\n * @return {number} My end.\n */\nCanvasImageReplay.prototype.drawCoordinates_ = function(flatCoordinates, offset, end, stride) {\n  return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageReplay.prototype.drawPoint = function(pointGeometry, feature) {\n  if (!this.image_) {\n    return;\n  }\n  this.beginGeometry(pointGeometry, feature);\n  const flatCoordinates = pointGeometry.getFlatCoordinates();\n  const stride = pointGeometry.getStride();\n  const myBegin = this.coordinates.length;\n  const myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n  this.instructions.push([\n    CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n    // Remaining arguments to DRAW_IMAGE are in alphabetical order\n    this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n    this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n    this.scale_ * this.pixelRatio, this.snapToPixel_, this.width_\n  ]);\n  this.hitDetectionInstructions.push([\n    CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n    // Remaining arguments to DRAW_IMAGE are in alphabetical order\n    this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n    this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n    this.scale_, this.snapToPixel_, this.width_\n  ]);\n  this.endGeometry(pointGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageReplay.prototype.drawMultiPoint = function(multiPointGeometry, feature) {\n  if (!this.image_) {\n    return;\n  }\n  this.beginGeometry(multiPointGeometry, feature);\n  const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n  const stride = multiPointGeometry.getStride();\n  const myBegin = this.coordinates.length;\n  const myEnd = this.drawCoordinates_(\n    flatCoordinates, 0, flatCoordinates.length, stride);\n  this.instructions.push([\n    CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n    // Remaining arguments to DRAW_IMAGE are in alphabetical order\n    this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n    this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n    this.scale_ * this.pixelRatio, this.snapToPixel_, this.width_\n  ]);\n  this.hitDetectionInstructions.push([\n    CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n    // Remaining arguments to DRAW_IMAGE are in alphabetical order\n    this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n    this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n    this.scale_, this.snapToPixel_, this.width_\n  ]);\n  this.endGeometry(multiPointGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageReplay.prototype.finish = function() {\n  this.reverseHitDetectionInstructions();\n  // FIXME this doesn't really protect us against further calls to draw*Geometry\n  this.anchorX_ = undefined;\n  this.anchorY_ = undefined;\n  this.hitDetectionImage_ = null;\n  this.image_ = null;\n  this.height_ = undefined;\n  this.scale_ = undefined;\n  this.opacity_ = undefined;\n  this.originX_ = undefined;\n  this.originY_ = undefined;\n  this.rotateWithView_ = undefined;\n  this.rotation_ = undefined;\n  this.snapToPixel_ = undefined;\n  this.width_ = undefined;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageReplay.prototype.setImageStyle = function(imageStyle, declutterGroup) {\n  const anchor = imageStyle.getAnchor();\n  const size = imageStyle.getSize();\n  const hitDetectionImage = imageStyle.getHitDetectionImage(1);\n  const image = imageStyle.getImage(1);\n  const origin = imageStyle.getOrigin();\n  this.anchorX_ = anchor[0];\n  this.anchorY_ = anchor[1];\n  this.declutterGroup_ = /** @type {module:ol/render/canvas~DeclutterGroup} */ (declutterGroup);\n  this.hitDetectionImage_ = hitDetectionImage;\n  this.image_ = image;\n  this.height_ = size[1];\n  this.opacity_ = imageStyle.getOpacity();\n  this.originX_ = origin[0];\n  this.originY_ = origin[1];\n  this.rotateWithView_ = imageStyle.getRotateWithView();\n  this.rotation_ = imageStyle.getRotation();\n  this.scale_ = imageStyle.getScale();\n  this.snapToPixel_ = imageStyle.getSnapToPixel();\n  this.width_ = size[0];\n};\nexport default CanvasImageReplay;\n","/**\n * @module ol/render/canvas/LineStringReplay\n */\nimport {inherits} from '../../index.js';\nimport CanvasInstruction, {strokeInstruction, beginPathInstruction} from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\n\n/**\n * @constructor\n * @extends {module:ol/render/canvas/Replay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Maximum extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay can have overlapping geometries.\n * @param {?} declutterTree Declutter tree.\n * @struct\n */\nconst CanvasLineStringReplay = function(\n  tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n  CanvasReplay.call(this,\n    tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n};\n\ninherits(CanvasLineStringReplay, CanvasReplay);\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @private\n * @return {number} end.\n */\nCanvasLineStringReplay.prototype.drawFlatCoordinates_ = function(flatCoordinates, offset, end, stride) {\n  const myBegin = this.coordinates.length;\n  const myEnd = this.appendFlatCoordinates(\n    flatCoordinates, offset, end, stride, false, false);\n  const moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n  this.instructions.push(moveToLineToInstruction);\n  this.hitDetectionInstructions.push(moveToLineToInstruction);\n  return end;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasLineStringReplay.prototype.drawLineString = function(lineStringGeometry, feature) {\n  const state = this.state;\n  const strokeStyle = state.strokeStyle;\n  const lineWidth = state.lineWidth;\n  if (strokeStyle === undefined || lineWidth === undefined) {\n    return;\n  }\n  this.updateStrokeStyle(state, this.applyStroke);\n  this.beginGeometry(lineStringGeometry, feature);\n  this.hitDetectionInstructions.push([\n    CanvasInstruction.SET_STROKE_STYLE,\n    state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n    state.miterLimit, state.lineDash, state.lineDashOffset\n  ], beginPathInstruction);\n  const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n  const stride = lineStringGeometry.getStride();\n  this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n  this.hitDetectionInstructions.push(strokeInstruction);\n  this.endGeometry(lineStringGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasLineStringReplay.prototype.drawMultiLineString = function(multiLineStringGeometry, feature) {\n  const state = this.state;\n  const strokeStyle = state.strokeStyle;\n  const lineWidth = state.lineWidth;\n  if (strokeStyle === undefined || lineWidth === undefined) {\n    return;\n  }\n  this.updateStrokeStyle(state, this.applyStroke);\n  this.beginGeometry(multiLineStringGeometry, feature);\n  this.hitDetectionInstructions.push([\n    CanvasInstruction.SET_STROKE_STYLE,\n    state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n    state.miterLimit, state.lineDash, state.lineDashOffset\n  ], beginPathInstruction);\n  const ends = multiLineStringGeometry.getEnds();\n  const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n  const stride = multiLineStringGeometry.getStride();\n  let offset = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n  }\n  this.hitDetectionInstructions.push(strokeInstruction);\n  this.endGeometry(multiLineStringGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasLineStringReplay.prototype.finish = function() {\n  const state = this.state;\n  if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n    this.instructions.push(strokeInstruction);\n  }\n  this.reverseHitDetectionInstructions();\n  this.state = null;\n};\n\n\n/**\n * @inheritDoc.\n */\nCanvasLineStringReplay.prototype.applyStroke = function(state) {\n  if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n    this.instructions.push(strokeInstruction);\n    state.lastStroke = this.coordinates.length;\n  }\n  state.lastStroke = 0;\n  CanvasReplay.prototype.applyStroke.call(this, state);\n  this.instructions.push(beginPathInstruction);\n};\nexport default CanvasLineStringReplay;\n","/**\n * @module ol/render/canvas/PolygonReplay\n */\nimport {inherits} from '../../index.js';\nimport {asString} from '../../color.js';\nimport {snap} from '../../geom/flat/simplify.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport CanvasInstruction, {\n  fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction\n} from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\n\n\n/**\n * @constructor\n * @extends {module:ol/render/canvas/Replay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Maximum extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay can have overlapping geometries.\n * @param {?} declutterTree Declutter tree.\n * @struct\n */\nconst CanvasPolygonReplay = function(\n  tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n  CanvasReplay.call(this,\n    tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n};\n\ninherits(CanvasPolygonReplay, CanvasReplay);\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @private\n * @return {number} End.\n */\nCanvasPolygonReplay.prototype.drawFlatCoordinatess_ = function(flatCoordinates, offset, ends, stride) {\n  const state = this.state;\n  const fill = state.fillStyle !== undefined;\n  const stroke = state.strokeStyle != undefined;\n  const numEnds = ends.length;\n  this.instructions.push(beginPathInstruction);\n  this.hitDetectionInstructions.push(beginPathInstruction);\n  for (let i = 0; i < numEnds; ++i) {\n    const end = ends[i];\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n    const moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    if (stroke) {\n      // Performance optimization: only call closePath() when we have a stroke.\n      // Otherwise the ring is closed already (see appendFlatCoordinates above).\n      this.instructions.push(closePathInstruction);\n      this.hitDetectionInstructions.push(closePathInstruction);\n    }\n    offset = end;\n  }\n  this.hitDetectionInstructions.push(fillInstruction);\n  if (fill) {\n    this.instructions.push(fillInstruction);\n  }\n  if (stroke) {\n    this.instructions.push(strokeInstruction);\n    this.hitDetectionInstructions.push(strokeInstruction);\n  }\n  return offset;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasPolygonReplay.prototype.drawCircle = function(circleGeometry, feature) {\n  const state = this.state;\n  const fillStyle = state.fillStyle;\n  const strokeStyle = state.strokeStyle;\n  if (fillStyle === undefined && strokeStyle === undefined) {\n    return;\n  }\n  this.setFillStrokeStyles_(circleGeometry);\n  this.beginGeometry(circleGeometry, feature);\n  // always fill the circle for hit detection\n  this.hitDetectionInstructions.push([\n    CanvasInstruction.SET_FILL_STYLE,\n    asString(defaultFillStyle)\n  ]);\n  if (state.strokeStyle !== undefined) {\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ]);\n  }\n  const flatCoordinates = circleGeometry.getFlatCoordinates();\n  const stride = circleGeometry.getStride();\n  const myBegin = this.coordinates.length;\n  this.appendFlatCoordinates(\n    flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n  const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n  this.instructions.push(beginPathInstruction, circleInstruction);\n  this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n  this.hitDetectionInstructions.push(fillInstruction);\n  if (state.fillStyle !== undefined) {\n    this.instructions.push(fillInstruction);\n  }\n  if (state.strokeStyle !== undefined) {\n    this.instructions.push(strokeInstruction);\n    this.hitDetectionInstructions.push(strokeInstruction);\n  }\n  this.endGeometry(circleGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasPolygonReplay.prototype.drawPolygon = function(polygonGeometry, feature) {\n  const state = this.state;\n  this.setFillStrokeStyles_(polygonGeometry);\n  this.beginGeometry(polygonGeometry, feature);\n  // always fill the polygon for hit detection\n  this.hitDetectionInstructions.push([\n    CanvasInstruction.SET_FILL_STYLE,\n    asString(defaultFillStyle)]\n  );\n  if (state.strokeStyle !== undefined) {\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ]);\n  }\n  const ends = polygonGeometry.getEnds();\n  const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n  const stride = polygonGeometry.getStride();\n  this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n  this.endGeometry(polygonGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasPolygonReplay.prototype.drawMultiPolygon = function(multiPolygonGeometry, feature) {\n  const state = this.state;\n  const fillStyle = state.fillStyle;\n  const strokeStyle = state.strokeStyle;\n  if (fillStyle === undefined && strokeStyle === undefined) {\n    return;\n  }\n  this.setFillStrokeStyles_(multiPolygonGeometry);\n  this.beginGeometry(multiPolygonGeometry, feature);\n  // always fill the multi-polygon for hit detection\n  this.hitDetectionInstructions.push([\n    CanvasInstruction.SET_FILL_STYLE,\n    asString(defaultFillStyle)\n  ]);\n  if (state.strokeStyle !== undefined) {\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ]);\n  }\n  const endss = multiPolygonGeometry.getEndss();\n  const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n  const stride = multiPolygonGeometry.getStride();\n  let offset = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n  }\n  this.endGeometry(multiPolygonGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasPolygonReplay.prototype.finish = function() {\n  this.reverseHitDetectionInstructions();\n  this.state = null;\n  // We want to preserve topology when drawing polygons.  Polygons are\n  // simplified using quantization and point elimination. However, we might\n  // have received a mix of quantized and non-quantized geometries, so ensure\n  // that all are quantized by quantizing all coordinates in the batch.\n  const tolerance = this.tolerance;\n  if (tolerance !== 0) {\n    const coordinates = this.coordinates;\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      coordinates[i] = snap(coordinates[i], tolerance);\n    }\n  }\n};\n\n\n/**\n * @private\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n */\nCanvasPolygonReplay.prototype.setFillStrokeStyles_ = function(geometry) {\n  const state = this.state;\n  const fillStyle = state.fillStyle;\n  if (fillStyle !== undefined) {\n    this.updateFillStyle(state, this.createFill, geometry);\n  }\n  if (state.strokeStyle !== undefined) {\n    this.updateStrokeStyle(state, this.applyStroke);\n  }\n};\nexport default CanvasPolygonReplay;\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array.<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextReplay\n */\nimport {getUid, inherits} from '../../index.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {labelCache, measureTextWidth, defaultTextAlign, measureTextHeight, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline} from '../canvas.js';\nimport CanvasInstruction from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n\n/**\n * @constructor\n * @extends {module:ol/render/canvas/Replay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Maximum extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay can have overlapping geometries.\n * @param {?} declutterTree Declutter tree.\n * @struct\n */\nconst CanvasTextReplay = function(\n  tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n  CanvasReplay.call(this,\n    tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n  /**\n   * @private\n   * @type {module:ol/render/canvas~DeclutterGroup}\n   */\n  this.declutterGroup_;\n\n  /**\n   * @private\n   * @type {Array.<HTMLCanvasElement>}\n   */\n  this.labels_ = null;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.text_ = '';\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textOffsetX_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textOffsetY_ = 0;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.textRotateWithView_ = undefined;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textRotation_ = 0;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~FillState}\n   */\n  this.textFillState_ = null;\n\n  /**\n   * @type {!Object.<string, module:ol/render/canvas~FillState>}\n   */\n  this.fillStates = {};\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~StrokeState}\n   */\n  this.textStrokeState_ = null;\n\n  /**\n   * @type {!Object.<string, module:ol/render/canvas~StrokeState>}\n   */\n  this.strokeStates = {};\n\n  /**\n   * @private\n   * @type {module:ol/render/canvas~TextState}\n   */\n  this.textState_ = /** @type {module:ol/render/canvas~TextState} */ ({});\n\n  /**\n   * @type {!Object.<string, module:ol/render/canvas~TextState>}\n   */\n  this.textStates = {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.textKey_ = '';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.fillKey_ = '';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.strokeKey_ = '';\n\n  /**\n   * @private\n   * @type {Object.<string, Object.<string, number>>}\n   */\n  this.widths_ = {};\n\n  labelCache.prune();\n\n};\n\ninherits(CanvasTextReplay, CanvasReplay);\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array.<string>} lines Lines to measure.\n * @param {Array.<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  const numLines = lines.length;\n  let width = 0;\n  for (let i = 0; i < numLines; ++i) {\n    const currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n\n/**\n * @inheritDoc\n */\nCanvasTextReplay.prototype.drawText = function(geometry, feature) {\n  const fillState = this.textFillState_;\n  const strokeState = this.textStrokeState_;\n  const textState = this.textState_;\n  if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n    return;\n  }\n\n  let begin = this.coordinates.length;\n\n  const geometryType = geometry.getType();\n  let flatCoordinates = null;\n  let end = 2;\n  let stride = 2;\n  let i, ii;\n\n  if (textState.placement === TextPlacement.LINE) {\n    if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n      return;\n    }\n    let ends;\n    flatCoordinates = geometry.getFlatCoordinates();\n    stride = geometry.getStride();\n    if (geometryType == GeometryType.LINE_STRING) {\n      ends = [flatCoordinates.length];\n    } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n      ends = geometry.getEnds();\n    } else if (geometryType == GeometryType.POLYGON) {\n      ends = geometry.getEnds().slice(0, 1);\n    } else if (geometryType == GeometryType.MULTI_POLYGON) {\n      const endss = geometry.getEndss();\n      ends = [];\n      for (i = 0, ii = endss.length; i < ii; ++i) {\n        ends.push(endss[i][0]);\n      }\n    }\n    this.beginGeometry(geometry, feature);\n    const textAlign = textState.textAlign;\n    let flatOffset = 0;\n    let flatEnd;\n    for (let o = 0, oo = ends.length; o < oo; ++o) {\n      if (textAlign == undefined) {\n        const range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n        flatOffset = range[0];\n        flatEnd = range[1];\n      } else {\n        flatEnd = ends[o];\n      }\n      for (i = flatOffset; i < flatEnd; i += stride) {\n        this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n      }\n      end = this.coordinates.length;\n      flatOffset = ends[o];\n      this.drawChars_(begin, end, this.declutterGroup_);\n      begin = end;\n    }\n    this.endGeometry(geometry, feature);\n\n  } else {\n    const label = this.getImage(this.text_, this.textKey_, this.fillKey_, this.strokeKey_);\n    const width = label.width / this.pixelRatio;\n    switch (geometryType) {\n      case GeometryType.POINT:\n      case GeometryType.MULTI_POINT:\n        flatCoordinates = geometry.getFlatCoordinates();\n        end = flatCoordinates.length;\n        break;\n      case GeometryType.LINE_STRING:\n        flatCoordinates = /** @type {module:ol/geom/LineString} */ (geometry).getFlatMidpoint();\n        break;\n      case GeometryType.CIRCLE:\n        flatCoordinates = /** @type {module:ol/geom/Circle} */ (geometry).getCenter();\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        flatCoordinates = /** @type {module:ol/geom/MultiLineString} */ (geometry).getFlatMidpoints();\n        end = flatCoordinates.length;\n        break;\n      case GeometryType.POLYGON:\n        flatCoordinates = /** @type {module:ol/geom/Polygon} */ (geometry).getFlatInteriorPoint();\n        if (!textState.overflow && flatCoordinates[2] / this.resolution < width) {\n          return;\n        }\n        stride = 3;\n        break;\n      case GeometryType.MULTI_POLYGON:\n        const interiorPoints = /** @type {module:ol/geom/MultiPolygon} */ (geometry).getFlatInteriorPoints();\n        flatCoordinates = [];\n        for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n          if (textState.overflow || interiorPoints[i + 2] / this.resolution >= width) {\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n        }\n        end = flatCoordinates.length;\n        if (end == 0) {\n          return;\n        }\n        break;\n      default:\n    }\n    end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n    if (textState.backgroundFill || textState.backgroundStroke) {\n      this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n      if (textState.backgroundFill) {\n        this.updateFillStyle(this.state, this.createFill, geometry);\n        this.hitDetectionInstructions.push(this.createFill(this.state, geometry));\n      }\n      if (textState.backgroundStroke) {\n        this.updateStrokeStyle(this.state, this.applyStroke);\n        this.hitDetectionInstructions.push(this.createStroke(this.state));\n      }\n    }\n    this.beginGeometry(geometry, feature);\n    this.drawTextImage_(label, begin, end);\n    this.endGeometry(geometry, feature);\n  }\n};\n\n\n/**\n * @param {string} text Text.\n * @param {string} textKey Text style key.\n * @param {string} fillKey Fill style key.\n * @param {string} strokeKey Stroke style key.\n * @return {HTMLCanvasElement} Image.\n */\nCanvasTextReplay.prototype.getImage = function(text, textKey, fillKey, strokeKey) {\n  let label;\n  const key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n\n  if (!labelCache.containsKey(key)) {\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] || this.textStrokeState_ : null;\n    const fillState = fillKey ? this.fillStates[fillKey] || this.textFillState_ : null;\n    const textState = this.textStates[textKey] || this.textState_;\n    const pixelRatio = this.pixelRatio;\n    const scale = textState.scale * pixelRatio;\n    const align =  TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n    const strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const lines = text.split('\\n');\n    const numLines = lines.length;\n    const widths = [];\n    const width = measureTextWidths(textState.font, lines, widths);\n    const lineHeight = measureTextHeight(textState.font);\n    const height = lineHeight * numLines;\n    const renderWidth = (width + strokeWidth);\n    const context = createCanvasContext2D(\n      Math.ceil(renderWidth * scale),\n      Math.ceil((height + strokeWidth) * scale));\n    label = context.canvas;\n    labelCache.set(key, label);\n    if (scale != 1) {\n      context.scale(scale, scale);\n    }\n    context.font = textState.font;\n    if (strokeKey) {\n      context.strokeStyle = strokeState.strokeStyle;\n      context.lineWidth = strokeWidth;\n      context.lineCap = strokeState.lineCap;\n      context.lineJoin = strokeState.lineJoin;\n      context.miterLimit = strokeState.miterLimit;\n      if (CANVAS_LINE_DASH && strokeState.lineDash.length) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n    }\n    if (fillKey) {\n      context.fillStyle = fillState.fillStyle;\n    }\n    context.textBaseline = 'middle';\n    context.textAlign = 'center';\n    const leftRight = (0.5 - align);\n    const x = align * label.width / scale + leftRight * strokeWidth;\n    let i;\n    if (strokeKey) {\n      for (i = 0; i < numLines; ++i) {\n        context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n      }\n    }\n    if (fillKey) {\n      for (i = 0; i < numLines; ++i) {\n        context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n      }\n    }\n  }\n  return labelCache.get(key);\n};\n\n\n/**\n * @private\n * @param {HTMLCanvasElement} label Label.\n * @param {number} begin Begin.\n * @param {number} end End.\n */\nCanvasTextReplay.prototype.drawTextImage_ = function(label, begin, end) {\n  const textState = this.textState_;\n  const strokeState = this.textStrokeState_;\n  const pixelRatio = this.pixelRatio;\n  const align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n  const baseline = TEXT_ALIGN[textState.textBaseline];\n  const strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n  const anchorX = align * label.width / pixelRatio + 2 * (0.5 - align) * strokeWidth;\n  const anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n  this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n    label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n    this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n    1, true, label.width,\n    textState.padding == defaultPadding ?\n      defaultPadding : textState.padding.map(function(p) {\n        return p * pixelRatio;\n      }),\n    !!textState.backgroundFill, !!textState.backgroundStroke\n  ]);\n  this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n    label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n    this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n    1 / pixelRatio, true, label.width, textState.padding,\n    !!textState.backgroundFill, !!textState.backgroundStroke\n  ]);\n};\n\n\n/**\n * @private\n * @param {number} begin Begin.\n * @param {number} end End.\n * @param {module:ol/render/canvas~DeclutterGroup} declutterGroup Declutter group.\n */\nCanvasTextReplay.prototype.drawChars_ = function(begin, end, declutterGroup) {\n  const strokeState = this.textStrokeState_;\n  const textState = this.textState_;\n  const fillState = this.textFillState_;\n\n  const strokeKey = this.strokeKey_;\n  if (strokeState) {\n    if (!(strokeKey in this.strokeStates)) {\n      this.strokeStates[strokeKey] = /** @type {module:ol/render/canvas~StrokeState} */ ({\n        strokeStyle: strokeState.strokeStyle,\n        lineCap: strokeState.lineCap,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineWidth: strokeState.lineWidth,\n        lineJoin: strokeState.lineJoin,\n        miterLimit: strokeState.miterLimit,\n        lineDash: strokeState.lineDash\n      });\n    }\n  }\n  const textKey = this.textKey_;\n  if (!(this.textKey_ in this.textStates)) {\n    this.textStates[this.textKey_] = /** @type {module:ol/render/canvas~TextState} */ ({\n      font: textState.font,\n      textAlign: textState.textAlign || defaultTextAlign,\n      scale: textState.scale\n    });\n  }\n  const fillKey = this.fillKey_;\n  if (fillState) {\n    if (!(fillKey in this.fillStates)) {\n      this.fillStates[fillKey] = /** @type {module:ol/render/canvas~FillState} */ ({\n        fillStyle: fillState.fillStyle\n      });\n    }\n  }\n\n  const pixelRatio = this.pixelRatio;\n  const baseline = TEXT_ALIGN[textState.textBaseline];\n\n  const offsetY = this.textOffsetY_ * pixelRatio;\n  const text = this.text_;\n  const font = textState.font;\n  const textScale = textState.scale;\n  const strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n  let widths = this.widths_[font];\n  if (!widths) {\n    this.widths_[font] = widths = {};\n  }\n  this.instructions.push([CanvasInstruction.DRAW_CHARS,\n    begin, end, baseline, declutterGroup,\n    textState.overflow, fillKey, textState.maxAngle,\n    function(text) {\n      let width = widths[text];\n      if (!width) {\n        width = widths[text] = measureTextWidth(font, text);\n      }\n      return width * textScale * pixelRatio;\n    },\n    offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n  ]);\n  this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n    begin, end, baseline, declutterGroup,\n    textState.overflow, fillKey, textState.maxAngle,\n    function(text) {\n      let width = widths[text];\n      if (!width) {\n        width = widths[text] = measureTextWidth(font, text);\n      }\n      return width * textScale;\n    },\n    offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n  ]);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasTextReplay.prototype.setTextStyle = function(textStyle, declutterGroup) {\n  let textState, fillState, strokeState;\n  if (!textStyle) {\n    this.text_ = '';\n  } else {\n    this.declutterGroup_ = /** @type {module:ol/render/canvas~DeclutterGroup} */ (declutterGroup);\n\n    const textFillStyle = textStyle.getFill();\n    if (!textFillStyle) {\n      fillState = this.textFillState_ = null;\n    } else {\n      fillState = this.textFillState_;\n      if (!fillState) {\n        fillState = this.textFillState_ = /** @type {module:ol/render/canvas~FillState} */ ({});\n      }\n      fillState.fillStyle = asColorLike(\n        textFillStyle.getColor() || defaultFillStyle);\n    }\n\n    const textStrokeStyle = textStyle.getStroke();\n    if (!textStrokeStyle) {\n      strokeState = this.textStrokeState_ = null;\n    } else {\n      strokeState = this.textStrokeState_;\n      if (!strokeState) {\n        strokeState = this.textStrokeState_ = /** @type {module:ol/render/canvas~StrokeState} */ ({});\n      }\n      const lineDash = textStrokeStyle.getLineDash();\n      const lineDashOffset = textStrokeStyle.getLineDashOffset();\n      const lineWidth = textStrokeStyle.getWidth();\n      const miterLimit = textStrokeStyle.getMiterLimit();\n      strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n      strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n      strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n      strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n      strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n      strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n      strokeState.strokeStyle = asColorLike(\n        textStrokeStyle.getColor() || defaultStrokeStyle);\n    }\n\n    textState = this.textState_;\n    const font = textStyle.getFont() || defaultFont;\n    checkFont(font);\n    const textScale = textStyle.getScale();\n    textState.overflow = textStyle.getOverflow();\n    textState.font = font;\n    textState.maxAngle = textStyle.getMaxAngle();\n    textState.placement = textStyle.getPlacement();\n    textState.textAlign = textStyle.getTextAlign();\n    textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n    textState.backgroundFill = textStyle.getBackgroundFill();\n    textState.backgroundStroke = textStyle.getBackgroundStroke();\n    textState.padding = textStyle.getPadding() || defaultPadding;\n    textState.scale = textScale === undefined ? 1 : textScale;\n\n    const textOffsetX = textStyle.getOffsetX();\n    const textOffsetY = textStyle.getOffsetY();\n    const textRotateWithView = textStyle.getRotateWithView();\n    const textRotation = textStyle.getRotation();\n    this.text_ = textStyle.getText() || '';\n    this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n    this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n    this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n    this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n    this.strokeKey_ = strokeState ?\n      (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n      strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n      strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n      '';\n    this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n    this.fillKey_ = fillState ?\n      (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n      '';\n  }\n};\nexport default CanvasTextReplay;\n","/**\n * @module ol/render/canvas/ReplayGroup\n */\nimport {inherits} from '../../index.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport ReplayGroup from '../ReplayGroup.js';\nimport ReplayType from '../ReplayType.js';\nimport CanvasReplay from '../canvas/Replay.js';\nimport CanvasImageReplay from '../canvas/ImageReplay.js';\nimport CanvasLineStringReplay from '../canvas/LineStringReplay.js';\nimport CanvasPolygonReplay from '../canvas/PolygonReplay.js';\nimport CanvasTextReplay from '../canvas/TextReplay.js';\nimport {ORDER} from '../replay.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n\n/**\n * @type {Object.<module:ol/render/ReplayType,\n *                function(new: module:ol/render/canvas/Replay, number, module:ol/extent~Extent,\n *                number, number, boolean, Array.<module:ol/render/canvas~DeclutterGroup>)>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': CanvasPolygonReplay,\n  'Default': CanvasReplay,\n  'Image': CanvasImageReplay,\n  'LineString': CanvasLineStringReplay,\n  'Polygon': CanvasPolygonReplay,\n  'Text': CanvasTextReplay\n};\n\n\n/**\n * @constructor\n * @extends {module:ol/render/ReplayGroup}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Max extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay group can have overlapping geometries.\n * @param {?} declutterTree Declutter tree\n * for declutter processing in postrender.\n * @param {number=} opt_renderBuffer Optional rendering buffer.\n * @struct\n */\nconst CanvasReplayGroup = function(\n  tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree, opt_renderBuffer) {\n  ReplayGroup.call(this);\n\n  /**\n   * Declutter tree.\n   * @private\n   */\n  this.declutterTree_ = declutterTree;\n\n  /**\n   * @type {module:ol/render/canvas~DeclutterGroup}\n   * @private\n   */\n  this.declutterGroup_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.tolerance_ = tolerance;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.maxExtent_ = maxExtent;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overlaps_ = overlaps;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelRatio_ = pixelRatio;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.resolution_ = resolution;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.renderBuffer_ = opt_renderBuffer;\n\n  /**\n   * @private\n   * @type {!Object.<string, !Object.<module:ol/render/ReplayType, module:ol/render/canvas/Replay>>}\n   */\n  this.replaysByZIndex_ = {};\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.hitDetectionContext_ = createCanvasContext2D(1, 1);\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.hitDetectionTransform_ = createTransform();\n};\n\ninherits(CanvasReplayGroup, ReplayGroup);\n\n\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object.<number, Array.<Array.<(boolean|undefined)>>>}\n */\nconst circleArrayCache = {\n  0: [[true]]\n};\n\n\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array.<Array.<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n  let i;\n  const radius = Math.floor(array.length / 2);\n  if (x >= radius) {\n    for (i = radius; i < x; i++) {\n      array[i][y] = true;\n    }\n  } else if (x < radius) {\n    for (i = x + 1; i < radius; i++) {\n      array[i][y] = true;\n    }\n  }\n}\n\n\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array.<Array.<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n  if (circleArrayCache[radius] !== undefined) {\n    return circleArrayCache[radius];\n  }\n\n  const arraySize = radius * 2 + 1;\n  const arr = new Array(arraySize);\n  for (let i = 0; i < arraySize; i++) {\n    arr[i] = new Array(arraySize);\n  }\n\n  let x = radius;\n  let y = 0;\n  let error = 0;\n\n  while (x >= y) {\n    fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n\n    y++;\n    error += 1 + 2 * y;\n    if (2 * (error - x) + 1 > 0) {\n      x -= 1;\n      error += 1 - 2 * x;\n    }\n  }\n\n  circleArrayCache[radius] = arr;\n  return arr;\n}\n\n\n/**\n * @param {!Object.<string, Array.<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n */\nexport function replayDeclutter(declutterReplays, context, rotation) {\n  const zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n  const skippedFeatureUids = {};\n  for (let z = 0, zz = zs.length; z < zz; ++z) {\n    const replayData = declutterReplays[zs[z].toString()];\n    for (let i = 0, ii = replayData.length; i < ii;) {\n      const replay = replayData[i++];\n      const transform = replayData[i++];\n      replay.replay(context, transform, rotation, skippedFeatureUids);\n    }\n  }\n}\n\n\n/**\n * @param {boolean} group Group with previous replay.\n * @return {module:ol/render/canvas~DeclutterGroup} Declutter instruction group.\n */\nCanvasReplayGroup.prototype.addDeclutter = function(group) {\n  let declutter = null;\n  if (this.declutterTree_) {\n    if (group) {\n      declutter = this.declutterGroup_;\n      /** @type {number} */ (declutter[4])++;\n    } else {\n      declutter = this.declutterGroup_ = createEmpty();\n      declutter.push(1);\n    }\n  }\n  return declutter;\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform} transform Transform.\n */\nCanvasReplayGroup.prototype.clip = function(context, transform) {\n  const flatClipCoords = this.getClipCoords(transform);\n  context.beginPath();\n  context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n  context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n  context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n  context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n  context.clip();\n};\n\n\n/**\n * @param {Array.<module:ol/render/ReplayType>} replays Replays.\n * @return {boolean} Has replays of the provided types.\n */\nCanvasReplayGroup.prototype.hasReplays = function(replays) {\n  for (const zIndex in this.replaysByZIndex_) {\n    const candidates = this.replaysByZIndex_[zIndex];\n    for (let i = 0, ii = replays.length; i < ii; ++i) {\n      if (replays[i] in candidates) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nCanvasReplayGroup.prototype.finish = function() {\n  for (const zKey in this.replaysByZIndex_) {\n    const replays = this.replaysByZIndex_[zKey];\n    for (const replayKey in replays) {\n      replays[replayKey].finish();\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T} callback Feature callback.\n * @param {Object.<string, module:ol/render/canvas~DeclutterGroup>} declutterReplays Declutter replays.\n * @return {T|undefined} Callback result.\n * @template T\n */\nCanvasReplayGroup.prototype.forEachFeatureAtCoordinate = function(\n  coordinate, resolution, rotation, hitTolerance, skippedFeaturesHash, callback, declutterReplays) {\n\n  hitTolerance = Math.round(hitTolerance);\n  const contextSize = hitTolerance * 2 + 1;\n  const transform = composeTransform(this.hitDetectionTransform_,\n    hitTolerance + 0.5, hitTolerance + 0.5,\n    1 / resolution, -1 / resolution,\n    -rotation,\n    -coordinate[0], -coordinate[1]);\n  const context = this.hitDetectionContext_;\n\n  if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n    context.canvas.width = contextSize;\n    context.canvas.height = contextSize;\n  } else {\n    context.clearRect(0, 0, contextSize, contextSize);\n  }\n\n  /**\n   * @type {module:ol/extent~Extent}\n   */\n  let hitExtent;\n  if (this.renderBuffer_ !== undefined) {\n    hitExtent = createEmpty();\n    extendCoordinate(hitExtent, coordinate);\n    buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n  }\n\n  const mask = getCircleArray(hitTolerance);\n  let declutteredFeatures;\n  if (this.declutterTree_) {\n    declutteredFeatures = this.declutterTree_.all().map(function(entry) {\n      return entry.value;\n    });\n  }\n\n  let replayType;\n\n  /**\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   * @return {?} Callback result.\n   */\n  function featureCallback(feature) {\n    const imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n    for (let i = 0; i < contextSize; i++) {\n      for (let j = 0; j < contextSize; j++) {\n        if (mask[i][j]) {\n          if (imageData[(j * contextSize + i) * 4 + 3] > 0) {\n            let result;\n            if (!(declutteredFeatures && (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) ||\n                declutteredFeatures.indexOf(feature) !== -1) {\n              result = callback(feature);\n            }\n            if (result) {\n              return result;\n            } else {\n              context.clearRect(0, 0, contextSize, contextSize);\n              return undefined;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /** @type {Array.<number>} */\n  const zs = Object.keys(this.replaysByZIndex_).map(Number);\n  zs.sort(numberSafeCompareFunction);\n\n  let i, j, replays, replay, result;\n  for (i = zs.length - 1; i >= 0; --i) {\n    const zIndexKey = zs[i].toString();\n    replays = this.replaysByZIndex_[zIndexKey];\n    for (j = ORDER.length - 1; j >= 0; --j) {\n      replayType = ORDER[j];\n      replay = replays[replayType];\n      if (replay !== undefined) {\n        if (declutterReplays &&\n            (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n          const declutter = declutterReplays[zIndexKey];\n          if (!declutter) {\n            declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n          } else {\n            declutter.push(replay, transform.slice(0));\n          }\n        } else {\n          result = replay.replayHitDetection(context, transform, rotation,\n            skippedFeaturesHash, featureCallback, hitExtent);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {module:ol/transform~Transform} transform Transform.\n * @return {Array.<number>} Clip coordinates.\n */\nCanvasReplayGroup.prototype.getClipCoords = function(transform) {\n  const maxExtent = this.maxExtent_;\n  const minX = maxExtent[0];\n  const minY = maxExtent[1];\n  const maxX = maxExtent[2];\n  const maxY = maxExtent[3];\n  const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n  transform2D(\n    flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n  return flatClipCoords;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasReplayGroup.prototype.getReplay = function(zIndex, replayType) {\n  const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n  let replays = this.replaysByZIndex_[zIndexKey];\n  if (replays === undefined) {\n    replays = {};\n    this.replaysByZIndex_[zIndexKey] = replays;\n  }\n  let replay = replays[replayType];\n  if (replay === undefined) {\n    const Constructor = BATCH_CONSTRUCTORS[replayType];\n    replay = new Constructor(this.tolerance_, this.maxExtent_,\n      this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_);\n    replays[replayType] = replay;\n  }\n  return replay;\n};\n\n\n/**\n * @return {Object.<string, Object.<module:ol/render/ReplayType, module:ol/render/canvas/Replay>>} Replays.\n */\nCanvasReplayGroup.prototype.getReplays = function() {\n  return this.replaysByZIndex_;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasReplayGroup.prototype.isEmpty = function() {\n  return isEmpty(this.replaysByZIndex_);\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {number} viewRotation View rotation.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n * @param {Array.<module:ol/render/ReplayType>=} opt_replayTypes Ordered replay types to replay.\n *     Default is {@link module:ol/render/replay~ORDER}\n * @param {Object.<string, module:ol/render/canvas~DeclutterGroup>=} opt_declutterReplays Declutter replays.\n */\nCanvasReplayGroup.prototype.replay = function(context,\n  transform, viewRotation, skippedFeaturesHash, opt_replayTypes, opt_declutterReplays) {\n\n  /** @type {Array.<number>} */\n  const zs = Object.keys(this.replaysByZIndex_).map(Number);\n  zs.sort(numberSafeCompareFunction);\n\n  // setup clipping so that the parts of over-simplified geometries are not\n  // visible outside the current extent when panning\n  context.save();\n  this.clip(context, transform);\n\n  const replayTypes = opt_replayTypes ? opt_replayTypes : ORDER;\n  let i, ii, j, jj, replays, replay;\n  for (i = 0, ii = zs.length; i < ii; ++i) {\n    const zIndexKey = zs[i].toString();\n    replays = this.replaysByZIndex_[zIndexKey];\n    for (j = 0, jj = replayTypes.length; j < jj; ++j) {\n      const replayType = replayTypes[j];\n      replay = replays[replayType];\n      if (replay !== undefined) {\n        if (opt_declutterReplays &&\n            (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n          const declutter = opt_declutterReplays[zIndexKey];\n          if (!declutter) {\n            opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n          } else {\n            declutter.push(replay, transform.slice(0));\n          }\n        } else {\n          replay.replay(context, transform, viewRotation, skippedFeaturesHash);\n        }\n      }\n    }\n  }\n\n  context.restore();\n};\n\nexport default CanvasReplayGroup;\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport {getUid, inherits} from '../../index.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, createEmpty, containsExtent, getWidth} from '../../extent.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup from '../../render/canvas/ReplayGroup.js';\nimport CanvasLayerRenderer from '../canvas/Layer.js';\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\n\n/**\n * @constructor\n * @extends {module:ol/renderer/canvas/Layer}\n * @param {module:ol/layer/Vector} vectorLayer Vector layer.\n * @api\n */\nconst CanvasVectorLayerRenderer = function(vectorLayer) {\n\n  CanvasLayerRenderer.call(this, vectorLayer);\n\n  /**\n   * Declutter tree.\n   * @private\n   */\n  this.declutterTree_ = vectorLayer.getDeclutter() ? rbush(9, undefined) : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.dirty_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedResolution_ = NaN;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.renderedExtent_ = createEmpty();\n\n  /**\n   * @private\n   * @type {function(module:ol/Feature, module:ol/Feature): number|null}\n   */\n  this.renderedRenderOrder_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/render/canvas/ReplayGroup}\n   */\n  this.replayGroup_ = null;\n\n  /**\n   * A new replay group had to be created by `prepareFrame()`\n   * @type {boolean}\n   */\n  this.replayGroupChanged = true;\n\n  /**\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context = createCanvasContext2D();\n\n  listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n};\n\ninherits(CanvasVectorLayerRenderer, CanvasLayerRenderer);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/VectorLayer} The layer renderer.\n */\nCanvasVectorLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorLayerRenderer(/** @type {module:ol/layer/Vector} */ (layer));\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorLayerRenderer.prototype.disposeInternal = function() {\n  unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n  CanvasLayerRenderer.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n */\nCanvasVectorLayerRenderer.prototype.compose = function(context, frameState, layerState) {\n  const extent = frameState.extent;\n  const pixelRatio = frameState.pixelRatio;\n  const skippedFeatureUids = layerState.managed ?\n    frameState.skippedFeatureUids : {};\n  const viewState = frameState.viewState;\n  const projection = viewState.projection;\n  const rotation = viewState.rotation;\n  const projectionExtent = projection.getExtent();\n  const vectorSource = /** @type {module:ol/source/Vector} */ (this.getLayer().getSource());\n\n  let transform = this.getTransform(frameState, 0);\n\n  // clipped rendering if layer extent is set\n  const clipExtent = layerState.extent;\n  const clipped = clipExtent !== undefined;\n  if (clipped) {\n    this.clip(context, frameState,  /** @type {module:ol/extent~Extent} */ (clipExtent));\n  }\n  const replayGroup = this.replayGroup_;\n  if (replayGroup && !replayGroup.isEmpty()) {\n    if (this.declutterTree_) {\n      this.declutterTree_.clear();\n    }\n    const layer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n    let drawOffsetX = 0;\n    let drawOffsetY = 0;\n    let replayContext;\n    const transparentLayer = layerState.opacity !== 1;\n    const hasRenderListeners = layer.hasListener(RenderEventType.RENDER);\n    if (transparentLayer || hasRenderListeners) {\n      let drawWidth = context.canvas.width;\n      let drawHeight = context.canvas.height;\n      if (rotation) {\n        const drawSize = Math.round(Math.sqrt(drawWidth * drawWidth + drawHeight * drawHeight));\n        drawOffsetX = (drawSize - drawWidth) / 2;\n        drawOffsetY = (drawSize - drawHeight) / 2;\n        drawWidth = drawHeight = drawSize;\n      }\n      // resize and clear\n      this.context.canvas.width = drawWidth;\n      this.context.canvas.height = drawHeight;\n      replayContext = this.context;\n    } else {\n      replayContext = context;\n    }\n\n    const alpha = replayContext.globalAlpha;\n    if (!transparentLayer) {\n      // for performance reasons, context.save / context.restore is not used\n      // to save and restore the transformation matrix and the opacity.\n      // see http://jsperf.com/context-save-restore-versus-variable\n      replayContext.globalAlpha = layerState.opacity;\n    }\n\n    if (replayContext != context) {\n      replayContext.translate(drawOffsetX, drawOffsetY);\n    }\n\n    const width = frameState.size[0] * pixelRatio;\n    const height = frameState.size[1] * pixelRatio;\n    rotateAtOffset(replayContext, -rotation,\n      width / 2, height / 2);\n    replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids);\n    if (vectorSource.getWrapX() && projection.canWrapX() &&\n        !containsExtent(projectionExtent, extent)) {\n      let startX = extent[0];\n      const worldWidth = getWidth(projectionExtent);\n      let world = 0;\n      let offsetX;\n      while (startX < projectionExtent[0]) {\n        --world;\n        offsetX = worldWidth * world;\n        transform = this.getTransform(frameState, offsetX);\n        replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids);\n        startX += worldWidth;\n      }\n      world = 0;\n      startX = extent[2];\n      while (startX > projectionExtent[2]) {\n        ++world;\n        offsetX = worldWidth * world;\n        transform = this.getTransform(frameState, offsetX);\n        replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids);\n        startX -= worldWidth;\n      }\n    }\n    rotateAtOffset(replayContext, rotation,\n      width / 2, height / 2);\n\n    if (replayContext != context) {\n      if (hasRenderListeners) {\n        this.dispatchRenderEvent(replayContext, frameState, transform);\n      }\n      if (transparentLayer) {\n        const mainContextAlpha = context.globalAlpha;\n        context.globalAlpha = layerState.opacity;\n        context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n        context.globalAlpha = mainContextAlpha;\n      } else {\n        context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n      }\n      replayContext.translate(-drawOffsetX, -drawOffsetY);\n    }\n\n    if (!transparentLayer) {\n      replayContext.globalAlpha = alpha;\n    }\n  }\n\n  if (clipped) {\n    context.restore();\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorLayerRenderer.prototype.composeFrame = function(frameState, layerState, context) {\n  const transform = this.getTransform(frameState, 0);\n  this.preCompose(context, frameState, transform);\n  this.compose(context, frameState, layerState);\n  this.postCompose(context, frameState, layerState, transform);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  if (!this.replayGroup_) {\n    return undefined;\n  } else {\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n    /** @type {!Object.<string, boolean>} */\n    const features = {};\n    const result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n      /**\n       * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n       * @return {?} Callback result.\n       */\n      function(feature) {\n        const key = getUid(feature).toString();\n        if (!(key in features)) {\n          features[key] = true;\n          return callback.call(thisArg, feature, layer);\n        }\n      }, null);\n    return result;\n  }\n};\n\n\n/**\n * @param {module:ol/events/Event} event Event.\n */\nCanvasVectorLayerRenderer.prototype.handleFontsChanged_ = function(event) {\n  const layer = this.getLayer();\n  if (layer.getVisible() && this.replayGroup_) {\n    layer.changed();\n  }\n};\n\n\n/**\n * Handle changes in image style state.\n * @param {module:ol/events/Event} event Image style change event.\n * @private\n */\nCanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function(event) {\n  this.renderIfReadyAndVisible();\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorLayerRenderer.prototype.prepareFrame = function(frameState, layerState) {\n  const vectorLayer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n  const vectorSource = vectorLayer.getSource();\n\n  const animating = frameState.viewHints[ViewHint.ANIMATING];\n  const interacting = frameState.viewHints[ViewHint.INTERACTING];\n  const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n  const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n  if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)) {\n    return true;\n  }\n\n  const frameStateExtent = frameState.extent;\n  const viewState = frameState.viewState;\n  const projection = viewState.projection;\n  const resolution = viewState.resolution;\n  const pixelRatio = frameState.pixelRatio;\n  const vectorLayerRevision = vectorLayer.getRevision();\n  const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n  let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n  if (vectorLayerRenderOrder === undefined) {\n    vectorLayerRenderOrder = defaultRenderOrder;\n  }\n\n  const extent = buffer(frameStateExtent,\n    vectorLayerRenderBuffer * resolution);\n  const projectionExtent = viewState.projection.getExtent();\n\n  if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)) {\n    // For the replay group, we need an extent that intersects the real world\n    // (-180° to +180°). To support geometries in a coordinate range from -540°\n    // to +540°, we add at least 1 world width on each side of the projection\n    // extent. If the viewport is wider than the world, we need to add half of\n    // the viewport width to make sure we cover the whole viewport.\n    const worldWidth = getWidth(projectionExtent);\n    const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n    extent[0] = projectionExtent[0] - gutter;\n    extent[2] = projectionExtent[2] + gutter;\n  }\n\n  if (!this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.renderedExtent_, extent)) {\n    this.replayGroupChanged = false;\n    return true;\n  }\n\n  this.replayGroup_ = null;\n\n  this.dirty_ = false;\n\n  const replayGroup = new CanvasReplayGroup(\n    getRenderTolerance(resolution, pixelRatio), extent, resolution,\n    pixelRatio, vectorSource.getOverlaps(), this.declutterTree_, vectorLayer.getRenderBuffer());\n  vectorSource.loadFeatures(extent, resolution, projection);\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @this {module:ol/renderer/canvas/VectorLayer}\n   */\n  const render = function(feature) {\n    let styles;\n    const styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n    if (styleFunction) {\n      styles = styleFunction(feature, resolution);\n    }\n    if (styles) {\n      const dirty = this.renderFeature(\n        feature, resolution, pixelRatio, styles, replayGroup);\n      this.dirty_ = this.dirty_ || dirty;\n    }\n  }.bind(this);\n  if (vectorLayerRenderOrder) {\n    /** @type {Array.<module:ol/Feature>} */\n    const features = [];\n    vectorSource.forEachFeatureInExtent(extent,\n      /**\n       * @param {module:ol/Feature} feature Feature.\n       */\n      function(feature) {\n        features.push(feature);\n      }, this);\n    features.sort(vectorLayerRenderOrder);\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n  } else {\n    vectorSource.forEachFeatureInExtent(extent, render, this);\n  }\n  replayGroup.finish();\n\n  this.renderedResolution_ = resolution;\n  this.renderedRevision_ = vectorLayerRevision;\n  this.renderedRenderOrder_ = vectorLayerRenderOrder;\n  this.renderedExtent_ = extent;\n  this.replayGroup_ = replayGroup;\n\n  this.replayGroupChanged = true;\n  return true;\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {(module:ol/style/Style|Array.<module:ol/style/Style>)} styles The style or array of styles.\n * @param {module:ol/render/canvas/ReplayGroup} replayGroup Replay group.\n * @return {boolean} `true` if an image is loading.\n */\nCanvasVectorLayerRenderer.prototype.renderFeature = function(feature, resolution, pixelRatio, styles, replayGroup) {\n  if (!styles) {\n    return false;\n  }\n  let loading = false;\n  if (Array.isArray(styles)) {\n    for (let i = 0, ii = styles.length; i < ii; ++i) {\n      loading = renderFeature(\n        replayGroup, feature, styles[i],\n        getSquaredRenderTolerance(resolution, pixelRatio),\n        this.handleStyleImageChange_, this) || loading;\n    }\n  } else {\n    loading = renderFeature(\n      replayGroup, feature, styles,\n      getSquaredRenderTolerance(resolution, pixelRatio),\n      this.handleStyleImageChange_, this);\n  }\n  return loading;\n};\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport {getUid, inherits} from '../../index.js';\nimport LayerType from '../../LayerType.js';\nimport TileState from '../../TileState.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, containsCoordinate, equals, getIntersection, getTopLeft, intersects} from '../../extent.js';\nimport VectorTileRenderType from '../../layer/VectorTileRenderType.js';\nimport {equivalent as equivalentProjection} from '../../proj.js';\nimport Units from '../../proj/Units.js';\nimport ReplayType from '../../render/ReplayType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup, {replayDeclutter} from '../../render/canvas/ReplayGroup.js';\nimport {ORDER} from '../../render/replay.js';\nimport CanvasTileLayerRenderer from '../canvas/TileLayer.js';\nimport {getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  reset as resetTransform,\n  scale as scaleTransform,\n  translate as translateTransform\n} from '../../transform.js';\n\n\n/**\n * @type {!Object.<string, Array.<module:ol/render/ReplayType>>}\n */\nconst IMAGE_REPLAYS = {\n  'image': [ReplayType.POLYGON, ReplayType.CIRCLE,\n    ReplayType.LINE_STRING, ReplayType.IMAGE, ReplayType.TEXT],\n  'hybrid': [ReplayType.POLYGON, ReplayType.LINE_STRING]\n};\n\n\n/**\n * @type {!Object.<string, Array.<module:ol/render/ReplayType>>}\n */\nconst VECTOR_REPLAYS = {\n  'image': [ReplayType.DEFAULT],\n  'hybrid': [ReplayType.IMAGE, ReplayType.TEXT, ReplayType.DEFAULT],\n  'vector': ORDER\n};\n\n\n/**\n * @constructor\n * @extends {module:ol/renderer/canvas/TileLayer}\n * @param {module:ol/layer/VectorTile} layer VectorTile layer.\n * @api\n */\nconst CanvasVectorTileLayerRenderer = function(layer) {\n\n  /**\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context = null;\n\n  CanvasTileLayerRenderer.call(this, layer);\n\n  /**\n   * Declutter tree.\n   * @private\n   */\n  this.declutterTree_ = layer.getDeclutter() ? rbush(9, undefined) : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.dirty_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedLayerRevision_;\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.tmpTransform_ = createTransform();\n\n  // Use lower resolution for pure vector rendering. Closest resolution otherwise.\n  this.zDirection = layer.getRenderMode() == VectorTileRenderType.VECTOR ? 1 : 0;\n\n  listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n};\n\ninherits(CanvasVectorTileLayerRenderer, CanvasTileLayerRenderer);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR_TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/VectorTileLayer} The layer renderer.\n */\nCanvasVectorTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorTileLayerRenderer(/** @type {module:ol/layer/VectorTile} */ (layer));\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorTileLayerRenderer.prototype.disposeInternal = function() {\n  unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n  CanvasTileLayerRenderer.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorTileLayerRenderer.prototype.getTile = function(z, x, y, pixelRatio, projection) {\n  const tile = CanvasTileLayerRenderer.prototype.getTile.call(this, z, x, y, pixelRatio, projection);\n  if (tile.getState() === TileState.LOADED) {\n    this.createReplayGroup_(tile, pixelRatio, projection);\n    if (this.context) {\n      this.renderTileImage_(tile, pixelRatio, projection);\n    }\n  }\n  return tile;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorTileLayerRenderer.prototype.prepareFrame = function(frameState, layerState) {\n  const layer = this.getLayer();\n  const layerRevision = layer.getRevision();\n  if (this.renderedLayerRevision_ != layerRevision) {\n    this.renderedTiles.length = 0;\n    const renderMode = layer.getRenderMode();\n    if (!this.context && renderMode != VectorTileRenderType.VECTOR) {\n      this.context = createCanvasContext2D();\n    }\n    if (this.context && renderMode == VectorTileRenderType.VECTOR) {\n      this.context = null;\n    }\n  }\n  this.renderedLayerRevision_ = layerRevision;\n  return CanvasTileLayerRenderer.prototype.prepareFrame.apply(this, arguments);\n};\n\n\n/**\n * @param {module:ol/VectorImageTile} tile Tile.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @private\n */\nCanvasVectorTileLayerRenderer.prototype.createReplayGroup_ = function(tile, pixelRatio, projection) {\n  const layer = this.getLayer();\n  const revision = layer.getRevision();\n  const renderOrder = /** @type {module:ol/render~OrderFunction} */ (layer.getRenderOrder()) || null;\n\n  const replayState = tile.getReplayState(layer);\n  if (!replayState.dirty && replayState.renderedRevision == revision &&\n      replayState.renderedRenderOrder == renderOrder) {\n    return;\n  }\n\n  const source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n  const sourceTileGrid = source.getTileGrid();\n  const tileGrid = source.getTileGridForProjection(projection);\n  const resolution = tileGrid.getResolution(tile.tileCoord[0]);\n  const tileExtent = tile.extent;\n\n  const zIndexKeys = {};\n  for (let t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n    const sourceTile = tile.getTile(tile.tileKeys[t]);\n    if (sourceTile.getState() != TileState.LOADED) {\n      continue;\n    }\n\n    const sourceTileCoord = sourceTile.tileCoord;\n    const sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n    const sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n    const bufferedExtent = equals(sourceTileExtent, sharedExtent) ? null :\n      buffer(sharedExtent, layer.getRenderBuffer() * resolution, this.tmpExtent);\n    const tileProjection = sourceTile.getProjection();\n    let reproject = false;\n    if (!equivalentProjection(projection, tileProjection)) {\n      reproject = true;\n      sourceTile.setProjection(projection);\n    }\n    replayState.dirty = false;\n    const replayGroup = new CanvasReplayGroup(0, sharedExtent, resolution,\n      pixelRatio, source.getOverlaps(), this.declutterTree_, layer.getRenderBuffer());\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n    /**\n     * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n     * @this {module:ol/renderer/canvas/VectorTileLayer}\n     */\n    const render = function(feature) {\n      let styles;\n      const styleFunction = feature.getStyleFunction() || layer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n      if (styles) {\n        const dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup);\n        this.dirty_ = this.dirty_ || dirty;\n        replayState.dirty = replayState.dirty || dirty;\n      }\n    };\n\n    const features = sourceTile.getFeatures();\n    if (renderOrder && renderOrder !== replayState.renderedRenderOrder) {\n      features.sort(renderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      const feature = features[i];\n      if (reproject) {\n        if (tileProjection.getUnits() == Units.TILE_PIXELS) {\n          // projected tile extent\n          tileProjection.setWorldExtent(sourceTileExtent);\n          // tile extent in tile pixel space\n          tileProjection.setExtent(sourceTile.getExtent());\n        }\n        feature.getGeometry().transform(tileProjection, projection);\n      }\n      if (!bufferedExtent || intersects(bufferedExtent, feature.getGeometry().getExtent())) {\n        render.call(this, feature);\n      }\n    }\n    replayGroup.finish();\n    for (const r in replayGroup.getReplays()) {\n      zIndexKeys[r] = true;\n    }\n    sourceTile.setReplayGroup(layer, tile.tileCoord.toString(), replayGroup);\n  }\n  replayState.renderedRevision = revision;\n  replayState.renderedRenderOrder = renderOrder;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorTileLayerRenderer.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  const resolution = frameState.viewState.resolution;\n  const rotation = frameState.viewState.rotation;\n  hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n  const layer = this.getLayer();\n  /** @type {!Object.<string, boolean>} */\n  const features = {};\n\n  /** @type {Array.<module:ol/VectorImageTile>} */\n  const renderedTiles = this.renderedTiles;\n\n  let bufferedExtent, found;\n  let i, ii, replayGroup;\n  for (i = 0, ii = renderedTiles.length; i < ii; ++i) {\n    const tile = renderedTiles[i];\n    bufferedExtent = buffer(tile.extent, hitTolerance * resolution, bufferedExtent);\n    if (!containsCoordinate(bufferedExtent, coordinate)) {\n      continue;\n    }\n    for (let t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n      const sourceTile = tile.getTile(tile.tileKeys[t]);\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      replayGroup = sourceTile.getReplayGroup(layer, tile.tileCoord.toString());\n      found = found || replayGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @return {?} Callback result.\n         */\n        function(feature) {\n          const key = getUid(feature).toString();\n          if (!(key in features)) {\n            features[key] = true;\n            return callback.call(thisArg, feature, layer);\n          }\n        }, null);\n    }\n  }\n  return found;\n};\n\n\n/**\n * @param {module:ol/VectorTile} tile Tile.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @return {module:ol/transform~Transform} transform Transform.\n * @private\n */\nCanvasVectorTileLayerRenderer.prototype.getReplayTransform_ = function(tile, frameState) {\n  const layer = this.getLayer();\n  const source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n  const tileGrid = source.getTileGrid();\n  const tileCoord = tile.tileCoord;\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  const viewState = frameState.viewState;\n  const pixelRatio = frameState.pixelRatio;\n  const renderResolution = viewState.resolution / pixelRatio;\n  const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n  const center = viewState.center;\n  const origin = getTopLeft(tileExtent);\n  const size = frameState.size;\n  const offsetX = Math.round(pixelRatio * size[0] / 2);\n  const offsetY = Math.round(pixelRatio * size[1] / 2);\n  return composeTransform(this.tmpTransform_,\n    offsetX, offsetY,\n    tileResolution / renderResolution, tileResolution / renderResolution,\n    viewState.rotation,\n    (origin[0] - center[0]) / tileResolution,\n    (center[1] - origin[1]) / tileResolution);\n};\n\n\n/**\n * @param {module:ol/events/Event} event Event.\n */\nCanvasVectorTileLayerRenderer.prototype.handleFontsChanged_ = function(event) {\n  const layer = this.getLayer();\n  if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n    layer.changed();\n  }\n};\n\n\n/**\n * Handle changes in image style state.\n * @param {module:ol/events/Event} event Image style change event.\n * @private\n */\nCanvasVectorTileLayerRenderer.prototype.handleStyleImageChange_ = function(event) {\n  this.renderIfReadyAndVisible();\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorTileLayerRenderer.prototype.postCompose = function(context, frameState, layerState) {\n  const layer = this.getLayer();\n  const declutterReplays = layer.getDeclutter() ? {} : null;\n  const source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n  const renderMode = layer.getRenderMode();\n  const replayTypes = VECTOR_REPLAYS[renderMode];\n  const pixelRatio = frameState.pixelRatio;\n  const rotation = frameState.viewState.rotation;\n  const size = frameState.size;\n  let offsetX, offsetY;\n  if (rotation) {\n    offsetX = Math.round(pixelRatio * size[0] / 2);\n    offsetY = Math.round(pixelRatio * size[1] / 2);\n    rotateAtOffset(context, -rotation, offsetX, offsetY);\n  }\n  if (declutterReplays) {\n    this.declutterTree_.clear();\n  }\n  const tiles = this.renderedTiles;\n  const tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n  const clips = [];\n  const zs = [];\n  for (let i = tiles.length - 1; i >= 0; --i) {\n    const tile = /** @type {module:ol/VectorImageTile} */ (tiles[i]);\n    if (tile.getState() == TileState.ABORT) {\n      continue;\n    }\n    const tileCoord = tile.tileCoord;\n    const worldOffset = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tile.extent[0];\n    let transform = undefined;\n    for (let t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n      const sourceTile = tile.getTile(tile.tileKeys[t]);\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      const replayGroup = sourceTile.getReplayGroup(layer, tileCoord.toString());\n      if (renderMode != VectorTileRenderType.VECTOR && !replayGroup.hasReplays(replayTypes)) {\n        continue;\n      }\n      if (!transform) {\n        transform = this.getTransform(frameState, worldOffset);\n      }\n      const currentZ = sourceTile.tileCoord[0];\n      const currentClip = replayGroup.getClipCoords(transform);\n      context.save();\n      context.globalAlpha = layerState.opacity;\n      // Create a clip mask for regions in this low resolution tile that are\n      // already filled by a higher resolution tile\n      for (let j = 0, jj = clips.length; j < jj; ++j) {\n        const clip = clips[j];\n        if (currentZ < zs[j]) {\n          context.beginPath();\n          // counter-clockwise (outer ring) for current tile\n          context.moveTo(currentClip[0], currentClip[1]);\n          context.lineTo(currentClip[2], currentClip[3]);\n          context.lineTo(currentClip[4], currentClip[5]);\n          context.lineTo(currentClip[6], currentClip[7]);\n          // clockwise (inner ring) for higher resolution tile\n          context.moveTo(clip[6], clip[7]);\n          context.lineTo(clip[4], clip[5]);\n          context.lineTo(clip[2], clip[3]);\n          context.lineTo(clip[0], clip[1]);\n          context.clip();\n        }\n      }\n      replayGroup.replay(context, transform, rotation, {}, replayTypes, declutterReplays);\n      context.restore();\n      clips.push(currentClip);\n      zs.push(currentZ);\n    }\n  }\n  if (declutterReplays) {\n    replayDeclutter(declutterReplays, context, rotation);\n  }\n  if (rotation) {\n    rotateAtOffset(context, rotation,\n      /** @type {number} */ (offsetX), /** @type {number} */ (offsetY));\n  }\n  CanvasTileLayerRenderer.prototype.postCompose.apply(this, arguments);\n};\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {(module:ol/style/Style|Array.<module:ol/style/Style>)} styles The style or array of styles.\n * @param {module:ol/render/canvas/ReplayGroup} replayGroup Replay group.\n * @return {boolean} `true` if an image is loading.\n */\nCanvasVectorTileLayerRenderer.prototype.renderFeature = function(feature, squaredTolerance, styles, replayGroup) {\n  if (!styles) {\n    return false;\n  }\n  let loading = false;\n  if (Array.isArray(styles)) {\n    for (let i = 0, ii = styles.length; i < ii; ++i) {\n      loading = renderFeature(\n        replayGroup, feature, styles[i], squaredTolerance,\n        this.handleStyleImageChange_, this) || loading;\n    }\n  } else {\n    loading = renderFeature(\n      replayGroup, feature, styles, squaredTolerance,\n      this.handleStyleImageChange_, this);\n  }\n  return loading;\n};\n\n\n/**\n * @param {module:ol/VectorImageTile} tile Tile.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @private\n */\nCanvasVectorTileLayerRenderer.prototype.renderTileImage_ = function(\n  tile, pixelRatio, projection) {\n  const layer = this.getLayer();\n  const replayState = tile.getReplayState(layer);\n  const revision = layer.getRevision();\n  const replays = IMAGE_REPLAYS[layer.getRenderMode()];\n  if (replays && replayState.renderedTileRevision !== revision) {\n    replayState.renderedTileRevision = revision;\n    const tileCoord = tile.wrappedTileCoord;\n    const z = tileCoord[0];\n    const source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n    const tileGrid = source.getTileGridForProjection(projection);\n    const resolution = tileGrid.getResolution(z);\n    const context = tile.getContext(layer);\n    const size = source.getTilePixelSize(z, pixelRatio, projection);\n    context.canvas.width = size[0];\n    context.canvas.height = size[1];\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    for (let i = 0, ii = tile.tileKeys.length; i < ii; ++i) {\n      const sourceTile = tile.getTile(tile.tileKeys[i]);\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      const pixelScale = pixelRatio / resolution;\n      const transform = resetTransform(this.tmpTransform_);\n      scaleTransform(transform, pixelScale, -pixelScale);\n      translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n      const replayGroup = sourceTile.getReplayGroup(layer, tile.tileCoord.toString());\n      replayGroup.replay(context, transform, 0, {}, replays);\n    }\n  }\n};\n\nexport default CanvasVectorTileLayerRenderer;\n","/**\n * @module ol/Map\n */\nimport {inherits} from './index.js';\nimport PluggableMap from './PluggableMap.js';\nimport {defaults as defaultControls} from './control/util.js';\nimport {defaults as defaultInteractions} from './interaction.js';\nimport {assign} from './obj.js';\nimport CanvasImageLayerRenderer from './renderer/canvas/ImageLayer.js';\nimport CanvasMapRenderer from './renderer/canvas/Map.js';\nimport CanvasTileLayerRenderer from './renderer/canvas/TileLayer.js';\nimport CanvasVectorLayerRenderer from './renderer/canvas/VectorLayer.js';\nimport CanvasVectorTileLayerRenderer from './renderer/canvas/VectorTileLayer.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @constructor\n * @extends {module:ol/PluggableMap}\n * @param {module:ol/PluggableMap~MapOptions} options Map options.\n * @fires module:ol/MapBrowserEvent~MapBrowserEvent\n * @fires module:ol/MapEvent~MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nconst Map = function(options) {\n  options = assign({}, options);\n  if (!options.controls) {\n    options.controls = defaultControls();\n  }\n  if (!options.interactions) {\n    options.interactions = defaultInteractions();\n  }\n\n  PluggableMap.call(this, options);\n};\n\ninherits(Map, PluggableMap);\n\nMap.prototype.createRenderer = function() {\n  const renderer = new CanvasMapRenderer(this);\n  renderer.registerLayerRenderers([\n    CanvasImageLayerRenderer,\n    CanvasTileLayerRenderer,\n    CanvasVectorLayerRenderer,\n    CanvasVectorTileLayerRenderer\n  ]);\n  return renderer;\n};\n\nexport default Map;\n","/**\n * @module ol/format/xsd\n */\nimport {getAllTextContent, DOCUMENT} from '../xml.js';\nimport {padNumber} from '../string.js';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  const s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  const s = getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  const s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeInteger(node) {\n  const s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, (bool) ? '1' : '0');\n}\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(DOCUMENT.createCDATASection(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string = date.getUTCFullYear() + '-' +\n      padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      padNumber(date.getUTCDate(), 2) + 'T' +\n      padNumber(date.getUTCHours(), 2) + ':' +\n      padNumber(date.getUTCMinutes(), 2) + ':' +\n      padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n","/**\n * @module ol/proj/epsg3857\n */\nimport {inherits} from '../index.js';\nimport {cosh} from '../math.js';\nimport Projection from '../proj/Projection.js';\nimport Units from '../proj/Units.js';\n\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n\n/**\n * @const\n * @type {module:ol/extent~Extent}\n */\nexport const EXTENT = [\n  -HALF_SIZE, -HALF_SIZE,\n  HALF_SIZE, HALF_SIZE\n];\n\n\n/**\n * @const\n * @type {module:ol/extent~Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n *\n * @constructor\n * @extends {module:ol/proj/Projection}\n * @param {string} code Code.\n */\nfunction EPSG3857Projection(code) {\n  Projection.call(this, {\n    code: code,\n    units: Units.METERS,\n    extent: EXTENT,\n    global: true,\n    worldExtent: WORLD_EXTENT,\n    getPointResolution: function(resolution, point) {\n      return resolution / cosh(point[1] / RADIUS);\n    }\n  });\n}\ninherits(EPSG3857Projection, Projection);\n\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array.<module:ol/proj/Projection>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array.<number>} input Input array of coordinate values.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array.<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  const halfSize = HALF_SIZE;\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = halfSize * input[i] / 180;\n    let y = RADIUS *\n        Math.log(Math.tan(Math.PI * (input[i + 1] + 90) / 360));\n    if (y > halfSize) {\n      y = halfSize;\n    } else if (y < -halfSize) {\n      y = -halfSize;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array.<number>} input Input array of coordinate values.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array.<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = 180 * input[i] / HALF_SIZE;\n    output[i + 1] = 360 * Math.atan(\n      Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport {inherits} from '../index.js';\nimport Projection from '../proj/Projection.js';\nimport Units from '../proj/Units.js';\n\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {module:ol/extent~Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = Math.PI * RADIUS / 180;\n\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n *\n * @constructor\n * @extends {module:ol/proj/Projection}\n * @param {string} code Code.\n * @param {string=} opt_axisOrientation Axis orientation.\n */\nfunction EPSG4326Projection(code, opt_axisOrientation) {\n  Projection.call(this, {\n    code: code,\n    units: Units.DEGREES,\n    extent: EXTENT,\n    axisOrientation: opt_axisOrientation,\n    global: true,\n    metersPerUnit: METERS_PER_UNIT,\n    worldExtent: EXTENT\n  });\n}\ninherits(EPSG4326Projection, Projection);\n\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array.<module:ol/proj/Projection>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n","/**\n * @module ol/proj/projections\n */\n\n\n/**\n * @type {Object.<string, module:ol/proj/Projection>}\n */\nlet cache = {};\n\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {module:ol/proj/Projection} The projection (if cached).\n */\nexport function get(code) {\n  return cache[code] || null;\n}\n\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {module:ol/proj/Projection} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the {@link http://proj4js.org/}\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * {@link https://epsg.io/}, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {getDistance} from './sphere.js';\nimport {applyTransform} from './extent.js';\nimport {modulo} from './math.js';\nimport {toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport * as projections from './proj/projections.js';\nimport {add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc} from './proj/transforms.js';\n\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {module:ol/proj/Projection|string|undefined} ProjectionLike\n * @api\n */\n\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array.<number>, Array.<number>=, number=): Array.<number>} TransformFunction\n * @api\n */\n\n\nexport {METERS_PER_UNIT};\n\n\n/**\n * @param {Array.<number>} input Input coordinate array.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array.<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n\n/**\n * @param {Array.<number>} input Input coordinate array.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array.<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {module:ol/proj/Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  projections.add(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n\n/**\n * @param {Array.<module:ol/proj/Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {module:ol/proj~ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {module:ol/proj/Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  let projection = null;\n  if (projectionLike instanceof Projection) {\n    projection = projectionLike;\n  } else if (typeof projectionLike === 'string') {\n    const code = projectionLike;\n    projection = projections.get(code);\n  }\n  return projection;\n}\n\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {module:ol/proj~ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {module:ol/coordinate~Coordinate} point Point to find adjusted resolution at.\n * @param {module:ol/proj/Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n  } else {\n    const units = projection.getUnits();\n    if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(projection, get('EPSG:4326'));\n      let vertices = [\n        point[0] - resolution / 2, point[1],\n        point[0] + resolution / 2, point[1],\n        point[0], point[1] - resolution / 2,\n        point[0], point[1] + resolution / 2\n      ];\n      vertices = toEPSG4326(vertices, vertices, 2);\n      const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n      const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n      pointResolution = (width + height) / 2;\n      const metersPerUnit = opt_units ?\n        METERS_PER_UNIT[opt_units] :\n        projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array.<module:ol/proj/Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function(source) {\n    projections.forEach(function(destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array.<module:ol/proj/Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array.<module:ol/proj/Projection>} projections2 Projections with equal\n *     meaning.\n * @param {module:ol/proj~TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {module:ol/proj~TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n  projections1.forEach(function(projection1) {\n    projections2.forEach(function(projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  projections.clear();\n  clearTransformFuncs();\n}\n\n\n/**\n * @param {module:ol/proj/Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {module:ol/proj/Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return (\n      /** @type {module:ol/proj/Projection} */ (projection)\n    );\n  }\n}\n\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(module:ol/coordinate~Coordinate): module:ol/coordinate~Coordinate} coordTransform Coordinate\n *     transform.\n * @return {module:ol/proj~TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array.<number>} input Input.\n     * @param {Array.<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array.<number>} Output.\n     */\n    function(input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    });\n}\n\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {module:ol/proj~ProjectionLike} source Source projection.\n * @param {module:ol/proj~ProjectionLike} destination Destination projection.\n * @param {function(module:ol/coordinate~Coordinate): module:ol/coordinate~Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(module:ol/coordinate~Coordinate): module:ol/coordinate~Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n  addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {module:ol/proj~ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {module:ol/coordinate~Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(coordinate, 'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {module:ol/coordinate~Coordinate} coordinate Projected coordinate.\n * @param {module:ol/proj~ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {module:ol/coordinate~Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {module:ol/proj/Projection} projection1 Projection 1.\n * @param {module:ol/proj/Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {module:ol/proj/Projection} sourceProjection Source Projection object.\n * @param {module:ol/proj/Projection} destinationProjection Destination Projection\n *     object.\n * @return {module:ol/proj~TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {module:ol/proj~ProjectionLike} source Source.\n * @param {module:ol/proj~ProjectionLike} destination Destination.\n * @return {module:ol/proj~TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/proj~ProjectionLike} source Source projection-like.\n * @param {module:ol/proj~ProjectionLike} destination Destination projection-like.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {module:ol/extent~Extent} extent The extent to transform.\n * @param {module:ol/proj~ProjectionLike} source Source projection-like.\n * @param {module:ol/proj~ProjectionLike} destination Destination projection-like.\n * @return {module:ol/extent~Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc);\n}\n\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {module:ol/coordinate~Coordinate} point Point.\n * @param {module:ol/proj/Projection} sourceProjection Source projection.\n * @param {module:ol/proj/Projection} destinationProjection Destination projection.\n * @return {module:ol/coordinate~Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n  const transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n  return transformFunc(point);\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\n\naddCommon();\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {Object} [bindTo]\n * @property {module:ol/events~ListenerFunction} [boundListener]\n * @property {boolean} callOnce\n * @property {number} [deleteIndex]\n * @property {module:ol/events~ListenerFunction} listener\n * @property {EventTarget|module:ol/events/EventTarget} target\n * @property {string} type\n * @api\n */\n\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function(module:ol/events/Event)|function(module:ol/events/Event): boolean} ListenerFunction\n * @api\n */\n\n\n/**\n * @param {module:ol/events~EventsKey} listenerObj Listener object.\n * @return {module:ol/events~ListenerFunction} Bound listener.\n */\nexport function bindListener(listenerObj) {\n  const boundListener = function(evt) {\n    const listener = listenerObj.listener;\n    const bindTo = listenerObj.bindTo || listenerObj.target;\n    if (listenerObj.callOnce) {\n      unlistenByKey(listenerObj);\n    }\n    return listener.call(bindTo, evt);\n  };\n  listenerObj.boundListener = boundListener;\n  return boundListener;\n}\n\n\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!module:ol/events~EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {module:ol/events~EventsKey|undefined} The matching listener object.\n */\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n  let listenerObj;\n  for (let i = 0, ii = listeners.length; i < ii; ++i) {\n    listenerObj = listeners[i];\n    if (listenerObj.listener === listener &&\n        listenerObj.bindTo === opt_this) {\n      if (opt_setDeleteIndex) {\n        listenerObj.deleteIndex = i;\n      }\n      return listenerObj;\n    }\n  }\n  return undefined;\n}\n\n\n/**\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array.<module:ol/events~EventsKey>|undefined} Listeners.\n */\nexport function getListeners(target, type) {\n  const listenerMap = target.ol_lm;\n  return listenerMap ? listenerMap[type] : undefined;\n}\n\n\n/**\n * Get the lookup of listeners.  If one does not exist on the target, it is\n * created.\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n * @return {!Object.<string, Array.<module:ol/events~EventsKey>>} Map of\n *     listeners by event type.\n */\nfunction getListenerMap(target) {\n  let listenerMap = target.ol_lm;\n  if (!listenerMap) {\n    listenerMap = target.ol_lm = {};\n  }\n  return listenerMap;\n}\n\n\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n * @param {string} type Type.\n */\nfunction removeListeners(target, type) {\n  const listeners = getListeners(target, type);\n  if (listeners) {\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      target.removeEventListener(type, listeners[i].boundListener);\n      clear(listeners[i]);\n    }\n    listeners.length = 0;\n    const listenerMap = target.ol_lm;\n    if (listenerMap) {\n      delete listenerMap[type];\n      if (Object.keys(listenerMap).length === 0) {\n        delete target.ol_lm;\n      }\n    }\n  }\n}\n\n\n/**\n * Registers an event listener on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {module:ol/events~EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  const listenerMap = getListenerMap(target);\n  let listeners = listenerMap[type];\n  if (!listeners) {\n    listeners = listenerMap[type] = [];\n  }\n  let listenerObj = findListener(listeners, listener, opt_this, false);\n  if (listenerObj) {\n    if (!opt_once) {\n      // Turn one-off listener into a permanent one.\n      listenerObj.callOnce = false;\n    }\n  } else {\n    listenerObj = /** @type {module:ol/events~EventsKey} */ ({\n      bindTo: opt_this,\n      callOnce: !!opt_once,\n      listener: listener,\n      target: target,\n      type: type\n    });\n    target.addEventListener(type, bindListener(listenerObj));\n    listeners.push(listenerObj);\n  }\n\n  return listenerObj;\n}\n\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {module:ol/events~EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n\n/**\n * Unregisters an event listener on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\nexport function unlisten(target, type, listener, opt_this) {\n  const listeners = getListeners(target, type);\n  if (listeners) {\n    const listenerObj = findListener(listeners, listener, opt_this, true);\n    if (listenerObj) {\n      unlistenByKey(listenerObj);\n    }\n  }\n}\n\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {module:ol/events~EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.boundListener);\n    const listeners = getListeners(key.target, key.type);\n    if (listeners) {\n      const i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n      if (i !== -1) {\n        listeners.splice(i, 1);\n      }\n      if (listeners.length === 0) {\n        removeListeners(key.target, key.type);\n      }\n    }\n    clear(key);\n  }\n}\n\n\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n */\nexport function unlistenAll(target) {\n  const listenerMap = getListenerMap(target);\n  for (const type in listenerMap) {\n    removeListeners(target, type);\n  }\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle'\n};\n","/**\n * @module ol/layer/Heatmap\n */\nimport {listen} from '../events.js';\nimport {inherits} from '../index.js';\nimport {getChangeEventType} from '../Object.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport Icon from '../style/Icon.js';\nimport Style from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array.<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\n * of the heatmap, specified as an array of CSS color strings.\n * @property {number} [radius=8] Radius size in pixels.\n * @property {number} [blur=15] Blur size in pixels.\n * @property {number} [shadow=250] Shadow size in pixels.\n * @property {string|function(module:ol/Feature):number} [weight='weight'] The feature\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\n * should range from 0 to 1 (and values outside will be clamped to that range).\n * @property {module:ol/source/Vector} [source] Source.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  BLUR: 'blur',\n  GRADIENT: 'gradient',\n  RADIUS: 'radius'\n};\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\n\n\n/**\n * @classdesc\n * Layer for rendering vector data as a heatmap.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @constructor\n * @extends {module:ol/layer/Vector}\n * @fires module:ol/render/Event~RenderEvent\n * @param {module:ol/layer/Heatmap~Options=} opt_options Options.\n * @api\n */\nconst Heatmap = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const baseOptions = assign({}, options);\n\n  delete baseOptions.gradient;\n  delete baseOptions.radius;\n  delete baseOptions.blur;\n  delete baseOptions.shadow;\n  delete baseOptions.weight;\n  VectorLayer.call(this, /** @type {module:ol/layer/Vector~Options} */ (baseOptions));\n\n  /**\n   * @private\n   * @type {Uint8ClampedArray}\n   */\n  this.gradient_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.shadow_ = options.shadow !== undefined ? options.shadow : 250;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.circleImage_ = undefined;\n\n  /**\n   * @private\n   * @type {Array.<Array.<module:ol/style/Style>>}\n   */\n  this.styleCache_ = null;\n\n  listen(this,\n    getChangeEventType(Property.GRADIENT),\n    this.handleGradientChanged_, this);\n\n  this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\n\n  this.setBlur(options.blur !== undefined ? options.blur : 15);\n\n  this.setRadius(options.radius !== undefined ? options.radius : 8);\n\n  listen(this,\n    getChangeEventType(Property.BLUR),\n    this.handleStyleChanged_, this);\n  listen(this,\n    getChangeEventType(Property.RADIUS),\n    this.handleStyleChanged_, this);\n\n  this.handleStyleChanged_();\n\n  const weight = options.weight ? options.weight : 'weight';\n  let weightFunction;\n  if (typeof weight === 'string') {\n    weightFunction = function(feature) {\n      return feature.get(weight);\n    };\n  } else {\n    weightFunction = weight;\n  }\n\n  this.setStyle(function(feature, resolution) {\n    const weight = weightFunction(feature);\n    const opacity = weight !== undefined ? clamp(weight, 0, 1) : 1;\n    // cast to 8 bits\n    const index = (255 * opacity) | 0;\n    let style = this.styleCache_[index];\n    if (!style) {\n      style = [\n        new Style({\n          image: new Icon({\n            opacity: opacity,\n            src: this.circleImage_\n          })\n        })\n      ];\n      this.styleCache_[index] = style;\n    }\n    return style;\n  }.bind(this));\n\n  // For performance reasons, don't sort the features before rendering.\n  // The render order is not relevant for a heatmap representation.\n  this.setRenderOrder(null);\n\n  listen(this, RenderEventType.RENDER, this.handleRender_, this);\n};\n\ninherits(Heatmap, VectorLayer);\n\n\n/**\n * @param {Array.<string>} colors A list of colored.\n * @return {Uint8ClampedArray} An array.\n * @private\n */\nconst createGradient = function(colors) {\n  const width = 1;\n  const height = 256;\n  const context = createCanvasContext2D(width, height);\n\n  const gradient = context.createLinearGradient(0, 0, width, height);\n  const step = 1 / (colors.length - 1);\n  for (let i = 0, ii = colors.length; i < ii; ++i) {\n    gradient.addColorStop(i * step, colors[i]);\n  }\n\n  context.fillStyle = gradient;\n  context.fillRect(0, 0, width, height);\n\n  return context.getImageData(0, 0, width, height).data;\n};\n\n\n/**\n * @return {string} Data URL for a circle.\n * @private\n */\nHeatmap.prototype.createCircle_ = function() {\n  const radius = this.getRadius();\n  const blur = this.getBlur();\n  const halfSize = radius + blur + 1;\n  const size = 2 * halfSize;\n  const context = createCanvasContext2D(size, size);\n  context.shadowOffsetX = context.shadowOffsetY = this.shadow_;\n  context.shadowBlur = blur;\n  context.shadowColor = '#000';\n  context.beginPath();\n  const center = halfSize - this.shadow_;\n  context.arc(center, center, radius, 0, Math.PI * 2, true);\n  context.fill();\n  return context.canvas.toDataURL();\n};\n\n\n/**\n * Return the blur size in pixels.\n * @return {number} Blur size in pixels.\n * @api\n * @observable\n */\nHeatmap.prototype.getBlur = function() {\n  return /** @type {number} */ (this.get(Property.BLUR));\n};\n\n\n/**\n * Return the gradient colors as array of strings.\n * @return {Array.<string>} Colors.\n * @api\n * @observable\n */\nHeatmap.prototype.getGradient = function() {\n  return /** @type {Array.<string>} */ (this.get(Property.GRADIENT));\n};\n\n\n/**\n * Return the size of the radius in pixels.\n * @return {number} Radius size in pixel.\n * @api\n * @observable\n */\nHeatmap.prototype.getRadius = function() {\n  return /** @type {number} */ (this.get(Property.RADIUS));\n};\n\n\n/**\n * @private\n */\nHeatmap.prototype.handleGradientChanged_ = function() {\n  this.gradient_ = createGradient(this.getGradient());\n};\n\n\n/**\n * @private\n */\nHeatmap.prototype.handleStyleChanged_ = function() {\n  this.circleImage_ = this.createCircle_();\n  this.styleCache_ = new Array(256);\n  this.changed();\n};\n\n\n/**\n * @param {module:ol/render/Event} event Post compose event\n * @private\n */\nHeatmap.prototype.handleRender_ = function(event) {\n  const context = event.context;\n  const canvas = context.canvas;\n  const image = context.getImageData(0, 0, canvas.width, canvas.height);\n  const view8 = image.data;\n  for (let i = 0, ii = view8.length; i < ii; i += 4) {\n    const alpha = view8[i + 3] * 4;\n    if (alpha) {\n      view8[i] = this.gradient_[alpha];\n      view8[i + 1] = this.gradient_[alpha + 1];\n      view8[i + 2] = this.gradient_[alpha + 2];\n    }\n  }\n  context.putImageData(image, 0, 0);\n};\n\n\n/**\n * Set the blur size in pixels.\n * @param {number} blur Blur size in pixels.\n * @api\n * @observable\n */\nHeatmap.prototype.setBlur = function(blur) {\n  this.set(Property.BLUR, blur);\n};\n\n\n/**\n * Set the gradient colors as array of strings.\n * @param {Array.<string>} colors Gradient.\n * @api\n * @observable\n */\nHeatmap.prototype.setGradient = function(colors) {\n  this.set(Property.GRADIENT, colors);\n};\n\n\n/**\n * Set the size of the radius in pixels.\n * @param {number} radius Radius size in pixel.\n * @api\n * @observable\n */\nHeatmap.prototype.setRadius = function(radius) {\n  this.set(Property.RADIUS, radius);\n};\n\nexport default Heatmap;\n","/**\n * @module ol/layer/Tile\n */\nimport {inherits} from '../index.js';\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\nimport TileProperty from '../layer/TileProperty.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {module:ol/source/Tile} [source] Source for this layer.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @constructor\n * @extends {module:ol/layer/Layer}\n * @fires module:ol/render/Event~RenderEvent\n * @param {module:ol/layer/Tile~Options=} opt_options Tile layer options.\n * @api\n */\nconst TileLayer = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const baseOptions = assign({}, options);\n\n  delete baseOptions.preload;\n  delete baseOptions.useInterimTilesOnError;\n  Layer.call(this,  /** @type {module:ol/layer/Layer~Options} */ (baseOptions));\n\n  this.setPreload(options.preload !== undefined ? options.preload : 0);\n  this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n    options.useInterimTilesOnError : true);\n\n  /**\n   * The layer type.\n   * @protected\n   * @type {module:ol/LayerType}\n   */\n  this.type = LayerType.TILE;\n\n};\n\ninherits(TileLayer, Layer);\n\n\n/**\n * Return the level as number to which we will preload tiles up to.\n * @return {number} The level to preload tiles up to.\n * @observable\n * @api\n */\nTileLayer.prototype.getPreload = function() {\n  return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n};\n\n\n/**\n * Return the associated {@link module:ol/source/Tile tilesource} of the layer.\n * @function\n * @return {module:ol/source/Tile} Source.\n * @api\n */\nTileLayer.prototype.getSource;\n\n\n/**\n * Set the level as number to which we will preload tiles up to.\n * @param {number} preload The level to preload tiles up to.\n * @observable\n * @api\n */\nTileLayer.prototype.setPreload = function(preload) {\n  this.set(TileProperty.PRELOAD, preload);\n};\n\n\n/**\n * Whether we use interim tiles on error.\n * @return {boolean} Use interim tiles on error.\n * @observable\n * @api\n */\nTileLayer.prototype.getUseInterimTilesOnError = function() {\n  return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n};\n\n\n/**\n * Set whether we use interim tiles on error.\n * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n * @observable\n * @api\n */\nTileLayer.prototype.setUseInterimTilesOnError = function(useInterimTilesOnError) {\n  this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n};\nexport default TileLayer;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~Event#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  ERROR: 'error',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  MOUSEDOWN: 'mousedown',\n  MOUSEMOVE: 'mousemove',\n  MOUSEOUT: 'mouseout',\n  MOUSEUP: 'mouseup',\n  MOUSEWHEEL: 'mousewheel',\n  MSPOINTERDOWN: 'MSPointerDown',\n  RESIZE: 'resize',\n  TOUCHSTART: 'touchstart',\n  TOUCHMOVE: 'touchmove',\n  TOUCHEND: 'touchend',\n  WHEEL: 'wheel'\n};\n","/**\n * @module ol/obj\n */\n\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n *\n * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign = (typeof Object.assign === 'function') ? Object.assign : function(target, var_sources) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  const output = Object(target);\n  for (let i = 1, ii = arguments.length; i < ii; ++i) {\n    const source = arguments[i];\n    if (source !== undefined && source !== null) {\n      for (const key in source) {\n        if (source.hasOwnProperty(key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n  return output;\n};\n\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n\n/**\n * Get an array of property values from an object.\n * @param {Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport function getValues(object) {\n  const values = [];\n  for (const property in object) {\n    values.push(object[property]);\n  }\n  return values;\n}\n\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/array\n */\n\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array.<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + (high - low >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) { /* Too low. */\n      low  = mid + 1;\n\n    } else { /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n\n/**\n * Whether the array contains the given object.\n * @param {Array.<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n\n/**\n * @param {Array.<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n\n/**\n * @param {Array.<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n\n/**\n * @param {Array.<VALUE>} arr The array to modify.\n * @param {!Array.<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n\n/**\n * @param {Array.<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n\n/**\n * @param {Array.<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array.<*>} arr The array to sort (modifies original).\n * @param {Function} compareFnc Comparison function.\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function(a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n\n/**\n * @param {Array.<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function(el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n\n/**\n * @param {Array.<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function(currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || opt_strict && res === 0);\n  });\n}\n","/**\n * @module ol/source/CartoDB\n */\nimport {inherits} from '../index.js';\nimport {assign} from '../obj.js';\nimport SourceState from '../source/State.js';\nimport XYZ from '../source/XYZ.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [maxZoom=18] Max zoom.\n * @property {number} [minZoom] Minimum zoom.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {Object} [config] If using anonymous maps, the CartoDB config to use. See\n * {@link http://docs.cartodb.com/cartodb-platform/maps-api/anonymous-maps/}\n * for more detail.\n * If using named maps, a key-value lookup with the template parameters.\n * See {@link http://docs.cartodb.com/cartodb-platform/maps-api/named-maps/}\n * for more detail.\n * @property {string} [map] If using named maps, this will be the name of the template to load.\n * See {@link http://docs.cartodb.com/cartodb-platform/maps-api/named-maps/}\n * for more detail.\n * @property {string} account If using named maps, this will be the name of the template to load.\n */\n\n\n/**\n * @classdesc\n * Layer source for the CartoDB Maps API.\n *\n * @constructor\n * @extends {module:ol/source/XYZ}\n * @param {module:ol/source/CartoDB~Options=} options CartoDB options.\n * @api\n */\nconst CartoDB = function(options) {\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.account_ = options.account;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.mapId_ = options.map || '';\n\n  /**\n   * @type {!Object}\n   * @private\n   */\n  this.config_ = options.config || {};\n\n  /**\n   * @type {!Object.<string, CartoDBLayerInfo>}\n   * @private\n   */\n  this.templateCache_ = {};\n\n  XYZ.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 18,\n    minZoom: options.minZoom,\n    projection: options.projection,\n    state: SourceState.LOADING,\n    wrapX: options.wrapX\n  });\n  this.initializeMap_();\n};\n\ninherits(CartoDB, XYZ);\n\n\n/**\n * Returns the current config.\n * @return {!Object} The current configuration.\n * @api\n */\nCartoDB.prototype.getConfig = function() {\n  return this.config_;\n};\n\n\n/**\n * Updates the carto db config.\n * @param {Object} config a key-value lookup. Values will replace current values\n *     in the config.\n * @api\n */\nCartoDB.prototype.updateConfig = function(config) {\n  assign(this.config_, config);\n  this.initializeMap_();\n};\n\n\n/**\n * Sets the CartoDB config\n * @param {Object} config In the case of anonymous maps, a CartoDB configuration\n *     object.\n * If using named maps, a key-value lookup with the template parameters.\n * @api\n */\nCartoDB.prototype.setConfig = function(config) {\n  this.config_ = config || {};\n  this.initializeMap_();\n};\n\n\n/**\n * Issue a request to initialize the CartoDB map.\n * @private\n */\nCartoDB.prototype.initializeMap_ = function() {\n  const paramHash = JSON.stringify(this.config_);\n  if (this.templateCache_[paramHash]) {\n    this.applyTemplate_(this.templateCache_[paramHash]);\n    return;\n  }\n  let mapUrl = 'https://' + this.account_ + '.carto.com/api/v1/map';\n\n  if (this.mapId_) {\n    mapUrl += '/named/' + this.mapId_;\n  }\n\n  const client = new XMLHttpRequest();\n  client.addEventListener('load', this.handleInitResponse_.bind(this, paramHash));\n  client.addEventListener('error', this.handleInitError_.bind(this));\n  client.open('POST', mapUrl);\n  client.setRequestHeader('Content-type', 'application/json');\n  client.send(JSON.stringify(this.config_));\n};\n\n\n/**\n * Handle map initialization response.\n * @param {string} paramHash a hash representing the parameter set that was used\n *     for the request\n * @param {Event} event Event.\n * @private\n */\nCartoDB.prototype.handleInitResponse_ = function(paramHash, event) {\n  const client = /** @type {XMLHttpRequest} */ (event.target);\n  // status will be 0 for file:// urls\n  if (!client.status || client.status >= 200 && client.status < 300) {\n    let response;\n    try {\n      response = /** @type {CartoDBLayerInfo} */(JSON.parse(client.responseText));\n    } catch (err) {\n      this.setState(SourceState.ERROR);\n      return;\n    }\n    this.applyTemplate_(response);\n    this.templateCache_[paramHash] = response;\n    this.setState(SourceState.READY);\n  } else {\n    this.setState(SourceState.ERROR);\n  }\n};\n\n\n/**\n * @private\n * @param {Event} event Event.\n */\nCartoDB.prototype.handleInitError_ = function(event) {\n  this.setState(SourceState.ERROR);\n};\n\n\n/**\n * Apply the new tile urls returned by carto db\n * @param {CartoDBLayerInfo} data Result of carto db call.\n * @private\n */\nCartoDB.prototype.applyTemplate_ = function(data) {\n  const tilesUrl = 'https://' + data.cdn_url.https + '/' + this.account_ +\n      '/api/v1/map/' + data.layergroupid + '/{z}/{x}/{y}.png';\n  this.setUrl(tilesUrl);\n};\nexport default CartoDB;\n","/**\n * @module ol/source/Cluster\n */\n\nimport {getUid, inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport {scale as scaleCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {buffer, createEmpty, createOrUpdateFromCoordinate} from '../extent.js';\nimport Point from '../geom/Point.js';\nimport VectorSource from '../source/Vector.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [distance=20] Minimum distance in pixels between clusters.\n * @property {module:ol/extent~Extent} [extent] Extent.\n * @property {function(module:ol/Feature):module:ol/geom/Point} [geometryFunction]\n * Function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Point} as cluster calculation point for the feature. When a\n * feature should not be considered for clustering, the function should return\n * `null`. The default, which works when the underyling source contains point\n * features only, is\n * ```js\n * function(feature) {\n *   return feature.getGeometry();\n * }\n * ```\n * See {@link module:ol/geom/Polygon~Polygon#getInteriorPoint} for a way to get a cluster\n * calculation point for polygons.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {module:ol/source/Vector} source Source.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source to cluster vector data. Works out of the box with point\n * geometries. For other geometry types, or if not all geometries should be\n * considered for clustering, a custom `geometryFunction` can be defined.\n *\n * @constructor\n * @param {module:ol/source/Cluster~Options=} options Cluster options.\n * @extends {module:ol/source/Vector}\n * @api\n */\nconst Cluster = function(options) {\n  VectorSource.call(this, {\n    attributions: options.attributions,\n    extent: options.extent,\n    projection: options.projection,\n    wrapX: options.wrapX\n  });\n\n  /**\n   * @type {number|undefined}\n   * @protected\n   */\n  this.resolution = undefined;\n\n  /**\n   * @type {number}\n   * @protected\n   */\n  this.distance = options.distance !== undefined ? options.distance : 20;\n\n  /**\n   * @type {Array.<module:ol/Feature>}\n   * @protected\n   */\n  this.features = [];\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @return {module:ol/geom/Point} Cluster calculation point.\n   * @protected\n   */\n  this.geometryFunction = options.geometryFunction || function(feature) {\n    const geometry = /** @type {module:ol/geom/Point} */ (feature.getGeometry());\n    assert(geometry instanceof Point,\n      10); // The default `geometryFunction` can only handle `module:ol/geom/Point~Point` geometries\n    return geometry;\n  };\n\n  /**\n   * @type {module:ol/source/Vector}\n   * @protected\n   */\n  this.source = options.source;\n\n  listen(this.source, EventType.CHANGE, this.refresh, this);\n};\n\ninherits(Cluster, VectorSource);\n\n\n/**\n * Get the distance in pixels between clusters.\n * @return {number} Distance.\n * @api\n */\nCluster.prototype.getDistance = function() {\n  return this.distance;\n};\n\n\n/**\n * Get a reference to the wrapped source.\n * @return {module:ol/source/Vector} Source.\n * @api\n */\nCluster.prototype.getSource = function() {\n  return this.source;\n};\n\n\n/**\n * @inheritDoc\n */\nCluster.prototype.loadFeatures = function(extent, resolution, projection) {\n  this.source.loadFeatures(extent, resolution, projection);\n  if (resolution !== this.resolution) {\n    this.clear();\n    this.resolution = resolution;\n    this.cluster();\n    this.addFeatures(this.features);\n  }\n};\n\n\n/**\n * Set the distance in pixels between clusters.\n * @param {number} distance The distance in pixels.\n * @api\n */\nCluster.prototype.setDistance = function(distance) {\n  this.distance = distance;\n  this.refresh();\n};\n\n\n/**\n * handle the source changing\n * @override\n */\nCluster.prototype.refresh = function() {\n  this.clear();\n  this.cluster();\n  this.addFeatures(this.features);\n  VectorSource.prototype.refresh.call(this);\n};\n\n\n/**\n * @protected\n */\nCluster.prototype.cluster = function() {\n  if (this.resolution === undefined) {\n    return;\n  }\n  this.features.length = 0;\n  const extent = createEmpty();\n  const mapDistance = this.distance * this.resolution;\n  const features = this.source.getFeatures();\n\n  /**\n   * @type {!Object.<string, boolean>}\n   */\n  const clustered = {};\n\n  for (let i = 0, ii = features.length; i < ii; i++) {\n    const feature = features[i];\n    if (!(getUid(feature).toString() in clustered)) {\n      const geometry = this.geometryFunction(feature);\n      if (geometry) {\n        const coordinates = geometry.getCoordinates();\n        createOrUpdateFromCoordinate(coordinates, extent);\n        buffer(extent, mapDistance, extent);\n\n        let neighbors = this.source.getFeaturesInExtent(extent);\n        neighbors = neighbors.filter(function(neighbor) {\n          const uid = getUid(neighbor).toString();\n          if (!(uid in clustered)) {\n            clustered[uid] = true;\n            return true;\n          } else {\n            return false;\n          }\n        });\n        this.features.push(this.createCluster(neighbors));\n      }\n    }\n  }\n};\n\n\n/**\n * @param {Array.<module:ol/Feature>} features Features\n * @return {module:ol/Feature} The cluster feature.\n * @protected\n */\nCluster.prototype.createCluster = function(features) {\n  const centroid = [0, 0];\n  for (let i = features.length - 1; i >= 0; --i) {\n    const geometry = this.geometryFunction(features[i]);\n    if (geometry) {\n      addCoordinate(centroid, geometry.getCoordinates());\n    } else {\n      features.splice(i, 1);\n    }\n  }\n  scaleCoordinate(centroid, 1 / features.length);\n\n  const cluster = new Feature(new Point(centroid));\n  cluster.set('features', features);\n  return cluster;\n};\nexport default Cluster;\n","/**\n * @module ol/source/ImageArcGISRest\n */\nimport {inherits} from '../index.js';\nimport ImageWrapper from '../Image.js';\nimport {assert} from '../asserts.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport ImageSource, {defaultImageLoadFunction} from '../source/Image.js';\nimport {appendParams} from '../uri.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting the image from\n * the remote server.\n * @property {module:ol/Image~LoadFunction} [imageLoadFunction] Optional function to load an image given\n * a URL.\n * @property {Object.<string,*>} params ArcGIS Rest parameters. This field is optional. Service\n * defaults will be used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is\n * `IMAGE` by default. `TRANSPARENT` is `true` by default.  `BBOX, `SIZE`, `BBOXSR`, and `IMAGESR`\n * will be set dynamically. Set `LAYERS` to override the default service layer visibility. See\n * {@link http://resources.arcgis.com/en/help/arcgis-rest-api/index.html#/Export_Map/02r3000000v7000000/}\n * for further reference.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport,\n * `2` means twice the size of the map viewport, and so on.\n * @property {Array.<number>} [resolutions] Resolutions. If specified, requests will be made for\n * these resolutions only.\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The url\n * should include /MapServer or /ImageServer.\n */\n\n\n/**\n * @classdesc\n * Source for data from ArcGIS Rest services providing single, untiled images.\n * Useful when underlying map service has labels.\n *\n * If underlying map service is not using labels,\n * take advantage of ol image caching and use\n * {@link module:ol/source/TileArcGISRest} data source.\n *\n * @constructor\n * @fires ol/source/Image~ImageSourceEvent\n * @extends {module:ol/source/Image}\n * @param {module:ol/source/ImageArcGISRest~Options=} opt_options Image ArcGIS Rest Options.\n * @api\n */\nconst ImageArcGISRest = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {module:ol/Image~LoadFunction}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : defaultImageLoadFunction;\n\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {module:ol/Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.imageSize_ = [0, 0];\n\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageArcGISRest, ImageSource);\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageArcGISRest.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageArcGISRest.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n  pixelRatio = this.hidpi_ ? pixelRatio : 1;\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), extent)) {\n    return image;\n  }\n\n  const params = {\n    'F': 'image',\n    'FORMAT': 'PNG32',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  extent = extent.slice();\n  const centerX = (extent[0] + extent[2]) / 2;\n  const centerY = (extent[1] + extent[3]) / 2;\n  if (this.ratio_ != 1) {\n    const halfWidth = this.ratio_ * getWidth(extent) / 2;\n    const halfHeight = this.ratio_ * getHeight(extent) / 2;\n    extent[0] = centerX - halfWidth;\n    extent[1] = centerY - halfHeight;\n    extent[2] = centerX + halfWidth;\n    extent[3] = centerY + halfHeight;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  // Compute an integer width and height.\n  const width = Math.ceil(getWidth(extent) / imageResolution);\n  const height = Math.ceil(getHeight(extent) / imageResolution);\n\n  // Modify the extent to match the integer width and height.\n  extent[0] = centerX - imageResolution * width / 2;\n  extent[2] = centerX + imageResolution * width / 2;\n  extent[1] = centerY - imageResolution * height / 2;\n  extent[3] = centerY + imageResolution * height / 2;\n\n  this.imageSize_[0] = width;\n  this.imageSize_[1] = height;\n\n  const url = this.getRequestUrl_(extent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new ImageWrapper(extent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {module:ol/Image~LoadFunction} The image load function.\n * @api\n */\nImageArcGISRest.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/size~Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageArcGISRest.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n  // ArcGIS Server only wants the numeric portion of the projection ID.\n  const srid = projection.getCode().split(':').pop();\n\n  params['SIZE'] = size[0] + ',' + size[1];\n  params['BBOX'] = extent.join(',');\n  params['BBOXSR'] = srid;\n  params['IMAGESR'] = srid;\n  params['DPI'] = Math.round(90 * pixelRatio);\n\n  const url = this.url_;\n\n  const modifiedUrl = url\n    .replace(/MapServer\\/?$/, 'MapServer/export')\n    .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n  if (modifiedUrl == url) {\n    assert(false, 50); // `options.featureTypes` should be an Array\n  }\n  return appendParams(modifiedUrl, params);\n};\n\n\n/**\n * Return the URL used for this ArcGIS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageArcGISRest.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {module:ol/Image~LoadFunction} imageLoadFunction Image load function.\n * @api\n */\nImageArcGISRest.prototype.setImageLoadFunction = function(imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageArcGISRest.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageArcGISRest.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.image_ = null;\n  this.changed();\n};\nexport default ImageArcGISRest;\n","/**\n * @module ol/source/ImageCanvas\n */\nimport {inherits} from '../index.js';\nimport ImageCanvas from '../ImageCanvas.js';\nimport {containsExtent, getHeight, getWidth, scaleFromCenter} from '../extent.js';\nimport ImageSource from '../source/Image.js';\n\n\n/**\n * A function returning the canvas element (`{HTMLCanvasElement}`)\n * used by the source as an image. The arguments passed to the function are:\n * {@link module:ol/extent~Extent} the image extent, `{number}` the image resolution,\n * `{number}` the device pixel ratio, {@link module:ol/size~Size} the image size, and\n * {@link module:ol/proj/Projection} the image projection. The canvas returned by\n * this function is cached by the source. The this keyword inside the function\n * references the {@link module:ol/source/ImageCanvas}.\n *\n * @typedef {function(this:module:ol/ImageCanvas, module:ol/extent~Extent, number,\n *     number, module:ol/size~Size, module:ol/proj/Projection): HTMLCanvasElement} FunctionType\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {module:ol/source/ImageCanvas~FunctionType} [canvasFunction] Canvas function.\n * The function returning the canvas element used by the source\n * as an image. The arguments passed to the function are: `{module:ol/extent~Extent}` the\n * image extent, `{number}` the image resolution, `{number}` the device pixel\n * ratio, `{module:ol/size~Size}` the image size, and `{module:ol/proj/Projection~Projection}` the image\n * projection. The canvas returned by this function is cached by the source. If\n * the value returned by the function is later changed then\n * `changed` should be called on the source for the source to\n * invalidate the current cached image. See @link: {@link module:ol/Observable~Observable#changed}\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [ratio=1.5] Ratio. 1 means canvases are the size of the map viewport, 2 means twice the\n * width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array.<number>} [resolutions] Resolutions.\n * If specified, new canvases will be created for these resolutions\n * @property {module:ol/source/State} [state] Source state.\n */\n\n\n/**\n * @classdesc\n * Base class for image sources where a canvas element is the image.\n *\n * @constructor\n * @extends {module:ol/source/Image}\n * @param {module:ol/source/ImageCanvas~Options=} options ImageCanvas options.\n * @api\n */\nconst ImageCanvasSource = function(options) {\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions,\n    state: options.state\n  });\n\n  /**\n   * @private\n   * @type {module:ol/source/ImageCanvas~FunctionType}\n   */\n  this.canvasFunction_ = options.canvasFunction;\n\n  /**\n   * @private\n   * @type {module:ol/ImageCanvas}\n   */\n  this.canvas_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ?\n    options.ratio : 1.5;\n\n};\n\ninherits(ImageCanvasSource, ImageSource);\n\n\n/**\n * @inheritDoc\n */\nImageCanvasSource.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n  resolution = this.findNearestResolution(resolution);\n\n  let canvas = this.canvas_;\n  if (canvas &&\n      this.renderedRevision_ == this.getRevision() &&\n      canvas.getResolution() == resolution &&\n      canvas.getPixelRatio() == pixelRatio &&\n      containsExtent(canvas.getExtent(), extent)) {\n    return canvas;\n  }\n\n  extent = extent.slice();\n  scaleFromCenter(extent, this.ratio_);\n  const width = getWidth(extent) / resolution;\n  const height = getHeight(extent) / resolution;\n  const size = [width * pixelRatio, height * pixelRatio];\n\n  const canvasElement = this.canvasFunction_(\n    extent, resolution, pixelRatio, size, projection);\n  if (canvasElement) {\n    canvas = new ImageCanvas(extent, resolution, pixelRatio, canvasElement);\n  }\n  this.canvas_ = canvas;\n  this.renderedRevision_ = this.getRevision();\n\n  return canvas;\n};\nexport default ImageCanvasSource;\n","/**\n * @module ol/source/TileArcGISRest\n */\nimport {inherits} from '../index.js';\nimport {createEmpty} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {assign} from '../obj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.\n * Note that you must provide a `crossOrigin` value if you are using the WebGL renderer\n * or if you want to access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image}\n * for more detail.\n * @property {Object.<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service defaults will be\n * used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is `IMAGE` by\n * default. `TRANSPARENT` is `true` by default.  `BBOX, `SIZE`, `BBOXSR`,\n * and `IMAGESR` will be set dynamically. Set `LAYERS` to\n * override the default service layer visibility. See\n * {@link http://resources.arcgis.com/en/help/arcgis-rest-api/index.html#/Export_Map/02r3000000v7000000/}\n * for further reference.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL.\n * The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The\n * url should include /MapServer or /ImageServer.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.  To disable the opacity\n * transition, pass `transition: 0`.\n * @property {Array.<string>} urls ArcGIS Rest service urls. Use this instead of `url` when the ArcGIS\n * Service supports multiple urls for export requests.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data from ArcGIS Rest services. Map and Image\n * Services are supported.\n *\n * For cached ArcGIS services, better performance is available using the\n * {@link module:ol/source/XYZ~XYZ} data source.\n *\n * @constructor\n * @extends {module:ol/source/TileImage}\n * @param {module:ol/source/TileArcGISRest~Options=} opt_options Tile ArcGIS Rest options.\n * @api\n */\nconst TileArcGISRest = function(opt_options) {\n\n  const options = opt_options || {};\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.setKey(this.getKeyForParams_());\n};\n\ninherits(TileArcGISRest, TileImage);\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileArcGISRest.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileArcGISRest.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/size~Size} tileSize Tile size.\n * @param {module:ol/extent~Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileArcGISRest.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  // ArcGIS Server only wants the numeric portion of the projection ID.\n  const srid = projection.getCode().split(':').pop();\n\n  params['SIZE'] = tileSize[0] + ',' + tileSize[1];\n  params['BBOX'] = tileExtent.join(',');\n  params['BBOXSR'] = srid;\n  params['IMAGESR'] = srid;\n  params['DPI'] = Math.round(\n    params['DPI'] ? params['DPI'] * pixelRatio : 90 * pixelRatio\n  );\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(tileCoordHash(tileCoord), urls.length);\n    url = urls[index];\n  }\n\n  const modifiedUrl = url\n    .replace(/MapServer\\/?$/, 'MapServer/export')\n    .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n  return appendParams(modifiedUrl, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileArcGISRest.prototype.getTilePixelRatio = function(pixelRatio) {\n  return /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @inheritDoc\n */\nTileArcGISRest.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  const tileExtent = tileGrid.getTileCoordExtent(\n    tileCoord, this.tmpExtent_);\n  let tileSize = toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  if (pixelRatio != 1) {\n    tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  // Apply default params and override with user specified values.\n  const baseParams = {\n    'F': 'image',\n    'FORMAT': 'PNG32',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileArcGISRest.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.setKey(this.getKeyForParams_());\n};\nexport default TileArcGISRest;\n","/**\n * @module ol/source/TileDebug\n */\nimport {inherits} from '../index.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {toSize} from '../size.js';\nimport TileSource from '../source/Tile.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n\n/**\n * @constructor\n * @extends {module:ol/Tile}\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/size~Size} tileSize Tile size.\n * @param {string} text Text.\n */\nconst LabeledTile = function(tileCoord, tileSize, text) {\n\n  Tile.call(this, tileCoord, TileState.LOADED);\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.tileSize_ = tileSize;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.text_ = text;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = null;\n\n};\ninherits(LabeledTile, Tile);\n\n\n/**\n * Get the image element for this tile.\n * @return {HTMLCanvasElement} Image.\n */\nLabeledTile.prototype.getImage = function() {\n  if (this.canvas_) {\n    return this.canvas_;\n  } else {\n    const tileSize = this.tileSize_;\n    const context = createCanvasContext2D(tileSize[0], tileSize[1]);\n\n    context.strokeStyle = 'black';\n    context.strokeRect(0.5, 0.5, tileSize[0] + 0.5, tileSize[1] + 0.5);\n\n    context.fillStyle = 'black';\n    context.textAlign = 'center';\n    context.textBaseline = 'middle';\n    context.font = '24px sans-serif';\n    context.fillText(this.text_, tileSize[0] / 2, tileSize[1] / 2);\n\n    this.canvas_ = context.canvas;\n    return context.canvas;\n  }\n};\n\n\n/**\n * @override\n */\nLabeledTile.prototype.load = function() {};\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * A pseudo tile source, which does not fetch tiles from a server, but renders\n * a grid outline for the tile grid/projection along with the coordinates for\n * each tile. See examples/canvas-tiles for an example.\n *\n * Uses Canvas context2d, so requires Canvas support.\n *\n * @constructor\n * @extends {module:ol/source/Tile}\n * @param {module:ol/source/TileDebug~Options=} options Debug tile options.\n * @api\n */\nconst TileDebug = function(options) {\n\n  TileSource.call(this, {\n    opaque: false,\n    projection: options.projection,\n    tileGrid: options.tileGrid,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true\n  });\n\n};\n\ninherits(TileDebug, TileSource);\n\n\n/**\n * @inheritDoc\n */\nTileDebug.prototype.getTile = function(z, x, y) {\n  const tileCoordKey = getKeyZXY(z, x, y);\n  if (this.tileCache.containsKey(tileCoordKey)) {\n    return /** @type {!module:ol/source/TileDebug~LabeledTile} */ (this.tileCache.get(tileCoordKey));\n  } else {\n    const tileSize = toSize(this.tileGrid.getTileSize(z));\n    const tileCoord = [z, x, y];\n    const textTileCoord = this.getTileCoordForTileUrlFunction(tileCoord);\n    const text = !textTileCoord ? '' :\n      this.getTileCoordForTileUrlFunction(textTileCoord).toString();\n    const tile = new LabeledTile(tileCoord, tileSize, text);\n    this.tileCache.set(tileCoordKey, tile);\n    return tile;\n  }\n};\n\n\nexport default TileDebug;\n","/**\n * @module ol/source\n */\n\nexport {default as BingMaps} from './source/BingMaps.js';\nexport {default as CartoDB} from './source/CartoDB.js';\nexport {default as Cluster} from './source/Cluster.js';\nexport {default as Image} from './source/Image.js';\nexport {default as ImageArcGISRest} from './source/ImageArcGISRest.js';\nexport {default as ImageCanvas} from './source/ImageCanvas.js';\nexport {default as ImageMapGuide} from './source/ImageMapGuide.js';\nexport {default as ImageStatic} from './source/ImageStatic.js';\nexport {default as ImageWMS} from './source/ImageWMS.js';\nexport {default as OSM} from './source/OSM.js';\nexport {default as Raster} from './source/Raster.js';\nexport {default as Source} from './source/Source.js';\nexport {default as Stamen} from './source/Stamen.js';\nexport {default as Tile} from './source/Tile.js';\nexport {default as TileArcGISRest} from './source/TileArcGISRest.js';\nexport {default as TileDebug} from './source/TileDebug.js';\nexport {default as TileImage} from './source/TileImage.js';\nexport {default as TileJSON} from './source/TileJSON.js';\nexport {default as TileWMS} from './source/TileWMS.js';\nexport {default as UrlTile} from './source/UrlTile.js';\nexport {default as UTFGrid} from './source/UTFGrid.js';\nexport {default as Vector} from './source/Vector.js';\nexport {default as WMTS} from './source/WMTS.js';\nexport {default as XYZ} from './source/XYZ.js';\nexport {default as Zoomify} from './source/Zoomify.js';\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array.<number>} Transform\n */\n\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n\n/**\n * @private\n * @type {module:ol/transform~Transform}\n */\nconst tmp_ = new Array(6);\n\n\n/**\n * Create an identity transform.\n * @return {!module:ol/transform~Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @return {!module:ol/transform~Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!module:ol/transform~Transform} transform1 Transform parameters of matrix 1.\n * @param {!module:ol/transform~Transform} transform2 Transform parameters of matrix 2.\n * @return {!module:ol/transform~Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!module:ol/transform~Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!module:ol/transform~Transform} transform1 Matrix to set transform to.\n * @param {!module:ol/transform~Transform} transform2 Matrix to set transform from.\n * @return {!module:ol/transform~Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {module:ol/transform~Transform} transform The transformation.\n * @param {module:ol/coordinate~Coordinate|module:ol~Pixel} coordinate The coordinate to transform.\n * @return {module:ol/coordinate~Coordinate|module:ol~Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n\n/**\n * Applies rotation to the given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!module:ol/transform~Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n\n/**\n * Applies scale to a given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!module:ol/transform~Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n\n/**\n * Applies translation to the given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!module:ol/transform~Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!module:ol/transform~Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!module:ol/transform~Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n\n/**\n * Invert the given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @return {!module:ol/transform~Transform} Inverse of the transform.\n */\nexport function invert(transform) {\n  const det = determinant(transform);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = transform[0];\n  const b = transform[1];\n  const c = transform[2];\n  const d = transform[3];\n  const e = transform[4];\n  const f = transform[5];\n\n  transform[0] = d / det;\n  transform[1] = -b / det;\n  transform[2] = -c / det;\n  transform[3] = a / det;\n  transform[4] = (c * f - d * e) / det;\n  transform[5] = -(a * f - b * e) / det;\n\n  return transform;\n}\n\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!module:ol/transform~Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n  ABORT: 5\n};\n","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../index.js';\nimport XYZ from '../source/XYZ.js';\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=1.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {module:ol/source/XYZ}\n * @param {module:ol/source/OSM~Options=} [opt_options] Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\nexport default OSM;\n","/**\n * @module ol/math\n */\nimport {assert} from './asserts.js';\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh  = (function() {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function(x) {\n      const y = Math.exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n}());\n\n\n/**\n * @param {number} x X.\n * @return {number} The smallest power of two greater than or equal to x.\n */\nexport function roundUpToPowerOfTwo(x) {\n  assert(0 < x, 29); // `x` must be greater than `0`\n  return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\n}\n\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array.<Array.<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array.<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return angleInRadians * 180 / Math.PI;\n}\n\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return angleInDegrees * Math.PI / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/webgl\n */\n\n/**\n * Constants taken from goog.webgl\n */\n\n\n/**\n * @const\n * @type {number}\n */\nexport const ONE = 1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const SRC_ALPHA = 0x0302;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const COLOR_ATTACHMENT0 = 0x8CE0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const COLOR_BUFFER_BIT = 0x00004000;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TRIANGLES = 0x0004;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TRIANGLE_STRIP = 0x0005;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const ONE_MINUS_SRC_ALPHA = 0x0303;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const ARRAY_BUFFER = 0x8892;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const ELEMENT_ARRAY_BUFFER = 0x8893;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const STREAM_DRAW = 0x88E0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const STATIC_DRAW = 0x88E4;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const DYNAMIC_DRAW = 0x88E8;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const CULL_FACE = 0x0B44;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const BLEND = 0x0BE2;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const STENCIL_TEST = 0x0B90;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const DEPTH_TEST = 0x0B71;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const SCISSOR_TEST = 0x0C11;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_BYTE = 0x1401;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_SHORT = 0x1403;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_INT = 0x1405;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const FLOAT = 0x1406;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const RGBA = 0x1908;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const FRAGMENT_SHADER = 0x8B30;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const VERTEX_SHADER = 0x8B31;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const LINK_STATUS = 0x8B82;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const LINEAR = 0x2601;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_MAG_FILTER = 0x2800;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_MIN_FILTER = 0x2801;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_WRAP_S = 0x2802;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_WRAP_T = 0x2803;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_2D = 0x0DE1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE0 = 0x84C0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const CLAMP_TO_EDGE = 0x812F;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const COMPILE_STATUS = 0x8B81;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const FRAMEBUFFER = 0x8D40;\n\n\n/** end of goog.webgl constants\n */\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst CONTEXT_IDS = [\n  'experimental-webgl',\n  'webgl',\n  'webkit-3d',\n  'moz-webgl'\n];\n\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object=} opt_attributes Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, opt_attributes) {\n  const ii = CONTEXT_IDS.length;\n  for (let i = 0; i < ii; ++i) {\n    try {\n      const context = canvas.getContext(CONTEXT_IDS[i], opt_attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM'\n};\n","/**\n * @module ol/source/Vector\n */\n\nimport {getUid, inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {extend} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {xhr} from '../featureloader.js';\nimport {TRUE, UNDEFINED} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {isEmpty, getValues} from '../obj.js';\nimport Source from '../source/Source.js';\nimport SourceState from '../source/State.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(module:ol/extent~Extent, number): Array.<module:ol/extent~Extent>} LoadingStrategy\n * @api\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {string} type Type.\n * @param {module:ol/Feature=} opt_feature Feature.\n */\nexport const VectorSourceEvent = function(type, opt_feature) {\n\n  Event.call(this, type);\n\n  /**\n   * The feature being added or removed.\n   * @type {module:ol/Feature|undefined}\n   * @api\n   */\n  this.feature = opt_feature;\n\n};\ninherits(VectorSourceEvent, Event);\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {Array.<module:ol/Feature>|module:ol/Collection.<module:ol/Feature>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {module:ol/format/Feature} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {module:ol/featureloader~FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {module:ol/source/Vector~LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|module:ol/featureloader~FeatureUrlfunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlfunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @constructor\n * @extends {module:ol/source/Source}\n * @fires ol/source/Vector~VectorSourceEvent\n * @param {module:ol/source/Vector~Options=} opt_options Vector source options.\n * @api\n */\nconst VectorSource = function(opt_options) {\n\n  const options = opt_options || {};\n\n  Source.call(this, {\n    attributions: options.attributions,\n    projection: undefined,\n    state: SourceState.READY,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true\n  });\n\n  /**\n   * @private\n   * @type {module:ol/featureloader~FeatureLoader}\n   */\n  this.loader_ = UNDEFINED;\n\n  /**\n   * @private\n   * @type {module:ol/format/Feature|undefined}\n   */\n  this.format_ = options.format;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n  /**\n   * @private\n   * @type {string|module:ol/featureloader~FeatureUrlFunction|undefined}\n   */\n  this.url_ = options.url;\n\n  if (options.loader !== undefined) {\n    this.loader_ = options.loader;\n  } else if (this.url_ !== undefined) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    // create a XHR feature loader for \"url\" and \"format\"\n    this.loader_ = xhr(this.url_, /** @type {module:ol/format/Feature} */ (this.format_));\n  }\n\n  /**\n   * @private\n   * @type {module:ol/source/Vector~LoadingStrategy}\n   */\n  this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n\n  const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n  /**\n   * @private\n   * @type {module:ol/structs/RBush.<module:ol/Feature>}\n   */\n  this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n  /**\n   * @private\n   * @type {module:ol/structs/RBush.<{extent: module:ol/extent~Extent}>}\n   */\n  this.loadedExtentsRtree_ = new RBush();\n\n  /**\n   * @private\n   * @type {!Object.<string, module:ol/Feature>}\n   */\n  this.nullGeometryFeatures_ = {};\n\n  /**\n   * A lookup of features by id (the return from feature.getId()).\n   * @private\n   * @type {!Object.<string, module:ol/Feature>}\n   */\n  this.idIndex_ = {};\n\n  /**\n   * A lookup of features without id (keyed by getUid(feature)).\n   * @private\n   * @type {!Object.<string, module:ol/Feature>}\n   */\n  this.undefIdIndex_ = {};\n\n  /**\n   * @private\n   * @type {Object.<string, Array.<module:ol/events~EventsKey>>}\n   */\n  this.featureChangeKeys_ = {};\n\n  /**\n   * @private\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   */\n  this.featuresCollection_ = null;\n\n  let collection, features;\n  if (options.features instanceof Collection) {\n    collection = options.features;\n    features = collection.getArray();\n  } else if (Array.isArray(options.features)) {\n    features = options.features;\n  }\n  if (!useSpatialIndex && collection === undefined) {\n    collection = new Collection(features);\n  }\n  if (features !== undefined) {\n    this.addFeaturesInternal(features);\n  }\n  if (collection !== undefined) {\n    this.bindFeaturesCollection_(collection);\n  }\n\n};\n\ninherits(VectorSource, Source);\n\n\n/**\n * Add a single feature to the source.  If you want to add a batch of features\n * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n * instead. A feature will not be added to the source if feature with\n * the same id is already there. The reason for this behavior is to avoid\n * feature duplication when using bbox or tile loading strategies.\n * @param {module:ol/Feature} feature Feature to add.\n * @api\n */\nVectorSource.prototype.addFeature = function(feature) {\n  this.addFeatureInternal(feature);\n  this.changed();\n};\n\n\n/**\n * Add a feature without firing a `change` event.\n * @param {module:ol/Feature} feature Feature.\n * @protected\n */\nVectorSource.prototype.addFeatureInternal = function(feature) {\n  const featureKey = getUid(feature).toString();\n\n  if (!this.addToIndex_(featureKey, feature)) {\n    return;\n  }\n\n  this.setupChangeEvents_(featureKey, feature);\n\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    const extent = geometry.getExtent();\n    if (this.featuresRtree_) {\n      this.featuresRtree_.insert(extent, feature);\n    }\n  } else {\n    this.nullGeometryFeatures_[featureKey] = feature;\n  }\n\n  this.dispatchEvent(\n    new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n};\n\n\n/**\n * @param {string} featureKey Unique identifier for the feature.\n * @param {module:ol/Feature} feature The feature.\n * @private\n */\nVectorSource.prototype.setupChangeEvents_ = function(featureKey, feature) {\n  this.featureChangeKeys_[featureKey] = [\n    listen(feature, EventType.CHANGE,\n      this.handleFeatureChange_, this),\n    listen(feature, ObjectEventType.PROPERTYCHANGE,\n      this.handleFeatureChange_, this)\n  ];\n};\n\n\n/**\n * @param {string} featureKey Unique identifier for the feature.\n * @param {module:ol/Feature} feature The feature.\n * @return {boolean} The feature is \"valid\", in the sense that it is also a\n *     candidate for insertion into the Rtree.\n * @private\n */\nVectorSource.prototype.addToIndex_ = function(featureKey, feature) {\n  let valid = true;\n  const id = feature.getId();\n  if (id !== undefined) {\n    if (!(id.toString() in this.idIndex_)) {\n      this.idIndex_[id.toString()] = feature;\n    } else {\n      valid = false;\n    }\n  } else {\n    assert(!(featureKey in this.undefIdIndex_),\n      30); // The passed `feature` was already added to the source\n    this.undefIdIndex_[featureKey] = feature;\n  }\n  return valid;\n};\n\n\n/**\n * Add a batch of features to the source.\n * @param {Array.<module:ol/Feature>} features Features to add.\n * @api\n */\nVectorSource.prototype.addFeatures = function(features) {\n  this.addFeaturesInternal(features);\n  this.changed();\n};\n\n\n/**\n * Add features without firing a `change` event.\n * @param {Array.<module:ol/Feature>} features Features.\n * @protected\n */\nVectorSource.prototype.addFeaturesInternal = function(features) {\n  const extents = [];\n  const newFeatures = [];\n  const geometryFeatures = [];\n\n  for (let i = 0, length = features.length; i < length; i++) {\n    const feature = features[i];\n    const featureKey = getUid(feature).toString();\n    if (this.addToIndex_(featureKey, feature)) {\n      newFeatures.push(feature);\n    }\n  }\n\n  for (let i = 0, length = newFeatures.length; i < length; i++) {\n    const feature = newFeatures[i];\n    const featureKey = getUid(feature).toString();\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      extents.push(extent);\n      geometryFeatures.push(feature);\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n  }\n  if (this.featuresRtree_) {\n    this.featuresRtree_.load(extents, geometryFeatures);\n  }\n\n  for (let i = 0, length = newFeatures.length; i < length; i++) {\n    this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\n  }\n};\n\n\n/**\n * @param {!module:ol/Collection.<module:ol/Feature>} collection Collection.\n * @private\n */\nVectorSource.prototype.bindFeaturesCollection_ = function(collection) {\n  let modifyingCollection = false;\n  listen(this, VectorEventType.ADDFEATURE,\n    function(evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        collection.push(evt.feature);\n        modifyingCollection = false;\n      }\n    });\n  listen(this, VectorEventType.REMOVEFEATURE,\n    function(evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        collection.remove(evt.feature);\n        modifyingCollection = false;\n      }\n    });\n  listen(collection, CollectionEventType.ADD,\n    function(evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        this.addFeature(/** @type {module:ol/Feature} */ (evt.element));\n        modifyingCollection = false;\n      }\n    }, this);\n  listen(collection, CollectionEventType.REMOVE,\n    function(evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        this.removeFeature(/** @type {module:ol/Feature} */ (evt.element));\n        modifyingCollection = false;\n      }\n    }, this);\n  this.featuresCollection_ = collection;\n};\n\n\n/**\n * Remove all features from the source.\n * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector~VectorSourceEvent#removefeature} events.\n * @api\n */\nVectorSource.prototype.clear = function(opt_fast) {\n  if (opt_fast) {\n    for (const featureId in this.featureChangeKeys_) {\n      const keys = this.featureChangeKeys_[featureId];\n      keys.forEach(unlistenByKey);\n    }\n    if (!this.featuresCollection_) {\n      this.featureChangeKeys_ = {};\n      this.idIndex_ = {};\n      this.undefIdIndex_ = {};\n    }\n  } else {\n    if (this.featuresRtree_) {\n      this.featuresRtree_.forEach(this.removeFeatureInternal, this);\n      for (const id in this.nullGeometryFeatures_) {\n        this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n      }\n    }\n  }\n  if (this.featuresCollection_) {\n    this.featuresCollection_.clear();\n  }\n\n  if (this.featuresRtree_) {\n    this.featuresRtree_.clear();\n  }\n  this.loadedExtentsRtree_.clear();\n  this.nullGeometryFeatures_ = {};\n\n  const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n  this.dispatchEvent(clearEvent);\n  this.changed();\n};\n\n\n/**\n * Iterate through all features on the source, calling the provided callback\n * with each one.  If the callback returns any \"truthy\" value, iteration will\n * stop and the function will return the same value.\n * Note: this function only iterate through the feature that have a defined geometry.\n *\n * @param {function(module:ol/Feature): T} callback Called with each feature\n *     on the source.  Return a truthy value to stop iteration.\n * @return {T|undefined} The return value from the last call to the callback.\n * @template T\n * @api\n */\nVectorSource.prototype.forEachFeature = function(callback) {\n  if (this.featuresRtree_) {\n    return this.featuresRtree_.forEach(callback);\n  } else if (this.featuresCollection_) {\n    return this.featuresCollection_.forEach(callback);\n  }\n};\n\n\n/**\n * Iterate through all features whose geometries contain the provided\n * coordinate, calling the callback with each feature.  If the callback returns\n * a \"truthy\" value, iteration will stop and the function will return the same\n * value.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {function(module:ol/Feature): T} callback Called with each feature\n *     whose goemetry contains the provided coordinate.\n * @return {T|undefined} The return value from the last call to the callback.\n * @template T\n */\nVectorSource.prototype.forEachFeatureAtCoordinateDirect = function(coordinate, callback) {\n  const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n  return this.forEachFeatureInExtent(extent, function(feature) {\n    const geometry = feature.getGeometry();\n    if (geometry.intersectsCoordinate(coordinate)) {\n      return callback(feature);\n    } else {\n      return undefined;\n    }\n  });\n};\n\n\n/**\n * Iterate through all features whose bounding box intersects the provided\n * extent (note that the feature's geometry may not intersect the extent),\n * calling the callback with each feature.  If the callback returns a \"truthy\"\n * value, iteration will stop and the function will return the same value.\n *\n * If you are interested in features whose geometry intersects an extent, call\n * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n *\n * When `useSpatialIndex` is set to false, this method will loop through all\n * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(module:ol/Feature): T} callback Called with each feature\n *     whose bounding box intersects the provided extent.\n * @return {T|undefined} The return value from the last call to the callback.\n * @template T\n * @api\n */\nVectorSource.prototype.forEachFeatureInExtent = function(extent, callback) {\n  if (this.featuresRtree_) {\n    return this.featuresRtree_.forEachInExtent(extent, callback);\n  } else if (this.featuresCollection_) {\n    return this.featuresCollection_.forEach(callback);\n  }\n};\n\n\n/**\n * Iterate through all features whose geometry intersects the provided extent,\n * calling the callback with each feature.  If the callback returns a \"truthy\"\n * value, iteration will stop and the function will return the same value.\n *\n * If you only want to test for bounding box intersection, call the\n * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(module:ol/Feature): T} callback Called with each feature\n *     whose geometry intersects the provided extent.\n * @return {T|undefined} The return value from the last call to the callback.\n * @template T\n * @api\n */\nVectorSource.prototype.forEachFeatureIntersectingExtent = function(extent, callback) {\n  return this.forEachFeatureInExtent(extent,\n    /**\n     * @param {module:ol/Feature} feature Feature.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     */\n    function(feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsExtent(extent)) {\n        const result = callback(feature);\n        if (result) {\n          return result;\n        }\n      }\n    });\n};\n\n\n/**\n * Get the features collection associated with this source. Will be `null`\n * unless the source was configured with `useSpatialIndex` set to `false`, or\n * with an {@link module:ol/Collection} as `features`.\n * @return {module:ol/Collection.<module:ol/Feature>} The collection of features.\n * @api\n */\nVectorSource.prototype.getFeaturesCollection = function() {\n  return this.featuresCollection_;\n};\n\n\n/**\n * Get all features on the source in random order.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nVectorSource.prototype.getFeatures = function() {\n  let features;\n  if (this.featuresCollection_) {\n    features = this.featuresCollection_.getArray();\n  } else if (this.featuresRtree_) {\n    features = this.featuresRtree_.getAll();\n    if (!isEmpty(this.nullGeometryFeatures_)) {\n      extend(features, getValues(this.nullGeometryFeatures_));\n    }\n  }\n  return (\n    /** @type {Array.<module:ol/Feature>} */ (features)\n  );\n};\n\n\n/**\n * Get all features whose geometry intersects the provided coordinate.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nVectorSource.prototype.getFeaturesAtCoordinate = function(coordinate) {\n  const features = [];\n  this.forEachFeatureAtCoordinateDirect(coordinate, function(feature) {\n    features.push(feature);\n  });\n  return features;\n};\n\n\n/**\n * Get all features in the provided extent.  Note that this returns an array of\n * all features intersecting the given extent in random order (so it may include\n * features whose geometries do not intersect the extent).\n *\n * This method is not available when the source is configured with\n * `useSpatialIndex` set to `false`.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nVectorSource.prototype.getFeaturesInExtent = function(extent) {\n  return this.featuresRtree_.getInExtent(extent);\n};\n\n\n/**\n * Get the closest feature to the provided coordinate.\n *\n * This method is not available when the source is configured with\n * `useSpatialIndex` set to `false`.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {function(module:ol/Feature):boolean=} opt_filter Feature filter function.\n *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n *     and it should return a boolean value. By default, no filtering is made.\n * @return {module:ol/Feature} Closest feature.\n * @api\n */\nVectorSource.prototype.getClosestFeatureToCoordinate = function(coordinate, opt_filter) {\n  // Find the closest feature using branch and bound.  We start searching an\n  // infinite extent, and find the distance from the first feature found.  This\n  // becomes the closest feature.  We then compute a smaller extent which any\n  // closer feature must intersect.  We continue searching with this smaller\n  // extent, trying to find a closer feature.  Every time we find a closer\n  // feature, we update the extent being searched so that any even closer\n  // feature must intersect it.  We continue until we run out of features.\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let closestFeature = null;\n  const closestPoint = [NaN, NaN];\n  let minSquaredDistance = Infinity;\n  const extent = [-Infinity, -Infinity, Infinity, Infinity];\n  const filter = opt_filter ? opt_filter : TRUE;\n  this.featuresRtree_.forEachInExtent(extent,\n    /**\n     * @param {module:ol/Feature} feature Feature.\n     */\n    function(feature) {\n      if (filter(feature)) {\n        const geometry = feature.getGeometry();\n        const previousMinSquaredDistance = minSquaredDistance;\n        minSquaredDistance = geometry.closestPointXY(\n          x, y, closestPoint, minSquaredDistance);\n        if (minSquaredDistance < previousMinSquaredDistance) {\n          closestFeature = feature;\n          // This is sneaky.  Reduce the extent that it is currently being\n          // searched while the R-Tree traversal using this same extent object\n          // is still in progress.  This is safe because the new extent is\n          // strictly contained by the old extent.\n          const minDistance = Math.sqrt(minSquaredDistance);\n          extent[0] = x - minDistance;\n          extent[1] = y - minDistance;\n          extent[2] = x + minDistance;\n          extent[3] = y + minDistance;\n        }\n      }\n    });\n  return closestFeature;\n};\n\n\n/**\n * Get the extent of the features currently in the source.\n *\n * This method is not available when the source is configured with\n * `useSpatialIndex` set to `false`.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent. If provided, no new extent\n *     will be created. Instead, that extent's coordinates will be overwritten.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nVectorSource.prototype.getExtent = function(opt_extent) {\n  return this.featuresRtree_.getExtent(opt_extent);\n};\n\n\n/**\n * Get a feature by its identifier (the value returned by feature.getId()).\n * Note that the index treats string and numeric identifiers as the same.  So\n * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n *\n * @param {string|number} id Feature identifier.\n * @return {module:ol/Feature} The feature (or `null` if not found).\n * @api\n */\nVectorSource.prototype.getFeatureById = function(id) {\n  const feature = this.idIndex_[id.toString()];\n  return feature !== undefined ? feature : null;\n};\n\n\n/**\n * Get the format associated with this source.\n *\n * @return {module:ol/format/Feature|undefined} The feature format.\n * @api\n */\nVectorSource.prototype.getFormat = function() {\n  return this.format_;\n};\n\n\n/**\n * @return {boolean} The source can have overlapping geometries.\n */\nVectorSource.prototype.getOverlaps = function() {\n  return this.overlaps_;\n};\n\n\n/**\n * @override\n */\nVectorSource.prototype.getResolutions = function() {};\n\n\n/**\n * Get the url associated with this source.\n *\n * @return {string|module:ol/featureloader~FeatureUrlFunction|undefined} The url.\n * @api\n */\nVectorSource.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * @param {module:ol/events/Event} event Event.\n * @private\n */\nVectorSource.prototype.handleFeatureChange_ = function(event) {\n  const feature = /** @type {module:ol/Feature} */ (event.target);\n  const featureKey = getUid(feature).toString();\n  const geometry = feature.getGeometry();\n  if (!geometry) {\n    if (!(featureKey in this.nullGeometryFeatures_)) {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n  } else {\n    const extent = geometry.getExtent();\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.update(extent, feature);\n      }\n    }\n  }\n  const id = feature.getId();\n  if (id !== undefined) {\n    const sid = id.toString();\n    if (featureKey in this.undefIdIndex_) {\n      delete this.undefIdIndex_[featureKey];\n      this.idIndex_[sid] = feature;\n    } else {\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    }\n  } else {\n    if (!(featureKey in this.undefIdIndex_)) {\n      this.removeFromIdIndex_(feature);\n      this.undefIdIndex_[featureKey] = feature;\n    }\n  }\n  this.changed();\n  this.dispatchEvent(new VectorSourceEvent(\n    VectorEventType.CHANGEFEATURE, feature));\n};\n\n/**\n * Returns true if the feature is contained within the source.\n * @param {module:ol/Feature} feature Feature.\n * @return {boolean} Has feature.\n * @api\n */\nVectorSource.prototype.hasFeature = function(feature) {\n  const id = feature.getId();\n  if (id !== undefined) {\n    return id in this.idIndex_;\n  } else {\n    const featureKey = getUid(feature).toString();\n    return featureKey in this.undefIdIndex_;\n  }\n};\n\n/**\n * @return {boolean} Is empty.\n */\nVectorSource.prototype.isEmpty = function() {\n  return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n};\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {module:ol/proj/Projection} projection Projection.\n */\nVectorSource.prototype.loadFeatures = function(extent, resolution, projection) {\n  const loadedExtentsRtree = this.loadedExtentsRtree_;\n  const extentsToLoad = this.strategy_(extent, resolution);\n  for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n    const extentToLoad = extentsToLoad[i];\n    const alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad,\n      /**\n       * @param {{extent: module:ol/extent~Extent}} object Object.\n       * @return {boolean} Contains.\n       */\n      function(object) {\n        return containsExtent(object.extent, extentToLoad);\n      });\n    if (!alreadyLoaded) {\n      this.loader_.call(this, extentToLoad, resolution, projection);\n      loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n    }\n  }\n};\n\n\n/**\n * Remove an extent from the list of loaded extents.\n * @param {module:ol/extent~Extent} extent Extent.\n * @api\n */\nVectorSource.prototype.removeLoadedExtent = function(extent) {\n  const loadedExtentsRtree = this.loadedExtentsRtree_;\n  let obj;\n  loadedExtentsRtree.forEachInExtent(extent, function(object) {\n    if (equals(object.extent, extent)) {\n      obj = object;\n      return true;\n    }\n  });\n  if (obj) {\n    loadedExtentsRtree.remove(obj);\n  }\n};\n\n\n/**\n * Remove a single feature from the source.  If you want to remove all features\n * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n * instead.\n * @param {module:ol/Feature} feature Feature to remove.\n * @api\n */\nVectorSource.prototype.removeFeature = function(feature) {\n  const featureKey = getUid(feature).toString();\n  if (featureKey in this.nullGeometryFeatures_) {\n    delete this.nullGeometryFeatures_[featureKey];\n  } else {\n    if (this.featuresRtree_) {\n      this.featuresRtree_.remove(feature);\n    }\n  }\n  this.removeFeatureInternal(feature);\n  this.changed();\n};\n\n\n/**\n * Remove feature without firing a `change` event.\n * @param {module:ol/Feature} feature Feature.\n * @protected\n */\nVectorSource.prototype.removeFeatureInternal = function(feature) {\n  const featureKey = getUid(feature).toString();\n  this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n  delete this.featureChangeKeys_[featureKey];\n  const id = feature.getId();\n  if (id !== undefined) {\n    delete this.idIndex_[id.toString()];\n  } else {\n    delete this.undefIdIndex_[featureKey];\n  }\n  this.dispatchEvent(new VectorSourceEvent(\n    VectorEventType.REMOVEFEATURE, feature));\n};\n\n\n/**\n * Remove a feature from the id index.  Called internally when the feature id\n * may have changed.\n * @param {module:ol/Feature} feature The feature.\n * @return {boolean} Removed the feature from the index.\n * @private\n */\nVectorSource.prototype.removeFromIdIndex_ = function(feature) {\n  let removed = false;\n  for (const id in this.idIndex_) {\n    if (this.idIndex_[id] === feature) {\n      delete this.idIndex_[id];\n      removed = true;\n      break;\n    }\n  }\n  return removed;\n};\n\n\n/**\n * Set the new loader of the source. The next loadFeatures call will use the\n * new loader.\n * @param {module:ol/featureloader~FeatureLoader} loader The loader to set.\n * @api\n */\nVectorSource.prototype.setLoader = function(loader) {\n  this.loader_ = loader;\n};\n\nexport default VectorSource;\n","/**\n * @module ol/Feature\n */\nimport {assert} from './asserts.js';\nimport {listen, unlisten, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport {inherits} from './index.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport Geometry from './geom/Geometry.js';\nimport Style from './style/Style.js';\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @constructor\n * @extends {module:ol/Object}\n * @param {module:ol/geom/Geometry|Object.<string, *>=} opt_geometryOrProperties\n * You may pass a Geometry object directly, or an object literal containing\n * properties. If you pass an object literal, you may include a Geometry\n * associated with a `geometry` key.\n * @api\n */\nconst Feature = function(opt_geometryOrProperties) {\n\n  BaseObject.call(this);\n\n  /**\n   * @private\n   * @type {number|string|undefined}\n   */\n  this.id_ = undefined;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.geometryName_ = 'geometry';\n\n  /**\n   * User provided style.\n   * @private\n   * @type {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction}\n   */\n  this.style_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Style~StyleFunction|undefined}\n   */\n  this.styleFunction_ = undefined;\n\n  /**\n   * @private\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.geometryChangeKey_ = null;\n\n  listen(\n    this, getChangeEventType(this.geometryName_),\n    this.handleGeometryChanged_, this);\n\n  if (opt_geometryOrProperties !== undefined) {\n    if (opt_geometryOrProperties instanceof Geometry ||\n        !opt_geometryOrProperties) {\n      const geometry = opt_geometryOrProperties;\n      this.setGeometry(geometry);\n    } else {\n      /** @type {Object.<string, *>} */\n      const properties = opt_geometryOrProperties;\n      this.setProperties(properties);\n    }\n  }\n};\n\ninherits(Feature, BaseObject);\n\n\n/**\n * Clone this feature. If the original feature has a geometry it\n * is also cloned. The feature id is not set in the clone.\n * @return {module:ol/Feature} The clone.\n * @api\n */\nFeature.prototype.clone = function() {\n  const clone = new Feature(this.getProperties());\n  clone.setGeometryName(this.getGeometryName());\n  const geometry = this.getGeometry();\n  if (geometry) {\n    clone.setGeometry(geometry.clone());\n  }\n  const style = this.getStyle();\n  if (style) {\n    clone.setStyle(style);\n  }\n  return clone;\n};\n\n\n/**\n * Get the feature's default geometry.  A feature may have any number of named\n * geometries.  The \"default\" geometry (the one that is rendered by default) is\n * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n * @return {module:ol/geom/Geometry|undefined} The default geometry for the feature.\n * @api\n * @observable\n */\nFeature.prototype.getGeometry = function() {\n  return (\n    /** @type {module:ol/geom/Geometry|undefined} */ (this.get(this.geometryName_))\n  );\n};\n\n\n/**\n * Get the feature identifier.  This is a stable identifier for the feature and\n * is either set when reading data from a remote source or set explicitly by\n * calling {@link module:ol/Feature~Feature#setId}.\n * @return {number|string|undefined} Id.\n * @api\n */\nFeature.prototype.getId = function() {\n  return this.id_;\n};\n\n\n/**\n * Get the name of the feature's default geometry.  By default, the default\n * geometry is named `geometry`.\n * @return {string} Get the property name associated with the default geometry\n *     for this feature.\n * @api\n */\nFeature.prototype.getGeometryName = function() {\n  return this.geometryName_;\n};\n\n\n/**\n * Get the feature's style. Will return what was provided to the\n * {@link module:ol/Feature~Feature#setStyle} method.\n * @return {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} The feature style.\n * @api\n */\nFeature.prototype.getStyle = function() {\n  return this.style_;\n};\n\n\n/**\n * Get the feature's style function.\n * @return {module:ol/style/Style~StyleFunction|undefined} Return a function\n * representing the current style of this feature.\n * @api\n */\nFeature.prototype.getStyleFunction = function() {\n  return this.styleFunction_;\n};\n\n\n/**\n * @private\n */\nFeature.prototype.handleGeometryChange_ = function() {\n  this.changed();\n};\n\n\n/**\n * @private\n */\nFeature.prototype.handleGeometryChanged_ = function() {\n  if (this.geometryChangeKey_) {\n    unlistenByKey(this.geometryChangeKey_);\n    this.geometryChangeKey_ = null;\n  }\n  const geometry = this.getGeometry();\n  if (geometry) {\n    this.geometryChangeKey_ = listen(geometry,\n      EventType.CHANGE, this.handleGeometryChange_, this);\n  }\n  this.changed();\n};\n\n\n/**\n * Set the default geometry for the feature.  This will update the property\n * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n * @param {module:ol/geom/Geometry|undefined} geometry The new geometry.\n * @api\n * @observable\n */\nFeature.prototype.setGeometry = function(geometry) {\n  this.set(this.geometryName_, geometry);\n};\n\n\n/**\n * Set the style for the feature.  This can be a single style object, an array\n * of styles, or a function that takes a resolution and returns an array of\n * styles. If it is `null` the feature has no style (a `null` style).\n * @param {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} style Style for this feature.\n * @api\n * @fires module:ol/events/Event~Event#event:change\n */\nFeature.prototype.setStyle = function(style) {\n  this.style_ = style;\n  this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n  this.changed();\n};\n\n\n/**\n * Set the feature id.  The feature id is considered stable and may be used when\n * requesting features or comparing identifiers returned from a remote source.\n * The feature id can be used with the\n * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n * @param {number|string|undefined} id The feature id.\n * @api\n * @fires module:ol/events/Event~Event#event:change\n */\nFeature.prototype.setId = function(id) {\n  this.id_ = id;\n  this.changed();\n};\n\n\n/**\n * Set the property name to be used when getting the feature's default geometry.\n * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n * this name will be returned.\n * @param {string} name The property name of the default geometry.\n * @api\n */\nFeature.prototype.setGeometryName = function(name) {\n  unlisten(\n    this, getChangeEventType(this.geometryName_),\n    this.handleGeometryChanged_, this);\n  this.geometryName_ = name;\n  listen(\n    this, getChangeEventType(this.geometryName_),\n    this.handleGeometryChanged_, this);\n  this.handleGeometryChanged_();\n};\n\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of module:ol/style/Style or single style objects wrapped\n * in a new feature style function.\n * @param {module:ol/style/Style~StyleFunction|!Array.<module:ol/style/Style>|!module:ol/style/Style} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {module:ol/style/Style~StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array.<module:ol/style/Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(obj instanceof Style,\n        41); // Expected an `module:ol/style/Style~Style` or an array of `module:ol/style/Style~Style`\n      styles = [obj];\n    }\n    return function() {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/control/FullScreen\n */\nimport {inherits} from '../index.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED} from '../css.js';\nimport {replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @return {string} Change type.\n */\nconst getChangeType = (function() {\n  let changeType;\n  return function() {\n    if (!changeType) {\n      const body = document.body;\n      if (body.webkitRequestFullscreen) {\n        changeType = 'webkitfullscreenchange';\n      } else if (body.mozRequestFullScreen) {\n        changeType = 'mozfullscreenchange';\n      } else if (body.msRequestFullscreen) {\n        changeType = 'MSFullscreenChange';\n      } else if (body.requestFullscreen) {\n        changeType = 'fullscreenchange';\n      }\n    }\n    return changeType;\n  };\n})();\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Element} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Element} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {Element|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {Element|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n\n\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](http://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n *\n * @constructor\n * @extends {module:ol/control/Control}\n * @param {module:ol/control/FullScreen~Options=} opt_options Options.\n * @api\n */\nconst FullScreen = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.cssClassName_ = options.className !== undefined ? options.className :\n    'ol-full-screen';\n\n  const label = options.label !== undefined ? options.label : '\\u2922';\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.labelNode_ = typeof label === 'string' ?\n    document.createTextNode(label) : label;\n\n  const labelActive = options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.labelActiveNode_ = typeof labelActive === 'string' ?\n    document.createTextNode(labelActive) : labelActive;\n\n  const tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n  const button = document.createElement('button');\n  button.className = this.cssClassName_ + '-' + isFullScreen();\n  button.setAttribute('type', 'button');\n  button.title = tipLabel;\n  button.appendChild(this.labelNode_);\n\n  listen(button, EventType.CLICK,\n    this.handleClick_, this);\n\n  const cssClasses = this.cssClassName_ + ' ' + CLASS_UNSELECTABLE +\n      ' ' + CLASS_CONTROL + ' ' +\n      (!isFullScreenSupported() ? CLASS_UNSUPPORTED : '');\n  const element = document.createElement('div');\n  element.className = cssClasses;\n  element.appendChild(button);\n\n  Control.call(this, {\n    element: element,\n    target: options.target\n  });\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.keys_ = options.keys !== undefined ? options.keys : false;\n\n  /**\n   * @private\n   * @type {Element|string|undefined}\n   */\n  this.source_ = options.source;\n\n};\n\ninherits(FullScreen, Control);\n\n\n/**\n * @param {Event} event The event to handle\n * @private\n */\nFullScreen.prototype.handleClick_ = function(event) {\n  event.preventDefault();\n  this.handleFullScreen_();\n};\n\n\n/**\n * @private\n */\nFullScreen.prototype.handleFullScreen_ = function() {\n  if (!isFullScreenSupported()) {\n    return;\n  }\n  const map = this.getMap();\n  if (!map) {\n    return;\n  }\n  if (isFullScreen()) {\n    exitFullScreen();\n  } else {\n    let element;\n    if (this.source_) {\n      element = typeof this.source_ === 'string' ?\n        document.getElementById(this.source_) :\n        this.source_;\n    } else {\n      element = map.getTargetElement();\n    }\n    if (this.keys_) {\n      requestFullScreenWithKeys(element);\n\n    } else {\n      requestFullScreen(element);\n    }\n  }\n};\n\n\n/**\n * @private\n */\nFullScreen.prototype.handleFullScreenChange_ = function() {\n  const button = this.element.firstElementChild;\n  const map = this.getMap();\n  if (isFullScreen()) {\n    button.className = this.cssClassName_ + '-true';\n    replaceNode(this.labelActiveNode_, this.labelNode_);\n  } else {\n    button.className = this.cssClassName_ + '-false';\n    replaceNode(this.labelNode_, this.labelActiveNode_);\n  }\n  if (map) {\n    map.updateSize();\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nFullScreen.prototype.setMap = function(map) {\n  Control.prototype.setMap.call(this, map);\n  if (map) {\n    this.listenerKeys.push(listen(document,\n      getChangeType(),\n      this.handleFullScreenChange_, this)\n    );\n  }\n};\n\n/**\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported() {\n  const body = document.body;\n  return !!(\n    body.webkitRequestFullscreen ||\n    (body.mozRequestFullScreen && document.mozFullScreenEnabled) ||\n    (body.msRequestFullscreen && document.msFullscreenEnabled) ||\n    (body.requestFullscreen && document.fullscreenEnabled)\n  );\n}\n\n/**\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen() {\n  return !!(\n    document.webkitIsFullScreen || document.mozFullScreen ||\n    document.msFullscreenElement || document.fullscreenElement\n  );\n}\n\n/**\n * Request to fullscreen an element.\n * @param {Element} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.msRequestFullscreen) {\n    element.msRequestFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  }\n}\n\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {Element} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n  if (element.mozRequestFullScreenWithKeys) {\n    element.mozRequestFullScreenWithKeys();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n  } else {\n    requestFullScreen(element);\n  }\n}\n\n/**\n * Exit fullscreen.\n */\nfunction exitFullScreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.msExitFullscreen) {\n    document.msExitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n\nexport default FullScreen;\n","/**\n * @module ol/control/OverviewMap\n */\nimport {inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport Map from '../Map.js';\nimport MapEventType from '../MapEventType.js';\nimport MapProperty from '../MapProperty.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport Overlay from '../Overlay.js';\nimport OverlayPositioning from '../OverlayPositioning.js';\nimport ViewProperty from '../ViewProperty.js';\nimport Control from '../control/Control.js';\nimport {rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {replaceNode} from '../dom.js';\nimport {listen, listenOnce, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight, scaleFromCenter} from '../extent.js';\n\n\n/**\n * Maximum width and/or height extent ratio that determines when the overview\n * map should be zoomed out.\n * @type {number}\n */\nconst MAX_RATIO = 0.75;\n\n\n/**\n * Minimum width and/or height extent ratio that determines when the overview\n * map should be zoomed in.\n * @type {number}\n */\nconst MIN_RATIO = 0.1;\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-overviewmap'] CSS class name.\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\n * @property {string|Element} [collapseLabel='«'] Text label to use for the\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\n * @property {string|Element} [label='»'] Text label to use for the collapsed\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {Array.<module:ol/layer/Layer>|module:ol/Collection.<module:ol/layer/Layer>} [layers]\n * Layers for the overview map. If not set, then all main map layers are used\n * instead.\n * @property {function(module:ol/MapEvent)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {Element|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\n * @property {module:ol/View} [view] Custom view for the overview map. If not provided,\n * a default view with an EPSG:3857 projection will be used.\n */\n\n\n/**\n * Create a new control with a map acting as an overview map for an other\n * defined map.\n * @constructor\n * @extends {module:ol/control/Control}\n * @param {module:ol/control/OverviewMap~Options=} opt_options OverviewMap options.\n * @api\n */\nconst OverviewMap = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.collapsible_ = options.collapsible !== undefined ?\n    options.collapsible : true;\n\n  if (!this.collapsible_) {\n    this.collapsed_ = false;\n  }\n\n  const className = options.className !== undefined ? options.className : 'ol-overviewmap';\n\n  const tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\n\n  const collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00AB';\n\n  if (typeof collapseLabel === 'string') {\n    /**\n     * @private\n     * @type {Element}\n     */\n    this.collapseLabel_ = document.createElement('span');\n    this.collapseLabel_.textContent = collapseLabel;\n  } else {\n    this.collapseLabel_ = collapseLabel;\n  }\n\n  const label = options.label !== undefined ? options.label : '\\u00BB';\n\n\n  if (typeof label === 'string') {\n    /**\n     * @private\n     * @type {Element}\n     */\n    this.label_ = document.createElement('span');\n    this.label_.textContent = label;\n  } else {\n    this.label_ = label;\n  }\n\n  const activeLabel = (this.collapsible_ && !this.collapsed_) ?\n    this.collapseLabel_ : this.label_;\n  const button = document.createElement('button');\n  button.setAttribute('type', 'button');\n  button.title = tipLabel;\n  button.appendChild(activeLabel);\n\n  listen(button, EventType.CLICK,\n    this.handleClick_, this);\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  this.ovmapDiv_ = document.createElement('DIV');\n  this.ovmapDiv_.className = 'ol-overviewmap-map';\n\n  /**\n   * @type {module:ol/Map}\n   * @private\n   */\n  this.ovmap_ = new Map({\n    controls: new Collection(),\n    interactions: new Collection(),\n    view: options.view\n  });\n  const ovmap = this.ovmap_;\n\n  if (options.layers) {\n    options.layers.forEach(\n      /**\n       * @param {module:ol/layer/Layer} layer Layer.\n       */\n      (function(layer) {\n        ovmap.addLayer(layer);\n      }).bind(this));\n  }\n\n  const box = document.createElement('DIV');\n  box.className = 'ol-overviewmap-box';\n  box.style.boxSizing = 'border-box';\n\n  /**\n   * @type {module:ol/Overlay}\n   * @private\n   */\n  this.boxOverlay_ = new Overlay({\n    position: [0, 0],\n    positioning: OverlayPositioning.BOTTOM_LEFT,\n    element: box\n  });\n  this.ovmap_.addOverlay(this.boxOverlay_);\n\n  const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n  const element = document.createElement('div');\n  element.className = cssClasses;\n  element.appendChild(this.ovmapDiv_);\n  element.appendChild(button);\n\n  Control.call(this, {\n    element: element,\n    render: options.render || render,\n    target: options.target\n  });\n\n  /* Interactive map */\n\n  const scope = this;\n\n  const overlay = this.boxOverlay_;\n  const overlayBox = this.boxOverlay_.getElement();\n\n  /* Functions definition */\n\n  const computeDesiredMousePosition = function(mousePosition) {\n    return {\n      clientX: mousePosition.clientX - (overlayBox.offsetWidth / 2),\n      clientY: mousePosition.clientY + (overlayBox.offsetHeight / 2)\n    };\n  };\n\n  const move = function(event) {\n    const coordinates = ovmap.getEventCoordinate(computeDesiredMousePosition(event));\n\n    overlay.setPosition(coordinates);\n  };\n\n  const endMoving = function(event) {\n    const coordinates = ovmap.getEventCoordinate(event);\n\n    scope.getMap().getView().setCenter(coordinates);\n\n    window.removeEventListener('mousemove', move);\n    window.removeEventListener('mouseup', endMoving);\n  };\n\n  /* Binding */\n\n  overlayBox.addEventListener('mousedown', function() {\n    window.addEventListener('mousemove', move);\n    window.addEventListener('mouseup', endMoving);\n  });\n};\n\ninherits(OverviewMap, Control);\n\n\n/**\n * @inheritDoc\n * @api\n */\nOverviewMap.prototype.setMap = function(map) {\n  const oldMap = this.getMap();\n  if (map === oldMap) {\n    return;\n  }\n  if (oldMap) {\n    const oldView = oldMap.getView();\n    if (oldView) {\n      this.unbindView_(oldView);\n    }\n    this.ovmap_.setTarget(null);\n  }\n  Control.prototype.setMap.call(this, map);\n\n  if (map) {\n    this.ovmap_.setTarget(this.ovmapDiv_);\n    this.listenerKeys.push(listen(\n      map, ObjectEventType.PROPERTYCHANGE,\n      this.handleMapPropertyChange_, this));\n\n    // TODO: to really support map switching, this would need to be reworked\n    if (this.ovmap_.getLayers().getLength() === 0) {\n      this.ovmap_.setLayerGroup(map.getLayerGroup());\n    }\n\n    const view = map.getView();\n    if (view) {\n      this.bindView_(view);\n      if (view.isDef()) {\n        this.ovmap_.updateSize();\n        this.resetExtent_();\n      }\n    }\n  }\n};\n\n\n/**\n * Handle map property changes.  This only deals with changes to the map's view.\n * @param {module:ol/Object~ObjectEvent} event The propertychange event.\n * @private\n */\nOverviewMap.prototype.handleMapPropertyChange_ = function(event) {\n  if (event.key === MapProperty.VIEW) {\n    const oldView = /** @type {module:ol/View} */ (event.oldValue);\n    if (oldView) {\n      this.unbindView_(oldView);\n    }\n    const newView = this.getMap().getView();\n    this.bindView_(newView);\n  }\n};\n\n\n/**\n * Register listeners for view property changes.\n * @param {module:ol/View} view The view.\n * @private\n */\nOverviewMap.prototype.bindView_ = function(view) {\n  listen(view,\n    getChangeEventType(ViewProperty.ROTATION),\n    this.handleRotationChanged_, this);\n};\n\n\n/**\n * Unregister listeners for view property changes.\n * @param {module:ol/View} view The view.\n * @private\n */\nOverviewMap.prototype.unbindView_ = function(view) {\n  unlisten(view,\n    getChangeEventType(ViewProperty.ROTATION),\n    this.handleRotationChanged_, this);\n};\n\n\n/**\n * Handle rotation changes to the main map.\n * TODO: This should rotate the extent rectrangle instead of the\n * overview map's view.\n * @private\n */\nOverviewMap.prototype.handleRotationChanged_ = function() {\n  this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\n};\n\n\n/**\n * Update the overview map element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/OverviewMap}\n * @api\n */\nexport function render(mapEvent) {\n  this.validateExtent_();\n  this.updateBox_();\n}\n\n\n/**\n * Reset the overview map extent if the box size (width or\n * height) is less than the size of the overview map size times minRatio\n * or is greater than the size of the overview size times maxRatio.\n *\n * If the map extent was not reset, the box size can fits in the defined\n * ratio sizes. This method then checks if is contained inside the overview\n * map current extent. If not, recenter the overview map to the current\n * main map center location.\n * @private\n */\nOverviewMap.prototype.validateExtent_ = function() {\n  const map = this.getMap();\n  const ovmap = this.ovmap_;\n\n  if (!map.isRendered() || !ovmap.isRendered()) {\n    return;\n  }\n\n  const mapSize = /** @type {module:ol/size~Size} */ (map.getSize());\n\n  const view = map.getView();\n  const extent = view.calculateExtent(mapSize);\n\n  const ovmapSize = /** @type {module:ol/size~Size} */ (ovmap.getSize());\n\n  const ovview = ovmap.getView();\n  const ovextent = ovview.calculateExtent(ovmapSize);\n\n  const topLeftPixel =\n      ovmap.getPixelFromCoordinate(getTopLeft(extent));\n  const bottomRightPixel =\n      ovmap.getPixelFromCoordinate(getBottomRight(extent));\n\n  const boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\n  const boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\n\n  const ovmapWidth = ovmapSize[0];\n  const ovmapHeight = ovmapSize[1];\n\n  if (boxWidth < ovmapWidth * MIN_RATIO ||\n      boxHeight < ovmapHeight * MIN_RATIO ||\n      boxWidth > ovmapWidth * MAX_RATIO ||\n      boxHeight > ovmapHeight * MAX_RATIO) {\n    this.resetExtent_();\n  } else if (!containsExtent(ovextent, extent)) {\n    this.recenter_();\n  }\n};\n\n\n/**\n * Reset the overview map extent to half calculated min and max ratio times\n * the extent of the main map.\n * @private\n */\nOverviewMap.prototype.resetExtent_ = function() {\n  if (MAX_RATIO === 0 || MIN_RATIO === 0) {\n    return;\n  }\n\n  const map = this.getMap();\n  const ovmap = this.ovmap_;\n\n  const mapSize = /** @type {module:ol/size~Size} */ (map.getSize());\n\n  const view = map.getView();\n  const extent = view.calculateExtent(mapSize);\n\n  const ovview = ovmap.getView();\n\n  // get how many times the current map overview could hold different\n  // box sizes using the min and max ratio, pick the step in the middle used\n  // to calculate the extent from the main map to set it to the overview map,\n  const steps = Math.log(\n    MAX_RATIO / MIN_RATIO) / Math.LN2;\n  const ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\n  scaleFromCenter(extent, ratio);\n  ovview.fit(extent);\n};\n\n\n/**\n * Set the center of the overview map to the map center without changing its\n * resolution.\n * @private\n */\nOverviewMap.prototype.recenter_ = function() {\n  const map = this.getMap();\n  const ovmap = this.ovmap_;\n\n  const view = map.getView();\n\n  const ovview = ovmap.getView();\n\n  ovview.setCenter(view.getCenter());\n};\n\n\n/**\n * Update the box using the main map extent\n * @private\n */\nOverviewMap.prototype.updateBox_ = function() {\n  const map = this.getMap();\n  const ovmap = this.ovmap_;\n\n  if (!map.isRendered() || !ovmap.isRendered()) {\n    return;\n  }\n\n  const mapSize = /** @type {module:ol/size~Size} */ (map.getSize());\n\n  const view = map.getView();\n\n  const ovview = ovmap.getView();\n\n  const rotation = view.getRotation();\n\n  const overlay = this.boxOverlay_;\n  const box = this.boxOverlay_.getElement();\n  const extent = view.calculateExtent(mapSize);\n  const ovresolution = ovview.getResolution();\n  const bottomLeft = getBottomLeft(extent);\n  const topRight = getTopRight(extent);\n\n  // set position using bottom left coordinates\n  const rotateBottomLeft = this.calculateCoordinateRotate_(rotation, bottomLeft);\n  overlay.setPosition(rotateBottomLeft);\n\n  // set box size calculated from map extent size and overview map resolution\n  if (box) {\n    box.style.width = Math.abs((bottomLeft[0] - topRight[0]) / ovresolution) + 'px';\n    box.style.height = Math.abs((topRight[1] - bottomLeft[1]) / ovresolution) + 'px';\n  }\n};\n\n\n/**\n * @param {number} rotation Target rotation.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @return {module:ol/coordinate~Coordinate|undefined} Coordinate for rotation and center anchor.\n * @private\n */\nOverviewMap.prototype.calculateCoordinateRotate_ = function(\n  rotation, coordinate) {\n  let coordinateRotate;\n\n  const map = this.getMap();\n  const view = map.getView();\n\n  const currentCenter = view.getCenter();\n\n  if (currentCenter) {\n    coordinateRotate = [\n      coordinate[0] - currentCenter[0],\n      coordinate[1] - currentCenter[1]\n    ];\n    rotateCoordinate(coordinateRotate, rotation);\n    addCoordinate(coordinateRotate, currentCenter);\n  }\n  return coordinateRotate;\n};\n\n\n/**\n * @param {Event} event The event to handle\n * @private\n */\nOverviewMap.prototype.handleClick_ = function(event) {\n  event.preventDefault();\n  this.handleToggle_();\n};\n\n\n/**\n * @private\n */\nOverviewMap.prototype.handleToggle_ = function() {\n  this.element.classList.toggle(CLASS_COLLAPSED);\n  if (this.collapsed_) {\n    replaceNode(this.collapseLabel_, this.label_);\n  } else {\n    replaceNode(this.label_, this.collapseLabel_);\n  }\n  this.collapsed_ = !this.collapsed_;\n\n  // manage overview map if it had not been rendered before and control\n  // is expanded\n  const ovmap = this.ovmap_;\n  if (!this.collapsed_ && !ovmap.isRendered()) {\n    ovmap.updateSize();\n    this.resetExtent_();\n    listenOnce(ovmap, MapEventType.POSTRENDER,\n      function(event) {\n        this.updateBox_();\n      },\n      this);\n  }\n};\n\n\n/**\n * Return `true` if the overview map is collapsible, `false` otherwise.\n * @return {boolean} True if the widget is collapsible.\n * @api\n */\nOverviewMap.prototype.getCollapsible = function() {\n  return this.collapsible_;\n};\n\n\n/**\n * Set whether the overview map should be collapsible.\n * @param {boolean} collapsible True if the widget is collapsible.\n * @api\n */\nOverviewMap.prototype.setCollapsible = function(collapsible) {\n  if (this.collapsible_ === collapsible) {\n    return;\n  }\n  this.collapsible_ = collapsible;\n  this.element.classList.toggle('ol-uncollapsible');\n  if (!collapsible && this.collapsed_) {\n    this.handleToggle_();\n  }\n};\n\n\n/**\n * Collapse or expand the overview map according to the passed parameter. Will\n * not do anything if the overview map isn't collapsible or if the current\n * collapsed state is already the one requested.\n * @param {boolean} collapsed True if the widget is collapsed.\n * @api\n */\nOverviewMap.prototype.setCollapsed = function(collapsed) {\n  if (!this.collapsible_ || this.collapsed_ === collapsed) {\n    return;\n  }\n  this.handleToggle_();\n};\n\n\n/**\n * Determine if the overview map is collapsed.\n * @return {boolean} The overview map is collapsed.\n * @api\n */\nOverviewMap.prototype.getCollapsed = function() {\n  return this.collapsed_;\n};\n\n\n/**\n * Return the overview map.\n * @return {module:ol/PluggableMap} Overview map.\n * @api\n */\nOverviewMap.prototype.getOverviewMap = function() {\n  return this.ovmap_;\n};\nexport default OverviewMap;\n","/**\n * @module ol/control/ScaleLine\n */\nimport {inherits} from '../index.js';\nimport {getChangeEventType} from '../Object.js';\nimport {assert} from '../asserts.js';\nimport Control from '../control/Control.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {listen} from '../events.js';\nimport {getPointResolution, METERS_PER_UNIT} from '../proj.js';\nimport ProjUnits from '../proj/Units.js';\n\n\n/**\n * @type {string}\n */\nconst UNITS_PROP = 'units';\n\n/**\n * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,\n * `'nautical'`, `'metric'`, `'us'`.\n * @enum {string}\n */\nexport const Units = {\n  DEGREES: 'degrees',\n  IMPERIAL: 'imperial',\n  NAUTICAL: 'nautical',\n  METRIC: 'metric',\n  US: 'us'\n};\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\nconst LEADING_DIGITS = [1, 2, 5];\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-scale-line'] CSS Class name.\n * @property {number} [minWidth=64] Minimum width in pixels.\n * @property {function(module:ol/MapEvent)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {Element|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {module:ol/control/ScaleLine~Units|string} [units='metric'] Units.\n */\n\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n *\n * @constructor\n * @extends {module:ol/control/Control}\n * @param {module:ol/control/ScaleLine~Options=} opt_options Scale line options.\n * @api\n */\nconst ScaleLine = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  const className = options.className !== undefined ? options.className : 'ol-scale-line';\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.innerElement_ = document.createElement('DIV');\n  this.innerElement_.className = className + '-inner';\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.element_ = document.createElement('DIV');\n  this.element_.className = className + ' ' + CLASS_UNSELECTABLE;\n  this.element_.appendChild(this.innerElement_);\n\n  /**\n   * @private\n   * @type {?module:ol/View~State}\n   */\n  this.viewState_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderedVisible_ = false;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.renderedWidth_ = undefined;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.renderedHTML_ = '';\n\n  Control.call(this, {\n    element: this.element_,\n    render: options.render || render,\n    target: options.target\n  });\n\n  listen(\n    this, getChangeEventType(UNITS_PROP),\n    this.handleUnitsChanged_, this);\n\n  this.setUnits(/** @type {module:ol/control/ScaleLine~Units} */ (options.units) ||\n      Units.METRIC);\n\n};\n\ninherits(ScaleLine, Control);\n\n\n/**\n * Return the units to use in the scale line.\n * @return {module:ol/control/ScaleLine~Units|undefined} The units\n * to use in the scale line.\n * @observable\n * @api\n */\nScaleLine.prototype.getUnits = function() {\n  return (\n    /** @type {module:ol/control/ScaleLine~Units|undefined} */ (this.get(UNITS_PROP))\n  );\n};\n\n\n/**\n * Update the scale line element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/ScaleLine}\n * @api\n */\nexport function render(mapEvent) {\n  const frameState = mapEvent.frameState;\n  if (!frameState) {\n    this.viewState_ = null;\n  } else {\n    this.viewState_ = frameState.viewState;\n  }\n  this.updateElement_();\n}\n\n\n/**\n * @private\n */\nScaleLine.prototype.handleUnitsChanged_ = function() {\n  this.updateElement_();\n};\n\n\n/**\n * Set the units to use in the scale line.\n * @param {module:ol/control/ScaleLine~Units} units The units to use in the scale line.\n * @observable\n * @api\n */\nScaleLine.prototype.setUnits = function(units) {\n  this.set(UNITS_PROP, units);\n};\n\n\n/**\n * @private\n */\nScaleLine.prototype.updateElement_ = function() {\n  const viewState = this.viewState_;\n\n  if (!viewState) {\n    if (this.renderedVisible_) {\n      this.element_.style.display = 'none';\n      this.renderedVisible_ = false;\n    }\n    return;\n  }\n\n  const center = viewState.center;\n  const projection = viewState.projection;\n  const units = this.getUnits();\n  const pointResolutionUnits = units == Units.DEGREES ?\n    ProjUnits.DEGREES :\n    ProjUnits.METERS;\n  let pointResolution =\n      getPointResolution(projection, viewState.resolution, center, pointResolutionUnits);\n  if (projection.getUnits() != ProjUnits.DEGREES && projection.getMetersPerUnit()\n    && pointResolutionUnits == ProjUnits.METERS) {\n    pointResolution *= projection.getMetersPerUnit();\n  }\n\n  let nominalCount = this.minWidth_ * pointResolution;\n  let suffix = '';\n  if (units == Units.DEGREES) {\n    const metersPerDegree = METERS_PER_UNIT[ProjUnits.DEGREES];\n    if (projection.getUnits() == ProjUnits.DEGREES) {\n      nominalCount *= metersPerDegree;\n    } else {\n      pointResolution /= metersPerDegree;\n    }\n    if (nominalCount < metersPerDegree / 60) {\n      suffix = '\\u2033'; // seconds\n      pointResolution *= 3600;\n    } else if (nominalCount < metersPerDegree) {\n      suffix = '\\u2032'; // minutes\n      pointResolution *= 60;\n    } else {\n      suffix = '\\u00b0'; // degrees\n    }\n  } else if (units == Units.IMPERIAL) {\n    if (nominalCount < 0.9144) {\n      suffix = 'in';\n      pointResolution /= 0.0254;\n    } else if (nominalCount < 1609.344) {\n      suffix = 'ft';\n      pointResolution /= 0.3048;\n    } else {\n      suffix = 'mi';\n      pointResolution /= 1609.344;\n    }\n  } else if (units == Units.NAUTICAL) {\n    pointResolution /= 1852;\n    suffix = 'nm';\n  } else if (units == Units.METRIC) {\n    if (nominalCount < 0.001) {\n      suffix = 'μm';\n      pointResolution *= 1000000;\n    } else if (nominalCount < 1) {\n      suffix = 'mm';\n      pointResolution *= 1000;\n    } else if (nominalCount < 1000) {\n      suffix = 'm';\n    } else {\n      suffix = 'km';\n      pointResolution /= 1000;\n    }\n  } else if (units == Units.US) {\n    if (nominalCount < 0.9144) {\n      suffix = 'in';\n      pointResolution *= 39.37;\n    } else if (nominalCount < 1609.344) {\n      suffix = 'ft';\n      pointResolution /= 0.30480061;\n    } else {\n      suffix = 'mi';\n      pointResolution /= 1609.3472;\n    }\n  } else {\n    assert(false, 33); // Invalid units\n  }\n\n  let i = 3 * Math.floor(\n    Math.log(this.minWidth_ * pointResolution) / Math.log(10));\n  let count, width;\n  while (true) {\n    count = LEADING_DIGITS[((i % 3) + 3) % 3] *\n        Math.pow(10, Math.floor(i / 3));\n    width = Math.round(count / pointResolution);\n    if (isNaN(width)) {\n      this.element_.style.display = 'none';\n      this.renderedVisible_ = false;\n      return;\n    } else if (width >= this.minWidth_) {\n      break;\n    }\n    ++i;\n  }\n\n  const html = count + ' ' + suffix;\n  if (this.renderedHTML_ != html) {\n    this.innerElement_.innerHTML = html;\n    this.renderedHTML_ = html;\n  }\n\n  if (this.renderedWidth_ != width) {\n    this.innerElement_.style.width = width + 'px';\n    this.renderedWidth_ = width;\n  }\n\n  if (!this.renderedVisible_) {\n    this.element_.style.display = '';\n    this.renderedVisible_ = true;\n  }\n\n};\n\nexport default ScaleLine;\n","/**\n * @module ol/control/ZoomSlider\n */\nimport {inherits} from '../index.js';\nimport ViewHint from '../ViewHint.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen} from '../events.js';\nimport {stopPropagation} from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {clamp} from '../math.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport PointerEventHandler from '../pointer/PointerEventHandler.js';\n\n\n/**\n * The enum for available directions.\n *\n * @enum {number}\n */\nconst Direction = {\n  VERTICAL: 0,\n  HORIZONTAL: 1\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoomslider'] CSS class name.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {function(module:ol/MapEvent)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n */\n\n\n/**\n * @classdesc\n * A slider type of control for zooming.\n *\n * Example:\n *\n *     map.addControl(new ZoomSlider());\n *\n * @constructor\n * @extends {module:ol/control/Control}\n * @param {module:ol/control/ZoomSlider~Options=} opt_options Zoom slider options.\n * @api\n */\nconst ZoomSlider = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * Will hold the current resolution of the view.\n   *\n   * @type {number|undefined}\n   * @private\n   */\n  this.currentResolution_ = undefined;\n\n  /**\n   * The direction of the slider. Will be determined from actual display of the\n   * container and defaults to Direction.VERTICAL.\n   *\n   * @type {Direction}\n   * @private\n   */\n  this.direction_ = Direction.VERTICAL;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.dragging_;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.heightLimit_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.widthLimit_ = 0;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.previousX_;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.previousY_;\n\n  /**\n   * The calculated thumb size (border box plus margins).  Set when initSlider_\n   * is called.\n   * @type {module:ol/size~Size}\n   * @private\n   */\n  this.thumbSize_ = null;\n\n  /**\n   * Whether the slider is initialized.\n   * @type {boolean}\n   * @private\n   */\n  this.sliderInitialized_ = false;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n  const className = options.className !== undefined ? options.className : 'ol-zoomslider';\n  const thumbElement = document.createElement('button');\n  thumbElement.setAttribute('type', 'button');\n  thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\n  const containerElement = document.createElement('div');\n  containerElement.className = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n  containerElement.appendChild(thumbElement);\n  /**\n   * @type {module:ol/pointer/PointerEventHandler}\n   * @private\n   */\n  this.dragger_ = new PointerEventHandler(containerElement);\n\n  listen(this.dragger_, PointerEventType.POINTERDOWN,\n    this.handleDraggerStart_, this);\n  listen(this.dragger_, PointerEventType.POINTERMOVE,\n    this.handleDraggerDrag_, this);\n  listen(this.dragger_, PointerEventType.POINTERUP,\n    this.handleDraggerEnd_, this);\n\n  listen(containerElement, EventType.CLICK, this.handleContainerClick_, this);\n  listen(thumbElement, EventType.CLICK, stopPropagation);\n\n  Control.call(this, {\n    element: containerElement,\n    render: options.render || render\n  });\n};\n\ninherits(ZoomSlider, Control);\n\n\n/**\n * @inheritDoc\n */\nZoomSlider.prototype.disposeInternal = function() {\n  this.dragger_.dispose();\n  Control.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @inheritDoc\n */\nZoomSlider.prototype.setMap = function(map) {\n  Control.prototype.setMap.call(this, map);\n  if (map) {\n    map.render();\n  }\n};\n\n\n/**\n * Initializes the slider element. This will determine and set this controls\n * direction_ and also constrain the dragging of the thumb to always be within\n * the bounds of the container.\n *\n * @private\n */\nZoomSlider.prototype.initSlider_ = function() {\n  const container = this.element;\n  const containerSize = {\n    width: container.offsetWidth, height: container.offsetHeight\n  };\n\n  const thumb = container.firstElementChild;\n  const computedStyle = getComputedStyle(thumb);\n  const thumbWidth = thumb.offsetWidth +\n      parseFloat(computedStyle['marginRight']) +\n      parseFloat(computedStyle['marginLeft']);\n  const thumbHeight = thumb.offsetHeight +\n      parseFloat(computedStyle['marginTop']) +\n      parseFloat(computedStyle['marginBottom']);\n  this.thumbSize_ = [thumbWidth, thumbHeight];\n\n  if (containerSize.width > containerSize.height) {\n    this.direction_ = Direction.HORIZONTAL;\n    this.widthLimit_ = containerSize.width - thumbWidth;\n  } else {\n    this.direction_ = Direction.VERTICAL;\n    this.heightLimit_ = containerSize.height - thumbHeight;\n  }\n  this.sliderInitialized_ = true;\n};\n\n\n/**\n * Update the zoomslider element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/ZoomSlider}\n * @api\n */\nexport function render(mapEvent) {\n  if (!mapEvent.frameState) {\n    return;\n  }\n  if (!this.sliderInitialized_) {\n    this.initSlider_();\n  }\n  const res = mapEvent.frameState.viewState.resolution;\n  if (res !== this.currentResolution_) {\n    this.currentResolution_ = res;\n    this.setThumbPosition_(res);\n  }\n}\n\n\n/**\n * @param {Event} event The browser event to handle.\n * @private\n */\nZoomSlider.prototype.handleContainerClick_ = function(event) {\n  const view = this.getMap().getView();\n\n  const relativePosition = this.getRelativePosition_(\n    event.offsetX - this.thumbSize_[0] / 2,\n    event.offsetY - this.thumbSize_[1] / 2);\n\n  const resolution = this.getResolutionForPosition_(relativePosition);\n\n  view.animate({\n    resolution: view.constrainResolution(resolution),\n    duration: this.duration_,\n    easing: easeOut\n  });\n};\n\n\n/**\n * Handle dragger start events.\n * @param {module:ol/pointer/PointerEvent} event The drag event.\n * @private\n */\nZoomSlider.prototype.handleDraggerStart_ = function(event) {\n  if (!this.dragging_ && event.originalEvent.target === this.element.firstElementChild) {\n    this.getMap().getView().setHint(ViewHint.INTERACTING, 1);\n    this.previousX_ = event.clientX;\n    this.previousY_ = event.clientY;\n    this.dragging_ = true;\n  }\n};\n\n\n/**\n * Handle dragger drag events.\n *\n * @param {module:ol/pointer/PointerEvent|Event} event The drag event.\n * @private\n */\nZoomSlider.prototype.handleDraggerDrag_ = function(event) {\n  if (this.dragging_) {\n    const element = this.element.firstElementChild;\n    const deltaX = event.clientX - this.previousX_ + parseInt(element.style.left, 10);\n    const deltaY = event.clientY - this.previousY_ + parseInt(element.style.top, 10);\n    const relativePosition = this.getRelativePosition_(deltaX, deltaY);\n    this.currentResolution_ = this.getResolutionForPosition_(relativePosition);\n    this.getMap().getView().setResolution(this.currentResolution_);\n    this.setThumbPosition_(this.currentResolution_);\n    this.previousX_ = event.clientX;\n    this.previousY_ = event.clientY;\n  }\n};\n\n\n/**\n * Handle dragger end events.\n * @param {module:ol/pointer/PointerEvent|Event} event The drag event.\n * @private\n */\nZoomSlider.prototype.handleDraggerEnd_ = function(event) {\n  if (this.dragging_) {\n    const view = this.getMap().getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n\n    view.animate({\n      resolution: view.constrainResolution(this.currentResolution_),\n      duration: this.duration_,\n      easing: easeOut\n    });\n\n    this.dragging_ = false;\n    this.previousX_ = undefined;\n    this.previousY_ = undefined;\n  }\n};\n\n\n/**\n * Positions the thumb inside its container according to the given resolution.\n *\n * @param {number} res The res.\n * @private\n */\nZoomSlider.prototype.setThumbPosition_ = function(res) {\n  const position = this.getPositionForResolution_(res);\n  const thumb = this.element.firstElementChild;\n\n  if (this.direction_ == Direction.HORIZONTAL) {\n    thumb.style.left = this.widthLimit_ * position + 'px';\n  } else {\n    thumb.style.top = this.heightLimit_ * position + 'px';\n  }\n};\n\n\n/**\n * Calculates the relative position of the thumb given x and y offsets.  The\n * relative position scales from 0 to 1.  The x and y offsets are assumed to be\n * in pixel units within the dragger limits.\n *\n * @param {number} x Pixel position relative to the left of the slider.\n * @param {number} y Pixel position relative to the top of the slider.\n * @return {number} The relative position of the thumb.\n * @private\n */\nZoomSlider.prototype.getRelativePosition_ = function(x, y) {\n  let amount;\n  if (this.direction_ === Direction.HORIZONTAL) {\n    amount = x / this.widthLimit_;\n  } else {\n    amount = y / this.heightLimit_;\n  }\n  return clamp(amount, 0, 1);\n};\n\n\n/**\n * Calculates the corresponding resolution of the thumb given its relative\n * position (where 0 is the minimum and 1 is the maximum).\n *\n * @param {number} position The relative position of the thumb.\n * @return {number} The corresponding resolution.\n * @private\n */\nZoomSlider.prototype.getResolutionForPosition_ = function(position) {\n  const fn = this.getMap().getView().getResolutionForValueFunction();\n  return fn(1 - position);\n};\n\n\n/**\n * Determines the relative position of the slider for the given resolution.  A\n * relative position of 0 corresponds to the minimum view resolution.  A\n * relative position of 1 corresponds to the maximum view resolution.\n *\n * @param {number} res The resolution.\n * @return {number} The relative position value (between 0 and 1).\n * @private\n */\nZoomSlider.prototype.getPositionForResolution_ = function(res) {\n  const fn = this.getMap().getView().getValueForResolutionFunction();\n  return 1 - fn(res);\n};\n\nexport default ZoomSlider;\n","/**\n * @module ol/control/ZoomToExtent\n */\nimport {inherits} from '../index.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {Element|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|Element} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {module:ol/extent~Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n\n\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @constructor\n * @extends {module:ol/control/Control}\n * @param {module:ol/control/ZoomToExtent~Options=} opt_options Options.\n * @api\n */\nconst ZoomToExtent = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {module:ol/extent~Extent}\n   * @protected\n   */\n  this.extent = options.extent ? options.extent : null;\n\n  const className = options.className !== undefined ? options.className : 'ol-zoom-extent';\n\n  const label = options.label !== undefined ? options.label : 'E';\n  const tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n  const button = document.createElement('button');\n  button.setAttribute('type', 'button');\n  button.title = tipLabel;\n  button.appendChild(\n    typeof label === 'string' ? document.createTextNode(label) : label\n  );\n\n  listen(button, EventType.CLICK, this.handleClick_, this);\n\n  const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n  const element = document.createElement('div');\n  element.className = cssClasses;\n  element.appendChild(button);\n\n  Control.call(this, {\n    element: element,\n    target: options.target\n  });\n};\n\ninherits(ZoomToExtent, Control);\n\n\n/**\n * @param {Event} event The event to handle\n * @private\n */\nZoomToExtent.prototype.handleClick_ = function(event) {\n  event.preventDefault();\n  this.handleZoomToExtent();\n};\n\n\n/**\n * @protected\n */\nZoomToExtent.prototype.handleZoomToExtent = function() {\n  const map = this.getMap();\n  const view = map.getView();\n  const extent = !this.extent ? view.getProjection().getExtent() : this.extent;\n  view.fit(extent);\n};\nexport default ZoomToExtent;\n","/**\n * @module ol/control\n */\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\nexport {defaults} from './control/util.js';\n","/**\n * @module ol/render/canvas\n */\nimport {getFontFamilies} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {clear} from '../obj.js';\nimport LRUCache from '../structs/LRUCache.js';\nimport {create as createTransform} from '../transform.js';\n\n\n/**\n * @typedef {Object} FillState\n * @property {module:ol/colorlike~ColorLike} fillStyle\n */\n\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {module:ol/colorlike~ColorLike} [currentFillStyle]\n * @property {module:ol/colorlike~ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array.<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {module:ol/colorlike~ColorLike} [fillStyle]\n * @property {module:ol/colorlike~ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array.<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n\n\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array.<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {module:ol/colorlike~ColorLike} strokeStyle\n */\n\n\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n */\n\n\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array.<*>} DeclutterGroup\n */\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n\n/**\n * @const\n * @type {module:ol/color~Color}\n */\nexport const defaultFillStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultLineCap = 'round';\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\nexport const defaultLineDash = [];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultLineJoin = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n\n/**\n * @const\n * @type {module:ol/color~Color}\n */\nexport const defaultStrokeStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {module:ol/structs/LRUCache.<HTMLCanvasElement>}\n * @api\n */\nexport const labelCache = new LRUCache();\n\n\n/**\n * @type {!Object.<string, number>}\n */\nexport const checkedFonts = {};\n\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n\n/**\n * @type {!Object.<string, number>}\n */\nexport const textHeights = {};\n\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const checkFont = (function() {\n  const retries = 60;\n  const checked = checkedFonts;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  function isAvailable(font) {\n    const context = getMeasureContext();\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      context.font = size + referenceFont;\n      referenceWidth = context.measureText(text).width;\n      if (font != referenceFont) {\n        context.font = size + font + ',' + referenceFont;\n        const width = context.measureText(text).width;\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    return available;\n  }\n\n  function check() {\n    let done = true;\n    for (const font in checked) {\n      if (checked[font] < retries) {\n        if (isAvailable(font)) {\n          checked[font] = retries;\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          labelCache.clear();\n        } else {\n          ++checked[font];\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function(fontSpec) {\n    const fontFamilies = getFontFamilies(fontSpec);\n    if (!fontFamilies) {\n      return;\n    }\n    for (let i = 0, ii = fontFamilies.length; i < ii; ++i) {\n      const fontFamily = fontFamilies[i];\n      if (!(fontFamily in checked)) {\n        checked[fontFamily] = retries;\n        if (!isAvailable(fontFamily)) {\n          checked[fontFamily] = 0;\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  return measureContext;\n}\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {module:ol/size~Size} Measurement.\n */\nexport const measureTextHeight = (function() {\n  let span;\n  const heights = textHeights;\n  return function(font) {\n    let height = heights[font];\n    if (height == undefined) {\n      if (!span) {\n        span = document.createElement('span');\n        span.textContent = 'M';\n        span.style.margin = span.style.padding = '0 !important';\n        span.style.position = 'absolute !important';\n        span.style.left = '-99999px !important';\n      }\n      span.style.font = font;\n      document.body.appendChild(span);\n      height = heights[font] = span.offsetHeight;\n      document.body.removeChild(span);\n    }\n    return height;\n  };\n})();\n\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  const measureContext = getMeasureContext();\n  if (font != measureContext.font) {\n    measureContext.font = font;\n  }\n  return measureContext.measureText(text).width;\n}\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n\nexport const resetTransform = createTransform();\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context,\n  transform, opacity, image, originX, originY, w, h, x, y, scale) {\n  let alpha;\n  if (opacity != 1) {\n    alpha = context.globalAlpha;\n    context.globalAlpha = alpha * opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n\n  if (alpha) {\n    context.globalAlpha = alpha;\n  }\n  if (transform) {\n    context.setTransform.apply(context, resetTransform);\n  }\n}\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/functions\n */\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {undefined} Nothing.\n */\nexport function UNDEFINED() {}\n","/**\n * @module ol/geom/Point\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdateFromCoordinate, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {deflateCoordinate} from '../geom/flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {module:ol/coordinate~Coordinate} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst Point = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(Point, SimpleGeometry);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/Point} Clone.\n * @override\n * @api\n */\nPoint.prototype.clone = function() {\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return point;\n};\n\n\n/**\n * @inheritDoc\n */\nPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  const flatCoordinates = this.flatCoordinates;\n  const squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n  if (squaredDistance < minSquaredDistance) {\n    const stride = this.stride;\n    for (let i = 0; i < stride; ++i) {\n      closestPoint[i] = flatCoordinates[i];\n    }\n    closestPoint.length = stride;\n    return squaredDistance;\n  } else {\n    return minSquaredDistance;\n  }\n};\n\n\n/**\n * Return the coordinate of the point.\n * @return {module:ol/coordinate~Coordinate} Coordinates.\n * @override\n * @api\n */\nPoint.prototype.getCoordinates = function() {\n  return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n};\n\n\n/**\n * @inheritDoc\n */\nPoint.prototype.computeExtent = function(extent) {\n  return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nPoint.prototype.getType = function() {\n  return GeometryType.POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nPoint.prototype.intersectsExtent = function(extent) {\n  return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default Point;\n","/**\n * @module ol/dom\n */\n\n\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n  const canvas = /** @type {HTMLCanvasElement} */ (document.createElement('CANVAS'));\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!Element} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!Element} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n","/**\n * @module ol/Object\n */\nimport {getUid, inherits} from './index.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {assign} from './obj.js';\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of\n * this type.\n *\n * @param {string} type The event type.\n * @param {string} key The property name.\n * @param {*} oldValue The old value for `key`.\n * @extends {module:ol/events/Event}\n * @constructor\n */\nconst ObjectEvent = function(type, key, oldValue) {\n  Event.call(this, type);\n\n  /**\n   * The name of the property whose value is changing.\n   * @type {string}\n   * @api\n   */\n  this.key = key;\n\n  /**\n   * The old value. To get the new value use `e.target.get(e.key)` where\n   * `e` is the event object.\n   * @type {*}\n   * @api\n   */\n  this.oldValue = oldValue;\n\n};\ninherits(ObjectEvent, Event);\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @constructor\n * @extends {module:ol/Observable}\n * @param {Object.<string, *>=} opt_values An object with key-value pairs.\n * @fires module:ol/Object~ObjectEvent\n * @api\n */\nconst BaseObject = function(opt_values) {\n  Observable.call(this);\n\n  // Call {@link module:ol~getUid} to ensure that the order of objects' ids is\n  // the same as the order in which they were created.  This also helps to\n  // ensure that object properties are always added in the same order, which\n  // helps many JavaScript engines generate faster code.\n  getUid(this);\n\n  /**\n   * @private\n   * @type {!Object.<string, *>}\n   */\n  this.values_ = {};\n\n  if (opt_values !== undefined) {\n    this.setProperties(opt_values);\n  }\n};\n\ninherits(BaseObject, Observable);\n\n\n/**\n * @type {Object.<string, string>}\n */\nconst changeEventTypeCache = {};\n\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key) ?\n    changeEventTypeCache[key] :\n    (changeEventTypeCache[key] = 'change:' + key);\n}\n\n\n/**\n * Gets a value.\n * @param {string} key Key name.\n * @return {*} Value.\n * @api\n */\nBaseObject.prototype.get = function(key) {\n  let value;\n  if (this.values_.hasOwnProperty(key)) {\n    value = this.values_[key];\n  }\n  return value;\n};\n\n\n/**\n * Get a list of object property names.\n * @return {Array.<string>} List of property names.\n * @api\n */\nBaseObject.prototype.getKeys = function() {\n  return Object.keys(this.values_);\n};\n\n\n/**\n * Get an object of all property names and values.\n * @return {Object.<string, *>} Object.\n * @api\n */\nBaseObject.prototype.getProperties = function() {\n  return assign({}, this.values_);\n};\n\n\n/**\n * @param {string} key Key name.\n * @param {*} oldValue Old value.\n */\nBaseObject.prototype.notify = function(key, oldValue) {\n  let eventType;\n  eventType = getChangeEventType(key);\n  this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  eventType = ObjectEventType.PROPERTYCHANGE;\n  this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n};\n\n\n/**\n * Sets a value.\n * @param {string} key Key name.\n * @param {*} value Value.\n * @param {boolean=} opt_silent Update without triggering an event.\n * @api\n */\nBaseObject.prototype.set = function(key, value, opt_silent) {\n  if (opt_silent) {\n    this.values_[key] = value;\n  } else {\n    const oldValue = this.values_[key];\n    this.values_[key] = value;\n    if (oldValue !== value) {\n      this.notify(key, oldValue);\n    }\n  }\n};\n\n\n/**\n * Sets a collection of key-value pairs.  Note that this changes any existing\n * properties and adds new ones (it does not remove any existing properties).\n * @param {Object.<string, *>} values Values.\n * @param {boolean=} opt_silent Update without triggering an event.\n * @api\n */\nBaseObject.prototype.setProperties = function(values, opt_silent) {\n  for (const key in values) {\n    this.set(key, values[key], opt_silent);\n  }\n};\n\n\n/**\n * Unsets a property.\n * @param {string} key Key name.\n * @param {boolean=} opt_silent Unset without triggering an event.\n * @api\n */\nBaseObject.prototype.unset = function(key, opt_silent) {\n  if (key in this.values_) {\n    const oldValue = this.values_[key];\n    delete this.values_[key];\n    if (!opt_silent) {\n      this.notify(key, oldValue);\n    }\n  }\n};\n\n\nexport default BaseObject;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @constructor\n * @param {number} decay Rate of decay (must be negative).\n * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n * @param {number} delay Delay to consider to calculate the kinetic\n *     initial values (milliseconds).\n * @struct\n * @api\n */\nconst Kinetic = function(decay, minVelocity, delay) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.decay_ = decay;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minVelocity_ = minVelocity;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delay_ = delay;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.points_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.angle_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.initialVelocity_ = 0;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nKinetic.prototype.begin = function() {\n  this.points_.length = 0;\n  this.angle_ = 0;\n  this.initialVelocity_ = 0;\n};\n\n\n/**\n * @param {number} x X.\n * @param {number} y Y.\n */\nKinetic.prototype.update = function(x, y) {\n  this.points_.push(x, y, Date.now());\n};\n\n\n/**\n * @return {boolean} Whether we should do kinetic animation.\n */\nKinetic.prototype.end = function() {\n  if (this.points_.length < 6) {\n    // at least 2 points are required (i.e. there must be at least 6 elements\n    // in the array)\n    return false;\n  }\n  const delay = Date.now() - this.delay_;\n  const lastIndex = this.points_.length - 3;\n  if (this.points_[lastIndex + 2] < delay) {\n    // the last tracked point is too old, which means that the user stopped\n    // panning before releasing the map\n    return false;\n  }\n\n  // get the first point which still falls into the delay time\n  let firstIndex = lastIndex - 3;\n  while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n    firstIndex -= 3;\n  }\n\n  const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n  // we don't want a duration of 0 (divide by zero)\n  // we also make sure the user panned for a duration of at least one frame\n  // (1/60s) to compute sane displacement values\n  if (duration < 1000 / 60) {\n    return false;\n  }\n\n  const dx = this.points_[lastIndex] - this.points_[firstIndex];\n  const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n  this.angle_ = Math.atan2(dy, dx);\n  this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n  return this.initialVelocity_ > this.minVelocity_;\n};\n\n\n/**\n * @return {number} Total distance travelled (pixels).\n */\nKinetic.prototype.getDistance = function() {\n  return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n};\n\n\n/**\n * @return {number} Angle of the kinetic panning animation (radians).\n */\nKinetic.prototype.getAngle = function() {\n  return this.angle_;\n};\nexport default Kinetic;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport {inherits} from '../index.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from '../interaction/Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n *\n * @constructor\n * @extends {module:ol/interaction/Interaction}\n * @param {module:ol/interaction/DoubleClickZoom~Options=} opt_options Options.\n * @api\n */\nconst DoubleClickZoom = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delta_ = options.delta ? options.delta : 1;\n\n  Interaction.call(this, {\n    handleEvent: handleEvent\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n};\n\ninherits(DoubleClickZoom, Interaction);\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  let stopEvent = false;\n  const browserEvent = mapBrowserEvent.originalEvent;\n  if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n    const map = mapBrowserEvent.map;\n    const anchor = mapBrowserEvent.coordinate;\n    const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n    const view = map.getView();\n    zoomByDelta(view, delta, anchor, this.duration_);\n    mapBrowserEvent.preventDefault();\n    stopEvent = true;\n  }\n  return !stopEvent;\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/DragPan\n */\nimport {inherits} from '../index.js';\nimport ViewHint from '../ViewHint.js';\nimport {scale as scaleCoordinate, rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {noModifierKeys} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys}.\n * @property {module:ol/Kinetic} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/DragPan~Options=} opt_options Options.\n * @api\n */\nconst DragPan = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {module:ol/Kinetic|undefined}\n   */\n  this.kinetic_ = options.kinetic;\n\n  /**\n   * @type {module:ol~Pixel}\n   */\n  this.lastCentroid = null;\n\n  /**\n   * @type {number}\n   */\n  this.lastPointersCount_;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.noKinetic_ = false;\n\n};\n\ninherits(DragPan, PointerInteraction);\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragPan}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  const targetPointers = this.targetPointers;\n  const centroid = centroidFromPointers(targetPointers);\n  if (targetPointers.length == this.lastPointersCount_) {\n    if (this.kinetic_) {\n      this.kinetic_.update(centroid[0], centroid[1]);\n    }\n    if (this.lastCentroid) {\n      const deltaX = this.lastCentroid[0] - centroid[0];\n      const deltaY = centroid[1] - this.lastCentroid[1];\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      let center = [deltaX, deltaY];\n      scaleCoordinate(center, view.getResolution());\n      rotateCoordinate(center, view.getRotation());\n      addCoordinate(center, view.getCenter());\n      center = view.constrainCenter(center);\n      view.setCenter(center);\n    }\n  } else if (this.kinetic_) {\n    // reset so we don't overestimate the kinetic energy after\n    // after one finger down, tiny drag, second finger down\n    this.kinetic_.begin();\n  }\n  this.lastCentroid = centroid;\n  this.lastPointersCount_ = targetPointers.length;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragPan}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  if (this.targetPointers.length === 0) {\n    if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n      const distance = this.kinetic_.getDistance();\n      const angle = this.kinetic_.getAngle();\n      const center = /** @type {!module:ol/coordinate~Coordinate} */ (view.getCenter());\n      const centerpx = map.getPixelFromCoordinate(center);\n      const dest = map.getCoordinateFromPixel([\n        centerpx[0] - distance * Math.cos(angle),\n        centerpx[1] - distance * Math.sin(angle)\n      ]);\n      view.animate({\n        center: view.constrainCenter(dest),\n        duration: 500,\n        easing: easeOut\n      });\n    }\n    view.setHint(ViewHint.INTERACTING, -1);\n    return false;\n  } else {\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragPan}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    this.lastCentroid = null;\n    if (!this.handlingDownUpSequence) {\n      view.setHint(ViewHint.INTERACTING, 1);\n    }\n    // stop any current animation\n    if (view.getAnimating()) {\n      view.setCenter(mapBrowserEvent.frameState.viewState.center);\n    }\n    if (this.kinetic_) {\n      this.kinetic_.begin();\n    }\n    // No kinetic as soon as more than one pointer on the screen is\n    // detected. This is to prevent nasty pans after pinch.\n    this.noKinetic_ = this.targetPointers.length > 1;\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\n/**\n * @inheritDoc\n */\nDragPan.prototype.shouldStopEvent = FALSE;\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport {inherits} from '../index.js';\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {altShiftKeysOnly, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/DragRotate~Options=} opt_options Options.\n * @api\n */\nconst DragRotate = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lastAngle_ = undefined;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n};\n\ninherits(DragRotate, PointerInteraction);\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragRotate}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  if (view.getConstraints().rotation === disable) {\n    return;\n  }\n  const size = map.getSize();\n  const offset = mapBrowserEvent.pixel;\n  const theta =\n      Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n  if (this.lastAngle_ !== undefined) {\n    const delta = theta - this.lastAngle_;\n    const rotation = view.getRotation();\n    rotateWithoutConstraints(view, rotation - delta);\n  }\n  this.lastAngle_ = theta;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragRotate}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  view.setHint(ViewHint.INTERACTING, -1);\n  const rotation = view.getRotation();\n  rotate(view, rotation, undefined, this.duration_);\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragRotate}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n    const map = mapBrowserEvent.map;\n    map.getView().setHint(ViewHint.INTERACTING, 1);\n    this.lastAngle_ = undefined;\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\n/**\n * @inheritDoc\n */\nDragRotate.prototype.shouldStopEvent = FALSE;\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n// FIXME add rotation\n\nimport {inherits} from '../index.js';\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\n/**\n * @constructor\n * @extends {module:ol/Disposable}\n * @param {string} className CSS class name.\n */\nconst RenderBox = function(className) {\n\n  /**\n   * @type {module:ol/geom/Polygon}\n   * @private\n   */\n  this.geometry_ = null;\n\n  /**\n   * @type {HTMLDivElement}\n   * @private\n   */\n  this.element_ = /** @type {HTMLDivElement} */ (document.createElement('div'));\n  this.element_.style.position = 'absolute';\n  this.element_.className = 'ol-box ' + className;\n\n  /**\n   * @private\n   * @type {module:ol/PluggableMap}\n   */\n  this.map_ = null;\n\n  /**\n   * @private\n   * @type {module:ol~Pixel}\n   */\n  this.startPixel_ = null;\n\n  /**\n   * @private\n   * @type {module:ol~Pixel}\n   */\n  this.endPixel_ = null;\n\n};\n\ninherits(RenderBox, Disposable);\n\n\n/**\n * @inheritDoc\n */\nRenderBox.prototype.disposeInternal = function() {\n  this.setMap(null);\n};\n\n\n/**\n * @private\n */\nRenderBox.prototype.render_ = function() {\n  const startPixel = this.startPixel_;\n  const endPixel = this.endPixel_;\n  const px = 'px';\n  const style = this.element_.style;\n  style.left = Math.min(startPixel[0], endPixel[0]) + px;\n  style.top = Math.min(startPixel[1], endPixel[1]) + px;\n  style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n  style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n};\n\n\n/**\n * @param {module:ol/PluggableMap} map Map.\n */\nRenderBox.prototype.setMap = function(map) {\n  if (this.map_) {\n    this.map_.getOverlayContainer().removeChild(this.element_);\n    const style = this.element_.style;\n    style.left = style.top = style.width = style.height = 'inherit';\n  }\n  this.map_ = map;\n  if (this.map_) {\n    this.map_.getOverlayContainer().appendChild(this.element_);\n  }\n};\n\n\n/**\n * @param {module:ol~Pixel} startPixel Start pixel.\n * @param {module:ol~Pixel} endPixel End pixel.\n */\nRenderBox.prototype.setPixels = function(startPixel, endPixel) {\n  this.startPixel_ = startPixel;\n  this.endPixel_ = endPixel;\n  this.createOrUpdateGeometry();\n  this.render_();\n};\n\n\n/**\n * Creates or updates the cached geometry.\n */\nRenderBox.prototype.createOrUpdateGeometry = function() {\n  const startPixel = this.startPixel_;\n  const endPixel = this.endPixel_;\n  const pixels = [\n    startPixel,\n    [startPixel[0], endPixel[1]],\n    endPixel,\n    [endPixel[0], startPixel[1]]\n  ];\n  const coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\n  // close the polygon\n  coordinates[4] = coordinates[0].slice();\n  if (!this.geometry_) {\n    this.geometry_ = new Polygon([coordinates]);\n  } else {\n    this.geometry_.setCoordinates([coordinates]);\n  }\n};\n\n\n/**\n * @return {module:ol/geom/Polygon} Geometry.\n */\nRenderBox.prototype.getGeometry = function() {\n  return this.geometry_;\n};\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {inherits} from '../index.js';\nimport {always, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {UNDEFINED} from '../functions.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport RenderBox from '../render/Box.js';\n\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, module:ol/MapBrowserEvent, module:ol~Pixel, module:ol~Pixel):boolean} EndCondition\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {module:ol/events/condition~Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {module:ol/interaction/DragBox~EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n */\n\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event module:ol/interaction/DragBox~DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event module:ol/interaction/DragBox~DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event module:ol/interaction/DragBox~DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n *\n * @param {string} type The event type.\n * @param {module:ol/coordinate~Coordinate} coordinate The event coordinate.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Originating event.\n * @extends {module:ol/events/Event}\n * @constructor\n */\nconst DragBoxEvent = function(type, coordinate, mapBrowserEvent) {\n  Event.call(this, type);\n\n  /**\n   * The coordinate of the drag event.\n   * @const\n   * @type {module:ol/coordinate~Coordinate}\n   * @api\n   */\n  this.coordinate = coordinate;\n\n  /**\n   * @const\n   * @type {module:ol/MapBrowserEvent}\n   * @api\n   */\n  this.mapBrowserEvent = mapBrowserEvent;\n\n};\n\ninherits(DragBoxEvent, Event);\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @fires module:ol/interaction/DragBox~DragBoxEvent\n * @param {module:ol/interaction/DragBox~Options=} opt_options Options.\n * @api\n */\nconst DragBox = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {module:ol/render/Box}\n   * @private\n   */\n  this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n  /**\n   * @type {module:ol~Pixel}\n   * @private\n   */\n  this.startPixel_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : always;\n\n  /**\n   * @private\n   * @type {module:ol/interaction/DragBox~EndCondition}\n   */\n  this.boxEndCondition_ = options.boxEndCondition ?\n    options.boxEndCondition : defaultBoxEndCondition;\n};\n\ninherits(DragBox, PointerInteraction);\n\n\n/**\n * The default condition for determining whether the boxend event\n * should fire.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent The originating MapBrowserEvent\n *     leading to the box end.\n * @param {module:ol~Pixel} startPixel The starting pixel of the box.\n * @param {module:ol~Pixel} endPixel The end pixel of the box.\n * @return {boolean} Whether or not the boxend condition should be fired.\n * @this {module:ol/interaction/DragBox}\n */\nfunction defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n  const width = endPixel[0] - startPixel[0];\n  const height = endPixel[1] - startPixel[1];\n  return width * width + height * height >= this.minArea_;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragBox}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n  this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG,\n    mapBrowserEvent.coordinate, mapBrowserEvent));\n}\n\n\n/**\n * Returns geometry of last drawn box.\n * @return {module:ol/geom/Polygon} Geometry.\n * @api\n */\nDragBox.prototype.getGeometry = function() {\n  return this.box_.getGeometry();\n};\n\n\n/**\n * To be overridden by child classes.\n * FIXME: use constructor option instead of relying on overriding.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @protected\n */\nDragBox.prototype.onBoxEnd = UNDEFINED;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragBox}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  this.box_.setMap(null);\n\n  if (this.boxEndCondition_(mapBrowserEvent,\n    this.startPixel_, mapBrowserEvent.pixel)) {\n    this.onBoxEnd(mapBrowserEvent);\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n  }\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragBox}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)) {\n    this.startPixel_ = mapBrowserEvent.pixel;\n    this.box_.setMap(mapBrowserEvent.map);\n    this.box_.setPixels(this.startPixel_, this.startPixel_);\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport {inherits} from '../index.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport {createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter} from '../extent.js';\nimport DragBox from '../interaction/DragBox.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n *\n * @constructor\n * @extends {module:ol/interaction/DragBox}\n * @param {module:ol/interaction/DragZoom~Options=} opt_options Options.\n * @api\n */\nconst DragZoom = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const condition = options.condition ? options.condition : shiftKeyOnly;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.out_ = options.out !== undefined ? options.out : false;\n\n  DragBox.call(this, {\n    condition: condition,\n    className: options.className || 'ol-dragzoom'\n  });\n\n};\n\ninherits(DragZoom, DragBox);\n\n\n/**\n * @inheritDoc\n */\nDragZoom.prototype.onBoxEnd = function() {\n  const map = this.getMap();\n\n  const view = /** @type {!module:ol/View} */ (map.getView());\n\n  const size = /** @type {!module:ol/size~Size} */ (map.getSize());\n\n  let extent = this.getGeometry().getExtent();\n\n  if (this.out_) {\n    const mapExtent = view.calculateExtent(size);\n    const boxPixelExtent = createOrUpdateFromCoordinates([\n      map.getPixelFromCoordinate(getBottomLeft(extent)),\n      map.getPixelFromCoordinate(getTopRight(extent))]);\n    const factor = view.getResolutionForExtent(boxPixelExtent, size);\n\n    scaleFromCenter(mapExtent, 1 / factor);\n    extent = mapExtent;\n  }\n\n  const resolution = view.constrainResolution(\n    view.getResolutionForExtent(extent, size));\n\n  let center = getCenter(extent);\n  center = view.constrainCenter(center);\n\n  view.animate({\n    resolution: resolution,\n    center: center,\n    duration: this.duration_,\n    easing: easeOut\n  });\n\n};\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {inherits} from '../index.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from '../interaction/Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n *\n * @constructor\n * @extends {module:ol/interaction/Interaction}\n * @param {module:ol/interaction/KeyboardPan~Options=} opt_options Options.\n * @api\n */\nconst KeyboardPan = function(opt_options) {\n\n  Interaction.call(this, {\n    handleEvent: handleEvent\n  });\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @param {module:ol/MapBrowserEvent} mapBrowserEvent Browser event.\n   * @return {boolean} Combined condition result.\n   */\n  this.defaultCondition_ = function(mapBrowserEvent) {\n    return noModifierKeys(mapBrowserEvent) &&\n      targetNotEditable(mapBrowserEvent);\n  };\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition !== undefined ?\n    options.condition : this.defaultCondition_;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelDelta_ = options.pixelDelta !== undefined ?\n    options.pixelDelta : 128;\n\n};\n\ninherits(KeyboardPan, Interaction);\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n  let stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN) {\n    const keyEvent = mapBrowserEvent.originalEvent;\n    const keyCode = keyEvent.keyCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n        keyCode == KeyCode.LEFT ||\n        keyCode == KeyCode.RIGHT ||\n        keyCode == KeyCode.UP)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n      let deltaX = 0, deltaY = 0;\n      if (keyCode == KeyCode.DOWN) {\n        deltaY = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.LEFT) {\n        deltaX = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.RIGHT) {\n        deltaX = mapUnitsDelta;\n      } else {\n        deltaY = mapUnitsDelta;\n      }\n      const delta = [deltaX, deltaY];\n      rotateCoordinate(delta, view.getRotation());\n      pan(view, delta, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport {inherits} from '../index.js';\nimport EventType from '../events/EventType.js';\nimport {targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from '../interaction/Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link moudle:ol/interaction/KeyboardPan~KeyboardPan}.\n *\n * @constructor\n * @param {module:ol/interaction/KeyboardZoom~Options=} opt_options Options.\n * @extends {module:ol/interaction/Interaction}\n * @api\n */\nconst KeyboardZoom = function(opt_options) {\n\n  Interaction.call(this, {\n    handleEvent: handleEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delta_ = options.delta ? options.delta : 1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n};\n\ninherits(KeyboardZoom, Interaction);\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  let stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS) {\n    const keyEvent = mapBrowserEvent.originalEvent;\n    const charCode = keyEvent.charCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n      const map = mapBrowserEvent.map;\n      const delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, undefined, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport {inherits} from '../index.js';\nimport ViewHint from '../ViewHint.js';\nimport {always} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX, SAFARI} from '../has.js';\nimport Interaction, {zoomByDelta} from '../interaction/Interaction.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Maximum mouse wheel delta.\n * @type {number}\n */\nconst MAX_DELTA = 1;\n\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [constrainResolution=false] When using a trackpad or\n * magic mouse, zoom to the closest integer zoom level after the scroll gesture\n * ends.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n *\n * @constructor\n * @extends {module:ol/interaction/Interaction}\n * @param {module:ol/interaction/MouseWheelZoom~Options=} opt_options Options.\n * @api\n */\nconst MouseWheelZoom = function(opt_options) {\n\n  Interaction.call(this, {\n    handleEvent: handleEvent\n  });\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delta_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.constrainResolution_ = options.constrainResolution || false;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : always;\n\n  /**\n   * @private\n   * @type {?module:ol/coordinate~Coordinate}\n   */\n  this.lastAnchor_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.startTime_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.timeoutId_ = undefined;\n\n  /**\n   * @private\n   * @type {module:ol/interaction/MouseWheelZoom~Mode|undefined}\n   */\n  this.mode_ = undefined;\n\n  /**\n   * Trackpad events separated by this delay will be considered separate\n   * interactions.\n   * @type {number}\n   */\n  this.trackpadEventGap_ = 400;\n\n  /**\n   * @type {number|undefined}\n   */\n  this.trackpadTimeoutId_ = undefined;\n\n  /**\n   * The number of delta values per zoom level\n   * @private\n   * @type {number}\n   */\n  this.trackpadDeltaPerZoom_ = 300;\n\n  /**\n   * The zoom factor by which scroll zooming is allowed to exceed the limits.\n   * @private\n   * @type {number}\n   */\n  this.trackpadZoomBuffer_ = 1.5;\n\n};\n\ninherits(MouseWheelZoom, Interaction);\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * mousewheel-event) and eventually zooms the map.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} Allow event propagation.\n * @this {module:ol/interaction/MouseWheelZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!this.condition_(mapBrowserEvent)) {\n    return true;\n  }\n  const type = mapBrowserEvent.type;\n  if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\n    return true;\n  }\n\n  mapBrowserEvent.preventDefault();\n\n  const map = mapBrowserEvent.map;\n  const wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n\n  if (this.useAnchor_) {\n    this.lastAnchor_ = mapBrowserEvent.coordinate;\n  }\n\n  // Delta normalisation inspired by\n  // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n  let delta;\n  if (mapBrowserEvent.type == EventType.WHEEL) {\n    delta = wheelEvent.deltaY;\n    if (FIREFOX &&\n        wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      delta /= DEVICE_PIXEL_RATIO;\n    }\n    if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      delta *= 40;\n    }\n  } else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\n    delta = -wheelEvent.wheelDeltaY;\n    if (SAFARI) {\n      delta /= 3;\n    }\n  }\n\n  if (delta === 0) {\n    return false;\n  }\n\n  const now = Date.now();\n\n  if (this.startTime_ === undefined) {\n    this.startTime_ = now;\n  }\n\n  if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n    this.mode_ = Math.abs(delta) < 4 ?\n      Mode.TRACKPAD :\n      Mode.WHEEL;\n  }\n\n  if (this.mode_ === Mode.TRACKPAD) {\n    const view = map.getView();\n    if (this.trackpadTimeoutId_) {\n      clearTimeout(this.trackpadTimeoutId_);\n    } else {\n      view.setHint(ViewHint.INTERACTING, 1);\n    }\n    this.trackpadTimeoutId_ = setTimeout(this.decrementInteractingHint_.bind(this), this.trackpadEventGap_);\n    let resolution = view.getResolution() * Math.pow(2, delta / this.trackpadDeltaPerZoom_);\n    const minResolution = view.getMinResolution();\n    const maxResolution = view.getMaxResolution();\n    let rebound = 0;\n    if (resolution < minResolution) {\n      resolution = Math.max(resolution, minResolution / this.trackpadZoomBuffer_);\n      rebound = 1;\n    } else if (resolution > maxResolution) {\n      resolution = Math.min(resolution, maxResolution * this.trackpadZoomBuffer_);\n      rebound = -1;\n    }\n    if (this.lastAnchor_) {\n      const center = view.calculateCenterZoom(resolution, this.lastAnchor_);\n      view.setCenter(view.constrainCenter(center));\n    }\n    view.setResolution(resolution);\n\n    if (rebound === 0 && this.constrainResolution_) {\n      view.animate({\n        resolution: view.constrainResolution(resolution, delta > 0 ? -1 : 1),\n        easing: easeOut,\n        anchor: this.lastAnchor_,\n        duration: this.duration_\n      });\n    }\n\n    if (rebound > 0) {\n      view.animate({\n        resolution: minResolution,\n        easing: easeOut,\n        anchor: this.lastAnchor_,\n        duration: 500\n      });\n    } else if (rebound < 0) {\n      view.animate({\n        resolution: maxResolution,\n        easing: easeOut,\n        anchor: this.lastAnchor_,\n        duration: 500\n      });\n    }\n    this.startTime_ = now;\n    return false;\n  }\n\n  this.delta_ += delta;\n\n  const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n  clearTimeout(this.timeoutId_);\n  this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n\n  return false;\n}\n\n\n/**\n * @private\n */\nMouseWheelZoom.prototype.decrementInteractingHint_ = function() {\n  this.trackpadTimeoutId_ = undefined;\n  const view = this.getMap().getView();\n  view.setHint(ViewHint.INTERACTING, -1);\n};\n\n\n/**\n * @private\n * @param {module:ol/PluggableMap} map Map.\n */\nMouseWheelZoom.prototype.handleWheelZoom_ = function(map) {\n  const view = map.getView();\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  const maxDelta = MAX_DELTA;\n  const delta = clamp(this.delta_, -maxDelta, maxDelta);\n  zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n  this.mode_ = undefined;\n  this.delta_ = 0;\n  this.lastAnchor_ = null;\n  this.startTime_ = undefined;\n  this.timeoutId_ = undefined;\n};\n\n\n/**\n * Enable or disable using the mouse's location as an anchor when zooming\n * @param {boolean} useAnchor true to zoom to the mouse's location, false\n * to zoom to the center of the map\n * @api\n */\nMouseWheelZoom.prototype.setMouseAnchor = function(useAnchor) {\n  this.useAnchor_ = useAnchor;\n  if (!useAnchor) {\n    this.lastAnchor_ = null;\n  }\n};\n\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport {inherits} from '../index.js';\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from '../interaction/Pointer.js';\nimport {disable} from '../rotationconstraint.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/PinchRotate~Options=} opt_options Options.\n * @api\n */\nconst PinchRotate = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.anchor_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lastAngle_ = undefined;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.rotating_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.rotationDelta_ = 0.0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n};\n\ninherits(PinchRotate, PointerInteraction);\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/PinchRotate}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  let rotationDelta = 0.0;\n\n  const touch0 = this.targetPointers[0];\n  const touch1 = this.targetPointers[1];\n\n  // angle between touches\n  const angle = Math.atan2(\n    touch1.clientY - touch0.clientY,\n    touch1.clientX - touch0.clientX);\n\n  if (this.lastAngle_ !== undefined) {\n    const delta = angle - this.lastAngle_;\n    this.rotationDelta_ += delta;\n    if (!this.rotating_ &&\n        Math.abs(this.rotationDelta_) > this.threshold_) {\n      this.rotating_ = true;\n    }\n    rotationDelta = delta;\n  }\n  this.lastAngle_ = angle;\n\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  if (view.getConstraints().rotation === disable) {\n    return;\n  }\n\n  // rotate anchor point.\n  // FIXME: should be the intersection point between the lines:\n  //     touch0,touch1 and previousTouch0,previousTouch1\n  const viewportPosition = map.getViewport().getBoundingClientRect();\n  const centroid = centroidFromPointers(this.targetPointers);\n  centroid[0] -= viewportPosition.left;\n  centroid[1] -= viewportPosition.top;\n  this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n  // rotate\n  if (this.rotating_) {\n    const rotation = view.getRotation();\n    map.render();\n    rotateWithoutConstraints(view, rotation + rotationDelta, this.anchor_);\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/PinchRotate}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (this.targetPointers.length < 2) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    if (this.rotating_) {\n      const rotation = view.getRotation();\n      rotate(view, rotation, this.anchor_, this.duration_);\n    }\n    return false;\n  } else {\n    return true;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/PinchRotate}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (this.targetPointers.length >= 2) {\n    const map = mapBrowserEvent.map;\n    this.anchor_ = null;\n    this.lastAngle_ = undefined;\n    this.rotating_ = false;\n    this.rotationDelta_ = 0.0;\n    if (!this.handlingDownUpSequence) {\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\n/**\n * @inheritDoc\n */\nPinchRotate.prototype.shouldStopEvent = FALSE;\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport {inherits} from '../index.js';\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {zoom, zoomWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the pinch gesture ends.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/PinchZoom~Options=} opt_options Options.\n * @api\n */\nconst PinchZoom = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.constrainResolution_ = options.constrainResolution || false;\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.anchor_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lastDistance_ = undefined;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.lastScaleDelta_ = 1;\n\n};\n\ninherits(PinchZoom, PointerInteraction);\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/PinchZoom}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  let scaleDelta = 1.0;\n\n  const touch0 = this.targetPointers[0];\n  const touch1 = this.targetPointers[1];\n  const dx = touch0.clientX - touch1.clientX;\n  const dy = touch0.clientY - touch1.clientY;\n\n  // distance between touches\n  const distance = Math.sqrt(dx * dx + dy * dy);\n\n  if (this.lastDistance_ !== undefined) {\n    scaleDelta = this.lastDistance_ / distance;\n  }\n  this.lastDistance_ = distance;\n\n\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  const resolution = view.getResolution();\n  const maxResolution = view.getMaxResolution();\n  const minResolution = view.getMinResolution();\n  let newResolution = resolution * scaleDelta;\n  if (newResolution > maxResolution) {\n    scaleDelta = maxResolution / resolution;\n    newResolution = maxResolution;\n  } else if (newResolution < minResolution) {\n    scaleDelta = minResolution / resolution;\n    newResolution = minResolution;\n  }\n\n  if (scaleDelta != 1.0) {\n    this.lastScaleDelta_ = scaleDelta;\n  }\n\n  // scale anchor point.\n  const viewportPosition = map.getViewport().getBoundingClientRect();\n  const centroid = centroidFromPointers(this.targetPointers);\n  centroid[0] -= viewportPosition.left;\n  centroid[1] -= viewportPosition.top;\n  this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n  // scale, bypass the resolution constraint\n  map.render();\n  zoomWithoutConstraints(view, newResolution, this.anchor_);\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/PinchZoom}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (this.targetPointers.length < 2) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    const resolution = view.getResolution();\n    if (this.constrainResolution_ ||\n        resolution < view.getMinResolution() ||\n        resolution > view.getMaxResolution()) {\n      // Zoom to final resolution, with an animation, and provide a\n      // direction not to zoom out/in if user was pinching in/out.\n      // Direction is > 0 if pinching out, and < 0 if pinching in.\n      const direction = this.lastScaleDelta_ - 1;\n      zoom(view, resolution, this.anchor_, this.duration_, direction);\n    }\n    return false;\n  } else {\n    return true;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/PinchZoom}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (this.targetPointers.length >= 2) {\n    const map = mapBrowserEvent.map;\n    this.anchor_ = null;\n    this.lastDistance_ = undefined;\n    this.lastScaleDelta_ = 1;\n    if (!this.handlingDownUpSequence) {\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\n/**\n * @inheritDoc\n */\nPinchZoom.prototype.shouldStopEvent = FALSE;\nexport default PinchZoom;\n","/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\n\nimport {inherits} from '../index.js';\nimport {TRUE} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Interaction from '../interaction/Interaction.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array.<function(new: module:ol/format/Feature)>} [formatConstructors] Format constructors.\n * @property {module:ol/source/Vector} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {module:ol/proj~ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {Element} [target] The element that is used as the drop target, default is the viewport element.\n */\n\n\n/**\n * @enum {string}\n */\nconst DragAndDropEventType = {\n  /**\n   * Triggered when features are added\n   * @event module:ol/interaction/DragAndDrop~DragAndDropEvent#addfeatures\n   * @api\n   */\n  ADD_FEATURES: 'addfeatures'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {module:ol/interaction/DragAndDrop~DragAndDropEventType} type Type.\n * @param {File} file File.\n * @param {Array.<module:ol/Feature>=} opt_features Features.\n * @param {module:ol/proj/Projection=} opt_projection Projection.\n */\nconst DragAndDropEvent = function(type, file, opt_features, opt_projection) {\n\n  Event.call(this, type);\n\n  /**\n   * The features parsed from dropped data.\n   * @type {Array.<module:ol/Feature>|undefined}\n   * @api\n   */\n  this.features = opt_features;\n\n  /**\n   * The dropped file.\n   * @type {File}\n   * @api\n   */\n  this.file = file;\n\n  /**\n   * The feature projection.\n   * @type {module:ol/proj/Projection|undefined}\n   * @api\n   */\n  this.projection = opt_projection;\n\n};\ninherits(DragAndDropEvent, Event);\n\n\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n *\n * @constructor\n * @extends {module:ol/interaction/Interaction}\n * @fires module:ol/interaction/DragAndDrop~DragAndDropEvent\n * @param {module:ol/interaction/DragAndDrop~Options=} opt_options Options.\n * @api\n */\nconst DragAndDrop = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  Interaction.call(this, {\n    handleEvent: TRUE\n  });\n\n  /**\n   * @private\n   * @type {Array.<function(new: module:ol/format/Feature)>}\n   */\n  this.formatConstructors_ = options.formatConstructors ?\n    options.formatConstructors : [];\n\n  /**\n   * @private\n   * @type {module:ol/proj/Projection}\n   */\n  this.projection_ = options.projection ?\n    getProjection(options.projection) : null;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.dropListenKeys_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/source/Vector}\n   */\n  this.source_ = options.source || null;\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.target = options.target ? options.target : null;\n\n};\n\ninherits(DragAndDrop, Interaction);\n\n\n/**\n * @param {DragEvent} event Event.\n * @this {module:ol/interaction/DragAndDrop}\n */\nfunction handleDrop(event) {\n  const files = event.dataTransfer.files;\n  for (let i = 0, ii = files.length; i < ii; ++i) {\n    const file = files.item(i);\n    const reader = new FileReader();\n    reader.addEventListener(EventType.LOAD, this.handleResult_.bind(this, file));\n    reader.readAsText(file);\n  }\n}\n\n\n/**\n * @param {DragEvent} event Event.\n */\nfunction handleStop(event) {\n  event.stopPropagation();\n  event.preventDefault();\n  event.dataTransfer.dropEffect = 'copy';\n}\n\n\n/**\n * @param {File} file File.\n * @param {Event} event Load event.\n * @private\n */\nDragAndDrop.prototype.handleResult_ = function(file, event) {\n  const result = event.target.result;\n  const map = this.getMap();\n  let projection = this.projection_;\n  if (!projection) {\n    const view = map.getView();\n    projection = view.getProjection();\n  }\n\n  const formatConstructors = this.formatConstructors_;\n  let features = [];\n  for (let i = 0, ii = formatConstructors.length; i < ii; ++i) {\n    /**\n     * Avoid \"cannot instantiate abstract class\" error.\n     * @type {Function}\n     */\n    const formatConstructor = formatConstructors[i];\n    /**\n     * @type {module:ol/format/Feature}\n     */\n    const format = new formatConstructor();\n    features = this.tryReadFeatures_(format, result, {\n      featureProjection: projection\n    });\n    if (features && features.length > 0) {\n      break;\n    }\n  }\n  if (this.source_) {\n    this.source_.clear();\n    this.source_.addFeatures(features);\n  }\n  this.dispatchEvent(\n    new DragAndDropEvent(\n      DragAndDropEventType.ADD_FEATURES, file,\n      features, projection));\n};\n\n\n/**\n * @private\n */\nDragAndDrop.prototype.registerListeners_ = function() {\n  const map = this.getMap();\n  if (map) {\n    const dropArea = this.target ? this.target : map.getViewport();\n    this.dropListenKeys_ = [\n      listen(dropArea, EventType.DROP, handleDrop, this),\n      listen(dropArea, EventType.DRAGENTER, handleStop, this),\n      listen(dropArea, EventType.DRAGOVER, handleStop, this),\n      listen(dropArea, EventType.DROP, handleStop, this)\n    ];\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nDragAndDrop.prototype.setActive = function(active) {\n  Interaction.prototype.setActive.call(this, active);\n  if (active) {\n    this.registerListeners_();\n  } else {\n    this.unregisterListeners_();\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nDragAndDrop.prototype.setMap = function(map) {\n  this.unregisterListeners_();\n  Interaction.prototype.setMap.call(this, map);\n  if (this.getActive()) {\n    this.registerListeners_();\n  }\n};\n\n\n/**\n * @param {module:ol/format/Feature} format Format.\n * @param {string} text Text.\n * @param {module:ol/format/Feature~ReadOptions} options Read options.\n * @private\n * @return {Array.<module:ol/Feature>} Features.\n */\nDragAndDrop.prototype.tryReadFeatures_ = function(format, text, options) {\n  try {\n    return format.readFeatures(text, options);\n  } catch (e) {\n    return null;\n  }\n};\n\n\n/**\n * @private\n */\nDragAndDrop.prototype.unregisterListeners_ = function() {\n  if (this.dropListenKeys_) {\n    this.dropListenKeys_.forEach(unlistenByKey);\n    this.dropListenKeys_ = null;\n  }\n};\n\n\nexport default DragAndDrop;\n","/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport {inherits} from '../index.js';\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {shiftKeyOnly, mouseOnly} from '../events/condition.js';\nimport {rotate, rotateWithoutConstraints, zoom, zoomWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/DragRotateAndZoom~Options=} opt_options Options.\n * @api\n */\nconst DragRotateAndZoom = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lastAngle_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lastMagnitude_ = undefined;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.lastScaleDelta_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n};\n\ninherits(DragRotateAndZoom, PointerInteraction);\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragRotateAndZoom}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  const map = mapBrowserEvent.map;\n  const size = map.getSize();\n  const offset = mapBrowserEvent.pixel;\n  const deltaX = offset[0] - size[0] / 2;\n  const deltaY = size[1] / 2 - offset[1];\n  const theta = Math.atan2(deltaY, deltaX);\n  const magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n  const view = map.getView();\n  if (view.getConstraints().rotation !== disable && this.lastAngle_ !== undefined) {\n    const angleDelta = theta - this.lastAngle_;\n    rotateWithoutConstraints(view, view.getRotation() - angleDelta);\n  }\n  this.lastAngle_ = theta;\n  if (this.lastMagnitude_ !== undefined) {\n    const resolution = this.lastMagnitude_ * (view.getResolution() / magnitude);\n    zoomWithoutConstraints(view, resolution);\n  }\n  if (this.lastMagnitude_ !== undefined) {\n    this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n  }\n  this.lastMagnitude_ = magnitude;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragRotateAndZoom}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  view.setHint(ViewHint.INTERACTING, -1);\n  const direction = this.lastScaleDelta_ - 1;\n  rotate(view, view.getRotation());\n  zoom(view, view.getResolution(), undefined, this.duration_, direction);\n  this.lastScaleDelta_ = 0;\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragRotateAndZoom}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (this.condition_(mapBrowserEvent)) {\n    mapBrowserEvent.map.getView().setHint(ViewHint.INTERACTING, 1);\n    this.lastAngle_ = undefined;\n    this.lastMagnitude_ = undefined;\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport default DragRotateAndZoom;\n","/**\n * @module ol/interaction/Modify\n */\nimport {getUid, inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {equals} from '../array.js';\nimport {equals as coordinatesEqual, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment, closestOnSegment} from '../coordinate.js';\nimport {listen, unlisten} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {always, primaryAction, altKeyOnly, singleClick} from '../events/condition.js';\nimport {boundingExtent, buffer, createOrUpdateFromCoordinate} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @enum {string}\n */\nconst ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend'\n};\n\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array.<number>} [depth]\n * @property {module:ol/Feature} feature\n * @property {module:ol/geom/SimpleGeometry} geometry\n * @property {number} index\n * @property {Array.<module:ol/extent~Extent>} segment\n * @property {Array.<module:ol/interaction/Modify~SegmentData>} [featureSegments]\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition~primaryAction}.\n * @property {module:ol/events/condition~Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition~singleClick} with\n * {@link module:ol/events/condition~altKeyOnly} results in a vertex deletion.\n * @property {module:ol/events/condition~Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex can be added to the sketch\n * features. Default is {@link module:ol/events/condition~always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style]\n * Style used for the features being modified. By default the default edit\n * style is used (see {@link module:ol/style}).\n * @property {module:ol/source/Vector} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the features option.\n * @property {module:ol/Collection.<module:ol/Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the source option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {ModifyEventType} type Type.\n * @param {module:ol/Collection.<module:ol/Feature>} features\n * The features modified.\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserPointerEvent\n * Associated {@link module:ol/MapBrowserPointerEvent}.\n */\nexport const ModifyEvent = function(type, features, mapBrowserPointerEvent) {\n\n  Event.call(this, type);\n\n  /**\n   * The features being modified.\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   * @api\n   */\n  this.features = features;\n\n  /**\n   * Associated {@link module:ol/MapBrowserEvent}.\n   * @type {module:ol/MapBrowserEvent}\n   * @api\n   */\n  this.mapBrowserEvent = mapBrowserPointerEvent;\n};\n\ninherits(ModifyEvent, Event);\n\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/Modify~Options} options Options.\n * @fires module:ol/interaction/Modify~ModifyEvent\n * @api\n */\nconst Modify = function(options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleEvent: handleEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : primaryAction;\n\n\n  /**\n   * @private\n   * @param {module:ol/MapBrowserEvent} mapBrowserEvent Browser event.\n   * @return {boolean} Combined condition result.\n   */\n  this.defaultDeleteCondition_ = function(mapBrowserEvent) {\n    return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n  };\n\n  /**\n   * @type {module:ol/events/condition~Condition}\n   * @private\n   */\n  this.deleteCondition_ = options.deleteCondition ?\n    options.deleteCondition : this.defaultDeleteCondition_;\n\n  /**\n   * @type {module:ol/events/condition~Condition}\n   * @private\n   */\n  this.insertVertexCondition_ = options.insertVertexCondition ?\n    options.insertVertexCondition : always;\n\n  /**\n   * Editing vertex.\n   * @type {module:ol/Feature}\n   * @private\n   */\n  this.vertexFeature_ = null;\n\n  /**\n   * Segments intersecting {@link this.vertexFeature_} by segment uid.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.vertexSegments_ = null;\n\n  /**\n   * @type {module:ol~Pixel}\n   * @private\n   */\n  this.lastPixel_ = [0, 0];\n\n  /**\n   * Tracks if the next `singleclick` event should be ignored to prevent\n   * accidental deletion right after vertex creation.\n   * @type {boolean}\n   * @private\n   */\n  this.ignoreNextSingleClick_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * Segment RTree for each layer\n   * @type {module:ol/structs/RBush.<module:ol/interaction/Modify~SegmentData>}\n   * @private\n   */\n  this.rBush_ = new RBush();\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.snappedToVertex_ = false;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.dragSegments_ = [];\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {module:ol/layer/Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style ? options.style :\n      getDefaultStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @const\n   * @private\n   * @type {!Object.<string, function(module:ol/Feature, module:ol/geom/Geometry)>}\n   */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'Circle': this.writeCircleGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_\n  };\n\n\n  /**\n   * @type {module:ol/source/Vector}\n   * @private\n   */\n  this.source_ = null;\n\n  let features;\n  if (options.source) {\n    this.source_ = options.source;\n    features = new Collection(this.source_.getFeatures());\n    listen(this.source_, VectorEventType.ADDFEATURE,\n      this.handleSourceAdd_, this);\n    listen(this.source_, VectorEventType.REMOVEFEATURE,\n      this.handleSourceRemove_, this);\n  } else {\n    features = options.features;\n  }\n  if (!features) {\n    throw new Error('The modify interaction requires features or a source');\n  }\n\n  /**\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   * @private\n   */\n  this.features_ = features;\n\n  this.features_.forEach(this.addFeature_.bind(this));\n  listen(this.features_, CollectionEventType.ADD,\n    this.handleFeatureAdd_, this);\n  listen(this.features_, CollectionEventType.REMOVE,\n    this.handleFeatureRemove_, this);\n\n  /**\n   * @type {module:ol/MapBrowserPointerEvent}\n   * @private\n   */\n  this.lastPointerEvent_ = null;\n\n};\n\ninherits(Modify, PointerInteraction);\n\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @private\n */\nModify.prototype.addFeature_ = function(feature) {\n  const geometry = feature.getGeometry();\n  if (geometry && geometry.getType() in this.SEGMENT_WRITERS_) {\n    this.SEGMENT_WRITERS_[geometry.getType()].call(this, feature, geometry);\n  }\n  const map = this.getMap();\n  if (map && map.isRendered() && this.getActive()) {\n    this.handlePointerAtPixel_(this.lastPixel_, map);\n  }\n  listen(feature, EventType.CHANGE,\n    this.handleFeatureChange_, this);\n};\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nModify.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    this.dispatchEvent(new ModifyEvent(\n      ModifyEventType.MODIFYSTART, this.features_, evt));\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @private\n */\nModify.prototype.removeFeature_ = function(feature) {\n  this.removeFeatureSegmentData_(feature);\n  // Remove the vertex feature if the collection of canditate features\n  // is empty.\n  if (this.vertexFeature_ && this.features_.getLength() === 0) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n  unlisten(feature, EventType.CHANGE,\n    this.handleFeatureChange_, this);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @private\n */\nModify.prototype.removeFeatureSegmentData_ = function(feature) {\n  const rBush = this.rBush_;\n  const /** @type {Array.<module:ol/interaction/Modify~SegmentData>} */ nodesToRemove = [];\n  rBush.forEach(\n    /**\n     * @param {module:ol/interaction/Modify~SegmentData} node RTree node.\n     */\n    function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n  for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n    rBush.remove(nodesToRemove[i]);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nModify.prototype.setActive = function(active) {\n  if (this.vertexFeature_ && !active) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n  PointerInteraction.prototype.setActive.call(this, active);\n};\n\n\n/**\n * @inheritDoc\n */\nModify.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  PointerInteraction.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {module:ol/source/Vector~VectorSourceEvent} event Event.\n * @private\n */\nModify.prototype.handleSourceAdd_ = function(event) {\n  if (event.feature) {\n    this.features_.push(event.feature);\n  }\n};\n\n\n/**\n * @param {module:ol/source/Vector~VectorSourceEvent} event Event.\n * @private\n */\nModify.prototype.handleSourceRemove_ = function(event) {\n  if (event.feature) {\n    this.features_.remove(event.feature);\n  }\n};\n\n\n/**\n * @param {module:ol/Collection~CollectionEvent} evt Event.\n * @private\n */\nModify.prototype.handleFeatureAdd_ = function(evt) {\n  this.addFeature_(/** @type {module:ol/Feature} */ (evt.element));\n};\n\n\n/**\n * @param {module:ol/events/Event} evt Event.\n * @private\n */\nModify.prototype.handleFeatureChange_ = function(evt) {\n  if (!this.changingFeature_) {\n    const feature = /** @type {module:ol/Feature} */ (evt.target);\n    this.removeFeature_(feature);\n    this.addFeature_(feature);\n  }\n};\n\n\n/**\n * @param {module:ol/Collection~CollectionEvent} evt Event.\n * @private\n */\nModify.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {module:ol/Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/Point} geometry Geometry.\n * @private\n */\nModify.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n    feature: feature,\n    geometry: geometry,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/MultiPoint} geometry Geometry.\n * @private\n */\nModify.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  for (let i = 0, ii = points.length; i < ii; ++i) {\n    const coordinates = points[i];\n    const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      depth: [i],\n      index: i,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/LineString} geometry Geometry.\n * @private\n */\nModify.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      index: i,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/MultiLineString} geometry Geometry.\n * @private\n */\nModify.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  for (let j = 0, jj = lines.length; j < jj; ++j) {\n    const coordinates = lines[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/Polygon} geometry Geometry.\n * @private\n */\nModify.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  for (let j = 0, jj = rings.length; j < jj; ++j) {\n    const coordinates = rings[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n * @private\n */\nModify.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  for (let k = 0, kk = polygons.length; k < kk; ++k) {\n    const rings = polygons[k];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n          feature: feature,\n          geometry: geometry,\n          depth: [j, k],\n          index: i,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * We convert a circle into two segments.  The segment at index\n * {@link CIRCLE_CENTER_INDEX} is the\n * circle's center (a point).  The segment at index\n * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n * the circumference, and is not a line segment.\n *\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/geom/Circle} geometry Geometry.\n * @private\n */\nModify.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCenter();\n  const centerSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n    feature: feature,\n    geometry: geometry,\n    index: CIRCLE_CENTER_INDEX,\n    segment: [coordinates, coordinates]\n  });\n  const circumferenceSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n    feature: feature,\n    geometry: geometry,\n    index: CIRCLE_CIRCUMFERENCE_INDEX,\n    segment: [coordinates, coordinates]\n  });\n  const featureSegments = [centerSegmentData, circumferenceSegmentData];\n  centerSegmentData.featureSegments = circumferenceSegmentData.featureSegments = featureSegments;\n  this.rBush_.insert(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n  this.rBush_.insert(geometry.getExtent(), circumferenceSegmentData);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n * @private\n */\nModify.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    this.SEGMENT_WRITERS_[geometries[i].getType()].call(this, feature, geometries[i]);\n  }\n};\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinates Coordinates.\n * @return {module:ol/Feature} Vertex feature.\n * @private\n */\nModify.prototype.createOrUpdateVertexFeature_ = function(coordinates) {\n  let vertexFeature = this.vertexFeature_;\n  if (!vertexFeature) {\n    vertexFeature = new Feature(new Point(coordinates));\n    this.vertexFeature_ = vertexFeature;\n    this.overlay_.getSource().addFeature(vertexFeature);\n  } else {\n    const geometry = /** @type {module:ol/geom/Point} */ (vertexFeature.getGeometry());\n    geometry.setCoordinates(coordinates);\n  }\n  return vertexFeature;\n};\n\n\n/**\n * @param {module:ol/interaction/Modify~SegmentData} a The first segment data.\n * @param {module:ol/interaction/Modify~SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/Modify}\n */\nfunction handleDownEvent(evt) {\n  if (!this.condition_(evt)) {\n    return false;\n  }\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n  const pixelCoordinate = evt.map.getCoordinateFromPixel(evt.pixel);\n  this.dragSegments_.length = 0;\n  this.modified_ = false;\n  const vertexFeature = this.vertexFeature_;\n  if (vertexFeature) {\n    const insertVertices = [];\n    const geometry = /** @type {module:ol/geom/Point} */ (vertexFeature.getGeometry());\n    const vertex = geometry.getCoordinates();\n    const vertexExtent = boundingExtent([vertex]);\n    const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n    const componentSegments = {};\n    segmentDataMatches.sort(compareIndexes);\n    for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n      const segmentDataMatch = segmentDataMatches[i];\n      const segment = segmentDataMatch.segment;\n      let uid = getUid(segmentDataMatch.feature);\n      const depth = segmentDataMatch.depth;\n      if (depth) {\n        uid += '-' + depth.join('-'); // separate feature components\n      }\n      if (!componentSegments[uid]) {\n        componentSegments[uid] = new Array(2);\n      }\n      if (segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\n      segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n\n        const closestVertex = closestOnSegmentData(pixelCoordinate, segmentDataMatch);\n        if (coordinatesEqual(closestVertex, vertex) && !componentSegments[uid][0]) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n        }\n      } else if (coordinatesEqual(segment[0], vertex) &&\n          !componentSegments[uid][0]) {\n        this.dragSegments_.push([segmentDataMatch, 0]);\n        componentSegments[uid][0] = segmentDataMatch;\n      } else if (coordinatesEqual(segment[1], vertex) &&\n          !componentSegments[uid][1]) {\n\n        // prevent dragging closed linestrings by the connecting node\n        if ((segmentDataMatch.geometry.getType() ===\n            GeometryType.LINE_STRING ||\n            segmentDataMatch.geometry.getType() ===\n            GeometryType.MULTI_LINE_STRING) &&\n            componentSegments[uid][0] &&\n            componentSegments[uid][0].index === 0) {\n          continue;\n        }\n\n        this.dragSegments_.push([segmentDataMatch, 1]);\n        componentSegments[uid][1] = segmentDataMatch;\n      } else if (this.insertVertexCondition_(evt) && getUid(segment) in this.vertexSegments_ &&\n          (!componentSegments[uid][0] && !componentSegments[uid][1])) {\n        insertVertices.push([segmentDataMatch, vertex]);\n      }\n    }\n    if (insertVertices.length) {\n      this.willModifyFeatures_(evt);\n    }\n    for (let j = insertVertices.length - 1; j >= 0; --j) {\n      this.insertVertex_.apply(this, insertVertices[j]);\n    }\n  }\n  return !!this.vertexFeature_;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @this {module:ol/interaction/Modify}\n */\nfunction handleDragEvent(evt) {\n  this.ignoreNextSingleClick_ = false;\n  this.willModifyFeatures_(evt);\n\n  const vertex = evt.coordinate;\n  for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n    const dragSegment = this.dragSegments_[i];\n    const segmentData = dragSegment[0];\n    const depth = segmentData.depth;\n    const geometry = segmentData.geometry;\n    let coordinates;\n    const segment = segmentData.segment;\n    const index = dragSegment[1];\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(segment[index][vertex.length]);\n    }\n\n    switch (geometry.getType()) {\n      case GeometryType.POINT:\n        coordinates = vertex;\n        segment[0] = segment[1] = vertex;\n        break;\n      case GeometryType.MULTI_POINT:\n        coordinates = geometry.getCoordinates();\n        coordinates[segmentData.index] = vertex;\n        segment[0] = segment[1] = vertex;\n        break;\n      case GeometryType.LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.MULTI_POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.CIRCLE:\n        segment[0] = segment[1] = vertex;\n        if (segmentData.index === CIRCLE_CENTER_INDEX) {\n          this.changingFeature_ = true;\n          geometry.setCenter(vertex);\n          this.changingFeature_ = false;\n        } else { // We're dragging the circle's circumference:\n          this.changingFeature_ = true;\n          geometry.setRadius(coordinateDistance(geometry.getCenter(), vertex));\n          this.changingFeature_ = false;\n        }\n        break;\n      default:\n        // pass\n    }\n\n    if (coordinates) {\n      this.setGeometryCoordinates_(geometry, coordinates);\n    }\n  }\n  this.createOrUpdateVertexFeature_(vertex);\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Modify}\n */\nfunction handleUpEvent(evt) {\n  for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\n    const segmentData = this.dragSegments_[i][0];\n    const geometry = segmentData.geometry;\n    if (geometry.getType() === GeometryType.CIRCLE) {\n      // Update a circle object in the R* bush:\n      const coordinates = geometry.getCenter();\n      const centerSegmentData = segmentData.featureSegments[0];\n      const circumferenceSegmentData = segmentData.featureSegments[1];\n      centerSegmentData.segment[0] = centerSegmentData.segment[1] = coordinates;\n      circumferenceSegmentData.segment[0] = circumferenceSegmentData.segment[1] = coordinates;\n      this.rBush_.update(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n      this.rBush_.update(geometry.getExtent(), circumferenceSegmentData);\n    } else {\n      this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n    }\n  }\n  if (this.modified_) {\n    this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n    this.modified_ = false;\n  }\n  return false;\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may modify the\n * geometry.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Modify}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n  this.lastPointerEvent_ = mapBrowserEvent;\n\n  let handled;\n  if (!mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n  if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n    if (mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK || !this.ignoreNextSingleClick_) {\n      handled = this.removePoint();\n    } else {\n      handled = true;\n    }\n  }\n\n  if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n    this.ignoreNextSingleClick_ = false;\n  }\n\n  return handlePointerEvent.call(this, mapBrowserEvent) && !handled;\n}\n\n\n/**\n * @param {module:ol/MapBrowserEvent} evt Event.\n * @private\n */\nModify.prototype.handlePointerMove_ = function(evt) {\n  this.lastPixel_ = evt.pixel;\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n};\n\n\n/**\n * @param {module:ol~Pixel} pixel Pixel\n * @param {module:ol/PluggableMap} map Map.\n * @private\n */\nModify.prototype.handlePointerAtPixel_ = function(pixel, map) {\n  const pixelCoordinate = map.getCoordinateFromPixel(pixel);\n  const sortByDistance = function(a, b) {\n    return pointDistanceToSegmentDataSquared(pixelCoordinate, a) -\n        pointDistanceToSegmentDataSquared(pixelCoordinate, b);\n  };\n\n  const box = buffer(createOrUpdateFromCoordinate(pixelCoordinate),\n    map.getView().getResolution() * this.pixelTolerance_);\n\n  const rBush = this.rBush_;\n  const nodes = rBush.getInExtent(box);\n  if (nodes.length > 0) {\n    nodes.sort(sortByDistance);\n    const node = nodes[0];\n    const closestSegment = node.segment;\n    let vertex = closestOnSegmentData(pixelCoordinate, node);\n    const vertexPixel = map.getPixelFromCoordinate(vertex);\n    let dist = coordinateDistance(pixel, vertexPixel);\n    if (dist <= this.pixelTolerance_) {\n      const vertexSegments = {};\n\n      if (node.geometry.getType() === GeometryType.CIRCLE &&\n      node.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n\n        this.snappedToVertex_ = true;\n        this.createOrUpdateVertexFeature_(vertex);\n      } else {\n        const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n        const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n        const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n        const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n        dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n        }\n        this.createOrUpdateVertexFeature_(vertex);\n        for (let i = 1, ii = nodes.length; i < ii; ++i) {\n          const segment = nodes[i].segment;\n          if ((coordinatesEqual(closestSegment[0], segment[0]) &&\n              coordinatesEqual(closestSegment[1], segment[1]) ||\n              (coordinatesEqual(closestSegment[0], segment[1]) &&\n              coordinatesEqual(closestSegment[1], segment[0])))) {\n            vertexSegments[getUid(segment)] = true;\n          } else {\n            break;\n          }\n        }\n      }\n\n      vertexSegments[getUid(closestSegment)] = true;\n      this.vertexSegments_ = vertexSegments;\n      return;\n    }\n  }\n  if (this.vertexFeature_) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {module:ol/coordinate~Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {module:ol/interaction/Modify~SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction pointDistanceToSegmentDataSquared(pointCoordinates, segmentData) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE) {\n    const circleGeometry = /** @type {module:ol/geom/Circle} */ (geometry);\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      const distanceToCenterSquared =\n            squaredCoordinateDistance(circleGeometry.getCenter(), pointCoordinates);\n      const distanceToCircumference =\n            Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n  return squaredDistanceToSegment(pointCoordinates, segmentData.segment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {module:ol/coordinate~Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {module:ol/interaction/Modify~SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @return {module:ol/coordinate~Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE &&\n  segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n    return geometry.getClosestPoint(pointCoordinates);\n  }\n  return closestOnSegment(pointCoordinates, segmentData.segment);\n}\n\n\n/**\n * @param {module:ol/interaction/Modify~SegmentData} segmentData Segment data.\n * @param {module:ol/coordinate~Coordinate} vertex Vertex.\n * @private\n */\nModify.prototype.insertVertex_ = function(segmentData, vertex) {\n  const segment = segmentData.segment;\n  const feature = segmentData.feature;\n  const geometry = segmentData.geometry;\n  const depth = segmentData.depth;\n  const index = /** @type {number} */ (segmentData.index);\n  let coordinates;\n\n  while (vertex.length < geometry.getStride()) {\n    vertex.push(0);\n  }\n\n  switch (geometry.getType()) {\n    case GeometryType.MULTI_LINE_STRING:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.POLYGON:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.MULTI_POLYGON:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.LINE_STRING:\n      coordinates = geometry.getCoordinates();\n      coordinates.splice(index + 1, 0, vertex);\n      break;\n    default:\n      return;\n  }\n\n  this.setGeometryCoordinates_(geometry, coordinates);\n  const rTree = this.rBush_;\n  rTree.remove(segmentData);\n  this.updateSegmentIndices_(geometry, index, depth, 1);\n  const newSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n    segment: [segment[0], vertex],\n    feature: feature,\n    geometry: geometry,\n    depth: depth,\n    index: index\n  });\n  rTree.insert(boundingExtent(newSegmentData.segment),\n    newSegmentData);\n  this.dragSegments_.push([newSegmentData, 1]);\n\n  const newSegmentData2 = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n    segment: [vertex, segment[1]],\n    feature: feature,\n    geometry: geometry,\n    depth: depth,\n    index: index + 1\n  });\n  rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n  this.dragSegments_.push([newSegmentData2, 0]);\n  this.ignoreNextSingleClick_ = true;\n};\n\n/**\n * Removes the vertex currently being pointed.\n * @return {boolean} True when a vertex was removed.\n * @api\n */\nModify.prototype.removePoint = function() {\n  if (this.lastPointerEvent_ && this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG) {\n    const evt = this.lastPointerEvent_;\n    this.willModifyFeatures_(evt);\n    this.removeVertex_();\n    this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n    this.modified_ = false;\n    return true;\n  }\n  return false;\n};\n\n/**\n * Removes a vertex from all matching features.\n * @return {boolean} True when a vertex was removed.\n * @private\n */\nModify.prototype.removeVertex_ = function() {\n  const dragSegments = this.dragSegments_;\n  const segmentsByFeature = {};\n  let deleted = false;\n  let component, coordinates, dragSegment, geometry, i, index, left;\n  let newIndex, right, segmentData, uid;\n  for (i = dragSegments.length - 1; i >= 0; --i) {\n    dragSegment = dragSegments[i];\n    segmentData = dragSegment[0];\n    uid = getUid(segmentData.feature);\n    if (segmentData.depth) {\n      // separate feature components\n      uid += '-' + segmentData.depth.join('-');\n    }\n    if (!(uid in segmentsByFeature)) {\n      segmentsByFeature[uid] = {};\n    }\n    if (dragSegment[1] === 0) {\n      segmentsByFeature[uid].right = segmentData;\n      segmentsByFeature[uid].index = segmentData.index;\n    } else if (dragSegment[1] == 1) {\n      segmentsByFeature[uid].left = segmentData;\n      segmentsByFeature[uid].index = segmentData.index + 1;\n    }\n\n  }\n  for (uid in segmentsByFeature) {\n    right = segmentsByFeature[uid].right;\n    left = segmentsByFeature[uid].left;\n    index = segmentsByFeature[uid].index;\n    newIndex = index - 1;\n    if (left !== undefined) {\n      segmentData = left;\n    } else {\n      segmentData = right;\n    }\n    if (newIndex < 0) {\n      newIndex = 0;\n    }\n    geometry = segmentData.geometry;\n    coordinates = geometry.getCoordinates();\n    component = coordinates;\n    deleted = false;\n    switch (geometry.getType()) {\n      case GeometryType.MULTI_LINE_STRING:\n        if (coordinates[segmentData.depth[0]].length > 2) {\n          coordinates[segmentData.depth[0]].splice(index, 1);\n          deleted = true;\n        }\n        break;\n      case GeometryType.LINE_STRING:\n        if (coordinates.length > 2) {\n          coordinates.splice(index, 1);\n          deleted = true;\n        }\n        break;\n      case GeometryType.MULTI_POLYGON:\n        component = component[segmentData.depth[1]];\n        /* falls through */\n      case GeometryType.POLYGON:\n        component = component[segmentData.depth[0]];\n        if (component.length > 4) {\n          if (index == component.length - 1) {\n            index = 0;\n          }\n          component.splice(index, 1);\n          deleted = true;\n          if (index === 0) {\n            // close the ring again\n            component.pop();\n            component.push(component[0]);\n            newIndex = component.length - 1;\n          }\n        }\n        break;\n      default:\n        // pass\n    }\n\n    if (deleted) {\n      this.setGeometryCoordinates_(geometry, coordinates);\n      const segments = [];\n      if (left !== undefined) {\n        this.rBush_.remove(left);\n        segments.push(left.segment[0]);\n      }\n      if (right !== undefined) {\n        this.rBush_.remove(right);\n        segments.push(right.segment[1]);\n      }\n      if (left !== undefined && right !== undefined) {\n        const newSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n          depth: segmentData.depth,\n          feature: segmentData.feature,\n          geometry: segmentData.geometry,\n          index: newIndex,\n          segment: segments\n        });\n        this.rBush_.insert(boundingExtent(newSegmentData.segment),\n          newSegmentData);\n      }\n      this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n      if (this.vertexFeature_) {\n        this.overlay_.getSource().removeFeature(this.vertexFeature_);\n        this.vertexFeature_ = null;\n      }\n      dragSegments.length = 0;\n    }\n\n  }\n  return deleted;\n};\n\n\n/**\n * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n * @param {Array} coordinates Coordinates.\n * @private\n */\nModify.prototype.setGeometryCoordinates_ = function(geometry, coordinates) {\n  this.changingFeature_ = true;\n  geometry.setCoordinates(coordinates);\n  this.changingFeature_ = false;\n};\n\n\n/**\n * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n * @param {number} index Index.\n * @param {Array.<number>|undefined} depth Depth.\n * @param {number} delta Delta (1 or -1).\n * @private\n */\nModify.prototype.updateSegmentIndices_ = function(\n  geometry, index, depth, delta) {\n  this.rBush_.forEachInExtent(geometry.getExtent(), function(segmentDataMatch) {\n    if (segmentDataMatch.geometry === geometry &&\n        (depth === undefined || segmentDataMatch.depth === undefined ||\n        equals(segmentDataMatch.depth, depth)) &&\n        segmentDataMatch.index > index) {\n      segmentDataMatch.index += delta;\n    }\n  });\n};\n\n\n/**\n * @return {module:ol/style/Style~StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\n\nexport default Modify;\n","/**\n * @module ol/interaction/Snap\n */\nimport {getUid, inherits} from '../index.js';\nimport {CollectionEvent} from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, closestOnCircle, closestOnSegment, squaredDistanceToSegment} from '../coordinate.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport {getValues} from '../obj.js';\nimport {VectorSourceEvent} from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n\n/**\n * @typedef {Object} Result\n * @property {boolean} snapped\n * @property {module:ol/coordinate~Coordinate|null} vertex\n * @property {module:ol~Pixel|null} vertexPixel\n */\n\n\n/**\n * @typedef {Object} SegmentData\n * @property {module:ol/Feature} feature\n * @property {Array.<module:ol/coordinate~Coordinate>} segment\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/Collection.<module:ol/Feature>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {module:ol/source/Vector} [source] Snap to features from this source. Either this option or features should be provided\n */\n\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap';\n *\n *     var snap = new Snap({\n *       source: source\n *     });\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/Snap~Options=} opt_options Options.\n * @api\n */\nconst Snap = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleEvent: handleEvent,\n    handleDownEvent: TRUE,\n    handleUpEvent: handleUpEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {module:ol/source/Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.edge_ = options.edge !== undefined ? options.edge : true;\n\n  /**\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * @type {Array.<module:ol/events~EventsKey>}\n   * @private\n   */\n  this.featuresListenerKeys_ = [];\n\n  /**\n   * @type {Object.<number, module:ol/events~EventsKey>}\n   * @private\n   */\n  this.featureChangeListenerKeys_ = {};\n\n  /**\n   * Extents are preserved so indexed segment can be quickly removed\n   * when its feature geometry changes\n   * @type {Object.<number, module:ol/extent~Extent>}\n   * @private\n   */\n  this.indexedFeaturesExtents_ = {};\n\n  /**\n   * If a feature geometry changes while a pointer drag|move event occurs, the\n   * feature doesn't get updated right away.  It will be at the next 'pointerup'\n   * event fired.\n   * @type {!Object.<number, module:ol/Feature>}\n   * @private\n   */\n  this.pendingFeatures_ = {};\n\n  /**\n   * Used for distance sorting in sortByDistance_\n   * @type {module:ol/coordinate~Coordinate}\n   * @private\n   */\n  this.pixelCoordinate_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {function(module:ol/interaction/Snap~SegmentData, module:ol/interaction/Snap~SegmentData): number}\n   * @private\n   */\n  this.sortByDistance_ = sortByDistance.bind(this);\n\n\n  /**\n  * Segment RTree for each layer\n  * @type {module:ol/structs/RBush.<module:ol/interaction/Snap~SegmentData>}\n  * @private\n  */\n  this.rBush_ = new RBush();\n\n\n  /**\n  * @const\n  * @private\n  * @type {Object.<string, function(module:ol/Feature, module:ol/geom/Geometry)>}\n  */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_,\n    'Circle': this.writeCircleGeometry_\n  };\n};\n\ninherits(Snap, PointerInteraction);\n\n\n/**\n * Add a feature to the collection of features that we may snap to.\n * @param {module:ol/Feature} feature Feature.\n * @param {boolean=} opt_listen Whether to listen to the feature change or not\n *     Defaults to `true`.\n * @api\n */\nSnap.prototype.addFeature = function(feature, opt_listen) {\n  const register = opt_listen !== undefined ? opt_listen : true;\n  const feature_uid = getUid(feature);\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n    if (segmentWriter) {\n      this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n      segmentWriter.call(this, feature, geometry);\n    }\n  }\n\n  if (register) {\n    this.featureChangeListenerKeys_[feature_uid] = listen(\n      feature,\n      EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureAdd_ = function(feature) {\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureRemove_ = function(feature) {\n  this.removeFeature(feature);\n};\n\n\n/**\n * @return {module:ol/Collection.<module:ol/Feature>|Array.<module:ol/Feature>} Features.\n * @private\n */\nSnap.prototype.getFeatures_ = function() {\n  let features;\n  if (this.features_) {\n    features = this.features_;\n  } else if (this.source_) {\n    features = this.source_.getFeatures();\n  }\n  return (\n    /** @type {!Array.<module:ol/Feature>|!module:ol/Collection.<module:ol/Feature>} */ (features)\n  );\n};\n\n\n/**\n * @param {module:ol/source/Vector|module:ol/Collection~CollectionEvent} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureAdd_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSourceEvent) {\n    feature = evt.feature;\n  } else if (evt instanceof CollectionEvent) {\n    feature = evt.element;\n  }\n  this.addFeature(/** @type {module:ol/Feature} */ (feature));\n};\n\n\n/**\n * @param {module:ol/source/Vector|module:ol/Collection~CollectionEvent} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureRemove_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSourceEvent) {\n    feature = evt.feature;\n  } else if (evt instanceof CollectionEvent) {\n    feature = evt.element;\n  }\n  this.removeFeature(/** @type {module:ol/Feature} */ (feature));\n};\n\n\n/**\n * @param {module:ol/events/Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureChange_ = function(evt) {\n  const feature = /** @type {module:ol/Feature} */ (evt.target);\n  if (this.handlingDownUpSequence) {\n    const uid = getUid(feature);\n    if (!(uid in this.pendingFeatures_)) {\n      this.pendingFeatures_[uid] = feature;\n    }\n  } else {\n    this.updateFeature_(feature);\n  }\n};\n\n\n/**\n * Remove a feature from the collection of features that we may snap to.\n * @param {module:ol/Feature} feature Feature\n * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n *     or not. Defaults to `true`.\n * @api\n */\nSnap.prototype.removeFeature = function(feature, opt_unlisten) {\n  const unregister = opt_unlisten !== undefined ? opt_unlisten : true;\n  const feature_uid = getUid(feature);\n  const extent = this.indexedFeaturesExtents_[feature_uid];\n  if (extent) {\n    const rBush = this.rBush_;\n    const nodesToRemove = [];\n    rBush.forEachInExtent(extent, function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  }\n\n  if (unregister) {\n    unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n    delete this.featureChangeListenerKeys_[feature_uid];\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.setMap = function(map) {\n  const currentMap = this.getMap();\n  const keys = this.featuresListenerKeys_;\n  const features = this.getFeatures_();\n\n  if (currentMap) {\n    keys.forEach(unlistenByKey);\n    keys.length = 0;\n    features.forEach(this.forEachFeatureRemove_.bind(this));\n  }\n  PointerInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    if (this.features_) {\n      keys.push(\n        listen(this.features_, CollectionEventType.ADD,\n          this.handleFeatureAdd_, this),\n        listen(this.features_, CollectionEventType.REMOVE,\n          this.handleFeatureRemove_, this)\n      );\n    } else if (this.source_) {\n      keys.push(\n        listen(this.source_, VectorEventType.ADDFEATURE,\n          this.handleFeatureAdd_, this),\n        listen(this.source_, VectorEventType.REMOVEFEATURE,\n          this.handleFeatureRemove_, this)\n      );\n    }\n    features.forEach(this.forEachFeatureAdd_.bind(this));\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * @param {module:ol~Pixel} pixel Pixel\n * @param {module:ol/coordinate~Coordinate} pixelCoordinate Coordinate\n * @param {module:ol/PluggableMap} map Map.\n * @return {module:ol/interaction/Snap~Result} Snap result\n */\nSnap.prototype.snapTo = function(pixel, pixelCoordinate, map) {\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = boundingExtent([lowerLeft, upperRight]);\n\n  let segments = this.rBush_.getInExtent(box);\n\n  // If snapping on vertices only, don't consider circles\n  if (this.vertex_ && !this.edge_) {\n    segments = segments.filter(function(segment) {\n      return segment.feature.getGeometry().getType() !==\n          GeometryType.CIRCLE;\n    });\n  }\n\n  let snappedToVertex = false;\n  let snapped = false;\n  let vertex = null;\n  let vertexPixel = null;\n  let dist, pixel1, pixel2, squaredDist1, squaredDist2;\n  if (segments.length > 0) {\n    this.pixelCoordinate_ = pixelCoordinate;\n    segments.sort(this.sortByDistance_);\n    const closestSegment = segments[0].segment;\n    const isCircle = segments[0].feature.getGeometry().getType() ===\n        GeometryType.CIRCLE;\n    if (this.vertex_ && !this.edge_) {\n      pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      squaredDist1 = squaredCoordinateDistance(pixel, pixel1);\n      squaredDist2 = squaredCoordinateDistance(pixel, pixel2);\n      dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      snappedToVertex = dist <= this.pixelTolerance_;\n      if (snappedToVertex) {\n        snapped = true;\n        vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n      }\n    } else if (this.edge_) {\n      if (isCircle) {\n        vertex = closestOnCircle(pixelCoordinate,\n          /** @type {module:ol/geom/Circle} */ (segments[0].feature.getGeometry()));\n      } else {\n        vertex = closestOnSegment(pixelCoordinate, closestSegment);\n      }\n      vertexPixel = map.getPixelFromCoordinate(vertex);\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        snapped = true;\n        if (this.vertex_ && !isCircle) {\n          pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          snappedToVertex = dist <= this.pixelTolerance_;\n          if (snappedToVertex) {\n            vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n          }\n        }\n      }\n    }\n    if (snapped) {\n      vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n    }\n  }\n  return (\n    /** @type {module:ol/interaction/Snap~Result} */ ({\n      snapped: snapped,\n      vertex: vertex,\n      vertexPixel: vertexPixel\n    })\n  );\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @private\n */\nSnap.prototype.updateFeature_ = function(feature) {\n  this.removeFeature(feature, false);\n  this.addFeature(feature, false);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/Circle} geometry Geometry.\n * @private\n */\nSnap.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const polygon = fromCircle(geometry);\n  const coordinates = polygon.getCoordinates()[0];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n * @private\n */\nSnap.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n    if (segmentWriter) {\n      segmentWriter.call(this, feature, geometries[i]);\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/LineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/MultiLineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  for (let j = 0, jj = lines.length; j < jj; ++j) {\n    const coordinates = lines[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/MultiPoint} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  for (let i = 0, ii = points.length; i < ii; ++i) {\n    const coordinates = points[i];\n    const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  for (let k = 0, kk = polygons.length; k < kk; ++k) {\n    const rings = polygons[k];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/Point} geometry Geometry.\n * @private\n */\nSnap.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n    feature: feature,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/Polygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  for (let j = 0, jj = rings.length; j < jj; ++j) {\n    const coordinates = rings[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * Handle all pointer events events.\n * @param {module:ol/MapBrowserEvent} evt A move event.\n * @return {boolean} Pass the event to other interactions.\n * @this {module:ol/interaction/Snap}\n */\nexport function handleEvent(evt) {\n  const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n  if (result.snapped) {\n    evt.coordinate = result.vertex.slice(0, 2);\n    evt.pixel = result.vertexPixel;\n  }\n  return handlePointerEvent.call(this, evt);\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Snap}\n */\nfunction handleUpEvent(evt) {\n  const featuresToUpdate = getValues(this.pendingFeatures_);\n  if (featuresToUpdate.length) {\n    featuresToUpdate.forEach(this.updateFeature_.bind(this));\n    this.pendingFeatures_ = {};\n  }\n  return false;\n}\n\n\n/**\n * Sort segments by distance, helper function\n * @param {module:ol/interaction/Snap~SegmentData} a The first segment data.\n * @param {module:ol/interaction/Snap~SegmentData} b The second segment data.\n * @return {number} The difference in distance.\n * @this {module:ol/interaction/Snap}\n */\nfunction sortByDistance(a, b) {\n  const deltaA = squaredDistanceToSegment(this.pixelCoordinate_, a.segment);\n  const deltaB = squaredDistanceToSegment(this.pixelCoordinate_, b.segment);\n  return deltaA - deltaB;\n}\n\nexport default Snap;\n","/**\n * @module ol/interaction/Translate\n */\nimport {inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport {getChangeEventType} from '../Object.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {TRUE} from '../functions.js';\nimport {includes} from '../array.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\n\n\n/**\n * @enum {string}\n */\nconst TranslateEventType = {\n  /**\n   * Triggered upon feature translation start.\n   * @event TranslateEvent#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event TranslateEvent#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event TranslateEvent#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/Collection.<module:ol/Feature>} [features] Only features contained in this collection will be able to be translated. If\n * not specified, all features on the map will be able to be translated.\n * @property {Array.<module:ol/layer/Layer>|function(module:ol/layer/Layer): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features. This only works for the canvas renderer and\n * not for WebGL.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {module:ol/interaction/Translate~TranslateEventType} type Type.\n * @param {module:ol/Collection.<module:ol/Feature>} features The features translated.\n * @param {module:ol/coordinate~Coordinate} coordinate The event coordinate.\n */\nexport const TranslateEvent = function(type, features, coordinate) {\n\n  Event.call(this, type);\n\n  /**\n   * The features being translated.\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   * @api\n   */\n  this.features = features;\n\n  /**\n   * The coordinate of the drag event.\n   * @const\n   * @type {module:ol/coordinate~Coordinate}\n   * @api\n   */\n  this.coordinate = coordinate;\n};\n\ninherits(TranslateEvent, Event);\n\n\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @fires module:ol/interaction/Translate~TranslateEvent\n * @param {module:ol/interaction/Translate~Options=} opt_options Options.\n * @api\n */\nconst Translate = function(opt_options) {\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleMoveEvent: handleMoveEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * The last position we translated to.\n   * @type {module:ol/coordinate~Coordinate}\n   * @private\n   */\n  this.lastCoordinate_ = null;\n\n\n  /**\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   * @private\n   */\n  this.features_ = options.features !== undefined ? options.features : null;\n\n  /** @type {function(module:ol/layer/Layer): boolean} */\n  let layerFilter;\n  if (options.layers) {\n    if (typeof options.layers === 'function') {\n      layerFilter = options.layers;\n    } else {\n      const layers = options.layers;\n      layerFilter = function(layer) {\n        return includes(layers, layer);\n      };\n    }\n  } else {\n    layerFilter = TRUE;\n  }\n\n  /**\n   * @private\n   * @type {function(module:ol/layer/Layer): boolean}\n   */\n  this.layerFilter_ = layerFilter;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n  /**\n   * @type {module:ol/Feature}\n   * @private\n   */\n  this.lastFeature_ = null;\n\n  listen(this,\n    getChangeEventType(InteractionProperty.ACTIVE),\n    this.handleActiveChanged_, this);\n\n};\n\ninherits(Translate, PointerInteraction);\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/Translate}\n */\nfunction handleDownEvent(event) {\n  this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n  if (!this.lastCoordinate_ && this.lastFeature_) {\n    this.lastCoordinate_ = event.coordinate;\n    handleMoveEvent.call(this, event);\n\n    const features = this.features_ || new Collection([this.lastFeature_]);\n\n    this.dispatchEvent(\n      new TranslateEvent(\n        TranslateEventType.TRANSLATESTART, features,\n        event.coordinate));\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Translate}\n */\nfunction handleUpEvent(event) {\n  if (this.lastCoordinate_) {\n    this.lastCoordinate_ = null;\n    handleMoveEvent.call(this, event);\n\n    const features = this.features_ || new Collection([this.lastFeature_]);\n\n    this.dispatchEvent(\n      new TranslateEvent(\n        TranslateEventType.TRANSLATEEND, features,\n        event.coordinate));\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @this {module:ol/interaction/Translate}\n */\nfunction handleDragEvent(event) {\n  if (this.lastCoordinate_) {\n    const newCoordinate = event.coordinate;\n    const deltaX = newCoordinate[0] - this.lastCoordinate_[0];\n    const deltaY = newCoordinate[1] - this.lastCoordinate_[1];\n\n    const features = this.features_ || new Collection([this.lastFeature_]);\n\n    features.forEach(function(feature) {\n      const geom = feature.getGeometry();\n      geom.translate(deltaX, deltaY);\n      feature.setGeometry(geom);\n    });\n\n    this.lastCoordinate_ = newCoordinate;\n    this.dispatchEvent(\n      new TranslateEvent(\n        TranslateEventType.TRANSLATING, features,\n        newCoordinate));\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserEvent} event Event.\n * @this {module:ol/interaction/Translate}\n */\nfunction handleMoveEvent(event) {\n  const elem = event.map.getViewport();\n\n  // Change the cursor to grab/grabbing if hovering any of the features managed\n  // by the interaction\n  if (this.featuresAtPixel_(event.pixel, event.map)) {\n    elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n    elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n  } else {\n    elem.classList.remove('ol-grab', 'ol-grabbing');\n  }\n}\n\n\n/**\n * Tests to see if the given coordinates intersects any of our selected\n * features.\n * @param {module:ol~Pixel} pixel Pixel coordinate to test for intersection.\n * @param {module:ol/PluggableMap} map Map to test the intersection on.\n * @return {module:ol/Feature} Returns the feature found at the specified pixel\n * coordinates.\n * @private\n */\nTranslate.prototype.featuresAtPixel_ = function(pixel, map) {\n  return map.forEachFeatureAtPixel(pixel,\n    function(feature) {\n      if (!this.features_ || includes(this.features_.getArray(), feature)) {\n        return feature;\n      }\n    }.bind(this), {\n      layerFilter: this.layerFilter_,\n      hitTolerance: this.hitTolerance_\n    });\n};\n\n\n/**\n * Returns the Hit-detection tolerance.\n * @returns {number} Hit tolerance in pixels.\n * @api\n */\nTranslate.prototype.getHitTolerance = function() {\n  return this.hitTolerance_;\n};\n\n\n/**\n * Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features. This only works for the canvas renderer and\n * not for WebGL.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @api\n */\nTranslate.prototype.setHitTolerance = function(hitTolerance) {\n  this.hitTolerance_ = hitTolerance;\n};\n\n\n/**\n * @inheritDoc\n */\nTranslate.prototype.setMap = function(map) {\n  const oldMap = this.getMap();\n  PointerInteraction.prototype.setMap.call(this, map);\n  this.updateState_(oldMap);\n};\n\n\n/**\n * @private\n */\nTranslate.prototype.handleActiveChanged_ = function() {\n  this.updateState_(null);\n};\n\n\n/**\n * @param {module:ol/PluggableMap} oldMap Old map.\n * @private\n */\nTranslate.prototype.updateState_ = function(oldMap) {\n  let map = this.getMap();\n  const active = this.getActive();\n  if (!map || !active) {\n    map = map || oldMap;\n    if (map) {\n      const elem = map.getViewport();\n      elem.classList.remove('ol-grab', 'ol-grabbing');\n    }\n  }\n};\n\n\nexport default Translate;\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the wheel/trackpad or pinch gesture ends.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or\n * mousewheel zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. The default set of\n * interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {module:ol/interaction/Interaction~DefaultsOptions=} opt_options\n * Defaults options.\n * @return {module:ol/Collection.<module:ol/interaction/Interaction>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n    options.altShiftDragRotate : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom = options.doubleClickZoom !== undefined ?\n    options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(new DoubleClickZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(new DragPan({\n      kinetic: kinetic\n    }));\n  }\n\n  const pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n    true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(new PinchZoom({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(new KeyboardZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  const mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n    options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(new MouseWheelZoom({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  const shiftDragZoom = options.shiftDragZoom !== undefined ?\n    options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(new DragZoom({\n      duration: options.zoomDuration\n    }));\n  }\n\n  return interactions;\n\n}\n","/**\n * @module ol/coordinate\n */\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array.<number>} Coordinate\n * @api\n */\n\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((module:ol/coordinate~Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/coordinate~Coordinate} delta Delta.\n * @return {module:ol/coordinate~Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += delta[0];\n  coordinate[1] += delta[1];\n  return coordinate;\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate The coordinate.\n * @param {module:ol/geom/Circle} circle The circle.\n * @return {module:ol/coordinate~Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + r * dx / d;\n  const y = y0 + r * dy / d;\n\n  return [x, y];\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate The coordinate.\n * @param {Array.<module:ol/coordinate~Coordinate>} segment The two coordinates\n * of the segment.\n * @return {module:ol/coordinate~Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along = (dx === 0 && dy === 0) ? 0 :\n    ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {module:ol/coordinate~Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {module:ol/coordinate~CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function(coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - (deg * 3600) - (min * 60);\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) + '\\u2033' +\n    (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate1 First coordinate.\n * @param {module:ol/coordinate~Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coord1 First coordinate.\n * @param {module:ol/coordinate~Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coord1 First coordinate.\n * @param {module:ol/coordinate~Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate of the point.\n * @param {Array.<module:ol/coordinate~Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate,\n    closestOnSegment(coordinate, segment));\n}\n\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n        degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3\n};\n","/**\n * @module ol/events/Event\n */\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * @see {@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface}\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/EventTarget~EventTarget}.\n *\n * @constructor\n * @param {string} type Type.\n */\nconst Event = function(type) {\n\n  /**\n   * @type {boolean}\n   */\n  this.propagationStopped;\n\n  /**\n   * The event type.\n   * @type {string}\n   * @api\n   */\n  this.type = type;\n\n  /**\n   * The event target.\n   * @type {Object}\n   * @api\n   */\n  this.target = null;\n\n};\n\n\n/**\n * Stop event propagation.\n * @function\n * @api\n */\nEvent.prototype.preventDefault =\n\n  /**\n   * Stop event propagation.\n   * @function\n   * @api\n   */\n  Event.prototype.stopPropagation = function() {\n    this.propagationStopped = true;\n  };\n\n\n/**\n * @param {Event|module:ol/events/Event} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n\n/**\n * @param {Event|module:ol/events/Event} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default Event;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {assert} from '../asserts.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport {WEBKIT, MAC} from '../has.js';\n\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, module:ol/MapBrowserEvent): boolean} Condition\n */\n\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {module:ol/MapBrowserEvent} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function(event) {\n  return event.target.getTargetElement() === document.activeElement;\n};\n\n\n/**\n * Return always true.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @function\n * @api\n */\nexport const always = TRUE;\n\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return originalEvent.button == 0 &&\n      !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n\n/**\n * Return always false.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @function\n * @api\n */\nexport const never = FALSE;\n\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey;\n};\n\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function(mapBrowserEvent) {\n  const target = mapBrowserEvent.originalEvent.target;\n  const tagName = target.tagName;\n  return (\n    tagName !== 'INPUT' &&\n      tagName !== 'SELECT' &&\n      tagName !== 'TEXTAREA');\n};\n\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function(mapBrowserEvent) {\n  assert(mapBrowserEvent.pointerEvent, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return (\n    /** @type {module:ol/MapBrowserEvent} */ (mapBrowserEvent).pointerEvent.pointerType == 'mouse'\n  );\n};\n\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * @see http://www.w3.org/TR/pointerevents/#button-states\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function(mapBrowserEvent) {\n  const pointerEvent = mapBrowserEvent.pointerEvent;\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/layer/Vector\n */\nimport {inherits} from '../index.js';\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\nimport VectorRenderType from '../layer/VectorRenderType.js';\nimport {assign} from '../obj.js';\nimport {createDefaultStyle, toFunction as toStyleFunction} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/render~OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {module:ol/layer/VectorRenderType|string} [renderMode='vector'] Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but point symbols and\n *    texts are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance.\n * @property {module:ol/source/Vector} [source] Source.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during animations. This means that no\n * vectors will be shown clipped, but the setting will have a performance impact for large\n * amounts of vector data. When set to `false`, batches will be recreated when no animation\n * is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during interactions. See also\n * `updateWhileAnimating`.\n */\n\n\n/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nexport const RenderType = {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};\n\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder'\n};\n\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @constructor\n * @extends {module:ol/layer/Layer}\n * @fires module:ol/render/Event~RenderEvent\n * @param {module:ol/layer/Vector~Options=} opt_options Options.\n * @api\n */\nconst VectorLayer = function(opt_options) {\n  const options = opt_options ?\n    opt_options : /** @type {module:ol/layer/Vector~Options} */ ({});\n\n  const baseOptions = assign({}, options);\n\n  delete baseOptions.style;\n  delete baseOptions.renderBuffer;\n  delete baseOptions.updateWhileAnimating;\n  delete baseOptions.updateWhileInteracting;\n  Layer.call(this, /** @type {module:ol/layer/Layer~Options} */ (baseOptions));\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.renderBuffer_ = options.renderBuffer !== undefined ?\n    options.renderBuffer : 100;\n\n  /**\n   * User provided style.\n   * @type {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction}\n   * @private\n   */\n  this.style_ = null;\n\n  /**\n   * Style function for use within the library.\n   * @type {module:ol/style/Style~StyleFunction|undefined}\n   * @private\n   */\n  this.styleFunction_ = undefined;\n\n  this.setStyle(options.style);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n    options.updateWhileAnimating : false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n    options.updateWhileInteracting : false;\n\n  /**\n   * @private\n   * @type {module:ol/layer/VectorTileRenderType|string}\n   */\n  this.renderMode_ = options.renderMode || VectorRenderType.VECTOR;\n\n  /**\n   * The layer type.\n   * @protected\n   * @type {module:ol/LayerType}\n   */\n  this.type = LayerType.VECTOR;\n\n};\n\ninherits(VectorLayer, Layer);\n\n\n/**\n * @return {boolean} Declutter.\n */\nVectorLayer.prototype.getDeclutter = function() {\n  return this.declutter_;\n};\n\n\n/**\n * @param {boolean} declutter Declutter.\n */\nVectorLayer.prototype.setDeclutter = function(declutter) {\n  this.declutter_ = declutter;\n};\n\n\n/**\n * @return {number|undefined} Render buffer.\n */\nVectorLayer.prototype.getRenderBuffer = function() {\n  return this.renderBuffer_;\n};\n\n\n/**\n * @return {function(module:ol/Feature, module:ol/Feature): number|null|undefined} Render\n *     order.\n */\nVectorLayer.prototype.getRenderOrder = function() {\n  return (\n    /** @type {module:ol/render~OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER))\n  );\n};\n\n\n/**\n * Return the associated {@link module:ol/source/Vector vectorsource} of the layer.\n * @function\n * @return {module:ol/source/Vector} Source.\n * @api\n */\nVectorLayer.prototype.getSource;\n\n\n/**\n * Get the style for features.  This returns whatever was passed to the `style`\n * option at construction or to the `setStyle` method.\n * @return {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction}\n *     Layer style.\n * @api\n */\nVectorLayer.prototype.getStyle = function() {\n  return this.style_;\n};\n\n\n/**\n * Get the style function.\n * @return {module:ol/style/Style~StyleFunction|undefined} Layer style function.\n * @api\n */\nVectorLayer.prototype.getStyleFunction = function() {\n  return this.styleFunction_;\n};\n\n\n/**\n * @return {boolean} Whether the rendered layer should be updated while\n *     animating.\n */\nVectorLayer.prototype.getUpdateWhileAnimating = function() {\n  return this.updateWhileAnimating_;\n};\n\n\n/**\n * @return {boolean} Whether the rendered layer should be updated while\n *     interacting.\n */\nVectorLayer.prototype.getUpdateWhileInteracting = function() {\n  return this.updateWhileInteracting_;\n};\n\n\n/**\n * @param {module:ol/render~OrderFunction|null|undefined} renderOrder\n *     Render order.\n */\nVectorLayer.prototype.setRenderOrder = function(renderOrder) {\n  this.set(Property.RENDER_ORDER, renderOrder);\n};\n\n\n/**\n * Set the style for features.  This can be a single style object, an array\n * of styles, or a function that takes a feature and resolution and returns\n * an array of styles. If it is `undefined` the default style is used. If\n * it is `null` the layer has no style (a `null` style), so only features\n * that have their own styles will be rendered in the layer. See\n * {@link module:ol/style} for information on the default style.\n * @param {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction|null|undefined}\n *     style Layer style.\n * @api\n */\nVectorLayer.prototype.setStyle = function(style) {\n  this.style_ = style !== undefined ? style : createDefaultStyle;\n  this.styleFunction_ = style === null ?\n    undefined : toStyleFunction(this.style_);\n  this.changed();\n};\n\n\n/**\n * @return {module:ol/layer/VectorRenderType|string} The render mode.\n */\nVectorLayer.prototype.getRenderMode = function() {\n  return this.renderMode_;\n};\n\n\nexport default VectorLayer;\n","/**\n * @module ol/render/ReplayType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text'\n};\n","/**\n * @module ol/geom/Polygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport {linearRings as linearRingsArea} from '../geom/flat/area.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from '../geom/flat/closest.js';\nimport {linearRingsContainsXY} from '../geom/flat/contains.js';\nimport {deflateCoordinatesArray} from '../geom/flat/deflate.js';\nimport {inflateCoordinatesArray} from '../geom/flat/inflate.js';\nimport {getInteriorPointOfArray} from '../geom/flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from '../geom/flat/intersectsextent.js';\nimport {linearRingIsOriented, orientLinearRings} from '../geom/flat/orient.js';\nimport {quantizeArray} from '../geom/flat/simplify.js';\nimport {modulo} from '../math.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} coordinates Array of linear\n *     rings that define the polygon. The first linear ring of the array\n *     defines the outer-boundary or surface of the polygon. Each subsequent\n *     linear ring defines a hole in the surface of the polygon. A linear ring\n *     is an array of vertices' coordinates where the first coordinate and the\n *     last are equivalent.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst Polygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointRevision_ = -1;\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.flatInteriorPoint_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(Polygon, SimpleGeometry);\n\n\n/**\n * Append the passed linear ring to this polygon.\n * @param {module:ol/geom/LinearRing} linearRing Linear ring.\n * @api\n */\nPolygon.prototype.appendLinearRing = function(linearRing) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/Polygon} Clone.\n * @override\n * @api\n */\nPolygon.prototype.clone = function() {\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return polygon;\n};\n\n\n/**\n * @inheritDoc\n */\nPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return assignClosestArrayPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nPolygon.prototype.containsXY = function(x, y) {\n  return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the polygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nPolygon.prototype.getArea = function() {\n  return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<module:ol/coordinate~Coordinate>>} Coordinates.\n * @override\n * @api\n */\nPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    orientLinearRings(\n      flatCoordinates, 0, this.ends_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return inflateCoordinatesArray(\n    flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nPolygon.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * @return {Array.<number>} Interior point.\n */\nPolygon.prototype.getFlatInteriorPoint = function() {\n  if (this.flatInteriorPointRevision_ != this.getRevision()) {\n    const flatCenter = getCenter(this.getExtent());\n    this.flatInteriorPoint_ = getInteriorPointOfArray(\n      this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride,\n      flatCenter, 0);\n    this.flatInteriorPointRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoint_;\n};\n\n\n/**\n * Return an interior point of the polygon.\n * @return {module:ol/geom/Point} Interior point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n * @api\n */\nPolygon.prototype.getInteriorPoint = function() {\n  return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n};\n\n\n/**\n * Return the number of rings of the polygon,  this includes the exterior\n * ring and any interior rings.\n *\n * @return {number} Number of rings.\n * @api\n */\nPolygon.prototype.getLinearRingCount = function() {\n  return this.ends_.length;\n};\n\n\n/**\n * Return the Nth linear ring of the polygon geometry. Return `null` if the\n * given index is out of range.\n * The exterior linear ring is available at index `0` and the interior rings\n * at index `1` and beyond.\n *\n * @param {number} index Index.\n * @return {module:ol/geom/LinearRing} Linear ring.\n * @api\n */\nPolygon.prototype.getLinearRing = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const linearRing = new LinearRing(null);\n  linearRing.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return linearRing;\n};\n\n\n/**\n * Return the linear rings of the polygon.\n * @return {Array.<module:ol/geom/LinearRing>} Linear rings.\n * @api\n */\nPolygon.prototype.getLinearRings = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const linearRings = [];\n  let offset = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const linearRing = new LinearRing(null);\n    linearRing.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    linearRings.push(linearRing);\n    offset = end;\n  }\n  return linearRings;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (linearRingIsOriented(\n      flatCoordinates, 0, this.ends_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          orientLinearRings(\n            this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = quantizeArray(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedPolygon = new Polygon(null);\n  simplifiedPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedPolygon;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nPolygon.prototype.getType = function() {\n  return GeometryType.POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nPolygon.prototype.intersectsExtent = function(extent) {\n  return intersectsLinearRingArray(\n    this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the polygon.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\nexport default Polygon;\n\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {module:ol/coordinate~Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {module:ol/geom/Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array.<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(GeometryLayout.XY, flatCoordinates, [flatCoordinates.length]);\n  return polygon;\n}\n\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {module:ol/extent~Extent} extent The extent.\n * @return {module:ol/geom/Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates =\n      [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    GeometryLayout.XY, flatCoordinates, [flatCoordinates.length]);\n  return polygon;\n}\n\n\n/**\n * Create a regular polygon from a circle.\n * @param {module:ol/geom/Circle} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {module:ol/geom/Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const polygon = new Polygon(null, layout);\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i++) {\n    flatCoordinates[i] = 0;\n  }\n  const ends = [flatCoordinates.length];\n  polygon.setFlatCoordinates(layout, flatCoordinates, ends);\n  makeRegular(polygon, circle.getCenter(), circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {module:ol/geom/Polygon} polygon Polygon geometry.\n * @param {module:ol/coordinate~Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const layout = polygon.getLayout();\n  const stride = polygon.getStride();\n  const ends = polygon.getEnds();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n    flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n    flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n  }\n  polygon.setFlatCoordinates(layout, flatCoordinates, ends);\n}\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n","/**\n * @module ol/geom/LineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from '../geom/flat/closest.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from '../geom/flat/interpolate.js';\nimport {intersectsLineString} from '../geom/flat/intersectsextent.js';\nimport {lineStringLength} from '../geom/flat/length.js';\nimport {forEach as forEachSegment} from '../geom/flat/segments.js';\nimport {douglasPeucker} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst LineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.flatMidpoint_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatMidpointRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(LineString, SimpleGeometry);\n\n\n/**\n * Append the passed coordinate to the coordinates of the linestring.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @api\n */\nLineString.prototype.appendCoordinate = function(coordinate) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = coordinate.slice();\n  } else {\n    extend(this.flatCoordinates, coordinate);\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/LineString} Clone.\n * @override\n * @api\n */\nLineString.prototype.clone = function() {\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return lineString;\n};\n\n\n/**\n * @inheritDoc\n */\nLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return assignClosestPoint(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Iterate over each segment, calling the provided callback.\n * If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n *\n * @param {function(this: S, module:ol/coordinate~Coordinate, module:ol/coordinate~Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T,S\n * @api\n */\nLineString.prototype.forEachSegment = function(callback) {\n  return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate) {\n  if (this.layout != GeometryLayout.XYM &&\n      this.layout != GeometryLayout.XYZM) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  return lineStringCoordinateAtM(this.flatCoordinates, 0,\n    this.flatCoordinates.length, this.stride, m, extrapolate);\n};\n\n\n/**\n * Return the coordinates of the linestring.\n * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates.\n * @override\n * @api\n */\nLineString.prototype.getCoordinates = function() {\n  return inflateCoordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the coordinate at the provided fraction along the linestring.\n * The `fraction` is a number between 0 and 1, where 0 is the start of the\n * linestring and 1 is the end.\n * @param {number} fraction Fraction.\n * @param {module:ol/coordinate~Coordinate=} opt_dest Optional coordinate whose values will\n *     be modified. If not provided, a new coordinate will be returned.\n * @return {module:ol/coordinate~Coordinate} Coordinate of the interpolated point.\n * @api\n */\nLineString.prototype.getCoordinateAt = function(fraction, opt_dest) {\n  return interpolatePoint(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n    fraction, opt_dest);\n};\n\n\n/**\n * Return the length of the linestring on projected plane.\n * @return {number} Length (on projected plane).\n * @api\n */\nLineString.prototype.getLength = function() {\n  return lineStringLength(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoint.\n */\nLineString.prototype.getFlatMidpoint = function() {\n  if (this.flatMidpointRevision_ != this.getRevision()) {\n    this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n    this.flatMidpointRevision_ = this.getRevision();\n  }\n  return this.flatMidpoint_;\n};\n\n\n/**\n * @inheritDoc\n */\nLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n    squaredTolerance, simplifiedFlatCoordinates, 0);\n  const simplifiedLineString = new LineString(null);\n  simplifiedLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates);\n  return simplifiedLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nLineString.prototype.getType = function() {\n  return GeometryType.LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nLineString.prototype.intersectsExtent = function(extent) {\n  return intersectsLineString(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n    extent);\n};\n\n\n/**\n * Set the coordinates of the linestring.\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default LineString;\n","/**\n * @module ol/format/Feature\n */\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, equivalent as equivalentProjection, transformExtent} from '../proj.js';\n\n\n/**\n * @typedef {Object} ReadOptions\n * @property {module:ol/proj~ProjectionLike} dataProjection Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {module:ol/extent~Extent} extent Tile extent of the tile being read. This is only used and\n * required for {@link module:ol/format/MVT}.\n * @property {module:ol/proj~ProjectionLike} featureProjection Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n\n/**\n * @typedef {Object} WriteOptions\n * @property {module:ol/proj~ProjectionLike} dataProjection Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {module:ol/proj~ProjectionLike} featureProjection Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @constructor\n * @abstract\n * @api\n */\nconst FeatureFormat = function() {\n\n  /**\n   * @protected\n   * @type {module:ol/proj/Projection}\n   */\n  this.dataProjection = null;\n\n  /**\n   * @protected\n   * @type {module:ol/proj/Projection}\n   */\n  this.defaultFeatureProjection = null;\n\n};\n\n\n/**\n * Adds the data projection to the read options.\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n * @return {module:ol/format/Feature~ReadOptions|undefined} Options.\n * @protected\n */\nFeatureFormat.prototype.getReadOptions = function(source, opt_options) {\n  let options;\n  if (opt_options) {\n    options = {\n      dataProjection: opt_options.dataProjection ?\n        opt_options.dataProjection : this.readProjection(source),\n      featureProjection: opt_options.featureProjection\n    };\n  }\n  return this.adaptOptions(options);\n};\n\n\n/**\n * Sets the `dataProjection` on the options, if no `dataProjection`\n * is set.\n * @param {module:ol/format/Feature~WriteOptions|module:ol/format/Feature~ReadOptions|undefined} options\n *     Options.\n * @protected\n * @return {module:ol/format/Feature~WriteOptions|module:ol/format/Feature~ReadOptions|undefined}\n *     Updated options.\n */\nFeatureFormat.prototype.adaptOptions = function(options) {\n  return assign({\n    dataProjection: this.dataProjection,\n    featureProjection: this.defaultFeatureProjection\n  }, options);\n};\n\n\n/**\n * Get the extent from the source of the last {@link readFeatures} call.\n * @return {module:ol/extent~Extent} Tile extent.\n */\nFeatureFormat.prototype.getLastExtent = function() {\n  return null;\n};\n\n\n/**\n * @abstract\n * @return {module:ol/format/FormatType} Format.\n */\nFeatureFormat.prototype.getType = function() {};\n\n\n/**\n * Read a single feature from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/Feature} Feature.\n */\nFeatureFormat.prototype.readFeature = function(source, opt_options) {};\n\n\n/**\n * Read all features from a source.\n *\n * @abstract\n * @param {Document|Node|ArrayBuffer|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {Array.<module:ol/Feature>} Features.\n */\nFeatureFormat.prototype.readFeatures = function(source, opt_options) {};\n\n\n/**\n * Read a single geometry from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/geom/Geometry} Geometry.\n */\nFeatureFormat.prototype.readGeometry = function(source, opt_options) {};\n\n\n/**\n * Read the projection from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @return {module:ol/proj/Projection} Projection.\n */\nFeatureFormat.prototype.readProjection = function(source) {};\n\n\n/**\n * Encode a feature in this format.\n *\n * @abstract\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeFeature = function(feature, opt_options) {};\n\n\n/**\n * Encode an array of features in this format.\n *\n * @abstract\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeFeatures = function(features, opt_options) {};\n\n\n/**\n * Write a single geometry in this format.\n *\n * @abstract\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeGeometry = function(geometry, opt_options) {};\n\nexport default FeatureFormat;\n\n/**\n * @param {module:ol/geom/Geometry|module:ol/extent~Extent} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {(module:ol/format/Feature~WriteOptions|module:ol/format/Feature~ReadOptions)=} opt_options\n *     Options.\n * @return {module:ol/geom/Geometry|module:ol/extent~Extent} Transformed geometry.\n */\nexport function transformWithOptions(geometry, write, opt_options) {\n  const featureProjection = opt_options ?\n    getProjection(opt_options.featureProjection) : null;\n  const dataProjection = opt_options ?\n    getProjection(opt_options.dataProjection) : null;\n  /**\n   * @type {module:ol/geom/Geometry|module:ol/extent~Extent}\n   */\n  let transformed;\n  if (featureProjection && dataProjection &&\n      !equivalentProjection(featureProjection, dataProjection)) {\n    if (geometry instanceof Geometry) {\n      transformed = (write ? geometry.clone() : geometry).transform(\n        write ? featureProjection : dataProjection,\n        write ? dataProjection : featureProjection);\n    } else {\n      // FIXME this is necessary because GML treats extents\n      // as geometries\n      transformed = transformExtent(\n        geometry,\n        dataProjection,\n        featureProjection);\n    }\n  } else {\n    transformed = geometry;\n  }\n  if (write && opt_options && opt_options.decimals !== undefined) {\n    const power = Math.pow(10, opt_options.decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array.<number>} coordinates Coordinates.\n     * @return {Array.<number>} Transformed coordinates.\n     */\n    const transform = function(coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = transformed.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1\n};\n","/**\n * @module ol/interaction/Pointer\n */\nimport {inherits} from '../index.js';\nimport {FALSE, UNDEFINED} from '../functions.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport Interaction from '../interaction/Interaction.js';\nimport {getValues} from '../obj.js';\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/Pointer}\n */\nconst handleDragEvent = UNDEFINED;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Capture dragging.\n * @this {module:ol/interaction/Pointer}\n */\nconst handleUpEvent = FALSE;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Capture dragging.\n * @this {module:ol/interaction/Pointer}\n */\nconst handleDownEvent = FALSE;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/Pointer}\n */\nconst handleMoveEvent = UNDEFINED;\n\n\n/**\n * @typedef {Object} Options\n * @property {(function(module:ol/MapBrowserPointerEvent):boolean)} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {(function(module:ol/MapBrowserPointerEvent))} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {(function(module:ol/MapBrowserEvent):boolean)} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {(function(module:ol/MapBrowserPointerEvent))} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {(function(module:ol/MapBrowserPointerEvent):boolean)} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n */\n\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n *\n * @constructor\n * @param {module:ol/interaction/Pointer~Options=} opt_options Options.\n * @extends {module:ol/interaction/Interaction}\n * @api\n */\nconst PointerInteraction = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  Interaction.call(this, {\n    handleEvent: options.handleEvent || handleEvent\n  });\n\n  /**\n   * @type {function(module:ol/MapBrowserPointerEvent):boolean}\n   * @private\n   */\n  this.handleDownEvent_ = options.handleDownEvent ?\n    options.handleDownEvent : handleDownEvent;\n\n  /**\n   * @type {function(module:ol/MapBrowserPointerEvent)}\n   * @private\n   */\n  this.handleDragEvent_ = options.handleDragEvent ?\n    options.handleDragEvent : handleDragEvent;\n\n  /**\n   * @type {function(module:ol/MapBrowserPointerEvent)}\n   * @private\n   */\n  this.handleMoveEvent_ = options.handleMoveEvent ?\n    options.handleMoveEvent : handleMoveEvent;\n\n  /**\n   * @type {function(module:ol/MapBrowserPointerEvent):boolean}\n   * @private\n   */\n  this.handleUpEvent_ = options.handleUpEvent ?\n    options.handleUpEvent : handleUpEvent;\n\n  /**\n   * @type {boolean}\n   * @protected\n   */\n  this.handlingDownUpSequence = false;\n\n  /**\n   * @type {!Object.<string, module:ol/pointer/PointerEvent>}\n   * @private\n   */\n  this.trackedPointers_ = {};\n\n  /**\n   * @type {Array.<module:ol/pointer/PointerEvent>}\n   * @protected\n   */\n  this.targetPointers = [];\n\n};\n\ninherits(PointerInteraction, Interaction);\n\n\n/**\n * @param {Array.<module:ol/pointer/PointerEvent>} pointerEvents List of events.\n * @return {module:ol~Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @private\n */\nPointerInteraction.prototype.updateTrackedPointers_ = function(mapBrowserEvent) {\n  if (isPointerDraggingEvent(mapBrowserEvent)) {\n    const event = mapBrowserEvent.pointerEvent;\n\n    const id = event.pointerId.toString();\n    if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n      delete this.trackedPointers_[id];\n    } else if (mapBrowserEvent.type ==\n        MapBrowserEventType.POINTERDOWN) {\n      this.trackedPointers_[id] = event;\n    } else if (id in this.trackedPointers_) {\n      // update only when there was a pointerdown event for this pointer\n      this.trackedPointers_[id] = event;\n    }\n    this.targetPointers = getValues(this.trackedPointers_);\n  }\n};\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n * detected.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Pointer}\n * @api\n */\nexport function handleEvent(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n\n  let stopEvent = false;\n  this.updateTrackedPointers_(mapBrowserEvent);\n  if (this.handlingDownUpSequence) {\n    if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n      this.handleDragEvent_(mapBrowserEvent);\n    } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n      const handledUp = this.handleUpEvent_(mapBrowserEvent);\n      this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n    }\n  } else {\n    if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n      const handled = this.handleDownEvent_(mapBrowserEvent);\n      this.handlingDownUpSequence = handled;\n      stopEvent = this.shouldStopEvent(handled);\n    } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n      this.handleMoveEvent_(mapBrowserEvent);\n    }\n  }\n  return !stopEvent;\n}\n\n\n/**\n * This method is used to determine if \"down\" events should be propagated to\n * other interactions or should be stopped.\n *\n * The method receives the return code of the \"handleDownEvent\" function.\n *\n * By default this function is the \"identity\" function. It's overridden in\n * child classes.\n *\n * @param {boolean} handled Was the event handled by the interaction?\n * @return {boolean} Should the event be stopped?\n * @protected\n */\nPointerInteraction.prototype.shouldStopEvent = function(handled) {\n  return handled;\n};\n\nexport default PointerInteraction;\n","/**\n * @module ol/format/GeoJSON\n */\n// TODO: serialize dataProjection as crs member when writing\n// see https://github.com/openlayers/openlayers/issues/2078\n\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport JSONFeature from '../format/JSONFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign, isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/proj~ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {module:ol/proj~ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @constructor\n * @extends {module:ol/format/JSONFeature}\n * @param {module:ol/format/GeoJSON~Options=} opt_options Options.\n * @api\n */\nconst GeoJSON = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  JSONFeature.call(this);\n\n  /**\n   * @inheritDoc\n   */\n  this.dataProjection = getProjection(\n    options.dataProjection ?\n      options.dataProjection : 'EPSG:4326');\n\n  if (options.featureProjection) {\n    this.defaultFeatureProjection = getProjection(options.featureProjection);\n  }\n\n  /**\n   * Name of the geometry attribute for features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * Look for the geometry name in the feature GeoJSON\n   * @type {boolean|undefined}\n   * @private\n   */\n  this.extractGeometryName_ = options.extractGeometryName;\n\n};\n\ninherits(GeoJSON, JSONFeature);\n\n\n/**\n * @const\n * @type {Object.<string, function(GeoJSONObject): module:ol/geom/Geometry>}\n */\nconst GEOMETRY_READERS = {\n  'Point': readPointGeometry,\n  'LineString': readLineStringGeometry,\n  'Polygon': readPolygonGeometry,\n  'MultiPoint': readMultiPointGeometry,\n  'MultiLineString': readMultiLineStringGeometry,\n  'MultiPolygon': readMultiPolygonGeometry,\n  'GeometryCollection': readGeometryCollectionGeometry\n};\n\n\n/**\n * @const\n * @type {Object.<string, function(module:ol/geom/Geometry, module:ol/format/Feature~WriteOptions=): (GeoJSONGeometry|GeoJSONGeometryCollection)>}\n */\nconst GEOMETRY_WRITERS = {\n  'Point': writePointGeometry,\n  'LineString': writeLineStringGeometry,\n  'Polygon': writePolygonGeometry,\n  'MultiPoint': writeMultiPointGeometry,\n  'MultiLineString': writeMultiLineStringGeometry,\n  'MultiPolygon': writeMultiPolygonGeometry,\n  'GeometryCollection': writeGeometryCollectionGeometry,\n  'Circle': writeEmptyGeometryCollectionGeometry\n};\n\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/geom/Geometry} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n  const geometryReader = GEOMETRY_READERS[object.type];\n  return (\n    /** @type {module:ol/geom/Geometry} */ (transformWithOptions(geometryReader(object), false, opt_options))\n  );\n}\n\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/geom/GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n  const geometries = object.geometries.map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {module:ol/geom/Geometry} geometry Geometry.\n     */\n    function(geometry) {\n      return readGeometry(geometry, opt_options);\n    });\n  return new GeometryCollection(geometries);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {module:ol/geom/Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {module:ol/geom/LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {module:ol/geom/MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {module:ol/geom/MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {module:ol/geom/MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {module:ol/geom/Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object.coordinates);\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry|GeoJSONGeometryCollection} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  const geometryWriter = GEOMETRY_WRITERS[geometry.getType()];\n  return geometryWriter(/** @type {module:ol/geom/Geometry} */ (\n    transformWithOptions(geometry, true, opt_options)), opt_options);\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @return {GeoJSONGeometryCollection} Empty GeoJSON geometry collection.\n */\nfunction writeEmptyGeometryCollectionGeometry(geometry) {\n  return /** @type {GeoJSONGeometryCollection} */ ({\n    type: 'GeometryCollection',\n    geometries: []\n  });\n}\n\n\n/**\n * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n  const geometries = geometry.getGeometriesArray().map(function(geometry) {\n    const options = assign({}, opt_options);\n    delete options.featureProjection;\n    return writeGeometry(geometry, options);\n  });\n  return /** @type {GeoJSONGeometryCollection} */ ({\n    type: 'GeometryCollection',\n    geometries: geometries\n  });\n}\n\n\n/**\n * @param {module:ol/geom/LineString} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'LineString',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {module:ol/geom/MultiLineString} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {module:ol/geom/MultiPoint} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right)\n  });\n}\n\n\n/**\n * @param {module:ol/geom/Point} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'Point',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {module:ol/geom/Polygon} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right)\n  });\n}\n\n\n/**\n * Read a feature from a GeoJSON Feature source.  Only works for Feature or\n * geometry types.  Use {@link module:ol/format/GeoJSON#readFeatures} to read\n * FeatureCollection source. If feature at source has an id, it will be used\n * as Feature id by calling {@link module:ol/Feature#setId} internally.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/Feature} Feature.\n * @api\n */\nGeoJSON.prototype.readFeature;\n\n\n/**\n * Read all features from a GeoJSON source.  Works for all GeoJSON types.\n * If the source includes only geometries, features will be created with those\n * geometries.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nGeoJSON.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readFeatureFromObject = function(object, opt_options) {\n  /**\n   * @type {GeoJSONFeature}\n   */\n  let geoJSONFeature = null;\n  if (object.type === 'Feature') {\n    geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n  } else {\n    geoJSONFeature = /** @type {GeoJSONFeature} */ ({\n      type: 'Feature',\n      geometry: /** @type {GeoJSONGeometry|GeoJSONGeometryCollection} */ (object)\n    });\n  }\n\n  const geometry = readGeometry(geoJSONFeature.geometry, opt_options);\n  const feature = new Feature();\n  if (this.geometryName_) {\n    feature.setGeometryName(this.geometryName_);\n  } else if (this.extractGeometryName_ && geoJSONFeature.geometry_name !== undefined) {\n    feature.setGeometryName(geoJSONFeature.geometry_name);\n  }\n  feature.setGeometry(geometry);\n  if (geoJSONFeature.id !== undefined) {\n    feature.setId(geoJSONFeature.id);\n  }\n  if (geoJSONFeature.properties) {\n    feature.setProperties(geoJSONFeature.properties);\n  }\n  return feature;\n};\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readFeaturesFromObject = function(object, opt_options) {\n  const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n  /** @type {Array.<module:ol/Feature>} */\n  let features = null;\n  if (geoJSONObject.type === 'FeatureCollection') {\n    const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);\n    features = [];\n    const geoJSONFeatures = geoJSONFeatureCollection.features;\n    for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n      features.push(this.readFeatureFromObject(geoJSONFeatures[i], opt_options));\n    }\n  } else {\n    features = [this.readFeatureFromObject(object, opt_options)];\n  }\n  return features;\n};\n\n\n/**\n * Read a geometry from a GeoJSON source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/geom/Geometry} Geometry.\n * @api\n */\nGeoJSON.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readGeometryFromObject = function(object, opt_options) {\n  return readGeometry(/** @type {GeoJSONGeometry} */ (object), opt_options);\n};\n\n\n/**\n * Read the projection from a GeoJSON source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {module:ol/proj/Projection} Projection.\n * @api\n */\nGeoJSON.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nGeoJSON.prototype.readProjectionFromObject = function(object) {\n  const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n  const crs = geoJSONObject.crs;\n  let projection;\n  if (crs) {\n    if (crs.type == 'name') {\n      projection = getProjection(crs.properties.name);\n    } else {\n      assert(false, 36); // Unknown SRS type\n    }\n  } else {\n    projection = this.dataProjection;\n  }\n  return (\n    /** @type {module:ol/proj/Projection} */ (projection)\n  );\n};\n\n\n/**\n * Encode a feature as a GeoJSON Feature string.\n *\n * @function\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {string} GeoJSON.\n * @override\n * @api\n */\nGeoJSON.prototype.writeFeature;\n\n\n/**\n * Encode a feature as a GeoJSON Feature object.\n *\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONFeature} Object.\n * @override\n * @api\n */\nGeoJSON.prototype.writeFeatureObject = function(feature, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n\n  const object = /** @type {GeoJSONFeature} */ ({\n    'type': 'Feature'\n  });\n  const id = feature.getId();\n  if (id !== undefined) {\n    object.id = id;\n  }\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    object.geometry = writeGeometry(geometry, opt_options);\n  } else {\n    object.geometry = null;\n  }\n  const properties = feature.getProperties();\n  delete properties[feature.getGeometryName()];\n  if (!isEmpty(properties)) {\n    object.properties = properties;\n  } else {\n    object.properties = null;\n  }\n  return object;\n};\n\n\n/**\n * Encode an array of features as GeoJSON.\n *\n * @function\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {string} GeoJSON.\n * @api\n */\nGeoJSON.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features as a GeoJSON object.\n *\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONFeatureCollection} GeoJSON Object.\n * @override\n * @api\n */\nGeoJSON.prototype.writeFeaturesObject = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const objects = [];\n  for (let i = 0, ii = features.length; i < ii; ++i) {\n    objects.push(this.writeFeatureObject(features[i], opt_options));\n  }\n  return /** @type {GeoJSONFeatureCollection} */ ({\n    type: 'FeatureCollection',\n    features: objects\n  });\n};\n\n\n/**\n * Encode a geometry as a GeoJSON string.\n *\n * @function\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {string} GeoJSON.\n * @api\n */\nGeoJSON.prototype.writeGeometry;\n\n\n/**\n * Encode a geometry as a GeoJSON object.\n *\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n * @override\n * @api\n */\nGeoJSON.prototype.writeGeometryObject = function(geometry, opt_options) {\n  return writeGeometry(geometry, this.adaptOptions(opt_options));\n};\nexport default GeoJSON;\n","/**\n * @module ol/interaction/Interaction\n */\nimport {inherits} from '../index.js';\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(module:ol/MapBrowserEvent):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return).\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n *\n * @constructor\n * @param {module:ol/interaction/Interaction~InteractionOptions} options Options.\n * @extends {module:ol/Object}\n * @api\n */\nconst Interaction = function(options) {\n\n  BaseObject.call(this);\n\n  /**\n   * @private\n   * @type {module:ol/PluggableMap}\n   */\n  this.map_ = null;\n\n  this.setActive(true);\n\n  /**\n   * @type {function(module:ol/MapBrowserEvent):boolean}\n   */\n  this.handleEvent = options.handleEvent;\n\n};\n\ninherits(Interaction, BaseObject);\n\n\n/**\n * Return whether the interaction is currently active.\n * @return {boolean} `true` if the interaction is active, `false` otherwise.\n * @observable\n * @api\n */\nInteraction.prototype.getActive = function() {\n  return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n};\n\n\n/**\n * Get the map associated with this interaction.\n * @return {module:ol/PluggableMap} Map.\n * @api\n */\nInteraction.prototype.getMap = function() {\n  return this.map_;\n};\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @observable\n * @api\n */\nInteraction.prototype.setActive = function(active) {\n  this.set(InteractionProperty.ACTIVE, active);\n};\n\n\n/**\n * Remove the interaction from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {module:ol/PluggableMap} map Map.\n */\nInteraction.prototype.setMap = function(map) {\n  this.map_ = map;\n};\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {module:ol/coordinate~Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenter();\n  if (currentCenter) {\n    const center = view.constrainCenter(\n      [currentCenter[0] + delta[0], currentCenter[1] + delta[1]]);\n    if (opt_duration) {\n      view.animate({\n        duration: opt_duration,\n        easing: linear,\n        center: center\n      });\n    } else {\n      view.setCenter(center);\n    }\n  }\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotate(view, rotation, opt_anchor, opt_duration) {\n  rotation = view.constrainRotation(rotation, 0);\n  rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration) {\n  if (rotation !== undefined) {\n    const currentRotation = view.getRotation();\n    const currentCenter = view.getCenter();\n    if (currentRotation !== undefined && currentCenter && opt_duration > 0) {\n      view.animate({\n        rotation: rotation,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      view.rotate(rotation, opt_anchor);\n    }\n  }\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n * @param {number=} opt_direction Zooming direction; > 0 indicates\n *     zooming out, in which case the constraints system will select\n *     the largest nearest resolution; < 0 indicates zooming in, in\n *     which case the constraints system will select the smallest\n *     nearest resolution; == 0 indicates that the zooming direction\n *     is unknown/not relevant, in which case the constraints system\n *     will select the nearest resolution. If not defined 0 is\n *     assumed.\n */\nexport function zoom(view, resolution, opt_anchor, opt_duration, opt_direction) {\n  resolution = view.constrainResolution(resolution, 0, opt_direction);\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentResolution = view.getResolution();\n  let resolution = view.constrainResolution(currentResolution, delta, 0);\n\n  if (resolution !== undefined) {\n    const resolutions = view.getResolutions();\n    resolution = clamp(\n      resolution,\n      view.getMinResolution() || resolutions[resolutions.length - 1],\n      view.getMaxResolution() || resolutions[0]);\n  }\n\n  // If we have a constraint on center, we need to change the anchor so that the\n  // new center is within the extent. We first calculate the new center, apply\n  // the constraint to it, and then calculate back the anchor\n  if (opt_anchor && resolution !== undefined && resolution !== currentResolution) {\n    const currentCenter = view.getCenter();\n    let center = view.calculateCenterZoom(resolution, opt_anchor);\n    center = view.constrainCenter(center);\n\n    opt_anchor = [\n      (resolution * currentCenter[0] - currentResolution * center[0]) /\n          (resolution - currentResolution),\n      (resolution * currentCenter[1] - currentResolution * center[1]) /\n          (resolution - currentResolution)\n    ];\n  }\n\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration) {\n  if (resolution) {\n    const currentResolution = view.getResolution();\n    const currentCenter = view.getCenter();\n    if (currentResolution !== undefined && currentCenter &&\n        resolution !== currentResolution && opt_duration) {\n      view.animate({\n        resolution: resolution,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      if (opt_anchor) {\n        const center = view.calculateCenterZoom(resolution, opt_anchor);\n        view.setCenter(center);\n      }\n      view.setResolution(resolution);\n    }\n  }\n}\n\nexport default Interaction;\n","/**\n * @module ol/source/BingMaps\n */\nimport {inherits} from '../index.js';\nimport {createFromTileUrlFunctions} from '../tileurlfunction.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {jsonp as requestJSONP} from '../net.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport SourceState from '../source/State.js';\nimport TileImage from '../source/TileImage.js';\nimport {createOrUpdate, quadKey} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=2048] Cache size.\n * @property {boolean} [hidpi=false] If `true` hidpi tiles will be requested.\n * @property {string} [culture='en-us'] Culture code.\n * @property {string} key Bing Maps API key. Get yours at http://www.bingmapsportal.com/.\n * @property {string} imagerySet Type of imagery.\n * @property {number} [maxZoom=21] Max zoom. Default is what's advertized by the BingMaps service.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n/**\n * @classdesc\n * Layer source for Bing Maps tile data.\n *\n * @constructor\n * @extends {module:ol/source/TileImage}\n * @param {module:ol/source/BingMaps~Options=} options Bing Maps options.\n * @api\n */\nconst BingMaps = function(options) {\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : false;\n\n  TileImage.call(this, {\n    cacheSize: options.cacheSize,\n    crossOrigin: 'anonymous',\n    opaque: true,\n    projection: getProjection('EPSG:3857'),\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    state: SourceState.LOADING,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: this.hidpi_ ? 2 : 1,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.culture_ = options.culture !== undefined ? options.culture : 'en-us';\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxZoom_ = options.maxZoom !== undefined ? options.maxZoom : -1;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.apiKey_ = options.key;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.imagerySet_ = options.imagerySet;\n\n  const url = 'https://dev.virtualearth.net/REST/v1/Imagery/Metadata/' +\n      this.imagerySet_ +\n      '?uriScheme=https&include=ImageryProviders&key=' + this.apiKey_ +\n      '&c=' + this.culture_;\n\n  requestJSONP(url, this.handleImageryMetadataResponse.bind(this), undefined,\n    'jsonp');\n\n};\n\ninherits(BingMaps, TileImage);\n\n\n/**\n * The attribution containing a link to the Microsoft® Bing™ Maps Platform APIs’\n * Terms Of Use.\n * @const\n * @type {string}\n */\nconst TOS_ATTRIBUTION = '<a class=\"ol-attribution-bing-tos\" ' +\n      'href=\"https://www.microsoft.com/maps/product/terms.html\">' +\n      'Terms of Use</a>';\n\n\n/**\n * Get the api key used for this source.\n *\n * @return {string} The api key.\n * @api\n */\nBingMaps.prototype.getApiKey = function() {\n  return this.apiKey_;\n};\n\n\n/**\n * Get the imagery set associated with this source.\n *\n * @return {string} The imagery set.\n * @api\n */\nBingMaps.prototype.getImagerySet = function() {\n  return this.imagerySet_;\n};\n\n\n/**\n * @param {BingMapsImageryMetadataResponse} response Response.\n */\nBingMaps.prototype.handleImageryMetadataResponse = function(response) {\n  if (response.statusCode != 200 ||\n      response.statusDescription != 'OK' ||\n      response.authenticationResultCode != 'ValidCredentials' ||\n      response.resourceSets.length != 1 ||\n      response.resourceSets[0].resources.length != 1) {\n    this.setState(SourceState.ERROR);\n    return;\n  }\n\n  const resource = response.resourceSets[0].resources[0];\n  const maxZoom = this.maxZoom_ == -1 ? resource.zoomMax : this.maxZoom_;\n\n  const sourceProjection = this.getProjection();\n  const extent = extentFromProjection(sourceProjection);\n  const tileSize = resource.imageWidth == resource.imageHeight ?\n    resource.imageWidth : [resource.imageWidth, resource.imageHeight];\n  const tileGrid = createXYZ({\n    extent: extent,\n    minZoom: resource.zoomMin,\n    maxZoom: maxZoom,\n    tileSize: tileSize / (this.hidpi_ ? 2 : 1)\n  });\n  this.tileGrid = tileGrid;\n\n  const culture = this.culture_;\n  const hidpi = this.hidpi_;\n  this.tileUrlFunction = createFromTileUrlFunctions(\n    resource.imageUrlSubdomains.map(function(subdomain) {\n      const quadKeyTileCoord = [0, 0, 0];\n      const imageUrl = resource.imageUrl\n        .replace('{subdomain}', subdomain)\n        .replace('{culture}', culture);\n      return (\n        /**\n         * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n         * @param {number} pixelRatio Pixel ratio.\n         * @param {module:ol/proj/Projection} projection Projection.\n         * @return {string|undefined} Tile URL.\n         */\n        function(tileCoord, pixelRatio, projection) {\n          if (!tileCoord) {\n            return undefined;\n          } else {\n            createOrUpdate(tileCoord[0], tileCoord[1], -tileCoord[2] - 1, quadKeyTileCoord);\n            let url = imageUrl;\n            if (hidpi) {\n              url += '&dpi=d1&device=mobile';\n            }\n            return url.replace('{quadkey}', quadKey(quadKeyTileCoord));\n          }\n        }\n      );\n    }));\n\n  if (resource.imageryProviders) {\n    const transform = getTransformFromProjections(\n      getProjection('EPSG:4326'), this.getProjection());\n\n    this.setAttributions(function(frameState) {\n      const attributions = [];\n      const zoom = frameState.viewState.zoom;\n      resource.imageryProviders.map(function(imageryProvider) {\n        let intersecting = false;\n        const coverageAreas = imageryProvider.coverageAreas;\n        for (let i = 0, ii = coverageAreas.length; i < ii; ++i) {\n          const coverageArea = coverageAreas[i];\n          if (zoom >= coverageArea.zoomMin && zoom <= coverageArea.zoomMax) {\n            const bbox = coverageArea.bbox;\n            const epsg4326Extent = [bbox[1], bbox[0], bbox[3], bbox[2]];\n            const extent = applyTransform(epsg4326Extent, transform);\n            if (intersects(extent, frameState.extent)) {\n              intersecting = true;\n              break;\n            }\n          }\n        }\n        if (intersecting) {\n          attributions.push(imageryProvider.attribution);\n        }\n      });\n\n      attributions.push(TOS_ATTRIBUTION);\n      return attributions;\n    });\n  }\n\n  this.setState(SourceState.READY);\n};\nexport default BingMaps;\n","/**\n * @module ol/css\n */\n\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {Object.<string>} The font families (or null if the input spec is invalid).\n */\nexport const getFontFamilies = (function() {\n  let style;\n  const cache = {};\n  return function(font) {\n    if (!style) {\n      style = document.createElement('div').style;\n    }\n    if (!(font in cache)) {\n      style.font = font;\n      const family = style.fontFamily;\n      style.font = '';\n      if (!family) {\n        return null;\n      }\n      cache[font] = family.split(/,\\s?/);\n    }\n    return cache[font];\n  };\n})();\n","/**\n * @module ol/has\n */\nimport {HAS_WEBGL} from './index.js';\n\nconst ua = typeof navigator !== 'undefined' ?\n  navigator.userAgent.toLowerCase() : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n\n\n/**\n * True if the browser's Canvas implementation implements {get,set}LineDash.\n * @type {boolean}\n */\nexport const CANVAS_LINE_DASH = function() {\n  let has = false;\n  try {\n    has = !!document.createElement('CANVAS').getContext('2d').setLineDash;\n  } catch (e) {\n    // pass\n  }\n  return has;\n}();\n\n\n/**\n * Is HTML5 geolocation supported in the current browser?\n * @const\n * @type {boolean}\n * @api\n */\nexport const GEOLOCATION = 'geolocation' in navigator;\n\n\n/**\n * True if browser supports touch events.\n * @const\n * @type {boolean}\n * @api\n */\nexport const TOUCH = 'ontouchstart' in window;\n\n\n/**\n * True if browser supports pointer events.\n * @const\n * @type {boolean}\n */\nexport const POINTER = 'PointerEvent' in window;\n\n\n/**\n * True if browser supports ms pointer events (IE 10).\n * @const\n * @type {boolean}\n */\nexport const MSPOINTER = !!(navigator.msPointerEnabled);\n\n\n/**\n * True if both OpenLayers and browser support WebGL.\n * @const\n * @type {boolean}\n * @api\n */\nexport const WEBGL = HAS_WEBGL;\n","/**\n * @module ol/geom\n */\n\nexport {default as Circle} from './geom/Circle.js';\nexport {default as Geometry} from './geom/Geometry.js';\nexport {default as LineString} from './geom/LineString.js';\nexport {default as MultiLineString} from './geom/MultiLineString.js';\nexport {default as MultiPoint} from './geom/MultiPoint.js';\nexport {default as MultiPolygon} from './geom/MultiPolygon.js';\nexport {default as Point} from './geom/Point.js';\nexport {default as Polygon} from './geom/Polygon.js';\n","/**\n * @module ol/source/State\n */\n\n/**\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n * @enum {string}\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error'\n};\n","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport {getAllTextContent, getAttributeNS, makeArrayPusher, makeReplacer, parseNode, pushParseAndPop} from '../xml.js';\n\n\n/**\n * @const\n * @type {string}\n */\nexport const GMLNS = 'http://www.opengis.net/gml';\n\n\n/**\n * @typedef {Object} Options\n * @property {Object.<string, string>|string} [featureNS] Feature\n * namespace. If not defined will be derived from GML. If multiple\n * feature types have been configured which come from different feature\n * namespaces, this will be an object with the keys being the prefixes used\n * in the entries of featureType array. The values of the object will be the\n * feature namespaces themselves. So for instance there might be a featureType\n * item `topp:states` in the `featureType` array and then there will be a key\n * `topp` in the featureNS object with value `http://www.openplans.org/topp`.\n * @property {Array.<string>|string} [featureType] Feature type(s) to parse.\n * If multiple feature types need to be configured\n * which come from different feature namespaces, `featureNS` will be an object\n * with the keys being the prefixes used in the entries of featureType array.\n * The values of the object will be the feature namespaces themselves.\n * So for instance there might be a featureType item `topp:states` and then\n * there will be a key named `topp` in the featureNS object with value\n * `http://www.openplans.org/topp`.\n * @property {string} srsName srsName to use when writing geometries.\n * @property {boolean} [surface=false] Write gml:Surface instead of gml:Polygon\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [curve=false] Write gml:Curve instead of gml:LineString\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [multiCurve=true] Write gml:MultiCurve instead of gml:MultiLineString.\n * Since the latter is deprecated in GML 3.\n * @property {boolean} [multiSurface=true] Write gml:multiSurface instead of\n * gml:MultiPolygon. Since the latter is deprecated in GML 3.\n * @property {string} [schemaLocation] Optional schemaLocation to use when\n * writing out the GML, this will override the default provided.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes GML2 and GML3.\n *\n * @constructor\n * @abstract\n * @param {module:ol/format/GMLBase~Options=} opt_options\n *     Optional configuration object.\n * @extends {module:ol/format/XMLFeature}\n */\nconst GMLBase = function(opt_options) {\n  const options = /** @type {module:ol/format/GMLBase~Options} */ (opt_options ? opt_options : {});\n\n  /**\n   * @protected\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType = options.featureType;\n\n  /**\n   * @protected\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS = options.featureNS;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.srsName = options.srsName;\n\n  /**\n   * @protected\n   * @type {string}\n   */\n  this.schemaLocation = '';\n\n  /**\n   * @type {Object.<string, Object.<string, Object>>}\n   */\n  this.FEATURE_COLLECTION_PARSERS = {};\n  this.FEATURE_COLLECTION_PARSERS[GMLNS] = {\n    'featureMember': makeReplacer(GMLBase.prototype.readFeaturesInternal),\n    'featureMembers': makeReplacer(GMLBase.prototype.readFeaturesInternal)\n  };\n\n  XMLFeature.call(this);\n};\n\ninherits(GMLBase, XMLFeature);\n\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n */\nconst ONLY_WHITESPACE_RE = /^[\\s\\xa0]*$/;\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<module:ol/Feature> | undefined} Features.\n */\nGMLBase.prototype.readFeaturesInternal = function(node, objectStack) {\n  const localName = node.localName;\n  let features = null;\n  if (localName == 'FeatureCollection') {\n    if (node.namespaceURI === 'http://www.opengis.net/wfs') {\n      features = pushParseAndPop([],\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    } else {\n      features = pushParseAndPop(null,\n        this.FEATURE_COLLECTION_PARSERS, node,\n        objectStack, this);\n    }\n  } else if (localName == 'featureMembers' || localName == 'featureMember') {\n    const context = objectStack[0];\n    let featureType = context['featureType'];\n    let featureNS = context['featureNS'];\n    const prefix = 'p';\n    const defaultPrefix = 'p0';\n    if (!featureType && node.childNodes) {\n      featureType = [], featureNS = {};\n      for (let i = 0, ii = node.childNodes.length; i < ii; ++i) {\n        const child = node.childNodes[i];\n        if (child.nodeType === 1) {\n          const ft = child.nodeName.split(':').pop();\n          if (featureType.indexOf(ft) === -1) {\n            let key = '';\n            let count = 0;\n            const uri = child.namespaceURI;\n            for (const candidate in featureNS) {\n              if (featureNS[candidate] === uri) {\n                key = candidate;\n                break;\n              }\n              ++count;\n            }\n            if (!key) {\n              key = prefix + count;\n              featureNS[key] = uri;\n            }\n            featureType.push(key + ':' + ft);\n          }\n        }\n      }\n      if (localName != 'featureMember') {\n        // recheck featureType for each featureMember\n        context['featureType'] = featureType;\n        context['featureNS'] = featureNS;\n      }\n    }\n    if (typeof featureNS === 'string') {\n      const ns = featureNS;\n      featureNS = {};\n      featureNS[defaultPrefix] = ns;\n    }\n    const parsersNS = {};\n    const featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n    for (const p in featureNS) {\n      const parsers = {};\n      for (let i = 0, ii = featureTypes.length; i < ii; ++i) {\n        const featurePrefix = featureTypes[i].indexOf(':') === -1 ?\n          defaultPrefix : featureTypes[i].split(':')[0];\n        if (featurePrefix === p) {\n          parsers[featureTypes[i].split(':').pop()] =\n              (localName == 'featureMembers') ?\n                makeArrayPusher(this.readFeatureElement, this) :\n                makeReplacer(this.readFeatureElement, this);\n        }\n      }\n      parsersNS[featureNS[p]] = parsers;\n    }\n    if (localName == 'featureMember') {\n      features = pushParseAndPop(undefined, parsersNS, node, objectStack);\n    } else {\n      features = pushParseAndPop([], parsersNS, node, objectStack);\n    }\n  }\n  if (features === null) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/Geometry|undefined} Geometry.\n */\nGMLBase.prototype.readGeometryElement = function(node, objectStack) {\n  const context = /** @type {Object} */ (objectStack[0]);\n  context['srsName'] = node.firstElementChild.getAttribute('srsName');\n  context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n  /** @type {module:ol/geom/Geometry} */\n  const geometry = pushParseAndPop(null, this.GEOMETRY_PARSERS_, node, objectStack, this);\n  if (geometry) {\n    return (\n      /** @type {module:ol/geom/Geometry} */ (transformWithOptions(geometry, false, context))\n    );\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/Feature} Feature.\n */\nGMLBase.prototype.readFeatureElement = function(node, objectStack) {\n  let n;\n  const fid = node.getAttribute('fid') || getAttributeNS(node, GMLNS, 'id');\n  const values = {};\n  let geometryName;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    // Assume attribute elements have one child node and that the child\n    // is a text or CDATA node (to be treated as text).\n    // Otherwise assume it is a geometry node.\n    if (n.childNodes.length === 0 ||\n        (n.childNodes.length === 1 &&\n        (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n      let value = getAllTextContent(n, false);\n      if (ONLY_WHITESPACE_RE.test(value)) {\n        value = undefined;\n      }\n      values[localName] = value;\n    } else {\n      // boundedBy is an extent and must not be considered as a geometry\n      if (localName !== 'boundedBy') {\n        geometryName = localName;\n      }\n      values[localName] = this.readGeometryElement(n, objectStack);\n    }\n  }\n  const feature = new Feature(values);\n  if (geometryName) {\n    feature.setGeometryName(geometryName);\n  }\n  if (fid) {\n    feature.setId(fid);\n  }\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/Point|undefined} Point.\n */\nGMLBase.prototype.readPoint = function(node, objectStack) {\n  const flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return point;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/MultiPoint|undefined} MultiPoint.\n */\nGMLBase.prototype.readMultiPoint = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const coordinates = pushParseAndPop([],\n    this.MULTIPOINT_PARSERS_, node, objectStack, this);\n  if (coordinates) {\n    return new MultiPoint(coordinates);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/MultiLineString|undefined} MultiLineString.\n */\nGMLBase.prototype.readMultiLineString = function(node, objectStack) {\n  /** @type {Array.<module:ol/geom/LineString>} */\n  const lineStrings = pushParseAndPop([],\n    this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/MultiPolygon|undefined} MultiPolygon.\n */\nGMLBase.prototype.readMultiPolygon = function(node, objectStack) {\n  /** @type {Array.<module:ol/geom/Polygon>} */\n  const polygons = pushParseAndPop([], this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.pointMemberParser_ = function(node, objectStack) {\n  parseNode(this.POINTMEMBER_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.lineStringMemberParser_ = function(node, objectStack) {\n  parseNode(this.LINESTRINGMEMBER_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGMLBase.prototype.polygonMemberParser_ = function(node, objectStack) {\n  parseNode(this.POLYGONMEMBER_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/LineString|undefined} LineString.\n */\nGMLBase.prototype.readLineString = function(node, objectStack) {\n  const flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} LinearRing flat coordinates.\n */\nGMLBase.prototype.readFlatLinearRing_ = function(node, objectStack) {\n  const ring = pushParseAndPop(null,\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n    objectStack, this);\n  if (ring) {\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/LinearRing|undefined} LinearRing.\n */\nGMLBase.prototype.readLinearRing = function(node, objectStack) {\n  const flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\n  if (flatCoordinates) {\n    const ring = new LinearRing(null);\n    ring.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return ring;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/Polygon|undefined} Polygon.\n */\nGMLBase.prototype.readPolygon = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>} Flat coordinates.\n */\nGMLBase.prototype.readFlatCoordinatesFromNode_ = function(node, objectStack) {\n  return pushParseAndPop(null, this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser_),\n    'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeArrayPusher(GMLBase.prototype.lineStringMemberParser_),\n    'lineStringMembers': makeArrayPusher(GMLBase.prototype.lineStringMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser_),\n    'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing_)\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readGeometryFromNode = function(node, opt_options) {\n  const geometry = this.readGeometryElement(node,\n    [this.getReadOptions(node, opt_options ? opt_options : {})]);\n  return geometry ? geometry : null;\n};\n\n\n/**\n * Read all features from a GML FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nGMLBase.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {\n    featureType: this.featureType,\n    featureNS: this.featureNS\n  };\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  const features = this.readFeaturesInternal(node, [options]);\n  return features || [];\n};\n\n\n/**\n * @inheritDoc\n */\nGMLBase.prototype.readProjectionFromNode = function(node) {\n  return getProjection(this.srsName ? this.srsName : node.firstElementChild.getAttribute('srsName'));\n};\nexport default GMLBase;\n","/**\n * @module ol/control/Control\n */\nimport {inherits} from '../index.js';\nimport {UNDEFINED} from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {removeNode} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Element} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(module:ol/MapEvent)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {Element|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @constructor\n * @extends {module:ol/Object}\n * @param {module:ol/control/Control~Options} options Control options.\n * @api\n */\nconst Control = function(options) {\n\n  BaseObject.call(this);\n\n  /**\n   * @protected\n   * @type {Element}\n   */\n  this.element = options.element ? options.element : null;\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.target_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/PluggableMap}\n   */\n  this.map_ = null;\n\n  /**\n   * @protected\n   * @type {!Array.<module:ol/events~EventsKey>}\n   */\n  this.listenerKeys = [];\n\n  /**\n   * @type {function(module:ol/MapEvent)}\n   */\n  this.render = options.render ? options.render : UNDEFINED;\n\n  if (options.target) {\n    this.setTarget(options.target);\n  }\n\n};\n\ninherits(Control, BaseObject);\n\n\n/**\n * @inheritDoc\n */\nControl.prototype.disposeInternal = function() {\n  removeNode(this.element);\n  BaseObject.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * Get the map associated with this control.\n * @return {module:ol/PluggableMap} Map.\n * @api\n */\nControl.prototype.getMap = function() {\n  return this.map_;\n};\n\n\n/**\n * Remove the control from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {module:ol/PluggableMap} map Map.\n * @api\n */\nControl.prototype.setMap = function(map) {\n  if (this.map_) {\n    removeNode(this.element);\n  }\n  for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n    unlistenByKey(this.listenerKeys[i]);\n  }\n  this.listenerKeys.length = 0;\n  this.map_ = map;\n  if (this.map_) {\n    const target = this.target_ ?\n      this.target_ : map.getOverlayContainerStopEvent();\n    target.appendChild(this.element);\n    if (this.render !== UNDEFINED) {\n      this.listenerKeys.push(listen(map,\n        MapEventType.POSTRENDER, this.render, this));\n    }\n    map.render();\n  }\n};\n\n\n/**\n * This function is used to set a target element for the control. It has no\n * effect if it is called after the control has been added to the map (i.e.\n * after `setMap` is called on the control). If no `target` is set in the\n * options passed to the control constructor and if `setTarget` is not called\n * then the control is added to the map's overlay container.\n * @param {Element|string} target Target.\n * @api\n */\nControl.prototype.setTarget = function(target) {\n  this.target_ = typeof target === 'string' ?\n    document.getElementById(target) :\n    target;\n};\nexport default Control;\n","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../index.js';\nimport TileImage from '../source/TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {boolean} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=18] Optional max zoom level.\n * @property {number} [minZoom=0] Optional min zoom level.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|module:ol/size~Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * @property {module:ol/Tile~UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if url or urls are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array.<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {module:ol/source/TileImage}\n * @param {module:ol/source/XYZ~Options=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    createXYZ({\n      extent: extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n","/**\n * @module ol/Collection\n */\nimport {inherits} from './index.js';\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {module:ol/CollectionEventType} type Type.\n * @param {*=} opt_element Element.\n */\nexport const CollectionEvent = function(type, opt_element) {\n\n  Event.call(this, type);\n\n  /**\n   * The element that is added to or removed from the collection.\n   * @type {*}\n   * @api\n   */\n  this.element = opt_element;\n\n};\n\ninherits(CollectionEvent, Event);\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @constructor\n * @extends {module:ol/Object}\n * @fires module:ol/Collection~CollectionEvent\n * @param {Array.<T>=} opt_array Array.\n * @param {module:ol/Collection~Options=} opt_options Collection options.\n * @template T\n * @api\n */\nconst Collection = function(opt_array, opt_options) {\n\n  BaseObject.call(this);\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.unique_ = !!options.unique;\n\n  /**\n   * @private\n   * @type {!Array.<T>}\n   */\n  this.array_ = opt_array ? opt_array : [];\n\n  if (this.unique_) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      this.assertUnique_(this.array_[i], i);\n    }\n  }\n\n  this.updateLength_();\n\n};\n\ninherits(Collection, BaseObject);\n\n\n/**\n * Remove all elements from the collection.\n * @api\n */\nCollection.prototype.clear = function() {\n  while (this.getLength() > 0) {\n    this.pop();\n  }\n};\n\n\n/**\n * Add elements to the collection.  This pushes each item in the provided array\n * to the end of the collection.\n * @param {!Array.<T>} arr Array.\n * @return {module:ol/Collection.<T>} This collection.\n * @api\n */\nCollection.prototype.extend = function(arr) {\n  for (let i = 0, ii = arr.length; i < ii; ++i) {\n    this.push(arr[i]);\n  }\n  return this;\n};\n\n\n/**\n * Iterate over each element, calling the provided callback.\n * @param {function(T, number, Array.<T>): *} f The function to call\n *     for every element. This function takes 3 arguments (the element, the\n *     index and the array). The return value is ignored.\n * @api\n */\nCollection.prototype.forEach = function(f) {\n  const array = this.array_;\n  for (let i = 0, ii = array.length; i < ii; ++i) {\n    f(array[i], i, array);\n  }\n};\n\n\n/**\n * Get a reference to the underlying Array object. Warning: if the array\n * is mutated, no events will be dispatched by the collection, and the\n * collection's \"length\" property won't be in sync with the actual length\n * of the array.\n * @return {!Array.<T>} Array.\n * @api\n */\nCollection.prototype.getArray = function() {\n  return this.array_;\n};\n\n\n/**\n * Get the element at the provided index.\n * @param {number} index Index.\n * @return {T} Element.\n * @api\n */\nCollection.prototype.item = function(index) {\n  return this.array_[index];\n};\n\n\n/**\n * Get the length of this collection.\n * @return {number} The length of the array.\n * @observable\n * @api\n */\nCollection.prototype.getLength = function() {\n  return /** @type {number} */ (this.get(Property.LENGTH));\n};\n\n\n/**\n * Insert an element at the provided index.\n * @param {number} index Index.\n * @param {T} elem Element.\n * @api\n */\nCollection.prototype.insertAt = function(index, elem) {\n  if (this.unique_) {\n    this.assertUnique_(elem);\n  }\n  this.array_.splice(index, 0, elem);\n  this.updateLength_();\n  this.dispatchEvent(\n    new CollectionEvent(CollectionEventType.ADD, elem));\n};\n\n\n/**\n * Remove the last element of the collection and return it.\n * Return `undefined` if the collection is empty.\n * @return {T|undefined} Element.\n * @api\n */\nCollection.prototype.pop = function() {\n  return this.removeAt(this.getLength() - 1);\n};\n\n\n/**\n * Insert the provided element at the end of the collection.\n * @param {T} elem Element.\n * @return {number} New length of the collection.\n * @api\n */\nCollection.prototype.push = function(elem) {\n  if (this.unique_) {\n    this.assertUnique_(elem);\n  }\n  const n = this.getLength();\n  this.insertAt(n, elem);\n  return this.getLength();\n};\n\n\n/**\n * Remove the first occurrence of an element from the collection.\n * @param {T} elem Element.\n * @return {T|undefined} The removed element or undefined if none found.\n * @api\n */\nCollection.prototype.remove = function(elem) {\n  const arr = this.array_;\n  for (let i = 0, ii = arr.length; i < ii; ++i) {\n    if (arr[i] === elem) {\n      return this.removeAt(i);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * Remove the element at the provided index and return it.\n * Return `undefined` if the collection does not contain this index.\n * @param {number} index Index.\n * @return {T|undefined} Value.\n * @api\n */\nCollection.prototype.removeAt = function(index) {\n  const prev = this.array_[index];\n  this.array_.splice(index, 1);\n  this.updateLength_();\n  this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev));\n  return prev;\n};\n\n\n/**\n * Set the element at the provided index.\n * @param {number} index Index.\n * @param {T} elem Element.\n * @api\n */\nCollection.prototype.setAt = function(index, elem) {\n  const n = this.getLength();\n  if (index < n) {\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev));\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem));\n  } else {\n    for (let j = n; j < index; ++j) {\n      this.insertAt(j, undefined);\n    }\n    this.insertAt(index, elem);\n  }\n};\n\n\n/**\n * @private\n */\nCollection.prototype.updateLength_ = function() {\n  this.set(Property.LENGTH, this.array_.length);\n};\n\n\n/**\n * @private\n * @param {T} elem Element.\n * @param {number=} opt_except Optional index to ignore.\n */\nCollection.prototype.assertUnique_ = function(elem, opt_except) {\n  for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n    if (this.array_[i] === elem && i !== opt_except) {\n      throw new AssertionError(58);\n    }\n  }\n};\n\nexport default Collection;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {inherits} from '../index.js';\nimport {FALSE} from '../functions.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport {rotate, scale, translate, transform2D} from '../geom/flat/transform.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/geom/Geometry}\n * @api\n */\nconst SimpleGeometry = function() {\n\n  Geometry.call(this);\n\n  /**\n   * @protected\n   * @type {module:ol/geom/GeometryLayout}\n   */\n  this.layout = GeometryLayout.XY;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.stride = 2;\n\n  /**\n   * @protected\n   * @type {Array.<number>}\n   */\n  this.flatCoordinates = null;\n\n};\n\ninherits(SimpleGeometry, Geometry);\n\n\n/**\n * @param {number} stride Stride.\n * @return {module:ol/geom/GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return (\n    /** @type {module:ol/geom/GeometryLayout} */ (layout)\n  );\n}\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n\n/**\n * @inheritDoc\n */\nSimpleGeometry.prototype.containsXY = FALSE;\n\n\n/**\n * @inheritDoc\n */\nSimpleGeometry.prototype.computeExtent = function(extent) {\n  return createOrUpdateFromFlatCoordinates(this.flatCoordinates,\n    0, this.flatCoordinates.length, this.stride, extent);\n};\n\n\n/**\n * @abstract\n * @return {Array} Coordinates.\n */\nSimpleGeometry.prototype.getCoordinates = function() {};\n\n\n/**\n * Return the first coordinate of the geometry.\n * @return {module:ol/coordinate~Coordinate} First coordinate.\n * @api\n */\nSimpleGeometry.prototype.getFirstCoordinate = function() {\n  return this.flatCoordinates.slice(0, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Flat coordinates.\n */\nSimpleGeometry.prototype.getFlatCoordinates = function() {\n  return this.flatCoordinates;\n};\n\n\n/**\n * Return the last coordinate of the geometry.\n * @return {module:ol/coordinate~Coordinate} Last point.\n * @api\n */\nSimpleGeometry.prototype.getLastCoordinate = function() {\n  return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n};\n\n\n/**\n * Return the {@link module:ol/geom/GeometryLayout~GeometryLayout layout} of the geometry.\n * @return {module:ol/geom/GeometryLayout} Layout.\n * @api\n */\nSimpleGeometry.prototype.getLayout = function() {\n  return this.layout;\n};\n\n\n/**\n * @inheritDoc\n */\nSimpleGeometry.prototype.getSimplifiedGeometry = function(squaredTolerance) {\n  if (this.simplifiedGeometryRevision != this.getRevision()) {\n    clear(this.simplifiedGeometryCache);\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n    this.simplifiedGeometryRevision = this.getRevision();\n  }\n  // If squaredTolerance is negative or if we know that simplification will not\n  // have any effect then just return this.\n  if (squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n       squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n    return this;\n  }\n  const key = squaredTolerance.toString();\n  if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n    return this.simplifiedGeometryCache[key];\n  } else {\n    const simplifiedGeometry =\n        this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      this.simplifiedGeometryCache[key] = simplifiedGeometry;\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n};\n\n\n/**\n * @param {number} squaredTolerance Squared tolerance.\n * @return {module:ol/geom/SimpleGeometry} Simplified geometry.\n * @protected\n */\nSimpleGeometry.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  return this;\n};\n\n\n/**\n * @return {number} Stride.\n */\nSimpleGeometry.prototype.getStride = function() {\n  return this.stride;\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @protected\n */\nSimpleGeometry.prototype.setFlatCoordinatesInternal = function(layout, flatCoordinates) {\n  this.stride = getStrideForLayout(layout);\n  this.layout = layout;\n  this.flatCoordinates = flatCoordinates;\n};\n\n\n/**\n * @abstract\n * @param {Array} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n */\nSimpleGeometry.prototype.setCoordinates = function(coordinates, opt_layout) {};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout|undefined} layout Layout.\n * @param {Array} coordinates Coordinates.\n * @param {number} nesting Nesting.\n * @protected\n */\nSimpleGeometry.prototype.setLayout = function(layout, coordinates, nesting) {\n  /** @type {number} */\n  let stride;\n  if (layout) {\n    stride = getStrideForLayout(layout);\n  } else {\n    for (let i = 0; i < nesting; ++i) {\n      if (coordinates.length === 0) {\n        this.layout = GeometryLayout.XY;\n        this.stride = 2;\n        return;\n      } else {\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n    }\n    stride = coordinates.length;\n    layout = getLayoutForStride(stride);\n  }\n  this.layout = layout;\n  this.stride = stride;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nSimpleGeometry.prototype.applyTransform = function(transformFn) {\n  if (this.flatCoordinates) {\n    transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nSimpleGeometry.prototype.rotate = function(angle, anchor) {\n  const flatCoordinates = this.getFlatCoordinates();\n  if (flatCoordinates) {\n    const stride = this.getStride();\n    rotate(\n      flatCoordinates, 0, flatCoordinates.length,\n      stride, angle, anchor, flatCoordinates);\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nSimpleGeometry.prototype.scale = function(sx, opt_sy, opt_anchor) {\n  let sy = opt_sy;\n  if (sy === undefined) {\n    sy = sx;\n  }\n  let anchor = opt_anchor;\n  if (!anchor) {\n    anchor = getCenter(this.getExtent());\n  }\n  const flatCoordinates = this.getFlatCoordinates();\n  if (flatCoordinates) {\n    const stride = this.getStride();\n    scale(\n      flatCoordinates, 0, flatCoordinates.length,\n      stride, sx, sy, anchor, flatCoordinates);\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nSimpleGeometry.prototype.translate = function(deltaX, deltaY) {\n  const flatCoordinates = this.getFlatCoordinates();\n  if (flatCoordinates) {\n    const stride = this.getStride();\n    translate(\n      flatCoordinates, 0, flatCoordinates.length, stride,\n      deltaX, deltaY, flatCoordinates);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/SimpleGeometry} simpleGeometry Simple geometry.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates, 0, flatCoordinates.length, stride,\n      transform, opt_dest);\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/easing\n */\n\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/tilecoord\n */\n\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z`, `x`, and `y`. `z` is the zoom level.\n * @typedef {Array.<number>} TileCoord\n * @api\n */\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Tile coordinate.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n\n/**\n * Get the key for a tile coord.\n * @param {module:ol/tilecoord~TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {module:ol/tilecoord~TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  const z = tileCoord[0];\n  const digits = new Array(z);\n  let mask = 1 << (z - 1);\n  let i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {!module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const extent = tileGrid.getExtent();\n  let tileRange;\n  if (!extent) {\n    tileRange = tileGrid.getFullTileRange(z);\n  } else {\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n  }\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/size\n */\n\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array.<number>} Size\n * @api\n */\n\n\n/**\n * Returns a buffered size.\n * @param {module:ol/size~Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {module:ol/size~Size=} opt_size Optional reusable size array.\n * @return {module:ol/size~Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n\n/**\n * Determines if a size has a positive area.\n * @param {module:ol/size~Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {module:ol/size~Size} size Size.\n * @param {number} ratio Ratio.\n * @param {module:ol/size~Size=} opt_size Optional reusable size array.\n * @return {module:ol/size~Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n\n/**\n * Returns an `module:ol/size~Size` array for the passed in number (meaning: square) or\n * `module:ol/size~Size` array.\n * (meaning: non-square),\n * @param {number|module:ol/size~Size} size Width and height.\n * @param {module:ol/size~Size=} opt_size Optional reusable size array.\n * @return {module:ol/size~Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  DEGREES: 'degrees',\n  FEET: 'ft',\n  METERS: 'm',\n  PIXELS: 'pixels',\n  TILE_PIXELS: 'tile-pixels',\n  USFEET: 'us-ft'\n};\n\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object.<module:ol/proj/Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/LayerType\n */\n\n/**\n * A layer type used when creating layer renderers.\n * @enum {string}\n */\nexport default {\n  IMAGE: 'IMAGE',\n  TILE: 'TILE',\n  VECTOR_TILE: 'VECTOR_TILE',\n  VECTOR: 'VECTOR'\n};\n","/**\n * @module ol/geom/flat/transform\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array.<number>} anchor Rotation anchor point.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * Scale the coordinates.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array.<number>} anchor Scale anchor point.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection~CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection~CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove'\n};\n","/**\n * @module ol/source/TileJSON\n */\n// FIXME check order of async callbacks\n\n/**\n * @see http://mapbox.com/developers/api/\n */\n\nimport {inherits} from '../index.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {assert} from '../asserts.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {jsonp as requestJSONP} from '../net.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport SourceState from '../source/State.js';\nimport TileImage from '../source/TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {boolean} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {tileJSON} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] URL to the TileJSON file. If not provided, `tileJSON` must be configured.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data in TileJSON format.\n *\n * @constructor\n * @extends {module:ol/source/TileImage}\n * @param {module:ol/source/TileJSON~Options=} options TileJSON options.\n * @api\n */\nconst TileJSON = function(options) {\n\n  /**\n   * @type {TileJSON}\n   * @private\n   */\n  this.tileJSON_ = null;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    projection: getProjection('EPSG:3857'),\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    state: SourceState.LOADING,\n    tileLoadFunction: options.tileLoadFunction,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  if (options.url) {\n    if (options.jsonp) {\n      requestJSONP(options.url, this.handleTileJSONResponse.bind(this),\n        this.handleTileJSONError.bind(this));\n    } else {\n      const client = new XMLHttpRequest();\n      client.addEventListener('load', this.onXHRLoad_.bind(this));\n      client.addEventListener('error', this.onXHRError_.bind(this));\n      client.open('GET', options.url);\n      client.send();\n    }\n  } else if (options.tileJSON) {\n    this.handleTileJSONResponse(options.tileJSON);\n  } else {\n    assert(false, 51); // Either `url` or `tileJSON` options must be provided\n  }\n\n};\n\ninherits(TileJSON, TileImage);\n\n\n/**\n * @private\n * @param {Event} event The load event.\n */\nTileJSON.prototype.onXHRLoad_ = function(event) {\n  const client = /** @type {XMLHttpRequest} */ (event.target);\n  // status will be 0 for file:// urls\n  if (!client.status || client.status >= 200 && client.status < 300) {\n    let response;\n    try {\n      response = /** @type {TileJSON} */(JSON.parse(client.responseText));\n    } catch (err) {\n      this.handleTileJSONError();\n      return;\n    }\n    this.handleTileJSONResponse(response);\n  } else {\n    this.handleTileJSONError();\n  }\n};\n\n\n/**\n * @private\n * @param {Event} event The error event.\n */\nTileJSON.prototype.onXHRError_ = function(event) {\n  this.handleTileJSONError();\n};\n\n\n/**\n * @return {TileJSON} The tilejson object.\n * @api\n */\nTileJSON.prototype.getTileJSON = function() {\n  return this.tileJSON_;\n};\n\n\n/**\n * @protected\n * @param {TileJSON} tileJSON Tile JSON.\n */\nTileJSON.prototype.handleTileJSONResponse = function(tileJSON) {\n\n  const epsg4326Projection = getProjection('EPSG:4326');\n\n  const sourceProjection = this.getProjection();\n  let extent;\n  if (tileJSON.bounds !== undefined) {\n    const transform = getTransformFromProjections(\n      epsg4326Projection, sourceProjection);\n    extent = applyTransform(tileJSON.bounds, transform);\n  }\n\n  const minZoom = tileJSON.minzoom || 0;\n  const maxZoom = tileJSON.maxzoom || 22;\n  const tileGrid = createXYZ({\n    extent: extentFromProjection(sourceProjection),\n    maxZoom: maxZoom,\n    minZoom: minZoom\n  });\n  this.tileGrid = tileGrid;\n\n  this.tileUrlFunction = createFromTemplates(tileJSON.tiles, tileGrid);\n\n  if (tileJSON.attribution !== undefined && !this.getAttributions()) {\n    const attributionExtent = extent !== undefined ?\n      extent : epsg4326Projection.getExtent();\n\n    this.setAttributions(function(frameState) {\n      if (intersects(attributionExtent, frameState.extent)) {\n        return [tileJSON.attribution];\n      }\n      return null;\n    });\n\n  }\n  this.tileJSON_ = tileJSON;\n  this.setState(SourceState.READY);\n\n};\n\n\n/**\n * @protected\n */\nTileJSON.prototype.handleTileJSONError = function() {\n  this.setState(SourceState.ERROR);\n};\nexport default TileJSON;\n","/**\n * @module ol/reproj/Image\n */\nimport {ERROR_THRESHOLD} from './common.js';\nimport {inherits} from '../index.js';\nimport ImageBase from '../ImageBase.js';\nimport ImageState from '../ImageState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getCenter, getIntersection, getHeight, getWidth} from '../extent.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from '../reproj/Triangulation.js';\n\n\n/**\n * @typedef {function(module:ol/extent~Extent, number, number) : module:ol/ImageBase} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n *\n * @constructor\n * @extends {module:ol/ImageBase}\n * @param {module:ol/proj/Projection} sourceProj Source projection (of the data).\n * @param {module:ol/proj/Projection} targetProj Target projection.\n * @param {module:ol/extent~Extent} targetExtent Target extent.\n * @param {number} targetResolution Target resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/reproj/Image~FunctionType} getImageFunction\n *     Function returning source images (extent, resolution, pixelRatio).\n */\nconst ReprojImage = function(sourceProj, targetProj,\n  targetExtent, targetResolution, pixelRatio, getImageFunction) {\n\n  /**\n   * @private\n   * @type {module:ol/proj/Projection}\n   */\n  this.targetProj_ = targetProj;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.maxSourceExtent_ = sourceProj.getExtent();\n  const maxTargetExtent = targetProj.getExtent();\n\n  const limitedTargetExtent = maxTargetExtent ?\n    getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n  const targetCenter = getCenter(limitedTargetExtent);\n  const sourceResolution = calculateSourceResolution(\n    sourceProj, targetProj, targetCenter, targetResolution);\n\n  const errorThresholdInPixels = ERROR_THRESHOLD;\n\n  /**\n   * @private\n   * @type {!module:ol/reproj/Triangulation}\n   */\n  this.triangulation_ = new Triangulation(\n    sourceProj, targetProj, limitedTargetExtent, this.maxSourceExtent_,\n    sourceResolution * errorThresholdInPixels);\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.targetResolution_ = targetResolution;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.targetExtent_ = targetExtent;\n\n  const sourceExtent = this.triangulation_.calculateSourceExtent();\n\n  /**\n   * @private\n   * @type {module:ol/ImageBase}\n   */\n  this.sourceImage_ =\n      getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.sourcePixelRatio_ =\n      this.sourceImage_ ? this.sourceImage_.getPixelRatio() : 1;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.sourceListenerKey_ = null;\n\n\n  let state = ImageState.LOADED;\n\n  if (this.sourceImage_) {\n    state = ImageState.IDLE;\n  }\n\n  ImageBase.call(this, targetExtent, targetResolution, this.sourcePixelRatio_, state);\n};\n\ninherits(ReprojImage, ImageBase);\n\n\n/**\n * @inheritDoc\n */\nReprojImage.prototype.disposeInternal = function() {\n  if (this.state == ImageState.LOADING) {\n    this.unlistenSource_();\n  }\n  ImageBase.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @inheritDoc\n */\nReprojImage.prototype.getImage = function() {\n  return this.canvas_;\n};\n\n\n/**\n * @return {module:ol/proj/Projection} Projection.\n */\nReprojImage.prototype.getProjection = function() {\n  return this.targetProj_;\n};\n\n\n/**\n * @private\n */\nReprojImage.prototype.reproject_ = function() {\n  const sourceState = this.sourceImage_.getState();\n  if (sourceState == ImageState.LOADED) {\n    const width = getWidth(this.targetExtent_) / this.targetResolution_;\n    const height = getHeight(this.targetExtent_) / this.targetResolution_;\n\n    this.canvas_ = renderReprojected(width, height, this.sourcePixelRatio_,\n      this.sourceImage_.getResolution(), this.maxSourceExtent_,\n      this.targetResolution_, this.targetExtent_, this.triangulation_, [{\n        extent: this.sourceImage_.getExtent(),\n        image: this.sourceImage_.getImage()\n      }], 0);\n  }\n  this.state = sourceState;\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nReprojImage.prototype.load = function() {\n  if (this.state == ImageState.IDLE) {\n    this.state = ImageState.LOADING;\n    this.changed();\n\n    const sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n      this.reproject_();\n    } else {\n      this.sourceListenerKey_ = listen(this.sourceImage_,\n        EventType.CHANGE, function(e) {\n          const sourceState = this.sourceImage_.getState();\n          if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n            this.unlistenSource_();\n            this.reproject_();\n          }\n        }, this);\n      this.sourceImage_.load();\n    }\n  }\n};\n\n\n/**\n * @private\n */\nReprojImage.prototype.unlistenSource_ = function() {\n  unlistenByKey(/** @type {!module:ol/events~EventsKey} */ (this.sourceListenerKey_));\n  this.sourceListenerKey_ = null;\n};\nexport default ReprojImage;\n","/**\n * @module ol/source/Image\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {inherits} from '../index.js';\nimport ImageState from '../ImageState.js';\nimport {linearFindNearest} from '../array.js';\nimport Event from '../events/Event.js';\nimport {equals} from '../extent.js';\nimport {equivalent} from '../proj.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from '../source/Source.js';\n\n\n/**\n * @enum {string}\n */\nconst ImageSourceEventType = {\n\n  /**\n   * Triggered when an image starts loading.\n   * @event ol/source/Image~ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event ol/source/Image~ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event ol/source/Image~ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror'\n\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {string} type Type.\n * @param {module:ol/Image} image The image.\n */\nconst ImageSourceEvent = function(type, image) {\n\n  Event.call(this, type);\n\n  /**\n   * The image related to the event.\n   * @type {module:ol/Image}\n   * @api\n   */\n  this.image = image;\n\n};\ninherits(ImageSourceEvent, Event);\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {module:ol/extent~Extent} [extent]\n * @property {module:ol/proj~ProjectionLike} projection\n * @property {Array.<number>} [resolutions]\n * @property {module:ol/source/State} [state]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/source/Source}\n * @param {module:ol/source/Image~Options} options Single image source options.\n * @api\n */\nconst ImageSource = function(options) {\n  Source.call(this, {\n    attributions: options.attributions,\n    extent: options.extent,\n    projection: options.projection,\n    state: options.state\n  });\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.resolutions_ = options.resolutions !== undefined ?\n    options.resolutions : null;\n\n\n  /**\n   * @private\n   * @type {module:ol/reproj/Image}\n   */\n  this.reprojectedImage_ = null;\n\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.reprojectedRevision_ = 0;\n};\n\ninherits(ImageSource, Source);\n\n\n/**\n * @return {Array.<number>} Resolutions.\n * @override\n */\nImageSource.prototype.getResolutions = function() {\n  return this.resolutions_;\n};\n\n\n/**\n * @protected\n * @param {number} resolution Resolution.\n * @return {number} Resolution.\n */\nImageSource.prototype.findNearestResolution = function(resolution) {\n  if (this.resolutions_) {\n    const idx = linearFindNearest(this.resolutions_, resolution, 0);\n    resolution = this.resolutions_[idx];\n  }\n  return resolution;\n};\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {module:ol/ImageBase} Single image.\n */\nImageSource.prototype.getImage = function(extent, resolution, pixelRatio, projection) {\n  const sourceProjection = this.getProjection();\n  if (!ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)) {\n    if (sourceProjection) {\n      projection = sourceProjection;\n    }\n    return this.getImageInternal(extent, resolution, pixelRatio, projection);\n  } else {\n    if (this.reprojectedImage_) {\n      if (this.reprojectedRevision_ == this.getRevision() &&\n          equivalent(\n            this.reprojectedImage_.getProjection(), projection) &&\n          this.reprojectedImage_.getResolution() == resolution &&\n          equals(this.reprojectedImage_.getExtent(), extent)) {\n        return this.reprojectedImage_;\n      }\n      this.reprojectedImage_.dispose();\n      this.reprojectedImage_ = null;\n    }\n\n    this.reprojectedImage_ = new ReprojImage(\n      sourceProjection, projection, extent, resolution, pixelRatio,\n      function(extent, resolution, pixelRatio) {\n        return this.getImageInternal(extent, resolution,\n          pixelRatio, sourceProjection);\n      }.bind(this));\n    this.reprojectedRevision_ = this.getRevision();\n\n    return this.reprojectedImage_;\n  }\n};\n\n\n/**\n * @abstract\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {module:ol/ImageBase} Single image.\n * @protected\n */\nImageSource.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {};\n\n\n/**\n * Handle image change events.\n * @param {module:ol/events/Event} event Event.\n * @protected\n */\nImageSource.prototype.handleImageChange = function(event) {\n  const image = /** @type {module:ol/Image} */ (event.target);\n  switch (image.getState()) {\n    case ImageState.LOADING:\n      this.dispatchEvent(\n        new ImageSourceEvent(ImageSourceEventType.IMAGELOADSTART,\n          image));\n      break;\n    case ImageState.LOADED:\n      this.dispatchEvent(\n        new ImageSourceEvent(ImageSourceEventType.IMAGELOADEND,\n          image));\n      break;\n    case ImageState.ERROR:\n      this.dispatchEvent(\n        new ImageSourceEvent(ImageSourceEventType.IMAGELOADERROR,\n          image));\n      break;\n    default:\n      // pass\n  }\n};\n\n\n/**\n * Default image load function for image sources that use module:ol/Image~Image image\n * instances.\n * @param {module:ol/Image} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  image.getImage().src = src;\n}\n\n\nexport default ImageSource;\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\nimport {inherits} from '../index.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getArea, getCenter, getIntersection} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from '../reproj/Triangulation.js';\n\n\n/**\n * @typedef {function(number, number, number, number) : module:ol/Tile} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n * @constructor\n * @extends {module:ol/Tile}\n * @param {module:ol/proj/Projection} sourceProj Source projection.\n * @param {module:ol/tilegrid/TileGrid} sourceTileGrid Source tile grid.\n * @param {module:ol/proj/Projection} targetProj Target projection.\n * @param {module:ol/tilegrid/TileGrid} targetTileGrid Target tile grid.\n * @param {module:ol/tilecoord~TileCoord} tileCoord Coordinate of the tile.\n * @param {module:ol/tilecoord~TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} gutter Gutter of the source tiles.\n * @param {module:ol/reproj/Tile~FunctionType} getTileFunction\n *     Function returning source tiles (z, x, y, pixelRatio).\n * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n */\nconst ReprojTile = function(sourceProj, sourceTileGrid,\n  targetProj, targetTileGrid, tileCoord, wrappedTileCoord,\n  pixelRatio, gutter, getTileFunction,\n  opt_errorThreshold, opt_renderEdges) {\n  Tile.call(this, tileCoord, TileState.IDLE);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelRatio_ = pixelRatio;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = gutter;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/tilegrid/TileGrid}\n   */\n  this.sourceTileGrid_ = sourceTileGrid;\n\n  /**\n   * @private\n   * @type {module:ol/tilegrid/TileGrid}\n   */\n  this.targetTileGrid_ = targetTileGrid;\n\n  /**\n   * @private\n   * @type {module:ol/tilecoord~TileCoord}\n   */\n  this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n  /**\n   * @private\n   * @type {!Array.<module:ol/Tile>}\n   */\n  this.sourceTiles_ = [];\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.sourcesListenerKeys_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.sourceZ_ = 0;\n\n  const targetExtent = targetTileGrid.getTileCoordExtent(this.wrappedTileCoord_);\n  const maxTargetExtent = this.targetTileGrid_.getExtent();\n  let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n  const limitedTargetExtent = maxTargetExtent ?\n    getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n  if (getArea(limitedTargetExtent) === 0) {\n    // Tile is completely outside range -> EMPTY\n    // TODO: is it actually correct that the source even creates the tile ?\n    this.state = TileState.EMPTY;\n    return;\n  }\n\n  const sourceProjExtent = sourceProj.getExtent();\n  if (sourceProjExtent) {\n    if (!maxSourceExtent) {\n      maxSourceExtent = sourceProjExtent;\n    } else {\n      maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n    }\n  }\n\n  const targetResolution = targetTileGrid.getResolution(\n    this.wrappedTileCoord_[0]);\n\n  const targetCenter = getCenter(limitedTargetExtent);\n  const sourceResolution = calculateSourceResolution(\n    sourceProj, targetProj, targetCenter, targetResolution);\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    // invalid sourceResolution -> EMPTY\n    // probably edges of the projections when no extent is defined\n    this.state = TileState.EMPTY;\n    return;\n  }\n\n  const errorThresholdInPixels = opt_errorThreshold !== undefined ?\n    opt_errorThreshold : ERROR_THRESHOLD;\n\n  /**\n   * @private\n   * @type {!module:ol/reproj/Triangulation}\n   */\n  this.triangulation_ = new Triangulation(\n    sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n    sourceResolution * errorThresholdInPixels);\n\n  if (this.triangulation_.getTriangles().length === 0) {\n    // no valid triangles -> EMPTY\n    this.state = TileState.EMPTY;\n    return;\n  }\n\n  this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n  let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n  if (maxSourceExtent) {\n    if (sourceProj.canWrapX()) {\n      sourceExtent[1] = clamp(\n        sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n      sourceExtent[3] = clamp(\n        sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n    } else {\n      sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n    }\n  }\n\n  if (!getArea(sourceExtent)) {\n    this.state = TileState.EMPTY;\n  } else {\n    const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n      sourceExtent, this.sourceZ_);\n\n    for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n      for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n        const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n        if (tile) {\n          this.sourceTiles_.push(tile);\n        }\n      }\n    }\n\n    if (this.sourceTiles_.length === 0) {\n      this.state = TileState.EMPTY;\n    }\n  }\n};\n\ninherits(ReprojTile, Tile);\n\n\n/**\n * @inheritDoc\n */\nReprojTile.prototype.disposeInternal = function() {\n  if (this.state == TileState.LOADING) {\n    this.unlistenSources_();\n  }\n  Tile.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * Get the HTML Canvas element for this tile.\n * @return {HTMLCanvasElement} Canvas.\n */\nReprojTile.prototype.getImage = function() {\n  return this.canvas_;\n};\n\n\n/**\n * @private\n */\nReprojTile.prototype.reproject_ = function() {\n  const sources = [];\n  this.sourceTiles_.forEach(function(tile, i, arr) {\n    if (tile && tile.getState() == TileState.LOADED) {\n      sources.push({\n        extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n        image: tile.getImage()\n      });\n    }\n  }.bind(this));\n  this.sourceTiles_.length = 0;\n\n  if (sources.length === 0) {\n    this.state = TileState.ERROR;\n  } else {\n    const z = this.wrappedTileCoord_[0];\n    const size = this.targetTileGrid_.getTileSize(z);\n    const width = typeof size === 'number' ? size : size[0];\n    const height = typeof size === 'number' ? size : size[1];\n    const targetResolution = this.targetTileGrid_.getResolution(z);\n    const sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n    const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n      this.wrappedTileCoord_);\n    this.canvas_ = renderReprojected(width, height, this.pixelRatio_,\n      sourceResolution, this.sourceTileGrid_.getExtent(),\n      targetResolution, targetExtent, this.triangulation_, sources,\n      this.gutter_, this.renderEdges_);\n\n    this.state = TileState.LOADED;\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nReprojTile.prototype.load = function() {\n  if (this.state == TileState.IDLE) {\n    this.state = TileState.LOADING;\n    this.changed();\n\n    let leftToLoad = 0;\n\n    this.sourcesListenerKeys_ = [];\n    this.sourceTiles_.forEach(function(tile, i, arr) {\n      const state = tile.getState();\n      if (state == TileState.IDLE || state == TileState.LOADING) {\n        leftToLoad++;\n\n        const sourceListenKey = listen(tile, EventType.CHANGE,\n          function(e) {\n            const state = tile.getState();\n            if (state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY) {\n              unlistenByKey(sourceListenKey);\n              leftToLoad--;\n              if (leftToLoad === 0) {\n                this.unlistenSources_();\n                this.reproject_();\n              }\n            }\n          }, this);\n        this.sourcesListenerKeys_.push(sourceListenKey);\n      }\n    }.bind(this));\n\n    this.sourceTiles_.forEach(function(tile, i, arr) {\n      const state = tile.getState();\n      if (state == TileState.IDLE) {\n        tile.load();\n      }\n    });\n\n    if (leftToLoad === 0) {\n      setTimeout(this.reproject_.bind(this), 0);\n    }\n  }\n};\n\n\n/**\n * @private\n */\nReprojTile.prototype.unlistenSources_ = function() {\n  this.sourcesListenerKeys_.forEach(unlistenByKey);\n  this.sourcesListenerKeys_ = null;\n};\nexport default ReprojTile;\n","/**\n * @module ol/source/TileImage\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {getUid, inherits} from '../index.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from '../source/UrlTile.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {boolean} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/source/State} [state] Source state.\n * @property {module:ol/ImageTile~TileClass} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {module:ol/Tile~UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array.<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @constructor\n * @fires module:ol/source/Tile~TileSourceEvent\n * @extends {module:ol/source/UrlTile}\n * @param {module:ol/source/TileImage~Options=} options Image tile options.\n * @api\n */\nconst TileImage = function(options) {\n\n  UrlTile.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    extent: options.extent,\n    opaque: options.opaque,\n    projection: options.projection,\n    state: options.state,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction ?\n      options.tileLoadFunction : defaultTileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX,\n    transition: options.transition\n  });\n\n  /**\n   * @protected\n   * @type {?string}\n   */\n  this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @protected\n   * @type {function(new: module:ol/ImageTile, module:ol/tilecoord~TileCoord, module:ol/TileState, string,\n   *        ?string, module:ol/Tile~LoadFunction, module:ol/Tile~Options=)}\n   */\n  this.tileClass = options.tileClass !== undefined ?\n    options.tileClass : ImageTile;\n\n  /**\n   * @protected\n   * @type {!Object.<string, module:ol/TileCache>}\n   */\n  this.tileCacheForProjection = {};\n\n  /**\n   * @protected\n   * @type {!Object.<string, module:ol/tilegrid/TileGrid>}\n   */\n  this.tileGridForProjection = {};\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderReprojectionEdges_ = false;\n};\n\ninherits(TileImage, UrlTile);\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.canExpireCache = function() {\n  if (!ENABLE_RASTER_REPROJECTION) {\n    return UrlTile.prototype.canExpireCache.call(this);\n  }\n  if (this.tileCache.canExpireCache()) {\n    return true;\n  } else {\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.expireCache = function(projection, usedTiles) {\n  if (!ENABLE_RASTER_REPROJECTION) {\n    UrlTile.prototype.expireCache.call(this, projection, usedTiles);\n    return;\n  }\n  const usedTileCache = this.getTileCacheForProjection(projection);\n\n  this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n  for (const id in this.tileCacheForProjection) {\n    const tileCache = this.tileCacheForProjection[id];\n    tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.getGutter = function(projection) {\n  if (ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n    return 0;\n  } else {\n    return this.getGutterInternal();\n  }\n};\n\n\n/**\n * @protected\n * @return {number} Gutter.\n */\nTileImage.prototype.getGutterInternal = function() {\n  return 0;\n};\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.getOpaque = function(projection) {\n  if (ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n    return false;\n  } else {\n    return UrlTile.prototype.getOpaque.call(this, projection);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.getTileGridForProjection = function(projection) {\n  if (!ENABLE_RASTER_REPROJECTION) {\n    return UrlTile.prototype.getTileGridForProjection.call(this, projection);\n  }\n  const thisProj = this.getProjection();\n  if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n    return this.tileGrid;\n  } else {\n    const projKey = getUid(projection).toString();\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n    }\n    return (\n      /** @type {!module:ol/tilegrid/TileGrid} */ (this.tileGridForProjection[projKey])\n    );\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.getTileCacheForProjection = function(projection) {\n  if (!ENABLE_RASTER_REPROJECTION) {\n    return UrlTile.prototype.getTileCacheForProjection.call(this, projection);\n  }\n  const thisProj = this.getProjection(); if (!thisProj || equivalent(thisProj, projection)) {\n    return this.tileCache;\n  } else {\n    const projKey = getUid(projection).toString();\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n};\n\n\n/**\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {string} key The key set on the tile.\n * @return {!module:ol/Tile} Tile.\n * @private\n */\nTileImage.prototype.createTile_ = function(z, x, y, pixelRatio, projection, key) {\n  const tileCoord = [z, x, y];\n  const urlTileCoord = this.getTileCoordForTileUrlFunction(\n    tileCoord, projection);\n  const tileUrl = urlTileCoord ?\n    this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n  const tile = new this.tileClass(\n    tileCoord,\n    tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n    tileUrl !== undefined ? tileUrl : '',\n    this.crossOrigin,\n    this.tileLoadFunction,\n    this.tileOptions);\n  tile.key = key;\n  listen(tile, EventType.CHANGE,\n    this.handleTileChange, this);\n  return tile;\n};\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.getTile = function(z, x, y, pixelRatio, projection) {\n  const sourceProjection = /** @type {!module:ol/proj/Projection} */ (this.getProjection());\n  if (!ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n    return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n  } else {\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = /** @type {!module:ol/Tile} */ (cache.get(tileCoordKey));\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    } else {\n      const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n      const targetTileGrid = this.getTileGridForProjection(projection);\n      const wrappedTileCoord =\n          this.getTileCoordForTileUrlFunction(tileCoord, projection);\n      const newTile = new ReprojTile(\n        sourceProjection, sourceTileGrid,\n        projection, targetTileGrid,\n        tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio),\n        this.getGutterInternal(),\n        function(z, x, y, pixelRatio) {\n          return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n        }.bind(this), this.reprojectionErrorThreshold_,\n        this.renderReprojectionEdges_);\n      newTile.key = key;\n\n      if (tile) {\n        newTile.interimTile = tile;\n        newTile.refreshInterimChain();\n        cache.replace(tileCoordKey, newTile);\n      } else {\n        cache.set(tileCoordKey, newTile);\n      }\n      return newTile;\n    }\n  }\n};\n\n\n/**\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {number} pixelRatio Pixel ratio.\n * @param {!module:ol/proj/Projection} projection Projection.\n * @return {!module:ol/Tile} Tile.\n * @protected\n */\nTileImage.prototype.getTileInternal = function(z, x, y, pixelRatio, projection) {\n  let tile = null;\n  const tileCoordKey = getKeyZXY(z, x, y);\n  const key = this.getKey();\n  if (!this.tileCache.containsKey(tileCoordKey)) {\n    tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n    this.tileCache.set(tileCoordKey, tile);\n  } else {\n    tile = this.tileCache.get(tileCoordKey);\n    if (tile.key != key) {\n      // The source's params changed. If the tile has an interim tile and if we\n      // can use it then we use it. Otherwise we create a new tile.  In both\n      // cases we attempt to assign an interim tile to the new tile.\n      const interimTile = tile;\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n      //make the new tile the head of the list,\n      if (interimTile.getState() == TileState.IDLE) {\n        //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n        tile.interimTile = interimTile.interimTile;\n      } else {\n        tile.interimTile = interimTile;\n      }\n      tile.refreshInterimChain();\n      this.tileCache.replace(tileCoordKey, tile);\n    }\n  }\n  return tile;\n};\n\n\n/**\n * Sets whether to render reprojection edges or not (usually for debugging).\n * @param {boolean} render Render the edges.\n * @api\n */\nTileImage.prototype.setRenderReprojectionEdges = function(render) {\n  if (!ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render) {\n    return;\n  }\n  this.renderReprojectionEdges_ = render;\n  for (const id in this.tileCacheForProjection) {\n    this.tileCacheForProjection[id].clear();\n  }\n  this.changed();\n};\n\n\n/**\n * Sets the tile grid to use when reprojecting the tiles to the given\n * projection instead of the default tile grid for the projection.\n *\n * This can be useful when the default tile grid cannot be created\n * (e.g. projection has no extent defined) or\n * for optimization reasons (custom tile size, resolutions, ...).\n *\n * @param {module:ol/proj~ProjectionLike} projection Projection.\n * @param {module:ol/tilegrid/TileGrid} tilegrid Tile grid to use for the projection.\n * @api\n */\nTileImage.prototype.setTileGridForProjection = function(projection, tilegrid) {\n  if (ENABLE_RASTER_REPROJECTION) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj).toString();\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  imageTile.getImage().src = src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/layer/Layer\n */\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getUid, inherits} from '../index.js';\nimport {getChangeEventType} from '../Object.js';\nimport BaseLayer from '../layer/Base.js';\nimport LayerProperty from '../layer/Property.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/source/Source} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {module:ol/layer/Layer} layer\n * @property {number} opacity\n * @property {module:ol/source/Source~State} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {module:ol/extent~Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/layer/Base}\n * @fires module:ol/render/Event~RenderEvent\n * @param {module:ol/layer/Layer~Options} options Layer options.\n * @api\n */\nconst Layer = function(options) {\n\n  const baseOptions = assign({}, options);\n  delete baseOptions.source;\n\n  BaseLayer.call(this, /** @type {module:ol/layer/Base~Options} */ (baseOptions));\n\n  /**\n   * @private\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.mapPrecomposeKey_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.mapRenderKey_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.sourceChangeKey_ = null;\n\n  if (options.map) {\n    this.setMap(options.map);\n  }\n\n  listen(this,\n    getChangeEventType(LayerProperty.SOURCE),\n    this.handleSourcePropertyChange_, this);\n\n  const source = options.source ? options.source : null;\n  this.setSource(source);\n};\n\ninherits(Layer, BaseLayer);\n\n\n/**\n * Return `true` if the layer is visible, and if the passed resolution is\n * between the layer's minResolution and maxResolution. The comparison is\n * inclusive for `minResolution` and exclusive for `maxResolution`.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @param {number} resolution Resolution.\n * @return {boolean} The layer is visible at the given resolution.\n */\nexport function visibleAtResolution(layerState, resolution) {\n  return layerState.visible && resolution >= layerState.minResolution &&\n      resolution < layerState.maxResolution;\n}\n\n\n/**\n * @inheritDoc\n */\nLayer.prototype.getLayersArray = function(opt_array) {\n  const array = opt_array ? opt_array : [];\n  array.push(this);\n  return array;\n};\n\n\n/**\n * @inheritDoc\n */\nLayer.prototype.getLayerStatesArray = function(opt_states) {\n  const states = opt_states ? opt_states : [];\n  states.push(this.getLayerState());\n  return states;\n};\n\n\n/**\n * Get the layer source.\n * @return {module:ol/source/Source} The layer source (or `null` if not yet set).\n * @observable\n * @api\n */\nLayer.prototype.getSource = function() {\n  const source = this.get(LayerProperty.SOURCE);\n  return (\n    /** @type {module:ol/source/Source} */ (source) || null\n  );\n};\n\n\n/**\n  * @inheritDoc\n  */\nLayer.prototype.getSourceState = function() {\n  const source = this.getSource();\n  return !source ? SourceState.UNDEFINED : source.getState();\n};\n\n\n/**\n * @private\n */\nLayer.prototype.handleSourceChange_ = function() {\n  this.changed();\n};\n\n\n/**\n * @private\n */\nLayer.prototype.handleSourcePropertyChange_ = function() {\n  if (this.sourceChangeKey_) {\n    unlistenByKey(this.sourceChangeKey_);\n    this.sourceChangeKey_ = null;\n  }\n  const source = this.getSource();\n  if (source) {\n    this.sourceChangeKey_ = listen(source,\n      EventType.CHANGE, this.handleSourceChange_, this);\n  }\n  this.changed();\n};\n\n\n/**\n * Sets the layer to be rendered on top of other layers on a map. The map will\n * not manage this layer in its layers collection, and the callback in\n * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n * is useful for temporary layers. To remove an unmanaged layer from the map,\n * use `#setMap(null)`.\n *\n * To add the layer to a map and have it managed by the map, use\n * {@link module:ol/Map#addLayer} instead.\n * @param {module:ol/PluggableMap} map Map.\n * @api\n */\nLayer.prototype.setMap = function(map) {\n  if (this.mapPrecomposeKey_) {\n    unlistenByKey(this.mapPrecomposeKey_);\n    this.mapPrecomposeKey_ = null;\n  }\n  if (!map) {\n    this.changed();\n  }\n  if (this.mapRenderKey_) {\n    unlistenByKey(this.mapRenderKey_);\n    this.mapRenderKey_ = null;\n  }\n  if (map) {\n    this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function(evt) {\n      const layerState = this.getLayerState();\n      layerState.managed = false;\n      layerState.zIndex = Infinity;\n      evt.frameState.layerStatesArray.push(layerState);\n      evt.frameState.layerStates[getUid(this)] = layerState;\n    }, this);\n    this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n    this.changed();\n  }\n};\n\n\n/**\n * Set the layer source.\n * @param {module:ol/source/Source} source The layer source.\n * @observable\n * @api\n */\nLayer.prototype.setSource = function(source) {\n  this.set(LayerProperty.SOURCE, source);\n};\nexport default Layer;\n","/**\n * @module ol/tilegrid\n */\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {toSize} from './size.js';\nimport {containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth} from './extent.js';\nimport Corner from './extent/Corner.js';\nimport {assign} from './obj.js';\nimport {get as getProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {!module:ol/tilegrid/TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n\n/**\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|module:ol/size~Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {module:ol/extent/Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!module:ol/tilegrid/TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize\n  });\n}\n\n\n/**\n * @typedef {Object} XYZOptions\n * @property {module:ol/extent~Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|module:ol/size~Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {module:ol/tilegrid~XYZOptions=} opt_options Tile grid options.\n * @return {!module:ol/tilegrid/TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const options = /** @type {module:ol/tilegrid/TileGrid~Options} */ ({});\n  assign(options, opt_options !== undefined ?\n    opt_options : /** @type {module:ol/tilegrid~XYZOptions} */ ({}));\n  if (options.extent === undefined) {\n    options.extent = getProjection('EPSG:3857').getExtent();\n  }\n  options.resolutions = resolutionsFromExtent(\n    options.extent, options.maxZoom, options.tileSize);\n  delete options.maxZoom;\n\n  return new TileGrid(options);\n}\n\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|module:ol/size~Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array.<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n  const maxZoom = opt_maxZoom !== undefined ?\n    opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(opt_tileSize !== undefined ?\n    opt_tileSize : DEFAULT_TILE_SIZE);\n  const maxResolution = Math.max(\n    width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n\n/**\n * @param {module:ol/proj~ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|module:ol/size~Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {module:ol/extent/Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!module:ol/tilegrid/TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {module:ol/proj~ProjectionLike} projection Projection.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from '../proj/Units.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {module:ol/proj/Units|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {module:ol/extent~Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {module:ol/extent~Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, module:ol/coordinate~Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{module:ol/coordinate~Coordinate}` as arguments, and returns\n * the `{number}` resolution at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use proj4js, aliases can be added using `proj4.defs()`; see\n * [documentation](https://github.com/proj4js/proj4js). To set an alternative\n * namespace for proj4, use {@link module:ol/proj~setProj4}.\n *\n * @constructor\n * @param {module:ol/proj/Projection~Options} options Projection options.\n * @struct\n * @api\n */\nconst Projection = function(options) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this.code_ = options.code;\n\n  /**\n   * Units of projected coordinates. When set to `TILE_PIXELS`, a\n   * `this.extent_` and `this.worldExtent_` must be configured properly for each\n   * tile.\n   * @private\n   * @type {module:ol/proj/Units}\n   */\n  this.units_ = /** @type {module:ol/proj/Units} */ (options.units);\n\n  /**\n   * Validity extent of the projection in projected coordinates. For projections\n   * with `TILE_PIXELS` units, this is the extent of the tile in\n   * tile pixel space.\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent_ = options.extent !== undefined ? options.extent : null;\n\n  /**\n   * Extent of the world in EPSG:4326. For projections with\n   * `TILE_PIXELS` units, this is the extent of the tile in\n   * projected coordinate space.\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.worldExtent_ = options.worldExtent !== undefined ?\n    options.worldExtent : null;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.axisOrientation_ = options.axisOrientation !== undefined ?\n    options.axisOrientation : 'enu';\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.global_ = options.global !== undefined ? options.global : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.canWrapX_ = !!(this.global_ && this.extent_);\n\n  /**\n   * @private\n   * @type {function(number, module:ol/coordinate~Coordinate):number|undefined}\n   */\n  this.getPointResolutionFunc_ = options.getPointResolution;\n\n  /**\n   * @private\n   * @type {module:ol/tilegrid/TileGrid}\n   */\n  this.defaultTileGrid_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.metersPerUnit_ = options.metersPerUnit;\n};\n\n\n/**\n * @return {boolean} The projection is suitable for wrapping the x-axis\n */\nProjection.prototype.canWrapX = function() {\n  return this.canWrapX_;\n};\n\n\n/**\n * Get the code for this projection, e.g. 'EPSG:4326'.\n * @return {string} Code.\n * @api\n */\nProjection.prototype.getCode = function() {\n  return this.code_;\n};\n\n\n/**\n * Get the validity extent for this projection.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nProjection.prototype.getExtent = function() {\n  return this.extent_;\n};\n\n\n/**\n * Get the units of this projection.\n * @return {module:ol/proj/Units} Units.\n * @api\n */\nProjection.prototype.getUnits = function() {\n  return this.units_;\n};\n\n\n/**\n * Get the amount of meters per unit of this projection.  If the projection is\n * not configured with `metersPerUnit` or a units identifier, the return is\n * `undefined`.\n * @return {number|undefined} Meters.\n * @api\n */\nProjection.prototype.getMetersPerUnit = function() {\n  return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n};\n\n\n/**\n * Get the world extent for this projection.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nProjection.prototype.getWorldExtent = function() {\n  return this.worldExtent_;\n};\n\n\n/**\n * Get the axis orientation of this projection.\n * Example values are:\n * enu - the default easting, northing, elevation.\n * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n *     or south orientated transverse mercator.\n * wnu - westing, northing, up - some planetary coordinate systems have\n *     \"west positive\" coordinate systems\n * @return {string} Axis orientation.\n * @api\n */\nProjection.prototype.getAxisOrientation = function() {\n  return this.axisOrientation_;\n};\n\n\n/**\n * Is this projection a global projection which spans the whole world?\n * @return {boolean} Whether the projection is global.\n * @api\n */\nProjection.prototype.isGlobal = function() {\n  return this.global_;\n};\n\n\n/**\n* Set if the projection is a global projection which spans the whole world\n* @param {boolean} global Whether the projection is global.\n* @api\n*/\nProjection.prototype.setGlobal = function(global) {\n  this.global_ = global;\n  this.canWrapX_ = !!(global && this.extent_);\n};\n\n\n/**\n * @return {module:ol/tilegrid/TileGrid} The default tile grid.\n */\nProjection.prototype.getDefaultTileGrid = function() {\n  return this.defaultTileGrid_;\n};\n\n\n/**\n * @param {module:ol/tilegrid/TileGrid} tileGrid The default tile grid.\n */\nProjection.prototype.setDefaultTileGrid = function(tileGrid) {\n  this.defaultTileGrid_ = tileGrid;\n};\n\n\n/**\n * Set the validity extent for this projection.\n * @param {module:ol/extent~Extent} extent Extent.\n * @api\n */\nProjection.prototype.setExtent = function(extent) {\n  this.extent_ = extent;\n  this.canWrapX_ = !!(this.global_ && extent);\n};\n\n\n/**\n * Set the world extent for this projection.\n * @param {module:ol/extent~Extent} worldExtent World extent\n *     [minlon, minlat, maxlon, maxlat].\n * @api\n */\nProjection.prototype.setWorldExtent = function(worldExtent) {\n  this.worldExtent_ = worldExtent;\n};\n\n\n/**\n * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n * for this projection.\n * @param {function(number, module:ol/coordinate~Coordinate):number} func Function\n * @api\n */\nProjection.prototype.setGetPointResolution = function(func) {\n  this.getPointResolutionFunc_ = func;\n};\n\n\n/**\n * Get the custom point resolution function for this projection (if set).\n * @return {function(number, module:ol/coordinate~Coordinate):number|undefined} The custom point\n * resolution function (if set).\n */\nProjection.prototype.getPointResolutionFunc = function() {\n  return this.getPointResolutionFunc_;\n};\nexport default Projection;\n","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n","export default {\n  ft: {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937}\n};\n","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'ENGINEERINGCRS':\n    case 'ENGCRS':\n    case 'FITTED_CS':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n","var D2R = 0.01745329251994329577;\nimport parser from './parser';\nimport {sExpr} from './process';\n\n\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction d2r(input) {\n  return input * D2R;\n}\n\nfunction cleanWKT(wkt) {\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert, 10;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_geodetic_datum_1949' || wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode.slice(-6) === '_ferro') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 6);\n    }\n    if (wkt.datumCode.slice(-8) === '_jakarta') {\n      wkt.datumCode = wkt.datumCode.slice(0, - 8);\n    }\n    if (~wkt.datumCode.indexOf('belge')) {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['false_easting', 'False_Easting'],\n    ['false_northing', 'False_Northing'],\n    ['central_meridian', 'Central_Meridian'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  if (!wkt.long0 && wkt.longc && (wkt.projName === 'Albers_Conic_Equal_Area' || wkt.projName === 'Lambert_Azimuthal_Equal_Area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (wkt.projName === 'Stereographic_South_Pole' || wkt.projName === 'Polar Stereographic (variant B)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n  }\n}\nexport default function(wkt) {\n  var lisp = parser(wkt);\n  var type = lisp.shift();\n  var name = lisp.shift();\n  lisp.unshift(['name', name]);\n  lisp.unshift(['type', type]);\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj;\n}\n","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\n var codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS']; \nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      return wkt(code);\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}","export default function(x) {\n  return x<0 ? -1 : 1;\n}","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n","var exports = {};\nexport {exports as default};\nexports.wgs84 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"WGS84\",\n  datumName: \"WGS84\"\n};\n\nexports.ch1903 = {\n  towgs84: \"674.374,15.056,405.346\",\n  ellipse: \"bessel\",\n  datumName: \"swiss\"\n};\n\nexports.ggrs87 = {\n  towgs84: \"-199.87,74.79,246.62\",\n  ellipse: \"GRS80\",\n  datumName: \"Greek_Geodetic_Reference_System_1987\"\n};\n\nexports.nad83 = {\n  towgs84: \"0,0,0\",\n  ellipse: \"GRS80\",\n  datumName: \"North_American_Datum_1983\"\n};\n\nexports.nad27 = {\n  nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n  ellipse: \"clrk66\",\n  datumName: \"North_American_Datum_1927\"\n};\n\nexports.potsdam = {\n  towgs84: \"606.0,23.0,413.0\",\n  ellipse: \"bessel\",\n  datumName: \"Potsdam Rauenberg 1950 DHDN\"\n};\n\nexports.carthage = {\n  towgs84: \"-263.0,6.0,431.0\",\n  ellipse: \"clark80\",\n  datumName: \"Carthage 1934 Tunisia\"\n};\n\nexports.hermannskogel = {\n  towgs84: \"653.0,-212.0,449.0\",\n  ellipse: \"bessel\",\n  datumName: \"Hermannskogel\"\n};\n\nexports.osni52 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"airy\",\n  datumName: \"Irish National\"\n};\n\nexports.ire65 = {\n  towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n  ellipse: \"mod_airy\",\n  datumName: \"Ireland 1965\"\n};\n\nexports.rassadiran = {\n  towgs84: \"-133.63,-157.5,-158.62\",\n  ellipse: \"intl\",\n  datumName: \"Rassadiran\"\n};\n\nexports.nzgd49 = {\n  towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n  ellipse: \"intl\",\n  datumName: \"New Zealand Geodetic Datum 1949\"\n};\n\nexports.osgb36 = {\n  towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n  ellipse: \"airy\",\n  datumName: \"Airy 1830\"\n};\n\nexports.s_jtsk = {\n  towgs84: \"589,76,480\",\n  ellipse: 'bessel',\n  datumName: 'S-JTSK (Ferro)'\n};\n\nexports.beduaram = {\n  towgs84: '-106,-87,188',\n  ellipse: 'clrk80',\n  datumName: 'Beduaram'\n};\n\nexports.gunung_segara = {\n  towgs84: '-403,684,41',\n  ellipse: 'bessel',\n  datumName: 'Gunung Segara Jakarta'\n};\n\nexports.rnb72 = {\n  towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n  ellipse: \"intl\",\n  datumName: \"Reseau National Belge 1972\"\n};\n","import {PJD_3PARAM, PJD_7PARAM, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback(srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback(srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = datumDef.towgs84 ? datumDef.towgs84.split(',') : null;\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calulated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n","import {PJD_3PARAM, PJD_7PARAM, PJD_NODATUM} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n\n  // Do we need to go through geocentric coordinates?\n  if (source.es === dest.es && source.a === dest.a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source.es, source.a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  return geocentricToGeodetic(point, dest.es, dest.a, dest.b);\n\n}\n","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if ((Latitude < -HALF_PI) || (Latitude > HALF_PI)) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return null;\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      t = 'x';\n    }\n    else if (i === 1) {\n      v = yin;\n      t = 'y';\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return ((source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM) && dest.datumCode !== 'WGS84') || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  }\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R\n    };\n  }\n  else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  return point;\n}\n","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords);\n    if (coords.length === 3) {\n      return [transformedArray.x, transformedArray.y, transformedArray.z];\n    }\n    else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  }\n  else {\n    out = transform(from, to, coords);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if (key === 'x' || key === 'y') {\n        return;\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  }\n  else {\n    obj = {\n      forward: function(coords) {\n        return transformer(fromProj, toProj, coords);\n      },\n      inverse: function(coords) {\n        return transformer(toProj, fromProj, coords);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;\n","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Transverse_Mercator\", \"Transverse Mercator\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (this.es === undefined || this.es <= 0) {\n    throw new Error('incorrect elliptical usage');\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"Polar_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (0.5 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {EPSLN, HALF_PI, FORTPI} from '../constants/values';\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {\n  this.no_off = this.no_off || false;\n  this.no_rot = this.no_rot || false;\n\n  if (isNaN(this.k0)) {\n    this.k0 = 1;\n  }\n  var sinlat = Math.sin(this.lat0);\n  var coslat = Math.cos(this.lat0);\n  var con = this.e * sinlat;\n\n  this.bl = Math.sqrt(1 + this.es / (1 - this.es) * Math.pow(coslat, 4));\n  this.al = this.a * this.bl * this.k0 * Math.sqrt(1 - this.es) / (1 - con * con);\n  var t0 = tsfnz(this.e, this.lat0, sinlat);\n  var dl = this.bl / coslat * Math.sqrt((1 - this.es) / (1 - con * con));\n  if (dl * dl < 1) {\n    dl = 1;\n  }\n  var fl;\n  var gl;\n  if (!isNaN(this.longc)) {\n    //Central point and azimuth method\n\n    if (this.lat0 >= 0) {\n      fl = dl + Math.sqrt(dl * dl - 1);\n    }\n    else {\n      fl = dl - Math.sqrt(dl * dl - 1);\n    }\n    this.el = fl * Math.pow(t0, this.bl);\n    gl = 0.5 * (fl - 1 / fl);\n    this.gamma0 = Math.asin(Math.sin(this.alpha) / dl);\n    this.long0 = this.longc - Math.asin(gl * Math.tan(this.gamma0)) / this.bl;\n\n  }\n  else {\n    //2 points method\n    var t1 = tsfnz(this.e, this.lat1, Math.sin(this.lat1));\n    var t2 = tsfnz(this.e, this.lat2, Math.sin(this.lat2));\n    if (this.lat0 >= 0) {\n      this.el = (dl + Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    else {\n      this.el = (dl - Math.sqrt(dl * dl - 1)) * Math.pow(t0, this.bl);\n    }\n    var hl = Math.pow(t1, this.bl);\n    var ll = Math.pow(t2, this.bl);\n    fl = this.el / hl;\n    gl = 0.5 * (fl - 1 / fl);\n    var jl = (this.el * this.el - ll * hl) / (this.el * this.el + ll * hl);\n    var pl = (ll - hl) / (ll + hl);\n    var dlon12 = adjust_lon(this.long1 - this.long2);\n    this.long0 = 0.5 * (this.long1 + this.long2) - Math.atan(jl * Math.tan(0.5 * this.bl * (dlon12)) / pl) / this.bl;\n    this.long0 = adjust_lon(this.long0);\n    var dlon10 = adjust_lon(this.long1 - this.long0);\n    this.gamma0 = Math.atan(Math.sin(this.bl * (dlon10)) / gl);\n    this.alpha = Math.asin(dl * Math.sin(this.gamma0));\n  }\n\n  if (this.no_off) {\n    this.uc = 0;\n  }\n  else {\n    if (this.lat0 >= 0) {\n      this.uc = this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n    else {\n      this.uc = -1 * this.al / this.bl * Math.atan2(Math.sqrt(dl * dl - 1), Math.cos(this.alpha));\n    }\n  }\n\n}\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var dlon = adjust_lon(lon - this.long0);\n  var us, vs;\n  var con;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    if (lat > 0) {\n      con = -1;\n    }\n    else {\n      con = 1;\n    }\n    vs = this.al / this.bl * Math.log(Math.tan(FORTPI + con * this.gamma0 * 0.5));\n    us = -1 * con * HALF_PI * this.al / this.bl;\n  }\n  else {\n    var t = tsfnz(this.e, lat, Math.sin(lat));\n    var ql = this.el / Math.pow(t, this.bl);\n    var sl = 0.5 * (ql - 1 / ql);\n    var tl = 0.5 * (ql + 1 / ql);\n    var vl = Math.sin(this.bl * (dlon));\n    var ul = (sl * Math.sin(this.gamma0) - vl * Math.cos(this.gamma0)) / tl;\n    if (Math.abs(Math.abs(ul) - 1) <= EPSLN) {\n      vs = Number.POSITIVE_INFINITY;\n    }\n    else {\n      vs = 0.5 * this.al * Math.log((1 - ul) / (1 + ul)) / this.bl;\n    }\n    if (Math.abs(Math.cos(this.bl * (dlon))) <= EPSLN) {\n      us = this.al * this.bl * (dlon);\n    }\n    else {\n      us = this.al * Math.atan2(sl * Math.cos(this.gamma0) + vl * Math.sin(this.gamma0), Math.cos(this.bl * dlon)) / this.bl;\n    }\n  }\n\n  if (this.no_rot) {\n    p.x = this.x0 + us;\n    p.y = this.y0 + vs;\n  }\n  else {\n\n    us -= this.uc;\n    p.x = this.x0 + vs * Math.cos(this.alpha) + us * Math.sin(this.alpha);\n    p.y = this.y0 + us * Math.cos(this.alpha) - vs * Math.sin(this.alpha);\n  }\n  return p;\n}\n\nexport function inverse(p) {\n  var us, vs;\n  if (this.no_rot) {\n    vs = p.y - this.y0;\n    us = p.x - this.x0;\n  }\n  else {\n    vs = (p.x - this.x0) * Math.cos(this.alpha) - (p.y - this.y0) * Math.sin(this.alpha);\n    us = (p.y - this.y0) * Math.cos(this.alpha) + (p.x - this.x0) * Math.sin(this.alpha);\n    us += this.uc;\n  }\n  var qp = Math.exp(-1 * this.bl * vs / this.al);\n  var sp = 0.5 * (qp - 1 / qp);\n  var tp = 0.5 * (qp + 1 / qp);\n  var vp = Math.sin(this.bl * us / this.al);\n  var up = (vp * Math.cos(this.gamma0) + sp * Math.sin(this.gamma0)) / tp;\n  var ts = Math.pow(this.el / Math.sqrt((1 + up) / (1 - up)), 1 / this.bl);\n  if (Math.abs(up - 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = HALF_PI;\n  }\n  else if (Math.abs(up + 1) < EPSLN) {\n    p.x = this.long0;\n    p.y = -1 * HALF_PI;\n  }\n  else {\n    p.y = phi2z(this.e, ts);\n    p.x = adjust_lon(this.long0 - Math.atan2(sp * Math.cos(this.gamma0) - vp * Math.sin(this.gamma0), Math.cos(this.bl * us / this.al)) / this.bl);\n  }\n  return p;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n\n  // array of:  r_maj,r_min,lat1,lat2,c_lon,c_lat,false_east,false_north\n  //double c_lat;                   /* center latitude                      */\n  //double c_lon;                   /* center longitude                     */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Lambert Tangential Conformal Conic Projection\", \"Lambert_Conformal_Conic\", \"Lambert_Conformal_Conic_2SP\", \"lcc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.phi0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.phi0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = 0;\n        p.y = this.phi0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po, this.cos_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi, this.cos_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c / Math.sin(c);\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      lat = Math.atan((1 - this.es * F * this.sin_p12 / Math.sin(psi)) * Math.tan(psi) / (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport version from \"./version\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = version;\nincludedProjections(proj4);\nexport default proj4;\n","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n}","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from '../geom/flat/closest.js';\nimport {deflateCoordinatesArray} from '../geom/flat/deflate.js';\nimport {inflateCoordinatesArray} from '../geom/flat/inflate.js';\nimport {interpolatePoint, lineStringsCoordinateAtM} from '../geom/flat/interpolate.js';\nimport {intersectsLineStringArray} from '../geom/flat/intersectsextent.js';\nimport {douglasPeuckerArray} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {module:ol/geom/LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return assignClosestArrayPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return lineStringsCoordinateAtM(this.flatCoordinates, 0,\n    this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<module:ol/coordinate~Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return inflateCoordinatesArray(\n    this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {module:ol/geom/LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<module:ol/geom/LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const layout = this.layout;\n  /** @type {Array.<module:ol/geom/LineString>} */\n  const lineStrings = [];\n  let offset = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  const midpoints = [];\n  const flatCoordinates = this.flatCoordinates;\n  let offset = 0;\n  const ends = this.ends_;\n  const stride = this.stride;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const midpoint = interpolatePoint(\n      flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = douglasPeuckerArray(\n    this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return intersectsLineStringArray(\n    this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<module:ol/geom/LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const ends = [];\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    const lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n","/**\n * @module ol/events/EventTarget\n */\nimport {inherits} from '../index.js';\nimport Disposable from '../Disposable.js';\nimport {unlistenAll} from '../events.js';\nimport {UNDEFINED} from '../functions.js';\nimport Event from '../events/Event.js';\n\n\n/**\n * @typedef {EventTarget|module:ol/events/EventTarget} EventTargetLike\n */\n\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * @see {@link https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget}\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n *\n * @constructor\n * @extends {module:ol/Disposable}\n */\nconst EventTarget = function() {\n\n  Disposable.call(this);\n\n  /**\n   * @private\n   * @type {!Object.<string, number>}\n   */\n  this.pendingRemovals_ = {};\n\n  /**\n   * @private\n   * @type {!Object.<string, number>}\n   */\n  this.dispatching_ = {};\n\n  /**\n   * @private\n   * @type {!Object.<string, Array.<module:ol/events~ListenerFunction>>}\n   */\n  this.listeners_ = {};\n\n};\n\ninherits(EventTarget, Disposable);\n\n\n/**\n * @param {string} type Type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n */\nEventTarget.prototype.addEventListener = function(type, listener) {\n  let listeners = this.listeners_[type];\n  if (!listeners) {\n    listeners = this.listeners_[type] = [];\n  }\n  if (listeners.indexOf(listener) === -1) {\n    listeners.push(listener);\n  }\n};\n\n\n/**\n * @param {{type: string,\n *     target: (EventTarget|module:ol/events/EventTarget|undefined)}|module:ol/events/Event|\n *     string} event Event or event type.\n * @return {boolean|undefined} `false` if anyone called preventDefault on the\n *     event object or if any of the listeners returned false.\n */\nEventTarget.prototype.dispatchEvent = function(event) {\n  const evt = typeof event === 'string' ? new Event(event) : event;\n  const type = evt.type;\n  evt.target = this;\n  const listeners = this.listeners_[type];\n  let propagate;\n  if (listeners) {\n    if (!(type in this.dispatching_)) {\n      this.dispatching_[type] = 0;\n      this.pendingRemovals_[type] = 0;\n    }\n    ++this.dispatching_[type];\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    --this.dispatching_[type];\n    if (this.dispatching_[type] === 0) {\n      let pendingRemovals = this.pendingRemovals_[type];\n      delete this.pendingRemovals_[type];\n      while (pendingRemovals--) {\n        this.removeEventListener(type, UNDEFINED);\n      }\n      delete this.dispatching_[type];\n    }\n    return propagate;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nEventTarget.prototype.disposeInternal = function() {\n  unlistenAll(this);\n};\n\n\n/**\n * Get the listeners for a specified event type. Listeners are returned in the\n * order that they will be called in.\n *\n * @param {string} type Type.\n * @return {Array.<module:ol/events~ListenerFunction>} Listeners.\n */\nEventTarget.prototype.getListeners = function(type) {\n  return this.listeners_[type];\n};\n\n\n/**\n * @param {string=} opt_type Type. If not provided,\n *     `true` will be returned if this EventTarget has any listeners.\n * @return {boolean} Has listeners.\n */\nEventTarget.prototype.hasListener = function(opt_type) {\n  return opt_type ?\n    opt_type in this.listeners_ :\n    Object.keys(this.listeners_).length > 0;\n};\n\n\n/**\n * @param {string} type Type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n */\nEventTarget.prototype.removeEventListener = function(type, listener) {\n  const listeners = this.listeners_[type];\n  if (listeners) {\n    const index = listeners.indexOf(listener);\n    if (type in this.pendingRemovals_) {\n      // make listener a no-op, and remove later in #dispatchEvent()\n      listeners[index] = UNDEFINED;\n      ++this.pendingRemovals_[type];\n    } else {\n      listeners.splice(index, 1);\n      if (listeners.length === 0) {\n        delete this.listeners_[type];\n      }\n    }\n  }\n};\nexport default EventTarget;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {module:ol/geom/Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  const multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const squaredDistance = squaredDx(\n      x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (let j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return inflateCoordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {module:ol/geom/Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  const n = !this.flatCoordinates ? 0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<module:ol/geom/Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const layout = this.layout;\n  const stride = this.stride;\n  /** @type {Array.<module:ol/geom/Point>} */\n  const points = [];\n  for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const x = flatCoordinates[i];\n    const y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n","/**\n * @module ol/source/TileWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport {buffer, createEmpty} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform, transformExtent} from '../proj.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {toSize, buffer as bufferSize, scale as scaleSize} from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\nimport {compareVersions} from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {Object.<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {number} [gutter=0]\n * The size in pixels of the gutter around image tiles to ignore. By setting\n * this property to a non-zero value, images will be requested that are wider\n * and taller than the tile size by a value of `2 x gutter`.\n * Using a non-zero value allows artifacts of rendering at tile edges to be\n * ignored. If you control the WMS service it is recommended to address\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\n * this. See http://mapserver.org/output/tile_mode.html.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {boolean} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/ImageTile~TileClass} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~TileClass}.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used..\n * @property {module:ol/source/WMSServerType|string} [serverType]\n * The type of the remote WMS server. Currently only used when `hidpi` is\n * `true`.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] WMS service URL.\n * @property {Array.<string>} [urls] WMS service urls.\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When `true`, tiles will be requested for one world only,\n * but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n *\n * @constructor\n * @extends {module:ol/source/TileImage}\n * @param {module:ol/source/TileWMS~Options=} [opt_options] Tile WMS options.\n * @api\n */\nconst TileWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const params = options.params || {};\n\n  const transparent = 'TRANSPARENT' in params ? params['TRANSPARENT'] : true;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: !transparent,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = params;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n\n  /**\n   * @private\n   * @type {module:ol/source/WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {module:ol/source/WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.tmpExtent_ = createEmpty();\n\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n\n};\n\ninherits(TileWMS, TileImage);\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {module:ol/proj~ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nTileWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projectionObj);\n  }\n\n  const tileCoord = tileGrid.getTileCoordForCoordAndResolution(coordinate, resolution);\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  let tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = toSize(tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    tileResolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, tileResolution);\n    tileExtent = transformExtent(tileExtent, projectionObj, sourceProjectionObj);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - tileExtent[0]) / tileResolution);\n  const y = Math.floor((tileExtent[3] - coordinate[1]) / tileResolution);\n\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getGutterInternal = function() {\n  return this.gutter_;\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nTileWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/size~Size} tileSize Tile size.\n * @param {module:ol/extent~Extent} tileExtent Tile extent.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string|undefined} Request URL.\n * @private\n */\nTileWMS.prototype.getRequestUrl_ = function(tileCoord, tileSize, tileExtent,\n  pixelRatio, projection, params) {\n\n  const urls = this.urls;\n  if (!urls) {\n    return undefined;\n  }\n\n  params['WIDTH'] = tileSize[0];\n  params['HEIGHT'] = tileSize[1];\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 52); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  const axisOrientation = projection.getAxisOrientation();\n  const bbox = tileExtent;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    let tmp;\n    tmp = tileExtent[0];\n    bbox[0] = tileExtent[1];\n    bbox[1] = tmp;\n    tmp = tileExtent[2];\n    bbox[2] = tileExtent[3];\n    bbox[3] = tmp;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  let url;\n  if (urls.length == 1) {\n    url = urls[0];\n  } else {\n    const index = modulo(tileCoordHash(tileCoord), urls.length);\n    url = urls[index];\n  }\n  return appendParams(url, params);\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.getTilePixelRatio = function(pixelRatio) {\n  return (!this.hidpi_ || this.serverType_ === undefined) ? 1 :\n  /** @type {number} */ (pixelRatio);\n};\n\n\n/**\n * @private\n * @return {string} The key for the current params.\n */\nTileWMS.prototype.getKeyForParams_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.params_) {\n    res[i++] = key + '-' + this.params_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * @inheritDoc\n */\nTileWMS.prototype.fixedTileUrlFunction = function(tileCoord, pixelRatio, projection) {\n\n  let tileGrid = this.getTileGrid();\n  if (!tileGrid) {\n    tileGrid = this.getTileGridForProjection(projection);\n  }\n\n  if (tileGrid.getResolutions().length <= tileCoord[0]) {\n    return undefined;\n  }\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n  let tileSize = toSize(\n    tileGrid.getTileSize(tileCoord[0]), this.tmpSize);\n\n  const gutter = this.gutter_;\n  if (gutter !== 0) {\n    tileSize = bufferSize(tileSize, gutter, this.tmpSize);\n    tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n  }\n\n  if (pixelRatio != 1) {\n    tileSize = scaleSize(tileSize, pixelRatio, this.tmpSize);\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(baseParams, this.params_);\n\n  return this.getRequestUrl_(tileCoord, tileSize, tileExtent,\n    pixelRatio, projection, baseParams);\n};\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nTileWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.setKey(this.getKeyForParams_());\n};\n\n\n/**\n * @private\n */\nTileWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = compareVersions(version, '1.3') >= 0;\n};\nexport default TileWMS;\n","/**\n * @module ol/style/Style\n */\n\n/**\n * Feature styles.\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n */\nimport {assert} from '../asserts.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport CircleStyle from '../style/Circle.js';\nimport Fill from '../style/Fill.js';\nimport Stroke from '../style/Stroke.js';\n\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled.\n *\n * @typedef {function((module:ol/Feature|module:ol/render/Feature), number):\n *     (module:ol/style/Style|Array.<module:ol/style/Style>)} StyleFunction\n */\n\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function((module:ol/Feature|module:ol/render/Feature)):\n *     (module:ol/geom/Geometry|module:ol/render/Feature|undefined)} GeometryFunction\n */\n\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((module:ol/coordinate~Coordinate|Array<module:ol/coordinate~Coordinate>|Array.<Array.<module:ol/coordinate~Coordinate>>),module:ol/render~State)}\n * RenderFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {module:ol/style/Fill} [fill] Fill style.\n * @property {module:ol/style/Image} [image] Image style.\n * @property {module:ol/style/Style~RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {module:ol/style/Text} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * @constructor\n * @struct\n * @param {module:ol/style/Style~Options=} opt_options Style options.\n * @api\n */\nconst Style = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction}\n   */\n  this.geometry_ = null;\n\n  /**\n   * @private\n   * @type {!module:ol/style/Style~GeometryFunction}\n   */\n  this.geometryFunction_ = defaultGeometryFunction;\n\n  if (options.geometry !== undefined) {\n    this.setGeometry(options.geometry);\n  }\n\n  /**\n   * @private\n   * @type {module:ol/style/Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill : null;\n\n  /**\n     * @private\n     * @type {module:ol/style/Image}\n     */\n  this.image_ = options.image !== undefined ? options.image : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Style~RenderFunction|null}\n   */\n  this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Text}\n   */\n  this.text_ = options.text !== undefined ? options.text : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zIndex_ = options.zIndex;\n\n};\n\n\n/**\n * Clones the style.\n * @return {module:ol/style/Style} The cloned style.\n * @api\n */\nStyle.prototype.clone = function() {\n  let geometry = this.getGeometry();\n  if (geometry && geometry.clone) {\n    geometry = geometry.clone();\n  }\n  return new Style({\n    geometry: geometry,\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    image: this.getImage() ? this.getImage().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    text: this.getText() ? this.getText().clone() : undefined,\n    zIndex: this.getZIndex()\n  });\n};\n\n\n/**\n * Get the custom renderer function that was configured with\n * {@link #setRenderer} or the `renderer` constructor option.\n * @return {module:ol/style/Style~RenderFunction|null} Custom renderer function.\n * @api\n */\nStyle.prototype.getRenderer = function() {\n  return this.renderer_;\n};\n\n\n/**\n * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n * and `image` options of the style will be ignored.\n * @param {module:ol/style/Style~RenderFunction|null} renderer Custom renderer function.\n * @api\n */\nStyle.prototype.setRenderer = function(renderer) {\n  this.renderer_ = renderer;\n};\n\n\n/**\n * Get the geometry to be rendered.\n * @return {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction}\n * Feature property or geometry or function that returns the geometry that will\n * be rendered with this style.\n * @api\n */\nStyle.prototype.getGeometry = function() {\n  return this.geometry_;\n};\n\n\n/**\n * Get the function used to generate a geometry for rendering.\n * @return {!module:ol/style/Style~GeometryFunction} Function that is called with a feature\n * and returns the geometry to render instead of the feature's geometry.\n * @api\n */\nStyle.prototype.getGeometryFunction = function() {\n  return this.geometryFunction_;\n};\n\n\n/**\n * Get the fill style.\n * @return {module:ol/style/Fill} Fill style.\n * @api\n */\nStyle.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Set the fill style.\n * @param {module:ol/style/Fill} fill Fill style.\n * @api\n */\nStyle.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Get the image style.\n * @return {module:ol/style/Image} Image style.\n * @api\n */\nStyle.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Set the image style.\n * @param {module:ol/style/Image} image Image style.\n * @api\n */\nStyle.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Get the stroke style.\n * @return {module:ol/style/Stroke} Stroke style.\n * @api\n */\nStyle.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Set the stroke style.\n * @param {module:ol/style/Stroke} stroke Stroke style.\n * @api\n */\nStyle.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Get the text style.\n * @return {module:ol/style/Text} Text style.\n * @api\n */\nStyle.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Set the text style.\n * @param {module:ol/style/Text} text Text style.\n * @api\n */\nStyle.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Get the z-index for the style.\n * @return {number|undefined} ZIndex.\n * @api\n */\nStyle.prototype.getZIndex = function() {\n  return this.zIndex_;\n};\n\n\n/**\n * Set a geometry that is rendered instead of the feature's geometry.\n *\n * @param {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction} geometry\n *     Feature property or geometry or function returning a geometry to render\n *     for this style.\n * @api\n */\nStyle.prototype.setGeometry = function(geometry) {\n  if (typeof geometry === 'function') {\n    this.geometryFunction_ = geometry;\n  } else if (typeof geometry === 'string') {\n    this.geometryFunction_ = function(feature) {\n      return (\n        /** @type {module:ol/geom/Geometry} */ (feature.get(geometry))\n      );\n    };\n  } else if (!geometry) {\n    this.geometryFunction_ = defaultGeometryFunction;\n  } else if (geometry !== undefined) {\n    this.geometryFunction_ = function() {\n      return (\n        /** @type {module:ol/geom/Geometry} */ (geometry)\n      );\n    };\n  }\n  this.geometry_ = geometry;\n};\n\n\n/**\n * Set the z-index.\n *\n * @param {number|undefined} zIndex ZIndex.\n * @api\n */\nStyle.prototype.setZIndex = function(zIndex) {\n  this.zIndex_ = zIndex;\n};\n\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of module:ol/style/Style or single style objects wrapped in a\n * new style function.\n * @param {module:ol/style/Style~StyleFunction|Array.<module:ol/style/Style>|module:ol/style/Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {module:ol/style/Style~StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array.<module:ol/style/Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(obj instanceof Style,\n        41); // Expected an `module:ol/style/Style~Style` or an array of `module:ol/style/Style~Style`\n      styles = [obj];\n    }\n    styleFunction = function() {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n\n/**\n * @type {Array.<module:ol/style/Style>}\n */\nlet defaultStyles = null;\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<module:ol/style/Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (module:ol/style/Circle~CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)'\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5\n        }),\n        fill: fill,\n        stroke: stroke\n      })\n    ];\n  }\n  return defaultStyles;\n}\n\n\n/**\n * Default styles for editing features.\n * @return {Object.<module:ol/geom/GeometryType, Array.<module:ol/style/Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object.<module:ol/geom/GeometryType, Array.<module:ol/style/Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5]\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_POLYGON] =\n      styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2\n      })\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] =\n      styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING]\n      );\n\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2\n        })\n      }),\n      zIndex: Infinity\n    })\n  ];\n  styles[GeometryType.MULTI_POINT] =\n      styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING],\n        styles[GeometryType.POINT]\n      );\n\n  return styles;\n}\n\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature to get the geometry for.\n * @return {module:ol/geom/Geometry|module:ol/render/Feature|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/Tile\n */\nimport {inherits} from './index.js';\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventTarget from './events/EventTarget.js';\nimport EventType from './events/EventType.js';\n\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments.\n *\n * @typedef {function(module:ol/Tile, string)} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(module:ol/tilecoord~TileCoord, number,\n *           module:ol/proj/Projection): (string|undefined)} UrlFunction\n * @api\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/events/EventTarget}\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/TileState} state State.\n * @param {module:ol/Tile~Options=} opt_options Tile options.\n */\nconst Tile = function(tileCoord, state, opt_options) {\n  EventTarget.call(this);\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {module:ol/tilecoord~TileCoord}\n   */\n  this.tileCoord = tileCoord;\n\n  /**\n   * @protected\n   * @type {module:ol/TileState}\n   */\n  this.state = state;\n\n  /**\n   * An \"interim\" tile for this tile. The interim tile may be used while this\n   * one is loading, for \"smooth\" transitions when changing params/dimensions\n   * on the source.\n   * @type {module:ol/Tile}\n   */\n  this.interimTile = null;\n\n  /**\n   * A key assigned to the tile. This is used by the tile source to determine\n   * if this tile can effectively be used, or if a new tile should be created\n   * and this one be used as an interim tile for this new tile.\n   * @type {string}\n   */\n  this.key = '';\n\n  /**\n   * The duration for the opacity transition.\n   * @type {number}\n   */\n  this.transition_ = options.transition === undefined ? 250 : options.transition;\n\n  /**\n   * Lookup of start times for rendering transitions.  If the start time is\n   * equal to -1, the transition is complete.\n   * @type {Object.<number, number>}\n   */\n  this.transitionStarts_ = {};\n\n};\n\ninherits(Tile, EventTarget);\n\n\n/**\n * @protected\n */\nTile.prototype.changed = function() {\n  this.dispatchEvent(EventType.CHANGE);\n};\n\n\n/**\n * @return {string} Key.\n */\nTile.prototype.getKey = function() {\n  return this.key + '/' + this.tileCoord;\n};\n\n/**\n * Get the interim tile most suitable for rendering using the chain of interim\n * tiles. This corresponds to the  most recent tile that has been loaded, if no\n * such tile exists, the original tile is returned.\n * @return {!module:ol/Tile} Best tile for rendering.\n */\nTile.prototype.getInterimTile = function() {\n  if (!this.interimTile) {\n    //empty chain\n    return this;\n  }\n  let tile = this.interimTile;\n\n  // find the first loaded tile and return it. Since the chain is sorted in\n  // decreasing order of creation time, there is no need to search the remainder\n  // of the list (all those tiles correspond to older requests and will be\n  // cleaned up by refreshInterimChain)\n  do {\n    if (tile.getState() == TileState.LOADED) {\n      return tile;\n    }\n    tile = tile.interimTile;\n  } while (tile);\n\n  // we can not find a better tile\n  return this;\n};\n\n/**\n * Goes through the chain of interim tiles and discards sections of the chain\n * that are no longer relevant.\n */\nTile.prototype.refreshInterimChain = function() {\n  if (!this.interimTile) {\n    return;\n  }\n\n  let tile = this.interimTile;\n  let prev = this;\n\n  do {\n    if (tile.getState() == TileState.LOADED) {\n      //we have a loaded tile, we can discard the rest of the list\n      //we would could abort any LOADING tile request\n      //older than this tile (i.e. any LOADING tile following this entry in the chain)\n      tile.interimTile = null;\n      break;\n    } else if (tile.getState() == TileState.LOADING) {\n      //keep this LOADING tile any loaded tiles later in the chain are\n      //older than this tile, so we're still interested in the request\n      prev = tile;\n    } else if (tile.getState() == TileState.IDLE) {\n      //the head of the list is the most current tile, we don't need\n      //to start any other requests for this chain\n      prev.interimTile = tile.interimTile;\n    } else {\n      prev = tile;\n    }\n    tile = prev.interimTile;\n  } while (tile);\n};\n\n/**\n * Get the tile coordinate for this tile.\n * @return {module:ol/tilecoord~TileCoord} The tile coordinate.\n * @api\n */\nTile.prototype.getTileCoord = function() {\n  return this.tileCoord;\n};\n\n\n/**\n * @return {module:ol/TileState} State.\n */\nTile.prototype.getState = function() {\n  return this.state;\n};\n\n/**\n * @param {module:ol/TileState} state State.\n */\nTile.prototype.setState = function(state) {\n  this.state = state;\n  this.changed();\n};\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @abstract\n * @api\n */\nTile.prototype.load = function() {};\n\n/**\n * Get the alpha value for rendering.\n * @param {number} id An id for the renderer.\n * @param {number} time The render frame time.\n * @return {number} A number between 0 and 1.\n */\nTile.prototype.getAlpha = function(id, time) {\n  if (!this.transition_) {\n    return 1;\n  }\n\n  let start = this.transitionStarts_[id];\n  if (!start) {\n    start = time;\n    this.transitionStarts_[id] = start;\n  } else if (start === -1) {\n    return 1;\n  }\n\n  const delta = time - start + (1000 / 60); // avoid rendering at 0\n  if (delta >= this.transition_) {\n    return 1;\n  }\n  return easeIn(delta / this.transition_);\n};\n\n/**\n * Determine if a tile is in an alpha transition.  A tile is considered in\n * transition if tile.getAlpha() has not yet been called or has been called\n * and returned 1.\n * @param {number} id An id for the renderer.\n * @return {boolean} The tile is in transition.\n */\nTile.prototype.inTransition = function(id) {\n  if (!this.transition_) {\n    return false;\n  }\n  return this.transitionStarts_[id] !== -1;\n};\n\n/**\n * Mark a transition as complete.\n * @param {number} id An id for the renderer.\n */\nTile.prototype.endTransition = function(id) {\n  if (this.transition_) {\n    this.transitionStarts_[id] = -1;\n  }\n};\nexport default Tile;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  SOURCE: 'source'\n};\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array.<number>} Color\n * @api\n */\n\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n\n\n/**\n * Return the color as an rgba string.\n * @param {module:ol/color~Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {string} s String.\n * @return {module:ol/color~Color} Color.\n */\nexport const fromString = (\n  function() {\n\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n\n    /**\n     * @const\n     * @type {number}\n     */\n    const MAX_CACHE_SIZE = 1024;\n\n    /**\n     * @type {Object.<string, module:ol/color~Color>}\n     */\n    const cache = {};\n\n    /**\n     * @type {number}\n     */\n    let cacheSize = 0;\n\n    return (\n      /**\n       * @param {string} s String.\n       * @return {module:ol/color~Color} Color.\n       */\n      function(s) {\n        let color;\n        if (cache.hasOwnProperty(s)) {\n          color = cache[s];\n        } else {\n          if (cacheSize >= MAX_CACHE_SIZE) {\n            let i = 0;\n            for (const key in cache) {\n              if ((i++ & 3) === 0) {\n                delete cache[key];\n                --cacheSize;\n              }\n            }\n          }\n          color = fromStringInternal_(s);\n          cache[s] = color;\n          ++cacheSize;\n        }\n        return color;\n      }\n    );\n\n  })();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {module:ol/color~Color|string} color Color.\n * @return {module:ol/color~Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(/** @type {string} */ (color));\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {module:ol/color~Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) { // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) { // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) { // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return (\n    /** @type {module:ol/color~Color} */ (color)\n  );\n}\n\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {module:ol/color~Color} color Color.\n * @return {module:ol/color~Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n\n/**\n * @param {module:ol/color~Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#render\n   * @api\n   */\n  RENDER: 'render'\n};\n","/**\n * @module ol/render/replay\n */\nimport ReplayType from '../render/ReplayType.js';\n\n\n/**\n * @const\n * @type {Array.<module:ol/render/ReplayType>}\n */\nexport const ORDER = [\n  ReplayType.POLYGON,\n  ReplayType.CIRCLE,\n  ReplayType.LINE_STRING,\n  ReplayType.IMAGE,\n  ReplayType.TEXT,\n  ReplayType.DEFAULT\n];\n\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {};\nTEXT_ALIGN['left'] = 0;\nTEXT_ALIGN['end'] = 0;\nTEXT_ALIGN['center'] = 0.5;\nTEXT_ALIGN['right'] = 1;\nTEXT_ALIGN['start'] = 1;\nTEXT_ALIGN['top'] = 0;\nTEXT_ALIGN['middle'] = 0.5;\nTEXT_ALIGN['hanging'] = 0.2;\nTEXT_ALIGN['alphabetic'] = 0.8;\nTEXT_ALIGN['ideographic'] = 0.8;\nTEXT_ALIGN['bottom'] = 1;\n","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation'\n};\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {linearRingss as linearRingssArea} from '../geom/flat/area.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta} from '../geom/flat/closest.js';\nimport {linearRingssContainsXY} from '../geom/flat/contains.js';\nimport {deflateMultiCoordinatesArray} from '../geom/flat/deflate.js';\nimport {inflateMultiCoordinatesArray} from '../geom/flat/inflate.js';\nimport {getInteriorPointsOfMultiArray} from '../geom/flat/interiorpoint.js';\nimport {intersectsLinearRingMultiArray} from '../geom/flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRingsArray} from '../geom/flat/orient.js';\nimport {quantizeMultiArray} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {module:ol/geom/Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  let ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    const offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  const multiPolygon = new MultiPolygon(null);\n\n  const len = this.endss_.length;\n  const newEndss = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(\n      this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return assignClosestMultiArrayPoint(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    orientLinearRingsArray(\n      flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return inflateMultiCoordinatesArray(\n    flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    const flatCenters = linearRingssCenter(\n      this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n * @return {module:ol/geom/MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  const interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n    this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (linearRingsAreOriented(\n      flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          orientLinearRingsArray(\n            this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = quantizeMultiArray(\n    this.flatCoordinates, 0, this.endss_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEndss);\n  const simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {module:ol/geom/Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  let offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    const prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  const ends = this.endss_[index].slice();\n  const end = ends[ends.length - 1];\n  if (offset !== 0) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<module:ol/geom/Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const endss = this.endss_;\n  const polygons = [];\n  let offset = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n      layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return intersectsLinearRingMultiArray(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<module:ol/geom/Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const endss = [];\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    const offset = flatCoordinates.length;\n    const ends = polygon.getEnds();\n    for (let j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\n\nexport default MultiPolygon;\n","/**\n * @module ol/geom/Geometry\n */\nimport {inherits} from '../index.js';\nimport BaseObject from '../Object.js';\nimport {createEmpty, getHeight, returnOrUpdate} from '../extent.js';\nimport {FALSE} from '../functions.js';\nimport {transform2D} from '../geom/flat/transform.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport Units from '../proj/Units.js';\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/Object}\n * @api\n */\nconst Geometry = function() {\n\n  BaseObject.call(this);\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent_ = createEmpty();\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.extentRevision_ = -1;\n\n  /**\n   * @protected\n   * @type {Object.<string, module:ol/geom/Geometry>}\n   */\n  this.simplifiedGeometryCache = {};\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.simplifiedGeometryRevision = 0;\n\n};\n\ninherits(Geometry, BaseObject);\n\n\n/**\n * @type {module:ol/transform~Transform}\n */\nconst tmpTransform = createTransform();\n\n\n/**\n * Make a complete copy of the geometry.\n * @abstract\n * @return {!module:ol/geom/Geometry} Clone.\n */\nGeometry.prototype.clone = function() {};\n\n\n/**\n * @abstract\n * @param {number} x X.\n * @param {number} y Y.\n * @param {module:ol/coordinate~Coordinate} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @return {number} Minimum squared distance.\n */\nGeometry.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {};\n\n\n/**\n * Return the closest point of the geometry to the passed point as\n * {@link module:ol/coordinate~Coordinate coordinate}.\n * @param {module:ol/coordinate~Coordinate} point Point.\n * @param {module:ol/coordinate~Coordinate=} opt_closestPoint Closest point.\n * @return {module:ol/coordinate~Coordinate} Closest point.\n * @api\n */\nGeometry.prototype.getClosestPoint = function(point, opt_closestPoint) {\n  const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n  this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n  return closestPoint;\n};\n\n\n/**\n * Returns true if this geometry includes the specified coordinate. If the\n * coordinate is on the boundary of the geometry, returns false.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @return {boolean} Contains coordinate.\n * @api\n */\nGeometry.prototype.intersectsCoordinate = function(coordinate) {\n  return this.containsXY(coordinate[0], coordinate[1]);\n};\n\n\n/**\n * @abstract\n * @param {module:ol/extent~Extent} extent Extent.\n * @protected\n * @return {module:ol/extent~Extent} extent Extent.\n */\nGeometry.prototype.computeExtent = function(extent) {};\n\n\n/**\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nGeometry.prototype.containsXY = FALSE;\n\n\n/**\n * Get the extent of the geometry.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} extent Extent.\n * @api\n */\nGeometry.prototype.getExtent = function(opt_extent) {\n  if (this.extentRevision_ != this.getRevision()) {\n    this.extent_ = this.computeExtent(this.extent_);\n    this.extentRevision_ = this.getRevision();\n  }\n  return returnOrUpdate(this.extent_, opt_extent);\n};\n\n\n/**\n * Rotate the geometry around a given coordinate. This modifies the geometry\n * coordinates in place.\n * @abstract\n * @param {number} angle Rotation angle in radians.\n * @param {module:ol/coordinate~Coordinate} anchor The rotation center.\n * @api\n */\nGeometry.prototype.rotate = function(angle, anchor) {};\n\n\n/**\n * Scale the geometry (with an optional origin).  This modifies the geometry\n * coordinates in place.\n * @abstract\n * @param {number} sx The scaling factor in the x-direction.\n * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n *     sx).\n * @param {module:ol/coordinate~Coordinate=} opt_anchor The scale origin (defaults to the center\n *     of the geometry extent).\n * @api\n */\nGeometry.prototype.scale = function(sx, opt_sy, opt_anchor) {};\n\n\n/**\n * Create a simplified version of this geometry.  For linestrings, this uses\n * the the {@link\n * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n * Douglas Peucker} algorithm.  For polygons, a quantization-based\n * simplification is used to preserve topology.\n * @function\n * @param {number} tolerance The tolerance distance for simplification.\n * @return {module:ol/geom/Geometry} A new, simplified version of the original\n *     geometry.\n * @api\n */\nGeometry.prototype.simplify = function(tolerance) {\n  return this.getSimplifiedGeometry(tolerance * tolerance);\n};\n\n\n/**\n * Create a simplified version of this geometry using the Douglas Peucker\n * algorithm.\n * @see https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n * @abstract\n * @param {number} squaredTolerance Squared tolerance.\n * @return {module:ol/geom/Geometry} Simplified geometry.\n */\nGeometry.prototype.getSimplifiedGeometry = function(squaredTolerance) {};\n\n\n/**\n * Get the type of this geometry.\n * @abstract\n * @return {module:ol/geom/GeometryType} Geometry type.\n */\nGeometry.prototype.getType = function() {};\n\n\n/**\n * Apply a transform function to each coordinate of the geometry.\n * The geometry is modified in place.\n * If you do not want the geometry modified in place, first `clone()` it and\n * then use this function on the clone.\n * @abstract\n * @param {module:ol/proj~TransformFunction} transformFn Transform.\n */\nGeometry.prototype.applyTransform = function(transformFn) {};\n\n\n/**\n * Test if the geometry and the passed extent intersect.\n * @abstract\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} `true` if the geometry and the extent intersect.\n */\nGeometry.prototype.intersectsExtent = function(extent) {};\n\n\n/**\n * Translate the geometry.  This modifies the geometry coordinates in place.  If\n * instead you want a new geometry, first `clone()` this geometry.\n * @abstract\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n */\nGeometry.prototype.translate = function(deltaX, deltaY) {};\n\n\n/**\n * Transform each coordinate of the geometry from one coordinate reference\n * system to another. The geometry is modified in place.\n * For example, a line will be transformed to a line and a circle to a circle.\n * If you do not want the geometry modified in place, first `clone()` it and\n * then use this function on the clone.\n *\n * @param {module:ol/proj~ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {module:ol/proj~ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {module:ol/geom/Geometry} This geometry.  Note that original geometry is\n *     modified in place.\n * @api\n */\nGeometry.prototype.transform = function(source, destination) {\n  source = getProjection(source);\n  const transformFn = source.getUnits() == Units.TILE_PIXELS ?\n    function(inCoordinates, outCoordinates, stride) {\n      const pixelExtent = source.getExtent();\n      const projectedExtent = source.getWorldExtent();\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(tmpTransform,\n        projectedExtent[0], projectedExtent[3],\n        scale, -scale, 0,\n        0, 0);\n      transform2D(inCoordinates, 0, inCoordinates.length, stride,\n        tmpTransform, outCoordinates);\n      return getTransform(source, destination)(inCoordinates, outCoordinates, stride);\n    } :\n    getTransform(source, destination);\n  this.applyTransform(transformFn);\n  return this;\n};\nexport default Geometry;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n\n/**\n * @param {string} template Template.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {module:ol/tilecoord~TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template.replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, function() {\n            const y = -tileCoord[2] - 1;\n            return y.toString();\n          })\n          .replace(dashYRegEx, function() {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() + tileCoord[2];\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n\n/**\n * @param {Array.<string>} templates Templates.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n\n/**\n * @param {Array.<module:ol/Tile~UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {module:ol/tilecoord~TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n\n/**\n * @param {string} url URL.\n * @return {Array.<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16\n};\n","/**\n * @module ol/source/Stamen\n */\nimport {inherits} from '../index.js';\nimport {ATTRIBUTION as OSM_ATTRIBUTION} from '../source/OSM.js';\nimport XYZ from '../source/XYZ.js';\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst ATTRIBUTIONS = [\n  'Map tiles by <a href=\"https://stamen.com/\">Stamen Design</a>, ' +\n        'under <a href=\"https://creativecommons.org/licenses/by/3.0/\">CC BY' +\n        ' 3.0</a>.',\n  OSM_ATTRIBUTION\n];\n\n\n/**\n * @type {Object.<string, {extension: string, opaque: boolean}>}\n */\nconst LayerConfig = {\n  'terrain': {\n    extension: 'jpg',\n    opaque: true\n  },\n  'terrain-background': {\n    extension: 'jpg',\n    opaque: true\n  },\n  'terrain-labels': {\n    extension: 'png',\n    opaque: false\n  },\n  'terrain-lines': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-background': {\n    extension: 'png',\n    opaque: true\n  },\n  'toner': {\n    extension: 'png',\n    opaque: true\n  },\n  'toner-hybrid': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-labels': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-lines': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-lite': {\n    extension: 'png',\n    opaque: true\n  },\n  'watercolor': {\n    extension: 'jpg',\n    opaque: true\n  }\n};\n\n\n/**\n * @type {Object.<string, {minZoom: number, maxZoom: number}>}\n */\nconst ProviderConfig = {\n  'terrain': {\n    minZoom: 4,\n    maxZoom: 18\n  },\n  'toner': {\n    minZoom: 0,\n    maxZoom: 20\n  },\n  'watercolor': {\n    minZoom: 1,\n    maxZoom: 16\n  }\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=2048] Cache size.\n * @property {string} [layer] Layer.\n * @property {number} [minZoom] Minimum zoom.\n * @property {number} [maxZoom] Maximum zoom.\n * @property {boolean} [opaque] Whether the layer is opaque.\n * @property {boolean} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source for the Stamen tile server.\n *\n * @constructor\n * @extends {module:ol/source/XYZ}\n * @param {module:ol/source/Stamen~Options=} options Stamen options.\n * @api\n */\nconst Stamen = function(options) {\n  const i = options.layer.indexOf('-');\n  const provider = i == -1 ? options.layer : options.layer.slice(0, i);\n  const providerConfig = ProviderConfig[provider];\n\n  const layerConfig = LayerConfig[options.layer];\n\n  const url = options.url !== undefined ? options.url :\n    'https://stamen-tiles-{a-d}.a.ssl.fastly.net/' + options.layer +\n      '/{z}/{x}/{y}.' + layerConfig.extension;\n\n  XYZ.call(this, {\n    attributions: ATTRIBUTIONS,\n    cacheSize: options.cacheSize,\n    crossOrigin: 'anonymous',\n    maxZoom: options.maxZoom != undefined ? options.maxZoom : providerConfig.maxZoom,\n    minZoom: options.minZoom != undefined ? options.minZoom : providerConfig.minZoom,\n    opaque: layerConfig.opaque,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n};\n\ninherits(Stamen, XYZ);\n\nexport default Stamen;\n","/**\n * @module ol/style/Stroke\n */\nimport {getUid} from '../index.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/color~Color|module:ol/colorlike~ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {string} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {string} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array.<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n *\n * @constructor\n * @param {module:ol/style/Stroke~Options=} opt_options Options.\n * @api\n */\nconst Stroke = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {module:ol/color~Color|module:ol/colorlike~ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineCap_ = options.lineCap;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lineDashOffset_ = options.lineDashOffset;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineJoin_ = options.lineJoin;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.miterLimit_ = options.miterLimit;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.width_ = options.width;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Clones the style.\n * @return {module:ol/style/Stroke} The cloned style.\n * @api\n */\nStroke.prototype.clone = function() {\n  const color = this.getColor();\n  return new Stroke({\n    color: (color && color.slice) ? color.slice() : color || undefined,\n    lineCap: this.getLineCap(),\n    lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n    lineDashOffset: this.getLineDashOffset(),\n    lineJoin: this.getLineJoin(),\n    miterLimit: this.getMiterLimit(),\n    width: this.getWidth()\n  });\n};\n\n\n/**\n * Get the stroke color.\n * @return {module:ol/color~Color|module:ol/colorlike~ColorLike} Color.\n * @api\n */\nStroke.prototype.getColor = function() {\n  return this.color_;\n};\n\n\n/**\n * Get the line cap type for the stroke.\n * @return {string|undefined} Line cap.\n * @api\n */\nStroke.prototype.getLineCap = function() {\n  return this.lineCap_;\n};\n\n\n/**\n * Get the line dash style for the stroke.\n * @return {Array.<number>} Line dash.\n * @api\n */\nStroke.prototype.getLineDash = function() {\n  return this.lineDash_;\n};\n\n\n/**\n * Get the line dash offset for the stroke.\n * @return {number|undefined} Line dash offset.\n * @api\n */\nStroke.prototype.getLineDashOffset = function() {\n  return this.lineDashOffset_;\n};\n\n\n/**\n * Get the line join type for the stroke.\n * @return {string|undefined} Line join.\n * @api\n */\nStroke.prototype.getLineJoin = function() {\n  return this.lineJoin_;\n};\n\n\n/**\n * Get the miter limit for the stroke.\n * @return {number|undefined} Miter limit.\n * @api\n */\nStroke.prototype.getMiterLimit = function() {\n  return this.miterLimit_;\n};\n\n\n/**\n * Get the stroke width.\n * @return {number|undefined} Width.\n * @api\n */\nStroke.prototype.getWidth = function() {\n  return this.width_;\n};\n\n\n/**\n * Set the color.\n *\n * @param {module:ol/color~Color|module:ol/colorlike~ColorLike} color Color.\n * @api\n */\nStroke.prototype.setColor = function(color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the line cap.\n *\n * @param {string|undefined} lineCap Line cap.\n * @api\n */\nStroke.prototype.setLineCap = function(lineCap) {\n  this.lineCap_ = lineCap;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the line dash.\n *\n * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n * property will have no visual effect in these browsers.\n *\n * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n *\n * @param {Array.<number>} lineDash Line dash.\n * @api\n */\nStroke.prototype.setLineDash = function(lineDash) {\n  this.lineDash_ = lineDash;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the line dash offset.\n *\n * @param {number|undefined} lineDashOffset Line dash offset.\n * @api\n */\nStroke.prototype.setLineDashOffset = function(lineDashOffset) {\n  this.lineDashOffset_ = lineDashOffset;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the line join.\n *\n * @param {string|undefined} lineJoin Line join.\n * @api\n */\nStroke.prototype.setLineJoin = function(lineJoin) {\n  this.lineJoin_ = lineJoin;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the miter limit.\n *\n * @param {number|undefined} miterLimit Miter limit.\n * @api\n */\nStroke.prototype.setMiterLimit = function(miterLimit) {\n  this.miterLimit_ = miterLimit;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the width.\n *\n * @param {number|undefined} width Width.\n * @api\n */\nStroke.prototype.setWidth = function(width) {\n  this.width_ = width;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * @return {string} The checksum.\n */\nStroke.prototype.getChecksum = function() {\n  if (this.checksum_ === undefined) {\n    this.checksum_ = 's';\n    if (this.color_) {\n      if (typeof this.color_ === 'string') {\n        this.checksum_ += this.color_;\n      } else {\n        this.checksum_ += getUid(this.color_).toString();\n      }\n    } else {\n      this.checksum_ += '-';\n    }\n    this.checksum_ += ',' +\n        (this.lineCap_ !== undefined ?\n          this.lineCap_.toString() : '-') + ',' +\n        (this.lineDash_ ?\n          this.lineDash_.toString() : '-') + ',' +\n        (this.lineDashOffset_ !== undefined ?\n          this.lineDashOffset_ : '-') + ',' +\n        (this.lineJoin_ !== undefined ?\n          this.lineJoin_ : '-') + ',' +\n        (this.miterLimit_ !== undefined ?\n          this.miterLimit_.toString() : '-') + ',' +\n        (this.width_ !== undefined ?\n          this.width_.toString() : '-');\n  }\n\n  return this.checksum_;\n};\nexport default Stroke;\n","/**\n * @module ol/geom/flat/deflate\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array.<number>=} opt_ends Ends.\n * @return {Array.<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates, offset, coordinatess[j], stride);\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array.<Array.<number>>=} opt_endss Endss.\n * @return {Array.<Array.<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array.<module:ol/coordinate~Coordinate>=} opt_coordinates Coordinates.\n * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array.<Array.<module:ol/coordinate~Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates, offset, end, stride, coordinatess[i]);\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n  const coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates, offset, ends, stride, coordinatesss[i]);\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from '../flat/reverse.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // http://tinyurl.com/clockwise-method\n  // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge > 0;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingIsOriented(flatCoordinates, offset, ends, stride, opt_right) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    if (!linearRingIsOriented(\n      flatCoordinates, offset, endss[i], stride, opt_right)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    const reverse = i === 0 ?\n      (right && isClockwise) || (!right && !isClockwise) :\n      (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates, offset, endss[i], stride, opt_right);\n  }\n  return offset;\n}\n","/**\n * @module ol/format/XMLFeature\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport {isDocument, isNode, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/format/Feature}\n */\nconst XMLFeature = function() {\n\n  /**\n   * @type {XMLSerializer}\n   * @private\n   */\n  this.xmlSerializer_ = new XMLSerializer();\n\n  FeatureFormat.call(this);\n};\n\ninherits(XMLFeature, FeatureFormat);\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.getType = function() {\n  return FormatType.XML;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeature = function(source, opt_options) {\n  if (isDocument(source)) {\n    return this.readFeatureFromDocument(/** @type {Document} */ (source), opt_options);\n  } else if (isNode(source)) {\n    return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = parse(source);\n    return this.readFeatureFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n * @return {module:ol/Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromDocument = function(doc, opt_options) {\n  const features = this.readFeaturesFromDocument(doc, opt_options);\n  if (features.length > 0) {\n    return features[0];\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n * @return {module:ol/Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeatures = function(source, opt_options) {\n  if (isDocument(source)) {\n    return this.readFeaturesFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (isNode(source)) {\n    return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = parse(source);\n    return this.readFeaturesFromDocument(doc, opt_options);\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<module:ol/Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromDocument = function(doc, opt_options) {\n  /** @type {Array.<module:ol/Feature>} */\n  const features = [];\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(features, this.readFeaturesFromNode(n, opt_options));\n    }\n  }\n  return features;\n};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<module:ol/Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromNode = function(node, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readGeometry = function(source, opt_options) {\n  if (isDocument(source)) {\n    return this.readGeometryFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (isNode(source)) {\n    return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = parse(source);\n    return this.readGeometryFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n * @protected\n * @return {module:ol/geom/Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromDocument = function(doc, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n * @protected\n * @return {module:ol/geom/Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readProjection = function(source) {\n  if (isDocument(source)) {\n    return this.readProjectionFromDocument(/** @type {Document} */ (source));\n  } else if (isNode(source)) {\n    return this.readProjectionFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = parse(source);\n    return this.readProjectionFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @protected\n * @return {module:ol/proj/Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromDocument = function(doc) {\n  return this.dataProjection;\n};\n\n\n/**\n * @param {Node} node Node.\n * @protected\n * @return {module:ol/proj/Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromNode = function(node) {\n  return this.dataProjection;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeature = function(feature, opt_options) {\n  const node = this.writeFeatureNode(feature, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n * @protected\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeatureNode = function(feature, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeatures = function(features, opt_options) {\n  const node = this.writeFeaturesNode(features, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeaturesNode = function(features, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  const node = this.writeGeometryNode(geometry, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeGeometryNode = function(geometry, opt_options) {\n  return null; // not implemented\n};\nexport default XMLFeature;\n","/**\n * @module ol/renderer/vector\n */\nimport {getUid} from '../index.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ReplayType from '../render/ReplayType.js';\n\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n\n/**\n * @const\n * @type {Object.<module:ol/geom/GeometryType,\n *                function(module:ol/render/ReplayGroup, module:ol/geom/Geometry,\n *                         module:ol/style/Style, Object)>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry\n};\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature1 Feature 1.\n * @param {module:ol/Feature|module:ol/render/Feature} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return getUid(feature1) - getUid(feature2);\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Circle} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature} feature Feature.\n */\nfunction renderCircleGeometry(replayGroup, geometry, style, feature) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.CIRCLE);\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(this: T, module:ol/events/Event)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener, thisArg);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener, thisArg);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\n\n  return loading;\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    const geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getReplay(style.getZIndex(), ReplayType.DEFAULT);\n  replay.drawCustom(/** @type {module:ol/geom/SimpleGeometry} */ (geometry), feature, style.getRenderer());\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer =\n        GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(replayGroup, geometries[i], style, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/LineString|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderLineStringGeometry(replayGroup, geometry, style, feature) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/MultiLineString|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderMultiLineStringGeometry(replayGroup, geometry, style, feature) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature} feature Feature.\n */\nfunction renderMultiPolygonGeometry(replayGroup, geometry, style, feature) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Point|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderPointGeometry(replayGroup, geometry, style, feature) {\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawPoint(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/MultiPoint|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderMultiPointGeometry(replayGroup, geometry, style, feature) {\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Polygon|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderPolygonGeometry(replayGroup, geometry, style, feature) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view'\n};\n","/**\n * @module ol/layer/Image\n */\nimport {inherits} from '../index.js';\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {module:ol/source/Image} [source] Source for this layer.\n */\n\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @constructor\n * @extends {module:ol/layer/Layer}\n * @fires module:ol/render/Event~RenderEvent\n * @param {module:ol/layer/Image~Options=} opt_options Layer options.\n * @api\n */\nconst ImageLayer = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n  Layer.call(this,  /** @type {module:ol/layer/Layer~Options} */ (options));\n\n  /**\n   * The layer type.\n   * @protected\n   * @type {module:ol/LayerType}\n   */\n  this.type = LayerType.IMAGE;\n\n};\n\ninherits(ImageLayer, Layer);\n\n\n/**\n * Return the associated {@link module:ol/source/Image source} of the image layer.\n * @function\n * @return {module:ol/source/Image} Source.\n * @api\n */\nImageLayer.prototype.getSource;\nexport default ImageLayer;\n","/**\n * @module ol/source/WMTSRequestEncoding\n */\n\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @enum {string}\n */\nexport default {\n  KVP: 'KVP',  // see spec §8\n  REST: 'REST' // see spec §10\n};\n","/**\n * @module ol/source/WMTS\n */\nimport {inherits} from '../index.js';\nimport {expandUrl, createFromTileUrlFunctions, nullTileUrlFunction} from '../tileurlfunction.js';\nimport {find, findIndex, includes} from '../array.js';\nimport {containsExtent} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, equivalent, transformExtent} from '../proj.js';\nimport TileImage from '../source/TileImage.js';\nimport WMTSRequestEncoding from '../source/WMTSRequestEncoding.js';\nimport {createFromCapabilitiesMatrixSet} from '../tilegrid/WMTS.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {module:ol/tilegrid/WMTS} tileGrid Tile grid.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {boolean} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/source/WMTSRequestEncoding|string} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {module:ol/ImageTile~TileClass} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [version='image/jpeg'] Image format.\n * @property {string} [format='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array.<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n *\n * @constructor\n * @extends {module:ol/source/TileImage}\n * @param {module:ol/source/WMTS~Options=} options WMTS options.\n * @api\n */\nconst WMTS = function(options) {\n\n  // TODO: add support for TileMatrixLimits\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.version_ = options.version !== undefined ? options.version : '1.0.0';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.dimensions_ = options.dimensions !== undefined ? options.dimensions : {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.layer_ = options.layer;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.matrixSet_ = options.matrixSet;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.style_ = options.style;\n\n  let urls = options.urls;\n  if (urls === undefined && options.url !== undefined) {\n    urls = expandUrl(options.url);\n  }\n\n  // FIXME: should we guess this requestEncoding from options.url(s)\n  //        structure? that would mean KVP only if a template is not provided.\n\n  /**\n   * @private\n   * @type {module:ol/source/WMTSRequestEncoding}\n   */\n  this.requestEncoding_ = options.requestEncoding !== undefined ?\n    /** @type {module:ol/source/WMTSRequestEncoding} */ (options.requestEncoding) :\n    WMTSRequestEncoding.KVP;\n\n  const requestEncoding = this.requestEncoding_;\n\n  // FIXME: should we create a default tileGrid?\n  // we could issue a getCapabilities xhr to retrieve missing configuration\n  const tileGrid = options.tileGrid;\n\n  // context property names are lower case to allow for a case insensitive\n  // replacement as some services use different naming conventions\n  const context = {\n    'layer': this.layer_,\n    'style': this.style_,\n    'tilematrixset': this.matrixSet_\n  };\n\n  if (requestEncoding == WMTSRequestEncoding.KVP) {\n    assign(context, {\n      'Service': 'WMTS',\n      'Request': 'GetTile',\n      'Version': this.version_,\n      'Format': this.format_\n    });\n  }\n\n  const dimensions = this.dimensions_;\n\n  /**\n   * @param {string} template Template.\n   * @return {module:ol/Tile~UrlFunction} Tile URL function.\n   * @private\n   */\n  this.createFromWMTSTemplate_ = function(template) {\n\n    // TODO: we may want to create our own appendParams function so that params\n    // order conforms to wmts spec guidance, and so that we can avoid to escape\n    // special template params\n\n    template = (requestEncoding == WMTSRequestEncoding.KVP) ?\n      appendParams(template, context) :\n      template.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n        return (p.toLowerCase() in context) ? context[p.toLowerCase()] : m;\n      });\n\n    return (\n      /**\n       * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n       * @param {number} pixelRatio Pixel ratio.\n       * @param {module:ol/proj/Projection} projection Projection.\n       * @return {string|undefined} Tile URL.\n       */\n      function(tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n          return undefined;\n        } else {\n          const localContext = {\n            'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n            'TileCol': tileCoord[1],\n            'TileRow': -tileCoord[2] - 1\n          };\n          assign(localContext, dimensions);\n          let url = template;\n          if (requestEncoding == WMTSRequestEncoding.KVP) {\n            url = appendParams(url, localContext);\n          } else {\n            url = url.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n              return localContext[p];\n            });\n          }\n          return url;\n        }\n      }\n    );\n  };\n\n  const tileUrlFunction = (urls && urls.length > 0) ?\n    createFromTileUrlFunctions(urls.map(this.createFromWMTSTemplate_)) : nullTileUrlFunction;\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: options.tileClass,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: tileUrlFunction,\n    urls: urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : false,\n    transition: options.transition\n  });\n\n  this.setKey(this.getKeyForDimensions_());\n\n};\n\ninherits(WMTS, TileImage);\n\n/**\n * Set the URLs to use for requests.\n * URLs may contain OCG conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n * @override\n */\nWMTS.prototype.setUrls = function(urls) {\n  this.urls = urls;\n  const key = urls.join('\\n');\n  this.setTileUrlFunction(this.fixedTileUrlFunction ?\n    this.fixedTileUrlFunction.bind(this) :\n    createFromTileUrlFunctions(urls.map(this.createFromWMTSTemplate_.bind(this))), key);\n};\n\n/**\n * Get the dimensions, i.e. those passed to the constructor through the\n * \"dimensions\" option, and possibly updated using the updateDimensions\n * method.\n * @return {!Object} Dimensions.\n * @api\n */\nWMTS.prototype.getDimensions = function() {\n  return this.dimensions_;\n};\n\n\n/**\n * Return the image format of the WMTS source.\n * @return {string} Format.\n * @api\n */\nWMTS.prototype.getFormat = function() {\n  return this.format_;\n};\n\n\n/**\n * Return the layer of the WMTS source.\n * @return {string} Layer.\n * @api\n */\nWMTS.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * Return the matrix set of the WMTS source.\n * @return {string} MatrixSet.\n * @api\n */\nWMTS.prototype.getMatrixSet = function() {\n  return this.matrixSet_;\n};\n\n\n/**\n * Return the request encoding, either \"KVP\" or \"REST\".\n * @return {module:ol/source/WMTSRequestEncoding} Request encoding.\n * @api\n */\nWMTS.prototype.getRequestEncoding = function() {\n  return this.requestEncoding_;\n};\n\n\n/**\n * Return the style of the WMTS source.\n * @return {string} Style.\n * @api\n */\nWMTS.prototype.getStyle = function() {\n  return this.style_;\n};\n\n\n/**\n * Return the version of the WMTS source.\n * @return {string} Version.\n * @api\n */\nWMTS.prototype.getVersion = function() {\n  return this.version_;\n};\n\n\n/**\n * @private\n * @return {string} The key for the current dimensions.\n */\nWMTS.prototype.getKeyForDimensions_ = function() {\n  let i = 0;\n  const res = [];\n  for (const key in this.dimensions_) {\n    res[i++] = key + '-' + this.dimensions_[key];\n  }\n  return res.join('/');\n};\n\n\n/**\n * Update the dimensions.\n * @param {Object} dimensions Dimensions.\n * @api\n */\nWMTS.prototype.updateDimensions = function(dimensions) {\n  assign(this.dimensions_, dimensions);\n  this.setKey(this.getKeyForDimensions_());\n};\n\n\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {?module:ol/source/WMTS~Options} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n  const layers = wmtsCap['Contents']['Layer'];\n  const l = find(layers, function(elt, index, array) {\n    return elt['Identifier'] == config['layer'];\n  });\n  if (l === null) {\n    return null;\n  }\n  const tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  let idx;\n  if (l['TileMatrixSetLink'].length > 1) {\n    if ('projection' in config) {\n      idx = findIndex(l['TileMatrixSetLink'],\n        function(elt, index, array) {\n          const tileMatrixSet = find(tileMatrixSets, function(el) {\n            return el['Identifier'] == elt['TileMatrixSet'];\n          });\n          const supportedCRS = tileMatrixSet['SupportedCRS'];\n          const proj1 = getProjection(supportedCRS.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n                getProjection(supportedCRS);\n          const proj2 = getProjection(config['projection']);\n          if (proj1 && proj2) {\n            return equivalent(proj1, proj2);\n          } else {\n            return supportedCRS == config['projection'];\n          }\n        });\n    } else {\n      idx = findIndex(l['TileMatrixSetLink'],\n        function(elt, index, array) {\n          return elt['TileMatrixSet'] == config['matrixSet'];\n        });\n    }\n  } else {\n    idx = 0;\n  }\n  if (idx < 0) {\n    idx = 0;\n  }\n  const matrixSet = /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n  const matrixLimits = /** @type {Array.<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n\n  let format = /** @type {string} */ (l['Format'][0]);\n  if ('format' in config) {\n    format = config['format'];\n  }\n  idx = findIndex(l['Style'], function(elt, index, array) {\n    if ('style' in config) {\n      return elt['Title'] == config['style'];\n    } else {\n      return elt['isDefault'];\n    }\n  });\n  if (idx < 0) {\n    idx = 0;\n  }\n  const style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n\n  const dimensions = {};\n  if ('Dimension' in l) {\n    l['Dimension'].forEach(function(elt, index, array) {\n      const key = elt['Identifier'];\n      let value = elt['Default'];\n      if (value === undefined) {\n        value = elt['Value'][0];\n      }\n      dimensions[key] = value;\n    });\n  }\n\n  const matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  const matrixSetObj = find(matrixSets, function(elt, index, array) {\n    return elt['Identifier'] == matrixSet;\n  });\n\n  let projection;\n  const code = matrixSetObj['SupportedCRS'];\n  if (code) {\n    projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n        getProjection(code);\n  }\n  if ('projection' in config) {\n    const projConfig = getProjection(config['projection']);\n    if (projConfig) {\n      if (!projection || equivalent(projConfig, projection)) {\n        projection = projConfig;\n      }\n    }\n  }\n\n  const wgs84BoundingBox = l['WGS84BoundingBox'];\n  let extent, wrapX;\n  if (wgs84BoundingBox !== undefined) {\n    const wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n    wrapX = (wgs84BoundingBox[0] == wgs84ProjectionExtent[0] &&\n        wgs84BoundingBox[2] == wgs84ProjectionExtent[2]);\n    extent = transformExtent(\n      wgs84BoundingBox, 'EPSG:4326', projection);\n    const projectionExtent = projection.getExtent();\n    if (projectionExtent) {\n      // If possible, do a sanity check on the extent - it should never be\n      // bigger than the validity extent of the projection of a matrix set.\n      if (!containsExtent(projectionExtent, extent)) {\n        extent = undefined;\n      }\n    }\n  }\n\n  const tileGrid = createFromCapabilitiesMatrixSet(matrixSetObj, extent, matrixLimits);\n\n  /** @type {!Array.<string>} */\n  const urls = [];\n  let requestEncoding = config['requestEncoding'];\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n\n  if ('OperationsMetadata' in wmtsCap && 'GetTile' in wmtsCap['OperationsMetadata']) {\n    const gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n\n    for (let i = 0, ii = gets.length; i < ii; ++i) {\n      if (gets[i]['Constraint']) {\n        const constraint = find(gets[i]['Constraint'], function(element) {\n          return element['name'] == 'GetEncoding';\n        });\n        const encodings = constraint['AllowedValues']['Value'];\n\n        if (requestEncoding === '') {\n          // requestEncoding not provided, use the first encoding from the list\n          requestEncoding = encodings[0];\n        }\n        if (requestEncoding === WMTSRequestEncoding.KVP) {\n          if (includes(encodings, WMTSRequestEncoding.KVP)) {\n            urls.push(/** @type {string} */ (gets[i]['href']));\n          }\n        } else {\n          break;\n        }\n      } else if (gets[i]['href']) {\n        requestEncoding = WMTSRequestEncoding.KVP;\n        urls.push(/** @type {string} */ (gets[i]['href']));\n      }\n    }\n  }\n  if (urls.length === 0) {\n    requestEncoding = WMTSRequestEncoding.REST;\n    l['ResourceURL'].forEach(function(element) {\n      if (element['resourceType'] === 'tile') {\n        format = element['format'];\n        urls.push(/** @type {string} */ (element['template']));\n      }\n    });\n  }\n\n  return {\n    urls: urls,\n    layer: config['layer'],\n    matrixSet: matrixSet,\n    format: format,\n    projection: projection,\n    requestEncoding: requestEncoding,\n    tileGrid: tileGrid,\n    style: style,\n    dimensions: dimensions,\n    wrapX: wrapX,\n    crossOrigin: config['crossOrigin']\n  };\n}\n\nexport default WMTS;\n","/**\n * @module ol/Overlay\n */\nimport {inherits} from './index.js';\nimport MapEventType from './MapEventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {removeNode, removeChildren, outerWidth, outerHeight} from './dom.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {containsExtent} from './extent.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {Element} [element] The overlay element.\n * @property {Array.<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {module:ol/coordinate~Coordinate} [position] The overlay position\n * in map projection.\n * @property {module:ol/OverlayPositioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {boolean} [autoPan=false] If set to `true` the map is panned when\n * calling `setPosition`, so that the overlay is entirely visible in the current\n * viewport.\n * @property {module:ol/Overlay~PanOptions} [autoPanAnimation] The\n * animation options used to pan the overlay into view. This animation is only\n * used when `autoPan` is enabled. A `duration` and `easing` may be provided to\n * customize the animation.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing~inAndOut}.\n */\n\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning'\n};\n\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @constructor\n * @extends {module:ol/Object}\n * @param {module:ol/Overlay~Options} options Overlay options.\n * @api\n */\nconst Overlay = function(options) {\n\n  BaseObject.call(this);\n\n  /**\n   * @protected\n   * @type {module:ol/Overlay~Options}\n   */\n  this.options = options;\n\n  /**\n   * @protected\n   * @type {number|string|undefined}\n   */\n  this.id = options.id;\n\n  /**\n   * @protected\n   * @type {boolean}\n   */\n  this.insertFirst = options.insertFirst !== undefined ?\n    options.insertFirst : true;\n\n  /**\n   * @protected\n   * @type {boolean}\n   */\n  this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n  /**\n   * @protected\n   * @type {Element}\n   */\n  this.element = document.createElement('DIV');\n  this.element.className = options.className !== undefined ?\n    options.className : 'ol-overlay-container ' + CLASS_SELECTABLE;\n  this.element.style.position = 'absolute';\n\n  /**\n   * @protected\n   * @type {boolean}\n   */\n  this.autoPan = options.autoPan !== undefined ? options.autoPan : false;\n\n  /**\n   * @protected\n   * @type {module:ol/Overlay~PanOptions}\n   */\n  this.autoPanAnimation = options.autoPanAnimation || /** @type {module:ol/Overlay~PanOptions} */ ({});\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.autoPanMargin = options.autoPanMargin !== undefined ?\n    options.autoPanMargin : 20;\n\n  /**\n   * @protected\n   * @type {{bottom_: string,\n   *         left_: string,\n   *         right_: string,\n   *         top_: string,\n   *         visible: boolean}}\n   */\n  this.rendered = {\n    bottom_: '',\n    left_: '',\n    right_: '',\n    top_: '',\n    visible: true\n  };\n\n  /**\n   * @protected\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.mapPostrenderListenerKey = null;\n\n  listen(\n    this, getChangeEventType(Property.ELEMENT),\n    this.handleElementChanged, this);\n\n  listen(\n    this, getChangeEventType(Property.MAP),\n    this.handleMapChanged, this);\n\n  listen(\n    this, getChangeEventType(Property.OFFSET),\n    this.handleOffsetChanged, this);\n\n  listen(\n    this, getChangeEventType(Property.POSITION),\n    this.handlePositionChanged, this);\n\n  listen(\n    this, getChangeEventType(Property.POSITIONING),\n    this.handlePositioningChanged, this);\n\n  if (options.element !== undefined) {\n    this.setElement(options.element);\n  }\n\n  this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n  this.setPositioning(options.positioning !== undefined ?\n    /** @type {module:ol/OverlayPositioning} */ (options.positioning) :\n    OverlayPositioning.TOP_LEFT);\n\n  if (options.position !== undefined) {\n    this.setPosition(options.position);\n  }\n\n};\n\ninherits(Overlay, BaseObject);\n\n\n/**\n * Get the DOM element of this overlay.\n * @return {Element|undefined} The Element containing the overlay.\n * @observable\n * @api\n */\nOverlay.prototype.getElement = function() {\n  return /** @type {Element|undefined} */ (this.get(Property.ELEMENT));\n};\n\n\n/**\n * Get the overlay identifier which is set on constructor.\n * @return {number|string|undefined} Id.\n * @api\n */\nOverlay.prototype.getId = function() {\n  return this.id;\n};\n\n\n/**\n * Get the map associated with this overlay.\n * @return {module:ol/PluggableMap|undefined} The map that the\n * overlay is part of.\n * @observable\n * @api\n */\nOverlay.prototype.getMap = function() {\n  return (\n    /** @type {module:ol/PluggableMap|undefined} */ (this.get(Property.MAP))\n  );\n};\n\n\n/**\n * Get the offset of this overlay.\n * @return {Array.<number>} The offset.\n * @observable\n * @api\n */\nOverlay.prototype.getOffset = function() {\n  return /** @type {Array.<number>} */ (this.get(Property.OFFSET));\n};\n\n\n/**\n * Get the current position of this overlay.\n * @return {module:ol/coordinate~Coordinate|undefined} The spatial point that the overlay is\n *     anchored at.\n * @observable\n * @api\n */\nOverlay.prototype.getPosition = function() {\n  return (\n    /** @type {module:ol/coordinate~Coordinate|undefined} */ (this.get(Property.POSITION))\n  );\n};\n\n\n/**\n * Get the current positioning of this overlay.\n * @return {module:ol/OverlayPositioning} How the overlay is positioned\n *     relative to its point on the map.\n * @observable\n * @api\n */\nOverlay.prototype.getPositioning = function() {\n  return (\n    /** @type {module:ol/OverlayPositioning} */ (this.get(Property.POSITIONING))\n  );\n};\n\n\n/**\n * @protected\n */\nOverlay.prototype.handleElementChanged = function() {\n  removeChildren(this.element);\n  const element = this.getElement();\n  if (element) {\n    this.element.appendChild(element);\n  }\n};\n\n\n/**\n * @protected\n */\nOverlay.prototype.handleMapChanged = function() {\n  if (this.mapPostrenderListenerKey) {\n    removeNode(this.element);\n    unlistenByKey(this.mapPostrenderListenerKey);\n    this.mapPostrenderListenerKey = null;\n  }\n  const map = this.getMap();\n  if (map) {\n    this.mapPostrenderListenerKey = listen(map,\n      MapEventType.POSTRENDER, this.render, this);\n    this.updatePixelPosition();\n    const container = this.stopEvent ?\n      map.getOverlayContainerStopEvent() : map.getOverlayContainer();\n    if (this.insertFirst) {\n      container.insertBefore(this.element, container.childNodes[0] || null);\n    } else {\n      container.appendChild(this.element);\n    }\n  }\n};\n\n\n/**\n * @protected\n */\nOverlay.prototype.render = function() {\n  this.updatePixelPosition();\n};\n\n\n/**\n * @protected\n */\nOverlay.prototype.handleOffsetChanged = function() {\n  this.updatePixelPosition();\n};\n\n\n/**\n * @protected\n */\nOverlay.prototype.handlePositionChanged = function() {\n  this.updatePixelPosition();\n  if (this.get(Property.POSITION) && this.autoPan) {\n    this.panIntoView();\n  }\n};\n\n\n/**\n * @protected\n */\nOverlay.prototype.handlePositioningChanged = function() {\n  this.updatePixelPosition();\n};\n\n\n/**\n * Set the DOM element to be associated with this overlay.\n * @param {Element|undefined} element The Element containing the overlay.\n * @observable\n * @api\n */\nOverlay.prototype.setElement = function(element) {\n  this.set(Property.ELEMENT, element);\n};\n\n\n/**\n * Set the map to be associated with this overlay.\n * @param {module:ol/PluggableMap|undefined} map The map that the\n * overlay is part of.\n * @observable\n * @api\n */\nOverlay.prototype.setMap = function(map) {\n  this.set(Property.MAP, map);\n};\n\n\n/**\n * Set the offset for this overlay.\n * @param {Array.<number>} offset Offset.\n * @observable\n * @api\n */\nOverlay.prototype.setOffset = function(offset) {\n  this.set(Property.OFFSET, offset);\n};\n\n\n/**\n * Set the position for this overlay. If the position is `undefined` the\n * overlay is hidden.\n * @param {module:ol/coordinate~Coordinate|undefined} position The spatial point that the overlay\n *     is anchored at.\n * @observable\n * @api\n */\nOverlay.prototype.setPosition = function(position) {\n  this.set(Property.POSITION, position);\n};\n\n\n/**\n * Pan the map so that the overlay is entirely visible in the current viewport\n * (if necessary).\n * @protected\n */\nOverlay.prototype.panIntoView = function() {\n  const map = this.getMap();\n\n  if (!map || !map.getTargetElement()) {\n    return;\n  }\n\n  const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n  const element = /** @type {!Element} */ (this.getElement());\n  const overlayRect = this.getRect(element, [outerWidth(element), outerHeight(element)]);\n\n  const margin = this.autoPanMargin;\n  if (!containsExtent(mapRect, overlayRect)) {\n    // the overlay is not completely inside the viewport, so pan the map\n    const offsetLeft = overlayRect[0] - mapRect[0];\n    const offsetRight = mapRect[2] - overlayRect[2];\n    const offsetTop = overlayRect[1] - mapRect[1];\n    const offsetBottom = mapRect[3] - overlayRect[3];\n\n    const delta = [0, 0];\n    if (offsetLeft < 0) {\n      // move map to the left\n      delta[0] = offsetLeft - margin;\n    } else if (offsetRight < 0) {\n      // move map to the right\n      delta[0] = Math.abs(offsetRight) + margin;\n    }\n    if (offsetTop < 0) {\n      // move map up\n      delta[1] = offsetTop - margin;\n    } else if (offsetBottom < 0) {\n      // move map down\n      delta[1] = Math.abs(offsetBottom) + margin;\n    }\n\n    if (delta[0] !== 0 || delta[1] !== 0) {\n      const center = /** @type {module:ol/coordinate~Coordinate} */ (map.getView().getCenter());\n      const centerPx = map.getPixelFromCoordinate(center);\n      const newCenterPx = [\n        centerPx[0] + delta[0],\n        centerPx[1] + delta[1]\n      ];\n\n      map.getView().animate({\n        center: map.getCoordinateFromPixel(newCenterPx),\n        duration: this.autoPanAnimation.duration,\n        easing: this.autoPanAnimation.easing\n      });\n    }\n  }\n};\n\n\n/**\n * Get the extent of an element relative to the document\n * @param {Element|undefined} element The element.\n * @param {module:ol/size~Size|undefined} size The size of the element.\n * @return {module:ol/extent~Extent} The extent.\n * @protected\n */\nOverlay.prototype.getRect = function(element, size) {\n  const box = element.getBoundingClientRect();\n  const offsetX = box.left + window.pageXOffset;\n  const offsetY = box.top + window.pageYOffset;\n  return [\n    offsetX,\n    offsetY,\n    offsetX + size[0],\n    offsetY + size[1]\n  ];\n};\n\n\n/**\n * Set the positioning for this overlay.\n * @param {module:ol/OverlayPositioning} positioning how the overlay is\n *     positioned relative to its point on the map.\n * @observable\n * @api\n */\nOverlay.prototype.setPositioning = function(positioning) {\n  this.set(Property.POSITIONING, positioning);\n};\n\n\n/**\n * Modify the visibility of the element.\n * @param {boolean} visible Element visibility.\n * @protected\n */\nOverlay.prototype.setVisible = function(visible) {\n  if (this.rendered.visible !== visible) {\n    this.element.style.display = visible ? '' : 'none';\n    this.rendered.visible = visible;\n  }\n};\n\n\n/**\n * Update pixel position.\n * @protected\n */\nOverlay.prototype.updatePixelPosition = function() {\n  const map = this.getMap();\n  const position = this.getPosition();\n  if (!map || !map.isRendered() || !position) {\n    this.setVisible(false);\n    return;\n  }\n\n  const pixel = map.getPixelFromCoordinate(position);\n  const mapSize = map.getSize();\n  this.updateRenderedPosition(pixel, mapSize);\n};\n\n\n/**\n * @param {module:ol~Pixel} pixel The pixel location.\n * @param {module:ol/size~Size|undefined} mapSize The map size.\n * @protected\n */\nOverlay.prototype.updateRenderedPosition = function(pixel, mapSize) {\n  const style = this.element.style;\n  const offset = this.getOffset();\n\n  const positioning = this.getPositioning();\n\n  this.setVisible(true);\n\n  let offsetX = offset[0];\n  let offsetY = offset[1];\n  if (positioning == OverlayPositioning.BOTTOM_RIGHT ||\n      positioning == OverlayPositioning.CENTER_RIGHT ||\n      positioning == OverlayPositioning.TOP_RIGHT) {\n    if (this.rendered.left_ !== '') {\n      this.rendered.left_ = style.left = '';\n    }\n    const right = Math.round(mapSize[0] - pixel[0] - offsetX) + 'px';\n    if (this.rendered.right_ != right) {\n      this.rendered.right_ = style.right = right;\n    }\n  } else {\n    if (this.rendered.right_ !== '') {\n      this.rendered.right_ = style.right = '';\n    }\n    if (positioning == OverlayPositioning.BOTTOM_CENTER ||\n        positioning == OverlayPositioning.CENTER_CENTER ||\n        positioning == OverlayPositioning.TOP_CENTER) {\n      offsetX -= this.element.offsetWidth / 2;\n    }\n    const left = Math.round(pixel[0] + offsetX) + 'px';\n    if (this.rendered.left_ != left) {\n      this.rendered.left_ = style.left = left;\n    }\n  }\n  if (positioning == OverlayPositioning.BOTTOM_LEFT ||\n      positioning == OverlayPositioning.BOTTOM_CENTER ||\n      positioning == OverlayPositioning.BOTTOM_RIGHT) {\n    if (this.rendered.top_ !== '') {\n      this.rendered.top_ = style.top = '';\n    }\n    const bottom = Math.round(mapSize[1] - pixel[1] - offsetY) + 'px';\n    if (this.rendered.bottom_ != bottom) {\n      this.rendered.bottom_ = style.bottom = bottom;\n    }\n  } else {\n    if (this.rendered.bottom_ !== '') {\n      this.rendered.bottom_ = style.bottom = '';\n    }\n    if (positioning == OverlayPositioning.CENTER_LEFT ||\n        positioning == OverlayPositioning.CENTER_CENTER ||\n        positioning == OverlayPositioning.CENTER_RIGHT) {\n      offsetY -= this.element.offsetHeight / 2;\n    }\n    const top = Math.round(pixel[1] + offsetY) + 'px';\n    if (this.rendered.top_ != top) {\n      this.rendered.top_ = style.top = top;\n    }\n  }\n};\n\n\n/**\n * returns the options this Overlay has been created with\n * @return {module:ol/Overlay~Options} overlay options\n */\nOverlay.prototype.getOptions = function() {\n  return this.options;\n};\n\nexport default Overlay;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n\n/**\n * @param {module:ol/color~Color|module:ol/colorlike~ColorLike} color Color.\n * @return {module:ol/colorlike~ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (isColorLike(color)) {\n    return /** @type {string|CanvasPattern|CanvasGradient} */ (color);\n  } else {\n    return toString(/** @type {module:ol/color~Color} */ (color));\n  }\n}\n\n\n/**\n * @param {?} color The value that is potentially an {@link ol/colorlike~ColorLike}.\n * @return {boolean} The color is an {@link ol/colorlike~ColorLike}.\n */\nexport function isColorLike(color) {\n  return (\n    typeof color === 'string' ||\n    color instanceof CanvasPattern ||\n    color instanceof CanvasGradient\n  );\n}\n","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  FRACTION: 'fraction',\n  PIXELS: 'pixels'\n};\n","/**\n * @module ol/interaction/Draw\n */\nimport {inherits} from '../index.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {getChangeEventType} from '../Object.js';\nimport {squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {noModifierKeys, always, shiftKeyOnly} from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport {POINTER_TYPE} from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/geom/GeometryType} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {module:ol/Collection.<module:ol/Feature>} [features]\n * Destination collection for the drawn features.\n * @property {module:ol/source/Vector} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {module:ol/events/condition~Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style]\n * Style for sketch features.\n * @property {module:ol/interaction/Draw~GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {module:ol/events/condition~Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry as\n * arguments, and returns a geometry. The optional existing geometry is the\n * geometry that is returned when the function is called without a second\n * argument.\n * @typedef {function(!Array.<module:ol/coordinate~Coordinate>, module:ol/geom/SimpleGeometry=):\n *     module:ol/geom/SimpleGeometry} GeometryFunction\n */\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nconst Mode = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n\n/**\n * @enum {string}\n */\nconst DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event module:ol/interaction/Draw~DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event module:ol/interaction/Draw~DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {module:ol/interaction/Draw~DrawEventType} type Type.\n * @param {module:ol/Feature} feature The feature drawn.\n */\nconst DrawEvent = function(type, feature) {\n\n  Event.call(this, type);\n\n  /**\n   * The feature being drawn.\n   * @type {module:ol/Feature}\n   * @api\n   */\n  this.feature = feature;\n\n};\n\ninherits(DrawEvent, Event);\n\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @fires module:ol/interaction/Draw~DrawEvent\n * @param {module:ol/interaction/Draw~Options} options Options.\n * @api\n */\nconst Draw = function(options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleEvent: handleEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandle_ = false;\n\n  /**\n   * @type {module:ol~Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.downTimeout_;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.lastDragTime_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.freehand_ = false;\n\n  /**\n   * Target source for drawn features.\n   * @type {module:ol/source/Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * Target collection for drawn features.\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * Pixel distance for snapping.\n   * @type {number}\n   * @private\n   */\n  this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n  /**\n   * Geometry type.\n   * @type {module:ol/geom/GeometryType}\n   * @private\n   */\n  this.type_ = /** @type {module:ol/geom/GeometryType} */ (options.type);\n\n  /**\n   * Drawing mode (derived from geometry type.\n   * @type {module:ol/interaction/Draw~Mode}\n   * @private\n   */\n  this.mode_ = getMode(this.type_);\n\n  /**\n   * Stop click, singleclick, and doubleclick events from firing during drawing.\n   * Default is `false`.\n   * @type {boolean}\n   * @private\n   */\n  this.stopClick_ = !!options.stopClick;\n\n  /**\n   * The number of points that must be drawn before a polygon ring or line\n   * string can be finished.  The default is 3 for polygon rings and 2 for\n   * line strings.\n   * @type {number}\n   * @private\n   */\n  this.minPoints_ = options.minPoints ?\n    options.minPoints :\n    (this.mode_ === Mode.POLYGON ? 3 : 2);\n\n  /**\n   * The number of points that can be drawn before a polygon ring or line string\n   * is finished. The default is no restriction.\n   * @type {number}\n   * @private\n   */\n  this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n  /**\n   * A function to decide if a potential finish coordinate is permissible\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n  let geometryFunction = options.geometryFunction;\n  if (!geometryFunction) {\n    if (this.type_ === GeometryType.CIRCLE) {\n      /**\n       * @param {!Array.<module:ol/coordinate~Coordinate>} coordinates\n       *     The coordinates.\n       * @param {module:ol/geom/SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {module:ol/geom/SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        const circle = opt_geometry ? /** @type {module:ol/geom/Circle} */ (opt_geometry) :\n          new Circle([NaN, NaN]);\n        const squaredLength = squaredCoordinateDistance(\n          coordinates[0], coordinates[1]);\n        circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n        return circle;\n      };\n    } else {\n      let Constructor;\n      const mode = this.mode_;\n      if (mode === Mode.POINT) {\n        Constructor = Point;\n      } else if (mode === Mode.LINE_STRING) {\n        Constructor = LineString;\n      } else if (mode === Mode.POLYGON) {\n        Constructor = Polygon;\n      }\n      /**\n       * @param {!Array.<module:ol/coordinate~Coordinate>} coordinates\n       *     The coordinates.\n       * @param {module:ol/geom/SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {module:ol/geom/SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        let geometry = opt_geometry;\n        if (geometry) {\n          if (mode === Mode.POLYGON) {\n            if (coordinates[0].length) {\n              // Add a closing coordinate to match the first\n              geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n            } else {\n              geometry.setCoordinates([]);\n            }\n          } else {\n            geometry.setCoordinates(coordinates);\n          }\n        } else {\n          geometry = new Constructor(coordinates);\n        }\n        return geometry;\n      };\n    }\n  }\n\n  /**\n   * @type {module:ol/interaction/Draw~GeometryFunction}\n   * @private\n   */\n  this.geometryFunction_ = geometryFunction;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n  /**\n   * Finish coordinate for the feature (first point for polygons, last point for\n   * linestrings).\n   * @type {module:ol/coordinate~Coordinate}\n   * @private\n   */\n  this.finishCoordinate_ = null;\n\n  /**\n   * Sketch feature.\n   * @type {module:ol/Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {module:ol/Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n  /**\n   * Sketch coordinates. Used when drawing a line or polygon.\n   * @type {module:ol/coordinate~Coordinate|Array.<module:ol/coordinate~Coordinate>|Array.<Array.<module:ol/coordinate~Coordinate>>}\n   * @private\n   */\n  this.sketchCoords_ = null;\n\n  /**\n   * Sketch line. Used when drawing polygon.\n   * @type {module:ol/Feature}\n   * @private\n   */\n  this.sketchLine_ = null;\n\n  /**\n   * Sketch line coordinates. Used when drawing a polygon or circle.\n   * @type {Array.<module:ol/coordinate~Coordinate>}\n   * @private\n   */\n  this.sketchLineCoords_ = null;\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = options.clickTolerance ?\n    options.clickTolerance * options.clickTolerance : 36;\n\n  /**\n   * Draw overlay where our sketch features are drawn.\n   * @type {module:ol/layer/Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: options.wrapX ? options.wrapX : false\n    }),\n    style: options.style ? options.style :\n      getDefaultStyleFunction(),\n    updateWhileInteracting: true\n  });\n\n  /**\n   * Name of the geometry attribute for newly created features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.freehandCondition_;\n  if (options.freehand) {\n    this.freehandCondition_ = always;\n  } else {\n    this.freehandCondition_ = options.freehandCondition ?\n      options.freehandCondition : shiftKeyOnly;\n  }\n\n  listen(this,\n    getChangeEventType(InteractionProperty.ACTIVE),\n    this.updateState_, this);\n\n};\n\ninherits(Draw, PointerInteraction);\n\n\n/**\n * @return {module:ol/style/Style~StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.setMap = function(map) {\n  PointerInteraction.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually\n * draw or finish the drawing.\n * @param {module:ol/MapBrowserEvent} event Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Draw}\n * @api\n */\nexport function handleEvent(event) {\n  if (event.originalEvent.type === EventType.CONTEXTMENU) {\n    // Avoid context menu for long taps when drawing on mobile\n    event.preventDefault();\n  }\n  this.freehand_ = this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n  let move = event.type === MapBrowserEventType.POINTERMOVE;\n  let pass = true;\n  if (this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n    const now = Date.now();\n    if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n      this.downPx_ = event.pixel;\n      this.shouldHandle_ = !this.freehand_;\n      move = true;\n    } else {\n      this.lastDragTime_ = undefined;\n    }\n    if (this.shouldHandle_ && this.downTimeout_) {\n      clearTimeout(this.downTimeout_);\n      this.downTimeout_ = undefined;\n    }\n  }\n  if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null) {\n    this.addToDrawing_(event);\n    pass = false;\n  } else if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN) {\n    pass = false;\n  } else if (move) {\n    pass = event.type === MapBrowserEventType.POINTERMOVE;\n    if (pass && this.freehand_) {\n      pass = this.handlePointerMove_(event);\n    } else if (event.pointerEvent.pointerType == POINTER_TYPE ||\n        (event.type === MapBrowserEventType.POINTERDRAG && !this.downTimeout_)) {\n      this.handlePointerMove_(event);\n    }\n  } else if (event.type === MapBrowserEventType.DBLCLICK) {\n    pass = false;\n  }\n\n  return handlePointerEvent.call(this, event) && pass;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/Draw}\n */\nfunction handleDownEvent(event) {\n  this.shouldHandle_ = !this.freehand_;\n\n  if (this.freehand_) {\n    this.downPx_ = event.pixel;\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n    }\n    return true;\n  } else if (this.condition_(event)) {\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(function() {\n      this.handlePointerMove_(new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, event.frameState));\n    }.bind(this), this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Draw}\n */\nfunction handleUpEvent(event) {\n  let pass = true;\n\n  if (this.downTimeout_) {\n    clearTimeout(this.downTimeout_);\n    this.downTimeout_ = undefined;\n  }\n\n  this.handlePointerMove_(event);\n\n  const circleMode = this.mode_ === Mode.CIRCLE;\n\n  if (this.shouldHandle_) {\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n      if (this.mode_ === Mode.POINT) {\n        this.finishDrawing();\n      }\n    } else if (this.freehand_ || circleMode) {\n      this.finishDrawing();\n    } else if (this.atFinish_(event)) {\n      if (this.finishCondition_(event)) {\n        this.finishDrawing();\n      }\n    } else {\n      this.addToDrawing_(event);\n    }\n    pass = false;\n  } else if (this.freehand_) {\n    this.finishCoordinate_ = null;\n    this.abortDrawing_();\n  }\n  if (!pass && this.stopClick_) {\n    event.stopPropagation();\n  }\n  return pass;\n}\n\n\n/**\n * Handle move events.\n * @param {module:ol/MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nDraw.prototype.handlePointerMove_ = function(event) {\n  if (this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n      (this.freehand_ && !this.shouldHandle_))) {\n    const downPx = this.downPx_;\n    const clickPx = event.pixel;\n    const dx = downPx[0] - clickPx[0];\n    const dy = downPx[1] - clickPx[1];\n    const squaredDistance = dx * dx + dy * dy;\n    this.shouldHandle_ = this.freehand_ ?\n      squaredDistance > this.squaredClickTolerance_ :\n      squaredDistance <= this.squaredClickTolerance_;\n    if (!this.shouldHandle_) {\n      return true;\n    }\n  }\n\n  if (this.finishCoordinate_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * Determine if an event is within the snapping tolerance of the start coord.\n * @param {module:ol/MapBrowserEvent} event Event.\n * @return {boolean} The event is within the snapping tolerance of the start.\n * @private\n */\nDraw.prototype.atFinish_ = function(event) {\n  let at = false;\n  if (this.sketchFeature_) {\n    let potentiallyDone = false;\n    let potentiallyFinishCoordinates = [this.finishCoordinate_];\n    if (this.mode_ === Mode.LINE_STRING) {\n      potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n    } else if (this.mode_ === Mode.POLYGON) {\n      potentiallyDone = this.sketchCoords_[0].length >\n          this.minPoints_;\n      potentiallyFinishCoordinates = [this.sketchCoords_[0][0],\n        this.sketchCoords_[0][this.sketchCoords_[0].length - 2]];\n    }\n    if (potentiallyDone) {\n      const map = event.map;\n      for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n        const finishCoordinate = potentiallyFinishCoordinates[i];\n        const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n        const pixel = event.pixel;\n        const dx = pixel[0] - finishPixel[0];\n        const dy = pixel[1] - finishPixel[1];\n        const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n        at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n        if (at) {\n          this.finishCoordinate_ = finishCoordinate;\n          break;\n        }\n      }\n    }\n  }\n  return at;\n};\n\n\n/**\n * @param {module:ol/MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (!this.sketchPoint_) {\n    this.sketchPoint_ = new Feature(new Point(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = /** @type {module:ol/geom/Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Start the drawing.\n * @param {module:ol/MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.finishCoordinate_ = start;\n  if (this.mode_ === Mode.POINT) {\n    this.sketchCoords_ = start.slice();\n  } else if (this.mode_ === Mode.POLYGON) {\n    this.sketchCoords_ = [[start.slice(), start.slice()]];\n    this.sketchLineCoords_ = this.sketchCoords_[0];\n  } else {\n    this.sketchCoords_ = [start.slice(), start.slice()];\n  }\n  if (this.sketchLineCoords_) {\n    this.sketchLine_ = new Feature(\n      new LineString(this.sketchLineCoords_));\n  }\n  const geometry = this.geometryFunction_(this.sketchCoords_);\n  this.sketchFeature_ = new Feature();\n  if (this.geometryName_) {\n    this.sketchFeature_.setGeometryName(this.geometryName_);\n  }\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {module:ol/MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.modifyDrawing_ = function(event) {\n  let coordinate = event.coordinate;\n  const geometry = /** @type {module:ol/geom/SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, last;\n  if (this.mode_ === Mode.POINT) {\n    last = this.sketchCoords_;\n  } else if (this.mode_ === Mode.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    last = coordinates[coordinates.length - 1];\n    if (this.atFinish_(event)) {\n      // snap to finish\n      coordinate = this.finishCoordinate_.slice();\n    }\n  } else {\n    coordinates = this.sketchCoords_;\n    last = coordinates[coordinates.length - 1];\n  }\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  this.geometryFunction_(/** @type {!Array.<module:ol/coordinate~Coordinate>} */ (this.sketchCoords_), geometry);\n  if (this.sketchPoint_) {\n    const sketchPointGeom = /** @type {module:ol/geom/Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinate);\n  }\n  let sketchLineGeom;\n  if (geometry instanceof Polygon &&\n      this.mode_ !== Mode.POLYGON) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature(new LineString(null));\n    }\n    const ring = geometry.getLinearRing(0);\n    sketchLineGeom = /** @type {module:ol/geom/LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setFlatCoordinates(\n      ring.getLayout(), ring.getFlatCoordinates());\n  } else if (this.sketchLineCoords_) {\n    sketchLineGeom = /** @type {module:ol/geom/LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n  }\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Add a new coordinate to the drawing.\n * @param {module:ol/MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.addToDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = /** @type {module:ol/geom/SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let done;\n  let coordinates;\n  if (this.mode_ === Mode.LINE_STRING) {\n    this.finishCoordinate_ = coordinate.slice();\n    coordinates = this.sketchCoords_;\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Mode.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    if (done) {\n      this.finishCoordinate_ = coordinates[0];\n    }\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n  this.updateSketchFeatures_();\n  if (done) {\n    this.finishDrawing();\n  }\n};\n\n\n/**\n * Remove last point of the feature currently being drawn.\n * @api\n */\nDraw.prototype.removeLastPoint = function() {\n  if (!this.sketchFeature_) {\n    return;\n  }\n  const geometry = /** @type {module:ol/geom/SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, sketchLineGeom;\n  if (this.mode_ === Mode.LINE_STRING) {\n    coordinates = this.sketchCoords_;\n    coordinates.splice(-2, 1);\n    this.geometryFunction_(coordinates, geometry);\n    if (coordinates.length >= 2) {\n      this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n    }\n  } else if (this.mode_ === Mode.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    coordinates.splice(-2, 1);\n    sketchLineGeom = /** @type {module:ol/geom/LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(coordinates);\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n\n  if (coordinates.length === 0) {\n    this.finishCoordinate_ = null;\n  }\n\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n * dispatched before inserting the feature.\n * @api\n */\nDraw.prototype.finishDrawing = function() {\n  const sketchFeature = this.abortDrawing_();\n  if (!sketchFeature) {\n    return;\n  }\n  let coordinates = this.sketchCoords_;\n  const geometry = /** @type {module:ol/geom/SimpleGeometry} */ (sketchFeature.getGeometry());\n  if (this.mode_ === Mode.LINE_STRING) {\n    // remove the redundant last point\n    coordinates.pop();\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Mode.POLYGON) {\n    // remove the redundant last point in ring\n    coordinates[0].pop();\n    this.geometryFunction_(coordinates, geometry);\n    coordinates = geometry.getCoordinates();\n  }\n\n  // cast multi-part geometries\n  if (this.type_ === GeometryType.MULTI_POINT) {\n    sketchFeature.setGeometry(new MultiPoint([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n    sketchFeature.setGeometry(new MultiLineString([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n    sketchFeature.setGeometry(new MultiPolygon([coordinates]));\n  }\n\n  // First dispatch event to allow full set up of feature\n  this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n  // Then insert feature\n  if (this.features_) {\n    this.features_.push(sketchFeature);\n  }\n  if (this.source_) {\n    this.source_.addFeature(sketchFeature);\n  }\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {module:ol/Feature} The sketch feature (or null if none).\n * @private\n */\nDraw.prototype.abortDrawing_ = function() {\n  this.finishCoordinate_ = null;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * Extend an existing geometry by adding additional points. This only works\n * on features with `LineString` geometries, where the interaction will\n * extend lines by adding points to the end of the coordinates array.\n * @param {!module:ol/Feature} feature Feature to be extended.\n * @api\n */\nDraw.prototype.extend = function(feature) {\n  const geometry = feature.getGeometry();\n  const lineString = /** @type {module:ol/geom/LineString} */ (geometry);\n  this.sketchFeature_ = feature;\n  this.sketchCoords_ = lineString.getCoordinates();\n  const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n  this.finishCoordinate_ = last.slice();\n  this.sketchCoords_.push(last.slice());\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * Redraw the sketch features.\n * @private\n */\nDraw.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchLine_) {\n    sketchFeatures.push(this.sketchLine_);\n  }\n  if (this.sketchPoint_) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const overlaySource = this.overlay_.getSource();\n  overlaySource.clear(true);\n  overlaySource.addFeatures(sketchFeatures);\n};\n\n\n/**\n * @private\n */\nDraw.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (!map || !active) {\n    this.abortDrawing_();\n  }\n  this.overlay_.setMap(active ? map : null);\n};\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `module:ol/geom/Circle~Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {module:ol/interaction/Draw~GeometryFunction} Function that draws a\n *     polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n  return function(coordinates, opt_geometry) {\n    const center = coordinates[0];\n    const end = coordinates[1];\n    const radius = Math.sqrt(\n      squaredCoordinateDistance(center, end));\n    const geometry = opt_geometry ? /** @type {module:ol/geom/Polygon} */ (opt_geometry) :\n      fromCircle(new Circle(center), opt_sides);\n    const angle = opt_angle ? opt_angle :\n      Math.atan((end[1] - center[1]) / (end[0] - center[0]));\n    makeRegular(geometry, center, radius, angle);\n    return geometry;\n  };\n}\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {module:ol/interaction/Draw~GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return (\n    function(coordinates, opt_geometry) {\n      const extent = boundingExtent(coordinates);\n      const geometry = opt_geometry || new Polygon(null);\n      geometry.setCoordinates([[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]]);\n      return geometry;\n    }\n  );\n}\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {module:ol/geom/GeometryType} type Geometry type.\n * @return {module:ol/interaction/Draw~Mode} Drawing mode.\n */\nfunction getMode(type) {\n  let mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Mode.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Mode.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Mode.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Mode.CIRCLE;\n  }\n  return (\n    /** @type {!module:ol/interaction/Draw~Mode} */ (mode)\n  );\n}\n\n\nexport default Draw;\n","/**\n * @module ol/MapBrowserPointerEvent\n */\nimport {inherits} from './index.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\n\n/**\n * @constructor\n * @extends {module:ol/MapBrowserEvent}\n * @param {string} type Event type.\n * @param {module:ol/PluggableMap} map Map.\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @param {boolean=} opt_dragging Is the map currently being dragged?\n * @param {?module:ol/PluggableMap~FrameState=} opt_frameState Frame state.\n */\nconst MapBrowserPointerEvent = function(type, map, pointerEvent, opt_dragging,\n  opt_frameState) {\n\n  MapBrowserEvent.call(this, type, map, pointerEvent.originalEvent, opt_dragging,\n    opt_frameState);\n\n  /**\n   * @const\n   * @type {module:ol/pointer/PointerEvent}\n   */\n  this.pointerEvent = pointerEvent;\n\n};\n\ninherits(MapBrowserPointerEvent, MapBrowserEvent);\nexport default MapBrowserPointerEvent;\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n","/**\n * @module ol/OverlayPositioning\n */\n\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_CENTER: 'bottom-center',\n  BOTTOM_RIGHT: 'bottom-right',\n  CENTER_LEFT: 'center-left',\n  CENTER_CENTER: 'center-center',\n  CENTER_RIGHT: 'center-right',\n  TOP_LEFT: 'top-left',\n  TOP_CENTER: 'top-center',\n  TOP_RIGHT: 'top-right'\n};\n","/**\n * @module ol/style/Fill\n */\nimport {getUid} from '../index.js';\nimport {asString} from '../color.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/color~Color|module:ol/colorlike~ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n\n/**\n * @classdesc\n * Set fill style for vector features.\n *\n * @constructor\n * @param {module:ol/style/Fill~Options=} opt_options Options.\n * @api\n */\nconst Fill = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {module:ol/color~Color|module:ol/colorlike~ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n * @return {module:ol/style/Fill} The cloned style.\n * @api\n */\nFill.prototype.clone = function() {\n  const color = this.getColor();\n  return new Fill({\n    color: (color && color.slice) ? color.slice() : color || undefined\n  });\n};\n\n\n/**\n * Get the fill color.\n * @return {module:ol/color~Color|module:ol/colorlike~ColorLike} Color.\n * @api\n */\nFill.prototype.getColor = function() {\n  return this.color_;\n};\n\n\n/**\n * Set the color.\n *\n * @param {module:ol/color~Color|module:ol/colorlike~ColorLike} color Color.\n * @api\n */\nFill.prototype.setColor = function(color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * @return {string} The checksum.\n */\nFill.prototype.getChecksum = function() {\n  if (this.checksum_ === undefined) {\n    if (\n      this.color_ instanceof CanvasPattern ||\n        this.color_ instanceof CanvasGradient\n    ) {\n      this.checksum_ = getUid(this.color_).toString();\n    } else {\n      this.checksum_ = 'f' + (this.color_ ? asString(this.color_) : '-');\n    }\n  }\n\n  return this.checksum_;\n};\nexport default Fill;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i], t);\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(\n      flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(\n      flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array.<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index += stride * Math.max(\n        ((Math.sqrt(squaredDistance) -\n            Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array.<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates, offset, end, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array.<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset,\n  endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates, offset, ends, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/format/GML3\n */\nimport {inherits} from '../index.js';\nimport {extend} from '../array.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase, {GMLNS} from '../format/GMLBase.js';\nimport {readNonNegativeIntegerString, writeStringTextNode} from '../format/xsd.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport {createElementNS, getAllTextContent, makeArrayPusher, makeChildAppender,\n  makeReplacer, makeSimpleNodeFactory, OBJECT_PROPERTY_NODE_FACTORY, parseNode,\n  pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI} from '../xml.js';\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nconst schemaLocation = GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @constructor\n * @param {module:ol/format/GMLBase~Options=} opt_options\n *     Optional configuration object.\n * @extends {module:ol/format/GMLBase}\n * @api\n */\nconst GML3 = function(opt_options) {\n  const options = /** @type {module:ol/format/GMLBase~Options} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.surface_ = options.surface !== undefined ? options.surface : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.curve_ = options.curve !== undefined ? options.curve : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiCurve_ = options.multiCurve !== undefined ?\n    options.multiCurve : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multiSurface_ = options.multiSurface !== undefined ?\n    options.multiSurface : true;\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : schemaLocation;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hasZ = options.hasZ !== undefined ?\n    options.hasZ : false;\n\n};\n\ninherits(GML3, GMLBase);\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {module:ol/geom/MultiLineString|undefined} MultiLineString.\n */\nGML3.prototype.readMultiCurve_ = function(node, objectStack) {\n  /** @type {Array.<module:ol/geom/LineString>} */\n  const lineStrings = pushParseAndPop([],\n    this.MULTICURVE_PARSERS_, node, objectStack, this);\n  if (lineStrings) {\n    const multiLineString = new MultiLineString(null);\n    multiLineString.setLineStrings(lineStrings);\n    return multiLineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {module:ol/geom/MultiPolygon|undefined} MultiPolygon.\n */\nGML3.prototype.readMultiSurface_ = function(node, objectStack) {\n  /** @type {Array.<module:ol/geom/Polygon>} */\n  const polygons = pushParseAndPop([],\n    this.MULTISURFACE_PARSERS_, node, objectStack, this);\n  if (polygons) {\n    const multiPolygon = new MultiPolygon(null);\n    multiPolygon.setPolygons(polygons);\n    return multiPolygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.curveMemberParser_ = function(node, objectStack) {\n  parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.surfaceMemberParser_ = function(node, objectStack) {\n  parseNode(this.SURFACEMEMBER_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPatch_ = function(node, objectStack) {\n  return pushParseAndPop([null],\n    this.PATCHES_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readSegment_ = function(node, objectStack) {\n  return pushParseAndPop([null],\n    this.SEGMENTS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<(Array.<number>)>|undefined} flat coordinates.\n */\nGML3.prototype.readPolygonPatch_ = function(node, objectStack) {\n  return pushParseAndPop([null],\n    this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} flat coordinates.\n */\nGML3.prototype.readLineStringSegment_ = function(node, objectStack) {\n  return pushParseAndPop([null],\n    this.GEOMETRY_FLAT_COORDINATES_PARSERS_,\n    node, objectStack, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.interiorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML3.prototype.exteriorParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {module:ol/geom/Polygon|undefined} Polygon.\n */\nGML3.prototype.readSurface_ = function(node, objectStack) {\n  /** @type {Array.<Array.<number>>} */\n  const flatLinearRings = pushParseAndPop([null],\n    this.SURFACE_PARSERS_, node, objectStack, this);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    let i, ii;\n    for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(\n      GeometryLayout.XYZ, flatCoordinates, ends);\n    return polygon;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {module:ol/geom/LineString|undefined} LineString.\n */\nGML3.prototype.readCurve_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = pushParseAndPop([null],\n    this.CURVE_PARSERS_, node, objectStack, this);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    return lineString;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {module:ol/extent~Extent|undefined} Envelope.\n */\nGML3.prototype.readEnvelope_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = pushParseAndPop([null],\n    this.ENVELOPE_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[2][0],\n    flatCoordinates[2][1]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPos_ = function(node, objectStack) {\n  let s = getAllTextContent(node, false);\n  const re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n  /** @type {Array.<number>} */\n  const flatCoordinates = [];\n  let m;\n  while ((m = re.exec(s))) {\n    flatCoordinates.push(parseFloat(m[1]));\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  if (axisOrientation === 'neu') {\n    let i, ii;\n    for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n      const y = flatCoordinates[i];\n      const x = flatCoordinates[i + 1];\n      flatCoordinates[i] = x;\n      flatCoordinates[i + 1] = y;\n    }\n  }\n  const len = flatCoordinates.length;\n  if (len == 2) {\n    flatCoordinates.push(0);\n  }\n  if (len === 0) {\n    return undefined;\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML3.prototype.readFlatPosList_ = function(node, objectStack) {\n  const s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = objectStack[0];\n  const containerSrs = context['srsName'];\n  const contextDimension = context['srsDimension'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    axisOrientation = proj.getAxisOrientation();\n  }\n  const coords = s.split(/\\s+/);\n  // The \"dimension\" attribute is from the GML 3.0.1 spec.\n  let dim = 2;\n  if (node.getAttribute('srsDimension')) {\n    dim = readNonNegativeIntegerString(\n      node.getAttribute('srsDimension'));\n  } else if (node.getAttribute('dimension')) {\n    dim = readNonNegativeIntegerString(\n      node.getAttribute('dimension'));\n  } else if (node.parentNode.getAttribute('srsDimension')) {\n    dim = readNonNegativeIntegerString(\n      node.parentNode.getAttribute('srsDimension'));\n  } else if (contextDimension) {\n    dim = readNonNegativeIntegerString(contextDimension);\n  }\n  let x, y, z;\n  const flatCoordinates = [];\n  for (let i = 0, ii = coords.length; i < ii; i += dim) {\n    x = parseFloat(coords[i]);\n    y = parseFloat(coords[i + 1]);\n    z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pos': makeReplacer(GML3.prototype.readFlatPos_),\n    'posList': makeReplacer(GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser_,\n    'exterior': GML3.prototype.exteriorParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Surface': makeReplacer(GML3.prototype.readSurface_),\n    'MultiSurface': makeReplacer(\n      GML3.prototype.readMultiSurface_),\n    'Curve': makeReplacer(GML3.prototype.readCurve_),\n    'MultiCurve': makeReplacer(\n      GML3.prototype.readMultiCurve_),\n    'Envelope': makeReplacer(GML3.prototype.readEnvelope_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.MULTICURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'curveMember': makeArrayPusher(\n      GML3.prototype.curveMemberParser_),\n    'curveMembers': makeArrayPusher(\n      GML3.prototype.curveMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.MULTISURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_),\n    'surfaceMembers': makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(\n      GMLBase.prototype.readLineString),\n    'Curve': makeArrayPusher(GML3.prototype.readCurve_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': makeArrayPusher(GML3.prototype.readSurface_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.SURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'patches': makeReplacer(GML3.prototype.readPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.CURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'segments': makeReplacer(GML3.prototype.readSegment_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.ENVELOPE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeArrayPusher(\n      GML3.prototype.readFlatPosList_),\n    'upperCorner': makeArrayPusher(\n      GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.PATCHES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': makeReplacer(\n      GML3.prototype.readPolygonPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.SEGMENTS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': makeReplacer(\n      GML3.prototype.readLineStringSegment_)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/Point} value Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePos_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  let axisOrientation = 'enu';\n  if (srsName) {\n    axisOrientation = getProjection(srsName).getAxisOrientation();\n  }\n  const point = value.getCoordinates();\n  let coords;\n  // only 2d for simple features profile\n  if (axisOrientation.substr(0, 2) === 'en') {\n    coords = (point[0] + ' ' + point[1]);\n  } else {\n    coords = (point[1] + ' ' + point[0]);\n  }\n  if (hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n  writeStringTextNode(node, coords);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML3.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ' ' + point[1] :\n    point[1] + ' ' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ' ' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/LineString|module:ol/geom/LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePosList_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsDimension = hasZ ? 3 : 2;\n  node.setAttribute('srsDimension', srsDimension);\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  let point;\n  for (let i = 0; i < len; ++i) {\n    point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const pos = createElementNS(node.namespaceURI, 'pos');\n  node.appendChild(pos);\n  this.writePos_(pos, geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n    ({node: node}), this.ENVELOPE_SERIALIZERS_,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const posList = createElementNS(node.namespaceURI, 'posList');\n  node.appendChild(posList);\n  this.writePosList_(posList, geometry, objectStack);\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML3.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'interior' : 'exterior');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      this.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const posList = createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    this.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiPoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  const hasZ = context['hasZ'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    this.POINTMEMBER_SERIALIZERS_,\n    makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    this.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = createElementNS(node.namespaceURI,\n    'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/Geometry|module:ol/extent~Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {module:ol/format/Feature~WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {module:ol/geom/Geometry} */ (geometry), true, context);\n  }\n  pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n    (item), this.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML3.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = makeChildAppender(writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n    (item), context.serializers,\n    makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML3.prototype.writeFeatureMembers_ = function(node, features, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const serializers = {};\n  serializers[featureNS] = {};\n  serializers[featureNS][featureType] = makeChildAppender(\n    this.writeFeatureElement, this);\n  const item = assign({}, context);\n  item.node = node;\n  pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n    (item),\n    serializers,\n    makeSimpleNodeFactory(featureType, featureNS), features,\n    objectStack);\n};\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nconst MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return createElementNS('http://www.opengis.net/gml',\n    MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]);\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML3.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const curve = context['curve'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {module:ol/geom/Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'LineString' && curve === true) {\n      nodeName = 'Curve';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * Encode a geometry in GML 3.1.1 Simple Features.\n *\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeGeometryNode = function(geometry, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const geom = createElementNS('http://www.opengis.net/gml', 'geom');\n  const context = {node: geom, hasZ: this.hasZ, srsName: this.srsName,\n    curve: this.curve_, surface: this.surface_,\n    multiSurface: this.multiSurface_, multiCurve: this.multiCurve_};\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeGeometryElement(geom, geometry, [context]);\n  return geom;\n};\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGML3.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const node = createElementNS('http://www.opengis.net/gml', 'featureMembers');\n  node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', this.schemaLocation);\n  const context = {\n    srsName: this.srsName,\n    hasZ: this.hasZ,\n    curve: this.curve_,\n    surface: this.surface_,\n    multiSurface: this.multiSurface_,\n    multiCurve: this.multiCurve_,\n    featureNS: this.featureNS,\n    featureType: this.featureType\n  };\n  if (opt_options) {\n    assign(context, opt_options);\n  }\n  this.writeFeatureMembers_(node, features, [context]);\n  return node;\n};\n\n\n/**\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML3.prototype.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'exterior': makeChildAppender(GML3.prototype.writeRing_),\n    'interior': makeChildAppender(GML3.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML3.prototype.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML3.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML3.prototype.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(\n      GML3.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML3.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_),\n    'curveMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML3.prototype.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiCurve': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'Point': makeChildAppender(GML3.prototype.writePoint_),\n    'MultiPoint': makeChildAppender(\n      GML3.prototype.writeMultiPoint_),\n    'LineString': makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiLineString': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': makeChildAppender(\n      GML3.prototype.writeLinearRing_),\n    'Polygon': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': makeChildAppender(\n      GML3.prototype.writeEnvelope)\n  }\n};\n\n\nexport default GML3;\n","/**\n * @module ol/format/GML\n */\nimport GML3 from '../format/GML3.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @constructor\n * @param {module:ol/format/GMLBase~Options=} opt_options\n *     Optional configuration object.\n * @extends {module:ol/format/GMLBase}\n * @api\n */\nconst GML = GML3;\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @function\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @api\n */\nGML.prototype.writeFeaturesNode;\n\nexport default GML;\n","/**\n * @module ol/format/WFS\n */\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport GML2 from '../format/GML2.js';\nimport GML3 from '../format/GML3.js';\nimport GMLBase, {GMLNS} from '../format/GMLBase.js';\nimport {and as andFilter, bbox as bboxFilter} from '../format/filter.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {readNonNegativeIntegerString, readNonNegativeInteger, writeStringTextNode} from '../format/xsd.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport {createElementNS, isDocument, isNode, makeArrayPusher, makeChildAppender,\n  makeObjectPropertySetter, makeSimpleNodeFactory, parse, parseNode,\n  pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI} from '../xml.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Object.<string, string>|string} [featureNS] The namespace URI used for features.\n * @property {Array.<string>|string} [featureType] The feature type to parse. Only used for read operations.\n * @property {module:ol/format/GMLBase} [gmlFormat] The GML format to use to parse the response. Default is `ol/format/GML3`.\n * @property {string} [schemaLocation] Optional schemaLocation to use for serialization, this will override the default.\n */\n\n\n/**\n * @typedef {Object} WriteGetFeatureOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {Array.<string>} featureTypes The feature type names.\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {string} [outputFormat] Output format.\n * @property {number} [maxFeatures] Maximum number of features to fetch.\n * @property {string} [geometryName] Geometry name to use in a BBOX filter.\n * @property {Array.<string>} [propertyNames] Optional list of property names to serialize.\n * @property {number} [startIndex] Start index to use for WFS paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services.\n * @property {number} [count] Number of features to retrieve when paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services. Please note that some\n * Web Feature Services have repurposed `maxfeatures` instead.\n * @property {module:ol/extent~Extent} [bbox] Extent to use for the BBOX filter.\n * @property {module:ol/format/filter/Filter} [filter] Filter condition. See\n * {@link module:ol/format/Filter} for more information.\n * @property {string} [resultType] Indicates what response should be returned,\n * E.g. `hits` only includes the `numberOfFeatures` attribute in the response and no features.\n */\n\n\n/**\n * @typedef {Object} WriteTransactionOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {string} featureType The feature type name.\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {boolean} [hasZ] Must be set to true if the transaction is for\n * a 3D layer. This will allow the Z coordinate to be included in the transaction.\n * @property {Array.<Object>} nativeElements Native elements. Currently not supported.\n * @property {module:ol/format/GMLBase~Options} [gmlOptions] GML options for the WFS transaction writer.\n * @property {string} [version='1.1.0'] WFS version to use for the transaction. Can be either `1.0.0` or `1.1.0`.\n */\n\n\n/**\n * Number of features; bounds/extent.\n * @typedef {Object} FeatureCollectionMetadata\n * @property {number} numberOfFeatures\n * @property {module:ol/extent~Extent} bounds\n */\n\n\n/**\n * Total deleted; total inserted; total updated; array of insert ids.\n * @typedef {Object} TransactionResponse\n * @property {number} totalDeleted\n * @property {number} totalInserted\n * @property {number} totalUpdated\n * @property {Array.<string>} insertIds\n */\n\n\n/**\n * @type {string}\n */\nconst FEATURE_PREFIX = 'feature';\n\n\n/**\n * @type {string}\n */\nconst XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n\n/**\n * @type {string}\n */\nconst OGCNS = 'http://www.opengis.net/ogc';\n\n\n/**\n * @type {string}\n */\nconst WFSNS = 'http://www.opengis.net/wfs';\n\n\n/**\n * @type {string}\n */\nconst FESNS = 'http://www.opengis.net/fes';\n\n\n/**\n * @type {Object.<string, string>}\n */\nconst SCHEMA_LOCATIONS = {\n  '1.1.0': 'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0': 'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n\n\n/**\n * @const\n * @type {string}\n */\nconst DEFAULT_VERSION = '1.1.0';\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\n * Also see {@link module:ol/format/GMLBase~GMLBase} which is used by this format.\n *\n * @constructor\n * @param {module:ol/format/WFS~Options=} opt_options Optional configuration object.\n * @extends {module:ol/format/XMLFeature}\n * @api\n */\nconst WFS = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {Array.<string>|string|undefined}\n   */\n  this.featureType_ = options.featureType;\n\n  /**\n   * @private\n   * @type {Object.<string, string>|string|undefined}\n   */\n  this.featureNS_ = options.featureNS;\n\n  /**\n   * @private\n   * @type {module:ol/format/GMLBase}\n   */\n  this.gmlFormat_ = options.gmlFormat ?\n    options.gmlFormat : new GML3();\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.schemaLocation_ = options.schemaLocation ?\n    options.schemaLocation : SCHEMA_LOCATIONS[DEFAULT_VERSION];\n\n  XMLFeature.call(this);\n};\n\ninherits(WFS, XMLFeature);\n\n\n/**\n * @return {Array.<string>|string|undefined} featureType\n */\nWFS.prototype.getFeatureType = function() {\n  return this.featureType_;\n};\n\n\n/**\n * @param {Array.<string>|string|undefined} featureType Feature type(s) to parse.\n */\nWFS.prototype.setFeatureType = function(featureType) {\n  this.featureType_ = featureType;\n};\n\n\n/**\n * Read all features from a WFS FeatureCollection.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nWFS.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const context = /** @type {module:ol/xml~NodeStackItem} */ ({\n    'featureType': this.featureType_,\n    'featureNS': this.featureNS_\n  });\n  assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n  const objectStack = [context];\n  this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLNS][\n    'featureMember'] =\n      makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n  let features = pushParseAndPop([],\n    this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n    objectStack, this.gmlFormat_);\n  if (!features) {\n    features = [];\n  }\n  return features;\n};\n\n\n/**\n * Read transaction response of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {module:ol/format/WFS~TransactionResponse|undefined} Transaction response.\n * @api\n */\nWFS.prototype.readTransactionResponse = function(source) {\n  if (isDocument(source)) {\n    return this.readTransactionResponseFromDocument(\n      /** @type {Document} */ (source));\n  } else if (isNode(source)) {\n    return this.readTransactionResponseFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = parse(source);\n    return this.readTransactionResponseFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Read feature collection metadata of the source.\n *\n * @param {Document|Node|Object|string} source Source.\n * @return {module:ol/format/WFS~FeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n * @api\n */\nWFS.prototype.readFeatureCollectionMetadata = function(source) {\n  if (isDocument(source)) {\n    return this.readFeatureCollectionMetadataFromDocument(\n      /** @type {Document} */ (source));\n  } else if (isNode(source)) {\n    return this.readFeatureCollectionMetadataFromNode(\n      /** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = parse(source);\n    return this.readFeatureCollectionMetadataFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {module:ol/format/WFS~FeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFeatureCollectionMetadataFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst FEATURE_COLLECTION_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': makeObjectPropertySetter(\n      GMLBase.prototype.readGeometryElement, 'bounds')\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {module:ol/format/WFS~FeatureCollectionMetadata|undefined}\n *     FeatureCollection metadata.\n */\nWFS.prototype.readFeatureCollectionMetadataFromNode = function(node) {\n  const result = {};\n  const value = readNonNegativeIntegerString(\n    node.getAttribute('numberOfFeatures'));\n  result['numberOfFeatures'] = value;\n  return pushParseAndPop(\n    /** @type {module:ol/format/WFS~FeatureCollectionMetadata} */ (result),\n    FEATURE_COLLECTION_PARSERS, node, [], this.gmlFormat_);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst TRANSACTION_SUMMARY_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': makeObjectPropertySetter(readNonNegativeInteger),\n    'totalUpdated': makeObjectPropertySetter(readNonNegativeInteger),\n    'totalDeleted': makeObjectPropertySetter(readNonNegativeInteger)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n */\nfunction readTransactionSummary(node, objectStack) {\n  return pushParseAndPop(\n    {}, TRANSACTION_SUMMARY_PARSERS, node, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst OGC_FID_PARSERS = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': makeArrayPusher(function(node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction fidParser(node, objectStack) {\n  parseNode(OGC_FID_PARSERS, node, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst INSERT_RESULTS_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'Feature': fidParser\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<string>|undefined} Insert results.\n */\nfunction readInsertResults(node, objectStack) {\n  return pushParseAndPop(\n    [], INSERT_RESULTS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst TRANSACTION_RESPONSE_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': makeObjectPropertySetter(\n      readTransactionSummary, 'transactionSummary'),\n    'InsertResults': makeObjectPropertySetter(\n      readInsertResults, 'insertIds')\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {module:ol/format/WFS~TransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readTransactionResponseFromNode(n);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {module:ol/format/WFS~TransactionResponse|undefined} Transaction response.\n */\nWFS.prototype.readTransactionResponseFromNode = function(node) {\n  return pushParseAndPop(\n    /** @type {module:ol/format/WFS~TransactionResponse} */({}),\n    TRANSACTION_RESPONSE_PARSERS, node, []);\n};\n\n\n/**\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst QUERY_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': makeChildAppender(writeStringTextNode)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeFeature(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const featureType = context['featureType'];\n  const featureNS = context['featureNS'];\n  const gmlVersion = context['gmlVersion'];\n  const child = createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeOgcFidFilter(node, fid, objectStack) {\n  const filter = createElementNS(OGCNS, 'Filter');\n  const child = createElementNS(OGCNS, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', fid);\n  node.appendChild(filter);\n}\n\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @returns {string} The value of the typeName property.\n */\nfunction getTypeName(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix : FEATURE_PREFIX;\n  const prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.indexOf(prefix) === 0) {\n    return featureType;\n  } else {\n    return prefix + featureType;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeDelete(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = getTypeName(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n\n/**\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst TRANSACTION_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Insert': makeChildAppender(writeFeature),\n    'Update': makeChildAppender(writeUpdate),\n    'Delete': makeChildAppender(writeDelete),\n    'Property': makeChildAppender(writeProperty),\n    'Native': makeChildAppender(writeNative)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeUpdate(node, feature, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  const featureType = context['featureType'];\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const typeName = getTypeName(featurePrefix, featureType);\n  const geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  const fid = feature.getId();\n  if (fid !== undefined) {\n    const keys = feature.getKeys();\n    const values = [];\n    for (let i = 0, ii = keys.length; i < ii; i++) {\n      const value = feature.get(keys[i]);\n      if (value !== undefined) {\n        let name = keys[i];\n        if (value instanceof Geometry) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */ (\n      {'gmlVersion': context['gmlVersion'], node: node,\n        'hasZ': context['hasZ'], 'srsName': context['srsName']}),\n    TRANSACTION_SERIALIZERS,\n    makeSimpleNodeFactory('Property'), values,\n    objectStack);\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeProperty(node, pair, objectStack) {\n  const name = createElementNS(WFSNS, 'Name');\n  const context = objectStack[objectStack.length - 1];\n  const gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    const value = createElementNS(WFSNS, 'Value');\n    node.appendChild(value);\n    if (pair.value instanceof Geometry) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      } else {\n        GML3.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      }\n    } else {\n      writeStringTextNode(value, pair.value);\n    }\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}}\n *     nativeElement The native element.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeNative(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', nativeElement.safeToIgnore);\n  }\n  if (nativeElement.value !== undefined) {\n    writeStringTextNode(node, nativeElement.value);\n  }\n}\n\n\n/**\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst GETFEATURE_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Query': makeChildAppender(writeQuery)\n  },\n  'http://www.opengis.net/ogc': {\n    'During': makeChildAppender(writeDuringFilter),\n    'And': makeChildAppender(writeLogicalFilter),\n    'Or': makeChildAppender(writeLogicalFilter),\n    'Not': makeChildAppender(writeNotFilter),\n    'BBOX': makeChildAppender(writeBboxFilter),\n    'Contains': makeChildAppender(writeContainsFilter),\n    'Intersects': makeChildAppender(writeIntersectsFilter),\n    'Within': makeChildAppender(writeWithinFilter),\n    'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n    'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n    'PropertyIsLike': makeChildAppender(writeIsLikeFilter)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} featureType Feature type.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeQuery(node, featureType, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featurePrefix = context['featurePrefix'];\n  const featureNS = context['featureNS'];\n  const propertyNames = context['propertyNames'];\n  const srsName = context['srsName'];\n  let typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = getTypeName(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  node.setAttribute('typeName', typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  }\n  const item = /** @type {module:ol/xml~NodeStackItem} */ (assign({}, context));\n  item.node = node;\n  pushSerializeAndPop(item,\n    QUERY_SERIALIZERS,\n    makeSimpleNodeFactory('PropertyName'), propertyNames,\n    objectStack);\n  const filter = context['filter'];\n  if (filter) {\n    const child = createElementNS(OGCNS, 'Filter');\n    node.appendChild(child);\n    writeFilterCondition(child, filter, objectStack);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/Filter} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeFilterCondition(node, filter, objectStack) {\n  /** @type {module:ol/xml~NodeStackItem} */\n  const item = {node: node};\n  pushSerializeAndPop(item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(filter.getTagName()),\n    [filter], objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/Bbox} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeBboxFilter(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  writeOgcPropertyName(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/Contains} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeContainsFilter(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  writeOgcPropertyName(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/Intersects} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeIntersectsFilter(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  writeOgcPropertyName(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/Within} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeWithinFilter(node, filter, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  writeOgcPropertyName(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/During} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeDuringFilter(node, filter, objectStack) {\n\n  const valueReference = createElementNS(FESNS, 'ValueReference');\n  writeStringTextNode(valueReference, filter.propertyName);\n  node.appendChild(valueReference);\n\n  const timePeriod = createElementNS(GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  const begin = createElementNS(GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  writeTimeInstant(begin, filter.begin);\n\n  const end = createElementNS(GMLNS, 'end');\n  timePeriod.appendChild(end);\n  writeTimeInstant(end, filter.end);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/LogicalNary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeLogicalFilter(node, filter, objectStack) {\n  /** @type {module:ol/xml~NodeStackItem} */\n  const item = {node: node};\n  const conditions = filter.conditions;\n  for (let i = 0, ii = conditions.length; i < ii; ++i) {\n    const condition = conditions[i];\n    pushSerializeAndPop(item,\n      GETFEATURE_SERIALIZERS,\n      makeSimpleNodeFactory(condition.getTagName()),\n      [condition], objectStack);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/Not} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeNotFilter(node, filter, objectStack) {\n  /** @type {module:ol/xml~NodeStackItem} */\n  const item = {node: node};\n  const condition = filter.condition;\n  pushSerializeAndPop(item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(condition.getTagName()),\n    [condition], objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/ComparisonBinary} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeComparisonFilter(node, filter, objectStack) {\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writeOgcPropertyName(node, filter.propertyName);\n  writeOgcLiteral(node, '' + filter.expression);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/IsNull} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeIsNullFilter(node, filter, objectStack) {\n  writeOgcPropertyName(node, filter.propertyName);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/IsBetween} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeIsBetweenFilter(node, filter, objectStack) {\n  writeOgcPropertyName(node, filter.propertyName);\n\n  const lowerBoundary = createElementNS(OGCNS, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  writeOgcLiteral(lowerBoundary, '' + filter.lowerBoundary);\n\n  const upperBoundary = createElementNS(OGCNS, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  writeOgcLiteral(upperBoundary, '' + filter.upperBoundary);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/IsLike} filter Filter.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeIsLikeFilter(node, filter, objectStack) {\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writeOgcPropertyName(node, filter.propertyName);\n  writeOgcLiteral(node, '' + filter.pattern);\n}\n\n\n/**\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n */\nfunction writeOgcExpression(tagName, node, value) {\n  const property = createElementNS(OGCNS, tagName);\n  writeStringTextNode(property, value);\n  node.appendChild(property);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writeOgcPropertyName(node, value) {\n  writeOgcExpression('PropertyName', node, value);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writeOgcLiteral(node, value) {\n  writeOgcExpression('Literal', node, value);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n */\nfunction writeTimeInstant(node, time) {\n  const timeInstant = createElementNS(GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  const timePosition = createElementNS(GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  writeStringTextNode(timePosition, time);\n}\n\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {module:ol/format/filter/Filter} filter Filter.\n * @return {Node} Result.\n * @api\n */\nexport function writeFilter(filter) {\n  const child = createElementNS(OGCNS, 'Filter');\n  writeFilterCondition(child, filter, []);\n  return child;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<string>} featureTypes Feature types.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeGetFeature(node, featureTypes, objectStack) {\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const item = /** @type {module:ol/xml~NodeStackItem} */ (assign({}, context));\n  item.node = node;\n  pushSerializeAndPop(item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory('Query'), featureTypes,\n    objectStack);\n}\n\n\n/**\n * Encode format as WFS `GetFeature` and return the Node.\n *\n * @param {module:ol/format/WFS~WriteGetFeatureOptions} options Options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeGetFeature = function(options) {\n  const node = createElementNS(WFSNS, 'GetFeature');\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', '1.1.0');\n  let filter;\n  if (options) {\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n    if (options.outputFormat) {\n      node.setAttribute('outputFormat', options.outputFormat);\n    }\n    if (options.maxFeatures !== undefined) {\n      node.setAttribute('maxFeatures', options.maxFeatures);\n    }\n    if (options.resultType) {\n      node.setAttribute('resultType', options.resultType);\n    }\n    if (options.startIndex !== undefined) {\n      node.setAttribute('startIndex', options.startIndex);\n    }\n    if (options.count !== undefined) {\n      node.setAttribute('count', options.count);\n    }\n    filter = options.filter;\n    if (options.bbox) {\n      assert(options.geometryName,\n        12); // `options.geometryName` must also be provided when `options.bbox` is set\n      const bbox = bboxFilter(\n        /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\n      if (filter) {\n        // if bbox and filter are both set, combine the two into a single filter\n        filter = andFilter(filter, bbox);\n      } else {\n        filter = bbox;\n      }\n    }\n  }\n  node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', this.schemaLocation_);\n  /** @type {module:ol/xml~NodeStackItem} */\n  const context = {\n    node: node,\n    'srsName': options.srsName,\n    'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n    'featurePrefix': options.featurePrefix,\n    'geometryName': options.geometryName,\n    'filter': filter,\n    'propertyNames': options.propertyNames ? options.propertyNames : []\n  };\n  assert(Array.isArray(options.featureTypes),\n    11); // `options.featureTypes` should be an Array\n  writeGetFeature(node, /** @type {!Array.<string>} */ (options.featureTypes), [context]);\n  return node;\n};\n\n\n/**\n * Encode format as WFS `Transaction` and return the Node.\n *\n * @param {Array.<module:ol/Feature>} inserts The features to insert.\n * @param {Array.<module:ol/Feature>} updates The features to update.\n * @param {Array.<module:ol/Feature>} deletes The features to delete.\n * @param {module:ol/format/WFS~WriteTransactionOptions} options Write options.\n * @return {Node} Result.\n * @api\n */\nWFS.prototype.writeTransaction = function(inserts, updates, deletes, options) {\n  const objectStack = [];\n  const node = createElementNS(WFSNS, 'Transaction');\n  const version = options.version ? options.version : DEFAULT_VERSION;\n  const gmlVersion = version === '1.0.0' ? 2 : 3;\n  node.setAttribute('service', 'WFS');\n  node.setAttribute('version', version);\n  let baseObj;\n  /** @type {module:ol/xml~NodeStackItem} */\n  let obj;\n  if (options) {\n    baseObj = options.gmlOptions ? options.gmlOptions : {};\n    if (options.handle) {\n      node.setAttribute('handle', options.handle);\n    }\n  }\n  const schemaLocation = SCHEMA_LOCATIONS[version];\n  node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', schemaLocation);\n  const featurePrefix = options.featurePrefix ? options.featurePrefix : FEATURE_PREFIX;\n  if (inserts) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    pushSerializeAndPop(obj,\n      TRANSACTION_SERIALIZERS,\n      makeSimpleNodeFactory('Insert'), inserts,\n      objectStack);\n  }\n  if (updates) {\n    obj = {node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n    assign(obj, baseObj);\n    pushSerializeAndPop(obj,\n      TRANSACTION_SERIALIZERS,\n      makeSimpleNodeFactory('Update'), updates,\n      objectStack);\n  }\n  if (deletes) {\n    pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    TRANSACTION_SERIALIZERS,\n    makeSimpleNodeFactory('Delete'), deletes,\n    objectStack);\n  }\n  if (options.nativeElements) {\n    pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n      'featureType': options.featureType, 'featurePrefix': featurePrefix,\n      'gmlVersion': gmlVersion, 'srsName': options.srsName},\n    TRANSACTION_SERIALIZERS,\n    makeSimpleNodeFactory('Native'), options.nativeElements,\n    objectStack);\n  }\n  return node;\n};\n\n\n/**\n * Read the projection from a WFS source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {?module:ol/proj/Projection} Projection.\n * @api\n */\nWFS.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readProjectionFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWFS.prototype.readProjectionFromNode = function(node) {\n  if (node.firstElementChild &&\n      node.firstElementChild.firstElementChild) {\n    node = node.firstElementChild.firstElementChild;\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (!(n.childNodes.length === 0 ||\n          (n.childNodes.length === 1 &&\n          n.firstChild.nodeType === 3))) {\n        const objectStack = [{}];\n        this.gmlFormat_.readGeometryElement(n, objectStack);\n        return getProjection(objectStack.pop().srsName);\n      }\n    }\n  }\n\n  return null;\n};\nexport default WFS;\n","/**\n * @module ol/format\n */\n\nexport {default as EsriJSON} from './format/EsriJSON.js';\nexport {default as GeoJSON} from './format/GeoJSON.js';\nexport {default as GML} from './format/GML.js';\nexport {default as GPX} from './format/GPX.js';\nexport {default as IGC} from './format/IGC.js';\nexport {default as KML} from './format/KML.js';\nexport {default as MVT} from './format/MVT.js';\nexport {default as OWS} from './format/OWS.js';\nexport {default as Polyline} from './format/Polyline.js';\nexport {default as TopoJSON} from './format/TopoJSON.js';\nexport {default as WFS} from './format/WFS.js';\nexport {default as WKT} from './format/WKT.js';\nexport {default as WMSCapabilities} from './format/WMSCapabilities.js';\nexport {default as WMSGetFeatureInfo} from './format/WMSGetFeatureInfo.js';\nexport {default as WMTSCapabilities} from './format/WMTSCapabilities.js';\n","/**\n * @module ol/format/KML\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport {extend, includes} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {readDecimal, readBoolean, readString, writeStringTextNode, writeCDATASection, writeDecimalTextNode, writeBooleanTextNode} from '../format/xsd.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {toRadians} from '../math.js';\nimport {get as getProjection} from '../proj.js';\nimport Fill from '../style/Fill.js';\nimport Icon from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport {createElementNS, getAllTextContent, isDocument, isNode, makeArrayExtender,\n  makeArrayPusher, makeChildAppender, makeObjectPropertySetter,\n  makeReplacer, makeSequence, makeSimpleNodeFactory, makeStructureNS,\n  OBJECT_PROPERTY_NODE_FACTORY, parse, parseNode, pushParseAndPop,\n  pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI} from '../xml.js';\n\n/**\n * @typedef {Object} Vec2\n * @property {number} x\n * @property {module:ol/style/IconAnchorUnits} xunits\n * @property {number} y\n * @property {module:ol/style/IconAnchorUnits} yunits\n * @property {module:ol/style/IconOrigin} origin\n */\n\n/**\n * @typedef {Object} GxTrackObject\n * @property {Array.<number>} flatCoordinates\n * @property {Array.<number>} whens\n */\n\n/**\n * @type {module:ol/color~Color}\n */\nlet DEFAULT_COLOR;\n\n/**\n * @type {module:ol/style/Fill}\n */\nlet DEFAULT_FILL_STYLE = null;\n\n/**\n * Get the default fill style (or null if not yet set).\n * @return {module:ol/style/Fill} The default fill style.\n */\nexport function getDefaultFillStyle() {\n  return DEFAULT_FILL_STYLE;\n}\n\n/**\n * @type {module:ol/size~Size}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR;\n\n/**\n * @type {module:ol/style/IconAnchorUnits}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n\n/**\n * @type {module:ol/style/IconAnchorUnits}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n\n/**\n * @type {module:ol/size~Size}\n */\nlet DEFAULT_IMAGE_STYLE_SIZE;\n\n/**\n * @type {string}\n */\nlet DEFAULT_IMAGE_STYLE_SRC;\n\n/**\n * @type {number}\n */\nlet DEFAULT_IMAGE_SCALE_MULTIPLIER;\n\n/**\n * @type {module:ol/style/Image}\n */\nlet DEFAULT_IMAGE_STYLE = null;\n\n/**\n * Get the default image style (or null if not yet set).\n * @return {module:ol/style/Image} The default image style.\n */\nexport function getDefaultImageStyle() {\n  return DEFAULT_IMAGE_STYLE;\n}\n\n/**\n * @type {string}\n */\nlet DEFAULT_NO_IMAGE_STYLE;\n\n/**\n * @type {module:ol/style/Stroke}\n */\nlet DEFAULT_STROKE_STYLE = null;\n\n/**\n * Get the default stroke style (or null if not yet set).\n * @return {module:ol/style/Stroke} The default stroke style.\n */\nexport function getDefaultStrokeStyle() {\n  return DEFAULT_STROKE_STYLE;\n}\n\n/**\n * @type {module:ol/style/Stroke}\n */\nlet DEFAULT_TEXT_STROKE_STYLE;\n\n/**\n * @type {module:ol/style/Text}\n */\nlet DEFAULT_TEXT_STYLE = null;\n\n/**\n * Get the default text style (or null if not yet set).\n * @return {module:ol/style/Text} The default text style.\n */\nexport function getDefaultTextStyle() {\n  return DEFAULT_TEXT_STYLE;\n}\n\n/**\n * @type {module:ol/style/Style}\n */\nlet DEFAULT_STYLE = null;\n\n/**\n * Get the default style (or null if not yet set).\n * @return {module:ol/style/Style} The default style.\n */\nexport function getDefaultStyle() {\n  return DEFAULT_STYLE;\n}\n\n/**\n * @type {Array.<module:ol/style/Style>}\n */\nlet DEFAULT_STYLE_ARRAY = null;\n\n/**\n * Get the default style array (or null if not yet set).\n * @return {Array.<module:ol/style/Style>} The default style.\n */\nexport function getDefaultStyleArray() {\n  return DEFAULT_STYLE_ARRAY;\n}\n\n\nfunction createStyleDefaults() {\n\n  DEFAULT_COLOR = [255, 255, 255, 1];\n\n  DEFAULT_FILL_STYLE = new Fill({\n    color: DEFAULT_COLOR\n  });\n\n  DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2]; // FIXME maybe [8, 32] ?\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = IconAnchorUnits.PIXELS;\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = IconAnchorUnits.PIXELS;\n\n  DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\n\n  DEFAULT_IMAGE_STYLE_SRC =\n      'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  DEFAULT_IMAGE_SCALE_MULTIPLIER = 0.5;\n\n  DEFAULT_IMAGE_STYLE = new Icon({\n    anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\n    anchorOrigin: IconOrigin.BOTTOM_LEFT,\n    anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n    anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: DEFAULT_IMAGE_SCALE_MULTIPLIER,\n    size: DEFAULT_IMAGE_STYLE_SIZE,\n    src: DEFAULT_IMAGE_STYLE_SRC\n  });\n\n  DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n\n  DEFAULT_STROKE_STYLE = new Stroke({\n    color: DEFAULT_COLOR,\n    width: 1\n  });\n\n  DEFAULT_TEXT_STROKE_STYLE = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2\n  });\n\n  DEFAULT_TEXT_STYLE = new Text({\n    font: 'bold 16px Helvetica',\n    fill: DEFAULT_FILL_STYLE,\n    stroke: DEFAULT_TEXT_STROKE_STYLE,\n    scale: 0.8\n  });\n\n  DEFAULT_STYLE = new Style({\n    fill: DEFAULT_FILL_STYLE,\n    image: DEFAULT_IMAGE_STYLE,\n    text: DEFAULT_TEXT_STYLE,\n    stroke: DEFAULT_STROKE_STYLE,\n    zIndex: 0\n  });\n\n  DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\n\n}\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array.<module:ol/style/Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @constructor\n * @extends {module:ol/format/XMLFeature}\n * @param {module:ol/format/KML~Options=} opt_options Options.\n * @api\n */\nconst KML = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  XMLFeature.call(this);\n\n  if (!DEFAULT_STYLE_ARRAY) {\n    createStyleDefaults();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  this.dataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @private\n   * @type {Array.<module:ol/style/Style>}\n   */\n  this.defaultStyle_ = options.defaultStyle ?\n    options.defaultStyle : DEFAULT_STYLE_ARRAY;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.extractStyles_ = options.extractStyles !== undefined ?\n    options.extractStyles : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.writeStyles_ = options.writeStyles !== undefined ?\n    options.writeStyles : true;\n\n  /**\n   * @private\n   * @type {!Object.<string, (Array.<module:ol/style/Style>|string)>}\n   */\n  this.sharedStyles_ = {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.showPointNames_ = options.showPointNames !== undefined ?\n    options.showPointNames : true;\n\n};\n\ninherits(KML, XMLFeature);\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst GX_NAMESPACE_URIS = [\n  'http://www.google.com/kml/ext/2.2'\n];\n\n\n/**\n * @const\n * @type {Array.<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2'\n];\n\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION = 'http://www.opengis.net/kml/2.2 ' +\n    'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n\n/**\n * @type {Object.<string, module:ol/style/IconAnchorUnits>}\n */\nconst ICON_ANCHOR_UNITS_MAP = {\n  'fraction': IconAnchorUnits.FRACTION,\n  'pixels': IconAnchorUnits.PIXELS,\n  'insetPixels': IconAnchorUnits.PIXELS\n};\n\n\n/**\n * @param {module:ol/style/Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {module:ol/style/Style} style Style.\n */\nfunction createNameStyleFunction(foundStyle, name) {\n  let textStyle = null;\n  const textOffset = [0, 0];\n  let textAlign = 'start';\n  if (foundStyle.getImage()) {\n    let imageSize = foundStyle.getImage().getImageSize();\n    if (imageSize === null) {\n      imageSize = DEFAULT_IMAGE_STYLE_SIZE;\n    }\n    if (imageSize.length == 2) {\n      const imageScale = foundStyle.getImage().getScale();\n      // Offset the label to be centered to the right of the icon, if there is\n      // one.\n      textOffset[0] = imageScale * imageSize[0] / 2;\n      textOffset[1] = -imageScale * imageSize[1] / 2;\n      textAlign = 'left';\n    }\n  }\n  if (foundStyle.getText() !== null) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    const foundText = foundStyle.getText();\n    textStyle = foundText.clone();\n    textStyle.setFont(foundText.getFont() || DEFAULT_TEXT_STYLE.getFont());\n    textStyle.setScale(foundText.getScale() || DEFAULT_TEXT_STYLE.getScale());\n    textStyle.setFill(foundText.getFill() || DEFAULT_TEXT_STYLE.getFill());\n    textStyle.setStroke(foundText.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\n  } else {\n    textStyle = DEFAULT_TEXT_STYLE.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  const nameStyle = new Style({\n    text: textStyle\n  });\n  return nameStyle;\n}\n\n\n/**\n * @param {Array.<module:ol/style/Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array.<module:ol/style/Style>} defaultStyle Default style.\n * @param {!Object.<string, (Array.<module:ol/style/Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {module:ol/style/Style~StyleFunction} Feature style function.\n */\nfunction createFeatureStyleFunction(style, styleUrl, defaultStyle, sharedStyles, showPointNames) {\n\n  return (\n    /**\n     * @param {module:ol/Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array.<module:ol/style/Style>} Style.\n     */\n    function(feature, resolution) {\n      let drawName = showPointNames;\n      /** @type {module:ol/style/Style|undefined} */\n      let nameStyle;\n      let name = '';\n      if (drawName) {\n        const geometry = feature.getGeometry();\n        if (geometry) {\n          drawName = geometry.getType() === GeometryType.POINT;\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (feature.get('name'));\n        drawName = drawName && name;\n      }\n\n      if (style) {\n        if (drawName) {\n          nameStyle = createNameStyleFunction(style[0], name);\n          return style.concat(nameStyle);\n        }\n        return style;\n      }\n      if (styleUrl) {\n        const foundStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\n        if (drawName) {\n          nameStyle = createNameStyleFunction(foundStyle[0], name);\n          return foundStyle.concat(nameStyle);\n        }\n        return foundStyle;\n      }\n      if (drawName) {\n        nameStyle = createNameStyleFunction(defaultStyle[0], name);\n        return defaultStyle.concat(nameStyle);\n      }\n      return defaultStyle;\n    }\n  );\n}\n\n\n/**\n * @param {Array.<module:ol/style/Style>|string|undefined} styleValue Style value.\n * @param {Array.<module:ol/style/Style>} defaultStyle Default style.\n * @param {!Object.<string, (Array.<module:ol/style/Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array.<module:ol/style/Style>} Style.\n */\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  } else if (typeof styleValue === 'string') {\n    // KML files in the wild occasionally forget the leading `#` on styleUrls\n    // defined in the same document.  Add a leading `#` if it enables to find\n    // a style.\n    if (!(styleValue in sharedStyles) && ('#' + styleValue in sharedStyles)) {\n      styleValue = '#' + styleValue;\n    }\n    return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n  } else {\n    return defaultStyle;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {module:ol/color~Color|undefined} Color.\n */\nfunction readColor(node) {\n  const s = getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  const m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    const hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255\n    ];\n\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nexport function readFlatCoordinates(node) {\n  let s = getAllTextContent(node, false);\n  const flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  const re =\n      /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?))?\\s*/i;\n  let m;\n  while ((m = re.exec(s))) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readURI(node) {\n  const s = getAllTextContent(node, false).trim();\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {module:ol/format/KML~Vec2} Vec2.\n */\nfunction readVec2(node) {\n  const xunits = node.getAttribute('xunits');\n  const yunits = node.getAttribute('yunits');\n  let origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_LEFT;\n    } else {\n      origin = IconOrigin.TOP_LEFT;\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_RIGHT;\n    } else {\n      origin = IconOrigin.TOP_RIGHT;\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: ICON_ANCHOR_UNITS_MAP[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: ICON_ANCHOR_UNITS_MAP[yunits],\n    origin: origin\n  };\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */\nfunction readScale(node) {\n  return readDecimal(node);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst STYLE_MAP_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Pair': pairDataParser\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<module:ol/style/Style>|string|undefined} StyleMap.\n */\nfunction readStyleMapValue(node, objectStack) {\n  return pushParseAndPop(undefined,\n    STYLE_MAP_PARSERS, node, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst ICON_STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Icon': makeObjectPropertySetter(readIcon),\n    'heading': makeObjectPropertySetter(readDecimal),\n    'hotSpot': makeObjectPropertySetter(readVec2),\n    'scale': makeObjectPropertySetter(readScale)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction iconStyleParser(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  const object = pushParseAndPop(\n    {}, ICON_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const IconObject = 'Icon' in object ? object['Icon'] : {};\n  const drawIcon = (!('Icon' in object) || Object.keys(IconObject).length > 0);\n  let src;\n  const href = /** @type {string|undefined} */\n      (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = DEFAULT_IMAGE_STYLE_SRC;\n  }\n  let anchor, anchorXUnits, anchorYUnits;\n  let anchorOrigin = IconOrigin.BOTTOM_LEFT;\n  const hotSpot = /** @type {module:ol/format/KML~Vec2|undefined} */\n      (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (src === DEFAULT_IMAGE_STYLE_SRC) {\n    anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\n    anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n    anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n  } else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    anchor = [0.5, 0];\n    anchorXUnits = IconAnchorUnits.FRACTION;\n    anchorYUnits = IconAnchorUnits.FRACTION;\n  }\n\n  let offset;\n  const x = /** @type {number|undefined} */\n      (IconObject['x']);\n  const y = /** @type {number|undefined} */\n      (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  let size;\n  const w = /** @type {number|undefined} */\n      (IconObject['w']);\n  const h = /** @type {number|undefined} */\n      (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  let rotation;\n  const heading = /** @type {number} */\n      (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  let scale = /** @type {number|undefined} */\n      (object['scale']);\n\n  if (drawIcon) {\n    if (src == DEFAULT_IMAGE_STYLE_SRC) {\n      size = DEFAULT_IMAGE_STYLE_SIZE;\n      if (scale === undefined) {\n        scale = DEFAULT_IMAGE_SCALE_MULTIPLIER;\n      }\n    }\n\n    const imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: 'anonymous', // FIXME should this be configurable?\n      offset: offset,\n      offsetOrigin: IconOrigin.BOTTOM_LEFT,\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: src\n    });\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst LABEL_STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'scale': makeObjectPropertySetter(readScale)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction labelStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop(\n    {}, LABEL_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const textStyle = new Text({\n    fill: new Fill({\n      color: /** @type {module:ol/color~Color} */\n          ('color' in object ? object['color'] : DEFAULT_COLOR)\n    }),\n    scale: /** @type {number|undefined} */\n        (object['scale'])\n  });\n  styleObject['textStyle'] = textStyle;\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst LINE_STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'width': makeObjectPropertySetter(readDecimal)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction lineStyleParser(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  const object = pushParseAndPop(\n    {}, LINE_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const strokeStyle = new Stroke({\n    color: /** @type {module:ol/color~Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1)\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst POLY_STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'fill': makeObjectPropertySetter(readBoolean),\n    'outline': makeObjectPropertySetter(readBoolean)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction polyStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop(\n    {}, POLY_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const fillStyle = new Fill({\n    color: /** @type {module:ol/color~Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR)\n  });\n  styleObject['fillStyle'] = fillStyle;\n  const fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  const outline = /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst FLAT_LINEAR_RING_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'coordinates': makeReplacer(readFlatCoordinates)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<number>} LinearRing flat coordinates.\n */\nfunction readFlatLinearRing(node, objectStack) {\n  return pushParseAndPop(null,\n    FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction gxCoordParser(node, objectStack) {\n  const gxTrackObject = /** @type {module:ol/format/KML~GxTrackObject} */\n      (objectStack[objectStack.length - 1]);\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const s = getAllTextContent(node, false);\n  const re =\n      /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  const m = re.exec(s);\n  if (m) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = parseFloat(m[3]);\n    flatCoordinates.push(x, y, z, 0);\n  } else {\n    flatCoordinates.push(0, 0, 0, 0);\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(\n  GX_NAMESPACE_URIS, {\n    'Track': makeArrayPusher(readGxTrack)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/MultiLineString|undefined} MultiLineString.\n */\nfunction readGxMultiTrack(node, objectStack) {\n  const lineStrings = pushParseAndPop([],\n    GX_MULTITRACK_GEOMETRY_PARSERS, node, objectStack);\n  if (!lineStrings) {\n    return undefined;\n  }\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setLineStrings(lineStrings);\n  return multiLineString;\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst GX_TRACK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'when': whenParser\n  }, makeStructureNS(\n    GX_NAMESPACE_URIS, {\n      'coord': gxCoordParser\n    }));\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/LineString|undefined} LineString.\n */\nfunction readGxTrack(node, objectStack) {\n  const gxTrackObject = pushParseAndPop(\n    /** @type {module:ol/format/KML~GxTrackObject} */ ({\n      flatCoordinates: [],\n      whens: []\n    }), GX_TRACK_PARSERS, node, objectStack);\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const whens = gxTrackObject.whens;\n  for (let i = 0, ii = Math.min(flatCoordinates.length, whens.length); i < ii; ++i) {\n    flatCoordinates[4 * i + 3] = whens[i];\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(GeometryLayout.XYZM, flatCoordinates);\n  return lineString;\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst ICON_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'href': makeObjectPropertySetter(readURI)\n  }, makeStructureNS(\n    GX_NAMESPACE_URIS, {\n      'x': makeObjectPropertySetter(readDecimal),\n      'y': makeObjectPropertySetter(readDecimal),\n      'w': makeObjectPropertySetter(readDecimal),\n      'h': makeObjectPropertySetter(readDecimal)\n    }));\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */\nfunction readIcon(node, objectStack) {\n  const iconObject = pushParseAndPop(\n    {}, ICON_PARSERS, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  } else {\n    return null;\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'coordinates': makeReplacer(readFlatCoordinates)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<number>} Flat coordinates.\n */\nfunction readFlatCoordinatesFromNode(node, objectStack) {\n  return pushParseAndPop(null,\n    GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'extrude': makeObjectPropertySetter(readBoolean),\n    'tessellate': makeObjectPropertySetter(readBoolean),\n    'altitudeMode': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/LineString|undefined} LineString.\n */\nfunction readLineString(node, objectStack) {\n  const properties = pushParseAndPop({},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\n    objectStack);\n  const flatCoordinates =\n      readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    lineString.setProperties(properties);\n    return lineString;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/Polygon|undefined} Polygon.\n */\nfunction readLinearRing(node, objectStack) {\n  const properties = pushParseAndPop({},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\n    objectStack);\n  const flatCoordinates =\n      readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates,\n      [flatCoordinates.length]);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst MULTI_GEOMETRY_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LineString': makeArrayPusher(readLineString),\n    'LinearRing': makeArrayPusher(readLinearRing),\n    'MultiGeometry': makeArrayPusher(readMultiGeometry),\n    'Point': makeArrayPusher(readPoint),\n    'Polygon': makeArrayPusher(readPolygon)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/Geometry} Geometry.\n */\nfunction readMultiGeometry(node, objectStack) {\n  const geometries = pushParseAndPop([],\n    MULTI_GEOMETRY_PARSERS, node, objectStack);\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  /** @type {module:ol/geom/Geometry} */\n  let multiGeometry;\n  let homogeneous = true;\n  const type = geometries[0].getType();\n  let geometry;\n  for (let i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    let layout;\n    let flatCoordinates;\n    if (type == GeometryType.POINT) {\n      const point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (let i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(null);\n      multiGeometry.setFlatCoordinates(layout, flatCoordinates);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.LINE_STRING) {\n      multiGeometry = new MultiLineString(null);\n      multiGeometry.setLineStrings(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.POLYGON) {\n      multiGeometry = new MultiPolygon(null);\n      multiGeometry.setPolygons(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.GEOMETRY_COLLECTION) {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      assert(false, 37); // Unknown geometry type found\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return (\n    /** @type {module:ol/geom/Geometry} */ (multiGeometry)\n  );\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/Point|undefined} Point.\n */\nfunction readPoint(node, objectStack) {\n  const properties = pushParseAndPop({},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\n    objectStack);\n  const flatCoordinates =\n      readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    point.setProperties(properties);\n    return point;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'innerBoundaryIs': innerBoundaryIsParser,\n    'outerBoundaryIs': outerBoundaryIsParser\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/Polygon|undefined} Polygon.\n */\nfunction readPolygon(node, objectStack) {\n  const properties = pushParseAndPop(/** @type {Object<string,*>} */ ({}),\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\n    objectStack);\n  const flatLinearRings = pushParseAndPop([null],\n    FLAT_LINEAR_RINGS_PARSERS, node, objectStack);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    for (let i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates, ends);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'IconStyle': iconStyleParser,\n    'LabelStyle': labelStyleParser,\n    'LineStyle': lineStyleParser,\n    'PolyStyle': polyStyleParser\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<module:ol/style/Style>} Style.\n */\nfunction readStyle(node, objectStack) {\n  const styleObject = pushParseAndPop(\n    {}, STYLE_PARSERS, node, objectStack);\n  if (!styleObject) {\n    return null;\n  }\n  let fillStyle = /** @type {module:ol/style/Fill} */\n      ('fillStyle' in styleObject ?\n        styleObject['fillStyle'] : DEFAULT_FILL_STYLE);\n  const fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  let imageStyle = /** @type {module:ol/style/Image} */\n      ('imageStyle' in styleObject ?\n        styleObject['imageStyle'] : DEFAULT_IMAGE_STYLE);\n  if (imageStyle == DEFAULT_NO_IMAGE_STYLE) {\n    imageStyle = undefined;\n  }\n  const textStyle = /** @type {module:ol/style/Text} */\n      ('textStyle' in styleObject ?\n        styleObject['textStyle'] : DEFAULT_TEXT_STYLE);\n  let strokeStyle = /** @type {module:ol/style/Stroke} */\n      ('strokeStyle' in styleObject ?\n        styleObject['strokeStyle'] : DEFAULT_STROKE_STYLE);\n  const outline = /** @type {boolean|undefined} */\n      (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    strokeStyle = null;\n  }\n  return [new Style({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle,\n    zIndex: undefined // FIXME\n  })];\n}\n\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {module:ol/geom/MultiPoint|module:ol/geom/MultiLineString|module:ol/geom/MultiPolygon}\n *     multiGeometry A multi-geometry.\n * @param {Array.<module:ol/geom/Geometry>} geometries List of geometries.\n */\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\n  const ii = geometries.length;\n  const extrudes = new Array(geometries.length);\n  const tessellates = new Array(geometries.length);\n  const altitudeModes = new Array(geometries.length);\n  let hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = hasTessellate = hasAltitudeMode = false;\n  for (let i = 0; i < ii; ++i) {\n    const geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst DATA_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'displayName': makeObjectPropertySetter(readString),\n    'value': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction dataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  parseNode(DATA_PARSERS, node, objectStack);\n  const featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst EXTENDED_DATA_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Data': dataParser,\n    'SchemaData': schemaDataParser\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction extendedDataParser(node, objectStack) {\n  parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst REGION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LatLonAltBox': latLonAltBoxParser,\n    'Lod': lodParser\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction regionParser(node, objectStack) {\n  parseNode(REGION_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst PAIR_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Style': makeObjectPropertySetter(readStyle),\n    'key': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readURI)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction pairDataParser(node, objectStack) {\n  const pairObject = pushParseAndPop(\n    {}, PAIR_PARSERS, node, objectStack);\n  if (!pairObject) {\n    return;\n  }\n  const key = /** @type {string|undefined} */\n      (pairObject['key']);\n  if (key && key == 'normal') {\n    const styleUrl = /** @type {string|undefined} */\n        (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    const Style = /** @type {module:ol/style/Style} */\n        (pairObject['Style']);\n    if (Style) {\n      objectStack[objectStack.length - 1] = Style;\n    }\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction placemarkStyleMapParser(node, objectStack) {\n  const styleMapValue = readStyleMapValue(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  const placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    assert(false, 38); // `styleMapValue` has an unknown type\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst SCHEMA_DATA_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'SimpleData': simpleDataParser\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction schemaDataParser(node, objectStack) {\n  parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction simpleDataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (name !== null) {\n    const data = readString(node);\n    const featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    featureObject[name] = data;\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst LAT_LON_ALT_BOX_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'altitudeMode': makeObjectPropertySetter(readString),\n    'minAltitude': makeObjectPropertySetter(readDecimal),\n    'maxAltitude': makeObjectPropertySetter(readDecimal),\n    'north': makeObjectPropertySetter(readDecimal),\n    'south': makeObjectPropertySetter(readDecimal),\n    'east': makeObjectPropertySetter(readDecimal),\n    'west': makeObjectPropertySetter(readDecimal)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction latLonAltBoxParser(node, objectStack) {\n  const object = pushParseAndPop({}, LAT_LON_ALT_BOX_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const regionObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north'])\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst LOD_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'minLodPixels': makeObjectPropertySetter(readDecimal),\n    'maxLodPixels': makeObjectPropertySetter(readDecimal),\n    'minFadeExtent': makeObjectPropertySetter(readDecimal),\n    'maxFadeExtent': makeObjectPropertySetter(readDecimal)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction lodParser(node, objectStack) {\n  const object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst INNER_BOUNDARY_IS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LinearRing': makeReplacer(readFlatLinearRing)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction innerBoundaryIsParser(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(undefined,\n    INNER_BOUNDARY_IS_PARSERS, node, objectStack);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LinearRing': makeReplacer(readFlatLinearRing)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction outerBoundaryIsParser(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(undefined,\n    OUTER_BOUNDARY_IS_PARSERS, node, objectStack);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst NETWORK_LINK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'Link': linkParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'visibility': makeObjectPropertySetter(readBoolean)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst LINK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'href': makeObjectPropertySetter(readURI)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction linkParser(node, objectStack) {\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction whenParser(node, objectStack) {\n  const gxTrackObject = /** @type {module:ol/format/KML~GxTrackObject} */\n      (objectStack[objectStack.length - 1]);\n  const whens = gxTrackObject.whens;\n  const s = getAllTextContent(node, false);\n  const when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst PLACEMARK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'MultiGeometry': makeObjectPropertySetter(\n      readMultiGeometry, 'geometry'),\n    'LineString': makeObjectPropertySetter(\n      readLineString, 'geometry'),\n    'LinearRing': makeObjectPropertySetter(\n      readLinearRing, 'geometry'),\n    'Point': makeObjectPropertySetter(\n      readPoint, 'geometry'),\n    'Polygon': makeObjectPropertySetter(\n      readPolygon, 'geometry'),\n    'Style': makeObjectPropertySetter(readStyle),\n    'StyleMap': placemarkStyleMapParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readURI),\n    'visibility': makeObjectPropertySetter(readBoolean)\n  }, makeStructureNS(\n    GX_NAMESPACE_URIS, {\n      'MultiTrack': makeObjectPropertySetter(\n        readGxMultiTrack, 'geometry'),\n      'Track': makeObjectPropertySetter(\n        readGxTrack, 'geometry')\n    }\n  ));\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<module:ol/Feature>|undefined} Features.\n */\nKML.prototype.readDocumentOrFolder_ = function(node, objectStack) {\n  // FIXME use scope somehow\n  const parsersNS = makeStructureNS(\n    NAMESPACE_URIS, {\n      'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Placemark': makeArrayPusher(this.readPlacemark_, this),\n      'Style': this.readSharedStyle_.bind(this),\n      'StyleMap': this.readSharedStyleMap_.bind(this)\n    });\n  /** @type {Array.<module:ol/Feature>} */\n  const features = pushParseAndPop([], parsersNS, node, objectStack, this);\n  if (features) {\n    return features;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {module:ol/Feature|undefined} Feature.\n */\nKML.prototype.readPlacemark_ = function(node, objectStack) {\n  const object = pushParseAndPop({'geometry': null},\n    PLACEMARK_PARSERS, node, objectStack);\n  if (!object) {\n    return undefined;\n  }\n  const feature = new Feature();\n  const id = node.getAttribute('id');\n  if (id !== null) {\n    feature.setId(id);\n  }\n  const options = /** @type {module:ol/format/Feature~ReadOptions} */ (objectStack[0]);\n\n  const geometry = object['geometry'];\n  if (geometry) {\n    transformWithOptions(geometry, false, options);\n  }\n  feature.setGeometry(geometry);\n  delete object['geometry'];\n\n  if (this.extractStyles_) {\n    const style = object['Style'];\n    const styleUrl = object['styleUrl'];\n    const styleFunction = createFeatureStyleFunction(\n      style, styleUrl, this.defaultStyle_, this.sharedStyles_,\n      this.showPointNames_);\n    feature.setStyle(styleFunction);\n  }\n  delete object['Style'];\n  // we do not remove the styleUrl property from the object, so it\n  // gets stored on feature when setProperties is called\n\n  feature.setProperties(object);\n\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.prototype.readSharedStyle_ = function(node, objectStack) {\n  const id = node.getAttribute('id');\n  if (id !== null) {\n    const style = readStyle(node, objectStack);\n    if (style) {\n      let styleUri;\n      let baseURI = node.baseURI;\n      if (!baseURI || baseURI == 'about:blank') {\n        baseURI = window.location.href;\n      }\n      if (baseURI) {\n        const url = new URL('#' + id, baseURI);\n        styleUri = url.href;\n      } else {\n        styleUri = '#' + id;\n      }\n      this.sharedStyles_[styleUri] = style;\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.prototype.readSharedStyleMap_ = function(node, objectStack) {\n  const id = node.getAttribute('id');\n  if (id === null) {\n    return;\n  }\n  const styleMapValue = readStyleMapValue(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  let styleUri;\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL('#' + id, baseURI);\n    styleUri = url.href;\n  } else {\n    styleUri = '#' + id;\n  }\n  this.sharedStyles_[styleUri] = styleMapValue;\n};\n\n\n/**\n * Read the first feature from a KML source. MultiGeometries are converted into\n * GeometryCollections if they are a mix of geometry types, and into MultiPoint/\n * MultiLineString/MultiPolygon if they are all of the same type.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/Feature} Feature.\n * @api\n */\nKML.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nKML.prototype.readFeatureFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return null;\n  }\n  const feature = this.readPlacemark_(\n    node, [this.getReadOptions(node, opt_options)]);\n  if (feature) {\n    return feature;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * Read all features from a KML source. MultiGeometries are converted into\n * GeometryCollections if they are a mix of geometry types, and into MultiPoint/\n * MultiLineString/MultiPolygon if they are all of the same type.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nKML.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nKML.prototype.readFeaturesFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return [];\n  }\n  let features;\n  const localName = node.localName;\n  if (localName == 'Document' || localName == 'Folder') {\n    features = this.readDocumentOrFolder_(\n      node, [this.getReadOptions(node, opt_options)]);\n    if (features) {\n      return features;\n    } else {\n      return [];\n    }\n  } else if (localName == 'Placemark') {\n    const feature = this.readPlacemark_(\n      node, [this.getReadOptions(node, opt_options)]);\n    if (feature) {\n      return [feature];\n    } else {\n      return [];\n    }\n  } else if (localName == 'kml') {\n    features = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const fs = this.readFeaturesFromNode(n, opt_options);\n      if (fs) {\n        extend(features, fs);\n      }\n    }\n    return features;\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * Read the name of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {string|undefined} Name.\n * @api\n */\nKML.prototype.readName = function(source) {\n  if (isDocument(source)) {\n    return this.readNameFromDocument(/** @type {Document} */ (source));\n  } else if (isNode(source)) {\n    return this.readNameFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = parse(source);\n    return this.readNameFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {string|undefined} Name.\n */\nKML.prototype.readNameFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      const name = this.readNameFromNode(n);\n      if (name) {\n        return name;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} Name.\n */\nKML.prototype.readNameFromNode = function(node) {\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n        n.localName == 'name') {\n      return readString(n);\n    }\n  }\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'Placemark' ||\n         localName == 'kml')) {\n      const name = this.readNameFromNode(n);\n      if (name) {\n        return name;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * Read the network links of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {Array.<Object>} Network links.\n * @api\n */\nKML.prototype.readNetworkLinks = function(source) {\n  const networkLinks = [];\n  if (isDocument(source)) {\n    extend(networkLinks, this.readNetworkLinksFromDocument(\n      /** @type {Document} */ (source)));\n  } else if (isNode(source)) {\n    extend(networkLinks, this.readNetworkLinksFromNode(\n      /** @type {Node} */ (source)));\n  } else if (typeof source === 'string') {\n    const doc = parse(source);\n    extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n  }\n  return networkLinks;\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<Object>} Network links.\n */\nKML.prototype.readNetworkLinksFromDocument = function(doc) {\n  const networkLinks = [];\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(networkLinks, this.readNetworkLinksFromNode(n));\n    }\n  }\n  return networkLinks;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<Object>} Network links.\n */\nKML.prototype.readNetworkLinksFromNode = function(node) {\n  const networkLinks = [];\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n        n.localName == 'NetworkLink') {\n      const obj = pushParseAndPop({}, NETWORK_LINK_PARSERS,\n        n, []);\n      networkLinks.push(obj);\n    }\n  }\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'kml')) {\n      extend(networkLinks, this.readNetworkLinksFromNode(n));\n    }\n  }\n  return networkLinks;\n};\n\n\n/**\n * Read the regions of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {Array.<Object>} Regions.\n * @api\n */\nKML.prototype.readRegion = function(source) {\n  const regions = [];\n  if (isDocument(source)) {\n    extend(regions, this.readRegionFromDocument(\n      /** @type {Document} */ (source)));\n  } else if (isNode(source)) {\n    extend(regions, this.readRegionFromNode(\n      /** @type {Node} */ (source)));\n  } else if (typeof source === 'string') {\n    const doc = parse(source);\n    extend(regions, this.readRegionFromDocument(doc));\n  }\n  return regions;\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<Object>} Region.\n */\nKML.prototype.readRegionFromDocument = function(doc) {\n  const regions = [];\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(regions, this.readRegionFromNode(n));\n    }\n  }\n  return regions;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<Object>} Region.\n * @api\n */\nKML.prototype.readRegionFromNode = function(node) {\n  const regions = [];\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n        n.localName == 'Region') {\n      const obj = pushParseAndPop({}, REGION_PARSERS,\n        n, []);\n      regions.push(obj);\n    }\n  }\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'kml')) {\n      extend(regions, this.readRegionFromNode(n));\n    }\n  }\n  return regions;\n};\n\n\n/**\n * Read the projection from a KML source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {module:ol/proj/Projection} Projection.\n * @api\n */\nKML.prototype.readProjection;\n\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {module:ol/color~Color|string} color Color.\n */\nfunction writeColorTextNode(node, color) {\n  const rgba = asArray(color);\n  const opacity = (rgba.length == 4) ? rgba[3] : 1;\n  const abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  for (let i = 0; i < 4; ++i) {\n    const hex = parseInt(abgr[i], 10).toString(16);\n    abgr[i] = (hex.length == 1) ? '0' + hex : hex;\n  }\n  writeStringTextNode(node, abgr.join(''));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array.<number>} coordinates Coordinates.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n\n  const layout = context['layout'];\n  const stride = context['stride'];\n\n  let dimension;\n  if (layout == GeometryLayout.XY ||\n      layout == GeometryLayout.XYM) {\n    dimension = 2;\n  } else if (layout == GeometryLayout.XYZ ||\n      layout == GeometryLayout.XYZM) {\n    dimension = 3;\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n\n  const ii = coordinates.length;\n  let text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (let d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (let i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (let d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  writeStringTextNode(node, text);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Data': makeChildAppender(writeDataNode),\n    'value': makeChildAppender(writeDataNodeValue),\n    'displayName': makeChildAppender(writeDataNodeName)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeDataNode(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  const value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\n    }\n\n    if (value !== null && value.value) {\n      pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\n    }\n  } else {\n    pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\n  }\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */\nfunction writeDataNodeName(node, name) {\n  writeCDATASection(node, name);\n}\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */\nfunction writeDataNodeValue(node, value) {\n  writeStringTextNode(node, value);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst DOCUMENT_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Placemark': makeChildAppender(writePlacemark)\n  });\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nconst DOCUMENT_NODE_FACTORY = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {Array.<*>} objectStack Object stack.\n * @this {module:ol/format/KML}\n */\nfunction writeDocument(node, features, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(context, DOCUMENT_SERIALIZERS,\n    DOCUMENT_NODE_FACTORY, features, objectStack, undefined,\n    this);\n}\n\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n */\nconst DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\n\n\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeExtendedData(node, namesAndValues, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  const names = namesAndValues.names;\n  const values = namesAndValues.values;\n  const length = names.length;\n\n  for (let i = 0; i < length; i++) {\n    pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\n      DATA_NODE_FACTORY, [{name: names[i], value: values[i]}], objectStack);\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst ICON_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'href'\n  ],\n  makeStructureNS(GX_NAMESPACE_URIS, [\n    'x', 'y', 'w', 'h'\n  ]));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst ICON_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'href': makeChildAppender(writeStringTextNode)\n  }, makeStructureNS(\n    GX_NAMESPACE_URIS, {\n      'x': makeChildAppender(writeDecimalTextNode),\n      'y': makeChildAppender(writeDecimalTextNode),\n      'w': makeChildAppender(writeDecimalTextNode),\n      'h': makeChildAppender(writeDecimalTextNode)\n    }));\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nconst GX_NODE_FACTORY = function(value, objectStack, opt_nodeName) {\n  return createElementNS(GX_NAMESPACE_URIS[0],\n    'gx:' + opt_nodeName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeIcon(node, icon, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  const parentNode = objectStack[objectStack.length - 1].node;\n  let orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\n  let values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(context,\n    ICON_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n  orderedKeys =\n      ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\n  values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(context, ICON_SERIALIZERS,\n    GX_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst ICON_STYLE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'scale', 'heading', 'Icon', 'hotSpot'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst ICON_STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Icon': makeChildAppender(writeIcon),\n    'heading': makeChildAppender(writeDecimalTextNode),\n    'hotSpot': makeChildAppender(writeVec2),\n    'scale': makeChildAppender(writeScaleTextNode)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/style/Icon} style Icon style.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeIconStyle(node, style, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  const properties = {};\n  const src = style.getSrc();\n  const size = style.getSize();\n  const iconImageSize = style.getImageSize();\n  const iconProperties = {\n    'href': src\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    const anchor = style.getAnchor(); // top-left\n    const origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      const /** @type {module:ol/format/KML~Vec2} */ hotSpot = {\n        x: anchor[0],\n        xunits: IconAnchorUnits.PIXELS,\n        y: size[1] - anchor[1],\n        yunits: IconAnchorUnits.PIXELS\n      };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  const scale = style.getScale();\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  const rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, ICON_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst LABEL_STYLE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'color', 'scale'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst LABEL_STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode),\n    'scale': makeChildAppender(writeScaleTextNode)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/style/Text} style style.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeLabelStyle(node, style, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  const scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys =\n      LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, LABEL_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst LINE_STYLE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'color', 'width'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst LINE_STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode),\n    'width': makeChildAppender(writeDecimalTextNode)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/style/Stroke} style style.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeLineStyle(node, style, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  const properties = {\n    'color': style.getColor(),\n    'width': style.getWidth()\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, LINE_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nconst GEOMETRY_NODE_FACTORY = function(value, objectStack, opt_nodeName) {\n  if (value) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(parentNode.namespaceURI,\n      GEOMETRY_TYPE_TO_NODENAME[/** @type {module:ol/geom/Geometry} */ (value).getType()]);\n  }\n};\n\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\n\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\n\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\n\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LineString': makeChildAppender(\n      writePrimitiveGeometry),\n    'Point': makeChildAppender(\n      writePrimitiveGeometry),\n    'Polygon': makeChildAppender(writePolygon),\n    'GeometryCollection': makeChildAppender(\n      writeMultiGeometry)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeMultiGeometry(node, geometry, objectStack) {\n  /** @type {module:ol/xml~NodeStackItem} */\n  const context = {node: node};\n  const type = geometry.getType();\n  /** @type {Array.<module:ol/geom/Geometry>} */\n  let geometries;\n  /** @type {function(*, Array.<*>, string=): (Node|undefined)} */\n  let factory;\n  if (type == GeometryType.GEOMETRY_COLLECTION) {\n    geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n    factory = GEOMETRY_NODE_FACTORY;\n  } else if (type == GeometryType.MULTI_POINT) {\n    geometries = /** @type {module:ol/geom/MultiPoint} */ (geometry).getPoints();\n    factory = POINT_NODE_FACTORY;\n  } else if (type == GeometryType.MULTI_LINE_STRING) {\n    geometries =\n        (/** @type {module:ol/geom/MultiLineString} */ (geometry)).getLineStrings();\n    factory = LINE_STRING_NODE_FACTORY;\n  } else if (type == GeometryType.MULTI_POLYGON) {\n    geometries =\n        (/** @type {module:ol/geom/MultiPolygon} */ (geometry)).getPolygons();\n    factory = POLYGON_NODE_FACTORY;\n  } else {\n    assert(false, 39); // Unknown geometry type\n  }\n  pushSerializeAndPop(context,\n    MULTI_GEOMETRY_SERIALIZERS, factory,\n    geometries, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst BOUNDARY_IS_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LinearRing': makeChildAppender(\n      writePrimitiveGeometry)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/LinearRing} linearRing Linear ring.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeBoundaryIs(node, linearRing, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(context,\n    BOUNDARY_IS_SERIALIZERS,\n    LINEAR_RING_NODE_FACTORY, [linearRing], objectStack);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst PLACEMARK_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ExtendedData': makeChildAppender(writeExtendedData),\n    'MultiGeometry': makeChildAppender(writeMultiGeometry),\n    'LineString': makeChildAppender(writePrimitiveGeometry),\n    'LinearRing': makeChildAppender(writePrimitiveGeometry),\n    'Point': makeChildAppender(writePrimitiveGeometry),\n    'Polygon': makeChildAppender(writePolygon),\n    'Style': makeChildAppender(writeStyle),\n    'address': makeChildAppender(writeStringTextNode),\n    'description': makeChildAppender(writeStringTextNode),\n    'name': makeChildAppender(writeStringTextNode),\n    'open': makeChildAppender(writeBooleanTextNode),\n    'phoneNumber': makeChildAppender(writeStringTextNode),\n    'styleUrl': makeChildAppender(writeStringTextNode),\n    'visibility': makeChildAppender(writeBooleanTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst PLACEMARK_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'open', 'visibility', 'address', 'phoneNumber', 'description',\n    'styleUrl', 'Style'\n  ]);\n\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n */\nconst EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\n\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Node} node Node.\n * @param {module:ol/Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n * @this {module:ol/format/KML}\n */\nfunction writePlacemark(node, feature, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', feature.getId());\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  const filter = {'address': 1, 'description': 1, 'name': 1, 'open': 1,\n    'phoneNumber': 1, 'styleUrl': 1, 'visibility': 1};\n  filter[feature.getGeometryName()] = 1;\n  const keys = Object.keys(properties || {}).sort().filter(function(v) {\n    return !filter[v];\n  });\n\n  if (keys.length > 0) {\n    const sequence = makeSequence(properties, keys);\n    const namesAndValues = {names: keys, values: sequence};\n    pushSerializeAndPop(context, PLACEMARK_SERIALIZERS,\n      EXTENDEDDATA_NODE_FACTORY, [namesAndValues], objectStack);\n  }\n\n  const styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    const styles = styleFunction(feature, 0);\n    if (styles) {\n      const style = Array.isArray(styles) ? styles[0] : styles;\n      if (this.writeStyles_) {\n        properties['Style'] = style;\n      }\n      const textStyle = style.getText();\n      if (textStyle) {\n        properties['name'] = textStyle.getText();\n      }\n    }\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, PLACEMARK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n\n  // serialize geometry\n  const options = /** @type {module:ol/format/Feature~WriteOptions} */ (objectStack[0]);\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformWithOptions(geometry, true, options);\n  }\n  pushSerializeAndPop(context, PLACEMARK_SERIALIZERS,\n    GEOMETRY_NODE_FACTORY, [geometry], objectStack);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'extrude', 'tessellate', 'altitudeMode', 'coordinates'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'extrude': makeChildAppender(writeBooleanTextNode),\n    'tessellate': makeChildAppender(writeBooleanTextNode),\n    'altitudeMode': makeChildAppender(writeStringTextNode),\n    'coordinates': makeChildAppender(writeCoordinatesTextNode)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, PRIMITIVE_GEOMETRY_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst POLYGON_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'outerBoundaryIs': makeChildAppender(\n      writeBoundaryIs),\n    'innerBoundaryIs': makeChildAppender(\n      writeBoundaryIs)\n  });\n\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\n\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/Polygon} polygon Polygon.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writePolygon(node, polygon, objectStack) {\n  const linearRings = polygon.getLinearRings();\n  const outerRing = linearRings.shift();\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  // inner rings\n  pushSerializeAndPop(context,\n    POLYGON_SERIALIZERS,\n    INNER_BOUNDARY_NODE_FACTORY,\n    linearRings, objectStack);\n  // outer ring\n  pushSerializeAndPop(context,\n    POLYGON_SERIALIZERS,\n    OUTER_BOUNDARY_NODE_FACTORY,\n    [outerRing], objectStack);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst POLY_STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode)\n  });\n\n\n/**\n * A factory for creating coordinates nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst COLOR_NODE_FACTORY = makeSimpleNodeFactory('color');\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/style/Fill} style Style.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writePolyStyle(node, style, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(context, POLY_STYLE_SERIALIZERS,\n    COLOR_NODE_FACTORY, [style.getColor()], objectStack);\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */\nfunction writeScaleTextNode(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  writeDecimalTextNode(node,\n    Math.round(scale * 1e6) / 1e6);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst STYLE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'IconStyle', 'LabelStyle', 'LineStyle', 'PolyStyle'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'IconStyle': makeChildAppender(writeIconStyle),\n    'LabelStyle': makeChildAppender(writeLabelStyle),\n    'LineStyle': makeChildAppender(writeLineStyle),\n    'PolyStyle': makeChildAppender(writePolyStyle)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/style/Style} style Style.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeStyle(node, style, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  if (imageStyle instanceof Icon) {\n    properties['IconStyle'] = imageStyle;\n  }\n  if (textStyle) {\n    properties['LabelStyle'] = textStyle;\n  }\n  if (strokeStyle) {\n    properties['LineStyle'] = strokeStyle;\n  }\n  if (fillStyle) {\n    properties['PolyStyle'] = fillStyle;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the Vec2 to.\n * @param {module:ol/format/KML~Vec2} vec2 Vec2.\n */\nfunction writeVec2(node, vec2) {\n  node.setAttribute('x', vec2.x);\n  node.setAttribute('y', vec2.y);\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst KML_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'Document', 'Placemark'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst KML_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Document': makeChildAppender(writeDocument),\n    'Placemark': makeChildAppender(writePlacemark)\n  });\n\n\n/**\n * Encode an array of features in the KML format. GeometryCollections, MultiPoints,\n * MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n *\n * @function\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nKML.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the KML format as an XML node. GeometryCollections,\n * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n *\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nKML.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const kml = createElementNS(NAMESPACE_URIS[4], 'kml');\n  const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n  kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\n  kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n  kml.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\n\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: kml};\n  const properties = {};\n  if (features.length > 1) {\n    properties['Document'] = features;\n  } else if (features.length == 1) {\n    properties['Placemark'] = features[0];\n  }\n  const orderedKeys = KML_SEQUENCE[kml.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, KML_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, [opt_options], orderedKeys,\n    this);\n  return kml;\n};\n\nexport default KML;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport TileRange, {createOrUpdate as createOrUpdateTileRange} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/extent~Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {module:ol/coordinate~Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array.<module:ol/coordinate~Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array.<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array.<module:ol/size~Size>} [sizes] Sizes.\n * @property {number|module:ol/size~Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array.<module:ol/size~Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n *\n * @constructor\n * @param {module:ol/tilegrid/TileGrid~Options} options Tile grid options.\n * @struct\n * @api\n */\nconst TileGrid = function(options) {\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n  /**\n   * @private\n   * @type {!Array.<number>}\n   */\n  this.resolutions_ = options.resolutions;\n  assert(isSorted(this.resolutions_, function(a, b) {\n    return b - a;\n  }, true), 17); // `resolutions` must be sorted in descending order\n\n\n  // check if we've got a consistent zoom factor and origin\n  let zoomFactor;\n  if (!options.origins) {\n    for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n      if (!zoomFactor) {\n        zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n      } else {\n        if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n          zoomFactor = undefined;\n          break;\n        }\n      }\n    }\n  }\n\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zoomFactor_ = zoomFactor;\n\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.maxZoom = this.resolutions_.length - 1;\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.origin_ = options.origin !== undefined ? options.origin : null;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/coordinate~Coordinate>}\n   */\n  this.origins_ = null;\n  if (options.origins !== undefined) {\n    this.origins_ = options.origins;\n    assert(this.origins_.length == this.resolutions_.length,\n      20); // Number of `origins` and `resolutions` must be equal\n  }\n\n  const extent = options.extent;\n\n  if (extent !== undefined &&\n      !this.origin_ && !this.origins_) {\n    this.origin_ = getTopLeft(extent);\n  }\n\n  assert(\n    (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n    18); // Either `origin` or `origins` must be configured, never both\n\n  /**\n   * @private\n   * @type {Array.<number|module:ol/size~Size>}\n   */\n  this.tileSizes_ = null;\n  if (options.tileSizes !== undefined) {\n    this.tileSizes_ = options.tileSizes;\n    assert(this.tileSizes_.length == this.resolutions_.length,\n      19); // Number of `tileSizes` and `resolutions` must be equal\n  }\n\n  /**\n   * @private\n   * @type {number|module:ol/size~Size}\n   */\n  this.tileSize_ = options.tileSize !== undefined ?\n    options.tileSize :\n    !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n  assert(\n    (!this.tileSize_ && this.tileSizes_) ||\n      (this.tileSize_ && !this.tileSizes_),\n    22); // Either `tileSize` or `tileSizes` must be configured, never both\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent_ = extent !== undefined ? extent : null;\n\n\n  /**\n   * @private\n   * @type {Array.<module:ol/TileRange>}\n   */\n  this.fullTileRanges_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.tmpSize_ = [0, 0];\n\n  if (options.sizes !== undefined) {\n    this.fullTileRanges_ = options.sizes.map(function(size, z) {\n      const tileRange = new TileRange(\n        Math.min(0, size[0]), Math.max(size[0] - 1, -1),\n        Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n      return tileRange;\n    }, this);\n  } else if (extent) {\n    this.calculateTileRanges_(extent);\n  }\n\n};\n\n\n/**\n * @private\n * @type {module:ol/tilecoord~TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n\n/**\n * Call a function with each tile coordinate for a given extent and zoom level.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} zoom Integer zoom level.\n * @param {function(module:ol/tilecoord~TileCoord)} callback Function called with each tile coordinate.\n * @api\n */\nTileGrid.prototype.forEachTileCoord = function(extent, zoom, callback) {\n  const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n  for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n    for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n      callback([zoom, i, j]);\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {function(this: T, number, module:ol/TileRange): boolean} callback Callback.\n * @param {T=} opt_this The object to use as `this` in `callback`.\n * @param {module:ol/TileRange=} opt_tileRange Temporary module:ol/TileRange object.\n * @param {module:ol/extent~Extent=} opt_extent Temporary module:ol/extent~Extent object.\n * @return {boolean} Callback succeeded.\n * @template T\n */\nTileGrid.prototype.forEachTileCoordParentTileRange = function(tileCoord, callback, opt_this, opt_tileRange, opt_extent) {\n  let tileRange, x, y;\n  let tileCoordExtent = null;\n  let z = tileCoord[0] - 1;\n  if (this.zoomFactor_ === 2) {\n    x = tileCoord[1];\n    y = tileCoord[2];\n  } else {\n    tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n  }\n  while (z >= this.minZoom) {\n    if (this.zoomFactor_ === 2) {\n      x = Math.floor(x / 2);\n      y = Math.floor(y / 2);\n      tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n    } else {\n      tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n    }\n    if (callback.call(opt_this, z, tileRange)) {\n      return true;\n    }\n    --z;\n  }\n  return false;\n};\n\n\n/**\n * Get the extent for this tile grid, if it was configured.\n * @return {module:ol/extent~Extent} Extent.\n */\nTileGrid.prototype.getExtent = function() {\n  return this.extent_;\n};\n\n\n/**\n * Get the maximum zoom level for the grid.\n * @return {number} Max zoom.\n * @api\n */\nTileGrid.prototype.getMaxZoom = function() {\n  return this.maxZoom;\n};\n\n\n/**\n * Get the minimum zoom level for the grid.\n * @return {number} Min zoom.\n * @api\n */\nTileGrid.prototype.getMinZoom = function() {\n  return this.minZoom;\n};\n\n\n/**\n * Get the origin for the grid at the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {module:ol/coordinate~Coordinate} Origin.\n * @api\n */\nTileGrid.prototype.getOrigin = function(z) {\n  if (this.origin_) {\n    return this.origin_;\n  } else {\n    return this.origins_[z];\n  }\n};\n\n\n/**\n * Get the resolution for the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {number} Resolution.\n * @api\n */\nTileGrid.prototype.getResolution = function(z) {\n  return this.resolutions_[z];\n};\n\n\n/**\n * Get the list of resolutions for the tile grid.\n * @return {Array.<number>} Resolutions.\n * @api\n */\nTileGrid.prototype.getResolutions = function() {\n  return this.resolutions_;\n};\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/TileRange=} opt_tileRange Temporary module:ol/TileRange object.\n * @param {module:ol/extent~Extent=} opt_extent Temporary module:ol/extent~Extent object.\n * @return {module:ol/TileRange} Tile range.\n */\nTileGrid.prototype.getTileCoordChildTileRange = function(tileCoord, opt_tileRange, opt_extent) {\n  if (tileCoord[0] < this.maxZoom) {\n    if (this.zoomFactor_ === 2) {\n      const minX = tileCoord[1] * 2;\n      const minY = tileCoord[2] * 2;\n      return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n    }\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    return this.getTileRangeForExtentAndZ(\n      tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n  }\n  return null;\n};\n\n\n/**\n * Get the extent for a tile range.\n * @param {number} z Integer zoom level.\n * @param {module:ol/TileRange} tileRange Tile range.\n * @param {module:ol/extent~Extent=} opt_extent Temporary module:ol/extent~Extent object.\n * @return {module:ol/extent~Extent} Extent.\n */\nTileGrid.prototype.getTileRangeExtent = function(z, tileRange, opt_extent) {\n  const origin = this.getOrigin(z);\n  const resolution = this.getResolution(z);\n  const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n  const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n  const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n  const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n  const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n\n/**\n * Get a tile range for the given extent and integer zoom level.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} z Integer zoom level.\n * @param {module:ol/TileRange=} opt_tileRange Temporary tile range object.\n * @return {module:ol/TileRange} Tile range.\n */\nTileGrid.prototype.getTileRangeForExtentAndZ = function(extent, z, opt_tileRange) {\n  const tileCoord = tmpTileCoord;\n  this.getTileCoordForXYAndZ_(extent[0], extent[1], z, false, tileCoord);\n  const minX = tileCoord[1];\n  const minY = tileCoord[2];\n  this.getTileCoordForXYAndZ_(extent[2], extent[3], z, true, tileCoord);\n  return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n};\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @return {module:ol/coordinate~Coordinate} Tile center.\n */\nTileGrid.prototype.getTileCoordCenter = function(tileCoord) {\n  const origin = this.getOrigin(tileCoord[0]);\n  const resolution = this.getResolution(tileCoord[0]);\n  const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  return [\n    origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n    origin[1] + (tileCoord[2] + 0.5) * tileSize[1] * resolution\n  ];\n};\n\n\n/**\n * Get the extent of a tile coordinate.\n *\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/extent~Extent=} opt_extent Temporary extent object.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nTileGrid.prototype.getTileCoordExtent = function(tileCoord, opt_extent) {\n  const origin = this.getOrigin(tileCoord[0]);\n  const resolution = this.getResolution(tileCoord[0]);\n  const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n  const minY = origin[1] + tileCoord[2] * tileSize[1] * resolution;\n  const maxX = minX + tileSize[0] * resolution;\n  const maxY = minY + tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n\n/**\n * Get the tile coordinate for the given map coordinate and resolution.  This\n * method considers that coordinates that intersect tile boundaries should be\n * assigned the higher tile coordinate.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Destination module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndResolution = function(coordinate, resolution, opt_tileCoord) {\n  return this.getTileCoordForXYAndResolution_(\n    coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n};\n\n\n/**\n * Note that this method should not be called for resolutions that correspond\n * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} resolution Resolution (for a non-integer zoom level).\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *     intersections go to the higher tile coordinate, let edge intersections\n *     go to the lower tile coordinate.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Temporary module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndResolution_ = function(\n  x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n  const z = this.getZForResolution(resolution);\n  const scale = resolution / this.getResolution(z);\n  const origin = this.getOrigin(z);\n  const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  const adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  const yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  let tileCoordX = scale * xFromOrigin / tileSize[0];\n  let tileCoordY = scale * yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n\n/**\n * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n * they should have separate implementations.  This method is for integer zoom\n * levels.  The other method should only be called for resolutions corresponding\n * to non-integer zoom levels.\n * @param {number} x Map x coordinate.\n * @param {number} y Map y coordinate.\n * @param {number} z Integer zoom level.\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *     intersections go to the higher tile coordinate, let edge intersections\n *     go to the lower tile coordinate.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Temporary module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndZ_ = function(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n  const origin = this.getOrigin(z);\n  const resolution = this.getResolution(z);\n  const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  const adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  const yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  let tileCoordX = xFromOrigin / tileSize[0];\n  let tileCoordY = yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n\n/**\n * Get a tile coordinate given a map coordinate and zoom level.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} z Zoom level.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Destination module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndZ = function(coordinate, z, opt_tileCoord) {\n  return this.getTileCoordForXYAndZ_(\n    coordinate[0], coordinate[1], z, false, opt_tileCoord);\n};\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @return {number} Tile resolution.\n */\nTileGrid.prototype.getTileCoordResolution = function(tileCoord) {\n  return this.resolutions_[tileCoord[0]];\n};\n\n\n/**\n * Get the tile size for a zoom level. The type of the return value matches the\n * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n * get an `module:ol/size~Size`, run the result through `module:ol/size~Size.toSize()`.\n * @param {number} z Z.\n * @return {number|module:ol/size~Size} Tile size.\n * @api\n */\nTileGrid.prototype.getTileSize = function(z) {\n  if (this.tileSize_) {\n    return this.tileSize_;\n  } else {\n    return this.tileSizes_[z];\n  }\n};\n\n\n/**\n * @param {number} z Zoom level.\n * @return {module:ol/TileRange} Extent tile range for the specified zoom level.\n */\nTileGrid.prototype.getFullTileRange = function(z) {\n  if (!this.fullTileRanges_) {\n    return null;\n  } else {\n    return this.fullTileRanges_[z];\n  }\n};\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number=} opt_direction If 0, the nearest resolution will be used.\n *     If 1, the nearest lower resolution will be used. If -1, the nearest\n *     higher resolution will be used. Default is 0.\n * @return {number} Z.\n * @api\n */\nTileGrid.prototype.getZForResolution = function(resolution, opt_direction) {\n  const z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n  return clamp(z, this.minZoom, this.maxZoom);\n};\n\n\n/**\n * @param {!module:ol/extent~Extent} extent Extent for this tile grid.\n * @private\n */\nTileGrid.prototype.calculateTileRanges_ = function(extent) {\n  const length = this.resolutions_.length;\n  const fullTileRanges = new Array(length);\n  for (let z = this.minZoom; z < length; ++z) {\n    fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n  }\n  this.fullTileRanges_ = fullTileRanges;\n};\nexport default TileGrid;\n","/**\n * @module ol/source/Tile\n */\nimport {inherits} from '../index.js';\nimport {UNDEFINED} from '../functions.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport {equivalent} from '../proj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport Source from '../source/Source.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {wrapX, getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {number} [cacheSize]\n * @property {module:ol/extent~Extent} [extent]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {module:ol/proj~ProjectionLike} [projection]\n * @property {module:ol/source/State} [state]\n * @property {module:ol/tilegrid/TileGrid} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/source/Source}\n * @param {module:ol/source/Tile~Options=} options SourceTile source options.\n * @api\n */\nconst TileSource = function(options) {\n\n  Source.call(this, {\n    attributions: options.attributions,\n    extent: options.extent,\n    projection: options.projection,\n    state: options.state,\n    wrapX: options.wrapX\n  });\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n    options.tilePixelRatio : 1;\n\n  /**\n   * @protected\n   * @type {module:ol/tilegrid/TileGrid}\n   */\n  this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n  /**\n   * @protected\n   * @type {module:ol/TileCache}\n   */\n  this.tileCache = new TileCache(options.cacheSize);\n\n  /**\n   * @protected\n   * @type {module:ol/size~Size}\n   */\n  this.tmpSize = [0, 0];\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.key_ = '';\n\n  /**\n   * @protected\n   * @type {module:ol/Tile~Options}\n   */\n  this.tileOptions = {transition: options.transition};\n\n};\n\ninherits(TileSource, Source);\n\n\n/**\n * @return {boolean} Can expire cache.\n */\nTileSource.prototype.canExpireCache = function() {\n  return this.tileCache.canExpireCache();\n};\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {!Object.<string, module:ol/TileRange>} usedTiles Used tiles.\n */\nTileSource.prototype.expireCache = function(projection, usedTiles) {\n  const tileCache = this.getTileCacheForProjection(projection);\n  if (tileCache) {\n    tileCache.expireCache(usedTiles);\n  }\n};\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {number} z Zoom level.\n * @param {module:ol/TileRange} tileRange Tile range.\n * @param {function(module:ol/Tile):(boolean|undefined)} callback Called with each\n *     loaded tile.  If the callback returns `false`, the tile will not be\n *     considered loaded.\n * @return {boolean} The tile range is fully covered with loaded tiles.\n */\nTileSource.prototype.forEachLoadedTile = function(projection, z, tileRange, callback) {\n  const tileCache = this.getTileCacheForProjection(projection);\n  if (!tileCache) {\n    return false;\n  }\n\n  let covered = true;\n  let tile, tileCoordKey, loaded;\n  for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n    for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n      tileCoordKey = getKeyZXY(z, x, y);\n      loaded = false;\n      if (tileCache.containsKey(tileCoordKey)) {\n        tile = /** @type {!module:ol/Tile} */ (tileCache.get(tileCoordKey));\n        loaded = tile.getState() === TileState.LOADED;\n        if (loaded) {\n          loaded = (callback(tile) !== false);\n        }\n      }\n      if (!loaded) {\n        covered = false;\n      }\n    }\n  }\n  return covered;\n};\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {number} Gutter.\n */\nTileSource.prototype.getGutter = function(projection) {\n  return 0;\n};\n\n\n/**\n * Return the key to be used for all tiles in the source.\n * @return {string} The key for all tiles.\n * @protected\n */\nTileSource.prototype.getKey = function() {\n  return this.key_;\n};\n\n\n/**\n * Set the value to be used as the key for all tiles in the source.\n * @param {string} key The key for tiles.\n * @protected\n */\nTileSource.prototype.setKey = function(key) {\n  if (this.key_ !== key) {\n    this.key_ = key;\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {boolean} Opaque.\n */\nTileSource.prototype.getOpaque = function(projection) {\n  return this.opaque_;\n};\n\n\n/**\n * @inheritDoc\n */\nTileSource.prototype.getResolutions = function() {\n  return this.tileGrid.getResolutions();\n};\n\n\n/**\n * @abstract\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {!module:ol/Tile} Tile.\n */\nTileSource.prototype.getTile = function(z, x, y, pixelRatio, projection) {};\n\n\n/**\n * Return the tile grid of the tile source.\n * @return {module:ol/tilegrid/TileGrid} Tile grid.\n * @api\n */\nTileSource.prototype.getTileGrid = function() {\n  return this.tileGrid;\n};\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {!module:ol/tilegrid/TileGrid} Tile grid.\n */\nTileSource.prototype.getTileGridForProjection = function(projection) {\n  if (!this.tileGrid) {\n    return getTileGridForProjection(projection);\n  } else {\n    return this.tileGrid;\n  }\n};\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {module:ol/TileCache} Tile cache.\n * @protected\n */\nTileSource.prototype.getTileCacheForProjection = function(projection) {\n  const thisProj = this.getProjection();\n  if (thisProj && !equivalent(thisProj, projection)) {\n    return null;\n  } else {\n    return this.tileCache;\n  }\n};\n\n\n/**\n * Get the tile pixel ratio for this source. Subclasses may override this\n * method, which is meant to return a supported pixel ratio that matches the\n * provided `pixelRatio` as close as possible.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Tile pixel ratio.\n */\nTileSource.prototype.getTilePixelRatio = function(pixelRatio) {\n  return this.tilePixelRatio_;\n};\n\n\n/**\n * @param {number} z Z.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {module:ol/size~Size} Tile size.\n */\nTileSource.prototype.getTilePixelSize = function(z, pixelRatio, projection) {\n  const tileGrid = this.getTileGridForProjection(projection);\n  const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n  const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n  if (tilePixelRatio == 1) {\n    return tileSize;\n  } else {\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n};\n\n\n/**\n * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n * is outside the resolution and extent range of the tile grid, `null` will be\n * returned.\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/proj/Projection=} opt_projection Projection.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n *     null if no tile URL should be created for the passed `tileCoord`.\n */\nTileSource.prototype.getTileCoordForTileUrlFunction = function(tileCoord, opt_projection) {\n  const projection = opt_projection !== undefined ?\n    opt_projection : this.getProjection();\n  const tileGrid = this.getTileGridForProjection(projection);\n  if (this.getWrapX() && projection.isGlobal()) {\n    tileCoord = wrapX(tileGrid, tileCoord, projection);\n  }\n  return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n};\n\n\n/**\n * @inheritDoc\n */\nTileSource.prototype.refresh = function() {\n  this.tileCache.clear();\n  this.changed();\n};\n\n\n/**\n * Marks a tile coord as being used, without triggering a load.\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {module:ol/proj/Projection} projection Projection.\n */\nTileSource.prototype.useTile = UNDEFINED;\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {string} type Type.\n * @param {module:ol/Tile} tile The tile.\n */\nexport const TileSourceEvent = function(type, tile) {\n\n  Event.call(this, type);\n\n  /**\n   * The tile related to the event.\n   * @type {module:ol/Tile}\n   * @api\n   */\n  this.tile = tile;\n\n};\ninherits(TileSourceEvent, Event);\n\nexport default TileSource;\n","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml'\n};\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n  const outside = forEachCorner(extent,\n    /**\n     * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function(coordinate) {\n      return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n  return !outside;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n  // http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event ol/source/Vector~VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event ol/source/Vector~VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event ol/source/Vector~VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n   * @event ol/source/Vector~VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature'\n};\n","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\nimport {inherits} from '../index.js';\nimport ImageWrapper from '../Image.js';\nimport {assert} from '../asserts.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport ImageSource, {defaultImageLoadFunction} from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport {compareVersions} from '../string.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {module:ol/source/WMSServerType|string} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver` or `qgis`. Only needed if `hidpi` is `true`.\n * @property {module:ol/Image~LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {Object.<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or\n * higher.\n * @property {Array.<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {string} url WMS service URL.\n */\n\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @constructor\n * @fires ol/source/Image~ImageSourceEvent\n * @extends {module:ol/source/Image}\n * @param {module:ol/source/ImageWMS~Options=} [opt_options] ImageWMS options.\n * @api\n */\nconst ImageWMS = function(opt_options) {\n\n  const options = opt_options || {};\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {module:ol/Image~LoadFunction}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.v13_ = true;\n  this.updateV13_();\n\n  /**\n   * @private\n   * @type {module:ol/source/WMSServerType|undefined}\n   */\n  this.serverType_ = /** @type {module:ol/source/WMSServerType|undefined} */ (options.serverType);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {module:ol/Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.imageSize_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n};\n\ninherits(ImageWMS, ImageSource);\n\n\n/**\n * @const\n * @type {module:ol/size~Size}\n */\nconst GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n\n\n/**\n * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n * constructed.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {module:ol/proj~ProjectionLike} projection Projection.\n * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n *     in the `LAYERS` parameter will be used. `VERSION` should not be\n *     specified here.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nImageWMS.prototype.getGetFeatureInfoUrl = function(coordinate, resolution, projection, params) {\n  if (this.url_ === undefined) {\n    return undefined;\n  }\n  const projectionObj = getProjection(projection);\n  const sourceProjectionObj = this.getProjection();\n\n  if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n    resolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n    coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n  }\n\n  const extent = getForViewAndSize(coordinate, resolution, 0,\n    GETFEATUREINFO_IMAGE_SIZE);\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetFeatureInfo',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true,\n    'QUERY_LAYERS': this.params_['LAYERS']\n  };\n  assign(baseParams, this.params_, params);\n\n  const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n  const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n  baseParams[this.v13_ ? 'I' : 'X'] = x;\n  baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n  return this.getRequestUrl_(\n    extent, GETFEATUREINFO_IMAGE_SIZE,\n    1, sourceProjectionObj || projectionObj, baseParams);\n};\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageWMS.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageWMS.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n\n  if (this.url_ === undefined) {\n    return null;\n  }\n\n  resolution = this.findNearestResolution(resolution);\n\n  if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n    pixelRatio = 1;\n  }\n\n  const imageResolution = resolution / pixelRatio;\n\n  const center = getCenter(extent);\n  const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n  const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n  const viewExtent = getForViewAndSize(center, imageResolution, 0,\n    [viewWidth, viewHeight]);\n  const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n  const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n  const requestExtent = getForViewAndSize(center, imageResolution, 0,\n    [requestWidth, requestHeight]);\n\n  const image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)) {\n    return image;\n  }\n\n  const params = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_WMS_VERSION,\n    'REQUEST': 'GetMap',\n    'FORMAT': 'image/png',\n    'TRANSPARENT': true\n  };\n  assign(params, this.params_);\n\n  this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n  this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n  const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n    projection, params);\n\n  this.image_ = new ImageWrapper(requestExtent, resolution, pixelRatio,\n    url, this.crossOrigin_, this.imageLoadFunction_);\n\n  this.renderedRevision_ = this.getRevision();\n\n  listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n  return this.image_;\n\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {module:ol/Image~LoadFunction} The image load function.\n * @api\n */\nImageWMS.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/size~Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n * @private\n */\nImageWMS.prototype.getRequestUrl_ = function(extent, size, pixelRatio, projection, params) {\n\n  assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n  params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n  if (!('STYLES' in this.params_)) {\n    params['STYLES'] = '';\n  }\n\n  if (pixelRatio != 1) {\n    switch (this.serverType_) {\n      case WMSServerType.GEOSERVER:\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case WMSServerType.MAPSERVER:\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case WMSServerType.CARMENTA_SERVER:\n      case WMSServerType.QGIS:\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        assert(false, 8); // Unknown `serverType` configured\n        break;\n    }\n  }\n\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  let bbox;\n  if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n    bbox = [extent[1], extent[0], extent[3], extent[2]];\n  } else {\n    bbox = extent;\n  }\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(/** @type {string} */ (this.url_), params);\n};\n\n\n/**\n * Return the URL used for this WMS source.\n * @return {string|undefined} URL.\n * @api\n */\nImageWMS.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * Set the image load function of the source.\n * @param {module:ol/Image~LoadFunction} imageLoadFunction Image load function.\n * @api\n */\nImageWMS.prototype.setImageLoadFunction = function(imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string|undefined} url URL.\n * @api\n */\nImageWMS.prototype.setUrl = function(url) {\n  if (url != this.url_) {\n    this.url_ = url;\n    this.image_ = null;\n    this.changed();\n  }\n};\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageWMS.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.updateV13_();\n  this.image_ = null;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nImageWMS.prototype.updateV13_ = function() {\n  const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n  this.v13_ = compareVersions(version, '1.3') >= 0;\n};\nexport default ImageWMS;\n","/**\n * @module ol/uri\n */\n\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function(k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n  return uri + qs;\n}\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile~TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile~TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile~TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror'\n\n};\n","/**\n * @module ol/source/UrlTile\n */\nimport {getUid, inherits} from '../index.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport TileSource, {TileSourceEvent} from '../source/Tile.js';\nimport TileEventType from '../source/TileEventType.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {number} [cacheSize]\n * @property {module:ol/extent~Extent} [extent]\n * @property {boolean} [opaque]\n * @property {module:ol/proj~ProjectionLike} [projection]\n * @property {module:ol/source/State} [state]\n * @property {module:ol/tilegrid/TileGrid} [tileGrid]\n * @property {module:ol/Tile~LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {module:ol/Tile~UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array.<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @constructor\n * @abstract\n * @fires module:ol/source/TileEvent\n * @extends {module:ol/source/Tile}\n * @param {module:ol/source/UrlTile~Options=} options Image tile options.\n */\nconst UrlTile = function(options) {\n\n  TileSource.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    extent: options.extent,\n    opaque: options.opaque,\n    projection: options.projection,\n    state: options.state,\n    tileGrid: options.tileGrid,\n    tilePixelRatio: options.tilePixelRatio,\n    wrapX: options.wrapX,\n    transition: options.transition\n  });\n\n  /**\n   * @protected\n   * @type {module:ol/Tile~LoadFunction}\n   */\n  this.tileLoadFunction = options.tileLoadFunction;\n\n  /**\n   * @protected\n   * @type {module:ol/Tile~UrlFunction}\n   */\n  this.tileUrlFunction = this.fixedTileUrlFunction ?\n    this.fixedTileUrlFunction.bind(this) : nullTileUrlFunction;\n\n  /**\n   * @protected\n   * @type {!Array.<string>|null}\n   */\n  this.urls = null;\n\n  if (options.urls) {\n    this.setUrls(options.urls);\n  } else if (options.url) {\n    this.setUrl(options.url);\n  }\n  if (options.tileUrlFunction) {\n    this.setTileUrlFunction(options.tileUrlFunction);\n  }\n\n  /**\n   * @private\n   * @type {!Object.<number, boolean>}\n   */\n  this.tileLoadingKeys_ = {};\n\n};\n\ninherits(UrlTile, TileSource);\n\n\n/**\n * @type {module:ol/Tile~UrlFunction|undefined}\n * @protected\n */\nUrlTile.prototype.fixedTileUrlFunction;\n\n/**\n * Return the tile load function of the source.\n * @return {module:ol/Tile~LoadFunction} TileLoadFunction\n * @api\n */\nUrlTile.prototype.getTileLoadFunction = function() {\n  return this.tileLoadFunction;\n};\n\n\n/**\n * Return the tile URL function of the source.\n * @return {module:ol/Tile~UrlFunction} TileUrlFunction\n * @api\n */\nUrlTile.prototype.getTileUrlFunction = function() {\n  return this.tileUrlFunction;\n};\n\n\n/**\n * Return the URLs used for this source.\n * When a tileUrlFunction is used instead of url or urls,\n * null will be returned.\n * @return {!Array.<string>|null} URLs.\n * @api\n */\nUrlTile.prototype.getUrls = function() {\n  return this.urls;\n};\n\n\n/**\n * Handle tile change events.\n * @param {module:ol/events/Event} event Event.\n * @protected\n */\nUrlTile.prototype.handleTileChange = function(event) {\n  const tile = /** @type {module:ol/Tile} */ (event.target);\n  const uid = getUid(tile);\n  const tileState = tile.getState();\n  let type;\n  if (tileState == TileState.LOADING) {\n    this.tileLoadingKeys_[uid] = true;\n    type = TileEventType.TILELOADSTART;\n  } else if (uid in this.tileLoadingKeys_) {\n    delete this.tileLoadingKeys_[uid];\n    type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n      (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n        TileEventType.TILELOADEND : undefined;\n  }\n  if (type != undefined) {\n    this.dispatchEvent(new TileSourceEvent(type, tile));\n  }\n};\n\n\n/**\n * Set the tile load function of the source.\n * @param {module:ol/Tile~LoadFunction} tileLoadFunction Tile load function.\n * @api\n */\nUrlTile.prototype.setTileLoadFunction = function(tileLoadFunction) {\n  this.tileCache.clear();\n  this.tileLoadFunction = tileLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the tile URL function of the source.\n * @param {module:ol/Tile~UrlFunction} tileUrlFunction Tile URL function.\n * @param {string=} opt_key Optional new tile key for the source.\n * @api\n */\nUrlTile.prototype.setTileUrlFunction = function(tileUrlFunction, opt_key) {\n  this.tileUrlFunction = tileUrlFunction;\n  this.tileCache.pruneExceptNewestZ();\n  if (typeof opt_key !== 'undefined') {\n    this.setKey(opt_key);\n  } else {\n    this.changed();\n  }\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string} url URL.\n * @api\n */\nUrlTile.prototype.setUrl = function(url) {\n  const urls = this.urls = expandUrl(url);\n  this.setTileUrlFunction(this.fixedTileUrlFunction ?\n    this.fixedTileUrlFunction.bind(this) :\n    createFromTemplates(urls, this.tileGrid), url);\n};\n\n\n/**\n * Set the URLs to use for requests.\n * @param {Array.<string>} urls URLs.\n * @api\n */\nUrlTile.prototype.setUrls = function(urls) {\n  this.urls = urls;\n  const key = urls.join('\\n');\n  this.setTileUrlFunction(this.fixedTileUrlFunction ?\n    this.fixedTileUrlFunction.bind(this) :\n    createFromTemplates(urls, this.tileGrid), key);\n};\n\n\n/**\n * @inheritDoc\n */\nUrlTile.prototype.useTile = function(z, x, y) {\n  const tileCoordKey = getKeyZXY(z, x, y);\n  if (this.tileCache.containsKey(tileCoordKey)) {\n    this.tileCache.get(tileCoordKey);\n  }\n};\nexport default UrlTile;\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number=} opt_precision Precision of the output string (i.e. number of decimal places)\n * @returns {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n  const numberString = opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width ? numberString : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @returns {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/layer/VectorTile\n */\nimport {inherits} from '../index.js';\nimport LayerType from '../LayerType.js';\nimport {assert} from '../asserts.js';\nimport TileProperty from '../layer/TileProperty.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorTileRenderType from '../layer/VectorTileRenderType.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance than the other options.\n * @api\n */\nexport const RenderType = {\n  IMAGE: 'image',\n  HYBRID: 'hybrid',\n  VECTOR: 'vector'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/render~OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {module:ol/layer/VectorTileRenderType|string} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but point symbols and texts\n *    are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance than the other options.\n *\n * When `declutter` is set to `true`, `'hybrid'` will be used instead of `'image'`.\n * @property {module:ol/source/VectorTile} [source] Source.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority. When set to `true`, a `renderMode` of `'image'` will be overridden with\n * `'hybrid'`.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {module:ol/render~OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created.\n * @property {(module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction)} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @constructor\n * @extends {module:ol/layer/Vector}\n * @param {module:ol/layer/VectorTile~Options=} opt_options Options.\n * @api\n */\nconst VectorTileLayer = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  let renderMode = options.renderMode || VectorTileRenderType.HYBRID;\n  assert(renderMode == undefined ||\n      renderMode == VectorTileRenderType.IMAGE ||\n      renderMode == VectorTileRenderType.HYBRID ||\n      renderMode == VectorTileRenderType.VECTOR,\n  28); // `renderMode` must be `'image'`, `'hybrid'` or `'vector'`\n  if (options.declutter && renderMode == VectorTileRenderType.IMAGE) {\n    renderMode = VectorTileRenderType.HYBRID;\n  }\n  options.renderMode = renderMode;\n\n  const baseOptions = assign({}, options);\n\n  delete baseOptions.preload;\n  delete baseOptions.useInterimTilesOnError;\n  VectorLayer.call(this,  /** @type {module:ol/layer/Vector~Options} */ (baseOptions));\n\n  this.setPreload(options.preload ? options.preload : 0);\n  this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n    options.useInterimTilesOnError : true);\n\n  /**\n   * The layer type.\n   * @protected\n   * @type {module:ol/LayerType}\n   */\n  this.type = LayerType.VECTOR_TILE;\n\n};\n\ninherits(VectorTileLayer, VectorLayer);\n\n\n/**\n * Return the level as number to which we will preload tiles up to.\n * @return {number} The level to preload tiles up to.\n * @observable\n * @api\n */\nVectorTileLayer.prototype.getPreload = function() {\n  return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n};\n\n\n/**\n * Whether we use interim tiles on error.\n * @return {boolean} Use interim tiles on error.\n * @observable\n * @api\n */\nVectorTileLayer.prototype.getUseInterimTilesOnError = function() {\n  return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n};\n\n\n/**\n * Set the level as number to which we will preload tiles up to.\n * @param {number} preload The level to preload tiles up to.\n * @observable\n * @api\n */\nVectorTileLayer.prototype.setPreload = function(preload) {\n  this.set(TileProperty.PRELOAD, preload);\n};\n\n\n/**\n * Set whether we use interim tiles on error.\n * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n * @observable\n * @api\n */\nVectorTileLayer.prototype.setUseInterimTilesOnError = function(useInterimTilesOnError) {\n  this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n};\n\n\n/**\n * Return the associated {@link module:ol/source/VectorTile vectortilesource} of the layer.\n * @function\n * @return {module:ol/source/VectorTile} Source.\n * @api\n */\nVectorTileLayer.prototype.getSource;\nexport default VectorTileLayer;\n","/**\n * @module ol/VectorImageTile\n */\nimport {getUid, inherits} from './index.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {getHeight, getIntersection, getWidth} from './extent.js';\nimport EventType from './events/EventType.js';\nimport {loadFeaturesXhr} from './featureloader.js';\nimport {UNDEFINED} from './functions.js';\n\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty\n * @property {null|module:ol/render~OrderFunction} renderedRenderOrder\n * @property {number} renderedTileRevision\n * @property {number} renderedRevision\n */\n\n\n/**\n * @constructor\n * @extends {module:ol/Tile}\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/TileState} state State.\n * @param {number} sourceRevision Source revision.\n * @param {module:ol/format/Feature} format Feature format.\n * @param {module:ol/Tile~LoadFunction} tileLoadFunction Tile load function.\n * @param {module:ol/tilecoord~TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n * @param {module:ol/Tile~UrlFunction} tileUrlFunction Tile url function.\n * @param {module:ol/tilegrid/TileGrid} sourceTileGrid Tile grid of the source.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid of the renderer.\n * @param {Object.<string, module:ol/VectorTile>} sourceTiles Source tiles.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {function(new: module:ol/VectorTile, module:ol/tilecoord~TileCoord, module:ol/TileState, string,\n *     module:ol/format/Feature, module:ol/Tile~LoadFunction)} tileClass Class to\n *     instantiate for source tiles.\n * @param {function(this: module:ol/source/VectorTile, module:ol/events/Event)} handleTileChange\n *     Function to call when a source tile's state changes.\n * @param {number} zoom Integer zoom to render the tile for.\n */\nconst VectorImageTile = function(tileCoord, state, sourceRevision, format,\n  tileLoadFunction, urlTileCoord, tileUrlFunction, sourceTileGrid, tileGrid,\n  sourceTiles, pixelRatio, projection, tileClass, handleTileChange, zoom) {\n\n  Tile.call(this, tileCoord, state, {transition: 0});\n\n  /**\n   * @private\n   * @type {!Object.<string, CanvasRenderingContext2D>}\n   */\n  this.context_ = {};\n\n  /**\n   * @private\n   * @type {module:ol/featureloader~FeatureLoader}\n   */\n  this.loader_;\n\n  /**\n   * @private\n   * @type {!Object.<string, module:ol/VectorImageTile~ReplayState>}\n   */\n  this.replayState_ = {};\n\n  /**\n   * @private\n   * @type {Object.<string, module:ol/VectorTile>}\n   */\n  this.sourceTiles_ = sourceTiles;\n\n  /**\n   * Keys of source tiles used by this tile. Use with {@link #getTile}.\n   * @type {Array.<string>}\n   */\n  this.tileKeys = [];\n\n  /**\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent = null;\n\n  /**\n   * @type {number}\n   */\n  this.sourceRevision_ = sourceRevision;\n\n  /**\n   * @type {module:ol/tilecoord~TileCoord}\n   */\n  this.wrappedTileCoord = urlTileCoord;\n\n  /**\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.loadListenerKeys_ = [];\n\n  /**\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.sourceTileListenerKeys_ = [];\n\n  if (urlTileCoord) {\n    const extent = this.extent = tileGrid.getTileCoordExtent(urlTileCoord);\n    const resolution = tileGrid.getResolution(zoom);\n    const sourceZ = sourceTileGrid.getZForResolution(resolution);\n    const useLoadedOnly = zoom != tileCoord[0];\n    let loadCount = 0;\n    sourceTileGrid.forEachTileCoord(extent, sourceZ, function(sourceTileCoord) {\n      let sharedExtent = getIntersection(extent,\n        sourceTileGrid.getTileCoordExtent(sourceTileCoord));\n      const sourceExtent = sourceTileGrid.getExtent();\n      if (sourceExtent) {\n        sharedExtent = getIntersection(sharedExtent, sourceExtent, sharedExtent);\n      }\n      if (getWidth(sharedExtent) / resolution >= 0.5 &&\n          getHeight(sharedExtent) / resolution >= 0.5) {\n        // only include source tile if overlap is at least 1 pixel\n        ++loadCount;\n        const sourceTileKey = sourceTileCoord.toString();\n        let sourceTile = sourceTiles[sourceTileKey];\n        if (!sourceTile && !useLoadedOnly) {\n          const tileUrl = tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n          sourceTile = sourceTiles[sourceTileKey] = new tileClass(sourceTileCoord,\n            tileUrl == undefined ? TileState.EMPTY : TileState.IDLE,\n            tileUrl == undefined ? '' : tileUrl,\n            format, tileLoadFunction);\n          this.sourceTileListenerKeys_.push(\n            listen(sourceTile, EventType.CHANGE, handleTileChange));\n        }\n        if (sourceTile && (!useLoadedOnly || sourceTile.getState() == TileState.LOADED)) {\n          sourceTile.consumers++;\n          this.tileKeys.push(sourceTileKey);\n        }\n      }\n    }.bind(this));\n\n    if (useLoadedOnly && loadCount == this.tileKeys.length) {\n      this.finishLoading_();\n    }\n\n    if (zoom <= tileCoord[0] && this.state != TileState.LOADED) {\n      while (zoom > tileGrid.getMinZoom()) {\n        const tile = new VectorImageTile(tileCoord, state, sourceRevision,\n          format, tileLoadFunction, urlTileCoord, tileUrlFunction,\n          sourceTileGrid, tileGrid, sourceTiles, pixelRatio, projection,\n          tileClass, UNDEFINED, --zoom);\n        if (tile.state == TileState.LOADED) {\n          this.interimTile = tile;\n          break;\n        }\n      }\n    }\n  }\n\n};\n\ninherits(VectorImageTile, Tile);\n\n\n/**\n * @inheritDoc\n */\nVectorImageTile.prototype.disposeInternal = function() {\n  this.state = TileState.ABORT;\n  this.changed();\n  if (this.interimTile) {\n    this.interimTile.dispose();\n  }\n\n  for (let i = 0, ii = this.tileKeys.length; i < ii; ++i) {\n    const sourceTileKey = this.tileKeys[i];\n    const sourceTile = this.getTile(sourceTileKey);\n    sourceTile.consumers--;\n    if (sourceTile.consumers == 0) {\n      delete this.sourceTiles_[sourceTileKey];\n      sourceTile.dispose();\n    }\n  }\n  this.tileKeys.length = 0;\n  this.sourceTiles_ = null;\n  this.loadListenerKeys_.forEach(unlistenByKey);\n  this.loadListenerKeys_.length = 0;\n  this.sourceTileListenerKeys_.forEach(unlistenByKey);\n  this.sourceTileListenerKeys_.length = 0;\n  Tile.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @param {module:ol/layer/Layer} layer Layer.\n * @return {CanvasRenderingContext2D} The rendering context.\n */\nVectorImageTile.prototype.getContext = function(layer) {\n  const key = getUid(layer).toString();\n  if (!(key in this.context_)) {\n    this.context_[key] = createCanvasContext2D();\n  }\n  return this.context_[key];\n};\n\n\n/**\n * Get the Canvas for this tile.\n * @param {module:ol/layer/Layer} layer Layer.\n * @return {HTMLCanvasElement} Canvas.\n */\nVectorImageTile.prototype.getImage = function(layer) {\n  return this.getReplayState(layer).renderedTileRevision == -1 ?\n    null : this.getContext(layer).canvas;\n};\n\n\n/**\n * @param {module:ol/layer/Layer} layer Layer.\n * @return {module:ol/VectorImageTile~ReplayState} The replay state.\n */\nVectorImageTile.prototype.getReplayState = function(layer) {\n  const key = getUid(layer).toString();\n  if (!(key in this.replayState_)) {\n    this.replayState_[key] = {\n      dirty: false,\n      renderedRenderOrder: null,\n      renderedRevision: -1,\n      renderedTileRevision: -1\n    };\n  }\n  return this.replayState_[key];\n};\n\n\n/**\n * @inheritDoc\n */\nVectorImageTile.prototype.getKey = function() {\n  return this.tileKeys.join('/') + '-' + this.sourceRevision_;\n};\n\n\n/**\n * @param {string} tileKey Key (tileCoord) of the source tile.\n * @return {module:ol/VectorTile} Source tile.\n */\nVectorImageTile.prototype.getTile = function(tileKey) {\n  return this.sourceTiles_[tileKey];\n};\n\n\n/**\n * @inheritDoc\n */\nVectorImageTile.prototype.load = function() {\n  // Source tiles with LOADED state - we just count them because once they are\n  // loaded, we're no longer listening to state changes.\n  let leftToLoad = 0;\n  // Source tiles with ERROR state - we track them because they can still have\n  // an ERROR state after another load attempt.\n  const errorSourceTiles = {};\n\n  if (this.state == TileState.IDLE) {\n    this.setState(TileState.LOADING);\n  }\n  if (this.state == TileState.LOADING) {\n    this.tileKeys.forEach(function(sourceTileKey) {\n      const sourceTile = this.getTile(sourceTileKey);\n      if (sourceTile.state == TileState.IDLE) {\n        sourceTile.setLoader(this.loader_);\n        sourceTile.load();\n      }\n      if (sourceTile.state == TileState.LOADING) {\n        const key = listen(sourceTile, EventType.CHANGE, function(e) {\n          const state = sourceTile.getState();\n          if (state == TileState.LOADED ||\n              state == TileState.ERROR) {\n            const uid = getUid(sourceTile);\n            if (state == TileState.ERROR) {\n              errorSourceTiles[uid] = true;\n            } else {\n              --leftToLoad;\n              delete errorSourceTiles[uid];\n            }\n            if (leftToLoad - Object.keys(errorSourceTiles).length == 0) {\n              this.finishLoading_();\n            }\n          }\n        }.bind(this));\n        this.loadListenerKeys_.push(key);\n        ++leftToLoad;\n      }\n    }.bind(this));\n  }\n  if (leftToLoad - Object.keys(errorSourceTiles).length == 0) {\n    setTimeout(this.finishLoading_.bind(this), 0);\n  }\n};\n\n\n/**\n * @private\n */\nVectorImageTile.prototype.finishLoading_ = function() {\n  let loaded = this.tileKeys.length;\n  let empty = 0;\n  for (let i = loaded - 1; i >= 0; --i) {\n    const state = this.getTile(this.tileKeys[i]).getState();\n    if (state != TileState.LOADED) {\n      --loaded;\n    }\n    if (state == TileState.EMPTY) {\n      ++empty;\n    }\n  }\n  if (loaded == this.tileKeys.length) {\n    this.loadListenerKeys_.forEach(unlistenByKey);\n    this.loadListenerKeys_.length = 0;\n    this.setState(TileState.LOADED);\n  } else {\n    this.setState(empty == this.tileKeys.length ? TileState.EMPTY : TileState.ERROR);\n  }\n};\n\nexport default VectorImageTile;\n\n/**\n * Sets the loader for a tile.\n * @param {module:ol/VectorTile} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n  const loader = loadFeaturesXhr(url, tile.getFormat(), tile.onLoad.bind(tile), tile.onError.bind(tile));\n  tile.setLoader(loader);\n}\n","/**\n * @module ol/VectorTile\n */\nimport {getUid, inherits} from './index.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(new: module:ol/VectorTile, module:ol/tilecoord~TileCoord,\n * module:ol/TileState, string, ?string, module:ol/Tile~LoadFunction)} TileClass\n * @api\n */\n\n/**\n * @constructor\n * @extends {module:ol/Tile}\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/TileState} state State.\n * @param {string} src Data source url.\n * @param {module:ol/format/Feature} format Feature format.\n * @param {module:ol/Tile~LoadFunction} tileLoadFunction Tile load function.\n * @param {module:ol/Tile~Options=} opt_options Tile options.\n */\nconst VectorTile = function(tileCoord, state, src, format, tileLoadFunction, opt_options) {\n\n  Tile.call(this, tileCoord, state, opt_options);\n\n  /**\n   * @type {number}\n   */\n  this.consumers = 0;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/format/Feature}\n   */\n  this.format_ = format;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/Feature>}\n   */\n  this.features_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/featureloader~FeatureLoader}\n   */\n  this.loader_;\n\n  /**\n   * Data projection\n   * @private\n   * @type {module:ol/proj/Projection}\n   */\n  this.projection_ = null;\n\n  /**\n   * @private\n   * @type {Object.<string, module:ol/render/ReplayGroup>}\n   */\n  this.replayGroups_ = {};\n\n  /**\n   * @private\n   * @type {module:ol/Tile~LoadFunction}\n   */\n  this.tileLoadFunction_ = tileLoadFunction;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.url_ = src;\n\n};\n\ninherits(VectorTile, Tile);\n\n/**\n * @const\n * @type {module:ol/extent~Extent}\n */\nconst DEFAULT_EXTENT = [0, 0, 4096, 4096];\n\n\n/**\n * @inheritDoc\n */\nVectorTile.prototype.disposeInternal = function() {\n  this.features_ = null;\n  this.replayGroups_ = {};\n  this.state = TileState.ABORT;\n  this.changed();\n  Tile.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * Gets the extent of the vector tile.\n * @return {module:ol/extent~Extent} The extent.\n * @api\n */\nVectorTile.prototype.getExtent = function() {\n  return this.extent_ || DEFAULT_EXTENT;\n};\n\n\n/**\n * Get the feature format assigned for reading this tile's features.\n * @return {module:ol/format/Feature} Feature format.\n * @api\n */\nVectorTile.prototype.getFormat = function() {\n  return this.format_;\n};\n\n\n/**\n * Get the features for this tile. Geometries will be in the projection returned\n * by {@link module:ol/VectorTile~VectorTile#getProjection}.\n * @return {Array.<module:ol/Feature|module:ol/render/Feature>} Features.\n * @api\n */\nVectorTile.prototype.getFeatures = function() {\n  return this.features_;\n};\n\n\n/**\n * @inheritDoc\n */\nVectorTile.prototype.getKey = function() {\n  return this.url_;\n};\n\n\n/**\n * Get the feature projection of features returned by\n * {@link module:ol/VectorTile~VectorTile#getFeatures}.\n * @return {module:ol/proj/Projection} Feature projection.\n * @api\n */\nVectorTile.prototype.getProjection = function() {\n  return this.projection_;\n};\n\n\n/**\n * @param {module:ol/layer/Layer} layer Layer.\n * @param {string} key Key.\n * @return {module:ol/render/ReplayGroup} Replay group.\n */\nVectorTile.prototype.getReplayGroup = function(layer, key) {\n  return this.replayGroups_[getUid(layer) + ',' + key];\n};\n\n\n/**\n * @inheritDoc\n */\nVectorTile.prototype.load = function() {\n  if (this.state == TileState.IDLE) {\n    this.setState(TileState.LOADING);\n    this.tileLoadFunction_(this, this.url_);\n    this.loader_(null, NaN, null);\n  }\n};\n\n\n/**\n * Handler for successful tile load.\n * @param {Array.<module:ol/Feature>} features The loaded features.\n * @param {module:ol/proj/Projection} dataProjection Data projection.\n * @param {module:ol/extent~Extent} extent Extent.\n */\nVectorTile.prototype.onLoad = function(features, dataProjection, extent) {\n  this.setProjection(dataProjection);\n  this.setFeatures(features);\n  this.setExtent(extent);\n};\n\n\n/**\n * Handler for tile load errors.\n */\nVectorTile.prototype.onError = function() {\n  this.setState(TileState.ERROR);\n};\n\n\n/**\n * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s\n * `tileLoadFunction`. Sets the extent of the vector tile. This is only required\n * for tiles in projections with `tile-pixels` as units. The extent should be\n * set to `[0, 0, tilePixelSize, tilePixelSize]`, where `tilePixelSize` is\n * calculated by multiplying the tile size with the tile pixel ratio. For\n * sources using {@link module:ol/format/MVT~MVT} as feature format, the\n * {@link module:ol/format/MVT~MVT#getLastExtent} method will return the correct\n * extent. The default is `[0, 0, 4096, 4096]`.\n * @param {module:ol/extent~Extent} extent The extent.\n * @api\n */\nVectorTile.prototype.setExtent = function(extent) {\n  this.extent_ = extent;\n};\n\n\n/**\n * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n * Sets the features for the tile.\n * @param {Array.<module:ol/Feature>} features Features.\n * @api\n */\nVectorTile.prototype.setFeatures = function(features) {\n  this.features_ = features;\n  this.setState(TileState.LOADED);\n};\n\n\n/**\n * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n * Sets the projection of the features that were added with\n * {@link module:ol/VectorTile~VectorTile#setFeatures}.\n * @param {module:ol/proj/Projection} projection Feature projection.\n * @api\n */\nVectorTile.prototype.setProjection = function(projection) {\n  this.projection_ = projection;\n};\n\n\n/**\n * @param {module:ol/layer/Layer} layer Layer.\n * @param {string} key Key.\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n */\nVectorTile.prototype.setReplayGroup = function(layer, key, replayGroup) {\n  this.replayGroups_[getUid(layer) + ',' + key] = replayGroup;\n};\n\n\n/**\n * Set the feature loader for reading this tile's features.\n * @param {module:ol/featureloader~FeatureLoader} loader Feature loader.\n * @api\n */\nVectorTile.prototype.setLoader = function(loader) {\n  this.loader_ = loader;\n};\n\nexport default VectorTile;\n","/**\n * @module ol/source/VectorTile\n */\nimport {inherits} from '../index.js';\nimport TileState from '../TileState.js';\nimport VectorImageTile, {defaultLoadFunction} from '../VectorImageTile.js';\nimport Tile from '../VectorTile.js';\nimport {toSize} from '../size.js';\nimport UrlTile from '../source/UrlTile.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection, createForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=128] Cache size.\n * @property {module:ol/format/Feature} [format] Feature format for tiles. Used and required by the default.\n * @property {boolean} [overlaps=true] This source may have overlapping geometries. Setting this\n * to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {module:ol/source/State} [state] Source state.\n * @property {module:ol/VectorTile~TileClass} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/VectorTile}.\n * @property {number} [maxZoom=22] Optional max zoom level.\n * @property {number} [minZoom] Optional min zoom level.\n * @property {number|module:ol/size~Size} [tileSize=512] Optional tile size.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. Could look like this:\n * ```js\n * function(tile, url) {\n *   tile.setLoader(function() {\n *     var data = // ... fetch data\n *     var format = tile.getFormat();\n *     tile.setProjection(format.readProjection(data));\n *     tile.setFeatures(format.readFeatures(data, {\n *       // featureProjection is not required for ol/format/MVT\n *       featureProjection: map.getView().getProjection()\n *     }));\n *     // the line below is only required for ol/format/MVT\n *     tile.setExtent(format.getLastExtent());\n *   };\n * });\n * ```\n * @property {module:ol/Tile~UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {number} [transition] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {Array.<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When set to `true`, tiles will be wrapped horizontally to\n * render multiple worlds.\n */\n\n\n/**\n * @classdesc\n * Class for layer sources providing vector data divided into a tile grid, to be\n * used with {@link module:ol/layer/VectorTile~VectorTile}. Although this source receives tiles\n * with vector features from the server, it is not meant for feature editing.\n * Features are optimized for rendering, their geometries are clipped at or near\n * tile boundaries and simplified for a view resolution. See\n * {@link module:ol/source/Vector} for vector sources that are suitable for feature\n * editing.\n *\n * @constructor\n * @fires module:ol/source/Tile~TileSourceEvent\n * @extends {module:ol/source/UrlTile}\n * @param {module:ol/source/VectorTile~Options=} options Vector tile options.\n * @api\n */\nconst VectorTile = function(options) {\n  const projection = options.projection || 'EPSG:3857';\n\n  const extent = options.extent || extentFromProjection(projection);\n\n  const tileGrid = options.tileGrid || createXYZ({\n    extent: extent,\n    maxZoom: options.maxZoom || 22,\n    minZoom: options.minZoom,\n    tileSize: options.tileSize || 512\n  });\n\n  UrlTile.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize !== undefined ? options.cacheSize : 128,\n    extent: extent,\n    opaque: false,\n    projection: projection,\n    state: options.state,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction ? options.tileLoadFunction : defaultLoadFunction,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX === undefined ? true : options.wrapX,\n    transition: options.transition\n  });\n\n  /**\n   * @private\n   * @type {module:ol/format/Feature}\n   */\n  this.format_ = options.format ? options.format : null;\n\n  /**\n     * @private\n     * @type {Object.<string, module:ol/VectorTile>}\n     */\n  this.sourceTiles_ = {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n  /**\n     * @protected\n     * @type {function(new: module:ol/VectorTile, module:ol/tilecoord~TileCoord, module:ol/TileState, string,\n     *        module:ol/format/Feature, module:ol/Tile~LoadFunction)}\n     */\n  this.tileClass = options.tileClass ? options.tileClass : Tile;\n\n  /**\n   * @private\n   * @type {Object.<string, module:ol/tilegrid/TileGrid>}\n   */\n  this.tileGrids_ = {};\n\n};\n\ninherits(VectorTile, UrlTile);\n\n\n/**\n * @return {boolean} The source can have overlapping geometries.\n */\nVectorTile.prototype.getOverlaps = function() {\n  return this.overlaps_;\n};\n\n/**\n * clear {@link module:ol/TileCache~TileCache} and delete all source tiles\n * @api\n */\nVectorTile.prototype.clear = function() {\n  this.tileCache.clear();\n  this.sourceTiles_ = {};\n};\n\n/**\n * @inheritDoc\n */\nVectorTile.prototype.getTile = function(z, x, y, pixelRatio, projection) {\n  const tileCoordKey = getKeyZXY(z, x, y);\n  if (this.tileCache.containsKey(tileCoordKey)) {\n    return (\n      /** @type {!module:ol/Tile} */ (this.tileCache.get(tileCoordKey))\n    );\n  } else {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord, projection);\n    const tile = new VectorImageTile(\n      tileCoord,\n      urlTileCoord !== null ? TileState.IDLE : TileState.EMPTY,\n      this.getRevision(),\n      this.format_, this.tileLoadFunction, urlTileCoord, this.tileUrlFunction,\n      this.tileGrid, this.getTileGridForProjection(projection),\n      this.sourceTiles_, pixelRatio, projection, this.tileClass,\n      this.handleTileChange.bind(this), tileCoord[0]);\n\n    this.tileCache.set(tileCoordKey, tile);\n    return tile;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nVectorTile.prototype.getTileGridForProjection = function(projection) {\n  const code = projection.getCode();\n  let tileGrid = this.tileGrids_[code];\n  if (!tileGrid) {\n    // A tile grid that matches the tile size of the source tile grid is more\n    // likely to have 1:1 relationships between source tiles and rendered tiles.\n    const sourceTileGrid = this.tileGrid;\n    tileGrid = this.tileGrids_[code] = createForProjection(projection, undefined,\n      sourceTileGrid ? sourceTileGrid.getTileSize(sourceTileGrid.getMinZoom()) : undefined);\n  }\n  return tileGrid;\n};\n\n\n/**\n * @inheritDoc\n */\nVectorTile.prototype.getTilePixelRatio = function(pixelRatio) {\n  return pixelRatio;\n};\n\n\n/**\n * @inheritDoc\n */\nVectorTile.prototype.getTilePixelSize = function(z, pixelRatio, projection) {\n  const tileGrid = this.getTileGridForProjection(projection);\n  const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n  return [Math.round(tileSize[0] * pixelRatio), Math.round(tileSize[1] * pixelRatio)];\n};\nexport default VectorTile;\n","/**\n * @module ol/proj/proj4\n */\nimport {addCoordinateTransforms, addProjection, addEquivalentProjections, get} from '../proj.js';\nimport {get as getTransform} from './transforms.js';\nimport Projection from './Projection.js';\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {?} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  const projCodes = Object.keys(proj4.defs);\n  const len = projCodes.length;\n  let i, j;\n  for (i = 0; i < len; ++i) {\n    const code = projCodes[i];\n    if (!get(code)) {\n      const def = proj4.defs(code);\n      addProjection(new Projection({\n        code: code,\n        axisOrientation: def.axis,\n        metersPerUnit: def.to_meter,\n        units: def.units\n      }));\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    const code1 = projCodes[i];\n    const proj1 = get(code1);\n    for (j = 0; j < len; ++j) {\n      const code2 = projCodes[j];\n      const proj2 = get(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          const transform = proj4(code1, code2);\n          addCoordinateTransforms(proj1, proj2, transform.forward, transform.inverse);\n        }\n      }\n    }\n  }\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredSegmentDistance, squaredDistance} from '../../math.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array.<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array.<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end,\n  stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n  const simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n    opt_simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(flatCoordinates, offset, end,\n      stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0);\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates, offset, end, stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0);\n  return simplifiedFlatCoordinates;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array.<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array.<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(\n        x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset,\n  ends, stride, squaredTolerance, simplifiedFlatCoordinates,\n  simplifiedOffset, simplifiedEnds) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates, offset, end, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<Array.<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates, offset, endss, stride, squaredTolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates, offset, ends, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride,\n  tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if ((dx1 * dy2 == dy1 * dx2) &&\n        ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n        ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates, offset, ends, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates, offset, end, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<Array.<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates, offset, endss, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates, offset, ends, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/Observable\n */\nimport {inherits} from './index.js';\nimport {listen, unlistenByKey, unlisten, listenOnce} from './events.js';\nimport EventTarget from './events/EventTarget.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @constructor\n * @extends {module:ol/events/EventTarget}\n * @fires module:ol/events/Event~Event\n * @struct\n * @api\n */\nconst Observable = function() {\n\n  EventTarget.call(this);\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.revision_ = 0;\n\n};\n\ninherits(Observable, EventTarget);\n\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {module:ol/events~EventsKey|Array.<module:ol/events~EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {module:ol/events~EventsKey} */ (key));\n  }\n}\n\n\n/**\n * Increases the revision counter and dispatches a 'change' event.\n * @api\n */\nObservable.prototype.changed = function() {\n  ++this.revision_;\n  this.dispatchEvent(EventType.CHANGE);\n};\n\n\n/**\n * Dispatches an event and calls all listeners listening for events\n * of this type. The event parameter can either be a string or an\n * Object with a `type` property.\n *\n * @param {{type: string,\n *     target: (EventTarget|module:ol/events/EventTarget|undefined)}|\n *     module:ol/events/Event|string} event Event object.\n * @function\n * @api\n */\nObservable.prototype.dispatchEvent;\n\n\n/**\n * Get the version number for this object.  Each time the object is modified,\n * its version number will be incremented.\n * @return {number} Revision.\n * @api\n */\nObservable.prototype.getRevision = function() {\n  return this.revision_;\n};\n\n\n/**\n * Listen for a certain type of event.\n * @param {string|Array.<string>} type The event type or array of event types.\n * @param {function(?): ?} listener The listener function.\n * @return {module:ol/events~EventsKey|Array.<module:ol/events~EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on = function(type, listener) {\n  if (Array.isArray(type)) {\n    const len = type.length;\n    const keys = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      keys[i] = listen(this, type[i], listener);\n    }\n    return keys;\n  } else {\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n};\n\n\n/**\n * Listen once for a certain type of event.\n * @param {string|Array.<string>} type The event type or array of event types.\n * @param {function(?): ?} listener The listener function.\n * @return {module:ol/events~EventsKey|Array.<module:ol/events~EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once = function(type, listener) {\n  if (Array.isArray(type)) {\n    const len = type.length;\n    const keys = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      keys[i] = listenOnce(this, type[i], listener);\n    }\n    return keys;\n  } else {\n    return listenOnce(this, /** @type {string} */ (type), listener);\n  }\n};\n\n\n/**\n * Unlisten for a certain type of event.\n * @param {string|Array.<string>} type The event type or array of event types.\n * @param {function(?): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un = function(type, listener) {\n  if (Array.isArray(type)) {\n    for (let i = 0, ii = type.length; i < ii; ++i) {\n      unlisten(this, type[i], listener);\n    }\n    return;\n  } else {\n    unlisten(this, /** @type {string} */ (type), listener);\n  }\n};\nexport default Observable;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object~ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange'\n};\n","/**\n * @module ol/render/VectorContext\n */\n/**\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @constructor\n * @abstract\n * @struct\n * @api\n */\nconst VectorContext = function() {\n};\n\n\n/**\n * Render a geometry with a custom renderer.\n *\n * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {Function} renderer Renderer.\n */\nVectorContext.prototype.drawCustom = function(geometry, feature, renderer) {};\n\n\n/**\n * Render a geometry.\n *\n * @param {module:ol/geom/Geometry} geometry The geometry to render.\n */\nVectorContext.prototype.drawGeometry = function(geometry) {};\n\n\n/**\n * Set the rendering style.\n *\n * @param {module:ol/style/Style} style The rendering style.\n */\nVectorContext.prototype.setStyle = function(style) {};\n\n\n/**\n * @param {module:ol/geom/Circle} circleGeometry Circle geometry.\n * @param {module:ol/Feature} feature Feature.\n */\nVectorContext.prototype.drawCircle = function(circleGeometry, feature) {};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n */\nVectorContext.prototype.drawFeature = function(feature, style) {};\n\n\n/**\n * @param {module:ol/geom/GeometryCollection} geometryCollectionGeometry Geometry\n *     collection.\n * @param {module:ol/Feature} feature Feature.\n */\nVectorContext.prototype.drawGeometryCollection = function(geometryCollectionGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/LineString|module:ol/render/Feature} lineStringGeometry Line string geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawLineString = function(lineStringGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/MultiLineString|module:ol/render/Feature} multiLineStringGeometry MultiLineString geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawMultiLineString = function(multiLineStringGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/MultiPoint|module:ol/render/Feature} multiPointGeometry MultiPoint geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawMultiPoint = function(multiPointGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/MultiPolygon} multiPolygonGeometry MultiPolygon geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawMultiPolygon = function(multiPolygonGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/Point|module:ol/render/Feature} pointGeometry Point geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawPoint = function(pointGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/Polygon|module:ol/render/Feature} polygonGeometry Polygon geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawPolygon = function(polygonGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawText = function(geometry, feature) {};\n\n\n/**\n * @param {module:ol/style/Fill} fillStyle Fill style.\n * @param {module:ol/style/Stroke} strokeStyle Stroke style.\n */\nVectorContext.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {};\n\n\n/**\n * @param {module:ol/style/Image} imageStyle Image style.\n * @param {module:ol/render/canvas~DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setImageStyle = function(imageStyle, opt_declutterGroup) {};\n\n\n/**\n * @param {module:ol/style/Text} textStyle Text style.\n * @param {module:ol/render/canvas~DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setTextStyle = function(textStyle, opt_declutterGroup) {};\nexport default VectorContext;\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number): (number|undefined)} Type\n */\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation, delta) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation, delta) {\n  if (rotation !== undefined) {\n    return rotation + delta;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number} n N.\n * @return {module:ol/rotationconstraint~Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = 2 * Math.PI / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        rotation = Math.floor((rotation + delta) / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    });\n}\n\n\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {module:ol/rotationconstraint~Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        if (Math.abs(rotation + delta) <= tolerance) {\n          return 0;\n        } else {\n          return rotation + delta;\n        }\n      } else {\n        return undefined;\n      }\n    });\n}\n","/**\n * @module ol/pointer/EventSource\n */\n/**\n * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n * @param {!Object.<string, function(Event)>} mapping Event mapping.\n * @constructor\n */\nconst EventSource = function(dispatcher, mapping) {\n  /**\n   * @type {module:ol/pointer/PointerEventHandler}\n   */\n  this.dispatcher = dispatcher;\n\n  /**\n   * @private\n   * @const\n   * @type {!Object.<string, function(Event)>}\n   */\n  this.mapping_ = mapping;\n};\n\n\n/**\n * List of events supported by this source.\n * @return {Array.<string>} Event names\n */\nEventSource.prototype.getEvents = function() {\n  return Object.keys(this.mapping_);\n};\n\n\n/**\n * Returns the handler that should handle a given event type.\n * @param {string} eventType The event type.\n * @return {function(Event)} Handler\n */\nEventSource.prototype.getHandlerForEvent = function(eventType) {\n  return this.mapping_[eventType];\n};\nexport default EventSource;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport {getUid, inherits} from '../../index.js';\nimport LayerType from '../../LayerType.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, createEmpty, equals, getIntersection, isEmpty} from '../../extent.js';\nimport IntermediateCanvasRenderer from '../canvas/IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @constructor\n * @extends {module:ol/renderer/canvas/IntermediateCanvas}\n * @param {module:ol/layer/Tile|module:ol/layer/VectorTile} tileLayer Tile layer.\n * @api\n */\nconst CanvasTileLayerRenderer = function(tileLayer) {\n\n  IntermediateCanvasRenderer.call(this, tileLayer);\n\n  /**\n   * @protected\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context = this.context === null ? null : createCanvasContext2D();\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.oversampling_;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.renderedExtent_ = null;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.renderedRevision;\n\n  /**\n   * @protected\n   * @type {!Array.<module:ol/Tile>}\n   */\n  this.renderedTiles = [];\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.newTiles_ = false;\n\n  /**\n   * @protected\n   * @type {module:ol/extent~Extent}\n   */\n  this.tmpExtent = createEmpty();\n\n  /**\n   * @private\n   * @type {module:ol/TileRange}\n   */\n  this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.imageTransform_ = createTransform();\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.zDirection = 0;\n\n};\n\ninherits(CanvasTileLayerRenderer, IntermediateCanvasRenderer);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/TileLayer} The layer renderer.\n */\nCanvasTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasTileLayerRenderer(/** @type {module:ol/layer/Tile} */ (layer));\n};\n\n\n/**\n * @private\n * @param {module:ol/Tile} tile Tile.\n * @return {boolean} Tile is drawable.\n */\nCanvasTileLayerRenderer.prototype.isDrawableTile_ = function(tile) {\n  const tileState = tile.getState();\n  const useInterimTilesOnError = this.getLayer().getUseInterimTilesOnError();\n  return tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      tileState == TileState.ERROR && !useInterimTilesOnError;\n};\n\n\n/**\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {!module:ol/Tile} Tile.\n */\nCanvasTileLayerRenderer.prototype.getTile = function(z, x, y, pixelRatio, projection) {\n  const layer = this.getLayer();\n  const source = /** @type {module:ol/source/Tile} */ (layer.getSource());\n  let tile = source.getTile(z, x, y, pixelRatio, projection);\n  if (tile.getState() == TileState.ERROR) {\n    if (!layer.getUseInterimTilesOnError()) {\n      // When useInterimTilesOnError is false, we consider the error tile as loaded.\n      tile.setState(TileState.LOADED);\n    } else if (layer.getPreload() > 0) {\n      // Preloaded tiles for lower resolutions might have finished loading.\n      this.newTiles_ = true;\n    }\n  }\n  if (!this.isDrawableTile_(tile)) {\n    tile = tile.getInterimTile();\n  }\n  return tile;\n};\n\n/**\n * @inheritDoc\n */\nCanvasTileLayerRenderer.prototype.prepareFrame = function(frameState, layerState) {\n\n  const pixelRatio = frameState.pixelRatio;\n  const size = frameState.size;\n  const viewState = frameState.viewState;\n  const projection = viewState.projection;\n  const viewResolution = viewState.resolution;\n  const viewCenter = viewState.center;\n\n  const tileLayer = this.getLayer();\n  const tileSource = /** @type {module:ol/source/Tile} */ (tileLayer.getSource());\n  const sourceRevision = tileSource.getRevision();\n  const tileGrid = tileSource.getTileGridForProjection(projection);\n  const z = tileGrid.getZForResolution(viewResolution, this.zDirection);\n  const tileResolution = tileGrid.getResolution(z);\n  let oversampling = Math.round(viewResolution / tileResolution) || 1;\n  let extent = frameState.extent;\n\n  if (layerState.extent !== undefined) {\n    extent = getIntersection(extent, layerState.extent);\n  }\n  if (isEmpty(extent)) {\n    // Return false to prevent the rendering of the layer.\n    return false;\n  }\n\n  const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n  const imageExtent = tileGrid.getTileRangeExtent(z, tileRange);\n\n  const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n  /**\n   * @type {Object.<number, Object.<string, module:ol/Tile>>}\n   */\n  const tilesToDrawByZ = {};\n  tilesToDrawByZ[z] = {};\n\n  const findLoadedTiles = this.createLoadedTileFinder(\n    tileSource, projection, tilesToDrawByZ);\n\n  const hints = frameState.viewHints;\n  const animatingOrInteracting = hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING];\n\n  const tmpExtent = this.tmpExtent;\n  const tmpTileRange = this.tmpTileRange_;\n  this.newTiles_ = false;\n  let tile, x, y;\n  for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n    for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n      if (Date.now() - frameState.time > 16 && animatingOrInteracting) {\n        continue;\n      }\n      tile = this.getTile(z, x, y, pixelRatio, projection);\n      if (this.isDrawableTile_(tile)) {\n        const uid = getUid(this);\n        if (tile.getState() == TileState.LOADED) {\n          tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n          const inTransition = tile.inTransition(uid);\n          if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n            this.newTiles_ = true;\n          }\n        }\n        if (tile.getAlpha(uid, frameState.time) === 1) {\n          // don't look for alt tiles if alpha is 1\n          continue;\n        }\n      }\n\n      const childTileRange = tileGrid.getTileCoordChildTileRange(\n        tile.tileCoord, tmpTileRange, tmpExtent);\n      let covered = false;\n      if (childTileRange) {\n        covered = findLoadedTiles(z + 1, childTileRange);\n      }\n      if (!covered) {\n        tileGrid.forEachTileCoordParentTileRange(\n          tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n      }\n\n    }\n  }\n\n  const renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n  if (!(this.renderedResolution && Date.now() - frameState.time > 16 && animatingOrInteracting) && (\n    this.newTiles_ ||\n        !(this.renderedExtent_ && containsExtent(this.renderedExtent_, extent)) ||\n        this.renderedRevision != sourceRevision ||\n        oversampling != this.oversampling_ ||\n        !animatingOrInteracting && renderedResolution != this.renderedResolution\n  )) {\n\n    const context = this.context;\n    if (context) {\n      const tilePixelSize = tileSource.getTilePixelSize(z, pixelRatio, projection);\n      const width = Math.round(tileRange.getWidth() * tilePixelSize[0] / oversampling);\n      const height = Math.round(tileRange.getHeight() * tilePixelSize[1] / oversampling);\n      const canvas = context.canvas;\n      if (canvas.width != width || canvas.height != height) {\n        this.oversampling_ = oversampling;\n        canvas.width = width;\n        canvas.height = height;\n      } else {\n        if (this.renderedExtent_ && !equals(imageExtent, this.renderedExtent_)) {\n          context.clearRect(0, 0, width, height);\n        }\n        oversampling = this.oversampling_;\n      }\n    }\n\n    this.renderedTiles.length = 0;\n    /** @type {Array.<number>} */\n    const zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(function(a, b) {\n      if (a === z) {\n        return 1;\n      } else if (b === z) {\n        return -1;\n      } else {\n        return a > b ? 1 : a < b ? -1 : 0;\n      }\n    });\n    let currentResolution, currentScale, currentTilePixelSize, currentZ, i, ii;\n    let tileExtent, tileGutter, tilesToDraw, w, h;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      currentZ = zs[i];\n      currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n      currentResolution = tileGrid.getResolution(currentZ);\n      currentScale = currentResolution / tileResolution;\n      tileGutter = tilePixelRatio * tileSource.getGutter(projection);\n      tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        tile = tilesToDraw[tileCoordKey];\n        tileExtent = tileGrid.getTileCoordExtent(tile.getTileCoord(), tmpExtent);\n        x = (tileExtent[0] - imageExtent[0]) / tileResolution * tilePixelRatio / oversampling;\n        y = (imageExtent[3] - tileExtent[3]) / tileResolution * tilePixelRatio / oversampling;\n        w = currentTilePixelSize[0] * currentScale / oversampling;\n        h = currentTilePixelSize[1] * currentScale / oversampling;\n        this.drawTileImage(tile, frameState, layerState, x, y, w, h, tileGutter, z === currentZ);\n        this.renderedTiles.push(tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n    this.renderedExtent_ = imageExtent;\n  }\n\n  const scale = this.renderedResolution / viewResolution;\n  const transform = composeTransform(this.imageTransform_,\n    pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n    scale, scale,\n    0,\n    (this.renderedExtent_[0] - viewCenter[0]) / this.renderedResolution * pixelRatio,\n    (viewCenter[1] - this.renderedExtent_[3]) / this.renderedResolution * pixelRatio);\n  composeTransform(this.coordinateToCanvasPixelTransform,\n    pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n    pixelRatio / viewResolution, -pixelRatio / viewResolution,\n    0,\n    -viewCenter[0], -viewCenter[1]);\n\n\n  this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n  this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio,\n    projection, extent, z, tileLayer.getPreload());\n  this.scheduleExpireCache(frameState, tileSource);\n\n  return this.renderedTiles.length > 0;\n};\n\n\n/**\n * @param {module:ol/Tile} tile Tile.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @param {number} x Left of the tile.\n * @param {number} y Top of the tile.\n * @param {number} w Width of the tile.\n * @param {number} h Height of the tile.\n * @param {number} gutter Tile gutter.\n * @param {boolean} transition Apply an alpha transition.\n */\nCanvasTileLayerRenderer.prototype.drawTileImage = function(tile, frameState, layerState, x, y, w, h, gutter, transition) {\n  const image = tile.getImage(this.getLayer());\n  if (!image) {\n    return;\n  }\n  const uid = getUid(this);\n  const alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n  if (alpha === 1 && !this.getLayer().getSource().getOpaque(frameState.viewState.projection)) {\n    this.context.clearRect(x, y, w, h);\n  }\n  const alphaChanged = alpha !== this.context.globalAlpha;\n  if (alphaChanged) {\n    this.context.save();\n    this.context.globalAlpha = alpha;\n  }\n  this.context.drawImage(image, gutter, gutter,\n    image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n\n  if (alphaChanged) {\n    this.context.restore();\n  }\n  if (alpha !== 1) {\n    frameState.animate = true;\n  } else if (transition) {\n    tile.endTransition(uid);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasTileLayerRenderer.prototype.getImage = function() {\n  const context = this.context;\n  return context ? context.canvas : null;\n};\n\n\n/**\n * @function\n * @return {module:ol/layer/Tile|module:ol/layer/VectorTile}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\n\n/**\n * @inheritDoc\n */\nCanvasTileLayerRenderer.prototype.getImageTransform = function() {\n  return this.imageTransform_;\n};\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/VectorTileRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance than the other options.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  HYBRID: 'hybrid',\n  VECTOR: 'vector'\n};\n","/**\n * @module ol/source/Source\n */\nimport {inherits} from '../index.js';\nimport {UNDEFINED} from '../functions.js';\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(module:ol/PluggableMap~FrameState): (string|Array.<string>)} Attribution\n */\n\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings (`{@link module:ol/source/Source~Attribution}`)\n *\n * @typedef {string|Array.<string>|module:ol/source/Source~Attribution} AttributionLike\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {module:ol/proj~ProjectionLike} projection\n * @property {module:ol/source/State} [state]\n * @property {boolean} [wrapX]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/Object}\n * @param {module:ol/source/Source~Options} options Source options.\n * @api\n */\nconst Source = function(options) {\n\n  BaseObject.call(this);\n\n  /**\n   * @private\n   * @type {module:ol/proj/Projection}\n   */\n  this.projection_ = getProjection(options.projection);\n\n  /**\n   * @private\n   * @type {?module:ol/source/Source~Attribution}\n   */\n  this.attributions_ = this.adaptAttributions_(options.attributions);\n\n  /**\n   * @private\n   * @type {module:ol/source/State}\n   */\n  this.state_ = options.state !== undefined ?\n    options.state : SourceState.READY;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n};\n\ninherits(Source, BaseObject);\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {module:ol/source/Source~AttributionLike|undefined} attributionLike The attribution option.\n * @return {?module:ol/source/Source~Attribution} An attribution function (or null).\n */\nSource.prototype.adaptAttributions_ = function(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function(frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function(frameState) {\n    return [attributionLike];\n  };\n};\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {Object.<string, boolean>} skippedFeatureUids Skipped feature uids.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T} callback Feature callback.\n * @return {T|undefined} Callback result.\n * @template T\n */\nSource.prototype.forEachFeatureAtCoordinate = UNDEFINED;\n\n\n/**\n * Get the attribution function for the source.\n * @return {?module:ol/source/Source~Attribution} Attribution function.\n */\nSource.prototype.getAttributions = function() {\n  return this.attributions_;\n};\n\n\n/**\n * Get the projection of the source.\n * @return {module:ol/proj/Projection} Projection.\n * @api\n */\nSource.prototype.getProjection = function() {\n  return this.projection_;\n};\n\n\n/**\n * @abstract\n * @return {Array.<number>|undefined} Resolutions.\n */\nSource.prototype.getResolutions = function() {};\n\n\n/**\n * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n * @return {module:ol/source/State} State.\n * @api\n */\nSource.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * @return {boolean|undefined} Wrap X.\n */\nSource.prototype.getWrapX = function() {\n  return this.wrapX_;\n};\n\n\n/**\n * Refreshes the source and finally dispatches a 'change' event.\n * @api\n */\nSource.prototype.refresh = function() {\n  this.changed();\n};\n\n\n/**\n * Set the attributions of the source.\n * @param {module:ol/source/Source~AttributionLike|undefined} attributions Attributions.\n *     Can be passed as `string`, `Array<string>`, `{@link module:ol/source/Source~Attribution}`,\n *     or `undefined`.\n * @api\n */\nSource.prototype.setAttributions = function(attributions) {\n  this.attributions_ = this.adaptAttributions_(attributions);\n  this.changed();\n};\n\n\n/**\n * Set the state of the source.\n * @param {module:ol/source/State} state State.\n * @protected\n */\nSource.prototype.setState = function(state) {\n  this.state_ = state;\n  this.changed();\n};\nexport default Source;\n","/**\n * @module ol/structs/RBush\n */\nimport {getUid} from '../index.js';\nimport rbush from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n\n/**\n * Wrapper around the RBush by Vladimir Agafonkin.\n *\n * @constructor\n * @param {number=} opt_maxEntries Max entries.\n * @see https://github.com/mourner/rbush\n * @struct\n * @template T\n */\nconst RBush = function(opt_maxEntries) {\n\n  /**\n   * @private\n   */\n  this.rbush_ = rbush(opt_maxEntries, undefined);\n\n  /**\n   * A mapping between the objects added to this rbush wrapper\n   * and the objects that are actually added to the internal rbush.\n   * @private\n   * @type {Object.<number, module:ol/structs/RBush~Entry>}\n   */\n  this.items_ = {};\n\n};\n\n\n/**\n * Insert a value into the RBush.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.insert = function(extent, value) {\n  /** @type {module:ol/structs/RBush~Entry} */\n  const item = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3],\n    value: value\n  };\n\n  this.rbush_.insert(item);\n  this.items_[getUid(value)] = item;\n};\n\n\n/**\n * Bulk-insert values into the RBush.\n * @param {Array.<module:ol/extent~Extent>} extents Extents.\n * @param {Array.<T>} values Values.\n */\nRBush.prototype.load = function(extents, values) {\n  const items = new Array(values.length);\n  for (let i = 0, l = values.length; i < l; i++) {\n    const extent = extents[i];\n    const value = values[i];\n\n    /** @type {module:ol/structs/RBush~Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value\n    };\n    items[i] = item;\n    this.items_[getUid(value)] = item;\n  }\n  this.rbush_.load(items);\n};\n\n\n/**\n * Remove a value from the RBush.\n * @param {T} value Value.\n * @return {boolean} Removed.\n */\nRBush.prototype.remove = function(value) {\n  const uid = getUid(value);\n\n  // get the object in which the value was wrapped when adding to the\n  // internal rbush. then use that object to do the removal.\n  const item = this.items_[uid];\n  delete this.items_[uid];\n  return this.rbush_.remove(item) !== null;\n};\n\n\n/**\n * Update the extent of a value in the RBush.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.update = function(extent, value) {\n  const item = this.items_[getUid(value)];\n  const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n  if (!equals(bbox, extent)) {\n    this.remove(value);\n    this.insert(extent, value);\n  }\n};\n\n\n/**\n * Return all values in the RBush.\n * @return {Array.<T>} All.\n */\nRBush.prototype.getAll = function() {\n  const items = this.rbush_.all();\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Return all values in the given extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {Array.<T>} All in extent.\n */\nRBush.prototype.getInExtent = function(extent) {\n  /** @type {module:ol/structs/RBush~Entry} */\n  const bbox = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3]\n  };\n  const items = this.rbush_.search(bbox);\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Calls a callback function with each value in the tree.\n * If the callback returns a truthy value, this value is returned without\n * checking the rest of the tree.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach = function(callback, opt_this) {\n  return this.forEach_(this.getAll(), callback, opt_this);\n};\n\n\n/**\n * Calls a callback function with each value in the provided extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEachInExtent = function(extent, callback, opt_this) {\n  return this.forEach_(this.getInExtent(extent), callback, opt_this);\n};\n\n\n/**\n * @param {Array.<T>} values Values.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @private\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach_ = function(values, callback, opt_this) {\n  let result;\n  for (let i = 0, l = values.length; i < l; i++) {\n    result = callback.call(opt_this, values[i]);\n    if (result) {\n      return result;\n    }\n  }\n  return result;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nRBush.prototype.isEmpty = function() {\n  return isEmpty(this.items_);\n};\n\n\n/**\n * Remove all values from the RBush.\n */\nRBush.prototype.clear = function() {\n  this.rbush_.clear();\n  this.items_ = {};\n};\n\n\n/**\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nRBush.prototype.getExtent = function(opt_extent) {\n  // FIXME add getExtent() to rbush\n  const data = this.rbush_.data;\n  return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n};\n\n\n/**\n * @param {module:ol/structs/RBush} rbush R-Tree.\n */\nRBush.prototype.concat = function(rbush) {\n  this.rbush_.load(rbush.rbush_.all());\n  for (const i in rbush.items_) {\n    this.items_[i | 0] = rbush.items_[i | 0];\n  }\n};\nexport default RBush;\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n\n/**\n * @private\n * @type {!Object.<string, Object.<string, module:ol/proj~TransformFunction>>}\n */\nlet transforms = {};\n\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {module:ol/proj/Projection} source Source.\n * @param {module:ol/proj/Projection} destination Destination.\n * @param {module:ol/proj~TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {module:ol/proj/Projection} source Source projection.\n * @param {module:ol/proj/Projection} destination Destination projection.\n * @return {module:ol/proj~TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {module:ol/proj~TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/render/Feature\n */\nimport {UNDEFINED} from '../functions.js';\nimport {extend} from '../array.js';\nimport {createOrUpdateFromCoordinate, createOrUpdateFromFlatCoordinates, getCenter, getHeight} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {getInteriorPointOfArray, getInteriorPointsOfMultiArray} from '../geom/flat/interiorpoint.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {get as getProjection} from '../proj.js';\nimport {transform2D} from '../geom/flat/transform.js';\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n *\n * @constructor\n * @param {module:ol/geom/GeometryType} type Geometry type.\n * @param {Array.<number>} flatCoordinates Flat coordinates. These always need\n *     to be right-handed for polygons.\n * @param {Array.<number>|Array.<Array.<number>>} ends Ends or Endss.\n * @param {Object.<string, *>} properties Properties.\n * @param {number|string|undefined} id Feature id.\n */\nconst RenderFeature = function(type, flatCoordinates, ends, properties, id) {\n  /**\n   * @private\n   * @type {module:ol/extent~Extent|undefined}\n   */\n  this.extent_;\n\n  /**\n   * @private\n   * @type {number|string|undefined}\n   */\n  this.id_ = id;\n\n  /**\n   * @private\n   * @type {module:ol/geom/GeometryType}\n   */\n  this.type_ = type;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatCoordinates_ = flatCoordinates;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatMidpoints_ = null;\n\n  /**\n   * @private\n   * @type {Array.<number>|Array.<Array.<number>>}\n   */\n  this.ends_ = ends;\n\n  /**\n   * @private\n   * @type {Object.<string, *>}\n   */\n  this.properties_ = properties;\n\n};\n\n\n/**\n * @type {module:ol/transform~Transform}\n */\nconst tmpTransform = createTransform();\n\n\n/**\n * Get a feature property by its key.\n * @param {string} key Key\n * @return {*} Value for the requested key.\n * @api\n */\nRenderFeature.prototype.get = function(key) {\n  return this.properties_[key];\n};\n\n\n/**\n * @return {Array.<number>|Array.<Array.<number>>} Ends or endss.\n */\nRenderFeature.prototype.getEnds =\nRenderFeature.prototype.getEndss = function() {\n  return this.ends_;\n};\n\n\n/**\n * Get the extent of this feature's geometry.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nRenderFeature.prototype.getExtent = function() {\n  if (!this.extent_) {\n    this.extent_ = this.type_ === GeometryType.POINT ?\n      createOrUpdateFromCoordinate(this.flatCoordinates_) :\n      createOrUpdateFromFlatCoordinates(\n        this.flatCoordinates_, 0, this.flatCoordinates_.length, 2);\n\n  }\n  return this.extent_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nRenderFeature.prototype.getFlatInteriorPoint = function() {\n  if (!this.flatInteriorPoints_) {\n    const flatCenter = getCenter(this.getExtent());\n    this.flatInteriorPoints_ = getInteriorPointOfArray(\n      this.flatCoordinates_, 0, this.ends_, 2, flatCenter, 0);\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nRenderFeature.prototype.getFlatInteriorPoints = function() {\n  if (!this.flatInteriorPoints_) {\n    const flatCenters = linearRingssCenter(\n      this.flatCoordinates_, 0, this.ends_, 2);\n    this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n      this.flatCoordinates_, 0, this.ends_, 2, flatCenters);\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoint.\n */\nRenderFeature.prototype.getFlatMidpoint = function() {\n  if (!this.flatMidpoints_) {\n    this.flatMidpoints_ = interpolatePoint(\n      this.flatCoordinates_, 0, this.flatCoordinates_.length, 2, 0.5);\n  }\n  return this.flatMidpoints_;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nRenderFeature.prototype.getFlatMidpoints = function() {\n  if (!this.flatMidpoints_) {\n    this.flatMidpoints_ = [];\n    const flatCoordinates = this.flatCoordinates_;\n    let offset = 0;\n    const ends = this.ends_;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates, offset, end, 2, 0.5);\n      extend(this.flatMidpoints_, midpoint);\n      offset = end;\n    }\n  }\n  return this.flatMidpoints_;\n};\n\n/**\n * Get the feature identifier.  This is a stable identifier for the feature and\n * is set when reading data from a remote source.\n * @return {number|string|undefined} Id.\n * @api\n */\nRenderFeature.prototype.getId = function() {\n  return this.id_;\n};\n\n\n/**\n * @return {Array.<number>} Flat coordinates.\n */\nRenderFeature.prototype.getOrientedFlatCoordinates = function() {\n  return this.flatCoordinates_;\n};\n\n\n/**\n * @return {Array.<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n    RenderFeature.prototype.getOrientedFlatCoordinates;\n\n\n/**\n * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n * determining the geometry type in style function (see {@link #getType}).\n * @return {module:ol/render/Feature} Feature.\n * @api\n */\nRenderFeature.prototype.getGeometry = function() {\n  return this;\n};\n\n\n/**\n * Get the feature properties.\n * @return {Object.<string, *>} Feature properties.\n * @api\n */\nRenderFeature.prototype.getProperties = function() {\n  return this.properties_;\n};\n\n\n/**\n * Get the feature for working with its geometry.\n * @return {module:ol/render/Feature} Feature.\n */\nRenderFeature.prototype.getSimplifiedGeometry =\n    RenderFeature.prototype.getGeometry;\n\n\n/**\n * @return {number} Stride.\n */\nRenderFeature.prototype.getStride = function() {\n  return 2;\n};\n\n\n/**\n * @return {undefined}\n */\nRenderFeature.prototype.getStyleFunction = UNDEFINED;\n\n\n/**\n * Get the type of this feature's geometry.\n * @return {module:ol/geom/GeometryType} Geometry type.\n * @api\n */\nRenderFeature.prototype.getType = function() {\n  return this.type_;\n};\n\n/**\n * Transform geometry coordinates from tile pixel space to projected.\n * The SRS of the source and destination are expected to be the same.\n *\n * @param {module:ol/proj~ProjectionLike} source The current projection\n * @param {module:ol/proj~ProjectionLike} destination The desired projection.\n */\nRenderFeature.prototype.transform = function(source, destination) {\n  source = getProjection(source);\n  const pixelExtent = source.getExtent();\n  const projectedExtent = source.getWorldExtent();\n  const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n  composeTransform(tmpTransform,\n    projectedExtent[0], projectedExtent[3],\n    scale, -scale, 0,\n    0, 0);\n  transform2D(this.flatCoordinates_, 0, this.flatCoordinates_.length, 2,\n    tmpTransform, this.flatCoordinates_);\n};\nexport default RenderFeature;\n","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport PBF from 'pbf';\nimport FeatureFormat, {transformWithOptions} from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {linearRingIsClockwise} from '../geom/flat/orient.js';\nimport Projection from '../proj/Projection.js';\nimport Units from '../proj/Units.js';\nimport RenderFeature from '../render/Feature.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {function((module:ol/geom/Geometry|Object.<string,*>)=)|function(module:ol/geom/GeometryType,Array.<number>,(Array.<number>|Array.<Array.<number>>),Object.<string,*>,number)} [featureClass]\n * Class for features returned by {@link module:ol/format/MVT#readFeatures}. Set to\n * {@link module:ol/Feature~Feature} to get full editing and geometry support at the cost of\n * decreased rendering performance. The default is {@link module:ol/render/Feature~RenderFeature},\n * which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating\n * features.\n * @property {string} [layerName='layer'] Name of the feature attribute that\n * holds the layer name.\n * @property {Array.<string>} [layers] Layers to read features from. If not\n * provided, features will be read from all layers.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @constructor\n * @extends {module:ol/format/Feature}\n * @param {module:ol/format/MVT~Options=} opt_options Options.\n * @api\n */\nconst MVT = function(opt_options) {\n\n  FeatureFormat.call(this);\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {module:ol/proj/Projection}\n   */\n  this.dataProjection = new Projection({\n    code: '',\n    units: Units.TILE_PIXELS\n  });\n\n  /**\n   * @private\n   * @type {function((module:ol/geom/Geometry|Object.<string,*>)=)|\n   *     function(module:ol/geom/GeometryType,Array.<number>,\n   *         (Array.<number>|Array.<Array.<number>>),Object.<string,*>,number)}\n   */\n  this.featureClass_ = options.featureClass ?\n    options.featureClass : RenderFeature;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.layers_ = options.layers ? options.layers : null;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent_ = null;\n\n};\n\ninherits(MVT, FeatureFormat);\n\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {Object} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    const layer = {\n      keys: [],\n      values: [],\n      features: []\n    };\n    const end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {Object} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    let value = null;\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value = tag === 1 ? pbf.readString() :\n        tag === 2 ? pbf.readFloat() :\n          tag === 3 ? pbf.readDouble() :\n            tag === 4 ? pbf.readVarint64() :\n              tag === 5 ? pbf.readVarint() :\n                tag === 6 ? pbf.readSVarint() :\n                  tag === 7 ? pbf.readBoolean() : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {Object} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      const key = feature.layer.keys[pbf.readVarint()];\n      const value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @suppress {missingProperties}\n * @param {Object} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  const end = pbf.readVarint() + pbf.pos;\n\n  const feature = {\n    layer: layer,\n    type: 0,\n    properties: {}\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n\n/**\n * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n * property.\n * @suppress {missingProperties}\n * @param {Object} pbf PBF.\n * @param {Object} feature Raw feature.\n * @param {Array.<number>} flatCoordinates Array to store flat coordinates in.\n * @param {Array.<number>} ends Array to store ends in.\n * @private\n */\nMVT.prototype.readRawGeometry_ = function(pbf, feature, flatCoordinates, ends) {\n  pbf.pos = feature.geometry;\n\n  const end = pbf.readVarint() + pbf.pos;\n  let cmd = 1;\n  let length = 0;\n  let x = 0;\n  let y = 0;\n  let coordsLen = 0;\n  let currentEnd = 0;\n\n  while (pbf.pos < end) {\n    if (!length) {\n      const cmdLen = pbf.readVarint();\n      cmd = cmdLen & 0x7;\n      length = cmdLen >> 3;\n    }\n\n    length--;\n\n    if (cmd === 1 || cmd === 2) {\n      x += pbf.readSVarint();\n      y += pbf.readSVarint();\n\n      if (cmd === 1) { // moveTo\n        if (coordsLen > currentEnd) {\n          ends.push(coordsLen);\n          currentEnd = coordsLen;\n        }\n      }\n\n      flatCoordinates.push(x, y);\n      coordsLen += 2;\n\n    } else if (cmd === 7) {\n\n      if (coordsLen > currentEnd) {\n        // close polygon\n        flatCoordinates.push(\n          flatCoordinates[currentEnd], flatCoordinates[currentEnd + 1]);\n        coordsLen += 2;\n      }\n\n    } else {\n      assert(false, 59); // Invalid command found in the PBF\n    }\n  }\n\n  if (coordsLen > currentEnd) {\n    ends.push(coordsLen);\n    currentEnd = coordsLen;\n  }\n\n};\n\n\n/**\n * @suppress {missingProperties}\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {module:ol/geom/GeometryType} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {module:ol/geom/GeometryType} */\n  let geometryType;\n  if (type === 1) {\n    geometryType = numEnds === 1 ?\n      GeometryType.POINT : GeometryType.MULTI_POINT;\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ?\n      GeometryType.LINE_STRING :\n      GeometryType.MULTI_LINE_STRING;\n  } else if (type === 3) {\n    geometryType = GeometryType.POLYGON;\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\n/**\n * @private\n * @param {Object} pbf PBF\n * @param {Object} rawFeature Raw Mapbox feature.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/Feature|module:ol/render/Feature} Feature.\n */\nMVT.prototype.createFeature_ = function(pbf, rawFeature, opt_options) {\n  const type = rawFeature.type;\n  if (type === 0) {\n    return null;\n  }\n\n  let feature;\n  const id = rawFeature.id;\n  const values = rawFeature.properties;\n  values[this.layerName_] = rawFeature.layer.name;\n\n  const flatCoordinates = [];\n  let ends = [];\n  this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n  const geometryType = getGeometryType(type, ends.length);\n\n  if (this.featureClass_ === RenderFeature) {\n    feature = new this.featureClass_(geometryType, flatCoordinates, ends, values, id);\n  } else {\n    let geom;\n    if (geometryType == GeometryType.POLYGON) {\n      const endss = [];\n      let offset = 0;\n      let prevEndIndex = 0;\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n          endss.push(ends.slice(prevEndIndex, i));\n          prevEndIndex = i;\n        }\n        offset = end;\n      }\n      if (endss.length > 1) {\n        ends = endss;\n        geom = new MultiPolygon(null);\n      } else {\n        geom = new Polygon(null);\n      }\n    } else {\n      geom = geometryType === GeometryType.POINT ? new Point(null) :\n        geometryType === GeometryType.LINE_STRING ? new LineString(null) :\n          geometryType === GeometryType.POLYGON ? new Polygon(null) :\n            geometryType === GeometryType.MULTI_POINT ? new MultiPoint (null) :\n              geometryType === GeometryType.MULTI_LINE_STRING ? new MultiLineString(null) :\n                null;\n    }\n    geom.setFlatCoordinates(GeometryLayout.XY, flatCoordinates, ends);\n    feature = new this.featureClass_();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    }\n    const geometry = transformWithOptions(geom, false, this.adaptOptions(opt_options));\n    feature.setGeometry(geometry);\n    feature.setId(id);\n    feature.setProperties(values);\n  }\n\n  return feature;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMVT.prototype.getLastExtent = function() {\n  return this.extent_;\n};\n\n\n/**\n * @inheritDoc\n */\nMVT.prototype.getType = function() {\n  return FormatType.ARRAY_BUFFER;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMVT.prototype.readFeatures = function(source, opt_options) {\n  const layers = this.layers_;\n\n  const pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n  const pbfLayers = pbf.readFields(layersPBFReader, {});\n  /** @type {Array.<module:ol/Feature|module:ol/render/Feature>} */\n  const features = [];\n  for (const name in pbfLayers) {\n    if (layers && layers.indexOf(name) == -1) {\n      continue;\n    }\n    const pbfLayer = pbfLayers[name];\n\n    for (let i = 0, ii = pbfLayer.length; i < ii; ++i) {\n      const rawFeature = readRawFeature(pbf, pbfLayer, i);\n      features.push(this.createFeature_(pbf, rawFeature));\n    }\n    this.extent_ = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n  }\n\n  return features;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMVT.prototype.readProjection = function(source) {\n  return this.dataProjection;\n};\n\n\n/**\n * Sets the layers that features will be read from.\n * @param {Array.<string>} layers Layers.\n * @api\n */\nMVT.prototype.setLayers = function(layers) {\n  this.layers_ = layers;\n};\n\n\n/**\n * Not implemented.\n * @override\n */\nMVT.prototype.readFeature = function() {};\n\n\n/**\n * Not implemented.\n * @override\n */\nMVT.prototype.readGeometry = function() {};\n\n\n/**\n * Not implemented.\n * @override\n */\nMVT.prototype.writeFeature = function() {};\n\n\n/**\n * Not implemented.\n * @override\n */\nMVT.prototype.writeGeometry = function() {};\n\n\n/**\n * Not implemented.\n * @override\n */\nMVT.prototype.writeFeatures = function() {};\nexport default MVT;\n","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {inherits} from '../index.js';\nimport {boundingExtent} from '../extent.js';\nimport OWS from '../format/OWS.js';\nimport {readHref} from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport {readString, readNonNegativeInteger, readDecimal} from '../format/xsd.js';\nimport {pushParseAndPop, makeStructureNS,\n  makeObjectPropertySetter, makeObjectPropertyPusher, makeArrayPusher} from '../xml.js';\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @constructor\n * @extends {module:ol/format/XML}\n * @api\n */\nconst WMTSCapabilities = function() {\n  XML.call(this);\n\n  /**\n   * @type {module:ol/format/OWS}\n   * @private\n   */\n  this.owsParser_ = new OWS();\n};\n\ninherits(WMTSCapabilities, XML);\n\n\n/**\n * @const\n * @type {Array.<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @type {Array.<null|string>}\n */\nconst OWS_NAMESPACE_URIS = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Contents': makeObjectPropertySetter(readContents)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst CONTENTS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Layer': makeObjectPropertyPusher(readLayer),\n    'TileMatrixSet': makeObjectPropertyPusher(readTileMatrixSet)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst LAYER_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Style': makeObjectPropertyPusher(readStyle),\n    'Format': makeObjectPropertyPusher(readString),\n    'TileMatrixSetLink': makeObjectPropertyPusher(readTileMatrixSetLink),\n    'Dimension': makeObjectPropertyPusher(readDimensions),\n    'ResourceURL': makeObjectPropertyPusher(readResourceUrl)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'WGS84BoundingBox': makeObjectPropertySetter(readWgs84BoundingBox),\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LegendURL': makeObjectPropertyPusher(readLegendUrl)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst TMS_LINKS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'TileMatrixSet': makeObjectPropertySetter(readString),\n    'TileMatrixSetLimits': makeObjectPropertySetter(readTileMatrixLimitsList)\n  });\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst TMS_LIMITS_LIST_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'TileMatrixLimits': makeArrayPusher(readTileMatrixLimits)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst TMS_LIMITS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'TileMatrix': makeObjectPropertySetter(readString),\n    'MinTileRow': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxTileRow': makeObjectPropertySetter(readNonNegativeInteger),\n    'MinTileCol': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxTileCol': makeObjectPropertySetter(readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst DIMENSION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Default': makeObjectPropertySetter(readString),\n    'Value': makeObjectPropertyPusher(readString)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst WGS84_BBOX_READERS = makeStructureNS(\n  OWS_NAMESPACE_URIS, {\n    'LowerCorner': makeArrayPusher(readCoordinates),\n    'UpperCorner': makeArrayPusher(readCoordinates)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst TMS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'WellKnownScaleSet': makeObjectPropertySetter(readString),\n    'TileMatrix': makeObjectPropertyPusher(readTileMatrix)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'SupportedCRS': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst TM_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'TopLeftCorner': makeObjectPropertySetter(readCoordinates),\n    'ScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'TileWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'TileHeight': makeObjectPropertySetter(readNonNegativeInteger),\n    'MatrixWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'MatrixHeight': makeObjectPropertySetter(readNonNegativeInteger)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * Read a WMTS capabilities document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WMTS capabilities.\n * @api\n */\nWMTSCapabilities.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWMTSCapabilities.prototype.readFromNode = function(node) {\n  const version = node.getAttribute('version').trim();\n  let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n  if (!WMTSCapabilityObject) {\n    return null;\n  }\n  WMTSCapabilityObject['version'] = version;\n  WMTSCapabilityObject = pushParseAndPop(WMTSCapabilityObject, PARSERS, node, []);\n  return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readContents(node, objectStack) {\n  return pushParseAndPop({}, CONTENTS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nfunction readLayer(node, objectStack) {\n  return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nfunction readTileMatrixSet(node, objectStack) {\n  return pushParseAndPop({}, TMS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  const style = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nfunction readTileMatrixSetLink(node, objectStack) {\n  return pushParseAndPop({}, TMS_LINKS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nfunction readDimensions(node, objectStack) {\n  return pushParseAndPop({}, DIMENSION_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nfunction readResourceUrl(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nfunction readWgs84BoundingBox(node, objectStack) {\n  const coordinates = pushParseAndPop([], WGS84_BBOX_READERS, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nfunction readLegendUrl(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = readHref(node);\n  return legend;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nfunction readCoordinates(node, objectStack) {\n  const coordinates = readString(node).split(' ');\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nfunction readTileMatrix(node, objectStack) {\n  return pushParseAndPop({}, TM_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nfunction readTileMatrixLimitsList(node, objectStack) {\n  return pushParseAndPop([], TMS_LIMITS_LIST_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nfunction readTileMatrixLimits(node, objectStack) {\n  return pushParseAndPop({}, TMS_LIMITS_PARSERS, node, objectStack);\n}\n\n\nexport default WMTSCapabilities;\n","/**\n * @module ol/loadingstrategy\n */\n\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array.<module:ol/extent~Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array.<module:ol/extent~Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {function(module:ol/extent~Extent, number): Array.<module:ol/extent~Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {module:ol/extent~Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array.<module:ol/extent~Extent>} Extents.\n     */\n    function(extent, resolution) {\n      const z = tileGrid.getZForResolution(resolution);\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array.<module:ol/extent~Extent>} */\n      const extents = [];\n      /** @type {module:ol/tilecoord~TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n        for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {module:ol/proj/Projection} sourceProj Source projection.\n * @param {module:ol/proj/Projection} targetProj Target projection.\n * @param {module:ol/coordinate~Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj,\n  targetCenter, targetResolution) {\n\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n        sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {module:ol/coordinate~Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n  const dX = x - centroidX;\n  const dY = y - centroidY;\n  const distance = Math.sqrt(dX * dX + dY * dY);\n  return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {module:ol/extent~Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {module:ol/extent~Extent} targetExtent Target extent.\n * @param {module:ol/reproj/Triangulation} triangulation\n * Calculated triangulation.\n * @param {Array.<{extent: module:ol/extent~Extent,\n *                 image: (HTMLCanvasElement|Image|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio,\n  sourceResolution, sourceExtent, targetResolution, targetExtent,\n  triangulation, sources, gutter, opt_renderEdges) {\n\n  const context = createCanvasContext2D(Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height));\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function(src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round(pixelRatio * canvasWidthInUnits / sourceResolution),\n    Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function(src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    stitchContext.drawImage(\n      src.image,\n      gutter, gutter,\n      src.image.width - 2 * gutter, src.image.height - 2 * gutter,\n      xPos * stitchScale, yPos * stitchScale,\n      srcWidth * stitchScale, srcHeight * stitchScale);\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function(triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0], y0 = source[0][1];\n    let x1 = source[1][0], y1 = source[1][1];\n    let x2 = source[2][0], y2 = source[2][1];\n    const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n    const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n    const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n    const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n    const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n    const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0]\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n    const centroidX = (u0 + u1 + u2) / 3;\n    const centroidY = (v0 + v1 + v2) / 3;\n    const p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n    const p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n    const p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n\n    context.moveTo(p1[0], p1[1]);\n    context.lineTo(p0[0], p0[1]);\n    context.lineTo(p2[0], p2[1]);\n    context.clip();\n\n    context.transform(\n      affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n\n    context.translate(sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY);\n\n    context.scale(sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio);\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function(triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport {inherits} from '../index.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {linearRing as linearRingArea} from '../geom/flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from '../geom/flat/closest.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {douglasPeucker} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst LinearRing = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(LinearRing, SimpleGeometry);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/LinearRing} Clone.\n * @override\n * @api\n */\nLinearRing.prototype.clone = function() {\n  const linearRing = new LinearRing(null);\n  linearRing.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return linearRing;\n};\n\n\n/**\n * @inheritDoc\n */\nLinearRing.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return assignClosestPoint(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Return the area of the linear ring on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nLinearRing.prototype.getArea = function() {\n  return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the coordinates of the linear ring.\n * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates.\n * @override\n * @api\n */\nLinearRing.prototype.getCoordinates = function() {\n  return inflateCoordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * @inheritDoc\n */\nLinearRing.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n    squaredTolerance, simplifiedFlatCoordinates, 0);\n  const simplifiedLinearRing = new LinearRing(null);\n  simplifiedLinearRing.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates);\n  return simplifiedLinearRing;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nLinearRing.prototype.getType = function() {\n  return GeometryType.LINEAR_RING;\n};\n\n\n/**\n * @inheritDoc\n */\nLinearRing.prototype.intersectsExtent = function(extent) {};\n\n\n/**\n * Set the coordinates of the linear ring.\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nLinearRing.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nLinearRing.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default LinearRing;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend'\n\n};\n","/**\n * @module ol/Disposable\n */\nimport {UNDEFINED} from './functions.js';\n\n/**\n * Objects that need to clean up after themselves.\n * @constructor\n */\nconst Disposable = function() {};\n\n/**\n * The object has already been disposed.\n * @type {boolean}\n * @private\n */\nDisposable.prototype.disposed_ = false;\n\n/**\n * Clean up.\n */\nDisposable.prototype.dispose = function() {\n  if (!this.disposed_) {\n    this.disposed_ = true;\n    this.disposeInternal();\n  }\n};\n\n/**\n * Extension point for disposable objects.\n * @protected\n */\nDisposable.prototype.disposeInternal = UNDEFINED;\nexport default Disposable;\n","/**\n * @module ol/ImageBase\n */\nimport {inherits} from './index.js';\nimport EventTarget from './events/EventTarget.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @constructor\n * @abstract\n * @extends {module:ol/events/EventTarget}\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/ImageState} state State.\n */\nconst ImageBase = function(extent, resolution, pixelRatio, state) {\n\n  EventTarget.call(this);\n\n  /**\n   * @protected\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent = extent;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelRatio_ = pixelRatio;\n\n  /**\n   * @protected\n   * @type {number|undefined}\n   */\n  this.resolution = resolution;\n\n  /**\n   * @protected\n   * @type {module:ol/ImageState}\n   */\n  this.state = state;\n\n};\n\ninherits(ImageBase, EventTarget);\n\n\n/**\n * @protected\n */\nImageBase.prototype.changed = function() {\n  this.dispatchEvent(EventType.CHANGE);\n};\n\n\n/**\n * @return {module:ol/extent~Extent} Extent.\n */\nImageBase.prototype.getExtent = function() {\n  return this.extent;\n};\n\n\n/**\n * @abstract\n * @return {HTMLCanvasElement|Image|HTMLVideoElement} Image.\n */\nImageBase.prototype.getImage = function() {};\n\n\n/**\n * @return {number} PixelRatio.\n */\nImageBase.prototype.getPixelRatio = function() {\n  return this.pixelRatio_;\n};\n\n\n/**\n * @return {number} Resolution.\n */\nImageBase.prototype.getResolution = function() {\n  return /** @type {number} */ (this.resolution);\n};\n\n\n/**\n * @return {module:ol/ImageState} State.\n */\nImageBase.prototype.getState = function() {\n  return this.state;\n};\n\n\n/**\n * Load not yet loaded URI.\n * @abstract\n */\nImageBase.prototype.load = function() {};\n\nexport default ImageBase;\n","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n","/**\n * @module ol/renderer/Map\n */\nimport {getUid, inherits} from '../index.js';\nimport Disposable from '../Disposable.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE, UNDEFINED} from '../functions.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, invert as invertTransform, setFromArray as transformSetFromArray} from '../transform.js';\n\n\n/**\n * @constructor\n * @abstract\n * @extends {module:ol/Disposable}\n * @param {module:ol/PluggableMap} map Map.\n * @struct\n */\nconst MapRenderer = function(map) {\n  Disposable.call(this);\n\n  /**\n   * @private\n   * @type {module:ol/PluggableMap}\n   */\n  this.map_ = map;\n\n  /**\n   * @private\n   * @type {!Object.<string, module:ol/renderer/Layer>}\n   */\n  this.layerRenderers_ = {};\n\n  /**\n   * @private\n   * @type {Object.<string, module:ol/events~EventsKey>}\n   */\n  this.layerRendererListeners_ = {};\n\n  /**\n   * @private\n   * @type {Array.<module:ol/renderer/Layer>}\n   */\n  this.layerRendererConstructors_ = [];\n\n};\n\ninherits(MapRenderer, Disposable);\n\n\n/**\n * Register layer renderer constructors.\n * @param {Array.<module:ol/renderer/Layer>} constructors Layer renderers.\n */\nMapRenderer.prototype.registerLayerRenderers = function(constructors) {\n  this.layerRendererConstructors_.push.apply(this.layerRendererConstructors_, constructors);\n};\n\n\n/**\n * Get the registered layer renderer constructors.\n * @return {Array.<module:ol/renderer/Layer>} Registered layer renderers.\n */\nMapRenderer.prototype.getLayerRendererConstructors = function() {\n  return this.layerRendererConstructors_;\n};\n\n\n/**\n * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n * @protected\n */\nMapRenderer.prototype.calculateMatrices2D = function(frameState) {\n  const viewState = frameState.viewState;\n  const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n  const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n  composeTransform(coordinateToPixelTransform,\n    frameState.size[0] / 2, frameState.size[1] / 2,\n    1 / viewState.resolution, -1 / viewState.resolution,\n    -viewState.rotation,\n    -viewState.center[0], -viewState.center[1]);\n\n  invertTransform(\n    transformSetFromArray(pixelToCoordinateTransform, coordinateToPixelTransform));\n};\n\n\n/**\n * Removes all layer renderers.\n */\nMapRenderer.prototype.removeLayerRenderers = function() {\n  for (const key in this.layerRenderers_) {\n    this.removeLayerRendererByKey_(key).dispose();\n  }\n};\n\n\n/**\n * @param {module:ol/PluggableMap} map Map.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {function(this: S, (module:ol/Feature|module:ol/render/Feature),\n *     module:ol/layer/Layer): T} callback Feature callback.\n * @param {S} thisArg Value to use as `this` when executing `callback`.\n * @param {function(this: U, module:ol/layer/Layer): boolean} layerFilter Layer filter\n *     function, only layers which are visible and for which this function\n *     returns `true` will be tested for features.  By default, all visible\n *     layers will be tested.\n * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n * @return {T|undefined} Callback result.\n * @template S,T,U\n */\nMapRenderer.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg,\n  layerFilter, thisArg2) {\n  let result;\n  const viewState = frameState.viewState;\n  const viewResolution = viewState.resolution;\n\n  /**\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   * @param {module:ol/layer/Layer} layer Layer.\n   * @return {?} Callback result.\n   */\n  function forEachFeatureAtCoordinate(feature, layer) {\n    const key = getUid(feature).toString();\n    const managed = frameState.layerStates[getUid(layer)].managed;\n    if (!(key in frameState.skippedFeatureUids && !managed)) {\n      return callback.call(thisArg, feature, managed ? layer : null);\n    }\n  }\n\n  const projection = viewState.projection;\n\n  let translatedCoordinate = coordinate;\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n    const worldWidth = getWidth(projectionExtent);\n    const x = coordinate[0];\n    if (x < projectionExtent[0] || x > projectionExtent[2]) {\n      const worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n      translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n    }\n  }\n\n  const layerStates = frameState.layerStatesArray;\n  const numLayers = layerStates.length;\n  let i;\n  for (i = numLayers - 1; i >= 0; --i) {\n    const layerState = layerStates[i];\n    const layer = layerState.layer;\n    if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n      const layerRenderer = this.getLayerRenderer(layer);\n      if (layer.getSource()) {\n        result = layerRenderer.forEachFeatureAtCoordinate(\n          layer.getSource().getWrapX() ? translatedCoordinate : coordinate,\n          frameState, hitTolerance, forEachFeatureAtCoordinate, thisArg);\n      }\n      if (result) {\n        return result;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @abstract\n * @param {module:ol~Pixel} pixel Pixel.\n * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n *     callback.\n * @param {S} thisArg Value to use as `this` when executing `callback`.\n * @param {function(this: U, module:ol/layer/Layer): boolean} layerFilter Layer filter\n *     function, only layers which are visible and for which this function\n *     returns `true` will be tested for features.  By default, all visible\n *     layers will be tested.\n * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n * @return {T|undefined} Callback result.\n * @template S,T,U\n */\nMapRenderer.prototype.forEachLayerAtPixel = function(pixel, frameState, callback, thisArg,\n  layerFilter, thisArg2) {};\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {function(this: U, module:ol/layer/Layer): boolean} layerFilter Layer filter\n *     function, only layers which are visible and for which this function\n *     returns `true` will be tested for features.  By default, all visible\n *     layers will be tested.\n * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n * @return {boolean} Is there a feature at the given coordinate?\n * @template U\n */\nMapRenderer.prototype.hasFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n  const hasFeature = this.forEachFeatureAtCoordinate(\n    coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n\n  return hasFeature !== undefined;\n};\n\n\n/**\n * @param {module:ol/layer/Layer} layer Layer.\n * @protected\n * @return {module:ol/renderer/Layer} Layer renderer.\n */\nMapRenderer.prototype.getLayerRenderer = function(layer) {\n  const layerKey = getUid(layer).toString();\n  if (layerKey in this.layerRenderers_) {\n    return this.layerRenderers_[layerKey];\n  } else {\n    let renderer;\n    for (let i = 0, ii = this.layerRendererConstructors_.length; i < ii; ++i) {\n      const candidate = this.layerRendererConstructors_[i];\n      if (candidate['handles'](layer)) {\n        renderer = candidate['create'](this, layer);\n        break;\n      }\n    }\n    if (renderer) {\n      this.layerRenderers_[layerKey] = renderer;\n      this.layerRendererListeners_[layerKey] = listen(renderer,\n        EventType.CHANGE, this.handleLayerRendererChange_, this);\n    } else {\n      throw new Error('Unable to create renderer for layer: ' + layer.getType());\n    }\n    return renderer;\n  }\n};\n\n\n/**\n * @param {string} layerKey Layer key.\n * @protected\n * @return {module:ol/renderer/Layer} Layer renderer.\n */\nMapRenderer.prototype.getLayerRendererByKey = function(layerKey) {\n  return this.layerRenderers_[layerKey];\n};\n\n\n/**\n * @protected\n * @return {Object.<string, module:ol/renderer/Layer>} Layer renderers.\n */\nMapRenderer.prototype.getLayerRenderers = function() {\n  return this.layerRenderers_;\n};\n\n\n/**\n * @return {module:ol/PluggableMap} Map.\n */\nMapRenderer.prototype.getMap = function() {\n  return this.map_;\n};\n\n\n/**\n * Handle changes in a layer renderer.\n * @private\n */\nMapRenderer.prototype.handleLayerRendererChange_ = function() {\n  this.map_.render();\n};\n\n\n/**\n * @param {string} layerKey Layer key.\n * @return {module:ol/renderer/Layer} Layer renderer.\n * @private\n */\nMapRenderer.prototype.removeLayerRendererByKey_ = function(layerKey) {\n  const layerRenderer = this.layerRenderers_[layerKey];\n  delete this.layerRenderers_[layerKey];\n\n  unlistenByKey(this.layerRendererListeners_[layerKey]);\n  delete this.layerRendererListeners_[layerKey];\n\n  return layerRenderer;\n};\n\n\n/**\n * Render.\n * @param {?module:ol/PluggableMap~FrameState} frameState Frame state.\n */\nMapRenderer.prototype.renderFrame = UNDEFINED;\n\n\n/**\n * @param {module:ol/PluggableMap} map Map.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @private\n */\nMapRenderer.prototype.removeUnusedLayerRenderers_ = function(map, frameState) {\n  for (const layerKey in this.layerRenderers_) {\n    if (!frameState || !(layerKey in frameState.layerStates)) {\n      this.removeLayerRendererByKey_(layerKey).dispose();\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @protected\n */\nMapRenderer.prototype.scheduleExpireIconCache = function(frameState) {\n  frameState.postRenderFunctions.push(/** @type {module:ol/PluggableMap~PostRenderFunction} */ (expireIconCache));\n};\n\n\n/**\n * @param {!module:ol/PluggableMap~FrameState} frameState Frame state.\n * @protected\n */\nMapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function(frameState) {\n  for (const layerKey in this.layerRenderers_) {\n    if (!(layerKey in frameState.layerStates)) {\n      frameState.postRenderFunctions.push(\n        /** @type {module:ol/PluggableMap~PostRenderFunction} */ (this.removeUnusedLayerRenderers_.bind(this))\n      );\n      return;\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/layer/Layer~State} state1 First layer state.\n * @param {module:ol/layer/Layer~State} state2 Second layer state.\n * @return {number} The zIndex difference.\n */\nexport function sortByZIndex(state1, state2) {\n  return state1.zIndex - state2.zIndex;\n}\nexport default MapRenderer;\n","/**\n * @module ol/interaction/Select\n */\nimport {getUid, inherits} from '../index.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {extend, includes} from '../array.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {singleClick, never, shiftKeyOnly, pointerMove} from '../events/condition.js';\nimport {TRUE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Interaction from '../interaction/Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {clear} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @enum {string}\n */\nconst SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select'\n};\n\n\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function((module:ol/Feature|module:ol/render/Feature), module:ol/layer/Layer):\n *     boolean} FilterFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition~singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array.<module:ol/layer/Layer>|function(module:ol/layer/Layer): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style}).\n * @property {module:ol/events/condition~Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {module:ol/events/condition~Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition~shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {module:ol/Collection.<module:ol/Feature>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {module:ol/interaction/Select~FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {boolean} [wrapX=true] Wrap the world horizontally on the selection\n * overlay.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n *\n * @param {SelectEventType} type The event type.\n * @param {Array.<module:ol/Feature>} selected Selected features.\n * @param {Array.<module:ol/Feature>} deselected Deselected features.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Associated\n *     {@link module:ol/MapBrowserEvent}.\n * @extends {module:ol/events/Event}\n * @constructor\n */\nconst SelectEvent = function(type, selected, deselected, mapBrowserEvent) {\n  Event.call(this, type);\n\n  /**\n   * Selected features array.\n   * @type {Array.<module:ol/Feature>}\n   * @api\n   */\n  this.selected = selected;\n\n  /**\n   * Deselected features array.\n   * @type {Array.<module:ol/Feature>}\n   * @api\n   */\n  this.deselected = deselected;\n\n  /**\n   * Associated {@link module:ol/MapBrowserEvent}.\n   * @type {module:ol/MapBrowserEvent}\n   * @api\n   */\n  this.mapBrowserEvent = mapBrowserEvent;\n};\n\ninherits(SelectEvent, Event);\n\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * Selected features are added to an internal unmanaged layer.\n *\n * @constructor\n * @extends {module:ol/interaction/Interaction}\n * @param {module:ol/interaction/Select~Options=} opt_options Options.\n * @fires SelectEvent\n * @api\n */\nconst Select = function(opt_options) {\n\n  Interaction.call(this, {\n    handleEvent: handleEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : singleClick;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.removeCondition_ = options.removeCondition ? options.removeCondition : never;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.toggleCondition_ = options.toggleCondition ? options.toggleCondition : shiftKeyOnly;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multi_ = options.multi ? options.multi : false;\n\n  /**\n   * @private\n   * @type {module:ol/interaction/Select~FilterFunction}\n   */\n  this.filter_ = options.filter ? options.filter : TRUE;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n  const featureOverlay = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      features: options.features,\n      wrapX: options.wrapX\n    }),\n    style: options.style ? options.style :\n      getDefaultStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @private\n   * @type {module:ol/layer/Vector}\n   */\n  this.featureOverlay_ = featureOverlay;\n\n  /** @type {function(module:ol/layer/Layer): boolean} */\n  let layerFilter;\n  if (options.layers) {\n    if (typeof options.layers === 'function') {\n      layerFilter = options.layers;\n    } else {\n      const layers = options.layers;\n      layerFilter = function(layer) {\n        return includes(layers, layer);\n      };\n    }\n  } else {\n    layerFilter = TRUE;\n  }\n\n  /**\n   * @private\n   * @type {function(module:ol/layer/Layer): boolean}\n   */\n  this.layerFilter_ = layerFilter;\n\n  /**\n   * An association between selected feature (key)\n   * and layer (value)\n   * @private\n   * @type {Object.<number, module:ol/layer/Layer>}\n   */\n  this.featureLayerAssociation_ = {};\n\n  const features = this.featureOverlay_.getSource().getFeaturesCollection();\n  listen(features, CollectionEventType.ADD,\n    this.addFeature_, this);\n  listen(features, CollectionEventType.REMOVE,\n    this.removeFeature_, this);\n\n};\n\ninherits(Select, Interaction);\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {module:ol/layer/Layer} layer Layer.\n * @private\n */\nSelect.prototype.addFeatureLayerAssociation_ = function(feature, layer) {\n  const key = getUid(feature);\n  this.featureLayerAssociation_[key] = layer;\n};\n\n\n/**\n * Get the selected features.\n * @return {module:ol/Collection.<module:ol/Feature>} Features collection.\n * @api\n */\nSelect.prototype.getFeatures = function() {\n  return this.featureOverlay_.getSource().getFeaturesCollection();\n};\n\n\n/**\n * Returns the Hit-detection tolerance.\n * @returns {number} Hit tolerance in pixels.\n * @api\n */\nSelect.prototype.getHitTolerance = function() {\n  return this.hitTolerance_;\n};\n\n\n/**\n * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of\n * the (last) selected feature. Note that this will not work with any\n * programmatic method like pushing features to\n * {@link module:ol/interaction/Select~Select#getFeatures collection}.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature\n * @return {module:ol/layer/Vector} Layer.\n * @api\n */\nSelect.prototype.getLayer = function(feature) {\n  const key = getUid(feature);\n  return (\n    /** @type {module:ol/layer/Vector} */ (this.featureLayerAssociation_[key])\n  );\n};\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\n * selected state of features.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Select}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!this.condition_(mapBrowserEvent)) {\n    return true;\n  }\n  const add = this.addCondition_(mapBrowserEvent);\n  const remove = this.removeCondition_(mapBrowserEvent);\n  const toggle = this.toggleCondition_(mapBrowserEvent);\n  const set = !add && !remove && !toggle;\n  const map = mapBrowserEvent.map;\n  const features = this.featureOverlay_.getSource().getFeaturesCollection();\n  const deselected = [];\n  const selected = [];\n  if (set) {\n    // Replace the currently selected feature(s) with the feature(s) at the\n    // pixel, or clear the selected feature(s) if there is no feature at\n    // the pixel.\n    clear(this.featureLayerAssociation_);\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      (\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @param {module:ol/layer/Layer} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function(feature, layer) {\n          if (this.filter_(feature, layer)) {\n            selected.push(feature);\n            this.addFeatureLayerAssociation_(feature, layer);\n            return !this.multi_;\n          }\n        }).bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n    for (let i = features.getLength() - 1; i >= 0; --i) {\n      const feature = features.item(i);\n      const index = selected.indexOf(feature);\n      if (index > -1) {\n        // feature is already selected\n        selected.splice(index, 1);\n      } else {\n        features.remove(feature);\n        deselected.push(feature);\n      }\n    }\n    if (selected.length !== 0) {\n      features.extend(selected);\n    }\n  } else {\n    // Modify the currently selected feature(s).\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      (\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @param {module:ol/layer/Layer} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function(feature, layer) {\n          if (this.filter_(feature, layer)) {\n            if ((add || toggle) && !includes(features.getArray(), feature)) {\n              selected.push(feature);\n              this.addFeatureLayerAssociation_(feature, layer);\n            } else if ((remove || toggle) && includes(features.getArray(), feature)) {\n              deselected.push(feature);\n              this.removeFeatureLayerAssociation_(feature);\n            }\n            return !this.multi_;\n          }\n        }).bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n    for (let j = deselected.length - 1; j >= 0; --j) {\n      features.remove(deselected[j]);\n    }\n    features.extend(selected);\n  }\n  if (selected.length > 0 || deselected.length > 0) {\n    this.dispatchEvent(\n      new SelectEvent(SelectEventType.SELECT,\n        selected, deselected, mapBrowserEvent));\n  }\n  return pointerMove(mapBrowserEvent);\n}\n\n\n/**\n * Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features. This only works for the canvas renderer and\n * not for WebGL.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @api\n */\nSelect.prototype.setHitTolerance = function(hitTolerance) {\n  this.hitTolerance_ = hitTolerance;\n};\n\n\n/**\n * Remove the interaction from its current map, if any,  and attach it to a new\n * map, if any. Pass `null` to just remove the interaction from the current map.\n * @param {module:ol/PluggableMap} map Map.\n * @override\n * @api\n */\nSelect.prototype.setMap = function(map) {\n  const currentMap = this.getMap();\n  const selectedFeatures =\n      this.featureOverlay_.getSource().getFeaturesCollection();\n  if (currentMap) {\n    selectedFeatures.forEach(currentMap.unskipFeature.bind(currentMap));\n  }\n  Interaction.prototype.setMap.call(this, map);\n  this.featureOverlay_.setMap(map);\n  if (map) {\n    selectedFeatures.forEach(map.skipFeature.bind(map));\n  }\n};\n\n\n/**\n * @return {module:ol/style/Style~StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\n  extend(styles[GeometryType.GEOMETRY_COLLECTION], styles[GeometryType.LINE_STRING]);\n\n  return function(feature, resolution) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\n/**\n * @param {module:ol/Collection~CollectionEvent} evt Event.\n * @private\n */\nSelect.prototype.addFeature_ = function(evt) {\n  const map = this.getMap();\n  if (map) {\n    map.skipFeature(/** @type {module:ol/Feature} */ (evt.element));\n  }\n};\n\n\n/**\n * @param {module:ol/Collection~CollectionEvent} evt Event.\n * @private\n */\nSelect.prototype.removeFeature_ = function(evt) {\n  const map = this.getMap();\n  if (map) {\n    map.unskipFeature(/** @type {module:ol/Feature} */ (evt.element));\n  }\n};\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @private\n */\nSelect.prototype.removeFeatureLayerAssociation_ = function(feature) {\n  const key = getUid(feature);\n  delete this.featureLayerAssociation_[key];\n};\n\n\nexport default Select;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/format/XML\n */\nimport {isDocument, isNode, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @constructor\n * @abstract\n * @struct\n */\nconst XML = function() {\n};\n\n\n/**\n * @param {Document|Node|string} source Source.\n * @return {Object} The parsed result.\n */\nXML.prototype.read = function(source) {\n  if (isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else if (isNode(source)) {\n    return this.readFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = parse(source);\n    return this.readFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function(doc) {};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function(node) {};\nexport default XML;\n","/**\n * @module ol/format/XLink\n */\n\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readHref(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n}\n","/**\n * @module ol/format/TextFeature\n */\nimport {inherits} from '../index.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for text feature formats.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/format/Feature}\n */\nconst TextFeature = function() {\n  FeatureFormat.call(this);\n};\n\ninherits(TextFeature, FeatureFormat);\n\n\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {string} Text.\n */\nfunction getText(source) {\n  if (typeof source === 'string') {\n    return source;\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @inheritDoc\n */\nTextFeature.prototype.getType = function() {\n  return FormatType.TEXT;\n};\n\n\n/**\n * @inheritDoc\n */\nTextFeature.prototype.readFeature = function(source, opt_options) {\n  return this.readFeatureFromText(getText(source), this.adaptOptions(opt_options));\n};\n\n\n/**\n * @abstract\n * @param {string} text Text.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @protected\n * @return {module:ol/Feature} Feature.\n */\nTextFeature.prototype.readFeatureFromText = function(text, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nTextFeature.prototype.readFeatures = function(source, opt_options) {\n  return this.readFeaturesFromText(getText(source), this.adaptOptions(opt_options));\n};\n\n\n/**\n * @abstract\n * @param {string} text Text.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @protected\n * @return {Array.<module:ol/Feature>} Features.\n */\nTextFeature.prototype.readFeaturesFromText = function(text, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nTextFeature.prototype.readGeometry = function(source, opt_options) {\n  return this.readGeometryFromText(getText(source), this.adaptOptions(opt_options));\n};\n\n\n/**\n * @abstract\n * @param {string} text Text.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @protected\n * @return {module:ol/geom/Geometry} Geometry.\n */\nTextFeature.prototype.readGeometryFromText = function(text, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nTextFeature.prototype.readProjection = function(source) {\n  return this.readProjectionFromText(getText(source));\n};\n\n\n/**\n * @param {string} text Text.\n * @protected\n * @return {module:ol/proj/Projection} Projection.\n */\nTextFeature.prototype.readProjectionFromText = function(text) {\n  return this.dataProjection;\n};\n\n\n/**\n * @inheritDoc\n */\nTextFeature.prototype.writeFeature = function(feature, opt_options) {\n  return this.writeFeatureText(feature, this.adaptOptions(opt_options));\n};\n\n\n/**\n * @abstract\n * @param {module:ol/Feature} feature Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @protected\n * @return {string} Text.\n */\nTextFeature.prototype.writeFeatureText = function(feature, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nTextFeature.prototype.writeFeatures = function(features, opt_options) {\n  return this.writeFeaturesText(features, this.adaptOptions(opt_options));\n};\n\n\n/**\n * @abstract\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @protected\n * @return {string} Text.\n */\nTextFeature.prototype.writeFeaturesText = function(features, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nTextFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  return this.writeGeometryText(geometry, this.adaptOptions(opt_options));\n};\n\n\n/**\n * @abstract\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @protected\n * @return {string} Text.\n */\nTextFeature.prototype.writeGeometryText = function(geometry, opt_options) {};\nexport default TextFeature;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport {inherits} from '../index.js';\nimport {listen, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @constructor\n * @extends {module:ol/geom/Geometry}\n * @param {Array.<module:ol/geom/Geometry>=} opt_geometries Geometries.\n * @api\n */\nconst GeometryCollection = function(opt_geometries) {\n\n  Geometry.call(this);\n\n  /**\n   * @private\n   * @type {Array.<module:ol/geom/Geometry>}\n   */\n  this.geometries_ = opt_geometries ? opt_geometries : null;\n\n  this.listenGeometriesChange_();\n};\n\ninherits(GeometryCollection, Geometry);\n\n\n/**\n * @param {Array.<module:ol/geom/Geometry>} geometries Geometries.\n * @return {Array.<module:ol/geom/Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.unlistenGeometriesChange_ = function() {\n  if (!this.geometries_) {\n    return;\n  }\n  for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    unlisten(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.listenGeometriesChange_ = function() {\n  if (!this.geometries_) {\n    return;\n  }\n  for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    listen(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/GeometryCollection} Clone.\n * @override\n * @api\n */\nGeometryCollection.prototype.clone = function() {\n  const geometryCollection = new GeometryCollection(null);\n  geometryCollection.setGeometries(this.geometries_);\n  return geometryCollection;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    minSquaredDistance = geometries[i].closestPointXY(\n      x, y, closestPoint, minSquaredDistance);\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.containsXY = function(x, y) {\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].containsXY(x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.computeExtent = function(extent) {\n  createOrUpdateEmpty(extent);\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    extend(extent, geometries[i].getExtent());\n  }\n  return extent;\n};\n\n\n/**\n * Return the geometries that make up this geometry collection.\n * @return {Array.<module:ol/geom/Geometry>} Geometries.\n * @api\n */\nGeometryCollection.prototype.getGeometries = function() {\n  return cloneGeometries(this.geometries_);\n};\n\n\n/**\n * @return {Array.<module:ol/geom/Geometry>} Geometries.\n */\nGeometryCollection.prototype.getGeometriesArray = function() {\n  return this.geometries_;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.getSimplifiedGeometry = function(squaredTolerance) {\n  if (this.simplifiedGeometryRevision != this.getRevision()) {\n    clear(this.simplifiedGeometryCache);\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n    this.simplifiedGeometryRevision = this.getRevision();\n  }\n  if (squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n       squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n    return this;\n  }\n  const key = squaredTolerance.toString();\n  if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n    return this.simplifiedGeometryCache[key];\n  } else {\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.getType = function() {\n  return GeometryType.GEOMETRY_COLLECTION;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.intersectsExtent = function(extent) {\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].intersectsExtent(extent)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nGeometryCollection.prototype.isEmpty = function() {\n  return this.geometries_.length === 0;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.rotate = function(angle, anchor) {\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].rotate(angle, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.scale = function(sx, opt_sy, opt_anchor) {\n  let anchor = opt_anchor;\n  if (!anchor) {\n    anchor = getCenter(this.getExtent());\n  }\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].scale(sx, opt_sy, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * Set the geometries that make up this geometry collection.\n * @param {Array.<module:ol/geom/Geometry>} geometries Geometries.\n * @api\n */\nGeometryCollection.prototype.setGeometries = function(geometries) {\n  this.setGeometriesArray(cloneGeometries(geometries));\n};\n\n\n/**\n * @param {Array.<module:ol/geom/Geometry>} geometries Geometries.\n */\nGeometryCollection.prototype.setGeometriesArray = function(geometries) {\n  this.unlistenGeometriesChange_();\n  this.geometries_ = geometries;\n  this.listenGeometriesChange_();\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.applyTransform = function(transformFn) {\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].applyTransform(transformFn);\n  }\n  this.changed();\n};\n\n\n/**\n * Translate the geometry.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @override\n * @api\n */\nGeometryCollection.prototype.translate = function(deltaX, deltaY) {\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].translate(deltaX, deltaY);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.disposeInternal = function() {\n  this.unlistenGeometriesChange_();\n  Geometry.prototype.disposeInternal.call(this);\n};\nexport default GeometryCollection;\n","/**\n * @module ol/format/JSONFeature\n */\nimport {inherits} from '../index.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/format/Feature}\n */\nconst JSONFeature = function() {\n  FeatureFormat.call(this);\n};\n\ninherits(JSONFeature, FeatureFormat);\n\n\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  } else {\n    return null;\n  }\n}\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.getType = function() {\n  return FormatType.JSON;\n};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readFeature = function(source, opt_options) {\n  return this.readFeatureFromObject(\n    getObject(source), this.getReadOptions(source, opt_options));\n};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readFeatures = function(source, opt_options) {\n  return this.readFeaturesFromObject(\n    getObject(source), this.getReadOptions(source, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @protected\n * @return {module:ol/Feature} Feature.\n */\nJSONFeature.prototype.readFeatureFromObject = function(object, opt_options) {};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @protected\n * @return {Array.<module:ol/Feature>} Features.\n */\nJSONFeature.prototype.readFeaturesFromObject = function(object, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readGeometry = function(source, opt_options) {\n  return this.readGeometryFromObject(\n    getObject(source), this.getReadOptions(source, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @protected\n * @return {module:ol/geom/Geometry} Geometry.\n */\nJSONFeature.prototype.readGeometryFromObject = function(object, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.readProjection = function(source) {\n  return this.readProjectionFromObject(getObject(source));\n};\n\n\n/**\n * @abstract\n * @param {Object} object Object.\n * @protected\n * @return {module:ol/proj/Projection} Projection.\n */\nJSONFeature.prototype.readProjectionFromObject = function(object) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.writeFeature = function(feature, opt_options) {\n  return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {Object} Object.\n */\nJSONFeature.prototype.writeFeatureObject = function(feature, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.writeFeatures = function(features, opt_options) {\n  return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {Object} Object.\n */\nJSONFeature.prototype.writeFeaturesObject = function(features, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nJSONFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n};\n\n\n/**\n * @abstract\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {Object} Object.\n */\nJSONFeature.prototype.writeGeometryObject = function(geometry, opt_options) {};\nexport default JSONFeature;\n","/**\n * @module ol/TileRange\n */\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n *\n * @constructor\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @struct\n */\nconst TileRange = function(minX, maxX, minY, maxY) {\n\n  /**\n   * @type {number}\n   */\n  this.minX = minX;\n\n  /**\n   * @type {number}\n   */\n  this.maxX = maxX;\n\n  /**\n   * @type {number}\n   */\n  this.minY = minY;\n\n  /**\n   * @type {number}\n   */\n  this.maxY = maxY;\n\n};\n\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {module:ol/TileRange=} tileRange TileRange.\n * @return {module:ol/TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @return {boolean} Contains tile coordinate.\n */\nTileRange.prototype.contains = function(tileCoord) {\n  return this.containsXY(tileCoord[1], tileCoord[2]);\n};\n\n\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n * @return {boolean} Contains.\n */\nTileRange.prototype.containsTileRange = function(tileRange) {\n  return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n};\n\n\n/**\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @return {boolean} Contains coordinate.\n */\nTileRange.prototype.containsXY = function(x, y) {\n  return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n};\n\n\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n * @return {boolean} Equals.\n */\nTileRange.prototype.equals = function(tileRange) {\n  return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n};\n\n\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n */\nTileRange.prototype.extend = function(tileRange) {\n  if (tileRange.minX < this.minX) {\n    this.minX = tileRange.minX;\n  }\n  if (tileRange.maxX > this.maxX) {\n    this.maxX = tileRange.maxX;\n  }\n  if (tileRange.minY < this.minY) {\n    this.minY = tileRange.minY;\n  }\n  if (tileRange.maxY > this.maxY) {\n    this.maxY = tileRange.maxY;\n  }\n};\n\n\n/**\n * @return {number} Height.\n */\nTileRange.prototype.getHeight = function() {\n  return this.maxY - this.minY + 1;\n};\n\n\n/**\n * @return {module:ol/size~Size} Size.\n */\nTileRange.prototype.getSize = function() {\n  return [this.getWidth(), this.getHeight()];\n};\n\n\n/**\n * @return {number} Width.\n */\nTileRange.prototype.getWidth = function() {\n  return this.maxX - this.minX + 1;\n};\n\n\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n * @return {boolean} Intersects.\n */\nTileRange.prototype.intersects = function(tileRange) {\n  return this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY;\n};\nexport default TileRange;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\n  let pointX = NaN;\n  let pointY = NaN;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    pointX = flatCoordinates[offset];\n    pointY = flatCoordinates[offset + 1];\n  } else if (n == 2) {\n    pointX = (1 - fraction) * flatCoordinates[offset] +\n        fraction * flatCoordinates[offset + stride];\n    pointY = (1 - fraction) * flatCoordinates[offset + 1] +\n        fraction * flatCoordinates[offset + stride + 1];\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      const t = (target - cumulativeLengths[-index - 2]) /\n          (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      const o = offset + (-index - 2) * stride;\n      pointX = lerp(\n        flatCoordinates[o], flatCoordinates[o + stride], t);\n      pointY = lerp(\n        flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\n    } else {\n      pointX = flatCoordinates[offset + index * stride];\n      pointY = flatCoordinates[offset + index * stride + 1];\n    }\n  }\n  if (opt_dest) {\n    opt_dest[0] = pointX;\n    opt_dest[1] = pointY;\n    return opt_dest;\n  } else {\n    return [pointX, pointY];\n  }\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i],\n      flatCoordinates[lo * stride + i], t));\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates, offset, end, stride, m, false);\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * @see http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * @see http://hg.python.org/cpython/file/2.7/Lib/heapq.py\n *\n * @constructor\n * @param {function(T): number} priorityFunction Priority function.\n * @param {function(T): string} keyFunction Key function.\n * @struct\n * @template T\n */\nconst PriorityQueue = function(priorityFunction, keyFunction) {\n\n  /**\n   * @type {function(T): number}\n   * @private\n   */\n  this.priorityFunction_ = priorityFunction;\n\n  /**\n   * @type {function(T): string}\n   * @private\n   */\n  this.keyFunction_ = keyFunction;\n\n  /**\n   * @type {Array.<T>}\n   * @private\n   */\n  this.elements_ = [];\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.priorities_ = [];\n\n  /**\n   * @type {!Object.<string, boolean>}\n   * @private\n   */\n  this.queuedElements_ = {};\n\n};\n\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.clear = function() {\n  this.elements_.length = 0;\n  this.priorities_.length = 0;\n  clear(this.queuedElements_);\n};\n\n\n/**\n * Remove and return the highest-priority element. O(log N).\n * @return {T} Element.\n */\nPriorityQueue.prototype.dequeue = function() {\n  const elements = this.elements_;\n  const priorities = this.priorities_;\n  const element = elements[0];\n  if (elements.length == 1) {\n    elements.length = 0;\n    priorities.length = 0;\n  } else {\n    elements[0] = elements.pop();\n    priorities[0] = priorities.pop();\n    this.siftUp_(0);\n  }\n  const elementKey = this.keyFunction_(element);\n  delete this.queuedElements_[elementKey];\n  return element;\n};\n\n\n/**\n * Enqueue an element. O(log N).\n * @param {T} element Element.\n * @return {boolean} The element was added to the queue.\n */\nPriorityQueue.prototype.enqueue = function(element) {\n  assert(!(this.keyFunction_(element) in this.queuedElements_),\n    31); // Tried to enqueue an `element` that was already added to the queue\n  const priority = this.priorityFunction_(element);\n  if (priority != DROP) {\n    this.elements_.push(element);\n    this.priorities_.push(priority);\n    this.queuedElements_[this.keyFunction_(element)] = true;\n    this.siftDown_(0, this.elements_.length - 1);\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @return {number} Count.\n */\nPriorityQueue.prototype.getCount = function() {\n  return this.elements_.length;\n};\n\n\n/**\n * Gets the index of the left child of the node at the given index.\n * @param {number} index The index of the node to get the left child for.\n * @return {number} The index of the left child.\n * @private\n */\nPriorityQueue.prototype.getLeftChildIndex_ = function(index) {\n  return index * 2 + 1;\n};\n\n\n/**\n * Gets the index of the right child of the node at the given index.\n * @param {number} index The index of the node to get the right child for.\n * @return {number} The index of the right child.\n * @private\n */\nPriorityQueue.prototype.getRightChildIndex_ = function(index) {\n  return index * 2 + 2;\n};\n\n\n/**\n * Gets the index of the parent of the node at the given index.\n * @param {number} index The index of the node to get the parent for.\n * @return {number} The index of the parent.\n * @private\n */\nPriorityQueue.prototype.getParentIndex_ = function(index) {\n  return (index - 1) >> 1;\n};\n\n\n/**\n * Make this a heap. O(N).\n * @private\n */\nPriorityQueue.prototype.heapify_ = function() {\n  let i;\n  for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n    this.siftUp_(i);\n  }\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nPriorityQueue.prototype.isEmpty = function() {\n  return this.elements_.length === 0;\n};\n\n\n/**\n * @param {string} key Key.\n * @return {boolean} Is key queued.\n */\nPriorityQueue.prototype.isKeyQueued = function(key) {\n  return key in this.queuedElements_;\n};\n\n\n/**\n * @param {T} element Element.\n * @return {boolean} Is queued.\n */\nPriorityQueue.prototype.isQueued = function(element) {\n  return this.isKeyQueued(this.keyFunction_(element));\n};\n\n\n/**\n * @param {number} index The index of the node to move down.\n * @private\n */\nPriorityQueue.prototype.siftUp_ = function(index) {\n  const elements = this.elements_;\n  const priorities = this.priorities_;\n  const count = elements.length;\n  const element = elements[index];\n  const priority = priorities[index];\n  const startIndex = index;\n\n  while (index < (count >> 1)) {\n    const lIndex = this.getLeftChildIndex_(index);\n    const rIndex = this.getRightChildIndex_(index);\n\n    const smallerChildIndex = rIndex < count &&\n        priorities[rIndex] < priorities[lIndex] ?\n      rIndex : lIndex;\n\n    elements[index] = elements[smallerChildIndex];\n    priorities[index] = priorities[smallerChildIndex];\n    index = smallerChildIndex;\n  }\n\n  elements[index] = element;\n  priorities[index] = priority;\n  this.siftDown_(startIndex, index);\n};\n\n\n/**\n * @param {number} startIndex The index of the root.\n * @param {number} index The index of the node to move up.\n * @private\n */\nPriorityQueue.prototype.siftDown_ = function(startIndex, index) {\n  const elements = this.elements_;\n  const priorities = this.priorities_;\n  const element = elements[index];\n  const priority = priorities[index];\n\n  while (index > startIndex) {\n    const parentIndex = this.getParentIndex_(index);\n    if (priorities[parentIndex] > priority) {\n      elements[index] = elements[parentIndex];\n      priorities[index] = priorities[parentIndex];\n      index = parentIndex;\n    } else {\n      break;\n    }\n  }\n  elements[index] = element;\n  priorities[index] = priority;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.reprioritize = function() {\n  const priorityFunction = this.priorityFunction_;\n  const elements = this.elements_;\n  const priorities = this.priorities_;\n  let index = 0;\n  const n = elements.length;\n  let element, i, priority;\n  for (i = 0; i < n; ++i) {\n    element = elements[i];\n    priority = priorityFunction(element);\n    if (priority == DROP) {\n      delete this.queuedElements_[this.keyFunction_(element)];\n    } else {\n      priorities[index] = priority;\n      elements[index++] = element;\n    }\n  }\n  elements.length = index;\n  priorities.length = index;\n  this.heapify_();\n};\nexport default PriorityQueue;\n","/**\n * @module ol/MapEvent\n */\nimport {inherits} from './index.js';\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {string} type Event type.\n * @param {module:ol/PluggableMap} map Map.\n * @param {?module:ol/PluggableMap~FrameState=} opt_frameState Frame state.\n */\nconst MapEvent = function(type, map, opt_frameState) {\n\n  Event.call(this, type);\n\n  /**\n   * The map where the event occurred.\n   * @type {module:ol/PluggableMap}\n   * @api\n   */\n  this.map = map;\n\n  /**\n   * The frame state at the time of the event.\n   * @type {?module:ol/PluggableMap~FrameState}\n   * @api\n   */\n  this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n\n};\n\ninherits(MapEvent, Event);\nexport default MapEvent;\n","/**\n * @module ol/source/Raster\n */\nimport {getUid, inherits} from '../index.js';\nimport ImageCanvas from '../ImageCanvas.js';\nimport TileQueue from '../TileQueue.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {Processor} from 'pixelworks/lib/index';\nimport {equals, getCenter, getHeight, getWidth} from '../extent.js';\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\nimport ImageLayer from '../layer/Image.js';\nimport TileLayer from '../layer/Tile.js';\nimport {assign} from '../obj.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\nimport ImageSource from '../source/Image.js';\nimport SourceState from '../source/State.js';\nimport TileSource from '../source/Tile.js';\nimport {create as createTransform} from '../transform.js';\n\n\n/**\n * A function that takes an array of input data, performs some operation, and\n * returns an array of output data.\n * For `pixel` type operations, the function will be called with an array of\n * pixels, where each pixel is an array of four numbers (`[r, g, b, a]`) in the\n * range of 0 - 255. It should return a single pixel array.\n * For `'image'` type operations, functions will be called with an array of\n * {@link ImageData https://developer.mozilla.org/en-US/docs/Web/API/ImageData}\n * and should return a single {@link ImageData\n * https://developer.mozilla.org/en-US/docs/Web/API/ImageData}.  The operations\n * are called with a second \"data\" argument, which can be used for storage.  The\n * data object is accessible from raster events, where it can be initialized in\n * \"beforeoperations\" and accessed again in \"afteroperations\".\n *\n * @typedef {function((Array.<Array.<number>>|Array.<ImageData>), Object):\n *     (Array.<number>|ImageData)} Operation\n */\n\n\n/**\n * @enum {string}\n */\nconst RasterEventType = {\n  /**\n   * Triggered before operations are run.\n   * @event ol/source/Raster~RasterSourceEvent#beforeoperations\n   * @api\n   */\n  BEFOREOPERATIONS: 'beforeoperations',\n\n  /**\n   * Triggered after operations are run.\n   * @event ol/source/Raster~RasterSourceEvent#afteroperations\n   * @api\n   */\n  AFTEROPERATIONS: 'afteroperations'\n};\n\n\n/**\n * Raster operation type. Supported values are `'pixel'` and `'image'`.\n * @enum {string}\n */\nconst RasterOperationType = {\n  PIXEL: 'pixel',\n  IMAGE: 'image'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Raster} instances are instances of this\n * type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {string} type Type.\n * @param {module:ol/PluggableMap~FrameState} frameState The frame state.\n * @param {Object} data An object made available to operations.\n */\nconst RasterSourceEvent = function(type, frameState, data) {\n  Event.call(this, type);\n\n  /**\n   * The raster extent.\n   * @type {module:ol/extent~Extent}\n   * @api\n   */\n  this.extent = frameState.extent;\n\n  /**\n   * The pixel resolution (map units per pixel).\n   * @type {number}\n   * @api\n   */\n  this.resolution = frameState.viewState.resolution / frameState.pixelRatio;\n\n  /**\n   * An object made available to all operations.  This can be used by operations\n   * as a storage object (e.g. for calculating statistics).\n   * @type {Object}\n   * @api\n   */\n  this.data = data;\n\n};\ninherits(RasterSourceEvent, Event);\n\n/**\n * @typedef {Object} Options\n * @property {Array.<module:ol/source/Source|module:ol/layer/Layer>} sources Input\n * sources or layers. Vector layers must be configured with `renderMode: 'image'`.\n * @property {module:ol/source/Raster~Operation} [operation] Raster operation.\n * The operation will be called with data from input sources\n * and the output will be assigned to the raster source.\n * @property {Object} [lib] Functions that will be made available to operations run in a worker.\n * @property {number} [threads] By default, operations will be run in a single worker thread.\n * To avoid using workers altogether, set `threads: 0`.  For pixel operations, operations can\n * be run in multiple worker threads.  Note that there is additional overhead in\n * transferring data to multiple workers, and that depending on the user's\n * system, it may not be possible to parallelize the work.\n * @property {module:ol/source/Raster~RasterOperationType} [operationType='pixel'] Operation type.\n * Supported values are `'pixel'` and `'image'`.  By default,\n * `'pixel'` operations are assumed, and operations will be called with an\n * array of pixels from input sources.  If set to `'image'`, operations will\n * be called with an array of ImageData objects from input sources.\n */\n\n\n/**\n * @classdesc\n * A source that transforms data from any number of input sources using an\n * {@link module:ol/source/Raster~Operation} function to transform input pixel values into\n * output pixel values.\n *\n * @constructor\n * @extends {module:ol/source/Image}\n * @fires ol/source/Raster~RasterSourceEvent\n * @param {module:ol/source/Raster~Options=} options Options.\n * @api\n */\nconst RasterSource = function(options) {\n\n  /**\n   * @private\n   * @type {*}\n   */\n  this.worker_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/source/Raster~RasterOperationType}\n   */\n  this.operationType_ = options.operationType !== undefined ?\n    options.operationType : RasterOperationType.PIXEL;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.threads_ = options.threads !== undefined ? options.threads : 1;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/renderer/canvas/Layer>}\n   */\n  this.renderers_ = createRenderers(options.sources);\n\n  for (let r = 0, rr = this.renderers_.length; r < rr; ++r) {\n    listen(this.renderers_[r], EventType.CHANGE,\n      this.changed, this);\n  }\n\n  /**\n   * @private\n   * @type {module:ol/TileQueue}\n   */\n  this.tileQueue_ = new TileQueue(\n    function() {\n      return 1;\n    },\n    this.changed.bind(this));\n\n  const layerStatesArray = getLayerStatesArray(this.renderers_);\n  const layerStates = {};\n  for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n    layerStates[getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\n  }\n\n  /**\n   * The most recently requested frame state.\n   * @type {module:ol/PluggableMap~FrameState}\n   * @private\n   */\n  this.requestedFrameState_;\n\n  /**\n   * The most recently rendered image canvas.\n   * @type {module:ol/ImageCanvas}\n   * @private\n   */\n  this.renderedImageCanvas_ = null;\n\n  /**\n   * The most recently rendered revision.\n   * @type {number}\n   */\n  this.renderedRevision_;\n\n  /**\n   * @private\n   * @type {module:ol/PluggableMap~FrameState}\n   */\n  this.frameState_ = {\n    animate: false,\n    coordinateToPixelTransform: createTransform(),\n    extent: null,\n    focus: null,\n    index: 0,\n    layerStates: layerStates,\n    layerStatesArray: layerStatesArray,\n    pixelRatio: 1,\n    pixelToCoordinateTransform: createTransform(),\n    postRenderFunctions: [],\n    size: [0, 0],\n    skippedFeatureUids: {},\n    tileQueue: this.tileQueue_,\n    time: Date.now(),\n    usedTiles: {},\n    viewState: /** @type {module:ol/View~State} */ ({\n      rotation: 0\n    }),\n    viewHints: [],\n    wantedTiles: {}\n  };\n\n  ImageSource.call(this, {});\n\n  if (options.operation !== undefined) {\n    this.setOperation(options.operation, options.lib);\n  }\n\n};\n\ninherits(RasterSource, ImageSource);\n\n\n/**\n * Set the operation.\n * @param {module:ol/source/Raster~Operation} operation New operation.\n * @param {Object=} opt_lib Functions that will be available to operations run\n *     in a worker.\n * @api\n */\nRasterSource.prototype.setOperation = function(operation, opt_lib) {\n  this.worker_ = new Processor({\n    operation: operation,\n    imageOps: this.operationType_ === RasterOperationType.IMAGE,\n    queue: 1,\n    lib: opt_lib,\n    threads: this.threads_\n  });\n  this.changed();\n};\n\n\n/**\n * Update the stored frame state.\n * @param {module:ol/extent~Extent} extent The view extent (in map units).\n * @param {number} resolution The view resolution.\n * @param {module:ol/proj/Projection} projection The view projection.\n * @return {module:ol/PluggableMap~FrameState} The updated frame state.\n * @private\n */\nRasterSource.prototype.updateFrameState_ = function(extent, resolution, projection) {\n\n  const frameState = /** @type {module:ol/PluggableMap~FrameState} */ (assign({}, this.frameState_));\n\n  frameState.viewState = /** @type {module:ol/View~State} */ (assign({}, frameState.viewState));\n\n  const center = getCenter(extent);\n\n  frameState.extent = extent.slice();\n  frameState.focus = center;\n  frameState.size[0] = Math.round(getWidth(extent) / resolution);\n  frameState.size[1] = Math.round(getHeight(extent) / resolution);\n  frameState.time = Date.now();\n  frameState.animate = false;\n\n  const viewState = frameState.viewState;\n  viewState.center = center;\n  viewState.projection = projection;\n  viewState.resolution = resolution;\n  return frameState;\n};\n\n\n/**\n * Determine if all sources are ready.\n * @return {boolean} All sources are ready.\n * @private\n */\nRasterSource.prototype.allSourcesReady_ = function() {\n  let ready = true;\n  let source;\n  for (let i = 0, ii = this.renderers_.length; i < ii; ++i) {\n    source = this.renderers_[i].getLayer().getSource();\n    if (source.getState() !== SourceState.READY) {\n      ready = false;\n      break;\n    }\n  }\n  return ready;\n};\n\n\n/**\n * @inheritDoc\n */\nRasterSource.prototype.getImage = function(extent, resolution, pixelRatio, projection) {\n  if (!this.allSourcesReady_()) {\n    return null;\n  }\n\n  const frameState = this.updateFrameState_(extent, resolution, projection);\n  this.requestedFrameState_ = frameState;\n\n  // check if we can't reuse the existing ol/ImageCanvas\n  if (this.renderedImageCanvas_) {\n    const renderedResolution = this.renderedImageCanvas_.getResolution();\n    const renderedExtent = this.renderedImageCanvas_.getExtent();\n    if (resolution !== renderedResolution || !equals(extent, renderedExtent)) {\n      this.renderedImageCanvas_ = null;\n    }\n  }\n\n  if (!this.renderedImageCanvas_ || this.getRevision() !== this.renderedRevision_) {\n    this.processSources_();\n  }\n\n  frameState.tileQueue.loadMoreTiles(16, 16);\n\n  if (frameState.animate) {\n    requestAnimationFrame(this.changed.bind(this));\n  }\n\n  return this.renderedImageCanvas_;\n};\n\n\n/**\n * Start processing source data.\n * @private\n */\nRasterSource.prototype.processSources_ = function() {\n  const frameState = this.requestedFrameState_;\n  const len = this.renderers_.length;\n  const imageDatas = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    const imageData = getImageData(\n      this.renderers_[i], frameState, frameState.layerStatesArray[i]);\n    if (imageData) {\n      imageDatas[i] = imageData;\n    } else {\n      return;\n    }\n  }\n\n  const data = {};\n  this.dispatchEvent(new RasterSourceEvent(RasterEventType.BEFOREOPERATIONS, frameState, data));\n  this.worker_.process(imageDatas, data, this.onWorkerComplete_.bind(this, frameState));\n};\n\n\n/**\n * Called when pixel processing is complete.\n * @param {module:ol/PluggableMap~FrameState} frameState The frame state.\n * @param {Error} err Any error during processing.\n * @param {ImageData} output The output image data.\n * @param {Object} data The user data.\n * @private\n */\nRasterSource.prototype.onWorkerComplete_ = function(frameState, err, output, data) {\n  if (err || !output) {\n    return;\n  }\n\n  // do nothing if extent or resolution changed\n  const extent = frameState.extent;\n  const resolution = frameState.viewState.resolution;\n  if (resolution !== this.requestedFrameState_.viewState.resolution ||\n      !equals(extent, this.requestedFrameState_.extent)) {\n    return;\n  }\n\n  let context;\n  if (this.renderedImageCanvas_) {\n    context = this.renderedImageCanvas_.getImage().getContext('2d');\n  } else {\n    const width = Math.round(getWidth(extent) / resolution);\n    const height = Math.round(getHeight(extent) / resolution);\n    context = createCanvasContext2D(width, height);\n    this.renderedImageCanvas_ = new ImageCanvas(extent, resolution, 1, context.canvas);\n  }\n  context.putImageData(output, 0, 0);\n\n  this.changed();\n  this.renderedRevision_ = this.getRevision();\n\n  this.dispatchEvent(new RasterSourceEvent(RasterEventType.AFTEROPERATIONS, frameState, data));\n};\n\n\n/**\n * A reusable canvas context.\n * @type {CanvasRenderingContext2D}\n * @private\n */\nlet sharedContext = null;\n\n\n/**\n * Get image data from a renderer.\n * @param {module:ol/renderer/canvas/Layer} renderer Layer renderer.\n * @param {module:ol/PluggableMap~FrameState} frameState The frame state.\n * @param {module:ol/layer/Layer~State} layerState The layer state.\n * @return {ImageData} The image data.\n */\nfunction getImageData(renderer, frameState, layerState) {\n  if (!renderer.prepareFrame(frameState, layerState)) {\n    return null;\n  }\n  const width = frameState.size[0];\n  const height = frameState.size[1];\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(width, height);\n  } else {\n    const canvas = sharedContext.canvas;\n    if (canvas.width !== width || canvas.height !== height) {\n      sharedContext = createCanvasContext2D(width, height);\n    } else {\n      sharedContext.clearRect(0, 0, width, height);\n    }\n  }\n  renderer.composeFrame(frameState, layerState, sharedContext);\n  return sharedContext.getImageData(0, 0, width, height);\n}\n\n\n/**\n * Get a list of layer states from a list of renderers.\n * @param {Array.<module:ol/renderer/canvas/Layer>} renderers Layer renderers.\n * @return {Array.<module:ol/layer/Layer~State>} The layer states.\n */\nfunction getLayerStatesArray(renderers) {\n  return renderers.map(function(renderer) {\n    return renderer.getLayer().getLayerState();\n  });\n}\n\n\n/**\n * Create renderers for all sources.\n * @param {Array.<module:ol/source/Source>} sources The sources.\n * @return {Array.<module:ol/renderer/canvas/Layer>} Array of layer renderers.\n */\nfunction createRenderers(sources) {\n  const len = sources.length;\n  const renderers = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    renderers[i] = createRenderer(sources[i]);\n  }\n  return renderers;\n}\n\n\n/**\n * Create a renderer for the provided source.\n * @param {module:ol/source/Source} source The source.\n * @return {module:ol/renderer/canvas/Layer} The renderer.\n */\nfunction createRenderer(source) {\n  let renderer = null;\n  if (source instanceof TileSource) {\n    renderer = createTileRenderer(source);\n  } else if (source instanceof ImageSource) {\n    renderer = createImageRenderer(source);\n  } else if (source instanceof TileLayer) {\n    renderer = new CanvasTileLayerRenderer(source);\n  } else if (source instanceof Layer &&\n      (source.getType() == LayerType.IMAGE || source.getType() == LayerType.VECTOR)) {\n    renderer = new CanvasImageLayerRenderer(source);\n  }\n  return renderer;\n}\n\n\n/**\n * Create an image renderer for the provided source.\n * @param {module:ol/source/Image} source The source.\n * @return {module:ol/renderer/canvas/Layer} The renderer.\n */\nfunction createImageRenderer(source) {\n  const layer = new ImageLayer({source: source});\n  return new CanvasImageLayerRenderer(layer);\n}\n\n\n/**\n * Create a tile renderer for the provided source.\n * @param {module:ol/source/Tile} source The source.\n * @return {module:ol/renderer/canvas/Layer} The renderer.\n */\nfunction createTileRenderer(source) {\n  const layer = new TileLayer({source: source});\n  return new CanvasTileLayerRenderer(layer);\n}\n\n\n/**\n * @override\n */\nRasterSource.prototype.getImageInternal = function() {\n  return null; // not implemented\n};\n\n\nexport default RasterSource;\n","/**\n * @module ol/webgl/Shader\n */\nimport {FALSE} from '../functions.js';\n\n/**\n * @constructor\n * @abstract\n * @param {string} source Source.\n * @struct\n */\nconst WebGLShader = function(source) {\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.source_ = source;\n\n};\n\n\n/**\n * @abstract\n * @return {number} Type.\n */\nWebGLShader.prototype.getType = function() {};\n\n\n/**\n * @return {string} Source.\n */\nWebGLShader.prototype.getSource = function() {\n  return this.source_;\n};\n\n\n/**\n * @return {boolean} Is animated?\n */\nWebGLShader.prototype.isAnimated = FALSE;\nexport default WebGLShader;\n","/**\n * @module ol/webgl/Fragment\n */\nimport {inherits} from '../index.js';\nimport {FRAGMENT_SHADER} from '../webgl.js';\nimport WebGLShader from '../webgl/Shader.js';\n\n/**\n * @constructor\n * @extends {module:ol/webgl/Shader}\n * @param {string} source Source.\n * @struct\n */\nconst WebGLFragment = function(source) {\n  WebGLShader.call(this, source);\n};\n\ninherits(WebGLFragment, WebGLShader);\n\n\n/**\n * @inheritDoc\n */\nWebGLFragment.prototype.getType = function() {\n  return FRAGMENT_SHADER;\n};\nexport default WebGLFragment;\n","/**\n * @module ol/webgl/Vertex\n */\nimport {inherits} from '../index.js';\nimport {VERTEX_SHADER} from '../webgl.js';\nimport WebGLShader from '../webgl/Shader.js';\n\n/**\n * @constructor\n * @extends {module:ol/webgl/Shader}\n * @param {string} source Source.\n * @struct\n */\nconst WebGLVertex = function(source) {\n  WebGLShader.call(this, source);\n};\n\ninherits(WebGLVertex, WebGLShader);\n\n\n/**\n * @inheritDoc\n */\nWebGLVertex.prototype.getType = function() {\n  return VERTEX_SHADER;\n};\nexport default WebGLVertex;\n","/**\n * @module ol/render/webgl/circlereplay/defaultshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG_WEBGL} from '../../../index.js';\nimport WebGLFragment from '../../../webgl/Fragment.js';\nimport WebGLVertex from '../../../webgl/Vertex.js';\n\nexport const fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_center;\\nvarying vec2 v_offset;\\nvarying float v_halfWidth;\\nvarying float v_pixelRatio;\\n\\n\\n\\nuniform float u_opacity;\\nuniform vec4 u_fillColor;\\nuniform vec4 u_strokeColor;\\nuniform vec2 u_size;\\n\\nvoid main(void) {\\n  vec2 windowCenter = vec2((v_center.x + 1.0) / 2.0 * u_size.x * v_pixelRatio,\\n      (v_center.y + 1.0) / 2.0 * u_size.y * v_pixelRatio);\\n  vec2 windowOffset = vec2((v_offset.x + 1.0) / 2.0 * u_size.x * v_pixelRatio,\\n      (v_offset.y + 1.0) / 2.0 * u_size.y * v_pixelRatio);\\n  float radius = length(windowCenter - windowOffset);\\n  float dist = length(windowCenter - gl_FragCoord.xy);\\n  if (dist > radius + v_halfWidth) {\\n    if (u_strokeColor.a == 0.0) {\\n      gl_FragColor = u_fillColor;\\n    } else {\\n      gl_FragColor = u_strokeColor;\\n    }\\n    gl_FragColor.a = gl_FragColor.a - (dist - (radius + v_halfWidth));\\n  } else if (u_fillColor.a == 0.0) {\\n    // Hooray, no fill, just stroke. We can use real antialiasing.\\n    gl_FragColor = u_strokeColor;\\n    if (dist < radius - v_halfWidth) {\\n      gl_FragColor.a = gl_FragColor.a - (radius - v_halfWidth - dist);\\n    }\\n  } else {\\n    gl_FragColor = u_fillColor;\\n    float strokeDist = radius - v_halfWidth;\\n    float antialias = 2.0 * v_pixelRatio;\\n    if (dist > strokeDist) {\\n      gl_FragColor = u_strokeColor;\\n    } else if (dist >= strokeDist - antialias) {\\n      float step = smoothstep(strokeDist - antialias, strokeDist, dist);\\n      gl_FragColor = mix(u_fillColor, u_strokeColor, step);\\n    }\\n  }\\n  gl_FragColor.a = gl_FragColor.a * u_opacity;\\n  if (gl_FragColor.a <= 0.0) {\\n    discard;\\n  }\\n}\\n' :\n  'precision mediump float;varying vec2 a;varying vec2 b;varying float c;varying float d;uniform float m;uniform vec4 n;uniform vec4 o;uniform vec2 p;void main(void){vec2 windowCenter=vec2((a.x+1.0)/2.0*p.x*d,(a.y+1.0)/2.0*p.y*d);vec2 windowOffset=vec2((b.x+1.0)/2.0*p.x*d,(b.y+1.0)/2.0*p.y*d);float radius=length(windowCenter-windowOffset);float dist=length(windowCenter-gl_FragCoord.xy);if(dist>radius+c){if(o.a==0.0){gl_FragColor=n;}else{gl_FragColor=o;}gl_FragColor.a=gl_FragColor.a-(dist-(radius+c));}else if(n.a==0.0){gl_FragColor=o;if(dist<radius-c){gl_FragColor.a=gl_FragColor.a-(radius-c-dist);}} else{gl_FragColor=n;float strokeDist=radius-c;float antialias=2.0*d;if(dist>strokeDist){gl_FragColor=o;}else if(dist>=strokeDist-antialias){float step=smoothstep(strokeDist-antialias,strokeDist,dist);gl_FragColor=mix(n,o,step);}} gl_FragColor.a=gl_FragColor.a*m;if(gl_FragColor.a<=0.0){discard;}}');\n\nexport const vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying vec2 v_center;\\nvarying vec2 v_offset;\\nvarying float v_halfWidth;\\nvarying float v_pixelRatio;\\n\\n\\nattribute vec2 a_position;\\nattribute float a_instruction;\\nattribute float a_radius;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\nuniform float u_lineWidth;\\nuniform float u_pixelRatio;\\n\\nvoid main(void) {\\n  mat4 offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n  v_center = vec4(u_projectionMatrix * vec4(a_position, 0.0, 1.0)).xy;\\n  v_pixelRatio = u_pixelRatio;\\n  float lineWidth = u_lineWidth * u_pixelRatio;\\n  v_halfWidth = lineWidth / 2.0;\\n  if (lineWidth == 0.0) {\\n    lineWidth = 2.0 * u_pixelRatio;\\n  }\\n  vec2 offset;\\n  // Radius with anitaliasing (roughly).\\n  float radius = a_radius + 3.0 * u_pixelRatio;\\n  // Until we get gl_VertexID in WebGL, we store an instruction.\\n  if (a_instruction == 0.0) {\\n    // Offsetting the edges of the triangle by lineWidth / 2 is necessary, however\\n    // we should also leave some space for the antialiasing, thus we offset by lineWidth.\\n    offset = vec2(-1.0, 1.0);\\n  } else if (a_instruction == 1.0) {\\n    offset = vec2(-1.0, -1.0);\\n  } else if (a_instruction == 2.0) {\\n    offset = vec2(1.0, -1.0);\\n  } else {\\n    offset = vec2(1.0, 1.0);\\n  }\\n\\n  gl_Position = u_projectionMatrix * vec4(a_position + offset * radius, 0.0, 1.0) +\\n      offsetMatrix * vec4(offset * lineWidth, 0.0, 0.0);\\n  v_offset = vec4(u_projectionMatrix * vec4(a_position.x + a_radius, a_position.y,\\n      0.0, 1.0)).xy;\\n\\n  if (distance(v_center, v_offset) > 20000.0) {\\n    gl_Position = vec4(v_center, 0.0, 1.0);\\n  }\\n}\\n\\n\\n' :\n  'varying vec2 a;varying vec2 b;varying float c;varying float d;attribute vec2 e;attribute float f;attribute float g;uniform mat4 h;uniform mat4 i;uniform mat4 j;uniform float k;uniform float l;void main(void){mat4 offsetMatrix=i*j;a=vec4(h*vec4(e,0.0,1.0)).xy;d=l;float lineWidth=k*l;c=lineWidth/2.0;if(lineWidth==0.0){lineWidth=2.0*l;}vec2 offset;float radius=g+3.0*l;if(f==0.0){offset=vec2(-1.0,1.0);}else if(f==1.0){offset=vec2(-1.0,-1.0);}else if(f==2.0){offset=vec2(1.0,-1.0);}else{offset=vec2(1.0,1.0);}gl_Position=h*vec4(e+offset*radius,0.0,1.0)+offsetMatrix*vec4(offset*lineWidth,0.0,0.0);b=vec4(h*vec4(e.x+g,e.y,0.0,1.0)).xy;if(distance(a,b)>20000.0){gl_Position=vec4(a,0.0,1.0);}}');\n","/**\n * @module ol/render/webgl/circlereplay/defaultshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG_WEBGL} from '../../../../index.js';\n\n/**\n * @constructor\n * @param {WebGLRenderingContext} gl GL.\n * @param {WebGLProgram} program Program.\n * @struct\n */\nconst Locations = function(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'h');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetScaleMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'i');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetRotateMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'j');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_lineWidth = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_lineWidth' : 'k');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_pixelRatio = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_pixelRatio' : 'l');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_opacity' : 'm');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_fillColor = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_fillColor' : 'n');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_strokeColor = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_strokeColor' : 'o');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_size = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_size' : 'p');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'e');\n\n  /**\n   * @type {number}\n   */\n  this.a_instruction = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_instruction' : 'f');\n\n  /**\n   * @type {number}\n   */\n  this.a_radius = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_radius' : 'g');\n};\n\nexport default Locations;\n","/**\n * @module ol/vec/mat4\n */\n\n\n/**\n * @return {Array.<number>} 4x4 matrix representing a 3D identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\n\n/**\n * @param {Array.<number>} mat4 Flattened 4x4 matrix receiving the result.\n * @param {module:ol/transform~Transform} transform Transformation matrix.\n * @return {Array.<number>} 2D transformation matrix as flattened 4x4 matrix.\n */\nexport function fromTransform(mat4, transform) {\n  mat4[0] = transform[0];\n  mat4[1] = transform[1];\n  mat4[4] = transform[2];\n  mat4[5] = transform[3];\n  mat4[12] = transform[4];\n  mat4[13] = transform[5];\n  return mat4;\n}\n","/**\n * @module ol/render/webgl/Replay\n */\nimport {inherits} from '../../index.js';\nimport {getCenter} from '../../extent.js';\nimport VectorContext from '../VectorContext.js';\nimport {\n  create as createTransform,\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n  translate as translateTransform\n} from '../../transform.js';\nimport {create, fromTransform} from '../../vec/mat4.js';\nimport {ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER, TRIANGLES,\n  UNSIGNED_INT, UNSIGNED_SHORT} from '../../webgl.js';\n\n/**\n * @constructor\n * @abstract\n * @extends {module:ol/render/VectorContext}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Max extent.\n * @struct\n */\nconst WebGLReplay = function(tolerance, maxExtent) {\n  VectorContext.call(this);\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.tolerance = tolerance;\n\n  /**\n   * @protected\n   * @const\n   * @type {module:ol/extent~Extent}\n   */\n  this.maxExtent = maxExtent;\n\n  /**\n   * The origin of the coordinate system for the point coordinates sent to\n   * the GPU. To eliminate jitter caused by precision problems in the GPU\n   * we use the \"Rendering Relative to Eye\" technique described in the \"3D\n   * Engine Design for Virtual Globes\" book.\n   * @protected\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.origin = getCenter(maxExtent);\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.projectionMatrix_ = createTransform();\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.offsetRotateMatrix_ = createTransform();\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.offsetScaleMatrix_ = createTransform();\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.tmpMat4_ = create();\n\n  /**\n   * @protected\n   * @type {Array.<number>}\n   */\n  this.indices = [];\n\n  /**\n   * @protected\n   * @type {?module:ol/webgl/Buffer}\n   */\n  this.indicesBuffer = null;\n\n  /**\n   * Start index per feature (the index).\n   * @protected\n   * @type {Array.<number>}\n   */\n  this.startIndices = [];\n\n  /**\n   * Start index per feature (the feature).\n   * @protected\n   * @type {Array.<module:ol/Feature|module:ol/render/Feature>}\n   */\n  this.startIndicesFeature = [];\n\n  /**\n   * @protected\n   * @type {Array.<number>}\n   */\n  this.vertices = [];\n\n  /**\n   * @protected\n   * @type {?module:ol/webgl/Buffer}\n   */\n  this.verticesBuffer = null;\n\n  /**\n   * Optional parameter for PolygonReplay instances.\n   * @protected\n   * @type {module:ol/render/webgl/LineStringReplay|undefined}\n   */\n  this.lineStringReplay = undefined;\n\n};\n\ninherits(WebGLReplay, VectorContext);\n\n\n/**\n * @abstract\n * @param {module:ol/webgl/Context} context WebGL context.\n * @return {function()} Delete resources function.\n */\nWebGLReplay.prototype.getDeleteResourcesFunction = function(context) {};\n\n\n/**\n * @abstract\n * @param {module:ol/webgl/Context} context Context.\n */\nWebGLReplay.prototype.finish = function(context) {};\n\n\n/**\n * @abstract\n * @protected\n * @param {WebGLRenderingContext} gl gl.\n * @param {module:ol/webgl/Context} context Context.\n * @param {module:ol/size~Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @return {module:ol/render/webgl/circlereplay/defaultshader/Locations|\n            module:ol/render/webgl/linestringreplay/defaultshader/Locations|\n            module:ol/render/webgl/polygonreplay/defaultshader/Locations|\n            module:ol/render/webgl/texturereplay/defaultshader/Locations} Locations.\n */\nWebGLReplay.prototype.setUpProgram = function(gl, context, size, pixelRatio) {};\n\n\n/**\n * @abstract\n * @protected\n * @param {WebGLRenderingContext} gl gl.\n * @param {module:ol/render/webgl/circlereplay/defaultshader/Locations|\n           module:ol/render/webgl/linestringreplay/defaultshader/Locations|\n           module:ol/render/webgl/polygonreplay/defaultshader/Locations|\n           module:ol/render/webgl/texturereplay/defaultshader/Locations} locations Locations.\n */\nWebGLReplay.prototype.shutDownProgram = function(gl, locations) {};\n\n\n/**\n * @abstract\n * @protected\n * @param {WebGLRenderingContext} gl gl.\n * @param {module:ol/webgl/Context} context Context.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n * @param {boolean} hitDetection Hit detection mode.\n */\nWebGLReplay.prototype.drawReplay = function(gl, context, skippedFeaturesHash, hitDetection) {};\n\n\n/**\n * @abstract\n * @protected\n * @param {WebGLRenderingContext} gl gl.\n * @param {module:ol/webgl/Context} context Context.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} featureCallback Feature callback.\n * @param {module:ol/extent~Extent=} opt_hitExtent Hit extent: Only features intersecting this extent are checked.\n * @return {T|undefined} Callback result.\n * @template T\n */\nWebGLReplay.prototype.drawHitDetectionReplayOneByOne = function(gl, context, skippedFeaturesHash, featureCallback, opt_hitExtent) {};\n\n\n/**\n * @protected\n * @param {WebGLRenderingContext} gl gl.\n * @param {module:ol/webgl/Context} context Context.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} featureCallback Feature callback.\n * @param {boolean} oneByOne Draw features one-by-one for the hit-detecion.\n * @param {module:ol/extent~Extent=} opt_hitExtent Hit extent: Only features intersecting\n *  this extent are checked.\n * @return {T|undefined} Callback result.\n * @template T\n */\nWebGLReplay.prototype.drawHitDetectionReplay = function(gl, context, skippedFeaturesHash,\n  featureCallback, oneByOne, opt_hitExtent) {\n  if (!oneByOne) {\n    // draw all hit-detection features in \"once\" (by texture group)\n    return this.drawHitDetectionReplayAll(gl, context,\n      skippedFeaturesHash, featureCallback);\n  } else {\n    // draw hit-detection features one by one\n    return this.drawHitDetectionReplayOneByOne(gl, context,\n      skippedFeaturesHash, featureCallback, opt_hitExtent);\n  }\n};\n\n\n/**\n * @protected\n * @param {WebGLRenderingContext} gl gl.\n * @param {module:ol/webgl/Context} context Context.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} featureCallback Feature callback.\n * @return {T|undefined} Callback result.\n * @template T\n */\nWebGLReplay.prototype.drawHitDetectionReplayAll = function(gl, context, skippedFeaturesHash,\n  featureCallback) {\n  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n  this.drawReplay(gl, context, skippedFeaturesHash, true);\n\n  const result = featureCallback(null);\n  if (result) {\n    return result;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {module:ol/webgl/Context} context Context.\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {module:ol/size~Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} opacity Global opacity.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} featureCallback Feature callback.\n * @param {boolean} oneByOne Draw features one-by-one for the hit-detecion.\n * @param {module:ol/extent~Extent=} opt_hitExtent Hit extent: Only features intersecting\n *  this extent are checked.\n * @return {T|undefined} Callback result.\n * @template T\n */\nWebGLReplay.prototype.replay = function(context,\n  center, resolution, rotation, size, pixelRatio,\n  opacity, skippedFeaturesHash,\n  featureCallback, oneByOne, opt_hitExtent) {\n  const gl = context.getGL();\n  let tmpStencil, tmpStencilFunc, tmpStencilMaskVal, tmpStencilRef, tmpStencilMask,\n      tmpStencilOpFail, tmpStencilOpPass, tmpStencilOpZFail;\n\n  if (this.lineStringReplay) {\n    tmpStencil = gl.isEnabled(gl.STENCIL_TEST);\n    tmpStencilFunc = gl.getParameter(gl.STENCIL_FUNC);\n    tmpStencilMaskVal = gl.getParameter(gl.STENCIL_VALUE_MASK);\n    tmpStencilRef = gl.getParameter(gl.STENCIL_REF);\n    tmpStencilMask = gl.getParameter(gl.STENCIL_WRITEMASK);\n    tmpStencilOpFail = gl.getParameter(gl.STENCIL_FAIL);\n    tmpStencilOpPass = gl.getParameter(gl.STENCIL_PASS_DEPTH_PASS);\n    tmpStencilOpZFail = gl.getParameter(gl.STENCIL_PASS_DEPTH_FAIL);\n\n    gl.enable(gl.STENCIL_TEST);\n    gl.clear(gl.STENCIL_BUFFER_BIT);\n    gl.stencilMask(255);\n    gl.stencilFunc(gl.ALWAYS, 1, 255);\n    gl.stencilOp(gl.KEEP, gl.KEEP, gl.REPLACE);\n\n    this.lineStringReplay.replay(context,\n      center, resolution, rotation, size, pixelRatio,\n      opacity, skippedFeaturesHash,\n      featureCallback, oneByOne, opt_hitExtent);\n\n    gl.stencilMask(0);\n    gl.stencilFunc(gl.NOTEQUAL, 1, 255);\n  }\n\n  context.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\n\n  context.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n\n  const locations = this.setUpProgram(gl, context, size, pixelRatio);\n\n  // set the \"uniform\" values\n  const projectionMatrix = resetTransform(this.projectionMatrix_);\n  scaleTransform(projectionMatrix, 2 / (resolution * size[0]), 2 / (resolution * size[1]));\n  rotateTransform(projectionMatrix, -rotation);\n  translateTransform(projectionMatrix, -(center[0] - this.origin[0]), -(center[1] - this.origin[1]));\n\n  const offsetScaleMatrix = resetTransform(this.offsetScaleMatrix_);\n  scaleTransform(offsetScaleMatrix, 2 / size[0], 2 / size[1]);\n\n  const offsetRotateMatrix = resetTransform(this.offsetRotateMatrix_);\n  if (rotation !== 0) {\n    rotateTransform(offsetRotateMatrix, -rotation);\n  }\n\n  gl.uniformMatrix4fv(locations.u_projectionMatrix, false,\n    fromTransform(this.tmpMat4_, projectionMatrix));\n  gl.uniformMatrix4fv(locations.u_offsetScaleMatrix, false,\n    fromTransform(this.tmpMat4_, offsetScaleMatrix));\n  gl.uniformMatrix4fv(locations.u_offsetRotateMatrix, false,\n    fromTransform(this.tmpMat4_, offsetRotateMatrix));\n  gl.uniform1f(locations.u_opacity, opacity);\n\n  // draw!\n  let result;\n  if (featureCallback === undefined) {\n    this.drawReplay(gl, context, skippedFeaturesHash, false);\n  } else {\n    // draw feature by feature for the hit-detection\n    result = this.drawHitDetectionReplay(gl, context, skippedFeaturesHash,\n      featureCallback, oneByOne, opt_hitExtent);\n  }\n\n  // disable the vertex attrib arrays\n  this.shutDownProgram(gl, locations);\n\n  if (this.lineStringReplay) {\n    if (!tmpStencil) {\n      gl.disable(gl.STENCIL_TEST);\n    }\n    gl.clear(gl.STENCIL_BUFFER_BIT);\n    gl.stencilFunc(/** @type {number} */ (tmpStencilFunc),\n      /** @type {number} */ (tmpStencilRef), /** @type {number} */ (tmpStencilMaskVal));\n    gl.stencilMask(/** @type {number} */ (tmpStencilMask));\n    gl.stencilOp(/** @type {number} */ (tmpStencilOpFail),\n      /** @type {number} */ (tmpStencilOpZFail), /** @type {number} */ (tmpStencilOpPass));\n  }\n\n  return result;\n};\n\n/**\n * @protected\n * @param {WebGLRenderingContext} gl gl.\n * @param {module:ol/webgl/Context} context Context.\n * @param {number} start Start index.\n * @param {number} end End index.\n */\nWebGLReplay.prototype.drawElements = function(\n  gl, context, start, end) {\n  const elementType = context.hasOESElementIndexUint ?\n    UNSIGNED_INT : UNSIGNED_SHORT;\n  const elementSize = context.hasOESElementIndexUint ? 4 : 2;\n\n  const numItems = end - start;\n  const offsetInBytes = start * elementSize;\n  gl.drawElements(TRIANGLES, numItems, elementType, offsetInBytes);\n};\nexport default WebGLReplay;\n","/**\n * @module ol/render/webgl\n */\n\n\n/**\n * @const\n * @type {string}\n */\nexport const DEFAULT_FONT = '10px sans-serif';\n\n\n/**\n * @const\n * @type {module:ol/color~Color}\n */\nexport const DEFAULT_FILLSTYLE = [0.0, 0.0, 0.0, 1.0];\n\n\n/**\n * @const\n * @type {string}\n */\nexport const DEFAULT_LINECAP = 'round';\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\nexport const DEFAULT_LINEDASH = [];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const DEFAULT_LINEDASHOFFSET = 0;\n\n\n/**\n * @const\n * @type {string}\n */\nexport const DEFAULT_LINEJOIN = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\nexport const DEFAULT_MITERLIMIT = 10;\n\n/**\n * @const\n * @type {module:ol/color~Color}\n */\nexport const DEFAULT_STROKESTYLE = [0.0, 0.0, 0.0, 1.0];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const DEFAULT_TEXTALIGN = 0.5;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const DEFAULT_TEXTBASELINE = 0.5;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const DEFAULT_LINEWIDTH = 1;\n\n/**\n * @const\n * @type {number}\n */\nexport const EPSILON = Number.EPSILON || 2.220446049250313e-16;\n\n/**\n * Calculates the orientation of a triangle based on the determinant method.\n * @param {number} x1 First X coordinate.\n * @param {number} y1 First Y coordinate.\n * @param {number} x2 Second X coordinate.\n * @param {number} y2 Second Y coordinate.\n * @param {number} x3 Third X coordinate.\n * @param {number} y3 Third Y coordinate.\n * @return {boolean|undefined} Triangle is clockwise.\n */\nexport const triangleIsCounterClockwise = function(x1, y1, x2, y2, x3, y3) {\n  const area = (x2 - x1) * (y3 - y1) - (x3 - x1) * (y2 - y1);\n  return (area <= EPSILON && area >= -EPSILON) ?\n    undefined : area > 0;\n};\n\n","/**\n * @module ol/webgl/Buffer\n */\nimport {STATIC_DRAW, STREAM_DRAW, DYNAMIC_DRAW} from '../webgl.js';\n\n/**\n * @enum {number}\n */\nconst BufferUsage = {\n  STATIC_DRAW: STATIC_DRAW,\n  STREAM_DRAW: STREAM_DRAW,\n  DYNAMIC_DRAW: DYNAMIC_DRAW\n};\n\n/**\n * @constructor\n * @param {Array.<number>=} opt_arr Array.\n * @param {number=} opt_usage Usage.\n * @struct\n */\nconst WebGLBuffer = function(opt_arr, opt_usage) {\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.arr_ = opt_arr !== undefined ? opt_arr : [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.usage_ = opt_usage !== undefined ? opt_usage : BufferUsage.STATIC_DRAW;\n\n};\n\n\n/**\n * @return {Array.<number>} Array.\n */\nWebGLBuffer.prototype.getArray = function() {\n  return this.arr_;\n};\n\n\n/**\n * @return {number} Usage.\n */\nWebGLBuffer.prototype.getUsage = function() {\n  return this.usage_;\n};\n\nexport default WebGLBuffer;\n","/**\n * @module ol/render/webgl/CircleReplay\n */\nimport {getUid, inherits} from '../../index.js';\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {intersects} from '../../extent.js';\nimport {isEmpty} from '../../obj.js';\nimport {translate} from '../../geom/flat/transform.js';\nimport {fragment, vertex} from '../webgl/circlereplay/defaultshader.js';\nimport Locations from '../webgl/circlereplay/defaultshader/Locations.js';\nimport WebGLReplay from '../webgl/Replay.js';\nimport {DEFAULT_LINEDASH, DEFAULT_LINEDASHOFFSET, DEFAULT_STROKESTYLE,\n  DEFAULT_FILLSTYLE, DEFAULT_LINEWIDTH} from '../webgl.js';\nimport {FLOAT} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n/**\n * @constructor\n * @extends {module:ol/render/webgl/Replay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Max extent.\n * @struct\n */\nconst WebGLCircleReplay = function(tolerance, maxExtent) {\n  WebGLReplay.call(this, tolerance, maxExtent);\n\n  /**\n   * @private\n   * @type {module:ol/render/webgl/circlereplay/defaultshader/Locations}\n   */\n  this.defaultLocations_ = null;\n\n  /**\n   * @private\n   * @type {Array.<Array.<Array.<number>|number>>}\n   */\n  this.styles_ = [];\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.styleIndices_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.radius_ = 0;\n\n  /**\n   * @private\n   * @type {{fillColor: (Array.<number>|null),\n   *         strokeColor: (Array.<number>|null),\n   *         lineDash: Array.<number>,\n   *         lineDashOffset: (number|undefined),\n   *         lineWidth: (number|undefined),\n   *         changed: boolean}|null}\n   */\n  this.state_ = {\n    fillColor: null,\n    strokeColor: null,\n    lineDash: null,\n    lineDashOffset: undefined,\n    lineWidth: undefined,\n    changed: false\n  };\n\n};\n\ninherits(WebGLCircleReplay, WebGLReplay);\n\n\n/**\n * @private\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nWebGLCircleReplay.prototype.drawCoordinates_ = function(\n  flatCoordinates, offset, end, stride) {\n  let numVertices = this.vertices.length;\n  let numIndices = this.indices.length;\n  let n = numVertices / 4;\n  let i, ii;\n  for (i = offset, ii = end; i < ii; i += stride) {\n    this.vertices[numVertices++] = flatCoordinates[i];\n    this.vertices[numVertices++] = flatCoordinates[i + 1];\n    this.vertices[numVertices++] = 0;\n    this.vertices[numVertices++] = this.radius_;\n\n    this.vertices[numVertices++] = flatCoordinates[i];\n    this.vertices[numVertices++] = flatCoordinates[i + 1];\n    this.vertices[numVertices++] = 1;\n    this.vertices[numVertices++] = this.radius_;\n\n    this.vertices[numVertices++] = flatCoordinates[i];\n    this.vertices[numVertices++] = flatCoordinates[i + 1];\n    this.vertices[numVertices++] = 2;\n    this.vertices[numVertices++] = this.radius_;\n\n    this.vertices[numVertices++] = flatCoordinates[i];\n    this.vertices[numVertices++] = flatCoordinates[i + 1];\n    this.vertices[numVertices++] = 3;\n    this.vertices[numVertices++] = this.radius_;\n\n    this.indices[numIndices++] = n;\n    this.indices[numIndices++] = n + 1;\n    this.indices[numIndices++] = n + 2;\n\n    this.indices[numIndices++] = n + 2;\n    this.indices[numIndices++] = n + 3;\n    this.indices[numIndices++] = n;\n\n    n += 4;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLCircleReplay.prototype.drawCircle = function(circleGeometry, feature) {\n  const radius = circleGeometry.getRadius();\n  const stride = circleGeometry.getStride();\n  if (radius) {\n    this.startIndices.push(this.indices.length);\n    this.startIndicesFeature.push(feature);\n    if (this.state_.changed) {\n      this.styleIndices_.push(this.indices.length);\n      this.state_.changed = false;\n    }\n\n    this.radius_ = radius;\n    let flatCoordinates = circleGeometry.getFlatCoordinates();\n    flatCoordinates = translate(flatCoordinates, 0, 2,\n      stride, -this.origin[0], -this.origin[1]);\n    this.drawCoordinates_(flatCoordinates, 0, 2, stride);\n  } else {\n    if (this.state_.changed) {\n      this.styles_.pop();\n      if (this.styles_.length) {\n        const lastState = this.styles_[this.styles_.length - 1];\n        this.state_.fillColor =  /** @type {Array.<number>} */ (lastState[0]);\n        this.state_.strokeColor = /** @type {Array.<number>} */ (lastState[1]);\n        this.state_.lineWidth = /** @type {number} */ (lastState[2]);\n        this.state_.changed = false;\n      }\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n **/\nWebGLCircleReplay.prototype.finish = function(context) {\n  // create, bind, and populate the vertices buffer\n  this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n  // create, bind, and populate the indices buffer\n  this.indicesBuffer = new WebGLBuffer(this.indices);\n\n  this.startIndices.push(this.indices.length);\n\n  //Clean up, if there is nothing to draw\n  if (this.styleIndices_.length === 0 && this.styles_.length > 0) {\n    this.styles_ = [];\n  }\n\n  this.vertices = null;\n  this.indices = null;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLCircleReplay.prototype.getDeleteResourcesFunction = function(context) {\n  // We only delete our stuff here. The shaders and the program may\n  // be used by other CircleReplay instances (for other layers). And\n  // they will be deleted when disposing of the module:ol/webgl/Context~WebGLContext\n  // object.\n  const verticesBuffer = this.verticesBuffer;\n  const indicesBuffer = this.indicesBuffer;\n  return function() {\n    context.deleteBuffer(verticesBuffer);\n    context.deleteBuffer(indicesBuffer);\n  };\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLCircleReplay.prototype.setUpProgram = function(gl, context, size, pixelRatio) {\n  // get the program\n  const program = context.getProgram(fragment, vertex);\n\n  // get the locations\n  let locations;\n  if (!this.defaultLocations_) {\n    locations = new Locations(gl, program);\n    this.defaultLocations_ = locations;\n  } else {\n    locations = this.defaultLocations_;\n  }\n\n  context.useProgram(program);\n\n  // enable the vertex attrib arrays\n  gl.enableVertexAttribArray(locations.a_position);\n  gl.vertexAttribPointer(locations.a_position, 2, FLOAT,\n    false, 16, 0);\n\n  gl.enableVertexAttribArray(locations.a_instruction);\n  gl.vertexAttribPointer(locations.a_instruction, 1, FLOAT,\n    false, 16, 8);\n\n  gl.enableVertexAttribArray(locations.a_radius);\n  gl.vertexAttribPointer(locations.a_radius, 1, FLOAT,\n    false, 16, 12);\n\n  // Enable renderer specific uniforms.\n  gl.uniform2fv(locations.u_size, size);\n  gl.uniform1f(locations.u_pixelRatio, pixelRatio);\n\n  return locations;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLCircleReplay.prototype.shutDownProgram = function(gl, locations) {\n  gl.disableVertexAttribArray(locations.a_position);\n  gl.disableVertexAttribArray(locations.a_instruction);\n  gl.disableVertexAttribArray(locations.a_radius);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLCircleReplay.prototype.drawReplay = function(gl, context, skippedFeaturesHash, hitDetection) {\n  if (!isEmpty(skippedFeaturesHash)) {\n    this.drawReplaySkipping_(gl, context, skippedFeaturesHash);\n  } else {\n    //Draw by style groups to minimize drawElements() calls.\n    let i, start, end, nextStyle;\n    end = this.startIndices[this.startIndices.length - 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      start = this.styleIndices_[i];\n      nextStyle = this.styles_[i];\n      this.setFillStyle_(gl, /** @type {Array.<number>} */ (nextStyle[0]));\n      this.setStrokeStyle_(gl, /** @type {Array.<number>} */ (nextStyle[1]),\n        /** @type {number} */ (nextStyle[2]));\n      this.drawElements(gl, context, start, end);\n      end = start;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLCircleReplay.prototype.drawHitDetectionReplayOneByOne = function(gl, context, skippedFeaturesHash,\n  featureCallback, opt_hitExtent) {\n  let i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex;\n  featureIndex = this.startIndices.length - 2;\n  end = this.startIndices[featureIndex + 1];\n  for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n    nextStyle = this.styles_[i];\n    this.setFillStyle_(gl, /** @type {Array.<number>} */ (nextStyle[0]));\n    this.setStrokeStyle_(gl, /** @type {Array.<number>} */ (nextStyle[1]),\n      /** @type {number} */ (nextStyle[2]));\n    groupStart = this.styleIndices_[i];\n\n    while (featureIndex >= 0 &&\n        this.startIndices[featureIndex] >= groupStart) {\n      start = this.startIndices[featureIndex];\n      feature = this.startIndicesFeature[featureIndex];\n      featureUid = getUid(feature).toString();\n\n      if (skippedFeaturesHash[featureUid] === undefined &&\n          feature.getGeometry() &&\n          (opt_hitExtent === undefined || intersects(\n            /** @type {Array<number>} */ (opt_hitExtent),\n            feature.getGeometry().getExtent()))) {\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        this.drawElements(gl, context, start, end);\n\n        const result = featureCallback(feature);\n\n        if (result) {\n          return result;\n        }\n\n      }\n      featureIndex--;\n      end = start;\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @private\n * @param {WebGLRenderingContext} gl gl.\n * @param {module:ol/webgl/Context} context Context.\n * @param {Object} skippedFeaturesHash Ids of features to skip.\n */\nWebGLCircleReplay.prototype.drawReplaySkipping_ = function(gl, context, skippedFeaturesHash) {\n  let i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex, featureStart;\n  featureIndex = this.startIndices.length - 2;\n  end = start = this.startIndices[featureIndex + 1];\n  for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n    nextStyle = this.styles_[i];\n    this.setFillStyle_(gl, /** @type {Array.<number>} */ (nextStyle[0]));\n    this.setStrokeStyle_(gl, /** @type {Array.<number>} */ (nextStyle[1]),\n      /** @type {number} */ (nextStyle[2]));\n    groupStart = this.styleIndices_[i];\n\n    while (featureIndex >= 0 &&\n        this.startIndices[featureIndex] >= groupStart) {\n      featureStart = this.startIndices[featureIndex];\n      feature = this.startIndicesFeature[featureIndex];\n      featureUid = getUid(feature).toString();\n\n      if (skippedFeaturesHash[featureUid]) {\n        if (start !== end) {\n          this.drawElements(gl, context, start, end);\n        }\n        end = featureStart;\n      }\n      featureIndex--;\n      start = featureStart;\n    }\n    if (start !== end) {\n      this.drawElements(gl, context, start, end);\n    }\n    start = end = groupStart;\n  }\n};\n\n\n/**\n * @private\n * @param {WebGLRenderingContext} gl gl.\n * @param {Array.<number>} color Color.\n */\nWebGLCircleReplay.prototype.setFillStyle_ = function(gl, color) {\n  gl.uniform4fv(this.defaultLocations_.u_fillColor, color);\n};\n\n\n/**\n * @private\n * @param {WebGLRenderingContext} gl gl.\n * @param {Array.<number>} color Color.\n * @param {number} lineWidth Line width.\n */\nWebGLCircleReplay.prototype.setStrokeStyle_ = function(gl, color, lineWidth) {\n  gl.uniform4fv(this.defaultLocations_.u_strokeColor, color);\n  gl.uniform1f(this.defaultLocations_.u_lineWidth, lineWidth);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLCircleReplay.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {\n  let strokeStyleColor, strokeStyleWidth;\n  if (strokeStyle) {\n    const strokeStyleLineDash = strokeStyle.getLineDash();\n    this.state_.lineDash = strokeStyleLineDash ?\n      strokeStyleLineDash : DEFAULT_LINEDASH;\n    const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n    this.state_.lineDashOffset = strokeStyleLineDashOffset ?\n      strokeStyleLineDashOffset : DEFAULT_LINEDASHOFFSET;\n    strokeStyleColor = strokeStyle.getColor();\n    if (!(strokeStyleColor instanceof CanvasGradient) &&\n        !(strokeStyleColor instanceof CanvasPattern)) {\n      strokeStyleColor = asArray(strokeStyleColor).map(function(c, i) {\n        return i != 3 ? c / 255 : c;\n      }) || DEFAULT_STROKESTYLE;\n    } else {\n      strokeStyleColor = DEFAULT_STROKESTYLE;\n    }\n    strokeStyleWidth = strokeStyle.getWidth();\n    strokeStyleWidth = strokeStyleWidth !== undefined ?\n      strokeStyleWidth : DEFAULT_LINEWIDTH;\n  } else {\n    strokeStyleColor = [0, 0, 0, 0];\n    strokeStyleWidth = 0;\n  }\n  let fillStyleColor = fillStyle ? fillStyle.getColor() : [0, 0, 0, 0];\n  if (!(fillStyleColor instanceof CanvasGradient) &&\n      !(fillStyleColor instanceof CanvasPattern)) {\n    fillStyleColor = asArray(fillStyleColor).map(function(c, i) {\n      return i != 3 ? c / 255 : c;\n    }) || DEFAULT_FILLSTYLE;\n  } else {\n    fillStyleColor = DEFAULT_FILLSTYLE;\n  }\n  if (!this.state_.strokeColor || !equals(this.state_.strokeColor, strokeStyleColor) ||\n      !this.state_.fillColor || !equals(this.state_.fillColor, fillStyleColor) ||\n      this.state_.lineWidth !== strokeStyleWidth) {\n    this.state_.changed = true;\n    this.state_.fillColor = fillStyleColor;\n    this.state_.strokeColor = strokeStyleColor;\n    this.state_.lineWidth = strokeStyleWidth;\n    this.styles_.push([fillStyleColor, strokeStyleColor, strokeStyleWidth]);\n  }\n};\nexport default WebGLCircleReplay;\n","/**\n * @module ol/render/webgl/texturereplay/defaultshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG_WEBGL} from '../../../index.js';\nimport WebGLFragment from '../../../webgl/Fragment.js';\nimport WebGLVertex from '../../../webgl/Vertex.js';\n\nexport const fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_texCoord;\\nvarying float v_opacity;\\n\\nuniform float u_opacity;\\nuniform sampler2D u_image;\\n\\nvoid main(void) {\\n  vec4 texColor = texture2D(u_image, v_texCoord);\\n  gl_FragColor.rgb = texColor.rgb;\\n  float alpha = texColor.a * v_opacity * u_opacity;\\n  if (alpha == 0.0) {\\n    discard;\\n  }\\n  gl_FragColor.a = alpha;\\n}\\n' :\n  'precision mediump float;varying vec2 a;varying float b;uniform float k;uniform sampler2D l;void main(void){vec4 texColor=texture2D(l,a);gl_FragColor.rgb=texColor.rgb;float alpha=texColor.a*b*k;if(alpha==0.0){discard;}gl_FragColor.a=alpha;}');\n\nexport const vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying vec2 v_texCoord;\\nvarying float v_opacity;\\n\\nattribute vec2 a_position;\\nattribute vec2 a_texCoord;\\nattribute vec2 a_offsets;\\nattribute float a_opacity;\\nattribute float a_rotateWithView;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\n\\nvoid main(void) {\\n  mat4 offsetMatrix = u_offsetScaleMatrix;\\n  if (a_rotateWithView == 1.0) {\\n    offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n  }\\n  vec4 offsets = offsetMatrix * vec4(a_offsets, 0.0, 0.0);\\n  gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\\n  v_texCoord = a_texCoord;\\n  v_opacity = a_opacity;\\n}\\n\\n\\n' :\n  'varying vec2 a;varying float b;attribute vec2 c;attribute vec2 d;attribute vec2 e;attribute float f;attribute float g;uniform mat4 h;uniform mat4 i;uniform mat4 j;void main(void){mat4 offsetMatrix=i;if(g==1.0){offsetMatrix=i*j;}vec4 offsets=offsetMatrix*vec4(e,0.0,0.0);gl_Position=h*vec4(c,0.0,1.0)+offsets;a=d;b=f;}');\n","/**\n * @module ol/render/webgl/texturereplay/defaultshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG_WEBGL} from '../../../../index.js';\n\n/**\n * @constructor\n * @param {WebGLRenderingContext} gl GL.\n * @param {WebGLProgram} program Program.\n * @struct\n */\nconst Locations = function(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'h');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetScaleMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'i');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetRotateMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'j');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_opacity' : 'k');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_image = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_image' : 'l');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'c');\n\n  /**\n   * @type {number}\n   */\n  this.a_texCoord = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_texCoord' : 'd');\n\n  /**\n   * @type {number}\n   */\n  this.a_offsets = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_offsets' : 'e');\n\n  /**\n   * @type {number}\n   */\n  this.a_opacity = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_opacity' : 'f');\n\n  /**\n   * @type {number}\n   */\n  this.a_rotateWithView = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_rotateWithView' : 'g');\n};\n\nexport default Locations;\n","/**\n * @module ol/webgl/ContextEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LOST: 'webglcontextlost',\n  RESTORED: 'webglcontextrestored'\n};\n","/**\n * @module ol/webgl/Context\n */\nimport {WEBGL_EXTENSIONS, getUid, inherits} from '../index.js';\nimport Disposable from '../Disposable.js';\nimport {includes} from '../array.js';\nimport {listen, unlistenAll} from '../events.js';\nimport {clear} from '../obj.js';\nimport {ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER, TEXTURE_2D, TEXTURE_WRAP_S, TEXTURE_WRAP_T} from '../webgl.js';\nimport ContextEventType from '../webgl/ContextEventType.js';\n\n\n/**\n * @typedef {Object} BufferCacheEntry\n * @property {module:ol/webgl/Buffer} buf\n * @property {WebGLBuffer} buffer\n */\n\n\n/**\n * @classdesc\n * A WebGL context for accessing low-level WebGL capabilities.\n *\n * @constructor\n * @extends {module:ol/Disposable}\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {WebGLRenderingContext} gl GL.\n */\nconst WebGLContext = function(canvas, gl) {\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = canvas;\n\n  /**\n   * @private\n   * @type {WebGLRenderingContext}\n   */\n  this.gl_ = gl;\n\n  /**\n   * @private\n   * @type {!Object.<string, module:ol/webgl/Context~BufferCacheEntry>}\n   */\n  this.bufferCache_ = {};\n\n  /**\n   * @private\n   * @type {!Object.<string, WebGLShader>}\n   */\n  this.shaderCache_ = {};\n\n  /**\n   * @private\n   * @type {!Object.<string, WebGLProgram>}\n   */\n  this.programCache_ = {};\n\n  /**\n   * @private\n   * @type {WebGLProgram}\n   */\n  this.currentProgram_ = null;\n\n  /**\n   * @private\n   * @type {WebGLFramebuffer}\n   */\n  this.hitDetectionFramebuffer_ = null;\n\n  /**\n   * @private\n   * @type {WebGLTexture}\n   */\n  this.hitDetectionTexture_ = null;\n\n  /**\n   * @private\n   * @type {WebGLRenderbuffer}\n   */\n  this.hitDetectionRenderbuffer_ = null;\n\n  /**\n   * @type {boolean}\n   */\n  this.hasOESElementIndexUint = includes(WEBGL_EXTENSIONS, 'OES_element_index_uint');\n\n  // use the OES_element_index_uint extension if available\n  if (this.hasOESElementIndexUint) {\n    gl.getExtension('OES_element_index_uint');\n  }\n\n  listen(this.canvas_, ContextEventType.LOST,\n    this.handleWebGLContextLost, this);\n  listen(this.canvas_, ContextEventType.RESTORED,\n    this.handleWebGLContextRestored, this);\n\n};\n\ninherits(WebGLContext, Disposable);\n\n\n/**\n * Just bind the buffer if it's in the cache. Otherwise create\n * the WebGL buffer, bind it, populate it, and add an entry to\n * the cache.\n * @param {number} target Target.\n * @param {module:ol/webgl/Buffer} buf Buffer.\n */\nWebGLContext.prototype.bindBuffer = function(target, buf) {\n  const gl = this.getGL();\n  const arr = buf.getArray();\n  const bufferKey = String(getUid(buf));\n  if (bufferKey in this.bufferCache_) {\n    const bufferCacheEntry = this.bufferCache_[bufferKey];\n    gl.bindBuffer(target, bufferCacheEntry.buffer);\n  } else {\n    const buffer = gl.createBuffer();\n    gl.bindBuffer(target, buffer);\n    let /** @type {ArrayBufferView} */ arrayBuffer;\n    if (target == ARRAY_BUFFER) {\n      arrayBuffer = new Float32Array(arr);\n    } else if (target == ELEMENT_ARRAY_BUFFER) {\n      arrayBuffer = this.hasOESElementIndexUint ?\n        new Uint32Array(arr) : new Uint16Array(arr);\n    }\n    gl.bufferData(target, arrayBuffer, buf.getUsage());\n    this.bufferCache_[bufferKey] = {\n      buf: buf,\n      buffer: buffer\n    };\n  }\n};\n\n\n/**\n * @param {module:ol/webgl/Buffer} buf Buffer.\n */\nWebGLContext.prototype.deleteBuffer = function(buf) {\n  const gl = this.getGL();\n  const bufferKey = String(getUid(buf));\n  const bufferCacheEntry = this.bufferCache_[bufferKey];\n  if (!gl.isContextLost()) {\n    gl.deleteBuffer(bufferCacheEntry.buffer);\n  }\n  delete this.bufferCache_[bufferKey];\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLContext.prototype.disposeInternal = function() {\n  unlistenAll(this.canvas_);\n  const gl = this.getGL();\n  if (!gl.isContextLost()) {\n    for (const key in this.bufferCache_) {\n      gl.deleteBuffer(this.bufferCache_[key].buffer);\n    }\n    for (const key in this.programCache_) {\n      gl.deleteProgram(this.programCache_[key]);\n    }\n    for (const key in this.shaderCache_) {\n      gl.deleteShader(this.shaderCache_[key]);\n    }\n    // delete objects for hit-detection\n    gl.deleteFramebuffer(this.hitDetectionFramebuffer_);\n    gl.deleteRenderbuffer(this.hitDetectionRenderbuffer_);\n    gl.deleteTexture(this.hitDetectionTexture_);\n  }\n};\n\n\n/**\n * @return {HTMLCanvasElement} Canvas.\n */\nWebGLContext.prototype.getCanvas = function() {\n  return this.canvas_;\n};\n\n\n/**\n * Get the WebGL rendering context\n * @return {WebGLRenderingContext} The rendering context.\n * @api\n */\nWebGLContext.prototype.getGL = function() {\n  return this.gl_;\n};\n\n\n/**\n * Get the frame buffer for hit detection.\n * @return {WebGLFramebuffer} The hit detection frame buffer.\n */\nWebGLContext.prototype.getHitDetectionFramebuffer = function() {\n  if (!this.hitDetectionFramebuffer_) {\n    this.initHitDetectionFramebuffer_();\n  }\n  return this.hitDetectionFramebuffer_;\n};\n\n\n/**\n * Get shader from the cache if it's in the cache. Otherwise, create\n * the WebGL shader, compile it, and add entry to cache.\n * @param {module:ol/webgl/Shader} shaderObject Shader object.\n * @return {WebGLShader} Shader.\n */\nWebGLContext.prototype.getShader = function(shaderObject) {\n  const shaderKey = String(getUid(shaderObject));\n  if (shaderKey in this.shaderCache_) {\n    return this.shaderCache_[shaderKey];\n  } else {\n    const gl = this.getGL();\n    const shader = gl.createShader(shaderObject.getType());\n    gl.shaderSource(shader, shaderObject.getSource());\n    gl.compileShader(shader);\n    this.shaderCache_[shaderKey] = shader;\n    return shader;\n  }\n};\n\n\n/**\n * Get the program from the cache if it's in the cache. Otherwise create\n * the WebGL program, attach the shaders to it, and add an entry to the\n * cache.\n * @param {module:ol/webgl/Fragment} fragmentShaderObject Fragment shader.\n * @param {module:ol/webgl/Vertex} vertexShaderObject Vertex shader.\n * @return {WebGLProgram} Program.\n */\nWebGLContext.prototype.getProgram = function(fragmentShaderObject, vertexShaderObject) {\n  const programKey = getUid(fragmentShaderObject) + '/' + getUid(vertexShaderObject);\n  if (programKey in this.programCache_) {\n    return this.programCache_[programKey];\n  } else {\n    const gl = this.getGL();\n    const program = gl.createProgram();\n    gl.attachShader(program, this.getShader(fragmentShaderObject));\n    gl.attachShader(program, this.getShader(vertexShaderObject));\n    gl.linkProgram(program);\n    this.programCache_[programKey] = program;\n    return program;\n  }\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nWebGLContext.prototype.handleWebGLContextLost = function() {\n  clear(this.bufferCache_);\n  clear(this.shaderCache_);\n  clear(this.programCache_);\n  this.currentProgram_ = null;\n  this.hitDetectionFramebuffer_ = null;\n  this.hitDetectionTexture_ = null;\n  this.hitDetectionRenderbuffer_ = null;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nWebGLContext.prototype.handleWebGLContextRestored = function() {\n};\n\n\n/**\n * Creates a 1x1 pixel framebuffer for the hit-detection.\n * @private\n */\nWebGLContext.prototype.initHitDetectionFramebuffer_ = function() {\n  const gl = this.gl_;\n  const framebuffer = gl.createFramebuffer();\n  gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\n  const texture = createEmptyTexture(gl, 1, 1);\n  const renderbuffer = gl.createRenderbuffer();\n  gl.bindRenderbuffer(gl.RENDERBUFFER, renderbuffer);\n  gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, 1, 1);\n  gl.framebufferTexture2D(\n    gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n  gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT,\n    gl.RENDERBUFFER, renderbuffer);\n\n  gl.bindTexture(gl.TEXTURE_2D, null);\n  gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n  gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n  this.hitDetectionFramebuffer_ = framebuffer;\n  this.hitDetectionTexture_ = texture;\n  this.hitDetectionRenderbuffer_ = renderbuffer;\n};\n\n\n/**\n * Use a program.  If the program is already in use, this will return `false`.\n * @param {WebGLProgram} program Program.\n * @return {boolean} Changed.\n * @api\n */\nWebGLContext.prototype.useProgram = function(program) {\n  if (program == this.currentProgram_) {\n    return false;\n  } else {\n    const gl = this.getGL();\n    gl.useProgram(program);\n    this.currentProgram_ = program;\n    return true;\n  }\n};\n\n\n/**\n * @param {WebGLRenderingContext} gl WebGL rendering context.\n * @param {number=} opt_wrapS wrapS.\n * @param {number=} opt_wrapT wrapT.\n * @return {WebGLTexture} The texture.\n */\nfunction createTextureInternal(gl, opt_wrapS, opt_wrapT) {\n  const texture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\n  if (opt_wrapS !== undefined) {\n    gl.texParameteri(\n      TEXTURE_2D, TEXTURE_WRAP_S, opt_wrapS);\n  }\n  if (opt_wrapT !== undefined) {\n    gl.texParameteri(\n      TEXTURE_2D, TEXTURE_WRAP_T, opt_wrapT);\n  }\n\n  return texture;\n}\n\n\n/**\n * @param {WebGLRenderingContext} gl WebGL rendering context.\n * @param {number} width Width.\n * @param {number} height Height.\n * @param {number=} opt_wrapS wrapS.\n * @param {number=} opt_wrapT wrapT.\n * @return {WebGLTexture} The texture.\n */\nexport function createEmptyTexture(gl, width, height, opt_wrapS, opt_wrapT) {\n  const texture = createTextureInternal(gl, opt_wrapS, opt_wrapT);\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n  return texture;\n}\n\n\n/**\n * @param {WebGLRenderingContext} gl WebGL rendering context.\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n * @param {number=} opt_wrapS wrapS.\n * @param {number=} opt_wrapT wrapT.\n * @return {WebGLTexture} The texture.\n */\nexport function createTexture(gl, image, opt_wrapS, opt_wrapT) {\n  const texture = createTextureInternal(gl, opt_wrapS, opt_wrapT);\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n  return texture;\n}\n\nexport default WebGLContext;\n","/**\n * @module ol/render/webgl/TextureReplay\n */\nimport {getUid, inherits} from '../../index.js';\nimport {intersects} from '../../extent.js';\nimport {isEmpty} from '../../obj.js';\nimport {fragment, vertex} from '../webgl/texturereplay/defaultshader.js';\nimport Locations from '../webgl/texturereplay/defaultshader/Locations.js';\nimport WebGLReplay from '../webgl/Replay.js';\nimport {CLAMP_TO_EDGE, FLOAT, TEXTURE_2D} from '../../webgl.js';\nimport {createTexture} from '../../webgl/Context.js';\n\n/**\n * @constructor\n * @abstract\n * @extends {module:ol/render/webgl/Replay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Max extent.\n * @struct\n */\nconst WebGLTextureReplay = function(tolerance, maxExtent) {\n  WebGLReplay.call(this, tolerance, maxExtent);\n\n  /**\n   * @type {number|undefined}\n   * @protected\n   */\n  this.anchorX = undefined;\n\n  /**\n   * @type {number|undefined}\n   * @protected\n   */\n  this.anchorY = undefined;\n\n  /**\n   * @type {Array.<number>}\n   * @protected\n   */\n  this.groupIndices = [];\n\n  /**\n   * @type {Array.<number>}\n   * @protected\n   */\n  this.hitDetectionGroupIndices = [];\n\n  /**\n   * @type {number|undefined}\n   * @protected\n   */\n  this.height = undefined;\n\n  /**\n   * @type {number|undefined}\n   * @protected\n   */\n  this.imageHeight = undefined;\n\n  /**\n   * @type {number|undefined}\n   * @protected\n   */\n  this.imageWidth = undefined;\n\n  /**\n   * @protected\n   * @type {module:ol/render/webgl/texturereplay/defaultshader/Locations}\n   */\n  this.defaultLocations = null;\n\n  /**\n   * @protected\n   * @type {number|undefined}\n   */\n  this.opacity = undefined;\n\n  /**\n   * @type {number|undefined}\n   * @protected\n   */\n  this.originX = undefined;\n\n  /**\n   * @type {number|undefined}\n   * @protected\n   */\n  this.originY = undefined;\n\n  /**\n   * @protected\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView = undefined;\n\n  /**\n   * @protected\n   * @type {number|undefined}\n   */\n  this.rotation = undefined;\n\n  /**\n   * @protected\n   * @type {number|undefined}\n   */\n  this.scale = undefined;\n\n  /**\n   * @type {number|undefined}\n   * @protected\n   */\n  this.width = undefined;\n};\n\ninherits(WebGLTextureReplay, WebGLReplay);\n\n\n/**\n * @inheritDoc\n */\nWebGLTextureReplay.prototype.getDeleteResourcesFunction = function(context) {\n  const verticesBuffer = this.verticesBuffer;\n  const indicesBuffer = this.indicesBuffer;\n  const textures = this.getTextures(true);\n  const gl = context.getGL();\n  return function() {\n    if (!gl.isContextLost()) {\n      let i, ii;\n      for (i = 0, ii = textures.length; i < ii; ++i) {\n        gl.deleteTexture(textures[i]);\n      }\n    }\n    context.deleteBuffer(verticesBuffer);\n    context.deleteBuffer(indicesBuffer);\n  };\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} My end.\n * @protected\n */\nWebGLTextureReplay.prototype.drawCoordinates = function(flatCoordinates, offset, end, stride) {\n  const anchorX = /** @type {number} */ (this.anchorX);\n  const anchorY = /** @type {number} */ (this.anchorY);\n  const height = /** @type {number} */ (this.height);\n  const imageHeight = /** @type {number} */ (this.imageHeight);\n  const imageWidth = /** @type {number} */ (this.imageWidth);\n  const opacity = /** @type {number} */ (this.opacity);\n  const originX = /** @type {number} */ (this.originX);\n  const originY = /** @type {number} */ (this.originY);\n  const rotateWithView = this.rotateWithView ? 1.0 : 0.0;\n  // this.rotation_ is anti-clockwise, but rotation is clockwise\n  const rotation = /** @type {number} */ (-this.rotation);\n  const scale = /** @type {number} */ (this.scale);\n  const width = /** @type {number} */ (this.width);\n  const cos = Math.cos(rotation);\n  const sin = Math.sin(rotation);\n  let numIndices = this.indices.length;\n  let numVertices = this.vertices.length;\n  let i, n, offsetX, offsetY, x, y;\n  for (i = offset; i < end; i += stride) {\n    x = flatCoordinates[i] - this.origin[0];\n    y = flatCoordinates[i + 1] - this.origin[1];\n\n    // There are 4 vertices per [x, y] point, one for each corner of the\n    // rectangle we're going to draw. We'd use 1 vertex per [x, y] point if\n    // WebGL supported Geometry Shaders (which can emit new vertices), but that\n    // is not currently the case.\n    //\n    // And each vertex includes 8 values: the x and y coordinates, the x and\n    // y offsets used to calculate the position of the corner, the u and\n    // v texture coordinates for the corner, the opacity, and whether the\n    // the image should be rotated with the view (rotateWithView).\n\n    n = numVertices / 8;\n\n    // bottom-left corner\n    offsetX = -scale * anchorX;\n    offsetY = -scale * (height - anchorY);\n    this.vertices[numVertices++] = x;\n    this.vertices[numVertices++] = y;\n    this.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n    this.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n    this.vertices[numVertices++] = originX / imageWidth;\n    this.vertices[numVertices++] = (originY + height) / imageHeight;\n    this.vertices[numVertices++] = opacity;\n    this.vertices[numVertices++] = rotateWithView;\n\n    // bottom-right corner\n    offsetX = scale * (width - anchorX);\n    offsetY = -scale * (height - anchorY);\n    this.vertices[numVertices++] = x;\n    this.vertices[numVertices++] = y;\n    this.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n    this.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n    this.vertices[numVertices++] = (originX + width) / imageWidth;\n    this.vertices[numVertices++] = (originY + height) / imageHeight;\n    this.vertices[numVertices++] = opacity;\n    this.vertices[numVertices++] = rotateWithView;\n\n    // top-right corner\n    offsetX = scale * (width - anchorX);\n    offsetY = scale * anchorY;\n    this.vertices[numVertices++] = x;\n    this.vertices[numVertices++] = y;\n    this.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n    this.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n    this.vertices[numVertices++] = (originX + width) / imageWidth;\n    this.vertices[numVertices++] = originY / imageHeight;\n    this.vertices[numVertices++] = opacity;\n    this.vertices[numVertices++] = rotateWithView;\n\n    // top-left corner\n    offsetX = -scale * anchorX;\n    offsetY = scale * anchorY;\n    this.vertices[numVertices++] = x;\n    this.vertices[numVertices++] = y;\n    this.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n    this.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n    this.vertices[numVertices++] = originX / imageWidth;\n    this.vertices[numVertices++] = originY / imageHeight;\n    this.vertices[numVertices++] = opacity;\n    this.vertices[numVertices++] = rotateWithView;\n\n    this.indices[numIndices++] = n;\n    this.indices[numIndices++] = n + 1;\n    this.indices[numIndices++] = n + 2;\n    this.indices[numIndices++] = n;\n    this.indices[numIndices++] = n + 2;\n    this.indices[numIndices++] = n + 3;\n  }\n\n  return numVertices;\n};\n\n\n/**\n * @protected\n * @param {Array.<WebGLTexture>} textures Textures.\n * @param {Array.<HTMLCanvasElement|HTMLImageElement|HTMLVideoElement>} images Images.\n * @param {!Object.<string, WebGLTexture>} texturePerImage Texture cache.\n * @param {WebGLRenderingContext} gl Gl.\n */\nWebGLTextureReplay.prototype.createTextures = function(textures, images, texturePerImage, gl) {\n  let texture, image, uid, i;\n  const ii = images.length;\n  for (i = 0; i < ii; ++i) {\n    image = images[i];\n\n    uid = getUid(image).toString();\n    if (uid in texturePerImage) {\n      texture = texturePerImage[uid];\n    } else {\n      texture = createTexture(\n        gl, image, CLAMP_TO_EDGE, CLAMP_TO_EDGE);\n      texturePerImage[uid] = texture;\n    }\n    textures[i] = texture;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTextureReplay.prototype.setUpProgram = function(gl, context, size, pixelRatio) {\n  // get the program\n  const program = context.getProgram(fragment, vertex);\n\n  // get the locations\n  let locations;\n  if (!this.defaultLocations) {\n    locations = new Locations(gl, program);\n    this.defaultLocations = locations;\n  } else {\n    locations = this.defaultLocations;\n  }\n\n  // use the program (FIXME: use the return value)\n  context.useProgram(program);\n\n  // enable the vertex attrib arrays\n  gl.enableVertexAttribArray(locations.a_position);\n  gl.vertexAttribPointer(locations.a_position, 2, FLOAT,\n    false, 32, 0);\n\n  gl.enableVertexAttribArray(locations.a_offsets);\n  gl.vertexAttribPointer(locations.a_offsets, 2, FLOAT,\n    false, 32, 8);\n\n  gl.enableVertexAttribArray(locations.a_texCoord);\n  gl.vertexAttribPointer(locations.a_texCoord, 2, FLOAT,\n    false, 32, 16);\n\n  gl.enableVertexAttribArray(locations.a_opacity);\n  gl.vertexAttribPointer(locations.a_opacity, 1, FLOAT,\n    false, 32, 24);\n\n  gl.enableVertexAttribArray(locations.a_rotateWithView);\n  gl.vertexAttribPointer(locations.a_rotateWithView, 1, FLOAT,\n    false, 32, 28);\n\n  return locations;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTextureReplay.prototype.shutDownProgram = function(gl, locations) {\n  gl.disableVertexAttribArray(locations.a_position);\n  gl.disableVertexAttribArray(locations.a_offsets);\n  gl.disableVertexAttribArray(locations.a_texCoord);\n  gl.disableVertexAttribArray(locations.a_opacity);\n  gl.disableVertexAttribArray(locations.a_rotateWithView);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTextureReplay.prototype.drawReplay = function(gl, context, skippedFeaturesHash, hitDetection) {\n  const textures = hitDetection ? this.getHitDetectionTextures() : this.getTextures();\n  const groupIndices = hitDetection ? this.hitDetectionGroupIndices : this.groupIndices;\n\n  if (!isEmpty(skippedFeaturesHash)) {\n    this.drawReplaySkipping(gl, context, skippedFeaturesHash, textures, groupIndices);\n  } else {\n    let i, ii, start;\n    for (i = 0, ii = textures.length, start = 0; i < ii; ++i) {\n      gl.bindTexture(TEXTURE_2D, textures[i]);\n      const end = groupIndices[i];\n      this.drawElements(gl, context, start, end);\n      start = end;\n    }\n  }\n};\n\n\n/**\n * Draw the replay while paying attention to skipped features.\n *\n * This functions creates groups of features that can be drawn to together,\n * so that the number of `drawElements` calls is minimized.\n *\n * For example given the following texture groups:\n *\n *    Group 1: A B C\n *    Group 2: D [E] F G\n *\n * If feature E should be skipped, the following `drawElements` calls will be\n * made:\n *\n *    drawElements with feature A, B and C\n *    drawElements with feature D\n *    drawElements with feature F and G\n *\n * @protected\n * @param {WebGLRenderingContext} gl gl.\n * @param {module:ol/webgl/Context} context Context.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *  to skip.\n * @param {Array.<WebGLTexture>} textures Textures.\n * @param {Array.<number>} groupIndices Texture group indices.\n */\nWebGLTextureReplay.prototype.drawReplaySkipping = function(gl, context, skippedFeaturesHash, textures,\n  groupIndices) {\n  let featureIndex = 0;\n\n  let i, ii;\n  for (i = 0, ii = textures.length; i < ii; ++i) {\n    gl.bindTexture(TEXTURE_2D, textures[i]);\n    const groupStart = (i > 0) ? groupIndices[i - 1] : 0;\n    const groupEnd = groupIndices[i];\n\n    let start = groupStart;\n    let end = groupStart;\n    while (featureIndex < this.startIndices.length &&\n        this.startIndices[featureIndex] <= groupEnd) {\n      const feature = this.startIndicesFeature[featureIndex];\n\n      const featureUid = getUid(feature).toString();\n      if (skippedFeaturesHash[featureUid] !== undefined) {\n        // feature should be skipped\n        if (start !== end) {\n          // draw the features so far\n          this.drawElements(gl, context, start, end);\n        }\n        // continue with the next feature\n        start = (featureIndex === this.startIndices.length - 1) ?\n          groupEnd : this.startIndices[featureIndex + 1];\n        end = start;\n      } else {\n        // the feature is not skipped, augment the end index\n        end = (featureIndex === this.startIndices.length - 1) ?\n          groupEnd : this.startIndices[featureIndex + 1];\n      }\n      featureIndex++;\n    }\n\n    if (start !== end) {\n      // draw the remaining features (in case there was no skipped feature\n      // in this texture group, all features of a group are drawn together)\n      this.drawElements(gl, context, start, end);\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTextureReplay.prototype.drawHitDetectionReplayOneByOne = function(gl, context, skippedFeaturesHash,\n  featureCallback, opt_hitExtent) {\n  let i, groupStart, start, end, feature, featureUid;\n  let featureIndex = this.startIndices.length - 1;\n  const hitDetectionTextures = this.getHitDetectionTextures();\n  for (i = hitDetectionTextures.length - 1; i >= 0; --i) {\n    gl.bindTexture(TEXTURE_2D, hitDetectionTextures[i]);\n    groupStart = (i > 0) ? this.hitDetectionGroupIndices[i - 1] : 0;\n    end = this.hitDetectionGroupIndices[i];\n\n    // draw all features for this texture group\n    while (featureIndex >= 0 &&\n        this.startIndices[featureIndex] >= groupStart) {\n      start = this.startIndices[featureIndex];\n      feature = this.startIndicesFeature[featureIndex];\n      featureUid = getUid(feature).toString();\n\n      if (skippedFeaturesHash[featureUid] === undefined &&\n          feature.getGeometry() &&\n          (opt_hitExtent === undefined || intersects(\n            /** @type {Array<number>} */ (opt_hitExtent),\n            feature.getGeometry().getExtent()))) {\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        this.drawElements(gl, context, start, end);\n\n        const result = featureCallback(feature);\n        if (result) {\n          return result;\n        }\n      }\n\n      end = start;\n      featureIndex--;\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTextureReplay.prototype.finish = function(context) {\n  this.anchorX = undefined;\n  this.anchorY = undefined;\n  this.height = undefined;\n  this.imageHeight = undefined;\n  this.imageWidth = undefined;\n  this.indices = null;\n  this.opacity = undefined;\n  this.originX = undefined;\n  this.originY = undefined;\n  this.rotateWithView = undefined;\n  this.rotation = undefined;\n  this.scale = undefined;\n  this.vertices = null;\n  this.width = undefined;\n};\n\n\n/**\n * @abstract\n * @protected\n * @param {boolean=} opt_all Return hit detection textures with regular ones.\n * @returns {Array.<WebGLTexture>} Textures.\n */\nWebGLTextureReplay.prototype.getTextures = function(opt_all) {};\n\n\n/**\n * @abstract\n * @protected\n * @returns {Array.<WebGLTexture>} Textures.\n */\nWebGLTextureReplay.prototype.getHitDetectionTextures = function() {};\nexport default WebGLTextureReplay;\n","/**\n * @module ol/render/webgl/ImageReplay\n */\nimport {getUid, inherits} from '../../index.js';\nimport WebGLTextureReplay from '../webgl/TextureReplay.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n/**\n * @constructor\n * @extends {module:ol/render/webgl/TextureReplay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Max extent.\n * @struct\n */\nconst WebGLImageReplay = function(tolerance, maxExtent) {\n  WebGLTextureReplay.call(this, tolerance, maxExtent);\n\n  /**\n   * @type {Array.<HTMLCanvasElement|HTMLImageElement|HTMLVideoElement>}\n   * @protected\n   */\n  this.images_ = [];\n\n  /**\n   * @type {Array.<HTMLCanvasElement|HTMLImageElement|HTMLVideoElement>}\n   * @protected\n   */\n  this.hitDetectionImages_ = [];\n\n  /**\n   * @type {Array.<WebGLTexture>}\n   * @private\n   */\n  this.textures_ = [];\n\n  /**\n   * @type {Array.<WebGLTexture>}\n   * @private\n   */\n  this.hitDetectionTextures_ = [];\n\n};\n\ninherits(WebGLImageReplay, WebGLTextureReplay);\n\n\n/**\n * @inheritDoc\n */\nWebGLImageReplay.prototype.drawMultiPoint = function(multiPointGeometry, feature) {\n  this.startIndices.push(this.indices.length);\n  this.startIndicesFeature.push(feature);\n  const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n  const stride = multiPointGeometry.getStride();\n  this.drawCoordinates(\n    flatCoordinates, 0, flatCoordinates.length, stride);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImageReplay.prototype.drawPoint = function(pointGeometry, feature) {\n  this.startIndices.push(this.indices.length);\n  this.startIndicesFeature.push(feature);\n  const flatCoordinates = pointGeometry.getFlatCoordinates();\n  const stride = pointGeometry.getStride();\n  this.drawCoordinates(\n    flatCoordinates, 0, flatCoordinates.length, stride);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImageReplay.prototype.finish = function(context) {\n  const gl = context.getGL();\n\n  this.groupIndices.push(this.indices.length);\n  this.hitDetectionGroupIndices.push(this.indices.length);\n\n  // create, bind, and populate the vertices buffer\n  this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n  const indices = this.indices;\n\n  // create, bind, and populate the indices buffer\n  this.indicesBuffer = new WebGLBuffer(indices);\n\n  // create textures\n  /** @type {Object.<string, WebGLTexture>} */\n  const texturePerImage = {};\n\n  this.createTextures(this.textures_, this.images_, texturePerImage, gl);\n\n  this.createTextures(this.hitDetectionTextures_, this.hitDetectionImages_,\n    texturePerImage, gl);\n\n  this.images_ = null;\n  this.hitDetectionImages_ = null;\n  WebGLTextureReplay.prototype.finish.call(this, context);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImageReplay.prototype.setImageStyle = function(imageStyle) {\n  const anchor = imageStyle.getAnchor();\n  const image = imageStyle.getImage(1);\n  const imageSize = imageStyle.getImageSize();\n  const hitDetectionImage = imageStyle.getHitDetectionImage(1);\n  const opacity = imageStyle.getOpacity();\n  const origin = imageStyle.getOrigin();\n  const rotateWithView = imageStyle.getRotateWithView();\n  const rotation = imageStyle.getRotation();\n  const size = imageStyle.getSize();\n  const scale = imageStyle.getScale();\n\n  let currentImage;\n  if (this.images_.length === 0) {\n    this.images_.push(image);\n  } else {\n    currentImage = this.images_[this.images_.length - 1];\n    if (getUid(currentImage) != getUid(image)) {\n      this.groupIndices.push(this.indices.length);\n      this.images_.push(image);\n    }\n  }\n\n  if (this.hitDetectionImages_.length === 0) {\n    this.hitDetectionImages_.push(hitDetectionImage);\n  } else {\n    currentImage =\n        this.hitDetectionImages_[this.hitDetectionImages_.length - 1];\n    if (getUid(currentImage) != getUid(hitDetectionImage)) {\n      this.hitDetectionGroupIndices.push(this.indices.length);\n      this.hitDetectionImages_.push(hitDetectionImage);\n    }\n  }\n\n  this.anchorX = anchor[0];\n  this.anchorY = anchor[1];\n  this.height = size[1];\n  this.imageHeight = imageSize[1];\n  this.imageWidth = imageSize[0];\n  this.opacity = opacity;\n  this.originX = origin[0];\n  this.originY = origin[1];\n  this.rotation = rotation;\n  this.rotateWithView = rotateWithView;\n  this.scale = scale;\n  this.width = size[0];\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImageReplay.prototype.getTextures = function(opt_all) {\n  return opt_all ? this.textures_.concat(this.hitDetectionTextures_) : this.textures_;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImageReplay.prototype.getHitDetectionTextures = function() {\n  return this.hitDetectionTextures_;\n};\nexport default WebGLImageReplay;\n","/**\n * @module ol/geom/flat/topology\n */\nimport {linearRing as linearRingArea} from '../flat/area.js';\n\n/**\n * Check if the linestring is a boundary.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} The linestring is a boundary.\n */\nexport function lineStringIsClosed(flatCoordinates, offset, end, stride) {\n  const lastCoord = end - stride;\n  if (flatCoordinates[offset] === flatCoordinates[lastCoord] &&\n      flatCoordinates[offset + 1] === flatCoordinates[lastCoord + 1] && (end - offset) / stride > 3) {\n    return !!linearRingArea(flatCoordinates, offset, end, stride);\n  }\n  return false;\n}\n","/**\n * @module ol/render/webgl/linestringreplay/defaultshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG_WEBGL} from '../../../index.js';\nimport WebGLFragment from '../../../webgl/Fragment.js';\nimport WebGLVertex from '../../../webgl/Vertex.js';\n\nexport const fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying float v_round;\\nvarying vec2 v_roundVertex;\\nvarying float v_halfWidth;\\n\\n\\n\\nuniform float u_opacity;\\nuniform vec4 u_color;\\nuniform vec2 u_size;\\nuniform float u_pixelRatio;\\n\\nvoid main(void) {\\n  if (v_round > 0.0) {\\n    vec2 windowCoords = vec2((v_roundVertex.x + 1.0) / 2.0 * u_size.x * u_pixelRatio,\\n        (v_roundVertex.y + 1.0) / 2.0 * u_size.y * u_pixelRatio);\\n    if (length(windowCoords - gl_FragCoord.xy) > v_halfWidth * u_pixelRatio) {\\n      discard;\\n    }\\n  }\\n  gl_FragColor = u_color;\\n  float alpha = u_color.a * u_opacity;\\n  if (alpha == 0.0) {\\n    discard;\\n  }\\n  gl_FragColor.a = alpha;\\n}\\n' :\n  'precision mediump float;varying float a;varying vec2 aVertex;varying float c;uniform float m;uniform vec4 n;uniform vec2 o;uniform float p;void main(void){if(a>0.0){vec2 windowCoords=vec2((aVertex.x+1.0)/2.0*o.x*p,(aVertex.y+1.0)/2.0*o.y*p);if(length(windowCoords-gl_FragCoord.xy)>c*p){discard;}} gl_FragColor=n;float alpha=n.a*m;if(alpha==0.0){discard;}gl_FragColor.a=alpha;}');\n\nexport const vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying float v_round;\\nvarying vec2 v_roundVertex;\\nvarying float v_halfWidth;\\n\\n\\nattribute vec2 a_lastPos;\\nattribute vec2 a_position;\\nattribute vec2 a_nextPos;\\nattribute float a_direction;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\nuniform float u_lineWidth;\\nuniform float u_miterLimit;\\n\\nbool nearlyEquals(in float value, in float ref) {\\n  float epsilon = 0.000000000001;\\n  return value >= ref - epsilon && value <= ref + epsilon;\\n}\\n\\nvoid alongNormal(out vec2 offset, in vec2 nextP, in float turnDir, in float direction) {\\n  vec2 dirVect = nextP - a_position;\\n  vec2 normal = normalize(vec2(-turnDir * dirVect.y, turnDir * dirVect.x));\\n  offset = u_lineWidth / 2.0 * normal * direction;\\n}\\n\\nvoid miterUp(out vec2 offset, out float round, in bool isRound, in float direction) {\\n  float halfWidth = u_lineWidth / 2.0;\\n  vec2 tangent = normalize(normalize(a_nextPos - a_position) + normalize(a_position - a_lastPos));\\n  vec2 normal = vec2(-tangent.y, tangent.x);\\n  vec2 dirVect = a_nextPos - a_position;\\n  vec2 tmpNormal = normalize(vec2(-dirVect.y, dirVect.x));\\n  float miterLength = abs(halfWidth / dot(normal, tmpNormal));\\n  offset = normal * direction * miterLength;\\n  round = 0.0;\\n  if (isRound) {\\n    round = 1.0;\\n  } else if (miterLength > u_miterLimit + u_lineWidth) {\\n    offset = halfWidth * tmpNormal * direction;\\n  }\\n}\\n\\nbool miterDown(out vec2 offset, in vec4 projPos, in mat4 offsetMatrix, in float direction) {\\n  bool degenerate = false;\\n  vec2 tangent = normalize(normalize(a_nextPos - a_position) + normalize(a_position - a_lastPos));\\n  vec2 normal = vec2(-tangent.y, tangent.x);\\n  vec2 dirVect = a_lastPos - a_position;\\n  vec2 tmpNormal = normalize(vec2(-dirVect.y, dirVect.x));\\n  vec2 longOffset, shortOffset, longVertex;\\n  vec4 shortProjVertex;\\n  float halfWidth = u_lineWidth / 2.0;\\n  if (length(a_nextPos - a_position) > length(a_lastPos - a_position)) {\\n    longOffset = tmpNormal * direction * halfWidth;\\n    shortOffset = normalize(vec2(dirVect.y, -dirVect.x)) * direction * halfWidth;\\n    longVertex = a_nextPos;\\n    shortProjVertex = u_projectionMatrix * vec4(a_lastPos, 0.0, 1.0);\\n  } else {\\n    shortOffset = tmpNormal * direction * halfWidth;\\n    longOffset = normalize(vec2(dirVect.y, -dirVect.x)) * direction * halfWidth;\\n    longVertex = a_lastPos;\\n    shortProjVertex = u_projectionMatrix * vec4(a_nextPos, 0.0, 1.0);\\n  }\\n  //Intersection algorithm based on theory by Paul Bourke (http://paulbourke.net/geometry/pointlineplane/).\\n  vec4 p1 = u_projectionMatrix * vec4(longVertex, 0.0, 1.0) + offsetMatrix * vec4(longOffset, 0.0, 0.0);\\n  vec4 p2 = projPos + offsetMatrix * vec4(longOffset, 0.0, 0.0);\\n  vec4 p3 = shortProjVertex + offsetMatrix * vec4(-shortOffset, 0.0, 0.0);\\n  vec4 p4 = shortProjVertex + offsetMatrix * vec4(shortOffset, 0.0, 0.0);\\n  float denom = (p4.y - p3.y) * (p2.x - p1.x) - (p4.x - p3.x) * (p2.y - p1.y);\\n  float firstU = ((p4.x - p3.x) * (p1.y - p3.y) - (p4.y - p3.y) * (p1.x - p3.x)) / denom;\\n  float secondU = ((p2.x - p1.x) * (p1.y - p3.y) - (p2.y - p1.y) * (p1.x - p3.x)) / denom;\\n  float epsilon = 0.000000000001;\\n  if (firstU > epsilon && firstU < 1.0 - epsilon && secondU > epsilon && secondU < 1.0 - epsilon) {\\n    shortProjVertex.x = p1.x + firstU * (p2.x - p1.x);\\n    shortProjVertex.y = p1.y + firstU * (p2.y - p1.y);\\n    offset = shortProjVertex.xy;\\n    degenerate = true;\\n  } else {\\n    float miterLength = abs(halfWidth / dot(normal, tmpNormal));\\n    offset = normal * direction * miterLength;\\n  }\\n  return degenerate;\\n}\\n\\nvoid squareCap(out vec2 offset, out float round, in bool isRound, in vec2 nextP,\\n    in float turnDir, in float direction) {\\n  round = 0.0;\\n  vec2 dirVect = a_position - nextP;\\n  vec2 firstNormal = normalize(dirVect);\\n  vec2 secondNormal = vec2(turnDir * firstNormal.y * direction, -turnDir * firstNormal.x * direction);\\n  vec2 hypotenuse = normalize(firstNormal - secondNormal);\\n  vec2 normal = vec2(turnDir * hypotenuse.y * direction, -turnDir * hypotenuse.x * direction);\\n  float length = sqrt(v_halfWidth * v_halfWidth * 2.0);\\n  offset = normal * length;\\n  if (isRound) {\\n    round = 1.0;\\n  }\\n}\\n\\nvoid main(void) {\\n  bool degenerate = false;\\n  float direction = float(sign(a_direction));\\n  mat4 offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n  vec2 offset;\\n  vec4 projPos = u_projectionMatrix * vec4(a_position, 0.0, 1.0);\\n  bool round = nearlyEquals(mod(a_direction, 2.0), 0.0);\\n\\n  v_round = 0.0;\\n  v_halfWidth = u_lineWidth / 2.0;\\n  v_roundVertex = projPos.xy;\\n\\n  if (nearlyEquals(mod(a_direction, 3.0), 0.0) || nearlyEquals(mod(a_direction, 17.0), 0.0)) {\\n    alongNormal(offset, a_nextPos, 1.0, direction);\\n  } else if (nearlyEquals(mod(a_direction, 5.0), 0.0) || nearlyEquals(mod(a_direction, 13.0), 0.0)) {\\n    alongNormal(offset, a_lastPos, -1.0, direction);\\n  } else if (nearlyEquals(mod(a_direction, 23.0), 0.0)) {\\n    miterUp(offset, v_round, round, direction);\\n  } else if (nearlyEquals(mod(a_direction, 19.0), 0.0)) {\\n    degenerate = miterDown(offset, projPos, offsetMatrix, direction);\\n  } else if (nearlyEquals(mod(a_direction, 7.0), 0.0)) {\\n    squareCap(offset, v_round, round, a_nextPos, 1.0, direction);\\n  } else if (nearlyEquals(mod(a_direction, 11.0), 0.0)) {\\n    squareCap(offset, v_round, round, a_lastPos, -1.0, direction);\\n  }\\n  if (!degenerate) {\\n    vec4 offsets = offsetMatrix * vec4(offset, 0.0, 0.0);\\n    gl_Position = projPos + offsets;\\n  } else {\\n    gl_Position = vec4(offset, 0.0, 1.0);\\n  }\\n}\\n\\n\\n' :\n  'varying float a;varying vec2 aVertex;varying float c;attribute vec2 d;attribute vec2 e;attribute vec2 f;attribute float g;uniform mat4 h;uniform mat4 i;uniform mat4 j;uniform float k;uniform float l;bool nearlyEquals(in float value,in float ref){float epsilon=0.000000000001;return value>=ref-epsilon&&value<=ref+epsilon;}void alongNormal(out vec2 offset,in vec2 nextP,in float turnDir,in float direction){vec2 dirVect=nextP-e;vec2 normal=normalize(vec2(-turnDir*dirVect.y,turnDir*dirVect.x));offset=k/2.0*normal*direction;}void miterUp(out vec2 offset,out float round,in bool isRound,in float direction){float halfWidth=k/2.0;vec2 tangent=normalize(normalize(f-e)+normalize(e-d));vec2 normal=vec2(-tangent.y,tangent.x);vec2 dirVect=f-e;vec2 tmpNormal=normalize(vec2(-dirVect.y,dirVect.x));float miterLength=abs(halfWidth/dot(normal,tmpNormal));offset=normal*direction*miterLength;round=0.0;if(isRound){round=1.0;}else if(miterLength>l+k){offset=halfWidth*tmpNormal*direction;}} bool miterDown(out vec2 offset,in vec4 projPos,in mat4 offsetMatrix,in float direction){bool degenerate=false;vec2 tangent=normalize(normalize(f-e)+normalize(e-d));vec2 normal=vec2(-tangent.y,tangent.x);vec2 dirVect=d-e;vec2 tmpNormal=normalize(vec2(-dirVect.y,dirVect.x));vec2 longOffset,shortOffset,longVertex;vec4 shortProjVertex;float halfWidth=k/2.0;if(length(f-e)>length(d-e)){longOffset=tmpNormal*direction*halfWidth;shortOffset=normalize(vec2(dirVect.y,-dirVect.x))*direction*halfWidth;longVertex=f;shortProjVertex=h*vec4(d,0.0,1.0);}else{shortOffset=tmpNormal*direction*halfWidth;longOffset=normalize(vec2(dirVect.y,-dirVect.x))*direction*halfWidth;longVertex=d;shortProjVertex=h*vec4(f,0.0,1.0);}vec4 p1=h*vec4(longVertex,0.0,1.0)+offsetMatrix*vec4(longOffset,0.0,0.0);vec4 p2=projPos+offsetMatrix*vec4(longOffset,0.0,0.0);vec4 p3=shortProjVertex+offsetMatrix*vec4(-shortOffset,0.0,0.0);vec4 p4=shortProjVertex+offsetMatrix*vec4(shortOffset,0.0,0.0);float denom=(p4.y-p3.y)*(p2.x-p1.x)-(p4.x-p3.x)*(p2.y-p1.y);float firstU=((p4.x-p3.x)*(p1.y-p3.y)-(p4.y-p3.y)*(p1.x-p3.x))/denom;float secondU=((p2.x-p1.x)*(p1.y-p3.y)-(p2.y-p1.y)*(p1.x-p3.x))/denom;float epsilon=0.000000000001;if(firstU>epsilon&&firstU<1.0-epsilon&&secondU>epsilon&&secondU<1.0-epsilon){shortProjVertex.x=p1.x+firstU*(p2.x-p1.x);shortProjVertex.y=p1.y+firstU*(p2.y-p1.y);offset=shortProjVertex.xy;degenerate=true;}else{float miterLength=abs(halfWidth/dot(normal,tmpNormal));offset=normal*direction*miterLength;}return degenerate;}void squareCap(out vec2 offset,out float round,in bool isRound,in vec2 nextP,in float turnDir,in float direction){round=0.0;vec2 dirVect=e-nextP;vec2 firstNormal=normalize(dirVect);vec2 secondNormal=vec2(turnDir*firstNormal.y*direction,-turnDir*firstNormal.x*direction);vec2 hypotenuse=normalize(firstNormal-secondNormal);vec2 normal=vec2(turnDir*hypotenuse.y*direction,-turnDir*hypotenuse.x*direction);float length=sqrt(c*c*2.0);offset=normal*length;if(isRound){round=1.0;}} void main(void){bool degenerate=false;float direction=float(sign(g));mat4 offsetMatrix=i*j;vec2 offset;vec4 projPos=h*vec4(e,0.0,1.0);bool round=nearlyEquals(mod(g,2.0),0.0);a=0.0;c=k/2.0;aVertex=projPos.xy;if(nearlyEquals(mod(g,3.0),0.0)||nearlyEquals(mod(g,17.0),0.0)){alongNormal(offset,f,1.0,direction);}else if(nearlyEquals(mod(g,5.0),0.0)||nearlyEquals(mod(g,13.0),0.0)){alongNormal(offset,d,-1.0,direction);}else if(nearlyEquals(mod(g,23.0),0.0)){miterUp(offset,a,round,direction);}else if(nearlyEquals(mod(g,19.0),0.0)){degenerate=miterDown(offset,projPos,offsetMatrix,direction);}else if(nearlyEquals(mod(g,7.0),0.0)){squareCap(offset,a,round,f,1.0,direction);}else if(nearlyEquals(mod(g,11.0),0.0)){squareCap(offset,a,round,d,-1.0,direction);}if(!degenerate){vec4 offsets=offsetMatrix*vec4(offset,0.0,0.0);gl_Position=projPos+offsets;}else{gl_Position=vec4(offset,0.0,1.0);}}');\n","/**\n * @module ol/render/webgl/linestringreplay/defaultshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG_WEBGL} from '../../../../index.js';\n\n/**\n * @constructor\n * @param {WebGLRenderingContext} gl GL.\n * @param {WebGLProgram} program Program.\n * @struct\n */\nconst Locations = function(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'h');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetScaleMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'i');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetRotateMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'j');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_lineWidth = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_lineWidth' : 'k');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_miterLimit = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_miterLimit' : 'l');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_opacity' : 'm');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_color = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_color' : 'n');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_size = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_size' : 'o');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_pixelRatio = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_pixelRatio' : 'p');\n\n  /**\n   * @type {number}\n   */\n  this.a_lastPos = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_lastPos' : 'd');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'e');\n\n  /**\n   * @type {number}\n   */\n  this.a_nextPos = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_nextPos' : 'f');\n\n  /**\n   * @type {number}\n   */\n  this.a_direction = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_direction' : 'g');\n};\n\nexport default Locations;\n","/**\n * @module ol/render/webgl/LineStringReplay\n */\nimport {getUid, inherits} from '../../index.js';\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {intersects} from '../../extent.js';\nimport {linearRingIsClockwise} from '../../geom/flat/orient.js';\nimport {translate} from '../../geom/flat/transform.js';\nimport {lineStringIsClosed} from '../../geom/flat/topology.js';\nimport {isEmpty} from '../../obj.js';\nimport {DEFAULT_LINECAP, DEFAULT_LINEDASH, DEFAULT_LINEDASHOFFSET,\n  DEFAULT_LINEJOIN, DEFAULT_LINEWIDTH, DEFAULT_MITERLIMIT, DEFAULT_STROKESTYLE,\n  triangleIsCounterClockwise} from '../webgl.js';\nimport WebGLReplay from '../webgl/Replay.js';\nimport {fragment, vertex} from '../webgl/linestringreplay/defaultshader.js';\nimport Locations from '../webgl/linestringreplay/defaultshader/Locations.js';\nimport {FLOAT} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  ROUND: 2,\n  BEGIN_LINE: 3,\n  END_LINE: 5,\n  BEGIN_LINE_CAP: 7,\n  END_LINE_CAP: 11,\n  BEVEL_FIRST: 13,\n  BEVEL_SECOND: 17,\n  MITER_BOTTOM: 19,\n  MITER_TOP: 23\n};\n\n\n/**\n * @constructor\n * @extends {module:ol/render/webgl/Replay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Max extent.\n * @struct\n */\nconst WebGLLineStringReplay = function(tolerance, maxExtent) {\n  WebGLReplay.call(this, tolerance, maxExtent);\n\n  /**\n   * @private\n   * @type {module:ol/render/webgl/linestringreplay/defaultshader/Locations}\n   */\n  this.defaultLocations_ = null;\n\n  /**\n   * @private\n   * @type {Array.<Array.<?>>}\n   */\n  this.styles_ = [];\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.styleIndices_ = [];\n\n  /**\n   * @private\n   * @type {{strokeColor: (Array.<number>|null),\n   *         lineCap: (string|undefined),\n   *         lineDash: Array.<number>,\n   *         lineDashOffset: (number|undefined),\n   *         lineJoin: (string|undefined),\n   *         lineWidth: (number|undefined),\n   *         miterLimit: (number|undefined),\n   *         changed: boolean}|null}\n   */\n  this.state_ = {\n    strokeColor: null,\n    lineCap: undefined,\n    lineDash: null,\n    lineDashOffset: undefined,\n    lineJoin: undefined,\n    lineWidth: undefined,\n    miterLimit: undefined,\n    changed: false\n  };\n\n};\n\ninherits(WebGLLineStringReplay, WebGLReplay);\n\n\n/**\n * Draw one segment.\n * @private\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nWebGLLineStringReplay.prototype.drawCoordinates_ = function(flatCoordinates, offset, end, stride) {\n\n  let i, ii;\n  let numVertices = this.vertices.length;\n  let numIndices = this.indices.length;\n  //To save a vertex, the direction of a point is a product of the sign (1 or -1), a prime from\n  //Instruction, and a rounding factor (1 or 2). If the product is even,\n  //we round it. If it is odd, we don't.\n  const lineJoin = this.state_.lineJoin === 'bevel' ? 0 :\n    this.state_.lineJoin === 'miter' ? 1 : 2;\n  const lineCap = this.state_.lineCap === 'butt' ? 0 :\n    this.state_.lineCap === 'square' ? 1 : 2;\n  const closed = lineStringIsClosed(flatCoordinates, offset, end, stride);\n  let startCoords, sign, n;\n  let lastIndex = numIndices;\n  let lastSign = 1;\n  //We need the adjacent vertices to define normals in joins. p0 = last, p1 = current, p2 = next.\n  let p0, p1, p2;\n\n  for (i = offset, ii = end; i < ii; i += stride) {\n\n    n = numVertices / 7;\n\n    p0 = p1;\n    p1 = p2 || [flatCoordinates[i], flatCoordinates[i + 1]];\n    //First vertex.\n    if (i === offset) {\n      p2 = [flatCoordinates[i + stride], flatCoordinates[i + stride + 1]];\n      if (end - offset === stride * 2 && equals(p1, p2)) {\n        break;\n      }\n      if (closed) {\n        //A closed line! Complete the circle.\n        p0 = [flatCoordinates[end - stride * 2],\n          flatCoordinates[end - stride * 2 + 1]];\n\n        startCoords = p2;\n      } else {\n        //Add the first two/four vertices.\n\n        if (lineCap) {\n          numVertices = this.addVertices_([0, 0], p1, p2,\n            lastSign * Instruction.BEGIN_LINE_CAP * lineCap, numVertices);\n\n          numVertices = this.addVertices_([0, 0], p1, p2,\n            -lastSign * Instruction.BEGIN_LINE_CAP * lineCap, numVertices);\n\n          this.indices[numIndices++] = n + 2;\n          this.indices[numIndices++] = n;\n          this.indices[numIndices++] = n + 1;\n\n          this.indices[numIndices++] = n + 1;\n          this.indices[numIndices++] = n + 3;\n          this.indices[numIndices++] = n + 2;\n\n        }\n\n        numVertices = this.addVertices_([0, 0], p1, p2,\n          lastSign * Instruction.BEGIN_LINE * (lineCap || 1), numVertices);\n\n        numVertices = this.addVertices_([0, 0], p1, p2,\n          -lastSign * Instruction.BEGIN_LINE * (lineCap || 1), numVertices);\n\n        lastIndex = numVertices / 7 - 1;\n\n        continue;\n      }\n    } else if (i === end - stride) {\n      //Last vertex.\n      if (closed) {\n        //Same as the first vertex.\n        p2 = startCoords;\n        break;\n      } else {\n        p0 = p0 || [0, 0];\n\n        numVertices = this.addVertices_(p0, p1, [0, 0],\n          lastSign * Instruction.END_LINE * (lineCap || 1), numVertices);\n\n        numVertices = this.addVertices_(p0, p1, [0, 0],\n          -lastSign * Instruction.END_LINE * (lineCap || 1), numVertices);\n\n        this.indices[numIndices++] = n;\n        this.indices[numIndices++] = lastIndex - 1;\n        this.indices[numIndices++] = lastIndex;\n\n        this.indices[numIndices++] = lastIndex;\n        this.indices[numIndices++] = n + 1;\n        this.indices[numIndices++] = n;\n\n        if (lineCap) {\n          numVertices = this.addVertices_(p0, p1, [0, 0],\n            lastSign * Instruction.END_LINE_CAP * lineCap, numVertices);\n\n          numVertices = this.addVertices_(p0, p1, [0, 0],\n            -lastSign * Instruction.END_LINE_CAP * lineCap, numVertices);\n\n          this.indices[numIndices++] = n + 2;\n          this.indices[numIndices++] = n;\n          this.indices[numIndices++] = n + 1;\n\n          this.indices[numIndices++] = n + 1;\n          this.indices[numIndices++] = n + 3;\n          this.indices[numIndices++] = n + 2;\n\n        }\n\n        break;\n      }\n    } else {\n      p2 = [flatCoordinates[i + stride], flatCoordinates[i + stride + 1]];\n    }\n\n    // We group CW and straight lines, thus the not so inituitive CCW checking function.\n    sign = triangleIsCounterClockwise(p0[0], p0[1], p1[0], p1[1], p2[0], p2[1])\n      ? -1 : 1;\n\n    numVertices = this.addVertices_(p0, p1, p2,\n      sign * Instruction.BEVEL_FIRST * (lineJoin || 1), numVertices);\n\n    numVertices = this.addVertices_(p0, p1, p2,\n      sign * Instruction.BEVEL_SECOND * (lineJoin || 1), numVertices);\n\n    numVertices = this.addVertices_(p0, p1, p2,\n      -sign * Instruction.MITER_BOTTOM * (lineJoin || 1), numVertices);\n\n    if (i > offset) {\n      this.indices[numIndices++] = n;\n      this.indices[numIndices++] = lastIndex - 1;\n      this.indices[numIndices++] = lastIndex;\n\n      this.indices[numIndices++] = n + 2;\n      this.indices[numIndices++] = n;\n      this.indices[numIndices++] = lastSign * sign > 0 ? lastIndex : lastIndex - 1;\n    }\n\n    this.indices[numIndices++] = n;\n    this.indices[numIndices++] = n + 2;\n    this.indices[numIndices++] = n + 1;\n\n    lastIndex = n + 2;\n    lastSign = sign;\n\n    //Add miter\n    if (lineJoin) {\n      numVertices = this.addVertices_(p0, p1, p2,\n        sign * Instruction.MITER_TOP * lineJoin, numVertices);\n\n      this.indices[numIndices++] = n + 1;\n      this.indices[numIndices++] = n + 3;\n      this.indices[numIndices++] = n;\n    }\n  }\n\n  if (closed) {\n    n = n || numVertices / 7;\n    sign = linearRingIsClockwise([p0[0], p0[1], p1[0], p1[1], p2[0], p2[1]], 0, 6, 2)\n      ? 1 : -1;\n\n    numVertices = this.addVertices_(p0, p1, p2,\n      sign * Instruction.BEVEL_FIRST * (lineJoin || 1), numVertices);\n\n    numVertices = this.addVertices_(p0, p1, p2,\n      -sign * Instruction.MITER_BOTTOM * (lineJoin || 1), numVertices);\n\n    this.indices[numIndices++] = n;\n    this.indices[numIndices++] = lastIndex - 1;\n    this.indices[numIndices++] = lastIndex;\n\n    this.indices[numIndices++] = n + 1;\n    this.indices[numIndices++] = n;\n    this.indices[numIndices++] = lastSign * sign > 0 ? lastIndex : lastIndex - 1;\n  }\n};\n\n/**\n * @param {Array.<number>} p0 Last coordinates.\n * @param {Array.<number>} p1 Current coordinates.\n * @param {Array.<number>} p2 Next coordinates.\n * @param {number} product Sign, instruction, and rounding product.\n * @param {number} numVertices Vertex counter.\n * @return {number} Vertex counter.\n * @private\n */\nWebGLLineStringReplay.prototype.addVertices_ = function(p0, p1, p2, product, numVertices) {\n  this.vertices[numVertices++] = p0[0];\n  this.vertices[numVertices++] = p0[1];\n  this.vertices[numVertices++] = p1[0];\n  this.vertices[numVertices++] = p1[1];\n  this.vertices[numVertices++] = p2[0];\n  this.vertices[numVertices++] = p2[1];\n  this.vertices[numVertices++] = product;\n\n  return numVertices;\n};\n\n/**\n * Check if the linestring can be drawn (i. e. valid).\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} The linestring can be drawn.\n * @private\n */\nWebGLLineStringReplay.prototype.isValid_ = function(flatCoordinates, offset, end, stride) {\n  const range = end - offset;\n  if (range < stride * 2) {\n    return false;\n  } else if (range === stride * 2) {\n    const firstP = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    const lastP = [flatCoordinates[offset + stride], flatCoordinates[offset + stride + 1]];\n    return !equals(firstP, lastP);\n  }\n\n  return true;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLLineStringReplay.prototype.drawLineString = function(lineStringGeometry, feature) {\n  let flatCoordinates = lineStringGeometry.getFlatCoordinates();\n  const stride = lineStringGeometry.getStride();\n  if (this.isValid_(flatCoordinates, 0, flatCoordinates.length, stride)) {\n    flatCoordinates = translate(flatCoordinates, 0, flatCoordinates.length,\n      stride, -this.origin[0], -this.origin[1]);\n    if (this.state_.changed) {\n      this.styleIndices_.push(this.indices.length);\n      this.state_.changed = false;\n    }\n    this.startIndices.push(this.indices.length);\n    this.startIndicesFeature.push(feature);\n    this.drawCoordinates_(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLLineStringReplay.prototype.drawMultiLineString = function(multiLineStringGeometry, feature) {\n  const indexCount = this.indices.length;\n  const ends = multiLineStringGeometry.getEnds();\n  ends.unshift(0);\n  const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n  const stride = multiLineStringGeometry.getStride();\n  let i, ii;\n  if (ends.length > 1) {\n    for (i = 1, ii = ends.length; i < ii; ++i) {\n      if (this.isValid_(flatCoordinates, ends[i - 1], ends[i], stride)) {\n        const lineString = translate(flatCoordinates, ends[i - 1], ends[i],\n          stride, -this.origin[0], -this.origin[1]);\n        this.drawCoordinates_(\n          lineString, 0, lineString.length, stride);\n      }\n    }\n  }\n  if (this.indices.length > indexCount) {\n    this.startIndices.push(indexCount);\n    this.startIndicesFeature.push(feature);\n    if (this.state_.changed) {\n      this.styleIndices_.push(indexCount);\n      this.state_.changed = false;\n    }\n  }\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} holeFlatCoordinates Hole flat coordinates.\n * @param {number} stride Stride.\n */\nWebGLLineStringReplay.prototype.drawPolygonCoordinates = function(\n  flatCoordinates, holeFlatCoordinates, stride) {\n  if (!lineStringIsClosed(flatCoordinates, 0, flatCoordinates.length, stride)) {\n    flatCoordinates.push(flatCoordinates[0]);\n    flatCoordinates.push(flatCoordinates[1]);\n  }\n  this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n  if (holeFlatCoordinates.length) {\n    let i, ii;\n    for (i = 0, ii = holeFlatCoordinates.length; i < ii; ++i) {\n      if (!lineStringIsClosed(holeFlatCoordinates[i], 0, holeFlatCoordinates[i].length, stride)) {\n        holeFlatCoordinates[i].push(holeFlatCoordinates[i][0]);\n        holeFlatCoordinates[i].push(holeFlatCoordinates[i][1]);\n      }\n      this.drawCoordinates_(holeFlatCoordinates[i], 0,\n        holeFlatCoordinates[i].length, stride);\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {number=} opt_index Index count.\n */\nWebGLLineStringReplay.prototype.setPolygonStyle = function(feature, opt_index) {\n  const index = opt_index === undefined ? this.indices.length : opt_index;\n  this.startIndices.push(index);\n  this.startIndicesFeature.push(feature);\n  if (this.state_.changed) {\n    this.styleIndices_.push(index);\n    this.state_.changed = false;\n  }\n};\n\n\n/**\n * @return {number} Current index.\n */\nWebGLLineStringReplay.prototype.getCurrentIndex = function() {\n  return this.indices.length;\n};\n\n\n/**\n * @inheritDoc\n **/\nWebGLLineStringReplay.prototype.finish = function(context) {\n  // create, bind, and populate the vertices buffer\n  this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n  // create, bind, and populate the indices buffer\n  this.indicesBuffer = new WebGLBuffer(this.indices);\n\n  this.startIndices.push(this.indices.length);\n\n  //Clean up, if there is nothing to draw\n  if (this.styleIndices_.length === 0 && this.styles_.length > 0) {\n    this.styles_ = [];\n  }\n\n  this.vertices = null;\n  this.indices = null;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLLineStringReplay.prototype.getDeleteResourcesFunction = function(context) {\n  const verticesBuffer = this.verticesBuffer;\n  const indicesBuffer = this.indicesBuffer;\n  return function() {\n    context.deleteBuffer(verticesBuffer);\n    context.deleteBuffer(indicesBuffer);\n  };\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLLineStringReplay.prototype.setUpProgram = function(gl, context, size, pixelRatio) {\n  // get the program\n  const program = context.getProgram(fragment, vertex);\n\n  // get the locations\n  let locations;\n  if (!this.defaultLocations_) {\n    locations = new Locations(gl, program);\n    this.defaultLocations_ = locations;\n  } else {\n    locations = this.defaultLocations_;\n  }\n\n  context.useProgram(program);\n\n  // enable the vertex attrib arrays\n  gl.enableVertexAttribArray(locations.a_lastPos);\n  gl.vertexAttribPointer(locations.a_lastPos, 2, FLOAT,\n    false, 28, 0);\n\n  gl.enableVertexAttribArray(locations.a_position);\n  gl.vertexAttribPointer(locations.a_position, 2, FLOAT,\n    false, 28, 8);\n\n  gl.enableVertexAttribArray(locations.a_nextPos);\n  gl.vertexAttribPointer(locations.a_nextPos, 2, FLOAT,\n    false, 28, 16);\n\n  gl.enableVertexAttribArray(locations.a_direction);\n  gl.vertexAttribPointer(locations.a_direction, 1, FLOAT,\n    false, 28, 24);\n\n  // Enable renderer specific uniforms.\n  gl.uniform2fv(locations.u_size, size);\n  gl.uniform1f(locations.u_pixelRatio, pixelRatio);\n\n  return locations;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLLineStringReplay.prototype.shutDownProgram = function(gl, locations) {\n  gl.disableVertexAttribArray(locations.a_lastPos);\n  gl.disableVertexAttribArray(locations.a_position);\n  gl.disableVertexAttribArray(locations.a_nextPos);\n  gl.disableVertexAttribArray(locations.a_direction);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLLineStringReplay.prototype.drawReplay = function(gl, context, skippedFeaturesHash, hitDetection) {\n  //Save GL parameters.\n  const tmpDepthFunc = /** @type {number} */ (gl.getParameter(gl.DEPTH_FUNC));\n  const tmpDepthMask = /** @type {boolean} */ (gl.getParameter(gl.DEPTH_WRITEMASK));\n\n  if (!hitDetection) {\n    gl.enable(gl.DEPTH_TEST);\n    gl.depthMask(true);\n    gl.depthFunc(gl.NOTEQUAL);\n  }\n\n  if (!isEmpty(skippedFeaturesHash)) {\n    this.drawReplaySkipping_(gl, context, skippedFeaturesHash);\n  } else {\n    //Draw by style groups to minimize drawElements() calls.\n    let i, start, end, nextStyle;\n    end = this.startIndices[this.startIndices.length - 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      start = this.styleIndices_[i];\n      nextStyle = this.styles_[i];\n      this.setStrokeStyle_(gl, nextStyle[0], nextStyle[1], nextStyle[2]);\n      this.drawElements(gl, context, start, end);\n      gl.clear(gl.DEPTH_BUFFER_BIT);\n      end = start;\n    }\n  }\n  if (!hitDetection) {\n    gl.disable(gl.DEPTH_TEST);\n    gl.clear(gl.DEPTH_BUFFER_BIT);\n    //Restore GL parameters.\n    gl.depthMask(tmpDepthMask);\n    gl.depthFunc(tmpDepthFunc);\n  }\n};\n\n\n/**\n * @private\n * @param {WebGLRenderingContext} gl gl.\n * @param {module:ol/webgl/Context} context Context.\n * @param {Object} skippedFeaturesHash Ids of features to skip.\n */\nWebGLLineStringReplay.prototype.drawReplaySkipping_ = function(gl, context, skippedFeaturesHash) {\n  let i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex, featureStart;\n  featureIndex = this.startIndices.length - 2;\n  end = start = this.startIndices[featureIndex + 1];\n  for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n    nextStyle = this.styles_[i];\n    this.setStrokeStyle_(gl, nextStyle[0], nextStyle[1], nextStyle[2]);\n    groupStart = this.styleIndices_[i];\n\n    while (featureIndex >= 0 &&\n        this.startIndices[featureIndex] >= groupStart) {\n      featureStart = this.startIndices[featureIndex];\n      feature = this.startIndicesFeature[featureIndex];\n      featureUid = getUid(feature).toString();\n\n      if (skippedFeaturesHash[featureUid]) {\n        if (start !== end) {\n          this.drawElements(gl, context, start, end);\n          gl.clear(gl.DEPTH_BUFFER_BIT);\n        }\n        end = featureStart;\n      }\n      featureIndex--;\n      start = featureStart;\n    }\n    if (start !== end) {\n      this.drawElements(gl, context, start, end);\n      gl.clear(gl.DEPTH_BUFFER_BIT);\n    }\n    start = end = groupStart;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLLineStringReplay.prototype.drawHitDetectionReplayOneByOne = function(gl, context, skippedFeaturesHash,\n  featureCallback, opt_hitExtent) {\n  let i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex;\n  featureIndex = this.startIndices.length - 2;\n  end = this.startIndices[featureIndex + 1];\n  for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n    nextStyle = this.styles_[i];\n    this.setStrokeStyle_(gl, nextStyle[0], nextStyle[1], nextStyle[2]);\n    groupStart = this.styleIndices_[i];\n\n    while (featureIndex >= 0 &&\n        this.startIndices[featureIndex] >= groupStart) {\n      start = this.startIndices[featureIndex];\n      feature = this.startIndicesFeature[featureIndex];\n      featureUid = getUid(feature).toString();\n\n      if (skippedFeaturesHash[featureUid] === undefined &&\n          feature.getGeometry() &&\n          (opt_hitExtent === undefined || intersects(\n            /** @type {Array<number>} */ (opt_hitExtent),\n            feature.getGeometry().getExtent()))) {\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        this.drawElements(gl, context, start, end);\n\n        const result = featureCallback(feature);\n\n        if (result) {\n          return result;\n        }\n\n      }\n      featureIndex--;\n      end = start;\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @private\n * @param {WebGLRenderingContext} gl gl.\n * @param {Array.<number>} color Color.\n * @param {number} lineWidth Line width.\n * @param {number} miterLimit Miter limit.\n */\nWebGLLineStringReplay.prototype.setStrokeStyle_ = function(gl, color, lineWidth, miterLimit) {\n  gl.uniform4fv(this.defaultLocations_.u_color, color);\n  gl.uniform1f(this.defaultLocations_.u_lineWidth, lineWidth);\n  gl.uniform1f(this.defaultLocations_.u_miterLimit, miterLimit);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLLineStringReplay.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {\n  const strokeStyleLineCap = strokeStyle.getLineCap();\n  this.state_.lineCap = strokeStyleLineCap !== undefined ?\n    strokeStyleLineCap : DEFAULT_LINECAP;\n  const strokeStyleLineDash = strokeStyle.getLineDash();\n  this.state_.lineDash = strokeStyleLineDash ?\n    strokeStyleLineDash : DEFAULT_LINEDASH;\n  const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n  this.state_.lineDashOffset = strokeStyleLineDashOffset ?\n    strokeStyleLineDashOffset : DEFAULT_LINEDASHOFFSET;\n  const strokeStyleLineJoin = strokeStyle.getLineJoin();\n  this.state_.lineJoin = strokeStyleLineJoin !== undefined ?\n    strokeStyleLineJoin : DEFAULT_LINEJOIN;\n  let strokeStyleColor = strokeStyle.getColor();\n  if (!(strokeStyleColor instanceof CanvasGradient) &&\n      !(strokeStyleColor instanceof CanvasPattern)) {\n    strokeStyleColor = asArray(strokeStyleColor).map(function(c, i) {\n      return i != 3 ? c / 255 : c;\n    }) || DEFAULT_STROKESTYLE;\n  } else {\n    strokeStyleColor = DEFAULT_STROKESTYLE;\n  }\n  let strokeStyleWidth = strokeStyle.getWidth();\n  strokeStyleWidth = strokeStyleWidth !== undefined ?\n    strokeStyleWidth : DEFAULT_LINEWIDTH;\n  let strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n  strokeStyleMiterLimit = strokeStyleMiterLimit !== undefined ?\n    strokeStyleMiterLimit : DEFAULT_MITERLIMIT;\n  if (!this.state_.strokeColor || !equals(this.state_.strokeColor, strokeStyleColor) ||\n      this.state_.lineWidth !== strokeStyleWidth || this.state_.miterLimit !== strokeStyleMiterLimit) {\n    this.state_.changed = true;\n    this.state_.strokeColor = strokeStyleColor;\n    this.state_.lineWidth = strokeStyleWidth;\n    this.state_.miterLimit = strokeStyleMiterLimit;\n    this.styles_.push([strokeStyleColor, strokeStyleWidth, strokeStyleMiterLimit]);\n  }\n};\n\nexport default WebGLLineStringReplay;\n","/**\n * @module ol/render/webgl/polygonreplay/defaultshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG_WEBGL} from '../../../index.js';\nimport WebGLFragment from '../../../webgl/Fragment.js';\nimport WebGLVertex from '../../../webgl/Vertex.js';\n\nexport const fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\n\\n\\n\\nuniform vec4 u_color;\\nuniform float u_opacity;\\n\\nvoid main(void) {\\n  gl_FragColor = u_color;\\n  float alpha = u_color.a * u_opacity;\\n  if (alpha == 0.0) {\\n    discard;\\n  }\\n  gl_FragColor.a = alpha;\\n}\\n' :\n  'precision mediump float;uniform vec4 e;uniform float f;void main(void){gl_FragColor=e;float alpha=e.a*f;if(alpha==0.0){discard;}gl_FragColor.a=alpha;}');\n\nexport const vertex = new WebGLVertex(DEBUG_WEBGL ?\n  '\\n\\nattribute vec2 a_position;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\n\\nvoid main(void) {\\n  gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0);\\n}\\n\\n\\n' :\n  'attribute vec2 a;uniform mat4 b;uniform mat4 c;uniform mat4 d;void main(void){gl_Position=b*vec4(a,0.0,1.0);}');\n","/**\n * @module ol/render/webgl/polygonreplay/defaultshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG_WEBGL} from '../../../../index.js';\n\n/**\n * @constructor\n * @param {WebGLRenderingContext} gl GL.\n * @param {WebGLProgram} program Program.\n * @struct\n */\nconst Locations = function(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'b');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetScaleMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'c');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetRotateMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'd');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_color = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_color' : 'e');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_opacity' : 'f');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'a');\n};\n\nexport default Locations;\n","/**\n * @module ol/structs/LinkedList\n */\n\n\n/**\n * @typedef {Object} Item\n * @property {module:ol/structs/LinkedList~Item} [prev]\n * @property {module:ol/structs/LinkedList~Item} [next]\n * @property {?} data\n */\n\n\n/**\n * Creates an empty linked list structure.\n *\n * @constructor\n * @struct\n * @param {boolean=} opt_circular The last item is connected to the first one,\n * and the first item to the last one. Default is true.\n */\nconst LinkedList = function(opt_circular) {\n\n  /**\n   * @private\n   * @type {module:ol/structs/LinkedList~Item|undefined}\n   */\n  this.first_;\n\n  /**\n   * @private\n   * @type {module:ol/structs/LinkedList~Item|undefined}\n   */\n  this.last_;\n\n  /**\n   * @private\n   * @type {module:ol/structs/LinkedList~Item|undefined}\n   */\n  this.head_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.circular_ = opt_circular === undefined ? true : opt_circular;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.length_ = 0;\n};\n\n/**\n * Inserts an item into the linked list right after the current one.\n *\n * @param {?} data Item data.\n */\nLinkedList.prototype.insertItem = function(data) {\n\n  /** @type {module:ol/structs/LinkedList~Item} */\n  const item = {\n    prev: undefined,\n    next: undefined,\n    data: data\n  };\n\n  const head = this.head_;\n\n  //Initialize the list.\n  if (!head) {\n    this.first_ = item;\n    this.last_ = item;\n    if (this.circular_) {\n      item.next = item;\n      item.prev = item;\n    }\n  } else {\n    //Link the new item to the adjacent ones.\n    const next = head.next;\n    item.prev = head;\n    item.next = next;\n    head.next = item;\n    if (next) {\n      next.prev = item;\n    }\n\n    if (head === this.last_) {\n      this.last_ = item;\n    }\n  }\n  this.head_ = item;\n  this.length_++;\n};\n\n/**\n * Removes the current item from the list. Sets the cursor to the next item,\n * if possible.\n */\nLinkedList.prototype.removeItem = function() {\n  const head = this.head_;\n  if (head) {\n    const next = head.next;\n    const prev = head.prev;\n    if (next) {\n      next.prev = prev;\n    }\n    if (prev) {\n      prev.next = next;\n    }\n    this.head_ = next || prev;\n\n    if (this.first_ === this.last_) {\n      this.head_ = undefined;\n      this.first_ = undefined;\n      this.last_ = undefined;\n    } else if (this.first_ === head) {\n      this.first_ = this.head_;\n    } else if (this.last_ === head) {\n      this.last_ = prev ? this.head_.prev : this.head_;\n    }\n    this.length_--;\n  }\n};\n\n/**\n * Sets the cursor to the first item, and returns the associated data.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.firstItem = function() {\n  this.head_ = this.first_;\n  if (this.head_) {\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n* Sets the cursor to the last item, and returns the associated data.\n*\n* @return {?} Item data.\n*/\nLinkedList.prototype.lastItem = function() {\n  this.head_ = this.last_;\n  if (this.head_) {\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n * Sets the cursor to the next item, and returns the associated data.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.nextItem = function() {\n  if (this.head_ && this.head_.next) {\n    this.head_ = this.head_.next;\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n * Returns the next item's data without moving the cursor.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.getNextItem = function() {\n  if (this.head_ && this.head_.next) {\n    return this.head_.next.data;\n  }\n  return undefined;\n};\n\n/**\n * Sets the cursor to the previous item, and returns the associated data.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.prevItem = function() {\n  if (this.head_ && this.head_.prev) {\n    this.head_ = this.head_.prev;\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n * Returns the previous item's data without moving the cursor.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.getPrevItem = function() {\n  if (this.head_ && this.head_.prev) {\n    return this.head_.prev.data;\n  }\n  return undefined;\n};\n\n/**\n * Returns the current item's data.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.getCurrItem = function() {\n  if (this.head_) {\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n * Sets the first item of the list. This only works for circular lists, and sets\n * the last item accordingly.\n */\nLinkedList.prototype.setFirstItem = function() {\n  if (this.circular_ && this.head_) {\n    this.first_ = this.head_;\n    this.last_ = this.head_.prev;\n  }\n};\n\n/**\n * Concatenates two lists.\n * @param {module:ol/structs/LinkedList} list List to merge into the current list.\n */\nLinkedList.prototype.concat = function(list) {\n  if (list.head_) {\n    if (this.head_) {\n      const end = this.head_.next;\n      this.head_.next = list.first_;\n      list.first_.prev = this.head_;\n      end.prev = list.last_;\n      list.last_.next = end;\n      this.length_ += list.length_;\n    } else {\n      this.head_ = list.head_;\n      this.first_ = list.first_;\n      this.last_ = list.last_;\n      this.length_ = list.length_;\n    }\n    list.head_ = undefined;\n    list.first_ = undefined;\n    list.last_ = undefined;\n    list.length_ = 0;\n  }\n};\n\n/**\n * Returns the current length of the list.\n *\n * @return {number} Length.\n */\nLinkedList.prototype.getLength = function() {\n  return this.length_;\n};\nexport default LinkedList;\n","/**\n * @module ol/render/webgl/PolygonReplay\n */\nimport {getUid, inherits} from '../../index.js';\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {intersects} from '../../extent.js';\nimport {isEmpty} from '../../obj.js';\nimport {linearRingContainsXY} from '../../geom/flat/contains.js';\nimport {linearRingIsClockwise} from '../../geom/flat/orient.js';\nimport {translate} from '../../geom/flat/transform.js';\nimport {fragment, vertex} from '../webgl/polygonreplay/defaultshader.js';\nimport Locations from '../webgl/polygonreplay/defaultshader/Locations.js';\nimport WebGLLineStringReplay from '../webgl/LineStringReplay.js';\nimport WebGLReplay from '../webgl/Replay.js';\nimport {triangleIsCounterClockwise, EPSILON, DEFAULT_FILLSTYLE} from '../webgl.js';\nimport Stroke from '../../style/Stroke.js';\nimport LinkedList from '../../structs/LinkedList.js';\nimport RBush from '../../structs/RBush.js';\nimport {FLOAT} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n\n/**\n * @typedef {Object} PolygonVertex\n * @property {number} x\n * @property {number} y\n * @property {number} i\n * @property {boolean} [reflex]\n */\n\n/**\n * @typedef {Object} PolygonSegment\n * @property {module:ol/render/webgl/PolygonReplay~PolygonVertex} p0\n * @property {module:ol/render/webgl/PolygonReplay~PolygonVertex} p1\n */\n\n\n/**\n * @constructor\n * @extends {module:ol/render/webgl/Replay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Max extent.\n * @struct\n */\nconst WebGLPolygonReplay = function(tolerance, maxExtent) {\n  WebGLReplay.call(this, tolerance, maxExtent);\n\n  this.lineStringReplay = new WebGLLineStringReplay(\n    tolerance, maxExtent);\n\n  /**\n   * @private\n   * @type {module:ol/render/webgl/polygonreplay/defaultshader/Locations}\n   */\n  this.defaultLocations_ = null;\n\n  /**\n   * @private\n   * @type {Array.<Array.<number>>}\n   */\n  this.styles_ = [];\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.styleIndices_ = [];\n\n  /**\n   * @private\n   * @type {{fillColor: (Array.<number>|null),\n   *         changed: boolean}|null}\n   */\n  this.state_ = {\n    fillColor: null,\n    changed: false\n  };\n\n};\n\ninherits(WebGLPolygonReplay, WebGLReplay);\n\n\n/**\n * Draw one polygon.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} holeFlatCoordinates Hole flat coordinates.\n * @param {number} stride Stride.\n * @private\n */\nWebGLPolygonReplay.prototype.drawCoordinates_ = function(\n  flatCoordinates, holeFlatCoordinates, stride) {\n  // Triangulate the polygon\n  const outerRing = new LinkedList();\n  const rtree = new RBush();\n  // Initialize the outer ring\n  this.processFlatCoordinates_(flatCoordinates, stride, outerRing, rtree, true);\n  const maxCoords = this.getMaxCoords_(outerRing);\n\n  // Eliminate holes, if there are any\n  if (holeFlatCoordinates.length) {\n    let i, ii;\n    const holeLists = [];\n    for (i = 0, ii = holeFlatCoordinates.length; i < ii; ++i) {\n      const holeList = {\n        list: new LinkedList(),\n        maxCoords: undefined,\n        rtree: new RBush()\n      };\n      holeLists.push(holeList);\n      this.processFlatCoordinates_(holeFlatCoordinates[i],\n        stride, holeList.list, holeList.rtree, false);\n      this.classifyPoints_(holeList.list, holeList.rtree, true);\n      holeList.maxCoords = this.getMaxCoords_(holeList.list);\n    }\n    holeLists.sort(function(a, b) {\n      return b.maxCoords[0] === a.maxCoords[0] ?\n        a.maxCoords[1] - b.maxCoords[1] : b.maxCoords[0] - a.maxCoords[0];\n    });\n    for (i = 0; i < holeLists.length; ++i) {\n      const currList = holeLists[i].list;\n      const start = currList.firstItem();\n      let currItem = start;\n      let intersection;\n      do {\n        //TODO: Triangulate holes when they intersect the outer ring.\n        if (this.getIntersections_(currItem, rtree).length) {\n          intersection = true;\n          break;\n        }\n        currItem = currList.nextItem();\n      } while (start !== currItem);\n      if (!intersection) {\n        if (this.bridgeHole_(currList, holeLists[i].maxCoords[0], outerRing, maxCoords[0], rtree)) {\n          rtree.concat(holeLists[i].rtree);\n          this.classifyPoints_(outerRing, rtree, false);\n        }\n      }\n    }\n  } else {\n    this.classifyPoints_(outerRing, rtree, false);\n  }\n  this.triangulate_(outerRing, rtree);\n};\n\n\n/**\n * Inserts flat coordinates in a linked list and adds them to the vertex buffer.\n * @private\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} stride Stride.\n * @param {module:ol/structs/LinkedList} list Linked list.\n * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n * @param {boolean} clockwise Coordinate order should be clockwise.\n */\nWebGLPolygonReplay.prototype.processFlatCoordinates_ = function(\n  flatCoordinates, stride, list, rtree, clockwise) {\n  const isClockwise = linearRingIsClockwise(flatCoordinates,\n    0, flatCoordinates.length, stride);\n  let i, ii;\n  let n = this.vertices.length / 2;\n  /** @type {module:ol/render/webgl/PolygonReplay~PolygonVertex} */\n  let start;\n  /** @type {module:ol/render/webgl/PolygonReplay~PolygonVertex} */\n  let p0;\n  /** @type {module:ol/render/webgl/PolygonReplay~PolygonVertex} */\n  let p1;\n  const extents = [];\n  const segments = [];\n  if (clockwise === isClockwise) {\n    start = this.createPoint_(flatCoordinates[0], flatCoordinates[1], n++);\n    p0 = start;\n    for (i = stride, ii = flatCoordinates.length; i < ii; i += stride) {\n      p1 = this.createPoint_(flatCoordinates[i], flatCoordinates[i + 1], n++);\n      segments.push(this.insertItem_(p0, p1, list));\n      extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n        Math.max(p0.y, p1.y)]);\n      p0 = p1;\n    }\n    segments.push(this.insertItem_(p1, start, list));\n    extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n      Math.max(p0.y, p1.y)]);\n  } else {\n    const end = flatCoordinates.length - stride;\n    start = this.createPoint_(flatCoordinates[end], flatCoordinates[end + 1], n++);\n    p0 = start;\n    for (i = end - stride, ii = 0; i >= ii; i -= stride) {\n      p1 = this.createPoint_(flatCoordinates[i], flatCoordinates[i + 1], n++);\n      segments.push(this.insertItem_(p0, p1, list));\n      extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n        Math.max(p0.y, p1.y)]);\n      p0 = p1;\n    }\n    segments.push(this.insertItem_(p1, start, list));\n    extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n      Math.max(p0.y, p1.y)]);\n  }\n  rtree.load(extents, segments);\n};\n\n\n/**\n * Returns the rightmost coordinates of a polygon on the X axis.\n * @private\n * @param {module:ol/structs/LinkedList} list Polygons ring.\n * @return {Array.<number>} Max X coordinates.\n */\nWebGLPolygonReplay.prototype.getMaxCoords_ = function(list) {\n  const start = list.firstItem();\n  let seg = start;\n  let maxCoords = [seg.p0.x, seg.p0.y];\n\n  do {\n    seg = list.nextItem();\n    if (seg.p0.x > maxCoords[0]) {\n      maxCoords = [seg.p0.x, seg.p0.y];\n    }\n  } while (seg !== start);\n\n  return maxCoords;\n};\n\n\n/**\n * Classifies the points of a polygon list as convex, reflex. Removes collinear vertices.\n * @private\n * @param {module:ol/structs/LinkedList} list Polygon ring.\n * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n * @param {boolean} ccw The orientation of the polygon is counter-clockwise.\n * @return {boolean} There were reclassified points.\n */\nWebGLPolygonReplay.prototype.classifyPoints_ = function(list, rtree, ccw) {\n  let start = list.firstItem();\n  let s0 = start;\n  let s1 = list.nextItem();\n  let pointsReclassified = false;\n  do {\n    const reflex = ccw ? triangleIsCounterClockwise(s1.p1.x,\n      s1.p1.y, s0.p1.x, s0.p1.y, s0.p0.x, s0.p0.y) :\n      triangleIsCounterClockwise(s0.p0.x, s0.p0.y, s0.p1.x,\n        s0.p1.y, s1.p1.x, s1.p1.y);\n    if (reflex === undefined) {\n      this.removeItem_(s0, s1, list, rtree);\n      pointsReclassified = true;\n      if (s1 === start) {\n        start = list.getNextItem();\n      }\n      s1 = s0;\n      list.prevItem();\n    } else if (s0.p1.reflex !== reflex) {\n      s0.p1.reflex = reflex;\n      pointsReclassified = true;\n    }\n    s0 = s1;\n    s1 = list.nextItem();\n  } while (s0 !== start);\n  return pointsReclassified;\n};\n\n\n/**\n * @private\n * @param {module:ol/structs/LinkedList} hole Linked list of the hole.\n * @param {number} holeMaxX Maximum X value of the hole.\n * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n * @param {number} listMaxX Maximum X value of the polygon.\n * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n * @return {boolean} Bridging was successful.\n */\nWebGLPolygonReplay.prototype.bridgeHole_ = function(hole, holeMaxX,\n  list, listMaxX, rtree) {\n  let seg = hole.firstItem();\n  while (seg.p1.x !== holeMaxX) {\n    seg = hole.nextItem();\n  }\n\n  const p1 = seg.p1;\n  /** @type {module:ol/render/webgl/PolygonReplay~PolygonVertex} */\n  const p2 = {x: listMaxX, y: p1.y, i: -1};\n  let minDist = Infinity;\n  let i, ii, bestPoint;\n  /** @type {module:ol/render/webgl/PolygonReplay~PolygonVertex} */\n  let p5;\n\n  const intersectingSegments = this.getIntersections_({p0: p1, p1: p2}, rtree, true);\n  for (i = 0, ii = intersectingSegments.length; i < ii; ++i) {\n    const currSeg = intersectingSegments[i];\n    const intersection = this.calculateIntersection_(p1, p2, currSeg.p0,\n      currSeg.p1, true);\n    const dist = Math.abs(p1.x - intersection[0]);\n    if (dist < minDist && triangleIsCounterClockwise(p1.x, p1.y,\n      currSeg.p0.x, currSeg.p0.y, currSeg.p1.x, currSeg.p1.y) !== undefined) {\n      minDist = dist;\n      p5 = {x: intersection[0], y: intersection[1], i: -1};\n      seg = currSeg;\n    }\n  }\n  if (minDist === Infinity) {\n    return false;\n  }\n  bestPoint = seg.p1;\n\n  if (minDist > 0) {\n    const pointsInTriangle = this.getPointsInTriangle_(p1, p5, seg.p1, rtree);\n    if (pointsInTriangle.length) {\n      let theta = Infinity;\n      for (i = 0, ii = pointsInTriangle.length; i < ii; ++i) {\n        const currPoint = pointsInTriangle[i];\n        const currTheta = Math.atan2(p1.y - currPoint.y, p2.x - currPoint.x);\n        if (currTheta < theta || (currTheta === theta && currPoint.x < bestPoint.x)) {\n          theta = currTheta;\n          bestPoint = currPoint;\n        }\n      }\n    }\n  }\n\n  seg = list.firstItem();\n  while (seg.p1.x !== bestPoint.x || seg.p1.y !== bestPoint.y) {\n    seg = list.nextItem();\n  }\n\n  //We clone the bridge points as they can have different convexity.\n  const p0Bridge = {x: p1.x, y: p1.y, i: p1.i, reflex: undefined};\n  const p1Bridge = {x: seg.p1.x, y: seg.p1.y, i: seg.p1.i, reflex: undefined};\n\n  hole.getNextItem().p0 = p0Bridge;\n  this.insertItem_(p1, seg.p1, hole, rtree);\n  this.insertItem_(p1Bridge, p0Bridge, hole, rtree);\n  seg.p1 = p1Bridge;\n  hole.setFirstItem();\n  list.concat(hole);\n\n  return true;\n};\n\n\n/**\n * @private\n * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n */\nWebGLPolygonReplay.prototype.triangulate_ = function(list, rtree) {\n  let ccw = false;\n  let simple = this.isSimple_(list, rtree);\n\n  // Start clipping ears\n  while (list.getLength() > 3) {\n    if (simple) {\n      if (!this.clipEars_(list, rtree, simple, ccw)) {\n        if (!this.classifyPoints_(list, rtree, ccw)) {\n          // Due to the behavior of OL's PIP algorithm, the ear clipping cannot\n          // introduce touching segments. However, the original data may have some.\n          if (!this.resolveSelfIntersections_(list, rtree, true)) {\n            break;\n          }\n        }\n      }\n    } else {\n      if (!this.clipEars_(list, rtree, simple, ccw)) {\n        // We ran out of ears, try to reclassify.\n        if (!this.classifyPoints_(list, rtree, ccw)) {\n          // We have a bad polygon, try to resolve local self-intersections.\n          if (!this.resolveSelfIntersections_(list, rtree)) {\n            simple = this.isSimple_(list, rtree);\n            if (!simple) {\n              // We have a really bad polygon, try more time consuming methods.\n              this.splitPolygon_(list, rtree);\n              break;\n            } else {\n              ccw = !this.isClockwise_(list);\n              this.classifyPoints_(list, rtree, ccw);\n            }\n          }\n        }\n      }\n    }\n  }\n  if (list.getLength() === 3) {\n    let numIndices = this.indices.length;\n    this.indices[numIndices++] = list.getPrevItem().p0.i;\n    this.indices[numIndices++] = list.getCurrItem().p0.i;\n    this.indices[numIndices++] = list.getNextItem().p0.i;\n  }\n};\n\n\n/**\n * @private\n * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n * @param {boolean} simple The polygon is simple.\n * @param {boolean} ccw Orientation of the polygon is counter-clockwise.\n * @return {boolean} There were processed ears.\n */\nWebGLPolygonReplay.prototype.clipEars_ = function(list, rtree, simple, ccw) {\n  let numIndices = this.indices.length;\n  let start = list.firstItem();\n  let s0 = list.getPrevItem();\n  let s1 = start;\n  let s2 = list.nextItem();\n  let s3 = list.getNextItem();\n  let p0, p1, p2;\n  let processedEars = false;\n  do {\n    p0 = s1.p0;\n    p1 = s1.p1;\n    p2 = s2.p1;\n    if (p1.reflex === false) {\n      // We might have a valid ear\n      let variableCriterion;\n      if (simple) {\n        variableCriterion = this.getPointsInTriangle_(p0, p1, p2, rtree, true).length === 0;\n      } else {\n        variableCriterion = ccw ? this.diagonalIsInside_(s3.p1, p2, p1, p0,\n          s0.p0) : this.diagonalIsInside_(s0.p0, p0, p1, p2, s3.p1);\n      }\n      if ((simple || this.getIntersections_({p0: p0, p1: p2}, rtree).length === 0) &&\n          variableCriterion) {\n        //The diagonal is completely inside the polygon\n        if (simple || p0.reflex === false || p2.reflex === false ||\n            linearRingIsClockwise([s0.p0.x, s0.p0.y, p0.x,\n              p0.y, p1.x, p1.y, p2.x, p2.y, s3.p1.x, s3.p1.y], 0, 10, 2) === !ccw) {\n          //The diagonal is persumably valid, we have an ear\n          this.indices[numIndices++] = p0.i;\n          this.indices[numIndices++] = p1.i;\n          this.indices[numIndices++] = p2.i;\n          this.removeItem_(s1, s2, list, rtree);\n          if (s2 === start) {\n            start = s3;\n          }\n          processedEars = true;\n        }\n      }\n    }\n    // Else we have a reflex point.\n    s0 = list.getPrevItem();\n    s1 = list.getCurrItem();\n    s2 = list.nextItem();\n    s3 = list.getNextItem();\n  } while (s1 !== start && list.getLength() > 3);\n\n  return processedEars;\n};\n\n\n/**\n * @private\n * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n * @param {boolean=} opt_touch Resolve touching segments.\n * @return {boolean} There were resolved intersections.\n*/\nWebGLPolygonReplay.prototype.resolveSelfIntersections_ = function(\n  list, rtree, opt_touch) {\n  const start = list.firstItem();\n  list.nextItem();\n  let s0 = start;\n  let s1 = list.nextItem();\n  let resolvedIntersections = false;\n\n  do {\n    const intersection = this.calculateIntersection_(s0.p0, s0.p1, s1.p0, s1.p1,\n      opt_touch);\n    if (intersection) {\n      let breakCond = false;\n      const numVertices = this.vertices.length;\n      let numIndices = this.indices.length;\n      const n = numVertices / 2;\n      const seg = list.prevItem();\n      list.removeItem();\n      rtree.remove(seg);\n      breakCond = (seg === start);\n      let p;\n      if (opt_touch) {\n        if (intersection[0] === s0.p0.x && intersection[1] === s0.p0.y) {\n          list.prevItem();\n          p = s0.p0;\n          s1.p0 = p;\n          rtree.remove(s0);\n          breakCond = breakCond || (s0 === start);\n        } else {\n          p = s1.p1;\n          s0.p1 = p;\n          rtree.remove(s1);\n          breakCond = breakCond || (s1 === start);\n        }\n        list.removeItem();\n      } else {\n        p = this.createPoint_(intersection[0], intersection[1], n);\n        s0.p1 = p;\n        s1.p0 = p;\n        rtree.update([Math.min(s0.p0.x, s0.p1.x), Math.min(s0.p0.y, s0.p1.y),\n          Math.max(s0.p0.x, s0.p1.x), Math.max(s0.p0.y, s0.p1.y)], s0);\n        rtree.update([Math.min(s1.p0.x, s1.p1.x), Math.min(s1.p0.y, s1.p1.y),\n          Math.max(s1.p0.x, s1.p1.x), Math.max(s1.p0.y, s1.p1.y)], s1);\n      }\n\n      this.indices[numIndices++] = seg.p0.i;\n      this.indices[numIndices++] = seg.p1.i;\n      this.indices[numIndices++] = p.i;\n\n      resolvedIntersections = true;\n      if (breakCond) {\n        break;\n      }\n    }\n\n    s0 = list.getPrevItem();\n    s1 = list.nextItem();\n  } while (s0 !== start);\n  return resolvedIntersections;\n};\n\n\n/**\n * @private\n * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n * @return {boolean} The polygon is simple.\n */\nWebGLPolygonReplay.prototype.isSimple_ = function(list, rtree) {\n  const start = list.firstItem();\n  let seg = start;\n  do {\n    if (this.getIntersections_(seg, rtree).length) {\n      return false;\n    }\n    seg = list.nextItem();\n  } while (seg !== start);\n  return true;\n};\n\n\n/**\n * @private\n * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n * @return {boolean} Orientation is clockwise.\n */\nWebGLPolygonReplay.prototype.isClockwise_ = function(list) {\n  const length = list.getLength() * 2;\n  const flatCoordinates = new Array(length);\n  const start = list.firstItem();\n  let seg = start;\n  let i = 0;\n  do {\n    flatCoordinates[i++] = seg.p0.x;\n    flatCoordinates[i++] = seg.p0.y;\n    seg = list.nextItem();\n  } while (seg !== start);\n  return linearRingIsClockwise(flatCoordinates, 0, length, 2);\n};\n\n\n/**\n * @private\n * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n */\nWebGLPolygonReplay.prototype.splitPolygon_ = function(list, rtree) {\n  const start = list.firstItem();\n  let s0 = start;\n  do {\n    const intersections = this.getIntersections_(s0, rtree);\n    if (intersections.length) {\n      const s1 = intersections[0];\n      const n = this.vertices.length / 2;\n      const intersection = this.calculateIntersection_(s0.p0,\n        s0.p1, s1.p0, s1.p1);\n      const p = this.createPoint_(intersection[0], intersection[1], n);\n      const newPolygon = new LinkedList();\n      const newRtree = new RBush();\n      this.insertItem_(p, s0.p1, newPolygon, newRtree);\n      s0.p1 = p;\n      rtree.update([Math.min(s0.p0.x, p.x), Math.min(s0.p0.y, p.y),\n        Math.max(s0.p0.x, p.x), Math.max(s0.p0.y, p.y)], s0);\n      let currItem = list.nextItem();\n      while (currItem !== s1) {\n        this.insertItem_(currItem.p0, currItem.p1, newPolygon, newRtree);\n        rtree.remove(currItem);\n        list.removeItem();\n        currItem = list.getCurrItem();\n      }\n      this.insertItem_(s1.p0, p, newPolygon, newRtree);\n      s1.p0 = p;\n      rtree.update([Math.min(s1.p1.x, p.x), Math.min(s1.p1.y, p.y),\n        Math.max(s1.p1.x, p.x), Math.max(s1.p1.y, p.y)], s1);\n      this.classifyPoints_(list, rtree, false);\n      this.triangulate_(list, rtree);\n      this.classifyPoints_(newPolygon, newRtree, false);\n      this.triangulate_(newPolygon, newRtree);\n      break;\n    }\n    s0 = list.nextItem();\n  } while (s0 !== start);\n};\n\n\n/**\n * @private\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @param {number} i Index.\n * @return {module:ol/render/webgl/PolygonReplay~PolygonVertex} List item.\n */\nWebGLPolygonReplay.prototype.createPoint_ = function(x, y, i) {\n  let numVertices = this.vertices.length;\n  this.vertices[numVertices++] = x;\n  this.vertices[numVertices++] = y;\n  /** @type {module:ol/render/webgl/PolygonReplay~PolygonVertex} */\n  const p = {\n    x: x,\n    y: y,\n    i: i,\n    reflex: undefined\n  };\n  return p;\n};\n\n\n/**\n * @private\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p0 First point of segment.\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p1 Second point of segment.\n * @param {module:ol/structs/LinkedList} list Polygon ring.\n * @param {module:ol/structs/RBush=} opt_rtree Insert the segment into the R-Tree.\n * @return {module:ol/render/webgl/PolygonReplay~PolygonSegment} segment.\n */\nWebGLPolygonReplay.prototype.insertItem_ = function(p0, p1, list, opt_rtree) {\n  const seg = {\n    p0: p0,\n    p1: p1\n  };\n  list.insertItem(seg);\n  if (opt_rtree) {\n    opt_rtree.insert([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y),\n      Math.max(p0.x, p1.x), Math.max(p0.y, p1.y)], seg);\n  }\n  return seg;\n};\n\n\n/**\n  * @private\n  * @param {module:ol/render/webgl/PolygonReplay~PolygonSegment} s0 Segment before the remove candidate.\n  * @param {module:ol/render/webgl/PolygonReplay~PolygonSegment} s1 Remove candidate segment.\n  * @param {module:ol/structs/LinkedList} list Polygon ring.\n  * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n  */\nWebGLPolygonReplay.prototype.removeItem_ = function(s0, s1, list, rtree) {\n  if (list.getCurrItem() === s1) {\n    list.removeItem();\n    s0.p1 = s1.p1;\n    rtree.remove(s1);\n    rtree.update([Math.min(s0.p0.x, s0.p1.x), Math.min(s0.p0.y, s0.p1.y),\n      Math.max(s0.p0.x, s0.p1.x), Math.max(s0.p0.y, s0.p1.y)], s0);\n  }\n};\n\n\n/**\n * @private\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p0 First point.\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p1 Second point.\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p2 Third point.\n * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n * @param {boolean=} opt_reflex Only include reflex points.\n * @return {Array.<module:ol/render/webgl/PolygonReplay~PolygonVertex>} Points in the triangle.\n */\nWebGLPolygonReplay.prototype.getPointsInTriangle_ = function(p0, p1, p2, rtree, opt_reflex) {\n  const result = [];\n  const segmentsInExtent = rtree.getInExtent([Math.min(p0.x, p1.x, p2.x),\n    Math.min(p0.y, p1.y, p2.y), Math.max(p0.x, p1.x, p2.x), Math.max(p0.y,\n      p1.y, p2.y)]);\n  for (let i = 0, ii = segmentsInExtent.length; i < ii; ++i) {\n    for (const j in segmentsInExtent[i]) {\n      const p = segmentsInExtent[i][j];\n      if (typeof p === 'object' && (!opt_reflex || p.reflex)) {\n        if ((p.x !== p0.x || p.y !== p0.y) && (p.x !== p1.x || p.y !== p1.y) &&\n            (p.x !== p2.x || p.y !== p2.y) && result.indexOf(p) === -1 &&\n            linearRingContainsXY([p0.x, p0.y, p1.x, p1.y, p2.x, p2.y], 0, 6, 2, p.x, p.y)) {\n          result.push(p);\n        }\n      }\n    }\n  }\n  return result;\n};\n\n\n/**\n * @private\n * @param {module:ol/render/webgl/PolygonReplay~PolygonSegment} segment Segment.\n * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n * @param {boolean=} opt_touch Touching segments should be considered an intersection.\n * @return {Array.<module:ol/render/webgl/PolygonReplay~PolygonSegment>} Intersecting segments.\n */\nWebGLPolygonReplay.prototype.getIntersections_ = function(segment, rtree, opt_touch) {\n  const p0 = segment.p0;\n  const p1 = segment.p1;\n  const segmentsInExtent = rtree.getInExtent([Math.min(p0.x, p1.x),\n    Math.min(p0.y, p1.y), Math.max(p0.x, p1.x), Math.max(p0.y, p1.y)]);\n  const result = [];\n  for (let i = 0, ii = segmentsInExtent.length; i < ii; ++i) {\n    const currSeg = segmentsInExtent[i];\n    if (segment !== currSeg && (opt_touch || currSeg.p0 !== p1 || currSeg.p1 !== p0) &&\n        this.calculateIntersection_(p0, p1, currSeg.p0, currSeg.p1, opt_touch)) {\n      result.push(currSeg);\n    }\n  }\n  return result;\n};\n\n\n/**\n * Line intersection algorithm by Paul Bourke.\n * @see http://paulbourke.net/geometry/pointlineplane/\n *\n * @private\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p0 First point.\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p1 Second point.\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p2 Third point.\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p3 Fourth point.\n * @param {boolean=} opt_touch Touching segments should be considered an intersection.\n * @return {Array.<number>|undefined} Intersection coordinates.\n */\nWebGLPolygonReplay.prototype.calculateIntersection_ = function(p0, p1, p2, p3, opt_touch) {\n  const denom = (p3.y - p2.y) * (p1.x - p0.x) - (p3.x - p2.x) * (p1.y - p0.y);\n  if (denom !== 0) {\n    const ua = ((p3.x - p2.x) * (p0.y - p2.y) - (p3.y - p2.y) * (p0.x - p2.x)) / denom;\n    const ub = ((p1.x - p0.x) * (p0.y - p2.y) - (p1.y - p0.y) * (p0.x - p2.x)) / denom;\n    if ((!opt_touch && ua > EPSILON && ua < 1 - EPSILON &&\n        ub > EPSILON && ub < 1 - EPSILON) || (opt_touch &&\n        ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1)) {\n      return [p0.x + ua * (p1.x - p0.x), p0.y + ua * (p1.y - p0.y)];\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @private\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p0 Point before the start of the diagonal.\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p1 Start point of the diagonal.\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p2 Ear candidate.\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p3 End point of the diagonal.\n * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p4 Point after the end of the diagonal.\n * @return {boolean} Diagonal is inside the polygon.\n */\nWebGLPolygonReplay.prototype.diagonalIsInside_ = function(p0, p1, p2, p3, p4) {\n  if (p1.reflex === undefined || p3.reflex === undefined) {\n    return false;\n  }\n  const p1IsLeftOf = (p2.x - p3.x) * (p1.y - p3.y) > (p2.y - p3.y) * (p1.x - p3.x);\n  const p1IsRightOf = (p4.x - p3.x) * (p1.y - p3.y) < (p4.y - p3.y) * (p1.x - p3.x);\n  const p3IsLeftOf = (p0.x - p1.x) * (p3.y - p1.y) > (p0.y - p1.y) * (p3.x - p1.x);\n  const p3IsRightOf = (p2.x - p1.x) * (p3.y - p1.y) < (p2.y - p1.y) * (p3.x - p1.x);\n  const p1InCone = p3.reflex ? p1IsRightOf || p1IsLeftOf : p1IsRightOf && p1IsLeftOf;\n  const p3InCone = p1.reflex ? p3IsRightOf || p3IsLeftOf : p3IsRightOf && p3IsLeftOf;\n  return p1InCone && p3InCone;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLPolygonReplay.prototype.drawMultiPolygon = function(multiPolygonGeometry, feature) {\n  const endss = multiPolygonGeometry.getEndss();\n  const stride = multiPolygonGeometry.getStride();\n  const currIndex = this.indices.length;\n  const currLineIndex = this.lineStringReplay.getCurrentIndex();\n  const flatCoordinates = multiPolygonGeometry.getFlatCoordinates();\n  let i, ii, j, jj;\n  let start = 0;\n  for (i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (ends.length > 0) {\n      const outerRing = translate(flatCoordinates, start, ends[0],\n        stride, -this.origin[0], -this.origin[1]);\n      if (outerRing.length) {\n        const holes = [];\n        let holeFlatCoords;\n        for (j = 1, jj = ends.length; j < jj; ++j) {\n          if (ends[j] !== ends[j - 1]) {\n            holeFlatCoords = translate(flatCoordinates, ends[j - 1],\n              ends[j], stride, -this.origin[0], -this.origin[1]);\n            holes.push(holeFlatCoords);\n          }\n        }\n        this.lineStringReplay.drawPolygonCoordinates(outerRing, holes, stride);\n        this.drawCoordinates_(outerRing, holes, stride);\n      }\n    }\n    start = ends[ends.length - 1];\n  }\n  if (this.indices.length > currIndex) {\n    this.startIndices.push(currIndex);\n    this.startIndicesFeature.push(feature);\n    if (this.state_.changed) {\n      this.styleIndices_.push(currIndex);\n      this.state_.changed = false;\n    }\n  }\n  if (this.lineStringReplay.getCurrentIndex() > currLineIndex) {\n    this.lineStringReplay.setPolygonStyle(feature, currLineIndex);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLPolygonReplay.prototype.drawPolygon = function(polygonGeometry, feature) {\n  const ends = polygonGeometry.getEnds();\n  const stride = polygonGeometry.getStride();\n  if (ends.length > 0) {\n    const flatCoordinates = polygonGeometry.getFlatCoordinates().map(Number);\n    const outerRing = translate(flatCoordinates, 0, ends[0],\n      stride, -this.origin[0], -this.origin[1]);\n    if (outerRing.length) {\n      const holes = [];\n      let i, ii, holeFlatCoords;\n      for (i = 1, ii = ends.length; i < ii; ++i) {\n        if (ends[i] !== ends[i - 1]) {\n          holeFlatCoords = translate(flatCoordinates, ends[i - 1],\n            ends[i], stride, -this.origin[0], -this.origin[1]);\n          holes.push(holeFlatCoords);\n        }\n      }\n\n      this.startIndices.push(this.indices.length);\n      this.startIndicesFeature.push(feature);\n      if (this.state_.changed) {\n        this.styleIndices_.push(this.indices.length);\n        this.state_.changed = false;\n      }\n      this.lineStringReplay.setPolygonStyle(feature);\n\n      this.lineStringReplay.drawPolygonCoordinates(outerRing, holes, stride);\n      this.drawCoordinates_(outerRing, holes, stride);\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n **/\nWebGLPolygonReplay.prototype.finish = function(context) {\n  // create, bind, and populate the vertices buffer\n  this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n  // create, bind, and populate the indices buffer\n  this.indicesBuffer = new WebGLBuffer(this.indices);\n\n  this.startIndices.push(this.indices.length);\n\n  this.lineStringReplay.finish(context);\n\n  //Clean up, if there is nothing to draw\n  if (this.styleIndices_.length === 0 && this.styles_.length > 0) {\n    this.styles_ = [];\n  }\n\n  this.vertices = null;\n  this.indices = null;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLPolygonReplay.prototype.getDeleteResourcesFunction = function(context) {\n  const verticesBuffer = this.verticesBuffer;\n  const indicesBuffer = this.indicesBuffer;\n  const lineDeleter = this.lineStringReplay.getDeleteResourcesFunction(context);\n  return function() {\n    context.deleteBuffer(verticesBuffer);\n    context.deleteBuffer(indicesBuffer);\n    lineDeleter();\n  };\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLPolygonReplay.prototype.setUpProgram = function(gl, context, size, pixelRatio) {\n  // get the program\n  const program = context.getProgram(fragment, vertex);\n\n  // get the locations\n  let locations;\n  if (!this.defaultLocations_) {\n    locations = new Locations(gl, program);\n    this.defaultLocations_ = locations;\n  } else {\n    locations = this.defaultLocations_;\n  }\n\n  context.useProgram(program);\n\n  // enable the vertex attrib arrays\n  gl.enableVertexAttribArray(locations.a_position);\n  gl.vertexAttribPointer(locations.a_position, 2, FLOAT,\n    false, 8, 0);\n\n  return locations;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLPolygonReplay.prototype.shutDownProgram = function(gl, locations) {\n  gl.disableVertexAttribArray(locations.a_position);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLPolygonReplay.prototype.drawReplay = function(gl, context, skippedFeaturesHash, hitDetection) {\n  //Save GL parameters.\n  const tmpDepthFunc = /** @type {number} */ (gl.getParameter(gl.DEPTH_FUNC));\n  const tmpDepthMask = /** @type {boolean} */ (gl.getParameter(gl.DEPTH_WRITEMASK));\n\n  if (!hitDetection) {\n    gl.enable(gl.DEPTH_TEST);\n    gl.depthMask(true);\n    gl.depthFunc(gl.NOTEQUAL);\n  }\n\n  if (!isEmpty(skippedFeaturesHash)) {\n    this.drawReplaySkipping_(gl, context, skippedFeaturesHash);\n  } else {\n    //Draw by style groups to minimize drawElements() calls.\n    let i, start, end, nextStyle;\n    end = this.startIndices[this.startIndices.length - 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      start = this.styleIndices_[i];\n      nextStyle = this.styles_[i];\n      this.setFillStyle_(gl, nextStyle);\n      this.drawElements(gl, context, start, end);\n      end = start;\n    }\n  }\n  if (!hitDetection) {\n    gl.disable(gl.DEPTH_TEST);\n    gl.clear(gl.DEPTH_BUFFER_BIT);\n    //Restore GL parameters.\n    gl.depthMask(tmpDepthMask);\n    gl.depthFunc(tmpDepthFunc);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLPolygonReplay.prototype.drawHitDetectionReplayOneByOne = function(gl, context, skippedFeaturesHash,\n  featureCallback, opt_hitExtent) {\n  let i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex;\n  featureIndex = this.startIndices.length - 2;\n  end = this.startIndices[featureIndex + 1];\n  for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n    nextStyle = this.styles_[i];\n    this.setFillStyle_(gl, nextStyle);\n    groupStart = this.styleIndices_[i];\n\n    while (featureIndex >= 0 &&\n        this.startIndices[featureIndex] >= groupStart) {\n      start = this.startIndices[featureIndex];\n      feature = this.startIndicesFeature[featureIndex];\n      featureUid = getUid(feature).toString();\n\n      if (skippedFeaturesHash[featureUid] === undefined &&\n          feature.getGeometry() &&\n          (opt_hitExtent === undefined || intersects(\n            /** @type {Array<number>} */ (opt_hitExtent),\n            feature.getGeometry().getExtent()))) {\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        this.drawElements(gl, context, start, end);\n\n        const result = featureCallback(feature);\n\n        if (result) {\n          return result;\n        }\n\n      }\n      featureIndex--;\n      end = start;\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @private\n * @param {WebGLRenderingContext} gl gl.\n * @param {module:ol/webgl/Context} context Context.\n * @param {Object} skippedFeaturesHash Ids of features to skip.\n */\nWebGLPolygonReplay.prototype.drawReplaySkipping_ = function(gl, context, skippedFeaturesHash) {\n  let i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex, featureStart;\n  featureIndex = this.startIndices.length - 2;\n  end = start = this.startIndices[featureIndex + 1];\n  for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n    nextStyle = this.styles_[i];\n    this.setFillStyle_(gl, nextStyle);\n    groupStart = this.styleIndices_[i];\n\n    while (featureIndex >= 0 &&\n        this.startIndices[featureIndex] >= groupStart) {\n      featureStart = this.startIndices[featureIndex];\n      feature = this.startIndicesFeature[featureIndex];\n      featureUid = getUid(feature).toString();\n\n      if (skippedFeaturesHash[featureUid]) {\n        if (start !== end) {\n          this.drawElements(gl, context, start, end);\n          gl.clear(gl.DEPTH_BUFFER_BIT);\n        }\n        end = featureStart;\n      }\n      featureIndex--;\n      start = featureStart;\n    }\n    if (start !== end) {\n      this.drawElements(gl, context, start, end);\n      gl.clear(gl.DEPTH_BUFFER_BIT);\n    }\n    start = end = groupStart;\n  }\n};\n\n\n/**\n * @private\n * @param {WebGLRenderingContext} gl gl.\n * @param {Array.<number>} color Color.\n */\nWebGLPolygonReplay.prototype.setFillStyle_ = function(gl, color) {\n  gl.uniform4fv(this.defaultLocations_.u_color, color);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLPolygonReplay.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {\n  let fillStyleColor = fillStyle ? fillStyle.getColor() : [0, 0, 0, 0];\n  if (!(fillStyleColor instanceof CanvasGradient) &&\n      !(fillStyleColor instanceof CanvasPattern)) {\n    fillStyleColor = asArray(fillStyleColor).map(function(c, i) {\n      return i != 3 ? c / 255 : c;\n    }) || DEFAULT_FILLSTYLE;\n  } else {\n    fillStyleColor = DEFAULT_FILLSTYLE;\n  }\n  if (!this.state_.fillColor || !equals(fillStyleColor, this.state_.fillColor)) {\n    this.state_.fillColor = fillStyleColor;\n    this.state_.changed = true;\n    this.styles_.push(fillStyleColor);\n  }\n  //Provide a null stroke style, if no strokeStyle is provided. Required for the draw interaction to work.\n  if (strokeStyle) {\n    this.lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n  } else {\n    const nullStrokeStyle = new Stroke({\n      color: [0, 0, 0, 0],\n      lineWidth: 0\n    });\n    this.lineStringReplay.setFillStrokeStyle(null, nullStrokeStyle);\n  }\n};\nexport default WebGLPolygonReplay;\n","/**\n * @module ol/render/webgl/TextReplay\n */\nimport {getUid, inherits} from '../../index.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport {DEFAULT_FILLSTYLE, DEFAULT_FONT, DEFAULT_LINECAP, DEFAULT_LINEDASH,\n  DEFAULT_LINEDASHOFFSET, DEFAULT_LINEJOIN, DEFAULT_LINEWIDTH, DEFAULT_MITERLIMIT,\n  DEFAULT_STROKESTYLE, DEFAULT_TEXTALIGN, DEFAULT_TEXTBASELINE} from '../webgl.js';\nimport WebGLTextureReplay from '../webgl/TextureReplay.js';\nimport AtlasManager from '../../style/AtlasManager.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n/**\n * @typedef {Object} GlyphAtlas\n * @property {module:ol/style/AtlasManager} atlas\n * @property {Object.<string, number>} width\n * @property {number} height\n */\n\n\n/**\n * @constructor\n * @extends {module:ol/render/webgl/TextureReplay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Max extent.\n * @struct\n */\nconst WebGLTextReplay = function(tolerance, maxExtent) {\n  WebGLTextureReplay.call(this, tolerance, maxExtent);\n\n  /**\n   * @private\n   * @type {Array.<HTMLCanvasElement>}\n   */\n  this.images_ = [];\n\n  /**\n   * @private\n   * @type {Array.<WebGLTexture>}\n   */\n  this.textures_ = [];\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.measureCanvas_ = createCanvasContext2D(0, 0).canvas;\n\n  /**\n   * @private\n   * @type {{strokeColor: (module:ol/colorlike~ColorLike|null),\n   *         lineCap: (string|undefined),\n   *         lineDash: Array.<number>,\n   *         lineDashOffset: (number|undefined),\n   *         lineJoin: (string|undefined),\n   *         lineWidth: number,\n   *         miterLimit: (number|undefined),\n   *         fillColor: (module:ol/colorlike~ColorLike|null),\n   *         font: (string|undefined),\n   *         scale: (number|undefined)}}\n   */\n  this.state_ = {\n    strokeColor: null,\n    lineCap: undefined,\n    lineDash: null,\n    lineDashOffset: undefined,\n    lineJoin: undefined,\n    lineWidth: 0,\n    miterLimit: undefined,\n    fillColor: null,\n    font: undefined,\n    scale: undefined\n  };\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.text_ = '';\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.textAlign_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.textBaseline_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.offsetX_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.offsetY_ = undefined;\n\n  /**\n   * @private\n   * @type {Object.<string, module:ol/render/webgl/TextReplay~GlyphAtlas>}\n   */\n  this.atlases_ = {};\n\n  /**\n   * @private\n   * @type {module:ol/render/webgl/TextReplay~GlyphAtlas|undefined}\n   */\n  this.currAtlas_ = undefined;\n\n  this.scale = 1;\n\n  this.opacity = 1;\n\n};\n\ninherits(WebGLTextReplay, WebGLTextureReplay);\n\n\n/**\n * @inheritDoc\n */\nWebGLTextReplay.prototype.drawText = function(geometry, feature) {\n  if (this.text_) {\n    let flatCoordinates = null;\n    const offset = 0;\n    let end = 2;\n    let stride = 2;\n    switch (geometry.getType()) {\n      case GeometryType.POINT:\n      case GeometryType.MULTI_POINT:\n        flatCoordinates = geometry.getFlatCoordinates();\n        end = flatCoordinates.length;\n        stride = geometry.getStride();\n        break;\n      case GeometryType.CIRCLE:\n        flatCoordinates = /** @type {module:ol/geom/Circle} */ (geometry).getCenter();\n        break;\n      case GeometryType.LINE_STRING:\n        flatCoordinates = /** @type {module:ol/geom/LineString} */ (geometry).getFlatMidpoint();\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        flatCoordinates = /** @type {module:ol/geom/MultiLineString} */ (geometry).getFlatMidpoints();\n        end = flatCoordinates.length;\n        break;\n      case GeometryType.POLYGON:\n        flatCoordinates = /** @type {module:ol/geom/Polygon} */ (geometry).getFlatInteriorPoint();\n        break;\n      case GeometryType.MULTI_POLYGON:\n        flatCoordinates = /** @type {module:ol/geom/MultiPolygon} */ (geometry).getFlatInteriorPoints();\n        end = flatCoordinates.length;\n        break;\n      default:\n    }\n    this.startIndices.push(this.indices.length);\n    this.startIndicesFeature.push(feature);\n\n    const glyphAtlas = this.currAtlas_;\n    const lines = this.text_.split('\\n');\n    const textSize = this.getTextSize_(lines);\n    let i, ii, j, jj, currX, currY, charArr, charInfo;\n    const anchorX = Math.round(textSize[0] * this.textAlign_ - this.offsetX_);\n    const anchorY = Math.round(textSize[1] * this.textBaseline_ - this.offsetY_);\n    const lineWidth = (this.state_.lineWidth / 2) * this.state_.scale;\n\n    for (i = 0, ii = lines.length; i < ii; ++i) {\n      currX = 0;\n      currY = glyphAtlas.height * i;\n      charArr = lines[i].split('');\n\n      for (j = 0, jj = charArr.length; j < jj; ++j) {\n        charInfo = glyphAtlas.atlas.getInfo(charArr[j]);\n\n        if (charInfo) {\n          const image = charInfo.image;\n\n          this.anchorX = anchorX - currX;\n          this.anchorY = anchorY - currY;\n          this.originX = j === 0 ? charInfo.offsetX - lineWidth : charInfo.offsetX;\n          this.originY = charInfo.offsetY;\n          this.height = glyphAtlas.height;\n          this.width = j === 0 || j === charArr.length - 1 ?\n            glyphAtlas.width[charArr[j]] + lineWidth : glyphAtlas.width[charArr[j]];\n          this.imageHeight = image.height;\n          this.imageWidth = image.width;\n\n          if (this.images_.length === 0) {\n            this.images_.push(image);\n          } else {\n            const currentImage = this.images_[this.images_.length - 1];\n            if (getUid(currentImage) != getUid(image)) {\n              this.groupIndices.push(this.indices.length);\n              this.images_.push(image);\n            }\n          }\n\n          this.drawText_(flatCoordinates, offset, end, stride);\n        }\n        currX += this.width;\n      }\n    }\n  }\n};\n\n\n/**\n * @private\n * @param {Array.<string>} lines Label to draw split to lines.\n * @return {Array.<number>} Size of the label in pixels.\n */\nWebGLTextReplay.prototype.getTextSize_ = function(lines) {\n  const self = this;\n  const glyphAtlas = this.currAtlas_;\n  const textHeight = lines.length * glyphAtlas.height;\n  //Split every line to an array of chars, sum up their width, and select the longest.\n  const textWidth = lines.map(function(str) {\n    let sum = 0;\n    for (let i = 0, ii = str.length; i < ii; ++i) {\n      const curr = str[i];\n      if (!glyphAtlas.width[curr]) {\n        self.addCharToAtlas_(curr);\n      }\n      sum += glyphAtlas.width[curr] ? glyphAtlas.width[curr] : 0;\n    }\n    return sum;\n  }).reduce(function(max, curr) {\n    return Math.max(max, curr);\n  });\n\n  return [textWidth, textHeight];\n};\n\n\n/**\n * @private\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nWebGLTextReplay.prototype.drawText_ = function(flatCoordinates, offset, end, stride) {\n  for (let i = offset, ii = end; i < ii; i += stride) {\n    this.drawCoordinates(flatCoordinates, offset, end, stride);\n  }\n};\n\n\n/**\n * @private\n * @param {string} char Character.\n */\nWebGLTextReplay.prototype.addCharToAtlas_ = function(char) {\n  if (char.length === 1) {\n    const glyphAtlas = this.currAtlas_;\n    const state = this.state_;\n    const mCtx = this.measureCanvas_.getContext('2d');\n    mCtx.font = state.font;\n    const width = Math.ceil(mCtx.measureText(char).width * state.scale);\n\n    const info = glyphAtlas.atlas.add(char, width, glyphAtlas.height,\n      function(ctx, x, y) {\n        //Parameterize the canvas\n        ctx.font = /** @type {string} */ (state.font);\n        ctx.fillStyle = state.fillColor;\n        ctx.strokeStyle = state.strokeColor;\n        ctx.lineWidth = state.lineWidth;\n        ctx.lineCap = /*** @type {string} */ (state.lineCap);\n        ctx.lineJoin = /** @type {string} */ (state.lineJoin);\n        ctx.miterLimit = /** @type {number} */ (state.miterLimit);\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'top';\n        if (CANVAS_LINE_DASH && state.lineDash) {\n          //FIXME: use pixelRatio\n          ctx.setLineDash(state.lineDash);\n          ctx.lineDashOffset = /** @type {number} */ (state.lineDashOffset);\n        }\n        if (state.scale !== 1) {\n          //FIXME: use pixelRatio\n          ctx.setTransform(/** @type {number} */ (state.scale), 0, 0,\n            /** @type {number} */ (state.scale), 0, 0);\n        }\n\n        //Draw the character on the canvas\n        if (state.strokeColor) {\n          ctx.strokeText(char, x, y);\n        }\n        if (state.fillColor) {\n          ctx.fillText(char, x, y);\n        }\n      });\n\n    if (info) {\n      glyphAtlas.width[char] = width;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTextReplay.prototype.finish = function(context) {\n  const gl = context.getGL();\n\n  this.groupIndices.push(this.indices.length);\n  this.hitDetectionGroupIndices = this.groupIndices;\n\n  // create, bind, and populate the vertices buffer\n  this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n  // create, bind, and populate the indices buffer\n  this.indicesBuffer = new WebGLBuffer(this.indices);\n\n  // create textures\n  /** @type {Object.<string, WebGLTexture>} */\n  const texturePerImage = {};\n\n  this.createTextures(this.textures_, this.images_, texturePerImage, gl);\n\n  this.state_ = {\n    strokeColor: null,\n    lineCap: undefined,\n    lineDash: null,\n    lineDashOffset: undefined,\n    lineJoin: undefined,\n    lineWidth: 0,\n    miterLimit: undefined,\n    fillColor: null,\n    font: undefined,\n    scale: undefined\n  };\n  this.text_ = '';\n  this.textAlign_ = undefined;\n  this.textBaseline_ = undefined;\n  this.offsetX_ = undefined;\n  this.offsetY_ = undefined;\n  this.images_ = null;\n  this.atlases_ = {};\n  this.currAtlas_ = undefined;\n  WebGLTextureReplay.prototype.finish.call(this, context);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTextReplay.prototype.setTextStyle = function(textStyle) {\n  const state = this.state_;\n  const textFillStyle = textStyle.getFill();\n  const textStrokeStyle = textStyle.getStroke();\n  if (!textStyle || !textStyle.getText() || (!textFillStyle && !textStrokeStyle)) {\n    this.text_ = '';\n  } else {\n    if (!textFillStyle) {\n      state.fillColor = null;\n    } else {\n      const textFillStyleColor = textFillStyle.getColor();\n      state.fillColor = asColorLike(textFillStyleColor ?\n        textFillStyleColor : DEFAULT_FILLSTYLE);\n    }\n    if (!textStrokeStyle) {\n      state.strokeColor = null;\n      state.lineWidth = 0;\n    } else {\n      const textStrokeStyleColor = textStrokeStyle.getColor();\n      state.strokeColor = asColorLike(textStrokeStyleColor ?\n        textStrokeStyleColor : DEFAULT_STROKESTYLE);\n      state.lineWidth = textStrokeStyle.getWidth() || DEFAULT_LINEWIDTH;\n      state.lineCap = textStrokeStyle.getLineCap() || DEFAULT_LINECAP;\n      state.lineDashOffset = textStrokeStyle.getLineDashOffset() || DEFAULT_LINEDASHOFFSET;\n      state.lineJoin = textStrokeStyle.getLineJoin() || DEFAULT_LINEJOIN;\n      state.miterLimit = textStrokeStyle.getMiterLimit() || DEFAULT_MITERLIMIT;\n      const lineDash = textStrokeStyle.getLineDash();\n      state.lineDash = lineDash ? lineDash.slice() : DEFAULT_LINEDASH;\n    }\n    state.font = textStyle.getFont() || DEFAULT_FONT;\n    state.scale = textStyle.getScale() || 1;\n    this.text_ = /** @type {string} */ (textStyle.getText());\n    const textAlign = TEXT_ALIGN[textStyle.getTextAlign()];\n    const textBaseline = TEXT_ALIGN[textStyle.getTextBaseline()];\n    this.textAlign_ = textAlign === undefined ?\n      DEFAULT_TEXTALIGN : textAlign;\n    this.textBaseline_ = textBaseline === undefined ?\n      DEFAULT_TEXTBASELINE : textBaseline;\n    this.offsetX_ = textStyle.getOffsetX() || 0;\n    this.offsetY_ = textStyle.getOffsetY() || 0;\n    this.rotateWithView = !!textStyle.getRotateWithView();\n    this.rotation = textStyle.getRotation() || 0;\n\n    this.currAtlas_ = this.getAtlas_(state);\n  }\n};\n\n\n/**\n * @private\n * @param {Object} state Font attributes.\n * @return {module:ol/render/webgl/TextReplay~GlyphAtlas} Glyph atlas.\n */\nWebGLTextReplay.prototype.getAtlas_ = function(state) {\n  let params = [];\n  for (const i in state) {\n    if (state[i] || state[i] === 0) {\n      if (Array.isArray(state[i])) {\n        params = params.concat(state[i]);\n      } else {\n        params.push(state[i]);\n      }\n    }\n  }\n  const hash = this.calculateHash_(params);\n  if (!this.atlases_[hash]) {\n    const mCtx = this.measureCanvas_.getContext('2d');\n    mCtx.font = state.font;\n    const height = Math.ceil((mCtx.measureText('M').width * 1.5 +\n        state.lineWidth / 2) * state.scale);\n\n    this.atlases_[hash] = {\n      atlas: new AtlasManager({\n        space: state.lineWidth + 1\n      }),\n      width: {},\n      height: height\n    };\n  }\n  return this.atlases_[hash];\n};\n\n\n/**\n * @private\n * @param {Array.<string|number>} params Array of parameters.\n * @return {string} Hash string.\n */\nWebGLTextReplay.prototype.calculateHash_ = function(params) {\n  //TODO: Create a more performant, reliable, general hash function.\n  let hash = '';\n  for (let i = 0, ii = params.length; i < ii; ++i) {\n    hash += params[i];\n  }\n  return hash;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTextReplay.prototype.getTextures = function(opt_all) {\n  return this.textures_;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTextReplay.prototype.getHitDetectionTextures = function() {\n  return this.textures_;\n};\nexport default WebGLTextReplay;\n","/**\n * @module ol/render/webgl/ReplayGroup\n */\nimport {inherits} from '../../index.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {buffer, createOrUpdateFromCoordinate} from '../../extent.js';\nimport {isEmpty} from '../../obj.js';\nimport {ORDER} from '../replay.js';\nimport ReplayGroup from '../ReplayGroup.js';\nimport WebGLCircleReplay from '../webgl/CircleReplay.js';\nimport WebGLImageReplay from '../webgl/ImageReplay.js';\nimport WebGLLineStringReplay from '../webgl/LineStringReplay.js';\nimport WebGLPolygonReplay from '../webgl/PolygonReplay.js';\nimport WebGLTextReplay from '../webgl/TextReplay.js';\n\n/**\n * @type {Array.<number>}\n */\nconst HIT_DETECTION_SIZE = [1, 1];\n\n/**\n * @type {Object.<module:ol/render/ReplayType,\n *                function(new: module:ol/render/webgl/Replay, number,\n *                module:ol/extent~Extent)>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': WebGLCircleReplay,\n  'Image': WebGLImageReplay,\n  'LineString': WebGLLineStringReplay,\n  'Polygon': WebGLPolygonReplay,\n  'Text': WebGLTextReplay\n};\n\n\n/**\n * @constructor\n * @extends {module:ol/render/ReplayGroup}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Max extent.\n * @param {number=} opt_renderBuffer Render buffer.\n * @struct\n */\nconst WebGLReplayGroup = function(tolerance, maxExtent, opt_renderBuffer) {\n  ReplayGroup.call(this);\n\n  /**\n   * @type {module:ol/extent~Extent}\n   * @private\n   */\n  this.maxExtent_ = maxExtent;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.tolerance_ = tolerance;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.renderBuffer_ = opt_renderBuffer;\n\n  /**\n   * @private\n   * @type {!Object.<string,\n   *        Object.<module:ol/render/ReplayType, module:ol/render/webgl/Replay>>}\n   */\n  this.replaysByZIndex_ = {};\n\n};\n\ninherits(WebGLReplayGroup, ReplayGroup);\n\n\n/**\n * @param {module:ol/style/Style} style Style.\n * @param {boolean} group Group with previous replay.\n */\nWebGLReplayGroup.prototype.addDeclutter = function(style, group) {};\n\n\n/**\n * @param {module:ol/webgl/Context} context WebGL context.\n * @return {function()} Delete resources function.\n */\nWebGLReplayGroup.prototype.getDeleteResourcesFunction = function(context) {\n  const functions = [];\n  let zKey;\n  for (zKey in this.replaysByZIndex_) {\n    const replays = this.replaysByZIndex_[zKey];\n    for (const replayKey in replays) {\n      functions.push(\n        replays[replayKey].getDeleteResourcesFunction(context));\n    }\n  }\n  return function() {\n    const length = functions.length;\n    let result;\n    for (let i = 0; i < length; i++) {\n      result = functions[i].apply(this, arguments);\n    }\n    return result;\n  };\n};\n\n\n/**\n * @param {module:ol/webgl/Context} context Context.\n */\nWebGLReplayGroup.prototype.finish = function(context) {\n  let zKey;\n  for (zKey in this.replaysByZIndex_) {\n    const replays = this.replaysByZIndex_[zKey];\n    for (const replayKey in replays) {\n      replays[replayKey].finish(context);\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLReplayGroup.prototype.getReplay = function(zIndex, replayType) {\n  const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n  let replays = this.replaysByZIndex_[zIndexKey];\n  if (replays === undefined) {\n    replays = {};\n    this.replaysByZIndex_[zIndexKey] = replays;\n  }\n  let replay = replays[replayType];\n  if (replay === undefined) {\n    /**\n     * @type {Function}\n     */\n    const Constructor = BATCH_CONSTRUCTORS[replayType];\n    replay = new Constructor(this.tolerance_, this.maxExtent_);\n    replays[replayType] = replay;\n  }\n  return replay;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLReplayGroup.prototype.isEmpty = function() {\n  return isEmpty(this.replaysByZIndex_);\n};\n\n\n/**\n * @param {module:ol/webgl/Context} context Context.\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {module:ol/size~Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} opacity Global opacity.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n */\nWebGLReplayGroup.prototype.replay = function(context,\n  center, resolution, rotation, size, pixelRatio,\n  opacity, skippedFeaturesHash) {\n  /** @type {Array.<number>} */\n  const zs = Object.keys(this.replaysByZIndex_).map(Number);\n  zs.sort(numberSafeCompareFunction);\n\n  let i, ii, j, jj, replays, replay;\n  for (i = 0, ii = zs.length; i < ii; ++i) {\n    replays = this.replaysByZIndex_[zs[i].toString()];\n    for (j = 0, jj = ORDER.length; j < jj; ++j) {\n      replay = replays[ORDER[j]];\n      if (replay !== undefined) {\n        replay.replay(context,\n          center, resolution, rotation, size, pixelRatio,\n          opacity, skippedFeaturesHash,\n          undefined, false);\n      }\n    }\n  }\n};\n\n\n/**\n * @private\n * @param {module:ol/webgl/Context} context Context.\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {module:ol/size~Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} opacity Global opacity.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} featureCallback Feature callback.\n * @param {boolean} oneByOne Draw features one-by-one for the hit-detecion.\n * @param {module:ol/extent~Extent=} opt_hitExtent Hit extent: Only features intersecting\n *  this extent are checked.\n * @return {T|undefined} Callback result.\n * @template T\n */\nWebGLReplayGroup.prototype.replayHitDetection_ = function(context,\n  center, resolution, rotation, size, pixelRatio, opacity,\n  skippedFeaturesHash, featureCallback, oneByOne, opt_hitExtent) {\n  /** @type {Array.<number>} */\n  const zs = Object.keys(this.replaysByZIndex_).map(Number);\n  zs.sort(function(a, b) {\n    return b - a;\n  });\n\n  let i, ii, j, replays, replay, result;\n  for (i = 0, ii = zs.length; i < ii; ++i) {\n    replays = this.replaysByZIndex_[zs[i].toString()];\n    for (j = ORDER.length - 1; j >= 0; --j) {\n      replay = replays[ORDER[j]];\n      if (replay !== undefined) {\n        result = replay.replay(context,\n          center, resolution, rotation, size, pixelRatio, opacity,\n          skippedFeaturesHash, featureCallback, oneByOne, opt_hitExtent);\n        if (result) {\n          return result;\n        }\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/webgl/Context} context Context.\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {module:ol/size~Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} opacity Global opacity.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} callback Feature callback.\n * @return {T|undefined} Callback result.\n * @template T\n */\nWebGLReplayGroup.prototype.forEachFeatureAtCoordinate = function(\n  coordinate, context, center, resolution, rotation, size, pixelRatio,\n  opacity, skippedFeaturesHash,\n  callback) {\n  const gl = context.getGL();\n  gl.bindFramebuffer(\n    gl.FRAMEBUFFER, context.getHitDetectionFramebuffer());\n\n\n  /**\n   * @type {module:ol/extent~Extent}\n   */\n  let hitExtent;\n  if (this.renderBuffer_ !== undefined) {\n    // build an extent around the coordinate, so that only features that\n    // intersect this extent are checked\n    hitExtent = buffer(createOrUpdateFromCoordinate(coordinate), resolution * this.renderBuffer_);\n  }\n\n  return this.replayHitDetection_(context,\n    coordinate, resolution, rotation, HIT_DETECTION_SIZE,\n    pixelRatio, opacity, skippedFeaturesHash,\n    /**\n     * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n     * @return {?} Callback result.\n     */\n    function(feature) {\n      const imageData = new Uint8Array(4);\n      gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, imageData);\n\n      if (imageData[3] > 0) {\n        const result = callback(feature);\n        if (result) {\n          return result;\n        }\n      }\n    }, true, hitExtent);\n};\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/webgl/Context} context Context.\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {module:ol/size~Size} size Size.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} opacity Global opacity.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n * @return {boolean} Is there a feature at the given coordinate?\n */\nWebGLReplayGroup.prototype.hasFeatureAtCoordinate = function(\n  coordinate, context, center, resolution, rotation, size, pixelRatio,\n  opacity, skippedFeaturesHash) {\n  const gl = context.getGL();\n  gl.bindFramebuffer(\n    gl.FRAMEBUFFER, context.getHitDetectionFramebuffer());\n\n  const hasFeature = this.replayHitDetection_(context,\n    coordinate, resolution, rotation, HIT_DETECTION_SIZE,\n    pixelRatio, opacity, skippedFeaturesHash,\n    /**\n     * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n     * @return {boolean} Is there a feature?\n     */\n    function(feature) {\n      const imageData = new Uint8Array(4);\n      gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, imageData);\n      return imageData[3] > 0;\n    }, false);\n\n  return hasFeature !== undefined;\n};\n\nexport default WebGLReplayGroup;\n","/**\n * @module ol/render/webgl/Immediate\n */\nimport {inherits} from '../../index.js';\nimport {intersects} from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport ReplayType from '../ReplayType.js';\nimport VectorContext from '../VectorContext.js';\nimport WebGLReplayGroup from '../webgl/ReplayGroup.js';\n\n/**\n * @constructor\n * @extends {module:ol/render/VectorContext}\n * @param {module:ol/webgl/Context} context Context.\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {module:ol/size~Size} size Size.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} pixelRatio Pixel ratio.\n * @struct\n */\nconst WebGLImmediateRenderer = function(context, center, resolution, rotation, size, extent, pixelRatio) {\n  VectorContext.call(this);\n\n  /**\n   * @private\n   */\n  this.context_ = context;\n\n  /**\n   * @private\n   */\n  this.center_ = center;\n\n  /**\n   * @private\n   */\n  this.extent_ = extent;\n\n  /**\n   * @private\n   */\n  this.pixelRatio_ = pixelRatio;\n\n  /**\n   * @private\n   */\n  this.size_ = size;\n\n  /**\n   * @private\n   */\n  this.rotation_ = rotation;\n\n  /**\n   * @private\n   */\n  this.resolution_ = resolution;\n\n  /**\n   * @private\n   * @type {module:ol/style/Image}\n   */\n  this.imageStyle_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Fill}\n   */\n  this.fillStyle_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Stroke}\n   */\n  this.strokeStyle_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Text}\n   */\n  this.textStyle_ = null;\n\n};\n\ninherits(WebGLImmediateRenderer, VectorContext);\n\n\n/**\n * @param {module:ol/render/webgl/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n * @private\n */\nWebGLImmediateRenderer.prototype.drawText_ = function(replayGroup, geometry) {\n  const context = this.context_;\n  const replay = /** @type {module:ol/render/webgl/TextReplay} */ (\n    replayGroup.getReplay(0, ReplayType.TEXT));\n  replay.setTextStyle(this.textStyle_);\n  replay.drawText(geometry, null);\n  replay.finish(context);\n  // default colors\n  const opacity = 1;\n  const skippedFeatures = {};\n  let featureCallback;\n  const oneByOne = false;\n  replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n    this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n    oneByOne);\n  replay.getDeleteResourcesFunction(context)();\n};\n\n\n/**\n * Set the rendering style.  Note that since this is an immediate rendering API,\n * any `zIndex` on the provided style will be ignored.\n *\n * @param {module:ol/style/Style} style The rendering style.\n * @override\n * @api\n */\nWebGLImmediateRenderer.prototype.setStyle = function(style) {\n  this.setFillStrokeStyle(style.getFill(), style.getStroke());\n  this.setImageStyle(style.getImage());\n  this.setTextStyle(style.getText());\n};\n\n\n/**\n * Render a geometry into the canvas.  Call\n * {@link ol/render/webgl/Immediate#setStyle} first to set the rendering style.\n *\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry The geometry to render.\n * @override\n * @api\n */\nWebGLImmediateRenderer.prototype.drawGeometry = function(geometry) {\n  const type = geometry.getType();\n  switch (type) {\n    case GeometryType.POINT:\n      this.drawPoint(/** @type {module:ol/geom/Point} */ (geometry), null);\n      break;\n    case GeometryType.LINE_STRING:\n      this.drawLineString(/** @type {module:ol/geom/LineString} */ (geometry), null);\n      break;\n    case GeometryType.POLYGON:\n      this.drawPolygon(/** @type {module:ol/geom/Polygon} */ (geometry), null);\n      break;\n    case GeometryType.MULTI_POINT:\n      this.drawMultiPoint(/** @type {module:ol/geom/MultiPoint} */ (geometry), null);\n      break;\n    case GeometryType.MULTI_LINE_STRING:\n      this.drawMultiLineString(/** @type {module:ol/geom/MultiLineString} */ (geometry), null);\n      break;\n    case GeometryType.MULTI_POLYGON:\n      this.drawMultiPolygon(/** @type {module:ol/geom/MultiPolygon} */ (geometry), null);\n      break;\n    case GeometryType.GEOMETRY_COLLECTION:\n      this.drawGeometryCollection(/** @type {module:ol/geom/GeometryCollection} */ (geometry), null);\n      break;\n    case GeometryType.CIRCLE:\n      this.drawCircle(/** @type {module:ol/geom/Circle} */ (geometry), null);\n      break;\n    default:\n      // pass\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nWebGLImmediateRenderer.prototype.drawFeature = function(feature, style) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  this.setStyle(style);\n  this.drawGeometry(geometry);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImmediateRenderer.prototype.drawGeometryCollection = function(geometry, data) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    this.drawGeometry(geometries[i]);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImmediateRenderer.prototype.drawPoint = function(geometry, data) {\n  const context = this.context_;\n  const replayGroup = new WebGLReplayGroup(1, this.extent_);\n  const replay = /** @type {module:ol/render/webgl/ImageReplay} */ (\n    replayGroup.getReplay(0, ReplayType.IMAGE));\n  replay.setImageStyle(this.imageStyle_);\n  replay.drawPoint(geometry, data);\n  replay.finish(context);\n  // default colors\n  const opacity = 1;\n  const skippedFeatures = {};\n  let featureCallback;\n  const oneByOne = false;\n  replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n    this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n    oneByOne);\n  replay.getDeleteResourcesFunction(context)();\n\n  if (this.textStyle_) {\n    this.drawText_(replayGroup, geometry);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImmediateRenderer.prototype.drawMultiPoint = function(geometry, data) {\n  const context = this.context_;\n  const replayGroup = new WebGLReplayGroup(1, this.extent_);\n  const replay = /** @type {module:ol/render/webgl/ImageReplay} */ (\n    replayGroup.getReplay(0, ReplayType.IMAGE));\n  replay.setImageStyle(this.imageStyle_);\n  replay.drawMultiPoint(geometry, data);\n  replay.finish(context);\n  const opacity = 1;\n  const skippedFeatures = {};\n  let featureCallback;\n  const oneByOne = false;\n  replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n    this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n    oneByOne);\n  replay.getDeleteResourcesFunction(context)();\n\n  if (this.textStyle_) {\n    this.drawText_(replayGroup, geometry);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImmediateRenderer.prototype.drawLineString = function(geometry, data) {\n  const context = this.context_;\n  const replayGroup = new WebGLReplayGroup(1, this.extent_);\n  const replay = /** @type {module:ol/render/webgl/LineStringReplay} */ (\n    replayGroup.getReplay(0, ReplayType.LINE_STRING));\n  replay.setFillStrokeStyle(null, this.strokeStyle_);\n  replay.drawLineString(geometry, data);\n  replay.finish(context);\n  const opacity = 1;\n  const skippedFeatures = {};\n  let featureCallback;\n  const oneByOne = false;\n  replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n    this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n    oneByOne);\n  replay.getDeleteResourcesFunction(context)();\n\n  if (this.textStyle_) {\n    this.drawText_(replayGroup, geometry);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImmediateRenderer.prototype.drawMultiLineString = function(geometry, data) {\n  const context = this.context_;\n  const replayGroup = new WebGLReplayGroup(1, this.extent_);\n  const replay = /** @type {module:ol/render/webgl/LineStringReplay} */ (\n    replayGroup.getReplay(0, ReplayType.LINE_STRING));\n  replay.setFillStrokeStyle(null, this.strokeStyle_);\n  replay.drawMultiLineString(geometry, data);\n  replay.finish(context);\n  const opacity = 1;\n  const skippedFeatures = {};\n  let featureCallback;\n  const oneByOne = false;\n  replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n    this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n    oneByOne);\n  replay.getDeleteResourcesFunction(context)();\n\n  if (this.textStyle_) {\n    this.drawText_(replayGroup, geometry);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImmediateRenderer.prototype.drawPolygon = function(geometry, data) {\n  const context = this.context_;\n  const replayGroup = new WebGLReplayGroup(1, this.extent_);\n  const replay = /** @type {module:ol/render/webgl/PolygonReplay} */ (\n    replayGroup.getReplay(0, ReplayType.POLYGON));\n  replay.setFillStrokeStyle(this.fillStyle_, this.strokeStyle_);\n  replay.drawPolygon(geometry, data);\n  replay.finish(context);\n  const opacity = 1;\n  const skippedFeatures = {};\n  let featureCallback;\n  const oneByOne = false;\n  replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n    this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n    oneByOne);\n  replay.getDeleteResourcesFunction(context)();\n\n  if (this.textStyle_) {\n    this.drawText_(replayGroup, geometry);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImmediateRenderer.prototype.drawMultiPolygon = function(geometry, data) {\n  const context = this.context_;\n  const replayGroup = new WebGLReplayGroup(1, this.extent_);\n  const replay = /** @type {module:ol/render/webgl/PolygonReplay} */ (\n    replayGroup.getReplay(0, ReplayType.POLYGON));\n  replay.setFillStrokeStyle(this.fillStyle_, this.strokeStyle_);\n  replay.drawMultiPolygon(geometry, data);\n  replay.finish(context);\n  const opacity = 1;\n  const skippedFeatures = {};\n  let featureCallback;\n  const oneByOne = false;\n  replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n    this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n    oneByOne);\n  replay.getDeleteResourcesFunction(context)();\n\n  if (this.textStyle_) {\n    this.drawText_(replayGroup, geometry);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImmediateRenderer.prototype.drawCircle = function(geometry, data) {\n  const context = this.context_;\n  const replayGroup = new WebGLReplayGroup(1, this.extent_);\n  const replay = /** @type {module:ol/render/webgl/CircleReplay} */ (\n    replayGroup.getReplay(0, ReplayType.CIRCLE));\n  replay.setFillStrokeStyle(this.fillStyle_, this.strokeStyle_);\n  replay.drawCircle(geometry, data);\n  replay.finish(context);\n  const opacity = 1;\n  const skippedFeatures = {};\n  let featureCallback;\n  const oneByOne = false;\n  replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n    this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n    oneByOne);\n  replay.getDeleteResourcesFunction(context)();\n\n  if (this.textStyle_) {\n    this.drawText_(replayGroup, geometry);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImmediateRenderer.prototype.setImageStyle = function(imageStyle) {\n  this.imageStyle_ = imageStyle;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImmediateRenderer.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {\n  this.fillStyle_ = fillStyle;\n  this.strokeStyle_ = strokeStyle;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImmediateRenderer.prototype.setTextStyle = function(textStyle) {\n  this.textStyle_ = textStyle;\n};\nexport default WebGLImmediateRenderer;\n","/**\n * @module ol/renderer/webgl/defaultmapshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG_WEBGL} from '../../index.js';\nimport WebGLFragment from '../../webgl/Fragment.js';\nimport WebGLVertex from '../../webgl/Vertex.js';\n\nexport const fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_texCoord;\\n\\n\\nuniform float u_opacity;\\nuniform sampler2D u_texture;\\n\\nvoid main(void) {\\n  vec4 texColor = texture2D(u_texture, v_texCoord);\\n  gl_FragColor.rgb = texColor.rgb;\\n  gl_FragColor.a = texColor.a * u_opacity;\\n}\\n' :\n  'precision mediump float;varying vec2 a;uniform float f;uniform sampler2D g;void main(void){vec4 texColor=texture2D(g,a);gl_FragColor.rgb=texColor.rgb;gl_FragColor.a=texColor.a*f;}');\n\nexport const vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying vec2 v_texCoord;\\n\\n\\nattribute vec2 a_position;\\nattribute vec2 a_texCoord;\\n\\nuniform mat4 u_texCoordMatrix;\\nuniform mat4 u_projectionMatrix;\\n\\nvoid main(void) {\\n  gl_Position = u_projectionMatrix * vec4(a_position, 0., 1.);\\n  v_texCoord = (u_texCoordMatrix * vec4(a_texCoord, 0., 1.)).st;\\n}\\n\\n\\n' :\n  'varying vec2 a;attribute vec2 b;attribute vec2 c;uniform mat4 d;uniform mat4 e;void main(void){gl_Position=e*vec4(b,0.,1.);a=(d*vec4(c,0.,1.)).st;}');\n","/**\n * @module ol/renderer/webgl/defaultmapshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG_WEBGL} from '../../../index.js';\n\n/**\n * @constructor\n * @param {WebGLRenderingContext} gl GL.\n * @param {WebGLProgram} program Program.\n * @struct\n */\nconst Locations = function(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_texCoordMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_texCoordMatrix' : 'd');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'e');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_opacity' : 'f');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_texture = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_texture' : 'g');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'b');\n\n  /**\n   * @type {number}\n   */\n  this.a_texCoord = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_texCoord' : 'c');\n};\n\nexport default Locations;\n","/**\n * @module ol/renderer/webgl/Layer\n */\nimport {inherits} from '../../index.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport WebGLImmediateRenderer from '../../render/webgl/Immediate.js';\nimport LayerRenderer from '../Layer.js';\nimport {fragment, vertex} from '../webgl/defaultmapshader.js';\nimport Locations from '../webgl/defaultmapshader/Locations.js';\nimport {create as createTransform} from '../../transform.js';\nimport {create, fromTransform} from '../../vec/mat4.js';\nimport {ARRAY_BUFFER, FRAMEBUFFER, FLOAT, TEXTURE_2D,\n  TRIANGLE_STRIP, COLOR_ATTACHMENT0} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\nimport {createEmptyTexture} from '../../webgl/Context.js';\n\n/**\n * @constructor\n * @abstract\n * @extends {module:ol/renderer/Layer}\n * @param {module:ol/renderer/webgl/Map} mapRenderer Map renderer.\n * @param {module:ol/layer/Layer} layer Layer.\n */\nconst WebGLLayerRenderer = function(mapRenderer, layer) {\n\n  LayerRenderer.call(this, layer);\n\n  /**\n   * @protected\n   * @type {module:ol/renderer/webgl/Map}\n   */\n  this.mapRenderer = mapRenderer;\n\n  /**\n   * @private\n   * @type {module:ol/webgl/Buffer}\n   */\n  this.arrayBuffer_ = new WebGLBuffer([\n    -1, -1, 0, 0,\n    1, -1, 1, 0,\n    -1, 1, 0, 1,\n    1, 1, 1, 1\n  ]);\n\n  /**\n   * @protected\n   * @type {WebGLTexture}\n   */\n  this.texture = null;\n\n  /**\n   * @protected\n   * @type {WebGLFramebuffer}\n   */\n  this.framebuffer = null;\n\n  /**\n   * @protected\n   * @type {number|undefined}\n   */\n  this.framebufferDimension = undefined;\n\n  /**\n   * @protected\n   * @type {module:ol/transform~Transform}\n   */\n  this.texCoordMatrix = createTransform();\n\n  /**\n   * @protected\n   * @type {module:ol/transform~Transform}\n   */\n  this.projectionMatrix = createTransform();\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.tmpMat4_ = create();\n\n  /**\n   * @private\n   * @type {module:ol/renderer/webgl/defaultmapshader/Locations}\n   */\n  this.defaultLocations_ = null;\n\n};\n\ninherits(WebGLLayerRenderer, LayerRenderer);\n\n\n/**\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {number} framebufferDimension Framebuffer dimension.\n * @protected\n */\nWebGLLayerRenderer.prototype.bindFramebuffer = function(frameState, framebufferDimension) {\n\n  const gl = this.mapRenderer.getGL();\n\n  if (this.framebufferDimension === undefined ||\n      this.framebufferDimension != framebufferDimension) {\n    /**\n     * @param {WebGLRenderingContext} gl GL.\n     * @param {WebGLFramebuffer} framebuffer Framebuffer.\n     * @param {WebGLTexture} texture Texture.\n     */\n    const postRenderFunction = function(gl, framebuffer, texture) {\n      if (!gl.isContextLost()) {\n        gl.deleteFramebuffer(framebuffer);\n        gl.deleteTexture(texture);\n      }\n    }.bind(null, gl, this.framebuffer, this.texture);\n\n    frameState.postRenderFunctions.push(\n      /** @type {module:ol/PluggableMap~PostRenderFunction} */ (postRenderFunction)\n    );\n\n    const texture = createEmptyTexture(\n      gl, framebufferDimension, framebufferDimension);\n\n    const framebuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(FRAMEBUFFER, framebuffer);\n    gl.framebufferTexture2D(FRAMEBUFFER,\n      COLOR_ATTACHMENT0, TEXTURE_2D, texture, 0);\n\n    this.texture = texture;\n    this.framebuffer = framebuffer;\n    this.framebufferDimension = framebufferDimension;\n\n  } else {\n    gl.bindFramebuffer(FRAMEBUFFER, this.framebuffer);\n  }\n\n};\n\n\n/**\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @param {module:ol/webgl/Context} context Context.\n */\nWebGLLayerRenderer.prototype.composeFrame = function(frameState, layerState, context) {\n\n  this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, context, frameState);\n\n  context.bindBuffer(ARRAY_BUFFER, this.arrayBuffer_);\n\n  const gl = context.getGL();\n\n  const program = context.getProgram(fragment, vertex);\n\n  let locations;\n  if (!this.defaultLocations_) {\n    locations = new Locations(gl, program);\n    this.defaultLocations_ = locations;\n  } else {\n    locations = this.defaultLocations_;\n  }\n\n  if (context.useProgram(program)) {\n    gl.enableVertexAttribArray(locations.a_position);\n    gl.vertexAttribPointer(\n      locations.a_position, 2, FLOAT, false, 16, 0);\n    gl.enableVertexAttribArray(locations.a_texCoord);\n    gl.vertexAttribPointer(\n      locations.a_texCoord, 2, FLOAT, false, 16, 8);\n    gl.uniform1i(locations.u_texture, 0);\n  }\n\n  gl.uniformMatrix4fv(locations.u_texCoordMatrix, false,\n    fromTransform(this.tmpMat4_, this.getTexCoordMatrix()));\n  gl.uniformMatrix4fv(locations.u_projectionMatrix, false,\n    fromTransform(this.tmpMat4_, this.getProjectionMatrix()));\n  gl.uniform1f(locations.u_opacity, layerState.opacity);\n  gl.bindTexture(TEXTURE_2D, this.getTexture());\n  gl.drawArrays(TRIANGLE_STRIP, 0, 4);\n\n  this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, context, frameState);\n};\n\n\n/**\n * @param {module:ol/render/EventType} type Event type.\n * @param {module:ol/webgl/Context} context WebGL context.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @private\n */\nWebGLLayerRenderer.prototype.dispatchComposeEvent_ = function(type, context, frameState) {\n  const layer = this.getLayer();\n  if (layer.hasListener(type)) {\n    const viewState = frameState.viewState;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const extent = frameState.extent;\n    const center = viewState.center;\n    const rotation = viewState.rotation;\n    const size = frameState.size;\n\n    const render = new WebGLImmediateRenderer(\n      context, center, resolution, rotation, size, extent, pixelRatio);\n    const composeEvent = new RenderEvent(\n      type, render, frameState, null, context);\n    layer.dispatchEvent(composeEvent);\n  }\n};\n\n\n/**\n * @return {!module:ol/transform~Transform} Matrix.\n */\nWebGLLayerRenderer.prototype.getTexCoordMatrix = function() {\n  return this.texCoordMatrix;\n};\n\n\n/**\n * @return {WebGLTexture} Texture.\n */\nWebGLLayerRenderer.prototype.getTexture = function() {\n  return this.texture;\n};\n\n\n/**\n * @return {!module:ol/transform~Transform} Matrix.\n */\nWebGLLayerRenderer.prototype.getProjectionMatrix = function() {\n  return this.projectionMatrix;\n};\n\n\n/**\n * Handle webglcontextlost.\n */\nWebGLLayerRenderer.prototype.handleWebGLContextLost = function() {\n  this.texture = null;\n  this.framebuffer = null;\n  this.framebufferDimension = undefined;\n};\n\n\n/**\n * @abstract\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @param {module:ol/webgl/Context} context Context.\n * @return {boolean} whether composeFrame should be called.\n */\nWebGLLayerRenderer.prototype.prepareFrame = function(frameState, layerState, context) {};\n\n\n/**\n * @abstract\n * @param {module:ol~Pixel} pixel Pixel.\n * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n *     callback.\n * @param {S} thisArg Value to use as `this` when executing `callback`.\n * @return {T|undefined} Callback result.\n * @template S,T,U\n */\nWebGLLayerRenderer.prototype.forEachLayerAtPixel = function(pixel, frameState, callback, thisArg) {};\nexport default WebGLLayerRenderer;\n","/**\n * @module ol/renderer/webgl/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport {inherits} from '../../index.js';\nimport {TRUE, UNDEFINED} from '../../functions.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {getIntersection, isEmpty} from '../../extent.js';\nimport WebGLLayerRenderer from '../webgl/Layer.js';\nimport {\n  create as createTransform,\n  rotate as rotateTransform,\n  translate as translateTransform,\n  scale as scaleTransform,\n  reset as resetTransform,\n  apply as applyTransform,\n  invert as invertTransform,\n  multiply as multiplyTransform\n} from '../../transform.js';\nimport {CLAMP_TO_EDGE} from '../../webgl.js';\nimport {createTexture} from '../../webgl/Context.js';\n\n/**\n * @constructor\n * @extends {module:ol/renderer/webgl/Layer}\n * @param {module:ol/renderer/webgl/Map} mapRenderer Map renderer.\n * @param {module:ol/layer/Image} imageLayer Tile layer.\n * @api\n */\nconst WebGLImageLayerRenderer = function(mapRenderer, imageLayer) {\n\n  WebGLLayerRenderer.call(this, mapRenderer, imageLayer);\n\n  /**\n   * The last rendered image.\n   * @private\n   * @type {?module:ol/ImageBase}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.hitCanvasContext_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/transform~Transform}\n   */\n  this.hitTransformationMatrix_ = null;\n\n};\n\ninherits(WebGLImageLayerRenderer, WebGLLayerRenderer);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nWebGLImageLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.IMAGE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/webgl/ImageLayer} The layer renderer.\n */\nWebGLImageLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new WebGLImageLayerRenderer(\n    /** @type {module:ol/renderer/webgl/Map} */ (mapRenderer),\n    /** @type {module:ol/layer/Image} */ (layer)\n  );\n};\n\n\n/**\n * @param {module:ol/ImageBase} image Image.\n * @private\n * @return {WebGLTexture} Texture.\n */\nWebGLImageLayerRenderer.prototype.createTexture_ = function(image) {\n\n  // We meet the conditions to work with non-power of two textures.\n  // http://www.khronos.org/webgl/wiki/WebGL_and_OpenGL_Differences#Non-Power_of_Two_Texture_Support\n  // http://learningwebgl.com/blog/?p=2101\n\n  const imageElement = image.getImage();\n  const gl = this.mapRenderer.getGL();\n\n  return createTexture(\n    gl, imageElement, CLAMP_TO_EDGE, CLAMP_TO_EDGE);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  const layer = this.getLayer();\n  const source = layer.getSource();\n  const resolution = frameState.viewState.resolution;\n  const rotation = frameState.viewState.rotation;\n  const skippedFeatureUids = frameState.skippedFeatureUids;\n  return source.forEachFeatureAtCoordinate(\n    coordinate, resolution, rotation, hitTolerance, skippedFeatureUids,\n\n    /**\n     * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n     * @return {?} Callback result.\n     */\n    function(feature) {\n      return callback.call(thisArg, feature, layer);\n    });\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImageLayerRenderer.prototype.prepareFrame = function(frameState, layerState, context) {\n\n  const gl = this.mapRenderer.getGL();\n\n  const pixelRatio = frameState.pixelRatio;\n  const viewState = frameState.viewState;\n  const viewCenter = viewState.center;\n  const viewResolution = viewState.resolution;\n  const viewRotation = viewState.rotation;\n\n  let image = this.image_;\n  let texture = this.texture;\n  const imageLayer = /** @type {module:ol/layer/Image} */ (this.getLayer());\n  const imageSource = imageLayer.getSource();\n\n  const hints = frameState.viewHints;\n\n  let renderedExtent = frameState.extent;\n  if (layerState.extent !== undefined) {\n    renderedExtent = getIntersection(renderedExtent, layerState.extent);\n  }\n  if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)) {\n    let projection = viewState.projection;\n    if (!ENABLE_RASTER_REPROJECTION) {\n      const sourceProjection = imageSource.getProjection();\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n    }\n    const image_ = imageSource.getImage(renderedExtent, viewResolution,\n      pixelRatio, projection);\n    if (image_) {\n      const loaded = this.loadImage(image_);\n      if (loaded) {\n        image = image_;\n        texture = this.createTexture_(image_);\n        if (this.texture) {\n          /**\n           * @param {WebGLRenderingContext} gl GL.\n           * @param {WebGLTexture} texture Texture.\n           */\n          const postRenderFunction = function(gl, texture) {\n            if (!gl.isContextLost()) {\n              gl.deleteTexture(texture);\n            }\n          }.bind(null, gl, this.texture);\n          frameState.postRenderFunctions.push(\n            /** @type {module:ol/PluggableMap~PostRenderFunction} */ (postRenderFunction)\n          );\n        }\n      }\n    }\n  }\n\n  if (image) {\n    const canvas = this.mapRenderer.getContext().getCanvas();\n\n    this.updateProjectionMatrix_(canvas.width, canvas.height,\n      pixelRatio, viewCenter, viewResolution, viewRotation,\n      image.getExtent());\n    this.hitTransformationMatrix_ = null;\n\n    // Translate and scale to flip the Y coord.\n    const texCoordMatrix = this.texCoordMatrix;\n    resetTransform(texCoordMatrix);\n    scaleTransform(texCoordMatrix, 1, -1);\n    translateTransform(texCoordMatrix, 0, -1);\n\n    this.image_ = image;\n    this.texture = texture;\n  }\n\n  return !!image;\n};\n\n\n/**\n * @param {number} canvasWidth Canvas width.\n * @param {number} canvasHeight Canvas height.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/coordinate~Coordinate} viewCenter View center.\n * @param {number} viewResolution View resolution.\n * @param {number} viewRotation View rotation.\n * @param {module:ol/extent~Extent} imageExtent Image extent.\n * @private\n */\nWebGLImageLayerRenderer.prototype.updateProjectionMatrix_ = function(canvasWidth, canvasHeight, pixelRatio,\n  viewCenter, viewResolution, viewRotation, imageExtent) {\n\n  const canvasExtentWidth = canvasWidth * viewResolution;\n  const canvasExtentHeight = canvasHeight * viewResolution;\n\n  const projectionMatrix = this.projectionMatrix;\n  resetTransform(projectionMatrix);\n  scaleTransform(projectionMatrix,\n    pixelRatio * 2 / canvasExtentWidth,\n    pixelRatio * 2 / canvasExtentHeight);\n  rotateTransform(projectionMatrix, -viewRotation);\n  translateTransform(projectionMatrix,\n    imageExtent[0] - viewCenter[0],\n    imageExtent[1] - viewCenter[1]);\n  scaleTransform(projectionMatrix,\n    (imageExtent[2] - imageExtent[0]) / 2,\n    (imageExtent[3] - imageExtent[1]) / 2);\n  translateTransform(projectionMatrix, 1, 1);\n\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImageLayerRenderer.prototype.hasFeatureAtCoordinate = function(coordinate, frameState) {\n  const hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, 0, TRUE, this);\n  return hasFeature !== undefined;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLImageLayerRenderer.prototype.forEachLayerAtPixel = function(pixel, frameState, callback, thisArg) {\n  if (!this.image_ || !this.image_.getImage()) {\n    return undefined;\n  }\n\n  if (this.getLayer().getSource().forEachFeatureAtCoordinate !== UNDEFINED) {\n    // for ImageCanvas sources use the original hit-detection logic,\n    // so that for example also transparent polygons are detected\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform, pixel.slice());\n    const hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, 0, TRUE, this);\n\n    if (hasFeature) {\n      return callback.call(thisArg, this.getLayer(), null);\n    } else {\n      return undefined;\n    }\n  } else {\n    const imageSize =\n        [this.image_.getImage().width, this.image_.getImage().height];\n\n    if (!this.hitTransformationMatrix_) {\n      this.hitTransformationMatrix_ = this.getHitTransformationMatrix_(\n        frameState.size, imageSize);\n    }\n\n    const pixelOnFrameBuffer = applyTransform(\n      this.hitTransformationMatrix_, pixel.slice());\n\n    if (pixelOnFrameBuffer[0] < 0 || pixelOnFrameBuffer[0] > imageSize[0] ||\n        pixelOnFrameBuffer[1] < 0 || pixelOnFrameBuffer[1] > imageSize[1]) {\n      // outside the image, no need to check\n      return undefined;\n    }\n\n    if (!this.hitCanvasContext_) {\n      this.hitCanvasContext_ = createCanvasContext2D(1, 1);\n    }\n\n    this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n    this.hitCanvasContext_.drawImage(this.image_.getImage(),\n      pixelOnFrameBuffer[0], pixelOnFrameBuffer[1], 1, 1, 0, 0, 1, 1);\n\n    const imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n    if (imageData[3] > 0) {\n      return callback.call(thisArg, this.getLayer(),  imageData);\n    } else {\n      return undefined;\n    }\n  }\n};\n\n\n/**\n * The transformation matrix to get the pixel on the image for a\n * pixel on the map.\n * @param {module:ol/size~Size} mapSize The map size.\n * @param {module:ol/size~Size} imageSize The image size.\n * @return {module:ol/transform~Transform} The transformation matrix.\n * @private\n */\nWebGLImageLayerRenderer.prototype.getHitTransformationMatrix_ = function(mapSize, imageSize) {\n  // the first matrix takes a map pixel, flips the y-axis and scales to\n  // a range between -1 ... 1\n  const mapCoordTransform = createTransform();\n  translateTransform(mapCoordTransform, -1, -1);\n  scaleTransform(mapCoordTransform, 2 / mapSize[0], 2 / mapSize[1]);\n  translateTransform(mapCoordTransform, 0, mapSize[1]);\n  scaleTransform(mapCoordTransform, 1, -1);\n\n  // the second matrix is the inverse of the projection matrix used in the\n  // shader for drawing\n  const projectionMatrixInv = invertTransform(this.projectionMatrix.slice());\n\n  // the third matrix scales to the image dimensions and flips the y-axis again\n  const transform = createTransform();\n  translateTransform(transform, 0, imageSize[1]);\n  scaleTransform(transform, 1, -1);\n  scaleTransform(transform, imageSize[0] / 2, imageSize[1] / 2);\n  translateTransform(transform, 1, 1);\n\n  multiplyTransform(transform, projectionMatrixInv);\n  multiplyTransform(transform, mapCoordTransform);\n\n  return transform;\n};\nexport default WebGLImageLayerRenderer;\n","/**\n * @module ol/renderer/webgl/Map\n */\n\nimport {inherits} from '../../index.js';\nimport {stableSort} from '../../array.js';\nimport {CLASS_UNSELECTABLE} from '../../css.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen} from '../../events.js';\nimport {visibleAtResolution} from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport WebGLImmediateRenderer from '../../render/webgl/Immediate.js';\nimport MapRenderer, {sortByZIndex} from '../Map.js';\nimport SourceState from '../../source/State.js';\nimport LRUCache from '../../structs/LRUCache.js';\nimport PriorityQueue from '../../structs/PriorityQueue.js';\nimport {BLEND, CLAMP_TO_EDGE, COLOR_BUFFER_BIT, CULL_FACE, DEPTH_TEST, FRAMEBUFFER,\n  getContext, LINEAR, ONE, ONE_MINUS_SRC_ALPHA, RGBA, SCISSOR_TEST, SRC_ALPHA,\n  STENCIL_TEST, TEXTURE0, TEXTURE_2D, TEXTURE_MAG_FILTER, TEXTURE_MIN_FILTER,\n  TEXTURE_WRAP_S, TEXTURE_WRAP_T, UNSIGNED_BYTE} from '../../webgl.js';\nimport WebGLContext from '../../webgl/Context.js';\nimport ContextEventType from '../../webgl/ContextEventType.js';\n\n\n/**\n * @typedef {Object} TextureCacheEntry\n * @property {number} magFilter\n * @property {number} minFilter\n * @property {WebGLTexture} texture\n */\n\n\n/**\n * Texture cache high water mark.\n * @type {number}\n */\nconst WEBGL_TEXTURE_CACHE_HIGH_WATER_MARK = 1024;\n\n\n/**\n * @constructor\n * @extends {module:ol/renderer/Map}\n * @param {module:ol/PluggableMap} map Map.\n * @api\n */\nconst WebGLMapRenderer = function(map) {\n  MapRenderer.call(this, map);\n\n  const container = map.getViewport();\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = /** @type {HTMLCanvasElement} */\n    (document.createElement('CANVAS'));\n  this.canvas_.style.width = '100%';\n  this.canvas_.style.height = '100%';\n  this.canvas_.style.display = 'block';\n  this.canvas_.className = CLASS_UNSELECTABLE;\n  container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.clipTileCanvasWidth_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.clipTileCanvasHeight_ = 0;\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.clipTileContext_ = createCanvasContext2D();\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderedVisible_ = true;\n\n  /**\n   * @private\n   * @type {WebGLRenderingContext}\n   */\n  this.gl_ = getContext(this.canvas_, {\n    antialias: true,\n    depth: true,\n    failIfMajorPerformanceCaveat: true,\n    preserveDrawingBuffer: false,\n    stencil: true\n  });\n\n  /**\n   * @private\n   * @type {module:ol/webgl/Context}\n   */\n  this.context_ = new WebGLContext(this.canvas_, this.gl_);\n\n  listen(this.canvas_, ContextEventType.LOST,\n    this.handleWebGLContextLost, this);\n  listen(this.canvas_, ContextEventType.RESTORED,\n    this.handleWebGLContextRestored, this);\n\n  /**\n   * @private\n   * @type {module:ol/structs/LRUCache.<module:ol/renderer/webgl/Map~TextureCacheEntry|null>}\n   */\n  this.textureCache_ = new LRUCache();\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.focus_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/structs/PriorityQueue.<Array>}\n   */\n  this.tileTextureQueue_ = new PriorityQueue(\n    /**\n     * @param {Array.<*>} element Element.\n     * @return {number} Priority.\n     * @this {module:ol/renderer/webgl/Map}\n     */\n    (function(element) {\n      const tileCenter = /** @type {module:ol/coordinate~Coordinate} */ (element[1]);\n      const tileResolution = /** @type {number} */ (element[2]);\n      const deltaX = tileCenter[0] - this.focus_[0];\n      const deltaY = tileCenter[1] - this.focus_[1];\n      return 65536 * Math.log(tileResolution) +\n            Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n    }).bind(this),\n    /**\n     * @param {Array.<*>} element Element.\n     * @return {string} Key.\n     */\n    function(element) {\n      return (\n        /** @type {module:ol/Tile} */ (element[0]).getKey()\n      );\n    });\n\n\n  /**\n   * @param {module:ol/PluggableMap} map Map.\n   * @param {?module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @return {boolean} false.\n   * @this {module:ol/renderer/webgl/Map}\n   */\n  this.loadNextTileTexture_ =\n      function(map, frameState) {\n        if (!this.tileTextureQueue_.isEmpty()) {\n          this.tileTextureQueue_.reprioritize();\n          const element = this.tileTextureQueue_.dequeue();\n          const tile = /** @type {module:ol/Tile} */ (element[0]);\n          const tileSize = /** @type {module:ol/size~Size} */ (element[3]);\n          const tileGutter = /** @type {number} */ (element[4]);\n          this.bindTileTexture(\n            tile, tileSize, tileGutter, LINEAR, LINEAR);\n        }\n        return false;\n      }.bind(this);\n\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textureCacheFrameMarkerCount_ = 0;\n\n  this.initializeGL_();\n};\n\ninherits(WebGLMapRenderer, MapRenderer);\n\n\n/**\n * @param {module:ol/Tile} tile Tile.\n * @param {module:ol/size~Size} tileSize Tile size.\n * @param {number} tileGutter Tile gutter.\n * @param {number} magFilter Mag filter.\n * @param {number} minFilter Min filter.\n */\nWebGLMapRenderer.prototype.bindTileTexture = function(tile, tileSize, tileGutter, magFilter, minFilter) {\n  const gl = this.getGL();\n  const tileKey = tile.getKey();\n  if (this.textureCache_.containsKey(tileKey)) {\n    const textureCacheEntry = this.textureCache_.get(tileKey);\n    gl.bindTexture(TEXTURE_2D, textureCacheEntry.texture);\n    if (textureCacheEntry.magFilter != magFilter) {\n      gl.texParameteri(\n        TEXTURE_2D, TEXTURE_MAG_FILTER, magFilter);\n      textureCacheEntry.magFilter = magFilter;\n    }\n    if (textureCacheEntry.minFilter != minFilter) {\n      gl.texParameteri(\n        TEXTURE_2D, TEXTURE_MIN_FILTER, minFilter);\n      textureCacheEntry.minFilter = minFilter;\n    }\n  } else {\n    const texture = gl.createTexture();\n    gl.bindTexture(TEXTURE_2D, texture);\n    if (tileGutter > 0) {\n      const clipTileCanvas = this.clipTileContext_.canvas;\n      const clipTileContext = this.clipTileContext_;\n      if (this.clipTileCanvasWidth_ !== tileSize[0] ||\n          this.clipTileCanvasHeight_ !== tileSize[1]) {\n        clipTileCanvas.width = tileSize[0];\n        clipTileCanvas.height = tileSize[1];\n        this.clipTileCanvasWidth_ = tileSize[0];\n        this.clipTileCanvasHeight_ = tileSize[1];\n      } else {\n        clipTileContext.clearRect(0, 0, tileSize[0], tileSize[1]);\n      }\n      clipTileContext.drawImage(tile.getImage(), tileGutter, tileGutter,\n        tileSize[0], tileSize[1], 0, 0, tileSize[0], tileSize[1]);\n      gl.texImage2D(TEXTURE_2D, 0,\n        RGBA, RGBA,\n        UNSIGNED_BYTE, clipTileCanvas);\n    } else {\n      gl.texImage2D(TEXTURE_2D, 0,\n        RGBA, RGBA,\n        UNSIGNED_BYTE, tile.getImage());\n    }\n    gl.texParameteri(\n      TEXTURE_2D, TEXTURE_MAG_FILTER, magFilter);\n    gl.texParameteri(\n      TEXTURE_2D, TEXTURE_MIN_FILTER, minFilter);\n    gl.texParameteri(TEXTURE_2D, TEXTURE_WRAP_S,\n      CLAMP_TO_EDGE);\n    gl.texParameteri(TEXTURE_2D, TEXTURE_WRAP_T,\n      CLAMP_TO_EDGE);\n    this.textureCache_.set(tileKey, {\n      texture: texture,\n      magFilter: magFilter,\n      minFilter: minFilter\n    });\n  }\n};\n\n\n/**\n * @param {module:ol/render/EventType} type Event type.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @private\n */\nWebGLMapRenderer.prototype.dispatchComposeEvent_ = function(type, frameState) {\n  const map = this.getMap();\n  if (map.hasListener(type)) {\n    const context = this.context_;\n\n    const extent = frameState.extent;\n    const size = frameState.size;\n    const viewState = frameState.viewState;\n    const pixelRatio = frameState.pixelRatio;\n\n    const resolution = viewState.resolution;\n    const center = viewState.center;\n    const rotation = viewState.rotation;\n\n    const vectorContext = new WebGLImmediateRenderer(context,\n      center, resolution, rotation, size, extent, pixelRatio);\n    const composeEvent = new RenderEvent(type, vectorContext,\n      frameState, null, context);\n    map.dispatchEvent(composeEvent);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLMapRenderer.prototype.disposeInternal = function() {\n  const gl = this.getGL();\n  if (!gl.isContextLost()) {\n    this.textureCache_.forEach(\n      /**\n       * @param {?module:ol/renderer/webgl/Map~TextureCacheEntry} textureCacheEntry\n       *     Texture cache entry.\n       */\n      function(textureCacheEntry) {\n        if (textureCacheEntry) {\n          gl.deleteTexture(textureCacheEntry.texture);\n        }\n      });\n  }\n  this.context_.dispose();\n  MapRenderer.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @param {module:ol/PluggableMap} map Map.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @private\n */\nWebGLMapRenderer.prototype.expireCache_ = function(map, frameState) {\n  const gl = this.getGL();\n  let textureCacheEntry;\n  while (this.textureCache_.getCount() - this.textureCacheFrameMarkerCount_ >\n      WEBGL_TEXTURE_CACHE_HIGH_WATER_MARK) {\n    textureCacheEntry = this.textureCache_.peekLast();\n    if (!textureCacheEntry) {\n      if (+this.textureCache_.peekLastKey() == frameState.index) {\n        break;\n      } else {\n        --this.textureCacheFrameMarkerCount_;\n      }\n    } else {\n      gl.deleteTexture(textureCacheEntry.texture);\n    }\n    this.textureCache_.pop();\n  }\n};\n\n\n/**\n * @return {module:ol/webgl/Context} The context.\n */\nWebGLMapRenderer.prototype.getContext = function() {\n  return this.context_;\n};\n\n\n/**\n * @return {WebGLRenderingContext} GL.\n */\nWebGLMapRenderer.prototype.getGL = function() {\n  return this.gl_;\n};\n\n\n/**\n * @return {module:ol/structs/PriorityQueue.<Array>} Tile texture queue.\n */\nWebGLMapRenderer.prototype.getTileTextureQueue = function() {\n  return this.tileTextureQueue_;\n};\n\n\n/**\n * @param {module:ol/events/Event} event Event.\n * @protected\n */\nWebGLMapRenderer.prototype.handleWebGLContextLost = function(event) {\n  event.preventDefault();\n  this.textureCache_.clear();\n  this.textureCacheFrameMarkerCount_ = 0;\n\n  const renderers = this.getLayerRenderers();\n  for (const id in renderers) {\n    const renderer = /** @type {module:ol/renderer/webgl/Layer} */ (renderers[id]);\n    renderer.handleWebGLContextLost();\n  }\n};\n\n\n/**\n * @protected\n */\nWebGLMapRenderer.prototype.handleWebGLContextRestored = function() {\n  this.initializeGL_();\n  this.getMap().render();\n};\n\n\n/**\n * @private\n */\nWebGLMapRenderer.prototype.initializeGL_ = function() {\n  const gl = this.gl_;\n  gl.activeTexture(TEXTURE0);\n  gl.blendFuncSeparate(\n    SRC_ALPHA, ONE_MINUS_SRC_ALPHA,\n    ONE, ONE_MINUS_SRC_ALPHA);\n  gl.disable(CULL_FACE);\n  gl.disable(DEPTH_TEST);\n  gl.disable(SCISSOR_TEST);\n  gl.disable(STENCIL_TEST);\n};\n\n\n/**\n * @param {module:ol/Tile} tile Tile.\n * @return {boolean} Is tile texture loaded.\n */\nWebGLMapRenderer.prototype.isTileTextureLoaded = function(tile) {\n  return this.textureCache_.containsKey(tile.getKey());\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLMapRenderer.prototype.renderFrame = function(frameState) {\n\n  const context = this.getContext();\n  const gl = this.getGL();\n\n  if (gl.isContextLost()) {\n    return false;\n  }\n\n  if (!frameState) {\n    if (this.renderedVisible_) {\n      this.canvas_.style.display = 'none';\n      this.renderedVisible_ = false;\n    }\n    return false;\n  }\n\n  this.focus_ = frameState.focus;\n\n  this.textureCache_.set((-frameState.index).toString(), null);\n  ++this.textureCacheFrameMarkerCount_;\n\n  this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, frameState);\n\n  /** @type {Array.<module:ol/layer/Layer~State>} */\n  const layerStatesToDraw = [];\n  const layerStatesArray = frameState.layerStatesArray;\n  stableSort(layerStatesArray, sortByZIndex);\n\n  const viewResolution = frameState.viewState.resolution;\n  let i, ii, layerRenderer, layerState;\n  for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n    layerState = layerStatesArray[i];\n    if (visibleAtResolution(layerState, viewResolution) &&\n        layerState.sourceState == SourceState.READY) {\n      layerRenderer = /** @type {module:ol/renderer/webgl/Layer} */ (this.getLayerRenderer(layerState.layer));\n      if (layerRenderer.prepareFrame(frameState, layerState, context)) {\n        layerStatesToDraw.push(layerState);\n      }\n    }\n  }\n\n  const width = frameState.size[0] * frameState.pixelRatio;\n  const height = frameState.size[1] * frameState.pixelRatio;\n  if (this.canvas_.width != width || this.canvas_.height != height) {\n    this.canvas_.width = width;\n    this.canvas_.height = height;\n  }\n\n  gl.bindFramebuffer(FRAMEBUFFER, null);\n\n  gl.clearColor(0, 0, 0, 0);\n  gl.clear(COLOR_BUFFER_BIT);\n  gl.enable(BLEND);\n  gl.viewport(0, 0, this.canvas_.width, this.canvas_.height);\n\n  for (i = 0, ii = layerStatesToDraw.length; i < ii; ++i) {\n    layerState = layerStatesToDraw[i];\n    layerRenderer = /** @type {module:ol/renderer/webgl/Layer} */ (this.getLayerRenderer(layerState.layer));\n    layerRenderer.composeFrame(frameState, layerState, context);\n  }\n\n  if (!this.renderedVisible_) {\n    this.canvas_.style.display = '';\n    this.renderedVisible_ = true;\n  }\n\n  this.calculateMatrices2D(frameState);\n\n  if (this.textureCache_.getCount() - this.textureCacheFrameMarkerCount_ >\n      WEBGL_TEXTURE_CACHE_HIGH_WATER_MARK) {\n    frameState.postRenderFunctions.push(\n      /** @type {module:ol/PluggableMap~PostRenderFunction} */ (this.expireCache_.bind(this))\n    );\n  }\n\n  if (!this.tileTextureQueue_.isEmpty()) {\n    frameState.postRenderFunctions.push(this.loadNextTileTexture_);\n    frameState.animate = true;\n  }\n\n  this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, frameState);\n\n  this.scheduleRemoveUnusedLayerRenderers(frameState);\n  this.scheduleExpireIconCache(frameState);\n\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLMapRenderer.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg,\n  layerFilter, thisArg2) {\n  let result;\n\n  if (this.getGL().isContextLost()) {\n    return false;\n  }\n\n  const viewState = frameState.viewState;\n\n  const layerStates = frameState.layerStatesArray;\n  const numLayers = layerStates.length;\n  let i;\n  for (i = numLayers - 1; i >= 0; --i) {\n    const layerState = layerStates[i];\n    const layer = layerState.layer;\n    if (visibleAtResolution(layerState, viewState.resolution) &&\n        layerFilter.call(thisArg2, layer)) {\n      const layerRenderer = this.getLayerRenderer(layer);\n      result = layerRenderer.forEachFeatureAtCoordinate(\n        coordinate, frameState, hitTolerance, callback, thisArg);\n      if (result) {\n        return result;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLMapRenderer.prototype.hasFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n  let hasFeature = false;\n\n  if (this.getGL().isContextLost()) {\n    return false;\n  }\n\n  const viewState = frameState.viewState;\n\n  const layerStates = frameState.layerStatesArray;\n  const numLayers = layerStates.length;\n  let i;\n  for (i = numLayers - 1; i >= 0; --i) {\n    const layerState = layerStates[i];\n    const layer = layerState.layer;\n    if (visibleAtResolution(layerState, viewState.resolution) &&\n        layerFilter.call(thisArg, layer)) {\n      const layerRenderer = this.getLayerRenderer(layer);\n      hasFeature =\n          layerRenderer.hasFeatureAtCoordinate(coordinate, frameState);\n      if (hasFeature) {\n        return true;\n      }\n    }\n  }\n  return hasFeature;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLMapRenderer.prototype.forEachLayerAtPixel = function(pixel, frameState, callback, thisArg,\n  layerFilter, thisArg2) {\n  if (this.getGL().isContextLost()) {\n    return false;\n  }\n\n  const viewState = frameState.viewState;\n  let result;\n\n  const layerStates = frameState.layerStatesArray;\n  const numLayers = layerStates.length;\n  let i;\n  for (i = numLayers - 1; i >= 0; --i) {\n    const layerState = layerStates[i];\n    const layer = layerState.layer;\n    if (visibleAtResolution(layerState, viewState.resolution) &&\n        layerFilter.call(thisArg, layer)) {\n      const layerRenderer = /** @type {module:ol/renderer/webgl/Layer} */ (this.getLayerRenderer(layer));\n      result = layerRenderer.forEachLayerAtPixel(\n        pixel, frameState, callback, thisArg);\n      if (result) {\n        return result;\n      }\n    }\n  }\n  return undefined;\n};\n\nexport default WebGLMapRenderer;\n","/**\n * @module ol/renderer/webgl/tilelayershader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG_WEBGL} from '../../index.js';\nimport WebGLFragment from '../../webgl/Fragment.js';\nimport WebGLVertex from '../../webgl/Vertex.js';\n\nexport const fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_texCoord;\\n\\n\\nuniform sampler2D u_texture;\\n\\nvoid main(void) {\\n  gl_FragColor = texture2D(u_texture, v_texCoord);\\n}\\n' :\n  'precision mediump float;varying vec2 a;uniform sampler2D e;void main(void){gl_FragColor=texture2D(e,a);}');\n\nexport const vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying vec2 v_texCoord;\\n\\n\\nattribute vec2 a_position;\\nattribute vec2 a_texCoord;\\nuniform vec4 u_tileOffset;\\n\\nvoid main(void) {\\n  gl_Position = vec4(a_position * u_tileOffset.xy + u_tileOffset.zw, 0., 1.);\\n  v_texCoord = a_texCoord;\\n}\\n\\n\\n' :\n  'varying vec2 a;attribute vec2 b;attribute vec2 c;uniform vec4 d;void main(void){gl_Position=vec4(b*d.xy+d.zw,0.,1.);a=c;}');\n","/**\n * @module ol/renderer/webgl/tilelayershader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG_WEBGL} from '../../../index.js';\n\n/**\n * @constructor\n * @param {WebGLRenderingContext} gl GL.\n * @param {WebGLProgram} program Program.\n * @struct\n */\nconst Locations = function(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_tileOffset = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_tileOffset' : 'd');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_texture = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_texture' : 'e');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'b');\n\n  /**\n   * @type {number}\n   */\n  this.a_texCoord = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_texCoord' : 'c');\n};\n\nexport default Locations;\n","/**\n * @module ol/renderer/webgl/TileLayer\n */\n// FIXME large resolutions lead to too large framebuffers :-(\n// FIXME animated shaders! check in redraw\n\nimport {inherits} from '../../index.js';\nimport LayerType from '../../LayerType.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {createEmpty, intersects} from '../../extent.js';\nimport {roundUpToPowerOfTwo} from '../../math.js';\nimport WebGLLayerRenderer from '../webgl/Layer.js';\nimport {fragment, vertex} from '../webgl/tilelayershader.js';\nimport Locations from '../webgl/tilelayershader/Locations.js';\nimport {toSize} from '../../size.js';\nimport {\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n  translate as translateTransform,\n  apply as applyTransform\n} from '../../transform.js';\nimport {COLOR_BUFFER_BIT, BLEND, ARRAY_BUFFER, FLOAT, LINEAR, TRIANGLE_STRIP} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n/**\n * @constructor\n * @extends {module:ol/renderer/webgl/Layer}\n * @param {module:ol/renderer/webgl/Map} mapRenderer Map renderer.\n * @param {module:ol/layer/Tile} tileLayer Tile layer.\n * @api\n */\nconst WebGLTileLayerRenderer = function(mapRenderer, tileLayer) {\n\n  WebGLLayerRenderer.call(this, mapRenderer, tileLayer);\n\n  /**\n   * @private\n   * @type {module:ol/webgl/Fragment}\n   */\n  this.fragmentShader_ = fragment;\n\n  /**\n   * @private\n   * @type {module:ol/webgl/Vertex}\n   */\n  this.vertexShader_ = vertex;\n\n  /**\n   * @private\n   * @type {module:ol/renderer/webgl/tilelayershader/Locations}\n   */\n  this.locations_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/webgl/Buffer}\n   */\n  this.renderArrayBuffer_ = new WebGLBuffer([\n    0, 0, 0, 1,\n    1, 0, 1, 1,\n    0, 1, 0, 0,\n    1, 1, 1, 0\n  ]);\n\n  /**\n   * @private\n   * @type {module:ol/TileRange}\n   */\n  this.renderedTileRange_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.renderedFramebufferExtent_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.tmpSize_ = [0, 0];\n\n};\n\ninherits(WebGLTileLayerRenderer, WebGLLayerRenderer);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nWebGLTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/webgl/TileLayer} The layer renderer.\n */\nWebGLTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new WebGLTileLayerRenderer(\n    /** @type {module:ol/renderer/webgl/Map} */ (mapRenderer),\n    /** @type {module:ol/layer/Tile} */ (layer)\n  );\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTileLayerRenderer.prototype.disposeInternal = function() {\n  const context = this.mapRenderer.getContext();\n  context.deleteBuffer(this.renderArrayBuffer_);\n  WebGLLayerRenderer.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTileLayerRenderer.prototype.createLoadedTileFinder = function(source, projection, tiles) {\n  const mapRenderer = this.mapRenderer;\n\n  return (\n    /**\n     * @param {number} zoom Zoom level.\n     * @param {module:ol/TileRange} tileRange Tile range.\n     * @return {boolean} The tile range is fully loaded.\n     */\n    function(zoom, tileRange) {\n      function callback(tile) {\n        const loaded = mapRenderer.isTileTextureLoaded(tile);\n        if (loaded) {\n          if (!tiles[zoom]) {\n            tiles[zoom] = {};\n          }\n          tiles[zoom][tile.tileCoord.toString()] = tile;\n        }\n        return loaded;\n      }\n      return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n    }\n  );\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTileLayerRenderer.prototype.handleWebGLContextLost = function() {\n  WebGLLayerRenderer.prototype.handleWebGLContextLost.call(this);\n  this.locations_ = null;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTileLayerRenderer.prototype.prepareFrame = function(frameState, layerState, context) {\n\n  const mapRenderer = this.mapRenderer;\n  const gl = context.getGL();\n\n  const viewState = frameState.viewState;\n  const projection = viewState.projection;\n\n  const tileLayer = /** @type {module:ol/layer/Tile} */ (this.getLayer());\n  const tileSource = tileLayer.getSource();\n  const tileGrid = tileSource.getTileGridForProjection(projection);\n  const z = tileGrid.getZForResolution(viewState.resolution);\n  const tileResolution = tileGrid.getResolution(z);\n\n  const tilePixelSize =\n      tileSource.getTilePixelSize(z, frameState.pixelRatio, projection);\n  const pixelRatio = tilePixelSize[0] /\n      toSize(tileGrid.getTileSize(z), this.tmpSize_)[0];\n  const tilePixelResolution = tileResolution / pixelRatio;\n  const tileGutter = tileSource.getTilePixelRatio(pixelRatio) * tileSource.getGutter(projection);\n\n  const center = viewState.center;\n  const extent = frameState.extent;\n  const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n  let framebufferExtent;\n  if (this.renderedTileRange_ &&\n      this.renderedTileRange_.equals(tileRange) &&\n      this.renderedRevision_ == tileSource.getRevision()) {\n    framebufferExtent = this.renderedFramebufferExtent_;\n  } else {\n\n    const tileRangeSize = tileRange.getSize();\n\n    const maxDimension = Math.max(\n      tileRangeSize[0] * tilePixelSize[0],\n      tileRangeSize[1] * tilePixelSize[1]);\n    const framebufferDimension = roundUpToPowerOfTwo(maxDimension);\n    const framebufferExtentDimension = tilePixelResolution * framebufferDimension;\n    const origin = tileGrid.getOrigin(z);\n    const minX = origin[0] +\n        tileRange.minX * tilePixelSize[0] * tilePixelResolution;\n    const minY = origin[1] +\n        tileRange.minY * tilePixelSize[1] * tilePixelResolution;\n    framebufferExtent = [\n      minX, minY,\n      minX + framebufferExtentDimension, minY + framebufferExtentDimension\n    ];\n\n    this.bindFramebuffer(frameState, framebufferDimension);\n    gl.viewport(0, 0, framebufferDimension, framebufferDimension);\n\n    gl.clearColor(0, 0, 0, 0);\n    gl.clear(COLOR_BUFFER_BIT);\n    gl.disable(BLEND);\n\n    const program = context.getProgram(this.fragmentShader_, this.vertexShader_);\n    context.useProgram(program);\n    if (!this.locations_) {\n      this.locations_ = new Locations(gl, program);\n    }\n\n    context.bindBuffer(ARRAY_BUFFER, this.renderArrayBuffer_);\n    gl.enableVertexAttribArray(this.locations_.a_position);\n    gl.vertexAttribPointer(\n      this.locations_.a_position, 2, FLOAT, false, 16, 0);\n    gl.enableVertexAttribArray(this.locations_.a_texCoord);\n    gl.vertexAttribPointer(\n      this.locations_.a_texCoord, 2, FLOAT, false, 16, 8);\n    gl.uniform1i(this.locations_.u_texture, 0);\n\n    /**\n     * @type {Object.<number, Object.<string, module:ol/Tile>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource, projection, tilesToDrawByZ);\n\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    let allTilesLoaded = true;\n    const tmpExtent = createEmpty();\n    const tmpTileRange = new TileRange(0, 0, 0, 0);\n    let childTileRange, drawable, fullyLoaded, tile, tileState;\n    let x, y, tileExtent;\n    for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n\n        tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n        if (layerState.extent !== undefined) {\n          // ignore tiles outside layer extent\n          tileExtent = tileGrid.getTileCoordExtent(tile.tileCoord, tmpExtent);\n          if (!intersects(tileExtent, layerState.extent)) {\n            continue;\n          }\n        }\n        tileState = tile.getState();\n        drawable = tileState == TileState.LOADED ||\n            tileState == TileState.EMPTY ||\n            tileState == TileState.ERROR && !useInterimTilesOnError;\n        if (!drawable) {\n          tile = tile.getInterimTile();\n        }\n        tileState = tile.getState();\n        if (tileState == TileState.LOADED) {\n          if (mapRenderer.isTileTextureLoaded(tile)) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            continue;\n          }\n        } else if (tileState == TileState.EMPTY ||\n                   (tileState == TileState.ERROR &&\n                    !useInterimTilesOnError)) {\n          continue;\n        }\n\n        allTilesLoaded = false;\n        fullyLoaded = tileGrid.forEachTileCoordParentTileRange(\n          tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n        if (!fullyLoaded) {\n          childTileRange = tileGrid.getTileCoordChildTileRange(\n            tile.tileCoord, tmpTileRange, tmpExtent);\n          if (childTileRange) {\n            findLoadedTiles(z + 1, childTileRange);\n          }\n        }\n\n      }\n\n    }\n\n    /** @type {Array.<number>} */\n    const zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n    const u_tileOffset = new Float32Array(4);\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      const tilesToDraw = tilesToDrawByZ[zs[i]];\n      for (const tileKey in tilesToDraw) {\n        tile = tilesToDraw[tileKey];\n        tileExtent = tileGrid.getTileCoordExtent(tile.tileCoord, tmpExtent);\n        u_tileOffset[0] = 2 * (tileExtent[2] - tileExtent[0]) /\n            framebufferExtentDimension;\n        u_tileOffset[1] = 2 * (tileExtent[3] - tileExtent[1]) /\n            framebufferExtentDimension;\n        u_tileOffset[2] = 2 * (tileExtent[0] - framebufferExtent[0]) /\n            framebufferExtentDimension - 1;\n        u_tileOffset[3] = 2 * (tileExtent[1] - framebufferExtent[1]) /\n            framebufferExtentDimension - 1;\n        gl.uniform4fv(this.locations_.u_tileOffset, u_tileOffset);\n        mapRenderer.bindTileTexture(tile, tilePixelSize,\n          tileGutter * pixelRatio, LINEAR, LINEAR);\n        gl.drawArrays(TRIANGLE_STRIP, 0, 4);\n      }\n    }\n\n    if (allTilesLoaded) {\n      this.renderedTileRange_ = tileRange;\n      this.renderedFramebufferExtent_ = framebufferExtent;\n      this.renderedRevision_ = tileSource.getRevision();\n    } else {\n      this.renderedTileRange_ = null;\n      this.renderedFramebufferExtent_ = null;\n      this.renderedRevision_ = -1;\n      frameState.animate = true;\n    }\n\n  }\n\n  this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n  const tileTextureQueue = mapRenderer.getTileTextureQueue();\n  this.manageTilePyramid(\n    frameState, tileSource, tileGrid, pixelRatio, projection, extent, z,\n    tileLayer.getPreload(),\n    /**\n     * @param {module:ol/Tile} tile Tile.\n     */\n    function(tile) {\n      if (tile.getState() == TileState.LOADED &&\n            !mapRenderer.isTileTextureLoaded(tile) &&\n            !tileTextureQueue.isKeyQueued(tile.getKey())) {\n        tileTextureQueue.enqueue([\n          tile,\n          tileGrid.getTileCoordCenter(tile.tileCoord),\n          tileGrid.getResolution(tile.tileCoord[0]),\n          tilePixelSize, tileGutter * pixelRatio\n        ]);\n      }\n    }, this);\n  this.scheduleExpireCache(frameState, tileSource);\n\n  const texCoordMatrix = this.texCoordMatrix;\n  resetTransform(texCoordMatrix);\n  translateTransform(texCoordMatrix,\n    (Math.round(center[0] / tileResolution) * tileResolution - framebufferExtent[0]) /\n          (framebufferExtent[2] - framebufferExtent[0]),\n    (Math.round(center[1] / tileResolution) * tileResolution - framebufferExtent[1]) /\n          (framebufferExtent[3] - framebufferExtent[1]));\n  if (viewState.rotation !== 0) {\n    rotateTransform(texCoordMatrix, viewState.rotation);\n  }\n  scaleTransform(texCoordMatrix,\n    frameState.size[0] * viewState.resolution /\n          (framebufferExtent[2] - framebufferExtent[0]),\n    frameState.size[1] * viewState.resolution /\n          (framebufferExtent[3] - framebufferExtent[1]));\n  translateTransform(texCoordMatrix, -0.5, -0.5);\n\n  return true;\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLTileLayerRenderer.prototype.forEachLayerAtPixel = function(pixel, frameState, callback, thisArg) {\n  if (!this.framebuffer) {\n    return undefined;\n  }\n\n  const pixelOnMapScaled = [\n    pixel[0] / frameState.size[0],\n    (frameState.size[1] - pixel[1]) / frameState.size[1]];\n\n  const pixelOnFrameBufferScaled = applyTransform(\n    this.texCoordMatrix, pixelOnMapScaled.slice());\n  const pixelOnFrameBuffer = [\n    pixelOnFrameBufferScaled[0] * this.framebufferDimension,\n    pixelOnFrameBufferScaled[1] * this.framebufferDimension];\n\n  const gl = this.mapRenderer.getContext().getGL();\n  gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n  const imageData = new Uint8Array(4);\n  gl.readPixels(pixelOnFrameBuffer[0], pixelOnFrameBuffer[1], 1, 1,\n    gl.RGBA, gl.UNSIGNED_BYTE, imageData);\n\n  if (imageData[3] > 0) {\n    return callback.call(thisArg, this.getLayer(), imageData);\n  } else {\n    return undefined;\n  }\n};\nexport default WebGLTileLayerRenderer;\n","/**\n * @module ol/renderer/webgl/VectorLayer\n */\nimport {getUid, inherits} from '../../index.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {buffer, containsExtent, createEmpty} from '../../extent.js';\nimport WebGLReplayGroup from '../../render/webgl/ReplayGroup.js';\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\nimport WebGLLayerRenderer from '../webgl/Layer.js';\nimport {apply as applyTransform} from '../../transform.js';\n\n/**\n * @constructor\n * @extends {module:ol/renderer/webgl/Layer}\n * @param {module:ol/renderer/webgl/Map} mapRenderer Map renderer.\n * @param {module:ol/layer/Vector} vectorLayer Vector layer.\n * @api\n */\nconst WebGLVectorLayerRenderer = function(mapRenderer, vectorLayer) {\n\n  WebGLLayerRenderer.call(this, mapRenderer, vectorLayer);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.dirty_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedResolution_ = NaN;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.renderedExtent_ = createEmpty();\n\n  /**\n   * @private\n   * @type {function(module:ol/Feature, module:ol/Feature): number|null}\n   */\n  this.renderedRenderOrder_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/render/webgl/ReplayGroup}\n   */\n  this.replayGroup_ = null;\n\n  /**\n   * The last layer state.\n   * @private\n   * @type {?module:ol/layer/Layer~State}\n   */\n  this.layerState_ = null;\n\n};\n\ninherits(WebGLVectorLayerRenderer, WebGLLayerRenderer);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nWebGLVectorLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/webgl/VectorLayer} The layer renderer.\n */\nWebGLVectorLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new WebGLVectorLayerRenderer(\n    /** @type {module:ol/renderer/webgl/Map} */ (mapRenderer),\n    /** @type {module:ol/layer/Vector} */ (layer)\n  );\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLVectorLayerRenderer.prototype.composeFrame = function(frameState, layerState, context) {\n  this.layerState_ = layerState;\n  const viewState = frameState.viewState;\n  const replayGroup = this.replayGroup_;\n  const size = frameState.size;\n  const pixelRatio = frameState.pixelRatio;\n  const gl = this.mapRenderer.getGL();\n  if (replayGroup && !replayGroup.isEmpty()) {\n    gl.enable(gl.SCISSOR_TEST);\n    gl.scissor(0, 0, size[0] * pixelRatio, size[1] * pixelRatio);\n    replayGroup.replay(context,\n      viewState.center, viewState.resolution, viewState.rotation,\n      size, pixelRatio, layerState.opacity,\n      layerState.managed ? frameState.skippedFeatureUids : {});\n    gl.disable(gl.SCISSOR_TEST);\n  }\n\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLVectorLayerRenderer.prototype.disposeInternal = function() {\n  const replayGroup = this.replayGroup_;\n  if (replayGroup) {\n    const context = this.mapRenderer.getContext();\n    replayGroup.getDeleteResourcesFunction(context)();\n    this.replayGroup_ = null;\n  }\n  WebGLLayerRenderer.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  if (!this.replayGroup_ || !this.layerState_) {\n    return undefined;\n  } else {\n    const context = this.mapRenderer.getContext();\n    const viewState = frameState.viewState;\n    const layer = this.getLayer();\n    const layerState = this.layerState_;\n    /** @type {!Object.<string, boolean>} */\n    const features = {};\n    return this.replayGroup_.forEachFeatureAtCoordinate(coordinate,\n      context, viewState.center, viewState.resolution, viewState.rotation,\n      frameState.size, frameState.pixelRatio, layerState.opacity,\n      {},\n      /**\n       * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n       * @return {?} Callback result.\n       */\n      function(feature) {\n        const key = getUid(feature).toString();\n        if (!(key in features)) {\n          features[key] = true;\n          return callback.call(thisArg, feature, layer);\n        }\n      });\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLVectorLayerRenderer.prototype.hasFeatureAtCoordinate = function(coordinate, frameState) {\n  if (!this.replayGroup_ || !this.layerState_) {\n    return false;\n  } else {\n    const context = this.mapRenderer.getContext();\n    const viewState = frameState.viewState;\n    const layerState = this.layerState_;\n    return this.replayGroup_.hasFeatureAtCoordinate(coordinate,\n      context, viewState.center, viewState.resolution, viewState.rotation,\n      frameState.size, frameState.pixelRatio, layerState.opacity,\n      frameState.skippedFeatureUids);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLVectorLayerRenderer.prototype.forEachLayerAtPixel = function(pixel, frameState, callback, thisArg) {\n  const coordinate = applyTransform(\n    frameState.pixelToCoordinateTransform, pixel.slice());\n  const hasFeature = this.hasFeatureAtCoordinate(coordinate, frameState);\n\n  if (hasFeature) {\n    return callback.call(thisArg, this.getLayer(), null);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * Handle changes in image style state.\n * @param {module:ol/events/Event} event Image style change event.\n * @private\n */\nWebGLVectorLayerRenderer.prototype.handleStyleImageChange_ = function(event) {\n  this.renderIfReadyAndVisible();\n};\n\n\n/**\n * @inheritDoc\n */\nWebGLVectorLayerRenderer.prototype.prepareFrame = function(frameState, layerState, context) {\n  const vectorLayer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n  const vectorSource = vectorLayer.getSource();\n\n  const animating = frameState.viewHints[ViewHint.ANIMATING];\n  const interacting = frameState.viewHints[ViewHint.INTERACTING];\n  const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n  const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n  if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)) {\n    return true;\n  }\n\n  const frameStateExtent = frameState.extent;\n  const viewState = frameState.viewState;\n  const projection = viewState.projection;\n  const resolution = viewState.resolution;\n  const pixelRatio = frameState.pixelRatio;\n  const vectorLayerRevision = vectorLayer.getRevision();\n  const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n  let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n  if (vectorLayerRenderOrder === undefined) {\n    vectorLayerRenderOrder = defaultRenderOrder;\n  }\n\n  const extent = buffer(frameStateExtent,\n    vectorLayerRenderBuffer * resolution);\n\n  if (!this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.renderedExtent_, extent)) {\n    return true;\n  }\n\n  if (this.replayGroup_) {\n    frameState.postRenderFunctions.push(\n      this.replayGroup_.getDeleteResourcesFunction(context));\n  }\n\n  this.dirty_ = false;\n\n  const replayGroup = new WebGLReplayGroup(\n    getRenderTolerance(resolution, pixelRatio),\n    extent, vectorLayer.getRenderBuffer());\n  vectorSource.loadFeatures(extent, resolution, projection);\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @this {module:ol/renderer/webgl/VectorLayer}\n   */\n  const render = function(feature) {\n    let styles;\n    const styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n    if (styleFunction) {\n      styles = styleFunction(feature, resolution);\n    }\n    if (styles) {\n      const dirty = this.renderFeature(\n        feature, resolution, pixelRatio, styles, replayGroup);\n      this.dirty_ = this.dirty_ || dirty;\n    }\n  };\n  if (vectorLayerRenderOrder) {\n    /** @type {Array.<module:ol/Feature>} */\n    const features = [];\n    vectorSource.forEachFeatureInExtent(extent,\n      /**\n       * @param {module:ol/Feature} feature Feature.\n       */\n      function(feature) {\n        features.push(feature);\n      }, this);\n    features.sort(vectorLayerRenderOrder);\n    features.forEach(render.bind(this));\n  } else {\n    vectorSource.forEachFeatureInExtent(extent, render, this);\n  }\n  replayGroup.finish(context);\n\n  this.renderedResolution_ = resolution;\n  this.renderedRevision_ = vectorLayerRevision;\n  this.renderedRenderOrder_ = vectorLayerRenderOrder;\n  this.renderedExtent_ = extent;\n  this.replayGroup_ = replayGroup;\n\n  return true;\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {(module:ol/style/Style|Array.<module:ol/style/Style>)} styles The style or array of\n *     styles.\n * @param {module:ol/render/webgl/ReplayGroup} replayGroup Replay group.\n * @return {boolean} `true` if an image is loading.\n */\nWebGLVectorLayerRenderer.prototype.renderFeature = function(feature, resolution, pixelRatio, styles, replayGroup) {\n  if (!styles) {\n    return false;\n  }\n  let loading = false;\n  if (Array.isArray(styles)) {\n    for (let i = styles.length - 1, ii = 0; i >= ii; --i) {\n      loading = renderFeature(\n        replayGroup, feature, styles[i],\n        getSquaredRenderTolerance(resolution, pixelRatio),\n        this.handleStyleImageChange_, this) || loading;\n    }\n  } else {\n    loading = renderFeature(\n      replayGroup, feature, styles,\n      getSquaredRenderTolerance(resolution, pixelRatio),\n      this.handleStyleImageChange_, this) || loading;\n  }\n  return loading;\n};\nexport default WebGLVectorLayerRenderer;\n","/**\n * @module ol/WebGLMap\n */\nimport {inherits} from './index.js';\nimport PluggableMap from './PluggableMap.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\nimport {assign} from './obj.js';\nimport WebGLImageLayerRenderer from './renderer/webgl/ImageLayer.js';\nimport WebGLMapRenderer from './renderer/webgl/Map.js';\nimport WebGLTileLayerRenderer from './renderer/webgl/TileLayer.js';\nimport WebGLVectorLayerRenderer from './renderer/webgl/VectorLayer.js';\n\n\n/**\n * @classdesc\n * The WebGLMap uses WebGL for rendering map layers.  This renderer has limited\n * support for vector data and no support for vector tiles.\n *\n *     import WebGLMap from 'ol/WebGLMap';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *     import View from 'ol/View';\n *\n *     var map = new WebGLMap({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`.\n * Note that {@link module:ol/layer/Group~Group} is a subclass of\n * {@link module:ol/layer/Base}, so layers entered in the options or added\n * with `addLayer` can be groups, which can contain further groups, and so on.\n *\n * @constructor\n * @extends {module:ol/PluggableMap}\n * @param {module:ol/PluggableMap~MapOptions} options Map options.\n * @fires module:ol/MapBrowserEvent~MapBrowserEvent\n * @fires module:ol/MapEvent~MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nconst WebGLMap = function(options) {\n  options = assign({}, options);\n  if (!options.controls) {\n    options.controls = defaultControls();\n  }\n  if (!options.interactions) {\n    options.interactions = defaultInteractions();\n  }\n\n  PluggableMap.call(this, options);\n};\n\ninherits(WebGLMap, PluggableMap);\n\n\nWebGLMap.prototype.createRenderer = function() {\n  const renderer = new WebGLMapRenderer(this);\n  renderer.registerLayerRenderers([\n    WebGLImageLayerRenderer,\n    WebGLTileLayerRenderer,\n    WebGLVectorLayerRenderer\n  ]);\n  return renderer;\n};\n\nexport default WebGLMap;\n","/**\n * @module ol/style/Text\n */\nimport Fill from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font}. Default is '10px sans-serif'\n * @property {number} [maxAngle] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {module:ol/style/TextPlacement|string} [placement] Text placement.\n * @property {number} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {module:ol/style/Fill} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {module:ol/style/Fill} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {module:ol/style/Stroke} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array.<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {module:ol/style/Text~Options=} opt_options Options.\n * @api\n */\nconst Text = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {module:ol/style/Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: DEFAULT_FILL_COLOR});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {module:ol/style/TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = !!options.overflow;\n\n  /**\n   * @private\n   * @type {module:ol/style/Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {module:ol/style/Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * Clones the style.\n * @return {module:ol/style/Text} The cloned style.\n * @api\n */\nText.prototype.clone = function() {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\nText.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\nText.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\nText.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {module:ol/style/TextPlacement|string} Text placement.\n * @api\n */\nText.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\nText.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\nText.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {module:ol/style/Fill} Fill style.\n * @api\n */\nText.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\nText.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\nText.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\nText.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {module:ol/style/Stroke} Stroke style.\n * @api\n */\nText.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\nText.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\nText.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\nText.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {module:ol/style/Fill} Fill style.\n * @api\n */\nText.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {module:ol/style/Stroke} Stroke style.\n * @api\n */\nText.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\nText.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\nText.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\nText.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\nText.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\nText.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\nText.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {module:ol/style/TextPlacement|string} placement Placement.\n * @api\n */\nText.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {module:ol/style/Fill} fill Fill style.\n * @api\n */\nText.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\nText.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\nText.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {module:ol/style/Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\nText.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\nText.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\nText.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {module:ol/style/Fill} fill Fill style.\n * @api\n */\nText.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {module:ol/style/Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\nText.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default Text;\n","/**\n * @module ol/tilegrid/WMTS\n */\nimport {inherits} from '../index.js';\nimport {find} from '../array.js';\nimport {get as getProjection} from '../proj.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/extent~Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {module:ol/coordinate~Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and upwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array.<module:ol/coordinate~Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and upwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array.<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array.<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array.<module:ol/size~Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define the grid's extent together with the `origin`.\n * An `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. Note that when the top-left corner of\n * the `extent` is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates increase upwards.\n * @property {number|module:ol/size~Size} [tileSize] Tile size.\n * @property {Array.<module:ol/size~Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n * @property {Array.<number>} [widths] Number of tile columns that cover the grid's\n * extent for each zoom level. Only required when used with a source that has `wrapX`\n * set to `true`, and only when the grid's origin differs from the one of the\n * projection's extent. The array length has to match the length of the `resolutions`\n * array, i.e. each resolution will have a matching entry here.\n */\n\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n *\n * @constructor\n * @extends {module:ol/tilegrid/TileGrid}\n * @param {module:ol/tilegrid/WMTS~Options} options WMTS options.\n * @struct\n * @api\n */\nconst WMTSTileGrid = function(options) {\n  /**\n   * @private\n   * @type {!Array.<string>}\n   */\n  this.matrixIds_ = options.matrixIds;\n  // FIXME: should the matrixIds become optional?\n\n  TileGrid.call(this, {\n    extent: options.extent,\n    origin: options.origin,\n    origins: options.origins,\n    resolutions: options.resolutions,\n    tileSize: options.tileSize,\n    tileSizes: options.tileSizes,\n    sizes: options.sizes\n  });\n};\n\ninherits(WMTSTileGrid, TileGrid);\n\n\n/**\n * @param {number} z Z.\n * @return {string} MatrixId..\n */\nWMTSTileGrid.prototype.getMatrixId = function(z) {\n  return this.matrixIds_[z];\n};\n\n\n/**\n * Get the list of matrix identifiers.\n * @return {Array.<string>} MatrixIds.\n * @api\n */\nWMTSTileGrid.prototype.getMatrixIds = function() {\n  return this.matrixIds_;\n};\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {module:ol/extent~Extent=} opt_extent An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array.<Object>=} opt_matrixLimits An optional object representing\n *     the available matrices for tileGrid.\n * @return {module:ol/tilegrid/WMTS} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(matrixSet, opt_extent, opt_matrixLimits) {\n\n  /** @type {!Array.<number>} */\n  const resolutions = [];\n  /** @type {!Array.<string>} */\n  const matrixIds = [];\n  /** @type {!Array.<module:ol/coordinate~Coordinate>} */\n  const origins = [];\n  /** @type {!Array.<module:ol/size~Size>} */\n  const tileSizes = [];\n  /** @type {!Array.<module:ol/size~Size>} */\n  const sizes = [];\n\n  const matrixLimits = opt_matrixLimits !== undefined ? opt_matrixLimits : [];\n\n  const supportedCRSPropName = 'SupportedCRS';\n  const matrixIdsPropName = 'TileMatrix';\n  const identifierPropName = 'Identifier';\n  const scaleDenominatorPropName = 'ScaleDenominator';\n  const topLeftCornerPropName = 'TopLeftCorner';\n  const tileWidthPropName = 'TileWidth';\n  const tileHeightPropName = 'TileHeight';\n\n  const code = matrixSet[supportedCRSPropName];\n  const projection = getProjection(code.replace(/urn:ogc:def:crs:(\\w+):(.*:)?(\\w+)$/, '$1:$3')) ||\n      getProjection(code);\n  const metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  const switchOriginXY = projection.getAxisOrientation().substr(0, 2) == 'ne';\n\n  matrixSet[matrixIdsPropName].sort(function(a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function(elt) {\n\n    let matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = find(matrixLimits, function(elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (elt[identifierPropName].indexOf(':') === -1) {\n          return matrixSet[identifierPropName] + ':' + elt[identifierPropName] === elt_ml[matrixIdsPropName];\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      const resolution = elt[scaleDenominatorPropName] * 0.28E-3 / metersPerUnit;\n      const tileWidth = elt[tileWidthPropName];\n      const tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0]]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(tileWidth == tileHeight ?\n        tileWidth : [tileWidth, tileHeight]);\n      // top-left origin, so height is negative\n      sizes.push([elt['MatrixWidth'], -elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: opt_extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes\n  });\n}\n","/**\n * @module ol/Image\n */\nimport {inherits} from './index.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(module:ol/Image, string)} LoadFunction\n * @api\n */\n\n\n/**\n * @constructor\n * @extends {module:ol/ImageBase}\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/Image~LoadFunction} imageLoadFunction Image load function.\n */\nconst ImageWrapper = function(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n  ImageBase.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|Image|HTMLVideoElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @protected\n   * @type {module:ol/ImageState}\n   */\n  this.state = ImageState.IDLE;\n\n  /**\n   * @private\n   * @type {module:ol/Image~LoadFunction}\n   */\n  this.imageLoadFunction_ = imageLoadFunction;\n\n};\n\ninherits(ImageWrapper, ImageBase);\n\n\n/**\n * @inheritDoc\n * @api\n */\nImageWrapper.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\nImageWrapper.prototype.handleImageError_ = function() {\n  this.state = ImageState.ERROR;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\nImageWrapper.prototype.handleImageLoad_ = function() {\n  if (this.resolution === undefined) {\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n  this.state = ImageState.LOADED;\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @override\n * @api\n */\nImageWrapper.prototype.load = function() {\n  if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.imageLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * @param {HTMLCanvasElement|Image|HTMLVideoElement} image Image.\n */\nImageWrapper.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\nImageWrapper.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/Icon\n */\nimport {getUid, inherits} from '../index.js';\nimport ImageState from '../ImageState.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {listen, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport {get as getIconImage} from '../style/IconImage.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport ImageStyle from '../style/Image.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array.<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {module:ol/style/IconOrigin} [anchorOrigin] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`. Default is `top-left`.\n * @property {module:ol/style/IconAnchorUnits} [anchorXUnits] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels. Default is `'fraction'`.\n * @property {module:ol/style/IconAnchorUnits} [anchorYUnits] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels. Default is `'fraction'`.\n * @property {module:ol/color~Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you are using the WebGL renderer or if you want to access pixel data with the Canvas renderer.\n * See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {Image|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array.<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {module:ol/style/IconOrigin} [offsetOrigin] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`. Default is `top-left`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [scale=1] Scale.\n * @property {boolean} [snapToPixel=true] If `true` integral numbers of pixels are used as the X and Y pixel coordinate\n * when drawing the icon in the output canvas. If `false` fractional numbers may be used. Using `true` allows for\n * \"sharp\" rendering (no blur), while using `false` allows for \"accurate\" rendering. Note that accuracy is important if\n * the icon's position is animated. Without it, the icon may jitter noticeably.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {module:ol/size~Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {module:ol/size~Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n\n/**\n * @classdesc\n * Set icon style for vector features.\n *\n * @constructor\n * @param {module:ol/style/Icon~Options=} opt_options Options.\n * @extends {module:ol/style/Image}\n * @api\n */\nconst Icon = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.normalizedAnchor_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/style/IconOrigin}\n   */\n  this.anchorOrigin_ = options.anchorOrigin !== undefined ?\n    options.anchorOrigin : IconOrigin.TOP_LEFT;\n\n  /**\n   * @private\n   * @type {module:ol/style/IconAnchorUnits}\n   */\n  this.anchorXUnits_ = options.anchorXUnits !== undefined ?\n    options.anchorXUnits : IconAnchorUnits.FRACTION;\n\n  /**\n   * @private\n   * @type {module:ol/style/IconAnchorUnits}\n   */\n  this.anchorYUnits_ = options.anchorYUnits !== undefined ?\n    options.anchorYUnits : IconAnchorUnits.FRACTION;\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @type {Image|HTMLCanvasElement}\n   */\n  const image = options.img !== undefined ? options.img : null;\n\n  /**\n   * @type {module:ol/size~Size}\n   */\n  const imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n  /**\n   * @type {string|undefined}\n   */\n  let src = options.src;\n\n  assert(!(src !== undefined && image),\n    4); // `image` and `src` cannot be provided at the same time\n  assert(!image || (image && imgSize),\n    5); // `imgSize` must be set when `image` is provided\n\n  if ((src === undefined || src.length === 0) && image) {\n    src = image.src || getUid(image).toString();\n  }\n  assert(src !== undefined && src.length > 0,\n    6); // A defined and non-empty `src` or `image` must be provided\n\n  /**\n   * @type {module:ol/ImageState}\n   */\n  const imageState = options.src !== undefined ?\n    ImageState.IDLE : ImageState.LOADED;\n\n  /**\n   * @private\n   * @type {module:ol/color~Color}\n   */\n  this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/IconImage}\n   */\n  this.iconImage_ = getIconImage(\n    image, /** @type {string} */ (src), imgSize, this.crossOrigin_, imageState, this.color_);\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n\n  /**\n   * @private\n   * @type {module:ol/style/IconOrigin}\n   */\n  this.offsetOrigin_ = options.offsetOrigin !== undefined ?\n    options.offsetOrigin : IconOrigin.TOP_LEFT;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.origin_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.size_ = options.size !== undefined ? options.size : null;\n\n  /**\n   * @type {number}\n   */\n  const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n  /**\n   * @type {boolean}\n   */\n  const rotateWithView = options.rotateWithView !== undefined ?\n    options.rotateWithView : false;\n\n  /**\n   * @type {number}\n   */\n  const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n  /**\n   * @type {number}\n   */\n  const scale = options.scale !== undefined ? options.scale : 1;\n\n  /**\n   * @type {boolean}\n   */\n  const snapToPixel = options.snapToPixel !== undefined ?\n    options.snapToPixel : true;\n\n  ImageStyle.call(this, {\n    opacity: opacity,\n    rotation: rotation,\n    scale: scale,\n    snapToPixel: snapToPixel,\n    rotateWithView: rotateWithView\n  });\n\n};\n\ninherits(Icon, ImageStyle);\n\n\n/**\n * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n * @return {module:ol/style/Icon} The cloned style.\n * @api\n */\nIcon.prototype.clone = function() {\n  return new Icon({\n    anchor: this.anchor_.slice(),\n    anchorOrigin: this.anchorOrigin_,\n    anchorXUnits: this.anchorXUnits_,\n    anchorYUnits: this.anchorYUnits_,\n    crossOrigin: this.crossOrigin_,\n    color: (this.color_ && this.color_.slice) ? this.color_.slice() : this.color_ || undefined,\n    src: this.getSrc(),\n    offset: this.offset_.slice(),\n    offsetOrigin: this.offsetOrigin_,\n    size: this.size_ !== null ? this.size_.slice() : undefined,\n    opacity: this.getOpacity(),\n    scale: this.getScale(),\n    snapToPixel: this.getSnapToPixel(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView()\n  });\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nIcon.prototype.getAnchor = function() {\n  if (this.normalizedAnchor_) {\n    return this.normalizedAnchor_;\n  }\n  let anchor = this.anchor_;\n  const size = this.getSize();\n  if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n      this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n    if (!size) {\n      return null;\n    }\n    anchor = this.anchor_.slice();\n    if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n      anchor[0] *= size[0];\n    }\n    if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n      anchor[1] *= size[1];\n    }\n  }\n\n  if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n    if (!size) {\n      return null;\n    }\n    if (anchor === this.anchor_) {\n      anchor = this.anchor_.slice();\n    }\n    if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n      anchor[0] = -anchor[0] + size[0];\n    }\n    if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n      anchor[1] = -anchor[1] + size[1];\n    }\n  }\n  this.normalizedAnchor_ = anchor;\n  return this.normalizedAnchor_;\n};\n\n\n/**\n * Get the icon color.\n * @return {module:ol/color~Color} Color.\n * @api\n */\nIcon.prototype.getColor = function() {\n  return this.color_;\n};\n\n\n/**\n * Get the image icon.\n * @param {number} pixelRatio Pixel ratio.\n * @return {Image|HTMLCanvasElement} Image or Canvas element.\n * @override\n * @api\n */\nIcon.prototype.getImage = function(pixelRatio) {\n  return this.iconImage_.getImage(pixelRatio);\n};\n\n\n/**\n * @override\n */\nIcon.prototype.getImageSize = function() {\n  return this.iconImage_.getSize();\n};\n\n\n/**\n * @override\n */\nIcon.prototype.getHitDetectionImageSize = function() {\n  return this.getImageSize();\n};\n\n\n/**\n * @override\n */\nIcon.prototype.getImageState = function() {\n  return this.iconImage_.getImageState();\n};\n\n\n/**\n * @override\n */\nIcon.prototype.getHitDetectionImage = function(pixelRatio) {\n  return this.iconImage_.getHitDetectionImage(pixelRatio);\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nIcon.prototype.getOrigin = function() {\n  if (this.origin_) {\n    return this.origin_;\n  }\n  let offset = this.offset_;\n\n  if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n    const size = this.getSize();\n    const iconImageSize = this.iconImage_.getSize();\n    if (!size || !iconImageSize) {\n      return null;\n    }\n    offset = offset.slice();\n    if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n      offset[0] = iconImageSize[0] - size[0] - offset[0];\n    }\n    if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n      offset[1] = iconImageSize[1] - size[1] - offset[1];\n    }\n  }\n  this.origin_ = offset;\n  return this.origin_;\n};\n\n\n/**\n * Get the image URL.\n * @return {string|undefined} Image src.\n * @api\n */\nIcon.prototype.getSrc = function() {\n  return this.iconImage_.getSrc();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nIcon.prototype.getSize = function() {\n  return !this.size_ ? this.iconImage_.getSize() : this.size_;\n};\n\n\n/**\n * @override\n */\nIcon.prototype.listenImageChange = function(listener, thisArg) {\n  return listen(this.iconImage_, EventType.CHANGE,\n    listener, thisArg);\n};\n\n\n/**\n * Load not yet loaded URI.\n * When rendering a feature with an icon style, the vector renderer will\n * automatically call this method. However, you might want to call this\n * method yourself for preloading or other purposes.\n * @override\n * @api\n */\nIcon.prototype.load = function() {\n  this.iconImage_.load();\n};\n\n\n/**\n * @override\n */\nIcon.prototype.unlistenImageChange = function(listener, thisArg) {\n  unlisten(this.iconImage_, EventType.CHANGE,\n    listener, thisArg);\n};\nexport default Icon;\n","/**\n * @module ol/render/Event\n */\nimport {inherits} from '../index.js';\nimport Event from '../events/Event.js';\n\n/**\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {module:ol/render/EventType} type Type.\n * @param {module:ol/render/VectorContext=} opt_vectorContext Vector context.\n * @param {module:ol/PluggableMap~FrameState=} opt_frameState Frame state.\n * @param {?CanvasRenderingContext2D=} opt_context Context.\n * @param {?module:ol/webgl/Context=} opt_glContext WebGL Context.\n */\nconst RenderEvent = function(\n  type, opt_vectorContext, opt_frameState, opt_context,\n  opt_glContext) {\n\n  Event.call(this, type);\n\n  /**\n   * For canvas, this is an instance of {@link module:ol/render/canvas/Immediate}.\n   * @type {module:ol/render/VectorContext|undefined}\n   * @api\n   */\n  this.vectorContext = opt_vectorContext;\n\n  /**\n   * An object representing the current render frame state.\n   * @type {module:ol/PluggableMap~FrameState|undefined}\n   * @api\n   */\n  this.frameState = opt_frameState;\n\n  /**\n   * Canvas context. Only available when a Canvas renderer is used, null\n   * otherwise.\n   * @type {CanvasRenderingContext2D|null|undefined}\n   * @api\n   */\n  this.context = opt_context;\n\n  /**\n   * WebGL context. Only available when a WebGL renderer is used, null\n   * otherwise.\n   * @type {module:ol/webgl/Context|null|undefined}\n   * @api\n   */\n  this.glContext = opt_glContext;\n\n};\n\ninherits(RenderEvent, Event);\nexport default RenderEvent;\n","/**\n * @module ol/style/Image\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n * @property {boolean} snapToPixel\n */\n\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n *\n * @constructor\n * @abstract\n * @param {module:ol/style/Image~Options} options Options.\n * @api\n */\nconst ImageStyle = function(options) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.opacity_ = options.opacity;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.snapToPixel_ = options.snapToPixel;\n\n};\n\n\n/**\n * Get the symbolizer opacity.\n * @return {number} Opacity.\n * @api\n */\nImageStyle.prototype.getOpacity = function() {\n  return this.opacity_;\n};\n\n\n/**\n * Determine whether the symbolizer rotates with the map.\n * @return {boolean} Rotate with map.\n * @api\n */\nImageStyle.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the symoblizer rotation.\n * @return {number} Rotation.\n * @api\n */\nImageStyle.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the symbolizer scale.\n * @return {number} Scale.\n * @api\n */\nImageStyle.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Determine whether the symbolizer should be snapped to a pixel.\n * @return {boolean} The symbolizer should snap to a pixel.\n * @api\n */\nImageStyle.prototype.getSnapToPixel = function() {\n  return this.snapToPixel_;\n};\n\n\n/**\n * Get the anchor point in pixels. The anchor determines the center point for the\n * symbolizer.\n * @abstract\n * @return {Array.<number>} Anchor.\n */\nImageStyle.prototype.getAnchor = function() {};\n\n\n/**\n * Get the image element for the symbolizer.\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|Image} Image element.\n */\nImageStyle.prototype.getImage = function(pixelRatio) {};\n\n\n/**\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|Image} Image element.\n */\nImageStyle.prototype.getHitDetectionImage = function(pixelRatio) {};\n\n\n/**\n * @abstract\n * @return {module:ol/ImageState} Image state.\n */\nImageStyle.prototype.getImageState = function() {};\n\n\n/**\n * @abstract\n * @return {module:ol/size~Size} Image size.\n */\nImageStyle.prototype.getImageSize = function() {};\n\n\n/**\n * @abstract\n * @return {module:ol/size~Size} Size of the hit-detection image.\n */\nImageStyle.prototype.getHitDetectionImageSize = function() {};\n\n\n/**\n * Get the origin of the symbolizer.\n * @abstract\n * @return {Array.<number>} Origin.\n */\nImageStyle.prototype.getOrigin = function() {};\n\n\n/**\n * Get the size of the symbolizer (in pixels).\n * @abstract\n * @return {module:ol/size~Size} Size.\n */\nImageStyle.prototype.getSize = function() {};\n\n\n/**\n * Set the opacity.\n *\n * @param {number} opacity Opacity.\n * @api\n */\nImageStyle.prototype.setOpacity = function(opacity) {\n  this.opacity_ = opacity;\n};\n\n\n/**\n * Set whether to rotate the style with the view.\n *\n * @param {boolean} rotateWithView Rotate with map.\n * @api\n */\nImageStyle.prototype.setRotateWithView = function(rotateWithView) {\n  this.rotateWithView_ = rotateWithView;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number} rotation Rotation.\n * @api\n */\nImageStyle.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number} scale Scale.\n * @api\n */\nImageStyle.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set whether to snap the image to the closest pixel.\n *\n * @param {boolean} snapToPixel Snap to pixel?\n * @api\n */\nImageStyle.prototype.setSnapToPixel = function(snapToPixel) {\n  this.snapToPixel_ = snapToPixel;\n};\n\n\n/**\n * @abstract\n * @param {function(this: T, module:ol/events/Event)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {module:ol/events~EventsKey|undefined} Listener key.\n * @template T\n */\nImageStyle.prototype.listenImageChange = function(listener, thisArg) {};\n\n\n/**\n * Load not yet loaded URI.\n * @abstract\n */\nImageStyle.prototype.load = function() {};\n\n\n/**\n * @abstract\n * @param {function(this: T, module:ol/events/Event)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @template T\n */\nImageStyle.prototype.unlistenImageChange = function(listener, thisArg) {};\nexport default ImageStyle;\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment} from '../../extent.js';\nimport {linearRingContainsXY, linearRingContainsExtent} from '../flat/contains.js';\nimport {forEach as forEachSegment} from '../flat/segments.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] &&\n      coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] &&\n      coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(flatCoordinates, offset, end, stride,\n    /**\n     * @param {module:ol/coordinate~Coordinate} point1 Start point.\n     * @param {module:ol/coordinate~Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function(point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    });\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (intersectsLineString(\n      flatCoordinates, offset, ends[i], stride, extent)) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n  if (intersectsLineString(\n    flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n  if (!intersectsLinearRing(\n    flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (intersectsLinearRingArray(\n      flatCoordinates, offset, ends, stride, extent)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n\n/**\n * @module ol/sphere\n */\nimport {toRadians, toDegrees} from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\n * earth is used (Clarke 1866 Authalic Sphere).\n */\n\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n      Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n      Math.cos(lat1) * Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {module:ol/geom/Geometry} geometry A geometry.\n * @param {module:ol/sphere~SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area += toRadians(x2 - x1) *\n        (2 + Math.sin(toRadians(y1)) +\n        Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return area * radius * radius / 2.0;\n}\n\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {module:ol/geom/Geometry} geometry A geometry.\n * @param {module:ol/sphere~SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {module:ol/geom/Polygon} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {module:ol/coordinate~Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {module:ol/coordinate~Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n  const lon = lon1 + Math.atan2(\n    Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n    Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/pointer/MouseSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {inherits} from '../index.js';\nimport EventSource from '../pointer/EventSource.js';\n\n/**\n * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n * @constructor\n * @extends {module:ol/pointer/EventSource}\n */\nconst MouseSource = function(dispatcher) {\n  const mapping = {\n    'mousedown': this.mousedown,\n    'mousemove': this.mousemove,\n    'mouseup': this.mouseup,\n    'mouseover': this.mouseover,\n    'mouseout': this.mouseout\n  };\n  EventSource.call(this, dispatcher, mapping);\n\n  /**\n   * @const\n   * @type {!Object.<string, Event|Object>}\n   */\n  this.pointerMap = dispatcher.pointerMap;\n\n  /**\n   * @const\n   * @type {Array.<module:ol~Pixel>}\n   */\n  this.lastTouches = [];\n};\n\ninherits(MouseSource, EventSource);\n\n\n/**\n * @type {number}\n */\nexport const POINTER_ID = 1;\n\n\n/**\n * @type {string}\n */\nexport const POINTER_TYPE = 'mouse';\n\n\n/**\n * Radius around touchend that swallows mouse events.\n *\n * @type {number}\n */\nconst DEDUP_DIST = 25;\n\n\n/**\n * Detect if a mouse event was simulated from a touch by\n * checking if previously there was a touch event at the\n * same position.\n *\n * FIXME - Known problem with the native Android browser on\n * Samsung GT-I9100 (Android 4.1.2):\n * In case the page is scrolled, this function does not work\n * correctly when a canvas is used (WebGL or canvas renderer).\n * Mouse listeners on canvas elements (for this browser), create\n * two mouse events: One 'good' and one 'bad' one (on other browsers or\n * when a div is used, there is only one event). For the 'bad' one,\n * clientX/clientY and also pageX/pageY are wrong when the page\n * is scrolled. Because of that, this function can not detect if\n * the events were simulated from a touch event. As result, a\n * pointer event at a wrong position is dispatched, which confuses\n * the map interactions.\n * It is unclear, how one can get the correct position for the event\n * or detect that the positions are invalid.\n *\n * @private\n * @param {Event} inEvent The in event.\n * @return {boolean} True, if the event was generated by a touch.\n */\nMouseSource.prototype.isEventSimulatedFromTouch_ = function(inEvent) {\n  const lts = this.lastTouches;\n  const x = inEvent.clientX;\n  const y = inEvent.clientY;\n  for (let i = 0, l = lts.length, t; i < l && (t = lts[i]); i++) {\n    // simulated mouse events will be swallowed near a primary touchend\n    const dx = Math.abs(x - t[0]);\n    const dy = Math.abs(y - t[1]);\n    if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @param {Event} inEvent The in event.\n * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n * @return {Object} The copied event.\n */\nfunction prepareEvent(inEvent, dispatcher) {\n  const e = dispatcher.cloneEvent(inEvent, inEvent);\n\n  // forward mouse preventDefault\n  const pd = e.preventDefault;\n  e.preventDefault = function() {\n    inEvent.preventDefault();\n    pd();\n  };\n\n  e.pointerId = POINTER_ID;\n  e.isPrimary = true;\n  e.pointerType = POINTER_TYPE;\n\n  return e;\n}\n\n\n/**\n * Handler for `mousedown`.\n *\n * @param {Event} inEvent The in event.\n */\nMouseSource.prototype.mousedown = function(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    // TODO(dfreedman) workaround for some elements not sending mouseup\n    // http://crbug/149091\n    if (POINTER_ID.toString() in this.pointerMap) {\n      this.cancel(inEvent);\n    }\n    const e = prepareEvent(inEvent, this.dispatcher);\n    this.pointerMap[POINTER_ID.toString()] = inEvent;\n    this.dispatcher.down(e, inEvent);\n  }\n};\n\n\n/**\n * Handler for `mousemove`.\n *\n * @param {Event} inEvent The in event.\n */\nMouseSource.prototype.mousemove = function(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    const e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.move(e, inEvent);\n  }\n};\n\n\n/**\n * Handler for `mouseup`.\n *\n * @param {Event} inEvent The in event.\n */\nMouseSource.prototype.mouseup = function(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    const p = this.pointerMap[POINTER_ID.toString()];\n\n    if (p && p.button === inEvent.button) {\n      const e = prepareEvent(inEvent, this.dispatcher);\n      this.dispatcher.up(e, inEvent);\n      this.cleanupMouse();\n    }\n  }\n};\n\n\n/**\n * Handler for `mouseover`.\n *\n * @param {Event} inEvent The in event.\n */\nMouseSource.prototype.mouseover = function(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    const e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.enterOver(e, inEvent);\n  }\n};\n\n\n/**\n * Handler for `mouseout`.\n *\n * @param {Event} inEvent The in event.\n */\nMouseSource.prototype.mouseout = function(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    const e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.leaveOut(e, inEvent);\n  }\n};\n\n\n/**\n * Dispatches a `pointercancel` event.\n *\n * @param {Event} inEvent The in event.\n */\nMouseSource.prototype.cancel = function(inEvent) {\n  const e = prepareEvent(inEvent, this.dispatcher);\n  this.dispatcher.cancel(e, inEvent);\n  this.cleanupMouse();\n};\n\n\n/**\n * Remove the mouse from the list of active pointers.\n */\nMouseSource.prototype.cleanupMouse = function() {\n  delete this.pointerMap[POINTER_ID.toString()];\n};\nexport default MouseSource;\n","/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {inherits} from '../../index.js';\nimport {getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../../extent.js';\nimport {TRUE} from '../../functions.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport LayerRenderer from '../Layer.js';\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @constructor\n * @abstract\n * @extends {module:ol/renderer/Layer}\n * @param {module:ol/layer/Layer} layer Layer.\n */\nconst CanvasLayerRenderer = function(layer) {\n\n  LayerRenderer.call(this, layer);\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.renderedResolution;\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.transform_ = createTransform();\n\n};\n\ninherits(CanvasLayerRenderer, LayerRenderer);\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/extent~Extent} extent Clip extent.\n * @protected\n */\nCanvasLayerRenderer.prototype.clip = function(context, frameState, extent) {\n  const pixelRatio = frameState.pixelRatio;\n  const width = frameState.size[0] * pixelRatio;\n  const height = frameState.size[1] * pixelRatio;\n  const rotation = frameState.viewState.rotation;\n  const topLeft = getTopLeft(/** @type {module:ol/extent~Extent} */ (extent));\n  const topRight = getTopRight(/** @type {module:ol/extent~Extent} */ (extent));\n  const bottomRight = getBottomRight(/** @type {module:ol/extent~Extent} */ (extent));\n  const bottomLeft = getBottomLeft(/** @type {module:ol/extent~Extent} */ (extent));\n\n  applyTransform(frameState.coordinateToPixelTransform, topLeft);\n  applyTransform(frameState.coordinateToPixelTransform, topRight);\n  applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n  applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n  context.save();\n  rotateAtOffset(context, -rotation, width / 2, height / 2);\n  context.beginPath();\n  context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n  context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n  context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n  context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n  context.clip();\n  rotateAtOffset(context, rotation, width / 2, height / 2);\n};\n\n\n/**\n * @param {module:ol/render/EventType} type Event type.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/transform~Transform=} opt_transform Transform.\n * @private\n */\nCanvasLayerRenderer.prototype.dispatchComposeEvent_ = function(type, context, frameState, opt_transform) {\n  const layer = this.getLayer();\n  if (layer.hasListener(type)) {\n    const width = frameState.size[0] * frameState.pixelRatio;\n    const height = frameState.size[1] * frameState.pixelRatio;\n    const rotation = frameState.viewState.rotation;\n    rotateAtOffset(context, -rotation, width / 2, height / 2);\n    const transform = opt_transform !== undefined ?\n      opt_transform : this.getTransform(frameState, 0);\n    const render = new CanvasImmediateRenderer(\n      context, frameState.pixelRatio, frameState.extent, transform,\n      frameState.viewState.rotation);\n    const composeEvent = new RenderEvent(type, render, frameState,\n      context, null);\n    layer.dispatchEvent(composeEvent);\n    rotateAtOffset(context, rotation, width / 2, height / 2);\n  }\n};\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n *     callback.\n * @param {S} thisArg Value to use as `this` when executing `callback`.\n * @return {T|undefined} Callback result.\n * @template S,T,U\n */\nCanvasLayerRenderer.prototype.forEachLayerAtCoordinate = function(coordinate, frameState, callback, thisArg) {\n  const hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, 0, TRUE, this);\n\n  if (hasFeature) {\n    return callback.call(thisArg, this.getLayer(), null);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @param {module:ol/transform~Transform=} opt_transform Transform.\n * @protected\n */\nCanvasLayerRenderer.prototype.postCompose = function(context, frameState, layerState, opt_transform) {\n  this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, context, frameState, opt_transform);\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/transform~Transform=} opt_transform Transform.\n * @protected\n */\nCanvasLayerRenderer.prototype.preCompose = function(context, frameState, opt_transform) {\n  this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, context, frameState, opt_transform);\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/transform~Transform=} opt_transform Transform.\n * @protected\n */\nCanvasLayerRenderer.prototype.dispatchRenderEvent = function(context, frameState, opt_transform) {\n  this.dispatchComposeEvent_(RenderEventType.RENDER, context, frameState, opt_transform);\n};\n\n\n/**\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {number} offsetX Offset on the x-axis in view coordinates.\n * @protected\n * @return {!module:ol/transform~Transform} Transform.\n */\nCanvasLayerRenderer.prototype.getTransform = function(frameState, offsetX) {\n  const viewState = frameState.viewState;\n  const pixelRatio = frameState.pixelRatio;\n  const dx1 = pixelRatio * frameState.size[0] / 2;\n  const dy1 = pixelRatio * frameState.size[1] / 2;\n  const sx = pixelRatio / viewState.resolution;\n  const sy = -sx;\n  const angle = -viewState.rotation;\n  const dx2 = -viewState.center[0] + offsetX;\n  const dy2 = -viewState.center[1];\n  return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n};\n\n\n/**\n * @abstract\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @param {CanvasRenderingContext2D} context Context.\n */\nCanvasLayerRenderer.prototype.composeFrame = function(frameState, layerState, context) {};\n\n/**\n * @abstract\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @return {boolean} whether composeFrame should be called.\n */\nCanvasLayerRenderer.prototype.prepareFrame = function(frameState, layerState) {};\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/IntermediateCanvas\n */\nimport {inherits} from '../../index.js';\nimport {scale as scaleCoordinate} from '../../coordinate.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, intersects} from '../../extent.js';\nimport {UNDEFINED} from '../../functions.js';\nimport CanvasLayerRenderer from '../canvas/Layer.js';\nimport {create as createTransform, apply as applyTransform} from '../../transform.js';\n\n/**\n * @constructor\n * @abstract\n * @extends {module:ol/renderer/canvas/Layer}\n * @param {module:ol/layer/Layer} layer Layer.\n */\nconst IntermediateCanvasRenderer = function(layer) {\n\n  CanvasLayerRenderer.call(this, layer);\n\n  /**\n   * @protected\n   * @type {module:ol/transform~Transform}\n   */\n  this.coordinateToCanvasPixelTransform = createTransform();\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.hitCanvasContext_ = null;\n\n};\n\ninherits(IntermediateCanvasRenderer, CanvasLayerRenderer);\n\n\n/**\n * @inheritDoc\n */\nIntermediateCanvasRenderer.prototype.composeFrame = function(frameState, layerState, context) {\n\n  this.preCompose(context, frameState);\n\n  const image = this.getImage();\n  if (image) {\n\n    // clipped rendering if layer extent is set\n    const extent = layerState.extent;\n    const clipped = extent !== undefined &&\n        !containsExtent(extent, frameState.extent) &&\n        intersects(extent, frameState.extent);\n    if (clipped) {\n      this.clip(context, frameState, /** @type {module:ol/extent~Extent} */ (extent));\n    }\n\n    const imageTransform = this.getImageTransform();\n    // for performance reasons, context.save / context.restore is not used\n    // to save and restore the transformation matrix and the opacity.\n    // see http://jsperf.com/context-save-restore-versus-variable\n    const alpha = context.globalAlpha;\n    context.globalAlpha = layerState.opacity;\n\n    // for performance reasons, context.setTransform is only used\n    // when the view is rotated. see http://jsperf.com/canvas-transform\n    const dx = imageTransform[4];\n    const dy = imageTransform[5];\n    const dw = image.width * imageTransform[0];\n    const dh = image.height * imageTransform[3];\n    context.drawImage(image, 0, 0, +image.width, +image.height,\n      Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n    context.globalAlpha = alpha;\n\n    if (clipped) {\n      context.restore();\n    }\n  }\n\n  this.postCompose(context, frameState, layerState);\n};\n\n\n/**\n * @abstract\n * @return {HTMLCanvasElement|HTMLVideoElement|Image} Canvas.\n */\nIntermediateCanvasRenderer.prototype.getImage = function() {};\n\n\n/**\n * @abstract\n * @return {!module:ol/transform~Transform} Image transform.\n */\nIntermediateCanvasRenderer.prototype.getImageTransform = function() {};\n\n\n/**\n * @inheritDoc\n */\nIntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  const layer = this.getLayer();\n  const source = layer.getSource();\n  const resolution = frameState.viewState.resolution;\n  const rotation = frameState.viewState.rotation;\n  const skippedFeatureUids = frameState.skippedFeatureUids;\n  return source.forEachFeatureAtCoordinate(\n    coordinate, resolution, rotation, hitTolerance, skippedFeatureUids,\n    /**\n     * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n     * @return {?} Callback result.\n     */\n    function(feature) {\n      return callback.call(thisArg, feature, layer);\n    });\n};\n\n\n/**\n * @inheritDoc\n */\nIntermediateCanvasRenderer.prototype.forEachLayerAtCoordinate = function(coordinate, frameState, callback, thisArg) {\n  if (!this.getImage()) {\n    return undefined;\n  }\n\n  if (this.getLayer().getSource().forEachFeatureAtCoordinate !== UNDEFINED) {\n    // for ImageCanvas sources use the original hit-detection logic,\n    // so that for example also transparent polygons are detected\n    return CanvasLayerRenderer.prototype.forEachLayerAtCoordinate.apply(this, arguments);\n  } else {\n    const pixel = applyTransform(this.coordinateToCanvasPixelTransform, coordinate.slice());\n    scaleCoordinate(pixel, frameState.viewState.resolution / this.renderedResolution);\n\n    if (!this.hitCanvasContext_) {\n      this.hitCanvasContext_ = createCanvasContext2D(1, 1);\n    }\n\n    this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n    this.hitCanvasContext_.drawImage(this.getImage(), pixel[0], pixel[1], 1, 1, 0, 0, 1, 1);\n\n    const imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n    if (imageData[3] > 0) {\n      return callback.call(thisArg, this.getLayer(),  imageData);\n    } else {\n      return undefined;\n    }\n  }\n};\nexport default IntermediateCanvasRenderer;\n","/**\n * @module ol/geom/Circle\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {deflateCoordinate} from '../geom/flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number=} opt_radius Radius.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst Circle = function(center, opt_radius, opt_layout) {\n  SimpleGeometry.call(this);\n  const radius = opt_radius ? opt_radius : 0;\n  this.setCenterAndRadius(center, radius, opt_layout);\n};\n\ninherits(Circle, SimpleGeometry);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/Circle} Clone.\n * @override\n * @api\n */\nCircle.prototype.clone = function() {\n  const circle = new Circle(null);\n  circle.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return circle;\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  const squaredDistance = dx * dx + dy * dy;\n  if (squaredDistance < minSquaredDistance) {\n    if (squaredDistance === 0) {\n      for (let i = 0; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    } else {\n      const delta = this.getRadius() / Math.sqrt(squaredDistance);\n      closestPoint[0] = flatCoordinates[0] + delta * dx;\n      closestPoint[1] = flatCoordinates[1] + delta * dy;\n      for (let i = 2; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    }\n    closestPoint.length = this.stride;\n    return squaredDistance;\n  } else {\n    return minSquaredDistance;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.containsXY = function(x, y) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  return dx * dx + dy * dy <= this.getRadiusSquared_();\n};\n\n\n/**\n * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n * @return {module:ol/coordinate~Coordinate} Center.\n * @api\n */\nCircle.prototype.getCenter = function() {\n  return this.flatCoordinates.slice(0, this.stride);\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.computeExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n  return createOrUpdate(\n    flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n    flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n    extent);\n};\n\n\n/**\n * Return the radius of the circle.\n * @return {number} Radius.\n * @api\n */\nCircle.prototype.getRadius = function() {\n  return Math.sqrt(this.getRadiusSquared_());\n};\n\n\n/**\n * @private\n * @return {number} Radius squared.\n */\nCircle.prototype.getRadiusSquared_ = function() {\n  const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n  const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n  return dx * dx + dy * dy;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.getType = function() {\n  return GeometryType.CIRCLE;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.intersectsExtent = function(extent) {\n  const circleExtent = this.getExtent();\n  if (intersects(extent, circleExtent)) {\n    const center = this.getCenter();\n\n    if (extent[0] <= center[0] && extent[2] >= center[0]) {\n      return true;\n    }\n    if (extent[1] <= center[1] && extent[3] >= center[1]) {\n      return true;\n    }\n\n    return forEachCorner(extent, this.intersectsCoordinate, this);\n  }\n  return false;\n\n};\n\n\n/**\n * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @api\n */\nCircle.prototype.setCenter = function(center) {\n  const stride = this.stride;\n  const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n  const flatCoordinates = center.slice();\n  flatCoordinates[stride] = flatCoordinates[0] + radius;\n  for (let i = 1; i < stride; ++i) {\n    flatCoordinates[stride + i] = center[i];\n  }\n  this.setFlatCoordinates(this.layout, flatCoordinates);\n};\n\n\n/**\n * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n * number) of the circle.\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} radius Radius.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nCircle.prototype.setCenterAndRadius = function(center, radius, opt_layout) {\n  if (!center) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array.<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(\n      flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.getCoordinates = function() {};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.setCoordinates = function(coordinates, opt_layout) {};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nCircle.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\n\n\n/**\n * Set the radius of the circle. The radius is in the units of the projection.\n * @param {number} radius Radius.\n * @api\n */\nCircle.prototype.setRadius = function(radius) {\n  this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n  this.changed();\n};\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {module:ol/proj~ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {module:ol/proj~ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {module:ol/geom/Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n","/**\n * @module ol/net\n */\nimport {getUid} from './index.js';\n\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {function()=} opt_errback Callback on error.\n * @param {string=} opt_callbackParam Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, opt_errback, opt_callbackParam) {\n  const script = document.createElement('script');\n  const key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src = url + (url.indexOf('?') == -1 ? '?' : '&') +\n      (opt_callbackParam || 'callback') + '=' + key;\n  const timer = setTimeout(function() {\n    cleanup();\n    if (opt_errback) {\n      opt_errback();\n    }\n  }, 10000);\n  window[key] = function(data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.getElementsByTagName('head')[0].appendChild(script);\n}\n","/**\n * @module ol/structs/LRUCache\n */\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport EventTarget from '../events/EventTarget.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n\n\n/**\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n * @constructor\n * @extends {module:ol/events/EventTarget}\n * @fires module:ol/events/Event~Event\n * @struct\n * @template T\n * @param {number=} opt_highWaterMark High water mark.\n */\nconst LRUCache = function(opt_highWaterMark) {\n\n  EventTarget.call(this);\n\n  /**\n   * @type {number}\n   */\n  this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.count_ = 0;\n\n  /**\n   * @private\n   * @type {!Object.<string, module:ol/structs/LRUCache~Entry>}\n   */\n  this.entries_ = {};\n\n  /**\n   * @private\n   * @type {?module:ol/structs/LRUCache~Entry}\n   */\n  this.oldest_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/structs/LRUCache~Entry}\n   */\n  this.newest_ = null;\n\n};\n\ninherits(LRUCache, EventTarget);\n\n\n/**\n * @return {boolean} Can expire cache.\n */\nLRUCache.prototype.canExpireCache = function() {\n  return this.getCount() > this.highWaterMark;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nLRUCache.prototype.clear = function() {\n  this.count_ = 0;\n  this.entries_ = {};\n  this.oldest_ = null;\n  this.newest_ = null;\n  this.dispatchEvent(EventType.CLEAR);\n};\n\n\n/**\n * @param {string} key Key.\n * @return {boolean} Contains key.\n */\nLRUCache.prototype.containsKey = function(key) {\n  return this.entries_.hasOwnProperty(key);\n};\n\n\n/**\n * @param {function(this: S, T, string, module:ol/structs/LRUCache): ?} f The function\n *     to call for every entry from the oldest to the newer. This function takes\n *     3 arguments (the entry value, the entry key and the LRUCache object).\n *     The return value is ignored.\n * @param {S=} opt_this The object to use as `this` in `f`.\n * @template S\n */\nLRUCache.prototype.forEach = function(f, opt_this) {\n  let entry = this.oldest_;\n  while (entry) {\n    f.call(opt_this, entry.value_, entry.key_, this);\n    entry = entry.newer;\n  }\n};\n\n\n/**\n * @param {string} key Key.\n * @return {T} Value.\n */\nLRUCache.prototype.get = function(key) {\n  const entry = this.entries_[key];\n  assert(entry !== undefined,\n    15); // Tried to get a value for a key that does not exist in the cache\n  if (entry === this.newest_) {\n    return entry.value_;\n  } else if (entry === this.oldest_) {\n    this.oldest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (this.oldest_.newer);\n    this.oldest_.older = null;\n  } else {\n    entry.newer.older = entry.older;\n    entry.older.newer = entry.newer;\n  }\n  entry.newer = null;\n  entry.older = this.newest_;\n  this.newest_.newer = entry;\n  this.newest_ = entry;\n  return entry.value_;\n};\n\n\n/**\n * Remove an entry from the cache.\n * @param {string} key The entry key.\n * @return {T} The removed entry.\n */\nLRUCache.prototype.remove = function(key) {\n  const entry = this.entries_[key];\n  assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n  if (entry === this.newest_) {\n    this.newest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (entry.older);\n    if (this.newest_) {\n      this.newest_.newer = null;\n    }\n  } else if (entry === this.oldest_) {\n    this.oldest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (entry.newer);\n    if (this.oldest_) {\n      this.oldest_.older = null;\n    }\n  } else {\n    entry.newer.older = entry.older;\n    entry.older.newer = entry.newer;\n  }\n  delete this.entries_[key];\n  --this.count_;\n  return entry.value_;\n};\n\n\n/**\n * @return {number} Count.\n */\nLRUCache.prototype.getCount = function() {\n  return this.count_;\n};\n\n\n/**\n * @return {Array.<string>} Keys.\n */\nLRUCache.prototype.getKeys = function() {\n  const keys = new Array(this.count_);\n  let i = 0;\n  let entry;\n  for (entry = this.newest_; entry; entry = entry.older) {\n    keys[i++] = entry.key_;\n  }\n  return keys;\n};\n\n\n/**\n * @return {Array.<T>} Values.\n */\nLRUCache.prototype.getValues = function() {\n  const values = new Array(this.count_);\n  let i = 0;\n  let entry;\n  for (entry = this.newest_; entry; entry = entry.older) {\n    values[i++] = entry.value_;\n  }\n  return values;\n};\n\n\n/**\n * @return {T} Last value.\n */\nLRUCache.prototype.peekLast = function() {\n  return this.oldest_.value_;\n};\n\n\n/**\n * @return {string} Last key.\n */\nLRUCache.prototype.peekLastKey = function() {\n  return this.oldest_.key_;\n};\n\n\n/**\n * Get the key of the newest item in the cache.  Throws if the cache is empty.\n * @return {string} The newest key.\n */\nLRUCache.prototype.peekFirstKey = function() {\n  return this.newest_.key_;\n};\n\n\n/**\n * @return {T} value Value.\n */\nLRUCache.prototype.pop = function() {\n  const entry = this.oldest_;\n  delete this.entries_[entry.key_];\n  if (entry.newer) {\n    entry.newer.older = null;\n  }\n  this.oldest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (entry.newer);\n  if (!this.oldest_) {\n    this.newest_ = null;\n  }\n  --this.count_;\n  return entry.value_;\n};\n\n\n/**\n * @param {string} key Key.\n * @param {T} value Value.\n */\nLRUCache.prototype.replace = function(key, value) {\n  this.get(key);  // update `newest_`\n  this.entries_[key].value_ = value;\n};\n\n\n/**\n * @param {string} key Key.\n * @param {T} value Value.\n */\nLRUCache.prototype.set = function(key, value) {\n  assert(!(key in this.entries_),\n    16); // Tried to set a value for a key that is used already\n  const entry = /** @type {module:ol/structs/LRUCache~Entry} */ ({\n    key_: key,\n    newer: null,\n    older: this.newest_,\n    value_: value\n  });\n  if (!this.newest_) {\n    this.oldest_ = entry;\n  } else {\n    this.newest_.newer = entry;\n  }\n  this.newest_ = entry;\n  this.entries_[key] = entry;\n  ++this.count_;\n};\n\n\n/**\n * Set a maximum number of entries for the cache.\n * @param {number} size Cache size.\n * @api\n */\nLRUCache.prototype.setSize = function(size) {\n  this.highWaterMark = size;\n};\n\n\n/**\n * Prune the cache.\n */\nLRUCache.prototype.prune = function() {\n  while (this.canExpireCache()) {\n    this.pop();\n  }\n};\nexport default LRUCache;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active'\n};\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {linearRingsContainsXY} from '../flat/contains.js';\n\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array.<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset,\n  ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array.<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array.<number>} flatCenters Flat centers.\n * @return {Array.<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(flatCoordinates,\n      offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/format/filter/Filter\n */\n\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @struct\n */\nconst Filter = function(tagName) {\n\n  /**\n   * @private\n   * @type {!string}\n   */\n  this.tagName_ = tagName;\n};\n\n/**\n * The XML tag name for a filter.\n * @returns {!string} Name.\n */\nFilter.prototype.getTagName = function() {\n  return this.tagName_;\n};\n\nexport default Filter;\n","/**\n * @module ol/format/filter/LogicalNary\n */\nimport {inherits} from '../../index.js';\nimport {assert} from '../../asserts.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {...module:ol/format/filter/Filter} conditions Conditions.\n * @extends {module:ol/format/filter/Filter}\n */\nconst LogicalNary = function(tagName, conditions) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @type {Array.<module:ol/format/filter/Filter>}\n   */\n  this.conditions = Array.prototype.slice.call(arguments, 1);\n  assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n};\n\ninherits(LogicalNary, Filter);\nexport default LogicalNary;\n","/**\n * @module ol/format/filter/And\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @constructor\n * @abstract\n * @param {...module:ol/format/filter/Filter} conditions Conditions.\n * @extends {module:ol/format/filter/LogicalNary}\n */\nconst And = function(conditions) {\n  const params = ['And'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(And, LogicalNary);\n\nexport default And;\n","/**\n * @module ol/format/filter/Bbox\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!module:ol/extent~Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {module:ol/format/filter/Filter}\n * @api\n */\nconst Bbox = function(geometryName, extent, opt_srsName) {\n\n  Filter.call(this, 'BBOX');\n\n  /**\n   * @type {!string}\n   */\n  this.geometryName = geometryName;\n\n  /**\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent = extent;\n\n  /**\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Bbox, Filter);\n\nexport default Bbox;\n","/**\n * @module ol/format/filter/Spatial\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} geometryName Geometry name to use.\n * @param {!module:ol/geom/Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {module:ol/format/filter/Filter}\n */\nconst Spatial = function(tagName, geometryName, geometry, opt_srsName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @type {!string}\n   */\n  this.geometryName = geometryName || 'the_geom';\n\n  /**\n   * @type {module:ol/geom/Geometry}\n   */\n  this.geometry = geometry;\n\n  /**\n   * @type {string|undefined}\n   */\n  this.srsName = opt_srsName;\n};\n\ninherits(Spatial, Filter);\n\nexport default Spatial;\n","/**\n * @module ol/format/filter/Contains\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!module:ol/geom/Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {module:ol/format/filter/Spatial}\n * @api\n */\nconst Contains = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Contains', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Contains, Spatial);\nexport default Contains;\n","/**\n * @module ol/format/filter/Comparison\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {module:ol/format/filter/Filter}\n */\nconst Comparison = function(tagName, propertyName) {\n\n  Filter.call(this, tagName);\n\n  /**\n   * @type {!string}\n   */\n  this.propertyName = propertyName;\n};\n\ninherits(Comparison, Filter);\n\nexport default Comparison;\n","/**\n * @module ol/format/filter/During\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @extends {module:ol/format/filter/Comparison}\n * @api\n */\nconst During = function(propertyName, begin, end) {\n  Comparison.call(this, 'During', propertyName);\n\n  /**\n   * @type {!string}\n   */\n  this.begin = begin;\n\n  /**\n   * @type {!string}\n   */\n  this.end = end;\n};\n\ninherits(During, Comparison);\nexport default During;\n","/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @constructor\n * @abstract\n * @param {!string} tagName The XML tag name for this filter.\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {module:ol/format/filter/Comparison}\n */\nconst ComparisonBinary = function(tagName, propertyName, expression, opt_matchCase) {\n\n  Comparison.call(this, tagName, propertyName);\n\n  /**\n   * @type {!(string|number)}\n   */\n  this.expression = expression;\n\n  /**\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(ComparisonBinary, Comparison);\nexport default ComparisonBinary;\n","/**\n * @module ol/format/filter/EqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {module:ol/format/filter/ComparisonBinary}\n * @api\n */\nconst EqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(EqualTo, ComparisonBinary);\nexport default EqualTo;\n","/**\n * @module ol/format/filter/GreaterThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {module:ol/format/filter/ComparisonBinary}\n * @api\n */\nconst GreaterThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThan', propertyName, expression);\n};\n\ninherits(GreaterThan, ComparisonBinary);\nexport default GreaterThan;\n","/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {module:ol/format/filter/ComparisonBinary}\n * @api\n */\nconst GreaterThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression);\n};\n\ninherits(GreaterThanOrEqualTo, ComparisonBinary);\nexport default GreaterThanOrEqualTo;\n","/**\n * @module ol/format/filter/Intersects\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!module:ol/geom/Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {module:ol/format/filter/Spatial}\n * @api\n */\nconst Intersects = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Intersects', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Intersects, Spatial);\nexport default Intersects;\n","/**\n * @module ol/format/filter/IsBetween\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @extends {module:ol/format/filter/Comparison}\n * @api\n */\nconst IsBetween = function(propertyName, lowerBoundary, upperBoundary) {\n  Comparison.call(this, 'PropertyIsBetween', propertyName);\n\n  /**\n   * @type {!number}\n   */\n  this.lowerBoundary = lowerBoundary;\n\n  /**\n   * @type {!number}\n   */\n  this.upperBoundary = upperBoundary;\n};\n\ninherits(IsBetween, Comparison);\nexport default IsBetween;\n","/**\n * @module ol/format/filter/IsLike\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {module:ol/format/filter/Comparison}\n * @api\n */\nconst IsLike = function(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  Comparison.call(this, 'PropertyIsLike', propertyName);\n\n  /**\n   * @type {!string}\n   */\n  this.pattern = pattern;\n\n  /**\n   * @type {!string}\n   */\n  this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\n\n  /**\n   * @type {!string}\n   */\n  this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\n\n  /**\n   * @type {!string}\n   */\n  this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\n\n  /**\n   * @type {boolean|undefined}\n   */\n  this.matchCase = opt_matchCase;\n};\n\ninherits(IsLike, Comparison);\nexport default IsLike;\n","/**\n * @module ol/format/filter/IsNull\n */\nimport {inherits} from '../../index.js';\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @extends {module:ol/format/filter/Comparison}\n * @api\n */\nconst IsNull = function(propertyName) {\n  Comparison.call(this, 'PropertyIsNull', propertyName);\n};\n\ninherits(IsNull, Comparison);\nexport default IsNull;\n","/**\n * @module ol/format/filter/LessThan\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {module:ol/format/filter/ComparisonBinary}\n * @api\n */\nconst LessThan = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThan', propertyName, expression);\n};\n\ninherits(LessThan, ComparisonBinary);\nexport default LessThan;\n","/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @extends {module:ol/format/filter/ComparisonBinary}\n * @api\n */\nconst LessThanOrEqualTo = function(propertyName, expression) {\n  ComparisonBinary.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression);\n};\n\ninherits(LessThanOrEqualTo, ComparisonBinary);\nexport default LessThanOrEqualTo;\n","/**\n * @module ol/format/filter/Not\n */\nimport {inherits} from '../../index.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @constructor\n * @param {!module:ol/format/filter/Filter} condition Filter condition.\n * @extends {module:ol/format/filter/Filter}\n * @api\n */\nconst Not = function(condition) {\n\n  Filter.call(this, 'Not');\n\n  /**\n   * @type {!module:ol/format/filter/Filter}\n   */\n  this.condition = condition;\n};\n\ninherits(Not, Filter);\nexport default Not;\n","/**\n * @module ol/format/filter/NotEqualTo\n */\nimport {inherits} from '../../index.js';\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @constructor\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @extends {module:ol/format/filter/ComparisonBinary}\n * @api\n */\nconst NotEqualTo = function(propertyName, expression, opt_matchCase) {\n  ComparisonBinary.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase);\n};\n\ninherits(NotEqualTo, ComparisonBinary);\nexport default NotEqualTo;\n","/**\n * @module ol/format/filter/Or\n */\nimport {inherits} from '../../index.js';\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n *\n * @constructor\n * @param {...module:ol/format/filter/Filter} conditions Conditions.\n * @extends {module:ol/format/filter/LogicalNary}\n * @api\n */\nconst Or = function(conditions) {\n  const params = ['Or'].concat(Array.prototype.slice.call(arguments));\n  LogicalNary.apply(this, params);\n};\n\ninherits(Or, LogicalNary);\nexport default Or;\n","/**\n * @module ol/format/filter/Within\n */\nimport {inherits} from '../../index.js';\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @constructor\n * @param {!string} geometryName Geometry name to use.\n * @param {!module:ol/geom/Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @extends {module:ol/format/filter/Spatial}\n * @api\n */\nconst Within = function(geometryName, geometry, opt_srsName) {\n\n  Spatial.call(this, 'Within', geometryName, geometry, opt_srsName);\n\n};\n\ninherits(Within, Spatial);\nexport default Within;\n","/**\n * @module ol/format/filter\n */\nimport And from '../format/filter/And.js';\nimport Bbox from '../format/filter/Bbox.js';\nimport Contains from '../format/filter/Contains.js';\nimport During from '../format/filter/During.js';\nimport EqualTo from '../format/filter/EqualTo.js';\nimport GreaterThan from '../format/filter/GreaterThan.js';\nimport GreaterThanOrEqualTo from '../format/filter/GreaterThanOrEqualTo.js';\nimport Intersects from '../format/filter/Intersects.js';\nimport IsBetween from '../format/filter/IsBetween.js';\nimport IsLike from '../format/filter/IsLike.js';\nimport IsNull from '../format/filter/IsNull.js';\nimport LessThan from '../format/filter/LessThan.js';\nimport LessThanOrEqualTo from '../format/filter/LessThanOrEqualTo.js';\nimport Not from '../format/filter/Not.js';\nimport NotEqualTo from '../format/filter/NotEqualTo.js';\nimport Or from '../format/filter/Or.js';\nimport Within from '../format/filter/Within.js';\n\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...module:ol/format/filter/Filter} conditions Filter conditions.\n * @returns {!module:ol/format/filter/And} `<And>` operator.\n * @api\n */\nexport function and(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(And, params));\n}\n\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...module:ol/format/filter/Filter} conditions Filter conditions.\n * @returns {!module:ol/format/filter/Or} `<Or>` operator.\n * @api\n */\nexport function or(conditions) {\n  const params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(Or, params));\n}\n\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!module:ol/format/filter/Filter} condition Filter condition.\n * @returns {!module:ol/format/filter/Not} `<Not>` operator.\n * @api\n */\nexport function not(condition) {\n  return new Not(condition);\n}\n\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!module:ol/extent~Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!module:ol/format/filter/Bbox} `<BBOX>` operator.\n * @api\n */\nexport function bbox(geometryName, extent, opt_srsName) {\n  return new Bbox(geometryName, extent, opt_srsName);\n}\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!module:ol/geom/Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!module:ol/format/filter/Contains} `<Contains>` operator.\n * @api\n */\nexport function contains(geometryName, geometry, opt_srsName) {\n  return new Contains(geometryName, geometry, opt_srsName);\n}\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!module:ol/geom/Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!module:ol/format/filter/Intersects} `<Intersects>` operator.\n * @api\n */\nexport function intersects(geometryName, geometry, opt_srsName) {\n  return new Intersects(geometryName, geometry, opt_srsName);\n}\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!module:ol/geom/Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!module:ol/format/filter/Within} `<Within>` operator.\n * @api\n */\nexport function within(geometryName, geometry, opt_srsName) {\n  return new Within(geometryName, geometry, opt_srsName);\n}\n\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!module:ol/format/filter/EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\nexport function equalTo(propertyName, expression, opt_matchCase) {\n  return new EqualTo(propertyName, expression, opt_matchCase);\n}\n\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!module:ol/format/filter/NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\nexport function notEqualTo(propertyName, expression, opt_matchCase) {\n  return new NotEqualTo(propertyName, expression, opt_matchCase);\n}\n\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!module:ol/format/filter/LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\nexport function lessThan(propertyName, expression) {\n  return new LessThan(propertyName, expression);\n}\n\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!module:ol/format/filter/LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\nexport function lessThanOrEqualTo(propertyName, expression) {\n  return new LessThanOrEqualTo(propertyName, expression);\n}\n\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!module:ol/format/filter/GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\nexport function greaterThan(propertyName, expression) {\n  return new GreaterThan(propertyName, expression);\n}\n\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!module:ol/format/filter/GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\nexport function greaterThanOrEqualTo(propertyName, expression) {\n  return new GreaterThanOrEqualTo(propertyName, expression);\n}\n\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @returns {!module:ol/format/filter/IsNull} `<PropertyIsNull>` operator.\n * @api\n */\nexport function isNull(propertyName) {\n  return new IsNull(propertyName);\n}\n\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @returns {!module:ol/format/filter/IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\nexport function between(propertyName, lowerBoundary, upperBoundary) {\n  return new IsBetween(propertyName, lowerBoundary, upperBoundary);\n}\n\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!module:ol/format/filter/IsLike} `<PropertyIsLike>` operator.\n * @api\n */\nexport function like(propertyName, pattern,\n  opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  return new IsLike(propertyName, pattern,\n    opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\n}\n\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @returns {!module:ol/format/filter/During} `<During>` operator.\n * @api\n */\nexport function during(propertyName, begin, end) {\n  return new During(propertyName, begin, end);\n}\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n","/**\n * @module ol/format/WKT\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport TextFeature from '../format/TextFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [splitCollection=false] Whether to split GeometryCollections into\n * multiple features on reading.\n */\n\n/**\n * @typedef {Object} Token\n * @property {number} type\n * @property {number|string} [value]\n * @property {number} position\n */\n\n/**\n * @const\n * @type {string}\n */\nconst EMPTY = 'EMPTY';\n\n\n/**\n * @const\n * @type {string}\n */\nconst Z = 'Z';\n\n\n/**\n * @const\n * @type {string}\n */\nconst M = 'M';\n\n\n/**\n * @const\n * @type {string}\n */\nconst ZM = 'ZM';\n\n\n/**\n * @const\n * @enum {number}\n */\nconst TokenType = {\n  TEXT: 1,\n  LEFT_PAREN: 2,\n  RIGHT_PAREN: 3,\n  NUMBER: 4,\n  COMMA: 5,\n  EOF: 6\n};\n\n\n/**\n * Class to tokenize a WKT string.\n * @param {string} wkt WKT string.\n * @constructor\n */\nconst Lexer = function(wkt) {\n\n  /**\n   * @type {string}\n   */\n  this.wkt = wkt;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = -1;\n};\n\n\n/**\n * @param {string} c Character.\n * @return {boolean} Whether the character is alphabetic.\n * @private\n */\nLexer.prototype.isAlpha_ = function(c) {\n  return c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z';\n};\n\n\n/**\n * @param {string} c Character.\n * @param {boolean=} opt_decimal Whether the string number\n *     contains a dot, i.e. is a decimal number.\n * @return {boolean} Whether the character is numeric.\n * @private\n */\nLexer.prototype.isNumeric_ = function(c, opt_decimal) {\n  const decimal = opt_decimal !== undefined ? opt_decimal : false;\n  return c >= '0' && c <= '9' || c == '.' && !decimal;\n};\n\n\n/**\n * @param {string} c Character.\n * @return {boolean} Whether the character is whitespace.\n * @private\n */\nLexer.prototype.isWhiteSpace_ = function(c) {\n  return c == ' ' || c == '\\t' || c == '\\r' || c == '\\n';\n};\n\n\n/**\n * @return {string} Next string character.\n * @private\n */\nLexer.prototype.nextChar_ = function() {\n  return this.wkt.charAt(++this.index_);\n};\n\n\n/**\n * Fetch and return the next token.\n * @return {!module:ol/format/WKT~Token} Next string token.\n */\nLexer.prototype.nextToken = function() {\n  const c = this.nextChar_();\n  const token = {position: this.index_, value: c};\n\n  if (c == '(') {\n    token.type = TokenType.LEFT_PAREN;\n  } else if (c == ',') {\n    token.type = TokenType.COMMA;\n  } else if (c == ')') {\n    token.type = TokenType.RIGHT_PAREN;\n  } else if (this.isNumeric_(c) || c == '-') {\n    token.type = TokenType.NUMBER;\n    token.value = this.readNumber_();\n  } else if (this.isAlpha_(c)) {\n    token.type = TokenType.TEXT;\n    token.value = this.readText_();\n  } else if (this.isWhiteSpace_(c)) {\n    return this.nextToken();\n  } else if (c === '') {\n    token.type = TokenType.EOF;\n  } else {\n    throw new Error('Unexpected character: ' + c);\n  }\n\n  return token;\n};\n\n\n/**\n * @return {number} Numeric token value.\n * @private\n */\nLexer.prototype.readNumber_ = function() {\n  let c;\n  const index = this.index_;\n  let decimal = false;\n  let scientificNotation = false;\n  do {\n    if (c == '.') {\n      decimal = true;\n    } else if (c == 'e' || c == 'E') {\n      scientificNotation = true;\n    }\n    c = this.nextChar_();\n  } while (\n    this.isNumeric_(c, decimal) ||\n      // if we haven't detected a scientific number before, 'e' or 'E'\n      // hint that we should continue to read\n      !scientificNotation && (c == 'e' || c == 'E') ||\n      // once we know that we have a scientific number, both '-' and '+'\n      // are allowed\n      scientificNotation && (c == '-' || c == '+')\n  );\n  return parseFloat(this.wkt.substring(index, this.index_--));\n};\n\n\n/**\n * @return {string} String token value.\n * @private\n */\nLexer.prototype.readText_ = function() {\n  let c;\n  const index = this.index_;\n  do {\n    c = this.nextChar_();\n  } while (this.isAlpha_(c));\n  return this.wkt.substring(index, this.index_--).toUpperCase();\n};\n\n\n/**\n * Class to parse the tokens from the WKT string.\n * @param {module:ol/format/WKT~Lexer} lexer The lexer.\n * @constructor\n */\nconst Parser = function(lexer) {\n\n  /**\n   * @type {module:ol/format/WKT~Lexer}\n   * @private\n   */\n  this.lexer_ = lexer;\n\n  /**\n   * @type {module:ol/format/WKT~Token}\n   * @private\n   */\n  this.token_;\n\n  /**\n   * @type {module:ol/geom/GeometryLayout}\n   * @private\n   */\n  this.layout_ = GeometryLayout.XY;\n};\n\n\n/**\n * Fetch the next token form the lexer and replace the active token.\n * @private\n */\nParser.prototype.consume_ = function() {\n  this.token_ = this.lexer_.nextToken();\n};\n\n/**\n * Tests if the given type matches the type of the current token.\n * @param {module:ol/format/WKT~TokenType} type Token type.\n * @return {boolean} Whether the token matches the given type.\n */\nParser.prototype.isTokenType = function(type) {\n  const isMatch = this.token_.type == type;\n  return isMatch;\n};\n\n\n/**\n * If the given type matches the current token, consume it.\n * @param {module:ol/format/WKT~TokenType} type Token type.\n * @return {boolean} Whether the token matches the given type.\n */\nParser.prototype.match = function(type) {\n  const isMatch = this.isTokenType(type);\n  if (isMatch) {\n    this.consume_();\n  }\n  return isMatch;\n};\n\n\n/**\n * Try to parse the tokens provided by the lexer.\n * @return {module:ol/geom/Geometry} The geometry.\n */\nParser.prototype.parse = function() {\n  this.consume_();\n  const geometry = this.parseGeometry_();\n  return geometry;\n};\n\n\n/**\n * Try to parse the dimensional info.\n * @return {module:ol/geom/GeometryLayout} The layout.\n * @private\n */\nParser.prototype.parseGeometryLayout_ = function() {\n  let layout = GeometryLayout.XY;\n  const dimToken = this.token_;\n  if (this.isTokenType(TokenType.TEXT)) {\n    const dimInfo = dimToken.value;\n    if (dimInfo === Z) {\n      layout = GeometryLayout.XYZ;\n    } else if (dimInfo === M) {\n      layout = GeometryLayout.XYM;\n    } else if (dimInfo === ZM) {\n      layout = GeometryLayout.XYZM;\n    }\n    if (layout !== GeometryLayout.XY) {\n      this.consume_();\n    }\n  }\n  return layout;\n};\n\n\n/**\n * @return {!Array.<module:ol/geom/Geometry>} A collection of geometries.\n * @private\n */\nParser.prototype.parseGeometryCollectionText_ = function() {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    const geometries = [];\n    do {\n      geometries.push(this.parseGeometry_());\n    } while (this.match(TokenType.COMMA));\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return geometries;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n\n/**\n * @return {Array.<number>} All values in a point.\n * @private\n */\nParser.prototype.parsePointText_ = function() {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    const coordinates = this.parsePoint_();\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return null;\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n\n/**\n * @return {!Array.<!Array.<number>>} All points in a linestring.\n * @private\n */\nParser.prototype.parseLineStringText_ = function() {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    const coordinates = this.parsePointList_();\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n\n/**\n * @return {!Array.<!Array.<number>>} All points in a polygon.\n * @private\n */\nParser.prototype.parsePolygonText_ = function() {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    const coordinates = this.parseLineStringTextList_();\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n\n/**\n * @return {!Array.<!Array.<number>>} All points in a multipoint.\n * @private\n */\nParser.prototype.parseMultiPointText_ = function() {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    let coordinates;\n    if (this.token_.type == TokenType.LEFT_PAREN) {\n      coordinates = this.parsePointTextList_();\n    } else {\n      coordinates = this.parsePointList_();\n    }\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n\n/**\n * @return {!Array.<!Array.<number>>} All linestring points\n *                                        in a multilinestring.\n * @private\n */\nParser.prototype.parseMultiLineStringText_ = function() {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    const coordinates = this.parseLineStringTextList_();\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n\n/**\n * @return {!Array.<!Array.<number>>} All polygon points in a multipolygon.\n * @private\n */\nParser.prototype.parseMultiPolygonText_ = function() {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    const coordinates = this.parsePolygonTextList_();\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n\n/**\n * @return {!Array.<number>} A point.\n * @private\n */\nParser.prototype.parsePoint_ = function() {\n  const coordinates = [];\n  const dimensions = this.layout_.length;\n  for (let i = 0; i < dimensions; ++i) {\n    const token = this.token_;\n    if (this.match(TokenType.NUMBER)) {\n      coordinates.push(token.value);\n    } else {\n      break;\n    }\n  }\n  if (coordinates.length == dimensions) {\n    return coordinates;\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n\n/**\n * @return {!Array.<!Array.<number>>} An array of points.\n * @private\n */\nParser.prototype.parsePointList_ = function() {\n  const coordinates = [this.parsePoint_()];\n  while (this.match(TokenType.COMMA)) {\n    coordinates.push(this.parsePoint_());\n  }\n  return coordinates;\n};\n\n\n/**\n * @return {!Array.<!Array.<number>>} An array of points.\n * @private\n */\nParser.prototype.parsePointTextList_ = function() {\n  const coordinates = [this.parsePointText_()];\n  while (this.match(TokenType.COMMA)) {\n    coordinates.push(this.parsePointText_());\n  }\n  return coordinates;\n};\n\n\n/**\n * @return {!Array.<!Array.<number>>} An array of points.\n * @private\n */\nParser.prototype.parseLineStringTextList_ = function() {\n  const coordinates = [this.parseLineStringText_()];\n  while (this.match(TokenType.COMMA)) {\n    coordinates.push(this.parseLineStringText_());\n  }\n  return coordinates;\n};\n\n\n/**\n * @return {!Array.<!Array.<number>>} An array of points.\n * @private\n */\nParser.prototype.parsePolygonTextList_ = function() {\n  const coordinates = [this.parsePolygonText_()];\n  while (this.match(TokenType.COMMA)) {\n    coordinates.push(this.parsePolygonText_());\n  }\n  return coordinates;\n};\n\n\n/**\n * @return {boolean} Whether the token implies an empty geometry.\n * @private\n */\nParser.prototype.isEmptyGeometry_ = function() {\n  const isEmpty = this.isTokenType(TokenType.TEXT) &&\n      this.token_.value == EMPTY;\n  if (isEmpty) {\n    this.consume_();\n  }\n  return isEmpty;\n};\n\n\n/**\n * Create an error message for an unexpected token error.\n * @return {string} Error message.\n * @private\n */\nParser.prototype.formatErrorMessage_ = function() {\n  return 'Unexpected `' + this.token_.value + '` at position ' +\n      this.token_.position + ' in `' + this.lexer_.wkt + '`';\n};\n\n\n/**\n * @classdesc\n * Geometry format for reading and writing data in the `WellKnownText` (WKT)\n * format.\n *\n * @constructor\n * @extends {module:ol/format/TextFeature}\n * @param {module:ol/format/WKT~Options=} opt_options Options.\n * @api\n */\nconst WKT = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  TextFeature.call(this);\n\n  /**\n   * Split GeometryCollection into multiple features.\n   * @type {boolean}\n   * @private\n   */\n  this.splitCollection_ = options.splitCollection !== undefined ?\n    options.splitCollection : false;\n\n};\n\ninherits(WKT, TextFeature);\n\n\n/**\n * @param {module:ol/geom/Point} geom Point geometry.\n * @return {string} Coordinates part of Point as WKT.\n */\nfunction encodePointGeometry(geom) {\n  const coordinates = geom.getCoordinates();\n  if (coordinates.length === 0) {\n    return '';\n  }\n  return coordinates.join(' ');\n}\n\n\n/**\n * @param {module:ol/geom/MultiPoint} geom MultiPoint geometry.\n * @return {string} Coordinates part of MultiPoint as WKT.\n */\nfunction encodeMultiPointGeometry(geom) {\n  const array = [];\n  const components = geom.getPoints();\n  for (let i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodePointGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {module:ol/geom/GeometryCollection} geom GeometryCollection geometry.\n * @return {string} Coordinates part of GeometryCollection as WKT.\n */\nfunction encodeGeometryCollectionGeometry(geom) {\n  const array = [];\n  const geoms = geom.getGeometries();\n  for (let i = 0, ii = geoms.length; i < ii; ++i) {\n    array.push(encode(geoms[i]));\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {module:ol/geom/LineString|module:ol/geom/LinearRing} geom LineString geometry.\n * @return {string} Coordinates part of LineString as WKT.\n */\nfunction encodeLineStringGeometry(geom) {\n  const coordinates = geom.getCoordinates();\n  const array = [];\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    array.push(coordinates[i].join(' '));\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {module:ol/geom/MultiLineString} geom MultiLineString geometry.\n * @return {string} Coordinates part of MultiLineString as WKT.\n */\nfunction encodeMultiLineStringGeometry(geom) {\n  const array = [];\n  const components = geom.getLineStrings();\n  for (let i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodeLineStringGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {module:ol/geom/Polygon} geom Polygon geometry.\n * @return {string} Coordinates part of Polygon as WKT.\n */\nfunction encodePolygonGeometry(geom) {\n  const array = [];\n  const rings = geom.getLinearRings();\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    array.push('(' + encodeLineStringGeometry(rings[i]) + ')');\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {module:ol/geom/MultiPolygon} geom MultiPolygon geometry.\n * @return {string} Coordinates part of MultiPolygon as WKT.\n */\nfunction encodeMultiPolygonGeometry(geom) {\n  const array = [];\n  const components = geom.getPolygons();\n  for (let i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodePolygonGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n/**\n * @param {module:ol/geom/SimpleGeometry} geom SimpleGeometry geometry.\n * @return {string} Potential dimensional information for WKT type.\n */\nfunction encodeGeometryLayout(geom) {\n  const layout = geom.getLayout();\n  let dimInfo = '';\n  if (layout === GeometryLayout.XYZ || layout === GeometryLayout.XYZM) {\n    dimInfo += Z;\n  }\n  if (layout === GeometryLayout.XYM || layout === GeometryLayout.XYZM) {\n    dimInfo += M;\n  }\n  return dimInfo;\n}\n\n\n/**\n * @const\n * @type {Object.<string, function(module:ol/geom/Geometry): string>}\n */\nconst GeometryEncoder = {\n  'Point': encodePointGeometry,\n  'LineString': encodeLineStringGeometry,\n  'Polygon': encodePolygonGeometry,\n  'MultiPoint': encodeMultiPointGeometry,\n  'MultiLineString': encodeMultiLineStringGeometry,\n  'MultiPolygon': encodeMultiPolygonGeometry,\n  'GeometryCollection': encodeGeometryCollectionGeometry\n};\n\n\n/**\n * Encode a geometry as WKT.\n * @param {module:ol/geom/Geometry} geom The geometry to encode.\n * @return {string} WKT string for the geometry.\n */\nfunction encode(geom) {\n  let type = geom.getType();\n  const geometryEncoder = GeometryEncoder[type];\n  const enc = geometryEncoder(geom);\n  type = type.toUpperCase();\n  if (geom instanceof SimpleGeometry) {\n    const dimInfo = encodeGeometryLayout(geom);\n    if (dimInfo.length > 0) {\n      type += ' ' + dimInfo;\n    }\n  }\n  if (enc.length === 0) {\n    return type + ' ' + EMPTY;\n  }\n  return type + '(' + enc + ')';\n}\n\n\n/**\n * Parse a WKT string.\n * @param {string} wkt WKT string.\n * @return {module:ol/geom/Geometry|undefined}\n *     The geometry created.\n * @private\n */\nWKT.prototype.parse_ = function(wkt) {\n  const lexer = new Lexer(wkt);\n  const parser = new Parser(lexer);\n  return parser.parse();\n};\n\n\n/**\n * Read a feature from a WKT source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/Feature} Feature.\n * @api\n */\nWKT.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nWKT.prototype.readFeatureFromText = function(text, opt_options) {\n  const geom = this.readGeometryFromText(text, opt_options);\n  if (geom) {\n    const feature = new Feature();\n    feature.setGeometry(geom);\n    return feature;\n  }\n  return null;\n};\n\n\n/**\n * Read all features from a WKT source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nWKT.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWKT.prototype.readFeaturesFromText = function(text, opt_options) {\n  let geometries = [];\n  const geometry = this.readGeometryFromText(text, opt_options);\n  if (this.splitCollection_ &&\n      geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    geometries = (/** @type {module:ol/geom/GeometryCollection} */ (geometry))\n      .getGeometriesArray();\n  } else {\n    geometries = [geometry];\n  }\n  const features = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    const feature = new Feature();\n    feature.setGeometry(geometries[i]);\n    features.push(feature);\n  }\n  return features;\n};\n\n\n/**\n * Read a single geometry from a WKT source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/geom/Geometry} Geometry.\n * @api\n */\nWKT.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nWKT.prototype.readGeometryFromText = function(text, opt_options) {\n  const geometry = this.parse_(text);\n  if (geometry) {\n    return (\n      /** @type {module:ol/geom/Geometry} */ (transformWithOptions(geometry, false, opt_options))\n    );\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @enum {function (new:module:ol/geom/Geometry, Array, module:ol/geom/GeometryLayout)}\n */\nconst GeometryConstructor = {\n  'POINT': Point,\n  'LINESTRING': LineString,\n  'POLYGON': Polygon,\n  'MULTIPOINT': MultiPoint,\n  'MULTILINESTRING': MultiLineString,\n  'MULTIPOLYGON': MultiPolygon\n};\n\n\n/**\n * @enum {(function(): Array)}\n */\nconst GeometryParser = {\n  'POINT': Parser.prototype.parsePointText_,\n  'LINESTRING': Parser.prototype.parseLineStringText_,\n  'POLYGON': Parser.prototype.parsePolygonText_,\n  'MULTIPOINT': Parser.prototype.parseMultiPointText_,\n  'MULTILINESTRING': Parser.prototype.parseMultiLineStringText_,\n  'MULTIPOLYGON': Parser.prototype.parseMultiPolygonText_\n};\n\n\n/**\n * @return {!module:ol/geom/Geometry} The geometry.\n * @private\n */\nParser.prototype.parseGeometry_ = function() {\n  const token = this.token_;\n  if (this.match(TokenType.TEXT)) {\n    const geomType = token.value;\n    this.layout_ = this.parseGeometryLayout_();\n    if (geomType == GeometryType.GEOMETRY_COLLECTION.toUpperCase()) {\n      const geometries = this.parseGeometryCollectionText_();\n      return new GeometryCollection(geometries);\n    } else {\n      const parser = GeometryParser[geomType];\n      const ctor = GeometryConstructor[geomType];\n      if (!parser || !ctor) {\n        throw new Error('Invalid geometry type: ' + geomType);\n      }\n      const coordinates = parser.call(this);\n      return new ctor(coordinates, this.layout_);\n    }\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n\n/**\n * Encode a feature as a WKT string.\n *\n * @function\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {string} WKT string.\n * @api\n */\nWKT.prototype.writeFeature;\n\n\n/**\n * @inheritDoc\n */\nWKT.prototype.writeFeatureText = function(feature, opt_options) {\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    return this.writeGeometryText(geometry, opt_options);\n  }\n  return '';\n};\n\n\n/**\n * Encode an array of features as a WKT string.\n *\n * @function\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {string} WKT string.\n * @api\n */\nWKT.prototype.writeFeatures;\n\n\n/**\n * @inheritDoc\n */\nWKT.prototype.writeFeaturesText = function(features, opt_options) {\n  if (features.length == 1) {\n    return this.writeFeatureText(features[0], opt_options);\n  }\n  const geometries = [];\n  for (let i = 0, ii = features.length; i < ii; ++i) {\n    geometries.push(features[i].getGeometry());\n  }\n  const collection = new GeometryCollection(geometries);\n  return this.writeGeometryText(collection, opt_options);\n};\n\n\n/**\n * Write a single geometry as a WKT string.\n *\n * @function\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {string} WKT string.\n * @api\n */\nWKT.prototype.writeGeometry;\n\n\n/**\n * @inheritDoc\n */\nWKT.prototype.writeGeometryText = function(geometry, opt_options) {\n  return encode(/** @type {module:ol/geom/Geometry} */ (\n    transformWithOptions(geometry, true, opt_options)));\n};\n\n\nexport default WKT;\n","/**\n * @module ol/format/TopoJSON\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport JSONFeature from '../format/JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/proj~ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {string} [layerName] Set the name of the TopoJSON topology\n * `objects`'s children as feature property with the specified name. This means\n * that when set to `'layer'`, a topology like\n * ```\n * {\n *   \"type\": \"Topology\",\n *   \"objects\": {\n *     \"example\": {\n *       \"type\": \"GeometryCollection\",\n *       \"geometries\": []\n *     }\n *   }\n * }\n * ```\n * will result in features that have a property `'layer'` set to `'example'`.\n * When not set, no property will be added to features.\n * @property {Array.<string>} [layers] Names of the TopoJSON topology's\n * `objects`'s children to read features from.  If not provided, features will\n * be read from all children.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading data in the TopoJSON format.\n *\n * @constructor\n * @extends {module:ol/format/JSONFeature}\n * @param {module:ol/format/TopoJSON~Options=} opt_options Options.\n * @api\n */\nconst TopoJSON = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  JSONFeature.call(this);\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.layerName_ = options.layerName;\n\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.layers_ = options.layers ? options.layers : null;\n\n  /**\n   * @inheritDoc\n   */\n  this.dataProjection = getProjection(\n    options.dataProjection ?\n      options.dataProjection : 'EPSG:4326');\n\n};\n\ninherits(TopoJSON, JSONFeature);\n\n\n/**\n * @const\n * @type {Object.<string, function(TopoJSONGeometry, Array, ...Array): module:ol/geom/Geometry>}\n */\nconst GEOMETRY_READERS = {\n  'Point': readPointGeometry,\n  'LineString': readLineStringGeometry,\n  'Polygon': readPolygonGeometry,\n  'MultiPoint': readMultiPointGeometry,\n  'MultiLineString': readMultiLineStringGeometry,\n  'MultiPolygon': readMultiPolygonGeometry\n};\n\n\n/**\n * Concatenate arcs into a coordinate array.\n * @param {Array.<number>} indices Indices of arcs to concatenate.  Negative\n *     values indicate arcs need to be reversed.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} arcs Array of arcs (already\n *     transformed).\n * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates array.\n */\nfunction concatenateArcs(indices, arcs) {\n  /** @type {Array.<module:ol/coordinate~Coordinate>} */\n  const coordinates = [];\n  let index, arc;\n  for (let i = 0, ii = indices.length; i < ii; ++i) {\n    index = indices[i];\n    if (i > 0) {\n      // splicing together arcs, discard last point\n      coordinates.pop();\n    }\n    if (index >= 0) {\n      // forward arc\n      arc = arcs[index];\n    } else {\n      // reverse arc\n      arc = arcs[~index].slice().reverse();\n    }\n    coordinates.push.apply(coordinates, arc);\n  }\n  // provide fresh copies of coordinate arrays\n  for (let j = 0, jj = coordinates.length; j < jj; ++j) {\n    coordinates[j] = coordinates[j].slice();\n  }\n  return coordinates;\n}\n\n\n/**\n * Create a point from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON object.\n * @param {Array.<number>} scale Scale for each dimension.\n * @param {Array.<number>} translate Translation for each dimension.\n * @return {module:ol/geom/Point} Geometry.\n */\nfunction readPointGeometry(object, scale, translate) {\n  const coordinates = object.coordinates;\n  if (scale && translate) {\n    transformVertex(coordinates, scale, translate);\n  }\n  return new Point(coordinates);\n}\n\n\n/**\n * Create a multi-point from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON object.\n * @param {Array.<number>} scale Scale for each dimension.\n * @param {Array.<number>} translate Translation for each dimension.\n * @return {module:ol/geom/MultiPoint} Geometry.\n */\nfunction readMultiPointGeometry(object, scale, translate) {\n  const coordinates = object.coordinates;\n  if (scale && translate) {\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      transformVertex(coordinates[i], scale, translate);\n    }\n  }\n  return new MultiPoint(coordinates);\n}\n\n\n/**\n * Create a linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON object.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} arcs Array of arcs.\n * @return {module:ol/geom/LineString} Geometry.\n */\nfunction readLineStringGeometry(object, arcs) {\n  const coordinates = concatenateArcs(object.arcs, arcs);\n  return new LineString(coordinates);\n}\n\n\n/**\n * Create a multi-linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON object.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} arcs Array of arcs.\n * @return {module:ol/geom/MultiLineString} Geometry.\n */\nfunction readMultiLineStringGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object.arcs.length; i < ii; ++i) {\n    coordinates[i] = concatenateArcs(object.arcs[i], arcs);\n  }\n  return new MultiLineString(coordinates);\n}\n\n\n/**\n * Create a polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON object.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} arcs Array of arcs.\n * @return {module:ol/geom/Polygon} Geometry.\n */\nfunction readPolygonGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object.arcs.length; i < ii; ++i) {\n    coordinates[i] = concatenateArcs(object.arcs[i], arcs);\n  }\n  return new Polygon(coordinates);\n}\n\n\n/**\n * Create a multi-polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON object.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} arcs Array of arcs.\n * @return {module:ol/geom/MultiPolygon} Geometry.\n */\nfunction readMultiPolygonGeometry(object, arcs) {\n  const coordinates = [];\n  for (let i = 0, ii = object.arcs.length; i < ii; ++i) {\n    // for each polygon\n    const polyArray = object.arcs[i];\n    const ringCoords = [];\n    for (let j = 0, jj = polyArray.length; j < jj; ++j) {\n      // for each ring\n      ringCoords[j] = concatenateArcs(polyArray[j], arcs);\n    }\n    coordinates[i] = ringCoords;\n  }\n  return new MultiPolygon(coordinates);\n}\n\n\n/**\n * Create features from a TopoJSON GeometryCollection object.\n *\n * @param {TopoJSONGeometryCollection} collection TopoJSON Geometry\n *     object.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} arcs Array of arcs.\n * @param {Array.<number>} scale Scale for each dimension.\n * @param {Array.<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {Array.<module:ol/Feature>} Array of features.\n */\nfunction readFeaturesFromGeometryCollection(collection, arcs, scale, translate, property, name, opt_options) {\n  const geometries = collection.geometries;\n  const features = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    features[i] = readFeatureFromGeometry(\n      geometries[i], arcs, scale, translate, property, name, opt_options);\n  }\n  return features;\n}\n\n\n/**\n * Create a feature from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON geometry object.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} arcs Array of arcs.\n * @param {Array.<number>} scale Scale for each dimension.\n * @param {Array.<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/Feature} Feature.\n */\nfunction readFeatureFromGeometry(object, arcs, scale, translate, property, name, opt_options) {\n  let geometry;\n  const type = object.type;\n  const geometryReader = GEOMETRY_READERS[type];\n  if ((type === 'Point') || (type === 'MultiPoint')) {\n    geometry = geometryReader(object, scale, translate);\n  } else {\n    geometry = geometryReader(object, arcs);\n  }\n  const feature = new Feature();\n  feature.setGeometry(/** @type {module:ol/geom/Geometry} */ (\n    transformWithOptions(geometry, false, opt_options)));\n  if (object.id !== undefined) {\n    feature.setId(object.id);\n  }\n  let properties = object.properties;\n  if (property) {\n    if (!properties) {\n      properties = {};\n    }\n    properties[property] = name;\n  }\n  if (properties) {\n    feature.setProperties(properties);\n  }\n  return feature;\n}\n\n\n/**\n * Read all features from a TopoJSON source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nTopoJSON.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nTopoJSON.prototype.readFeaturesFromObject = function(object, opt_options) {\n  if (object.type == 'Topology') {\n    const topoJSONTopology = /** @type {TopoJSONTopology} */ (object);\n    let transform, scale = null, translate = null;\n    if (topoJSONTopology.transform) {\n      transform = topoJSONTopology.transform;\n      scale = transform.scale;\n      translate = transform.translate;\n    }\n    const arcs = topoJSONTopology.arcs;\n    if (transform) {\n      transformArcs(arcs, scale, translate);\n    }\n    /** @type {Array.<module:ol/Feature>} */\n    const features = [];\n    const topoJSONFeatures = topoJSONTopology.objects;\n    const property = this.layerName_;\n    let feature;\n    for (const objectName in topoJSONFeatures) {\n      if (this.layers_ && this.layers_.indexOf(objectName) == -1) {\n        continue;\n      }\n      if (topoJSONFeatures[objectName].type === 'GeometryCollection') {\n        feature = /** @type {TopoJSONGeometryCollection} */ (topoJSONFeatures[objectName]);\n        features.push.apply(features, readFeaturesFromGeometryCollection(\n          feature, arcs, scale, translate, property, objectName, opt_options));\n      } else {\n        feature = /** @type {TopoJSONGeometry} */ (topoJSONFeatures[objectName]);\n        features.push(readFeatureFromGeometry(\n          feature, arcs, scale, translate, property, objectName, opt_options));\n      }\n    }\n    return features;\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * Apply a linear transform to array of arcs.  The provided array of arcs is\n * modified in place.\n *\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} arcs Array of arcs.\n * @param {Array.<number>} scale Scale for each dimension.\n * @param {Array.<number>} translate Translation for each dimension.\n */\nfunction transformArcs(arcs, scale, translate) {\n  for (let i = 0, ii = arcs.length; i < ii; ++i) {\n    transformArc(arcs[i], scale, translate);\n  }\n}\n\n\n/**\n * Apply a linear transform to an arc.  The provided arc is modified in place.\n *\n * @param {Array.<module:ol/coordinate~Coordinate>} arc Arc.\n * @param {Array.<number>} scale Scale for each dimension.\n * @param {Array.<number>} translate Translation for each dimension.\n */\nfunction transformArc(arc, scale, translate) {\n  let x = 0;\n  let y = 0;\n  for (let i = 0, ii = arc.length; i < ii; ++i) {\n    const vertex = arc[i];\n    x += vertex[0];\n    y += vertex[1];\n    vertex[0] = x;\n    vertex[1] = y;\n    transformVertex(vertex, scale, translate);\n  }\n}\n\n\n/**\n * Apply a linear transform to a vertex.  The provided vertex is modified in\n * place.\n *\n * @param {module:ol/coordinate~Coordinate} vertex Vertex.\n * @param {Array.<number>} scale Scale for each dimension.\n * @param {Array.<number>} translate Translation for each dimension.\n */\nfunction transformVertex(vertex, scale, translate) {\n  vertex[0] = vertex[0] * scale[0] + translate[0];\n  vertex[1] = vertex[1] * scale[1] + translate[1];\n}\n\n\n/**\n * Read the projection from a TopoJSON source.\n *\n * @param {Document|Node|Object|string} object Source.\n * @return {module:ol/proj/Projection} Projection.\n * @override\n * @api\n */\nTopoJSON.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nTopoJSON.prototype.readProjectionFromObject = function(object) {\n  return this.dataProjection;\n};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nTopoJSON.prototype.writeFeatureObject = function(feature, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nTopoJSON.prototype.writeFeaturesObject = function(features, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nTopoJSON.prototype.writeGeometryObject = function(geometry, opt_options) {};\n\n\n/**\n * Not implemented.\n * @override\n */\nTopoJSON.prototype.readGeometryFromObject = function() {};\n\n\n/**\n * Not implemented.\n * @override\n */\nTopoJSON.prototype.readFeatureFromObject = function() {};\nexport default TopoJSON;\n","/**\n * @module ol/format/EsriJSON\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport JSONFeature from '../format/JSONFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {linearRingIsClockwise} from '../geom/flat/orient.js';\nimport {assign, isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @const\n * @type {Object.<module:ol/geom/GeometryType, function(EsriJSONGeometry): module:ol/geom/Geometry>}\n */\nconst GEOMETRY_READERS = {};\nGEOMETRY_READERS[GeometryType.POINT] = readPointGeometry;\nGEOMETRY_READERS[GeometryType.LINE_STRING] = readLineStringGeometry;\nGEOMETRY_READERS[GeometryType.POLYGON] = readPolygonGeometry;\nGEOMETRY_READERS[GeometryType.MULTI_POINT] = readMultiPointGeometry;\nGEOMETRY_READERS[GeometryType.MULTI_LINE_STRING] = readMultiLineStringGeometry;\nGEOMETRY_READERS[GeometryType.MULTI_POLYGON] = readMultiPolygonGeometry;\n\n\n/**\n * @const\n * @type {Object.<string, function(module:ol/geom/Geometry, module:ol/format/Feature~WriteOptions=): (EsriJSONGeometry)>}\n */\nconst GEOMETRY_WRITERS = {};\nGEOMETRY_WRITERS[GeometryType.POINT] = writePointGeometry;\nGEOMETRY_WRITERS[GeometryType.LINE_STRING] = writeLineStringGeometry;\nGEOMETRY_WRITERS[GeometryType.POLYGON] = writePolygonGeometry;\nGEOMETRY_WRITERS[GeometryType.MULTI_POINT] = writeMultiPointGeometry;\nGEOMETRY_WRITERS[GeometryType.MULTI_LINE_STRING] = writeMultiLineStringGeometry;\nGEOMETRY_WRITERS[GeometryType.MULTI_POLYGON] = writeMultiPolygonGeometry;\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [geometryName] Geometry name to use when creating features.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the EsriJSON format.\n *\n * @constructor\n * @extends {module:ol/format/JSONFeature}\n * @param {module:ol/format/EsriJSON~Options=} opt_options Options.\n * @api\n */\nconst EsriJSON = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  JSONFeature.call(this);\n\n  /**\n   * Name of the geometry attribute for features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n};\n\ninherits(EsriJSON, JSONFeature);\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/geom/Geometry} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n  /** @type {module:ol/geom/GeometryType} */\n  let type;\n  if (typeof object.x === 'number' && typeof object.y === 'number') {\n    type = GeometryType.POINT;\n  } else if (object.points) {\n    type = GeometryType.MULTI_POINT;\n  } else if (object.paths) {\n    if (object.paths.length === 1) {\n      type = GeometryType.LINE_STRING;\n    } else {\n      type = GeometryType.MULTI_LINE_STRING;\n    }\n  } else if (object.rings) {\n    const layout = getGeometryLayout(object);\n    const rings = convertRings(object.rings, layout);\n    object = /** @type {EsriJSONGeometry} */(assign({}, object));\n    if (rings.length === 1) {\n      type = GeometryType.POLYGON;\n      object.rings = rings[0];\n    } else {\n      type = GeometryType.MULTI_POLYGON;\n      object.rings = rings;\n    }\n  }\n  const geometryReader = GEOMETRY_READERS[type];\n  return (\n    /** @type {module:ol/geom/Geometry} */ (transformWithOptions(geometryReader(object), false, opt_options))\n  );\n}\n\n\n/**\n * Determines inner and outer rings.\n * Checks if any polygons in this array contain any other polygons in this\n * array. It is used for checking for holes.\n * Logic inspired by: https://github.com/Esri/terraformer-arcgis-parser\n * @param {Array.<!Array.<!Array.<number>>>} rings Rings.\n * @param {module:ol/geom/GeometryLayout} layout Geometry layout.\n * @return {Array.<!Array.<!Array.<number>>>} Transformed rings.\n */\nfunction convertRings(rings, layout) {\n  const flatRing = [];\n  const outerRings = [];\n  const holes = [];\n  let i, ii;\n  for (i = 0, ii = rings.length; i < ii; ++i) {\n    flatRing.length = 0;\n    deflateCoordinates(flatRing, 0, rings[i], layout.length);\n    // is this ring an outer ring? is it clockwise?\n    const clockwise = linearRingIsClockwise(flatRing, 0,\n      flatRing.length, layout.length);\n    if (clockwise) {\n      outerRings.push([rings[i]]);\n    } else {\n      holes.push(rings[i]);\n    }\n  }\n  while (holes.length) {\n    const hole = holes.shift();\n    let matched = false;\n    // loop over all outer rings and see if they contain our hole.\n    for (i = outerRings.length - 1; i >= 0; i--) {\n      const outerRing = outerRings[i][0];\n      const containsHole = containsExtent(\n        new LinearRing(outerRing).getExtent(),\n        new LinearRing(hole).getExtent()\n      );\n      if (containsHole) {\n        // the hole is contained push it into our polygon\n        outerRings[i].push(hole);\n        matched = true;\n        break;\n      }\n    }\n    if (!matched) {\n      // no outer rings contain this hole turn it into and outer\n      // ring (reverse it)\n      outerRings.push([hole.reverse()]);\n    }\n  }\n  return outerRings;\n}\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @return {module:ol/geom/Geometry} Point.\n */\nfunction readPointGeometry(object) {\n  let point;\n  if (object.m !== undefined && object.z !== undefined) {\n    point = new Point([object.x, object.y, object.z, object.m],\n      GeometryLayout.XYZM);\n  } else if (object.z !== undefined) {\n    point = new Point([object.x, object.y, object.z],\n      GeometryLayout.XYZ);\n  } else if (object.m !== undefined) {\n    point = new Point([object.x, object.y, object.m],\n      GeometryLayout.XYM);\n  } else {\n    point = new Point([object.x, object.y]);\n  }\n  return point;\n}\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @return {module:ol/geom/Geometry} LineString.\n */\nfunction readLineStringGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new LineString(object.paths[0], layout);\n}\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @return {module:ol/geom/Geometry} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new MultiLineString(object.paths, layout);\n}\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @return {module:ol/geom/GeometryLayout} The geometry layout to use.\n */\nfunction getGeometryLayout(object) {\n  let layout = GeometryLayout.XY;\n  if (object.hasZ === true && object.hasM === true) {\n    layout = GeometryLayout.XYZM;\n  } else if (object.hasZ === true) {\n    layout = GeometryLayout.XYZ;\n  } else if (object.hasM === true) {\n    layout = GeometryLayout.XYM;\n  }\n  return layout;\n}\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @return {module:ol/geom/Geometry} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new MultiPoint(object.points, layout);\n}\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @return {module:ol/geom/Geometry} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new MultiPolygon(\n    /** @type {Array.<Array.<Array.<Array.<number>>>>} */(object.rings),\n    layout);\n}\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @return {module:ol/geom/Geometry} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new Polygon(object.rings, layout);\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {EsriJSONGeometry} EsriJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  const coordinates = /** @type {module:ol/geom/Point} */ (geometry).getCoordinates();\n  let esriJSON;\n  const layout = /** @type {module:ol/geom/Point} */ (geometry).getLayout();\n  if (layout === GeometryLayout.XYZ) {\n    esriJSON = /** @type {EsriJSONPoint} */ ({\n      x: coordinates[0],\n      y: coordinates[1],\n      z: coordinates[2]\n    });\n  } else if (layout === GeometryLayout.XYM) {\n    esriJSON = /** @type {EsriJSONPoint} */ ({\n      x: coordinates[0],\n      y: coordinates[1],\n      m: coordinates[2]\n    });\n  } else if (layout === GeometryLayout.XYZM) {\n    esriJSON = /** @type {EsriJSONPoint} */ ({\n      x: coordinates[0],\n      y: coordinates[1],\n      z: coordinates[2],\n      m: coordinates[3]\n    });\n  } else if (layout === GeometryLayout.XY) {\n    esriJSON = /** @type {EsriJSONPoint} */ ({\n      x: coordinates[0],\n      y: coordinates[1]\n    });\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n  return /** @type {EsriJSONGeometry} */ (esriJSON);\n}\n\n\n/**\n * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n * @return {Object} Object with boolean hasZ and hasM keys.\n */\nfunction getHasZM(geometry) {\n  const layout = geometry.getLayout();\n  return {\n    hasZ: (layout === GeometryLayout.XYZ ||\n      layout === GeometryLayout.XYZM),\n    hasM: (layout === GeometryLayout.XYM ||\n      layout === GeometryLayout.XYZM)\n  };\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolyline} EsriJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  const hasZM = getHasZM(/** @type {module:ol/geom/LineString} */(geometry));\n  return (\n    /** @type {EsriJSONPolyline} */ {\n      hasZ: hasZM.hasZ,\n      hasM: hasZM.hasM,\n      paths: [\n        /** @type {module:ol/geom/LineString} */ (geometry).getCoordinates()\n      ]\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolygon} EsriJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  // Esri geometries use the left-hand rule\n  const hasZM = getHasZM(/** @type {module:ol/geom/Polygon} */(geometry));\n  return (\n    /** @type {EsriJSONPolygon} */ {\n      hasZ: hasZM.hasZ,\n      hasM: hasZM.hasM,\n      rings: /** @type {module:ol/geom/Polygon} */ (geometry).getCoordinates(false)\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolyline} EsriJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  const hasZM = getHasZM(/** @type {module:ol/geom/MultiLineString} */(geometry));\n  return (\n    /** @type {EsriJSONPolyline} */ {\n      hasZ: hasZM.hasZ,\n      hasM: hasZM.hasM,\n      paths: /** @type {module:ol/geom/MultiLineString} */ (geometry).getCoordinates()\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {EsriJSONMultipoint} EsriJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  const hasZM = getHasZM(/** @type {module:ol/geom/MultiPoint} */(geometry));\n  return (\n    /** @type {EsriJSONMultipoint} */ {\n      hasZ: hasZM.hasZ,\n      hasM: hasZM.hasM,\n      points: /** @type {module:ol/geom/MultiPoint} */ (geometry).getCoordinates()\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolygon} EsriJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  const hasZM = getHasZM(/** @type {module:ol/geom/MultiPolygon} */(geometry));\n  const coordinates = /** @type {module:ol/geom/MultiPolygon} */ (geometry).getCoordinates(false);\n  const output = [];\n  for (let i = 0; i < coordinates.length; i++) {\n    for (let x = coordinates[i].length - 1; x >= 0; x--) {\n      output.push(coordinates[i][x]);\n    }\n  }\n  return /** @type {EsriJSONPolygon} */ ({\n    hasZ: hasZM.hasZ,\n    hasM: hasZM.hasM,\n    rings: output\n  });\n}\n\n\n/**\n * Read a feature from a EsriJSON Feature source.  Only works for Feature,\n * use `readFeatures` to read FeatureCollection source.\n *\n * @function\n * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/Feature} Feature.\n * @api\n */\nEsriJSON.prototype.readFeature;\n\n\n/**\n * Read all features from a EsriJSON source.  Works with both Feature and\n * FeatureCollection sources.\n *\n * @function\n * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nEsriJSON.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nEsriJSON.prototype.readFeatureFromObject = function(object, opt_options) {\n  const esriJSONFeature = /** @type {EsriJSONFeature} */ (object);\n  const geometry = readGeometry(esriJSONFeature.geometry, opt_options);\n  const feature = new Feature();\n  if (this.geometryName_) {\n    feature.setGeometryName(this.geometryName_);\n  }\n  feature.setGeometry(geometry);\n  if (opt_options && opt_options.idField &&\n    esriJSONFeature.attributes[opt_options.idField]) {\n    feature.setId(/** @type {number} */(esriJSONFeature.attributes[opt_options.idField]));\n  }\n  if (esriJSONFeature.attributes) {\n    feature.setProperties(esriJSONFeature.attributes);\n  }\n  return feature;\n};\n\n\n/**\n * @inheritDoc\n */\nEsriJSON.prototype.readFeaturesFromObject = function(object, opt_options) {\n  const esriJSONObject = /** @type {EsriJSONObject} */ (object);\n  const options = opt_options ? opt_options : {};\n  if (esriJSONObject.features) {\n    const esriJSONFeatureCollection = /** @type {EsriJSONFeatureCollection} */ (object);\n    /** @type {Array.<module:ol/Feature>} */\n    const features = [];\n    const esriJSONFeatures = esriJSONFeatureCollection.features;\n    options.idField = object.objectIdFieldName;\n    for (let i = 0, ii = esriJSONFeatures.length; i < ii; ++i) {\n      features.push(this.readFeatureFromObject(esriJSONFeatures[i], options));\n    }\n    return features;\n  } else {\n    return [this.readFeatureFromObject(object, options)];\n  }\n};\n\n\n/**\n * Read a geometry from a EsriJSON source.\n *\n * @function\n * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/geom/Geometry} Geometry.\n * @api\n */\nEsriJSON.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nEsriJSON.prototype.readGeometryFromObject = function(object, opt_options) {\n  return readGeometry(/** @type {EsriJSONGeometry} */(object), opt_options);\n};\n\n\n/**\n * Read the projection from a EsriJSON source.\n *\n * @function\n * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n * @return {module:ol/proj/Projection} Projection.\n * @api\n */\nEsriJSON.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nEsriJSON.prototype.readProjectionFromObject = function(object) {\n  const esriJSONObject = /** @type {EsriJSONObject} */ (object);\n  if (esriJSONObject.spatialReference && esriJSONObject.spatialReference.wkid) {\n    const crs = esriJSONObject.spatialReference.wkid;\n    return getProjection('EPSG:' + crs);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {EsriJSONGeometry} EsriJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  const geometryWriter = GEOMETRY_WRITERS[geometry.getType()];\n  return geometryWriter(/** @type {module:ol/geom/Geometry} */(\n    transformWithOptions(geometry, true, opt_options)), opt_options);\n}\n\n\n/**\n * Encode a geometry as a EsriJSON string.\n *\n * @function\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {string} EsriJSON.\n * @api\n */\nEsriJSON.prototype.writeGeometry;\n\n\n/**\n * Encode a geometry as a EsriJSON object.\n *\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {EsriJSONGeometry} Object.\n * @override\n * @api\n */\nEsriJSON.prototype.writeGeometryObject = function(geometry, opt_options) {\n  return writeGeometry(geometry, this.adaptOptions(opt_options));\n};\n\n\n/**\n * Encode a feature as a EsriJSON Feature string.\n *\n * @function\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {string} EsriJSON.\n * @api\n */\nEsriJSON.prototype.writeFeature;\n\n\n/**\n * Encode a feature as a esriJSON Feature object.\n *\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {Object} Object.\n * @override\n * @api\n */\nEsriJSON.prototype.writeFeatureObject = function(feature, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const object = {};\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    object['geometry'] = writeGeometry(geometry, opt_options);\n    if (opt_options && opt_options.featureProjection) {\n      object['geometry']['spatialReference'] = /** @type {EsriJSONCRS} */({\n        wkid: getProjection(opt_options.featureProjection).getCode().split(':').pop()\n      });\n    }\n  }\n  const properties = feature.getProperties();\n  delete properties[feature.getGeometryName()];\n  if (!isEmpty(properties)) {\n    object['attributes'] = properties;\n  } else {\n    object['attributes'] = {};\n  }\n  return object;\n};\n\n\n/**\n * Encode an array of features as EsriJSON.\n *\n * @function\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {string} EsriJSON.\n * @api\n */\nEsriJSON.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features as a EsriJSON object.\n *\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {Object} EsriJSON Object.\n * @override\n * @api\n */\nEsriJSON.prototype.writeFeaturesObject = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const objects = [];\n  for (let i = 0, ii = features.length; i < ii; ++i) {\n    objects.push(this.writeFeatureObject(features[i], opt_options));\n  }\n  return /** @type {EsriJSONFeatureCollection} */ ({\n    'features': objects\n  });\n};\n\nexport default EsriJSON;\n","/**\n * @module ol/source/ImageStatic\n */\nimport {inherits} from '../index.js';\nimport ImageWrapper from '../Image.js';\nimport ImageState from '../ImageState.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {intersects, getHeight, getWidth} from '../extent.js';\nimport {get as getProjection} from '../proj.js';\nimport ImageSource, {defaultImageLoadFunction} from '../source/Image.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {module:ol/extent~Extent} [imageExtent] Extent of the image in map coordinates.\n * This is the [left, bottom, right, top] map coordinates of your image.\n * @property {module:ol/Image~LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {module:ol/size~Size} [imageSize] Size of the image in pixels. Usually the image size is auto-detected, so this\n * only needs to be set if auto-detection fails for some reason.\n * @property {string} url Image URL.\n */\n\n\n/**\n * @classdesc\n * A layer source for displaying a single, static image.\n *\n * @constructor\n * @extends {module:ol/source/Image}\n * @param {module:ol/source/ImageStatic~Options=} options ImageStatic options.\n * @api\n */\nconst Static = function(options) {\n  const imageExtent = options.imageExtent;\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : null;\n\n  const /** @type {module:ol/Image~LoadFunction} */ imageLoadFunction =\n      options.imageLoadFunction !== undefined ?\n        options.imageLoadFunction : defaultImageLoadFunction;\n\n  ImageSource.call(this, {\n    attributions: options.attributions,\n    projection: getProjection(options.projection)\n  });\n\n  /**\n   * @private\n   * @type {module:ol/Image}\n   */\n  this.image_ = new ImageWrapper(imageExtent, undefined, 1, options.url, crossOrigin, imageLoadFunction);\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.imageSize_ = options.imageSize ? options.imageSize : null;\n\n  listen(this.image_, EventType.CHANGE,\n    this.handleImageChange, this);\n\n};\n\ninherits(Static, ImageSource);\n\n\n/**\n * @inheritDoc\n */\nStatic.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n  if (intersects(extent, this.image_.getExtent())) {\n    return this.image_;\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nStatic.prototype.handleImageChange = function(evt) {\n  if (this.image_.getState() == ImageState.LOADED) {\n    const imageExtent = this.image_.getExtent();\n    const image = this.image_.getImage();\n    let imageWidth, imageHeight;\n    if (this.imageSize_) {\n      imageWidth = this.imageSize_[0];\n      imageHeight = this.imageSize_[1];\n    } else {\n      imageWidth = image.width;\n      imageHeight = image.height;\n    }\n    const resolution = getHeight(imageExtent) / imageHeight;\n    const targetWidth = Math.ceil(getWidth(imageExtent) / resolution);\n    if (targetWidth != imageWidth) {\n      const context = createCanvasContext2D(targetWidth, imageHeight);\n      const canvas = context.canvas;\n      context.drawImage(image, 0, 0, imageWidth, imageHeight,\n        0, 0, canvas.width, canvas.height);\n      this.image_.setImage(canvas);\n    }\n  }\n  ImageSource.prototype.handleImageChange.call(this, evt);\n};\nexport default Static;\n","/**\n * @module ol/GeolocationProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACCURACY: 'accuracy',\n  ACCURACY_GEOMETRY: 'accuracyGeometry',\n  ALTITUDE: 'altitude',\n  ALTITUDE_ACCURACY: 'altitudeAccuracy',\n  HEADING: 'heading',\n  POSITION: 'position',\n  PROJECTION: 'projection',\n  SPEED: 'speed',\n  TRACKING: 'tracking',\n  TRACKING_OPTIONS: 'trackingOptions'\n};\n","/**\n * @module ol/Geolocation\n */\nimport {inherits} from './index.js';\nimport GeolocationProperty from './GeolocationProperty.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport {listen} from './events.js';\nimport EventType from './events/EventType.js';\nimport {circular as circularPolygon} from './geom/Polygon.js';\nimport {GEOLOCATION} from './has.js';\nimport {toRadians} from './math.js';\nimport {get as getProjection, getTransformFromProjections, identityTransform} from './proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [tracking=false] Start Tracking right after\n * instantiation.\n * @property {GeolocationPositionOptions} [trackingOptions] Tracking options.\n * See {@link http://www.w3.org/TR/geolocation-API/#position_options_interface}.\n * @property {module:ol/proj~ProjectionLike} [projection] The projection the position\n * is reported in.\n */\n\n\n/**\n * @classdesc\n * Helper class for providing HTML5 Geolocation capabilities.\n * The [Geolocation API](http://www.w3.org/TR/geolocation-API/)\n * is used to locate a user's position.\n *\n * To get notified of position changes, register a listener for the generic\n * `change` event on your instance of {@link module:ol/Geolocation~Geolocation}.\n *\n * Example:\n *\n *     var geolocation = new Geolocation({\n *       // take the projection to use from the map's view\n *       projection: view.getProjection()\n *     });\n *     // listen to changes in position\n *     geolocation.on('change', function(evt) {\n *       window.console.log(geolocation.getPosition());\n *     });\n *\n * @fires error\n * @constructor\n * @extends {module:ol/Object}\n * @param {module:ol/Geolocation~Options=} opt_options Options.\n * @api\n */\nconst Geolocation = function(opt_options) {\n\n  BaseObject.call(this);\n\n  const options = opt_options || {};\n\n  /**\n   * The unprojected (EPSG:4326) device position.\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.position_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/proj~TransformFunction}\n   */\n  this.transform_ = identityTransform;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.watchId_ = undefined;\n\n  listen(\n    this, getChangeEventType(GeolocationProperty.PROJECTION),\n    this.handleProjectionChanged_, this);\n  listen(\n    this, getChangeEventType(GeolocationProperty.TRACKING),\n    this.handleTrackingChanged_, this);\n\n  if (options.projection !== undefined) {\n    this.setProjection(options.projection);\n  }\n  if (options.trackingOptions !== undefined) {\n    this.setTrackingOptions(options.trackingOptions);\n  }\n\n  this.setTracking(options.tracking !== undefined ? options.tracking : false);\n\n};\n\ninherits(Geolocation, BaseObject);\n\n\n/**\n * @inheritDoc\n */\nGeolocation.prototype.disposeInternal = function() {\n  this.setTracking(false);\n  BaseObject.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @private\n */\nGeolocation.prototype.handleProjectionChanged_ = function() {\n  const projection = this.getProjection();\n  if (projection) {\n    this.transform_ = getTransformFromProjections(\n      getProjection('EPSG:4326'), projection);\n    if (this.position_) {\n      this.set(GeolocationProperty.POSITION, this.transform_(this.position_));\n    }\n  }\n};\n\n\n/**\n * @private\n */\nGeolocation.prototype.handleTrackingChanged_ = function() {\n  if (GEOLOCATION) {\n    const tracking = this.getTracking();\n    if (tracking && this.watchId_ === undefined) {\n      this.watchId_ = navigator.geolocation.watchPosition(\n        this.positionChange_.bind(this),\n        this.positionError_.bind(this),\n        this.getTrackingOptions());\n    } else if (!tracking && this.watchId_ !== undefined) {\n      navigator.geolocation.clearWatch(this.watchId_);\n      this.watchId_ = undefined;\n    }\n  }\n};\n\n\n/**\n * @private\n * @param {GeolocationPosition} position position event.\n */\nGeolocation.prototype.positionChange_ = function(position) {\n  const coords = position.coords;\n  this.set(GeolocationProperty.ACCURACY, coords.accuracy);\n  this.set(GeolocationProperty.ALTITUDE,\n    coords.altitude === null ? undefined : coords.altitude);\n  this.set(GeolocationProperty.ALTITUDE_ACCURACY,\n    coords.altitudeAccuracy === null ?\n      undefined : coords.altitudeAccuracy);\n  this.set(GeolocationProperty.HEADING, coords.heading === null ?\n    undefined : toRadians(coords.heading));\n  if (!this.position_) {\n    this.position_ = [coords.longitude, coords.latitude];\n  } else {\n    this.position_[0] = coords.longitude;\n    this.position_[1] = coords.latitude;\n  }\n  const projectedPosition = this.transform_(this.position_);\n  this.set(GeolocationProperty.POSITION, projectedPosition);\n  this.set(GeolocationProperty.SPEED,\n    coords.speed === null ? undefined : coords.speed);\n  const geometry = circularPolygon(this.position_, coords.accuracy);\n  geometry.applyTransform(this.transform_);\n  this.set(GeolocationProperty.ACCURACY_GEOMETRY, geometry);\n  this.changed();\n};\n\n/**\n * Triggered when the Geolocation returns an error.\n * @event error\n * @api\n */\n\n/**\n * @private\n * @param {GeolocationPositionError} error error object.\n */\nGeolocation.prototype.positionError_ = function(error) {\n  error.type = EventType.ERROR;\n  this.setTracking(false);\n  this.dispatchEvent(/** @type {{type: string, target: undefined}} */ (error));\n};\n\n\n/**\n * Get the accuracy of the position in meters.\n * @return {number|undefined} The accuracy of the position measurement in\n *     meters.\n * @observable\n * @api\n */\nGeolocation.prototype.getAccuracy = function() {\n  return /** @type {number|undefined} */ (this.get(GeolocationProperty.ACCURACY));\n};\n\n\n/**\n * Get a geometry of the position accuracy.\n * @return {?module:ol/geom/Polygon} A geometry of the position accuracy.\n * @observable\n * @api\n */\nGeolocation.prototype.getAccuracyGeometry = function() {\n  return (\n    /** @type {?module:ol/geom/Polygon} */ (this.get(GeolocationProperty.ACCURACY_GEOMETRY) || null)\n  );\n};\n\n\n/**\n * Get the altitude associated with the position.\n * @return {number|undefined} The altitude of the position in meters above mean\n *     sea level.\n * @observable\n * @api\n */\nGeolocation.prototype.getAltitude = function() {\n  return /** @type {number|undefined} */ (this.get(GeolocationProperty.ALTITUDE));\n};\n\n\n/**\n * Get the altitude accuracy of the position.\n * @return {number|undefined} The accuracy of the altitude measurement in\n *     meters.\n * @observable\n * @api\n */\nGeolocation.prototype.getAltitudeAccuracy = function() {\n  return /** @type {number|undefined} */ (this.get(GeolocationProperty.ALTITUDE_ACCURACY));\n};\n\n\n/**\n * Get the heading as radians clockwise from North.\n * Note: depending on the browser, the heading is only defined if the `enableHighAccuracy`\n * is set to `true` in the tracking options.\n * @return {number|undefined} The heading of the device in radians from north.\n * @observable\n * @api\n */\nGeolocation.prototype.getHeading = function() {\n  return /** @type {number|undefined} */ (this.get(GeolocationProperty.HEADING));\n};\n\n\n/**\n * Get the position of the device.\n * @return {module:ol/coordinate~Coordinate|undefined} The current position of the device reported\n *     in the current projection.\n * @observable\n * @api\n */\nGeolocation.prototype.getPosition = function() {\n  return (\n    /** @type {module:ol/coordinate~Coordinate|undefined} */ (this.get(GeolocationProperty.POSITION))\n  );\n};\n\n\n/**\n * Get the projection associated with the position.\n * @return {module:ol/proj/Projection|undefined} The projection the position is\n *     reported in.\n * @observable\n * @api\n */\nGeolocation.prototype.getProjection = function() {\n  return (\n    /** @type {module:ol/proj/Projection|undefined} */ (this.get(GeolocationProperty.PROJECTION))\n  );\n};\n\n\n/**\n * Get the speed in meters per second.\n * @return {number|undefined} The instantaneous speed of the device in meters\n *     per second.\n * @observable\n * @api\n */\nGeolocation.prototype.getSpeed = function() {\n  return /** @type {number|undefined} */ (this.get(GeolocationProperty.SPEED));\n};\n\n\n/**\n * Determine if the device location is being tracked.\n * @return {boolean} The device location is being tracked.\n * @observable\n * @api\n */\nGeolocation.prototype.getTracking = function() {\n  return /** @type {boolean} */ (this.get(GeolocationProperty.TRACKING));\n};\n\n\n/**\n * Get the tracking options.\n * @see http://www.w3.org/TR/geolocation-API/#position-options\n * @return {GeolocationPositionOptions|undefined} PositionOptions as defined by\n *     the [HTML5 Geolocation spec\n *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n * @observable\n * @api\n */\nGeolocation.prototype.getTrackingOptions = function() {\n  return /** @type {GeolocationPositionOptions|undefined} */ (this.get(GeolocationProperty.TRACKING_OPTIONS));\n};\n\n\n/**\n * Set the projection to use for transforming the coordinates.\n * @param {module:ol/proj~ProjectionLike} projection The projection the position is\n *     reported in.\n * @observable\n * @api\n */\nGeolocation.prototype.setProjection = function(projection) {\n  this.set(GeolocationProperty.PROJECTION, getProjection(projection));\n};\n\n\n/**\n * Enable or disable tracking.\n * @param {boolean} tracking Enable tracking.\n * @observable\n * @api\n */\nGeolocation.prototype.setTracking = function(tracking) {\n  this.set(GeolocationProperty.TRACKING, tracking);\n};\n\n\n/**\n * Set the tracking options.\n * @see http://www.w3.org/TR/geolocation-API/#position-options\n * @param {GeolocationPositionOptions} options PositionOptions as defined by the\n *     [HTML5 Geolocation spec\n *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n * @observable\n * @api\n */\nGeolocation.prototype.setTrackingOptions = function(options) {\n  this.set(GeolocationProperty.TRACKING_OPTIONS, options);\n};\nexport default Geolocation;\n","/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport {inherits} from '../index.js';\nimport {extend, includes} from '../array.js';\nimport GML2 from '../format/GML2.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {assign} from '../obj.js';\nimport {makeArrayPusher, makeStructureNS, pushParseAndPop} from '../xml.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array.<string>} [layers] If set, only features of the given layers will be returned by the format when read.\n */\n\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link module:ol/format/GML2~GML2} to read features.\n *\n * @constructor\n * @extends {module:ol/format/XMLFeature}\n * @param {module:ol/format/WMSGetFeatureInfo~Options=} opt_options Options.\n * @api\n */\nconst WMSGetFeatureInfo = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n\n  /**\n   * @private\n   * @type {module:ol/format/GML2}\n   */\n  this.gmlFormat_ = new GML2();\n\n\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.layers_ = options.layers ? options.layers : null;\n\n  XMLFeature.call(this);\n};\n\ninherits(WMSGetFeatureInfo, XMLFeature);\n\n\n/**\n * @const\n * @type {string}\n */\nconst featureIdentifier = '_feature';\n\n\n/**\n * @const\n * @type {string}\n */\nconst layerIdentifier = '_layer';\n\n\n/**\n * @return {Array.<string>} layers\n */\nWMSGetFeatureInfo.prototype.getLayers = function() {\n  return this.layers_;\n};\n\n\n/**\n * @param {Array.<string>} layers Layers to parse.\n */\nWMSGetFeatureInfo.prototype.setLayers = function(layers) {\n  this.layers_ = layers;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<module:ol/Feature>} Features.\n * @private\n */\nWMSGetFeatureInfo.prototype.readFeatures_ = function(node, objectStack) {\n  node.setAttribute('namespaceURI', this.featureNS_);\n  const localName = node.localName;\n  /** @type {Array.<module:ol/Feature>} */\n  let features = [];\n  if (node.childNodes.length === 0) {\n    return features;\n  }\n  if (localName == 'msGMLOutput') {\n    for (let i = 0, ii = node.childNodes.length; i < ii; i++) {\n      const layer = node.childNodes[i];\n      if (layer.nodeType !== Node.ELEMENT_NODE) {\n        continue;\n      }\n      const context = objectStack[0];\n\n      const toRemove = layerIdentifier;\n      const layerName = layer.localName.replace(toRemove, '');\n\n      if (this.layers_ && !includes(this.layers_, layerName)) {\n        continue;\n      }\n\n      const featureType = layerName +\n          featureIdentifier;\n\n      context['featureType'] = featureType;\n      context['featureNS'] = this.featureNS_;\n\n      const parsers = {};\n      parsers[featureType] = makeArrayPusher(\n        this.gmlFormat_.readFeatureElement, this.gmlFormat_);\n      const parsersNS = makeStructureNS(\n        [context['featureNS'], null], parsers);\n      layer.setAttribute('namespaceURI', this.featureNS_);\n      const layerFeatures = pushParseAndPop(\n        [], parsersNS, layer, objectStack, this.gmlFormat_);\n      if (layerFeatures) {\n        extend(features, layerFeatures);\n      }\n    }\n  }\n  if (localName == 'FeatureCollection') {\n    const gmlFeatures = pushParseAndPop([],\n      this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n      [{}], this.gmlFormat_);\n    if (gmlFeatures) {\n      features = gmlFeatures;\n    }\n  }\n  return features;\n};\n\n\n/**\n * Read all features from a WMSGetFeatureInfo response.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nWMSGetFeatureInfo.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.readFeaturesFromNode = function(node, opt_options) {\n  const options = {};\n  if (opt_options) {\n    assign(options, this.getReadOptions(node, opt_options));\n  }\n  return this.readFeatures_(node, [options]);\n};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeatureNode = function(feature, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeFeaturesNode = function(features, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nWMSGetFeatureInfo.prototype.writeGeometryNode = function(geometry, opt_options) {};\nexport default WMSGetFeatureInfo;\n","/**\n * @module ol/style/Atlas\n */\nimport {createCanvasContext2D} from '../dom.js';\n\n\n/**\n * @typedef {Object} AtlasBlock\n * @property {number} x\n * @property {number} y\n * @property {number} width\n * @property {number} height\n */\n\n/**\n * Provides information for an image inside an atlas.\n * `offsetX` and `offsetY` are the position of the image inside the atlas image `image`.\n * @typedef {Object} AtlasInfo\n * @property {number} offsetX\n * @property {number} offsetY\n * @property {HTMLCanvasElement} image\n */\n\n/**\n * This class facilitates the creation of image atlases.\n *\n * Images added to an atlas will be rendered onto a single\n * atlas canvas. The distribution of images on the canvas is\n * managed with the bin packing algorithm described in:\n * http://www.blackpawn.com/texts/lightmaps/\n *\n * @constructor\n * @struct\n * @param {number} size The size in pixels of the sprite image.\n * @param {number} space The space in pixels between images.\n *    Because texture coordinates are float values, the edges of\n *    images might not be completely correct (in a way that the\n *    edges overlap when being rendered). To avoid this we add a\n *    padding around each image.\n */\nconst Atlas = function(size, space) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.space_ = space;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/style/Atlas~AtlasBlock>}\n   */\n  this.emptyBlocks_ = [{x: 0, y: 0, width: size, height: size}];\n\n  /**\n   * @private\n   * @type {Object.<string, module:ol/style/Atlas~AtlasInfo>}\n   */\n  this.entries_ = {};\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context_ = createCanvasContext2D(size, size);\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = this.context_.canvas;\n};\n\n\n/**\n * @param {string} id The identifier of the entry to check.\n * @return {?module:ol/style/Atlas~AtlasInfo} The atlas info.\n */\nAtlas.prototype.get = function(id) {\n  return this.entries_[id] || null;\n};\n\n\n/**\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *    Called to render the new image onto an atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *    `renderCallback`.\n * @return {?module:ol/style/Atlas~AtlasInfo} The position and atlas image for the entry.\n */\nAtlas.prototype.add = function(id, width, height, renderCallback, opt_this) {\n  for (let i = 0, ii = this.emptyBlocks_.length; i < ii; ++i) {\n    const block = this.emptyBlocks_[i];\n    if (block.width >= width + this.space_ &&\n        block.height >= height + this.space_) {\n      // we found a block that is big enough for our entry\n      const entry = {\n        offsetX: block.x + this.space_,\n        offsetY: block.y + this.space_,\n        image: this.canvas_\n      };\n      this.entries_[id] = entry;\n\n      // render the image on the atlas image\n      renderCallback.call(opt_this, this.context_,\n        block.x + this.space_, block.y + this.space_);\n\n      // split the block after the insertion, either horizontally or vertically\n      this.split_(i, block, width + this.space_, height + this.space_);\n\n      return entry;\n    }\n  }\n\n  // there is no space for the new entry in this atlas\n  return null;\n};\n\n\n/**\n * @private\n * @param {number} index The index of the block.\n * @param {module:ol/style/Atlas~AtlasBlock} block The block to split.\n * @param {number} width The width of the entry to insert.\n * @param {number} height The height of the entry to insert.\n */\nAtlas.prototype.split_ = function(index, block, width, height) {\n  const deltaWidth = block.width - width;\n  const deltaHeight = block.height - height;\n\n  /** @type {module:ol/style/Atlas~AtlasBlock} */\n  let newBlock1;\n  /** @type {module:ol/style/Atlas~AtlasBlock} */\n  let newBlock2;\n\n  if (deltaWidth > deltaHeight) {\n    // split vertically\n    // block right of the inserted entry\n    newBlock1 = {\n      x: block.x + width,\n      y: block.y,\n      width: block.width - width,\n      height: block.height\n    };\n\n    // block below the inserted entry\n    newBlock2 = {\n      x: block.x,\n      y: block.y + height,\n      width: width,\n      height: block.height - height\n    };\n    this.updateBlocks_(index, newBlock1, newBlock2);\n  } else {\n    // split horizontally\n    // block right of the inserted entry\n    newBlock1 = {\n      x: block.x + width,\n      y: block.y,\n      width: block.width - width,\n      height: height\n    };\n\n    // block below the inserted entry\n    newBlock2 = {\n      x: block.x,\n      y: block.y + height,\n      width: block.width,\n      height: block.height - height\n    };\n    this.updateBlocks_(index, newBlock1, newBlock2);\n  }\n};\n\n\n/**\n * Remove the old block and insert new blocks at the same array position.\n * The new blocks are inserted at the same position, so that splitted\n * blocks (that are potentially smaller) are filled first.\n * @private\n * @param {number} index The index of the block to remove.\n * @param {module:ol/style/Atlas~AtlasBlock} newBlock1 The 1st block to add.\n * @param {module:ol/style/Atlas~AtlasBlock} newBlock2 The 2nd block to add.\n */\nAtlas.prototype.updateBlocks_ = function(index, newBlock1, newBlock2) {\n  const args = [index, 1];\n  if (newBlock1.width > 0 && newBlock1.height > 0) {\n    args.push(newBlock1);\n  }\n  if (newBlock2.width > 0 && newBlock2.height > 0) {\n    args.push(newBlock2);\n  }\n  this.emptyBlocks_.splice.apply(this.emptyBlocks_, args);\n};\nexport default Atlas;\n","/**\n * @module ol/source/Zoomify\n */\nimport {DEFAULT_TILE_SIZE} from '../tilegrid/common.js';\nimport {inherits} from '../index.js';\nimport ImageTile from '../ImageTile.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTileUrlFunctions} from '../tileurlfunction.js';\nimport {assert} from '../asserts.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getTopLeft} from '../extent.js';\nimport {toSize} from '../size.js';\nimport TileImage from '../source/TileImage.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\n\n\n/**\n * @enum {string}\n */\nconst TierSizeCalculation = {\n  DEFAULT: 'default',\n  TRUNCATED: 'truncated'\n};\n\n\n/**\n * @constructor\n * @extends {module:ol/ImageTile}\n * @param {module:ol/tilegrid/TileGrid} tileGrid TileGrid that the tile belongs to.\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/TileState} state State.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/Tile~LoadFunction} tileLoadFunction Tile load function.\n * @param {module:ol/Tile~Options=} opt_options Tile options.\n */\nexport const CustomTile = function(\n  tileGrid, tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n  ImageTile.call(this, tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options);\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n   */\n  this.zoomifyImage_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.tileSize_ = toSize(tileGrid.getTileSize(tileCoord[0]));\n};\ninherits(CustomTile, ImageTile);\n\n\n/**\n * @inheritDoc\n */\nCustomTile.prototype.getImage = function() {\n  if (this.zoomifyImage_) {\n    return this.zoomifyImage_;\n  }\n  const image = ImageTile.prototype.getImage.call(this);\n  if (this.state == TileState.LOADED) {\n    const tileSize = this.tileSize_;\n    if (image.width == tileSize[0] && image.height == tileSize[1]) {\n      this.zoomifyImage_ = image;\n      return image;\n    } else {\n      const context = createCanvasContext2D(tileSize[0], tileSize[1]);\n      context.drawImage(image, 0, 0);\n      this.zoomifyImage_ = context.canvas;\n      return context.canvas;\n    }\n  } else {\n    return image;\n  }\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {module:ol/proj~ProjectionLike} [projection] Projection.\n * @property {boolean} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {string} [url] URL template or base URL of the Zoomify service.\n * A base URL is the fixed part\n * of the URL, excluding the tile group, z, x, and y folder structure, e.g.\n * `http://my.zoomify.info/IMAGE.TIF/`. A URL template must include\n * `{TileGroup}`, `{x}`, `{y}`, and `{z}` placeholders, e.g.\n * `http://my.zoomify.info/IMAGE.TIF/{TileGroup}/{z}-{x}-{y}.jpg`.\n * Internet Imaging Protocol (IIP) with JTL extension can be also used with\n * `{tileIndex}` and `{z}` placeholders, e.g.\n * `http://my.zoomify.info?FIF=IMAGE.TIF&JTL={z},{tileIndex}`.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {string} [tierSizeCalculation] Tier size calculation method: `default` or `truncated`.\n * @property {module:ol/size~Size} [size] Size of the image.\n * @property {module:ol/extent~Extent} [extent] Extent for the TileGrid that is created.\n * Default sets the TileGrid in the\n * fourth quadrant, meaning extent is `[0, -height, width, 0]`. To change the\n * extent to the first quadrant (the default for OpenLayers 2) set the extent\n * as `[0, 0, width, height]`.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number} [tileSize=256] Tile size. Same tile size is used for all zoom levels.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data in Zoomify format (both Zoomify and Internet\n * Imaging Protocol are supported).\n *\n * @constructor\n * @extends {module:ol/source/TileImage}\n * @param {module:ol/source/Zoomify~Options=} opt_options Options.\n * @api\n */\nconst Zoomify = function(opt_options) {\n\n  const options = opt_options || {};\n\n  const size = options.size;\n  const tierSizeCalculation = options.tierSizeCalculation !== undefined ?\n    options.tierSizeCalculation :\n    TierSizeCalculation.DEFAULT;\n\n  const imageWidth = size[0];\n  const imageHeight = size[1];\n  const extent = options.extent || [0, -size[1], size[0], 0];\n  const tierSizeInTiles = [];\n  const tileSize = options.tileSize || DEFAULT_TILE_SIZE;\n  let tileSizeForTierSizeCalculation = tileSize;\n\n  switch (tierSizeCalculation) {\n    case TierSizeCalculation.DEFAULT:\n      while (imageWidth > tileSizeForTierSizeCalculation || imageHeight > tileSizeForTierSizeCalculation) {\n        tierSizeInTiles.push([\n          Math.ceil(imageWidth / tileSizeForTierSizeCalculation),\n          Math.ceil(imageHeight / tileSizeForTierSizeCalculation)\n        ]);\n        tileSizeForTierSizeCalculation += tileSizeForTierSizeCalculation;\n      }\n      break;\n    case TierSizeCalculation.TRUNCATED:\n      let width = imageWidth;\n      let height = imageHeight;\n      while (width > tileSizeForTierSizeCalculation || height > tileSizeForTierSizeCalculation) {\n        tierSizeInTiles.push([\n          Math.ceil(width / tileSizeForTierSizeCalculation),\n          Math.ceil(height / tileSizeForTierSizeCalculation)\n        ]);\n        width >>= 1;\n        height >>= 1;\n      }\n      break;\n    default:\n      assert(false, 53); // Unknown `tierSizeCalculation` configured\n      break;\n  }\n\n  tierSizeInTiles.push([1, 1]);\n  tierSizeInTiles.reverse();\n\n  const resolutions = [1];\n  const tileCountUpToTier = [0];\n  for (let i = 1, ii = tierSizeInTiles.length; i < ii; i++) {\n    resolutions.push(1 << i);\n    tileCountUpToTier.push(\n      tierSizeInTiles[i - 1][0] * tierSizeInTiles[i - 1][1] +\n        tileCountUpToTier[i - 1]\n    );\n  }\n  resolutions.reverse();\n\n  const tileGrid = new TileGrid({\n    tileSize: tileSize,\n    extent: extent,\n    origin: getTopLeft(extent),\n    resolutions: resolutions\n  });\n\n  let url = options.url;\n  if (url && url.indexOf('{TileGroup}') == -1 && url.indexOf('{tileIndex}') == -1) {\n    url += '{TileGroup}/{z}-{x}-{y}.jpg';\n  }\n  const urls = expandUrl(url);\n\n  /**\n   * @param {string} template Template.\n   * @return {module:ol/Tile~UrlFunction} Tile URL function.\n   */\n  function createFromTemplate(template) {\n\n    return (\n      /**\n       * @param {module:ol/tilecoord~TileCoord} tileCoord Tile Coordinate.\n       * @param {number} pixelRatio Pixel ratio.\n       * @param {module:ol/proj/Projection} projection Projection.\n       * @return {string|undefined} Tile URL.\n       */\n      function(tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n          return undefined;\n        } else {\n          const tileCoordZ = tileCoord[0];\n          const tileCoordX = tileCoord[1];\n          const tileCoordY = -tileCoord[2] - 1;\n          const tileIndex =\n              tileCoordX +\n              tileCoordY * tierSizeInTiles[tileCoordZ][0];\n          const tileSize = tileGrid.getTileSize(tileCoordZ);\n          const tileGroup = ((tileIndex + tileCountUpToTier[tileCoordZ]) / tileSize) | 0;\n          const localContext = {\n            'z': tileCoordZ,\n            'x': tileCoordX,\n            'y': tileCoordY,\n            'tileIndex': tileIndex,\n            'TileGroup': 'TileGroup' + tileGroup\n          };\n          return template.replace(/\\{(\\w+?)\\}/g, function(m, p) {\n            return localContext[p];\n          });\n        }\n      }\n    );\n  }\n\n  const tileUrlFunction = createFromTileUrlFunctions(urls.map(createFromTemplate));\n\n  const ZoomifyTileClass = CustomTile.bind(null, tileGrid);\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    projection: options.projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileClass: ZoomifyTileClass,\n    tileGrid: tileGrid,\n    tileUrlFunction: tileUrlFunction,\n    transition: options.transition\n  });\n\n};\n\ninherits(Zoomify, TileImage);\n\n\nexport default Zoomify;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {inherits} from '../../index.js';\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport VectorContext from '../VectorContext.js';\nimport {defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont} from '../canvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n *\n * @constructor\n * @extends {module:ol/render/VectorContext}\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {number} viewRotation View rotation.\n * @struct\n */\nconst CanvasImmediateRenderer = function(context, pixelRatio, extent, transform, viewRotation) {\n  VectorContext.call(this);\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context_ = context;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelRatio_ = pixelRatio;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent_ = extent;\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.transform_ = transform;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.viewRotation_ = viewRotation;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~FillState}\n   */\n  this.contextFillState_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~StrokeState}\n   */\n  this.contextStrokeState_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~TextState}\n   */\n  this.contextTextState_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~FillState}\n   */\n  this.fillState_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~StrokeState}\n   */\n  this.strokeState_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|HTMLVideoElement|Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageAnchorX_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageAnchorY_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageHeight_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageOpacity_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageOriginX_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageOriginY_ = 0;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.imageRotateWithView_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageRotation_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageScale_ = 0;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.imageSnapToPixel_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageWidth_ = 0;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.text_ = '';\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textOffsetX_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textOffsetY_ = 0;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.textRotateWithView_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textRotation_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textScale_ = 0;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~FillState}\n   */\n  this.textFillState_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~StrokeState}\n   */\n  this.textStrokeState_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~TextState}\n   */\n  this.textState_ = null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.pixelCoordinates_ = [];\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.tmpLocalTransform_ = createTransform();\n\n};\n\ninherits(CanvasImmediateRenderer, VectorContext);\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @private\n */\nCanvasImmediateRenderer.prototype.drawImages_ = function(flatCoordinates, offset, end, stride) {\n  if (!this.image_) {\n    return;\n  }\n  const pixelCoordinates = transform2D(\n    flatCoordinates, offset, end, 2, this.transform_,\n    this.pixelCoordinates_);\n  const context = this.context_;\n  const localTransform = this.tmpLocalTransform_;\n  const alpha = context.globalAlpha;\n  if (this.imageOpacity_ != 1) {\n    context.globalAlpha = alpha * this.imageOpacity_;\n  }\n  let rotation = this.imageRotation_;\n  if (this.imageRotateWithView_) {\n    rotation += this.viewRotation_;\n  }\n  for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n    let x = pixelCoordinates[i] - this.imageAnchorX_;\n    let y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n    if (this.imageSnapToPixel_) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    if (rotation !== 0 || this.imageScale_ != 1) {\n      const centerX = x + this.imageAnchorX_;\n      const centerY = y + this.imageAnchorY_;\n      composeTransform(localTransform,\n        centerX, centerY,\n        this.imageScale_, this.imageScale_,\n        rotation,\n        -centerX, -centerY);\n      context.setTransform.apply(context, localTransform);\n    }\n    context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_,\n      this.imageWidth_, this.imageHeight_, x, y,\n      this.imageWidth_, this.imageHeight_);\n  }\n  if (rotation !== 0 || this.imageScale_ != 1) {\n    context.setTransform(1, 0, 0, 1, 0, 0);\n  }\n  if (this.imageOpacity_ != 1) {\n    context.globalAlpha = alpha;\n  }\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @private\n */\nCanvasImmediateRenderer.prototype.drawText_ = function(flatCoordinates, offset, end, stride) {\n  if (!this.textState_ || this.text_ === '') {\n    return;\n  }\n  if (this.textFillState_) {\n    this.setContextFillState_(this.textFillState_);\n  }\n  if (this.textStrokeState_) {\n    this.setContextStrokeState_(this.textStrokeState_);\n  }\n  this.setContextTextState_(this.textState_);\n  const pixelCoordinates = transform2D(\n    flatCoordinates, offset, end, stride, this.transform_,\n    this.pixelCoordinates_);\n  const context = this.context_;\n  let rotation = this.textRotation_;\n  if (this.textRotateWithView_) {\n    rotation += this.viewRotation_;\n  }\n  for (; offset < end; offset += stride) {\n    const x = pixelCoordinates[offset] + this.textOffsetX_;\n    const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n    if (rotation !== 0 || this.textScale_ != 1) {\n      const localTransform = composeTransform(this.tmpLocalTransform_,\n        x, y,\n        this.textScale_, this.textScale_,\n        rotation,\n        -x, -y);\n      context.setTransform.apply(context, localTransform);\n    }\n    if (this.textStrokeState_) {\n      context.strokeText(this.text_, x, y);\n    }\n    if (this.textFillState_) {\n      context.fillText(this.text_, x, y);\n    }\n  }\n  if (rotation !== 0 || this.textScale_ != 1) {\n    context.setTransform(1, 0, 0, 1, 0, 0);\n  }\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {boolean} close Close.\n * @private\n * @return {number} end End.\n */\nCanvasImmediateRenderer.prototype.moveToLineTo_ = function(flatCoordinates, offset, end, stride, close) {\n  const context = this.context_;\n  const pixelCoordinates = transform2D(\n    flatCoordinates, offset, end, stride, this.transform_,\n    this.pixelCoordinates_);\n  context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n  let length = pixelCoordinates.length;\n  if (close) {\n    length -= 2;\n  }\n  for (let i = 2; i < length; i += 2) {\n    context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n  }\n  if (close) {\n    context.closePath();\n  }\n  return end;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @private\n * @return {number} End.\n */\nCanvasImmediateRenderer.prototype.drawRings_ = function(flatCoordinates, offset, ends, stride) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n  }\n  return offset;\n};\n\n\n/**\n * Render a circle geometry into the canvas.  Rendering is immediate and uses\n * the current fill and stroke styles.\n *\n * @param {module:ol/geom/Circle} geometry Circle geometry.\n * @override\n * @api\n */\nCanvasImmediateRenderer.prototype.drawCircle = function(geometry) {\n  if (!intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  if (this.fillState_ || this.strokeState_) {\n    if (this.fillState_) {\n      this.setContextFillState_(this.fillState_);\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n    }\n    const pixelCoordinates = transformGeom2D(\n      geometry, this.transform_, this.pixelCoordinates_);\n    const dx = pixelCoordinates[2] - pixelCoordinates[0];\n    const dy = pixelCoordinates[3] - pixelCoordinates[1];\n    const radius = Math.sqrt(dx * dx + dy * dy);\n    const context = this.context_;\n    context.beginPath();\n    context.arc(\n      pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n    if (this.fillState_) {\n      context.fill();\n    }\n    if (this.strokeState_) {\n      context.stroke();\n    }\n  }\n  if (this.text_ !== '') {\n    this.drawText_(geometry.getCenter(), 0, 2, 2);\n  }\n};\n\n\n/**\n * Set the rendering style.  Note that since this is an immediate rendering API,\n * any `zIndex` on the provided style will be ignored.\n *\n * @param {module:ol/style/Style} style The rendering style.\n * @override\n * @api\n */\nCanvasImmediateRenderer.prototype.setStyle = function(style) {\n  this.setFillStrokeStyle(style.getFill(), style.getStroke());\n  this.setImageStyle(style.getImage());\n  this.setTextStyle(style.getText());\n};\n\n\n/**\n * Render a geometry into the canvas.  Call\n * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n *\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry The geometry to render.\n * @override\n * @api\n */\nCanvasImmediateRenderer.prototype.drawGeometry = function(geometry) {\n  const type = geometry.getType();\n  switch (type) {\n    case GeometryType.POINT:\n      this.drawPoint(/** @type {module:ol/geom/Point} */ (geometry));\n      break;\n    case GeometryType.LINE_STRING:\n      this.drawLineString(/** @type {module:ol/geom/LineString} */ (geometry));\n      break;\n    case GeometryType.POLYGON:\n      this.drawPolygon(/** @type {module:ol/geom/Polygon} */ (geometry));\n      break;\n    case GeometryType.MULTI_POINT:\n      this.drawMultiPoint(/** @type {module:ol/geom/MultiPoint} */ (geometry));\n      break;\n    case GeometryType.MULTI_LINE_STRING:\n      this.drawMultiLineString(/** @type {module:ol/geom/MultiLineString} */ (geometry));\n      break;\n    case GeometryType.MULTI_POLYGON:\n      this.drawMultiPolygon(/** @type {module:ol/geom/MultiPolygon} */ (geometry));\n      break;\n    case GeometryType.GEOMETRY_COLLECTION:\n      this.drawGeometryCollection(/** @type {module:ol/geom/GeometryCollection} */ (geometry));\n      break;\n    case GeometryType.CIRCLE:\n      this.drawCircle(/** @type {module:ol/geom/Circle} */ (geometry));\n      break;\n    default:\n  }\n};\n\n\n/**\n * Render a feature into the canvas.  Note that any `zIndex` on the provided\n * style will be ignored - features are rendered immediately in the order that\n * this method is called.  If you need `zIndex` support, you should be using an\n * {@link module:ol/layer/Vector~VectorLayer} instead.\n *\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n * @override\n * @api\n */\nCanvasImmediateRenderer.prototype.drawFeature = function(feature, style) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  this.setStyle(style);\n  this.drawGeometry(geometry);\n};\n\n\n/**\n * Render a GeometryCollection to the canvas.  Rendering is immediate and\n * uses the current styles appropriate for each geometry in the collection.\n *\n * @param {module:ol/geom/GeometryCollection} geometry Geometry collection.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawGeometryCollection = function(geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    this.drawGeometry(geometries[i]);\n  }\n};\n\n\n/**\n * Render a Point geometry into the canvas.  Rendering is immediate and uses\n * the current style.\n *\n * @param {module:ol/geom/Point|module:ol/render/Feature} geometry Point geometry.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawPoint = function(geometry) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  if (this.image_) {\n    this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n  if (this.text_ !== '') {\n    this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n};\n\n\n/**\n * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n * uses the current style.\n *\n * @param {module:ol/geom/MultiPoint|module:ol/render/Feature} geometry MultiPoint geometry.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawMultiPoint = function(geometry) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  if (this.image_) {\n    this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n  if (this.text_ !== '') {\n    this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n};\n\n\n/**\n * Render a LineString into the canvas.  Rendering is immediate and uses\n * the current style.\n *\n * @param {module:ol/geom/LineString|module:ol/render/Feature} geometry LineString geometry.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawLineString = function(geometry) {\n  if (!intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  if (this.strokeState_) {\n    this.setContextStrokeState_(this.strokeState_);\n    const context = this.context_;\n    const flatCoordinates = geometry.getFlatCoordinates();\n    context.beginPath();\n    this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length,\n      geometry.getStride(), false);\n    context.stroke();\n  }\n  if (this.text_ !== '') {\n    const flatMidpoint = geometry.getFlatMidpoint();\n    this.drawText_(flatMidpoint, 0, 2, 2);\n  }\n};\n\n\n/**\n * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n * and uses the current style.\n *\n * @param {module:ol/geom/MultiLineString|module:ol/render/Feature} geometry MultiLineString geometry.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawMultiLineString = function(geometry) {\n  const geometryExtent = geometry.getExtent();\n  if (!intersects(this.extent_, geometryExtent)) {\n    return;\n  }\n  if (this.strokeState_) {\n    this.setContextStrokeState_(this.strokeState_);\n    const context = this.context_;\n    const flatCoordinates = geometry.getFlatCoordinates();\n    let offset = 0;\n    const ends = geometry.getEnds();\n    const stride = geometry.getStride();\n    context.beginPath();\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n    }\n    context.stroke();\n  }\n  if (this.text_ !== '') {\n    const flatMidpoints = geometry.getFlatMidpoints();\n    this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n  }\n};\n\n\n/**\n * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n * the current style.\n *\n * @param {module:ol/geom/Polygon|module:ol/render/Feature} geometry Polygon geometry.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawPolygon = function(geometry) {\n  if (!intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  if (this.strokeState_ || this.fillState_) {\n    if (this.fillState_) {\n      this.setContextFillState_(this.fillState_);\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n    }\n    const context = this.context_;\n    context.beginPath();\n    this.drawRings_(geometry.getOrientedFlatCoordinates(),\n      0, geometry.getEnds(), geometry.getStride());\n    if (this.fillState_) {\n      context.fill();\n    }\n    if (this.strokeState_) {\n      context.stroke();\n    }\n  }\n  if (this.text_ !== '') {\n    const flatInteriorPoint = geometry.getFlatInteriorPoint();\n    this.drawText_(flatInteriorPoint, 0, 2, 2);\n  }\n};\n\n\n/**\n * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n * uses the current style.\n * @param {module:ol/geom/MultiPolygon} geometry MultiPolygon geometry.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawMultiPolygon = function(geometry) {\n  if (!intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  if (this.strokeState_ || this.fillState_) {\n    if (this.fillState_) {\n      this.setContextFillState_(this.fillState_);\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n    }\n    const context = this.context_;\n    const flatCoordinates = geometry.getOrientedFlatCoordinates();\n    let offset = 0;\n    const endss = geometry.getEndss();\n    const stride = geometry.getStride();\n    context.beginPath();\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i];\n      offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n    }\n    if (this.fillState_) {\n      context.fill();\n    }\n    if (this.strokeState_) {\n      context.stroke();\n    }\n  }\n  if (this.text_ !== '') {\n    const flatInteriorPoints = geometry.getFlatInteriorPoints();\n    this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n  }\n};\n\n\n/**\n * @param {module:ol/render/canvas~FillState} fillState Fill state.\n * @private\n */\nCanvasImmediateRenderer.prototype.setContextFillState_ = function(fillState) {\n  const context = this.context_;\n  const contextFillState = this.contextFillState_;\n  if (!contextFillState) {\n    context.fillStyle = fillState.fillStyle;\n    this.contextFillState_ = {\n      fillStyle: fillState.fillStyle\n    };\n  } else {\n    if (contextFillState.fillStyle != fillState.fillStyle) {\n      contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/render/canvas~StrokeState} strokeState Stroke state.\n * @private\n */\nCanvasImmediateRenderer.prototype.setContextStrokeState_ = function(strokeState) {\n  const context = this.context_;\n  const contextStrokeState = this.contextStrokeState_;\n  if (!contextStrokeState) {\n    context.lineCap = strokeState.lineCap;\n    if (CANVAS_LINE_DASH) {\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n    }\n    context.lineJoin = strokeState.lineJoin;\n    context.lineWidth = strokeState.lineWidth;\n    context.miterLimit = strokeState.miterLimit;\n    context.strokeStyle = strokeState.strokeStyle;\n    this.contextStrokeState_ = {\n      lineCap: strokeState.lineCap,\n      lineDash: strokeState.lineDash,\n      lineDashOffset: strokeState.lineDashOffset,\n      lineJoin: strokeState.lineJoin,\n      lineWidth: strokeState.lineWidth,\n      miterLimit: strokeState.miterLimit,\n      strokeStyle: strokeState.strokeStyle\n    };\n  } else {\n    if (contextStrokeState.lineCap != strokeState.lineCap) {\n      contextStrokeState.lineCap = context.lineCap = strokeState.lineCap;\n    }\n    if (CANVAS_LINE_DASH) {\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = context.lineDashOffset =\n            strokeState.lineDashOffset;\n      }\n    }\n    if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n      contextStrokeState.lineJoin = context.lineJoin = strokeState.lineJoin;\n    }\n    if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n      contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\n    }\n    if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n      contextStrokeState.miterLimit = context.miterLimit =\n          strokeState.miterLimit;\n    }\n    if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n      contextStrokeState.strokeStyle = context.strokeStyle =\n          strokeState.strokeStyle;\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/render/canvas~TextState} textState Text state.\n * @private\n */\nCanvasImmediateRenderer.prototype.setContextTextState_ = function(textState) {\n  const context = this.context_;\n  const contextTextState = this.contextTextState_;\n  const textAlign = textState.textAlign ?\n    textState.textAlign : defaultTextAlign;\n  if (!contextTextState) {\n    context.font = textState.font;\n    context.textAlign = textAlign;\n    context.textBaseline = textState.textBaseline;\n    this.contextTextState_ = {\n      font: textState.font,\n      textAlign: textAlign,\n      textBaseline: textState.textBaseline\n    };\n  } else {\n    if (contextTextState.font != textState.font) {\n      contextTextState.font = context.font = textState.font;\n    }\n    if (contextTextState.textAlign != textAlign) {\n      contextTextState.textAlign = context.textAlign = textAlign;\n    }\n    if (contextTextState.textBaseline != textState.textBaseline) {\n      contextTextState.textBaseline = context.textBaseline =\n          textState.textBaseline;\n    }\n  }\n};\n\n\n/**\n * Set the fill and stroke style for subsequent draw operations.  To clear\n * either fill or stroke styles, pass null for the appropriate parameter.\n *\n * @param {module:ol/style/Fill} fillStyle Fill style.\n * @param {module:ol/style/Stroke} strokeStyle Stroke style.\n * @override\n */\nCanvasImmediateRenderer.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {\n  if (!fillStyle) {\n    this.fillState_ = null;\n  } else {\n    const fillStyleColor = fillStyle.getColor();\n    this.fillState_ = {\n      fillStyle: asColorLike(fillStyleColor ?\n        fillStyleColor : defaultFillStyle)\n    };\n  }\n  if (!strokeStyle) {\n    this.strokeState_ = null;\n  } else {\n    const strokeStyleColor = strokeStyle.getColor();\n    const strokeStyleLineCap = strokeStyle.getLineCap();\n    const strokeStyleLineDash = strokeStyle.getLineDash();\n    const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n    const strokeStyleLineJoin = strokeStyle.getLineJoin();\n    const strokeStyleWidth = strokeStyle.getWidth();\n    const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n    this.strokeState_ = {\n      lineCap: strokeStyleLineCap !== undefined ?\n        strokeStyleLineCap : defaultLineCap,\n      lineDash: strokeStyleLineDash ?\n        strokeStyleLineDash : defaultLineDash,\n      lineDashOffset: strokeStyleLineDashOffset ?\n        strokeStyleLineDashOffset : defaultLineDashOffset,\n      lineJoin: strokeStyleLineJoin !== undefined ?\n        strokeStyleLineJoin : defaultLineJoin,\n      lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\n        strokeStyleWidth : defaultLineWidth),\n      miterLimit: strokeStyleMiterLimit !== undefined ?\n        strokeStyleMiterLimit : defaultMiterLimit,\n      strokeStyle: asColorLike(strokeStyleColor ?\n        strokeStyleColor : defaultStrokeStyle)\n    };\n  }\n};\n\n\n/**\n * Set the image style for subsequent draw operations.  Pass null to remove\n * the image style.\n *\n * @param {module:ol/style/Image} imageStyle Image style.\n * @override\n */\nCanvasImmediateRenderer.prototype.setImageStyle = function(imageStyle) {\n  if (!imageStyle) {\n    this.image_ = null;\n  } else {\n    const imageAnchor = imageStyle.getAnchor();\n    // FIXME pixel ratio\n    const imageImage = imageStyle.getImage(1);\n    const imageOrigin = imageStyle.getOrigin();\n    const imageSize = imageStyle.getSize();\n    this.imageAnchorX_ = imageAnchor[0];\n    this.imageAnchorY_ = imageAnchor[1];\n    this.imageHeight_ = imageSize[1];\n    this.image_ = imageImage;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n    this.imageSnapToPixel_ = imageStyle.getSnapToPixel();\n    this.imageWidth_ = imageSize[0];\n  }\n};\n\n\n/**\n * Set the text style for subsequent draw operations.  Pass null to\n * remove the text style.\n *\n * @param {module:ol/style/Text} textStyle Text style.\n * @override\n */\nCanvasImmediateRenderer.prototype.setTextStyle = function(textStyle) {\n  if (!textStyle) {\n    this.text_ = '';\n  } else {\n    const textFillStyle = textStyle.getFill();\n    if (!textFillStyle) {\n      this.textFillState_ = null;\n    } else {\n      const textFillStyleColor = textFillStyle.getColor();\n      this.textFillState_ = {\n        fillStyle: asColorLike(textFillStyleColor ?\n          textFillStyleColor : defaultFillStyle)\n      };\n    }\n    const textStrokeStyle = textStyle.getStroke();\n    if (!textStrokeStyle) {\n      this.textStrokeState_ = null;\n    } else {\n      const textStrokeStyleColor = textStrokeStyle.getColor();\n      const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n      const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n      const textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n      const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n      const textStrokeStyleWidth = textStrokeStyle.getWidth();\n      const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n      this.textStrokeState_ = {\n        lineCap: textStrokeStyleLineCap !== undefined ?\n          textStrokeStyleLineCap : defaultLineCap,\n        lineDash: textStrokeStyleLineDash ?\n          textStrokeStyleLineDash : defaultLineDash,\n        lineDashOffset: textStrokeStyleLineDashOffset ?\n          textStrokeStyleLineDashOffset : defaultLineDashOffset,\n        lineJoin: textStrokeStyleLineJoin !== undefined ?\n          textStrokeStyleLineJoin : defaultLineJoin,\n        lineWidth: textStrokeStyleWidth !== undefined ?\n          textStrokeStyleWidth : defaultLineWidth,\n        miterLimit: textStrokeStyleMiterLimit !== undefined ?\n          textStrokeStyleMiterLimit : defaultMiterLimit,\n        strokeStyle: asColorLike(textStrokeStyleColor ?\n          textStrokeStyleColor : defaultStrokeStyle)\n      };\n    }\n    const textFont = textStyle.getFont();\n    const textOffsetX = textStyle.getOffsetX();\n    const textOffsetY = textStyle.getOffsetY();\n    const textRotateWithView = textStyle.getRotateWithView();\n    const textRotation = textStyle.getRotation();\n    const textScale = textStyle.getScale();\n    const textText = textStyle.getText();\n    const textTextAlign = textStyle.getTextAlign();\n    const textTextBaseline = textStyle.getTextBaseline();\n    this.textState_ = {\n      font: textFont !== undefined ?\n        textFont : defaultFont,\n      textAlign: textTextAlign !== undefined ?\n        textTextAlign : defaultTextAlign,\n      textBaseline: textTextBaseline !== undefined ?\n        textTextBaseline : defaultTextBaseline\n    };\n    this.text_ = textText !== undefined ? textText : '';\n    this.textOffsetX_ =\n        textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\n    this.textOffsetY_ =\n        textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\n    this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n    this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n    this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\n      textScale : 1);\n  }\n};\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/ImageCanvas\n */\nimport {inherits} from './index.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error))} Loader\n */\n\n\n/**\n * @constructor\n * @extends {module:ol/ImageBase}\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {module:ol/ImageCanvas~Loader=} opt_loader Optional loader function to\n *     support asynchronous canvas drawing.\n */\nconst ImageCanvas = function(extent, resolution, pixelRatio, canvas, opt_loader) {\n\n  /**\n   * Optional canvas loader function.\n   * @type {?module:ol/ImageCanvas~Loader}\n   * @private\n   */\n  this.loader_ = opt_loader !== undefined ? opt_loader : null;\n\n  const state = opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n  ImageBase.call(this, extent, resolution, pixelRatio, state);\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = canvas;\n\n  /**\n   * @private\n   * @type {Error}\n   */\n  this.error_ = null;\n\n};\n\ninherits(ImageCanvas, ImageBase);\n\n\n/**\n * Get any error associated with asynchronous rendering.\n * @return {Error} Any error that occurred during rendering.\n */\nImageCanvas.prototype.getError = function() {\n  return this.error_;\n};\n\n\n/**\n * Handle async drawing complete.\n * @param {Error} err Any error during drawing.\n * @private\n */\nImageCanvas.prototype.handleLoad_ = function(err) {\n  if (err) {\n    this.error_ = err;\n    this.state = ImageState.ERROR;\n  } else {\n    this.state = ImageState.LOADED;\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nImageCanvas.prototype.load = function() {\n  if (this.state == ImageState.IDLE) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.loader_(this.handleLoad_.bind(this));\n  }\n};\n\n\n/**\n * @return {HTMLCanvasElement} Canvas element.\n */\nImageCanvas.prototype.getImage = function() {\n  return this.canvas_;\n};\nexport default ImageCanvas;\n","'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/MapBrowserEventHandler\n */\nimport {inherits} from './index.js';\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport EventTarget from './events/EventTarget.js';\nimport PointerEventType from './pointer/EventType.js';\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\n\n/**\n * @param {module:ol/PluggableMap} map The map with the viewport to\n * listen to events on.\n * @param {number=} moveTolerance The minimal distance the pointer must travel\n * to trigger a move.\n * @constructor\n * @extends {module:ol/events/EventTarget}\n */\nconst MapBrowserEventHandler = function(map, moveTolerance) {\n\n  EventTarget.call(this);\n\n  /**\n   * This is the element that we will listen to the real events on.\n   * @type {module:ol/PluggableMap}\n   * @private\n   */\n  this.map_ = map;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.clickTimeoutId_ = 0;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.dragging_ = false;\n\n  /**\n   * @type {!Array.<module:ol/events~EventsKey>}\n   * @private\n   */\n  this.dragListenerKeys_ = [];\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.moveTolerance_ = moveTolerance ?\n    moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n\n  /**\n   * The most recent \"down\" type event (or null if none have occurred).\n   * Set on pointerdown.\n   * @type {module:ol/pointer/PointerEvent}\n   * @private\n   */\n  this.down_ = null;\n\n  const element = this.map_.getViewport();\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.activePointers_ = 0;\n\n  /**\n   * @type {!Object.<number, boolean>}\n   * @private\n   */\n  this.trackedTouches_ = {};\n\n  /**\n   * Event handler which generates pointer events for\n   * the viewport element.\n   *\n   * @type {module:ol/pointer/PointerEventHandler}\n   * @private\n   */\n  this.pointerEventHandler_ = new PointerEventHandler(element);\n\n  /**\n   * Event handler which generates pointer events for\n   * the document (used when dragging).\n   *\n   * @type {module:ol/pointer/PointerEventHandler}\n   * @private\n   */\n  this.documentPointerEventHandler_ = null;\n\n  /**\n   * @type {?module:ol/events~EventsKey}\n   * @private\n   */\n  this.pointerdownListenerKey_ = listen(this.pointerEventHandler_,\n    PointerEventType.POINTERDOWN,\n    this.handlePointerDown_, this);\n\n  /**\n   * @type {?module:ol/events~EventsKey}\n   * @private\n   */\n  this.relayedListenerKey_ = listen(this.pointerEventHandler_,\n    PointerEventType.POINTERMOVE,\n    this.relayEvent_, this);\n\n};\n\ninherits(MapBrowserEventHandler, EventTarget);\n\n\n/**\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @private\n */\nMapBrowserEventHandler.prototype.emulateClick_ = function(pointerEvent) {\n  let newEvent = new MapBrowserPointerEvent(\n    MapBrowserEventType.CLICK, this.map_, pointerEvent);\n  this.dispatchEvent(newEvent);\n  if (this.clickTimeoutId_ !== 0) {\n    // double-click\n    clearTimeout(this.clickTimeoutId_);\n    this.clickTimeoutId_ = 0;\n    newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n  } else {\n    // click\n    this.clickTimeoutId_ = setTimeout(function() {\n      this.clickTimeoutId_ = 0;\n      const newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n      this.dispatchEvent(newEvent);\n    }.bind(this), 250);\n  }\n};\n\n\n/**\n * Keeps track on how many pointers are currently active.\n *\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @private\n */\nMapBrowserEventHandler.prototype.updateActivePointers_ = function(pointerEvent) {\n  const event = pointerEvent;\n\n  if (event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL) {\n    delete this.trackedTouches_[event.pointerId];\n  } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n    this.trackedTouches_[event.pointerId] = true;\n  }\n  this.activePointers_ = Object.keys(this.trackedTouches_).length;\n};\n\n\n/**\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @private\n */\nMapBrowserEventHandler.prototype.handlePointerUp_ = function(pointerEvent) {\n  this.updateActivePointers_(pointerEvent);\n  const newEvent = new MapBrowserPointerEvent(\n    MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n  this.dispatchEvent(newEvent);\n\n  // We emulate click events on left mouse button click, touch contact, and pen\n  // contact. isMouseActionButton returns true in these cases (evt.button is set\n  // to 0).\n  // See http://www.w3.org/TR/pointerevents/#button-states\n  // We only fire click, singleclick, and doubleclick if nobody has called\n  // event.stopPropagation() or event.preventDefault().\n  if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n    this.emulateClick_(this.down_);\n  }\n\n  if (this.activePointers_ === 0) {\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n    this.dragging_ = false;\n    this.down_ = null;\n    this.documentPointerEventHandler_.dispose();\n    this.documentPointerEventHandler_ = null;\n  }\n};\n\n\n/**\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @return {boolean} If the left mouse button was pressed.\n * @private\n */\nMapBrowserEventHandler.prototype.isMouseActionButton_ = function(pointerEvent) {\n  return pointerEvent.button === 0;\n};\n\n\n/**\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @private\n */\nMapBrowserEventHandler.prototype.handlePointerDown_ = function(pointerEvent) {\n  this.updateActivePointers_(pointerEvent);\n  const newEvent = new MapBrowserPointerEvent(\n    MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n  this.dispatchEvent(newEvent);\n\n  this.down_ = pointerEvent;\n\n  if (this.dragListenerKeys_.length === 0) {\n    /* Set up a pointer event handler on the `document`,\n     * which is required when the pointer is moved outside\n     * the viewport when dragging.\n     */\n    this.documentPointerEventHandler_ =\n        new PointerEventHandler(document);\n\n    this.dragListenerKeys_.push(\n      listen(this.documentPointerEventHandler_,\n        MapBrowserEventType.POINTERMOVE,\n        this.handlePointerMove_, this),\n      listen(this.documentPointerEventHandler_,\n        MapBrowserEventType.POINTERUP,\n        this.handlePointerUp_, this),\n      /* Note that the listener for `pointercancel is set up on\n       * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n       * the `pointerup` and `pointermove` listeners.\n       *\n       * The reason for this is the following: `TouchSource.vacuumTouches_()`\n       * issues `pointercancel` events, when there was no `touchend` for a\n       * `touchstart`. Now, let's say a first `touchstart` is registered on\n       * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n       * But `documentPointerEventHandler_` doesn't know about the first\n       * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n       * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n       * only registered there.\n       */\n      listen(this.pointerEventHandler_,\n        MapBrowserEventType.POINTERCANCEL,\n        this.handlePointerUp_, this)\n    );\n  }\n};\n\n\n/**\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @private\n */\nMapBrowserEventHandler.prototype.handlePointerMove_ = function(pointerEvent) {\n  // Between pointerdown and pointerup, pointermove events are triggered.\n  // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n  // moved a significant distance.\n  if (this.isMoving_(pointerEvent)) {\n    this.dragging_ = true;\n    const newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent,\n      this.dragging_);\n    this.dispatchEvent(newEvent);\n  }\n\n  // Some native android browser triggers mousemove events during small period\n  // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\n  // https://code.google.com/p/android/issues/detail?id=19827\n  // ex: Galaxy Tab P3110 + Android 4.1.1\n  pointerEvent.preventDefault();\n};\n\n\n/**\n * Wrap and relay a pointer event.  Note that this requires that the type\n * string for the MapBrowserPointerEvent matches the PointerEvent type.\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @private\n */\nMapBrowserEventHandler.prototype.relayEvent_ = function(pointerEvent) {\n  const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n  this.dispatchEvent(new MapBrowserPointerEvent(\n    pointerEvent.type, this.map_, pointerEvent, dragging));\n};\n\n\n/**\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @return {boolean} Is moving.\n * @private\n */\nMapBrowserEventHandler.prototype.isMoving_ = function(pointerEvent) {\n  return this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n};\n\n\n/**\n * @inheritDoc\n */\nMapBrowserEventHandler.prototype.disposeInternal = function() {\n  if (this.relayedListenerKey_) {\n    unlistenByKey(this.relayedListenerKey_);\n    this.relayedListenerKey_ = null;\n  }\n  if (this.pointerdownListenerKey_) {\n    unlistenByKey(this.pointerdownListenerKey_);\n    this.pointerdownListenerKey_ = null;\n  }\n\n  this.dragListenerKeys_.forEach(unlistenByKey);\n  this.dragListenerKeys_.length = 0;\n\n  if (this.documentPointerEventHandler_) {\n    this.documentPointerEventHandler_.dispose();\n    this.documentPointerEventHandler_ = null;\n  }\n  if (this.pointerEventHandler_) {\n    this.pointerEventHandler_.dispose();\n    this.pointerEventHandler_ = null;\n  }\n  EventTarget.prototype.disposeInternal.call(this);\n};\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/PluggableMap\n */\nimport {getUid, inherits} from './index.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {assert} from './asserts.js';\nimport {removeNode} from './dom.js';\nimport {listen, unlistenByKey, unlisten} from './events.js';\nimport {stopPropagation} from './events/Event.js';\nimport EventType from './events/EventType.js';\nimport {createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {DEVICE_PIXEL_RATIO, TOUCH} from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport {hasArea} from './size.js';\nimport {DROP} from './structs/PriorityQueue.js';\nimport {create as createTransform, apply as applyTransform} from './transform.js';\n\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {module:ol/View~State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {module:ol/transform~Transform} coordinateToPixelTransform\n * @property {null|module:ol/extent~Extent} extent\n * @property {module:ol/coordinate~Coordinate} focus\n * @property {number} index\n * @property {Object.<number, module:ol/layer/Layer~State>} layerStates\n * @property {Array.<module:ol/layer/Layer~State>} layerStatesArray\n * @property {module:ol/transform~Transform} pixelToCoordinateTransform\n * @property {Array.<module:ol/PluggableMap~PostRenderFunction>} postRenderFunctions\n * @property {module:ol/size~Size} size\n * @property {!Object.<string, boolean>} skippedFeatureUids\n * @property {module:ol/TileQueue} tileQueue\n * @property {Object.<string, Object.<string, module:ol/TileRange>>} usedTiles\n * @property {Array.<number>} viewHints\n * @property {!Object.<string, Object.<string, boolean>>} wantedTiles\n */\n\n\n/**\n * @typedef {function(module:ol/PluggableMap, ?module:ol/PluggableMap~FrameState): boolean} PostRenderFunction\n */\n\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {((function(module:ol/layer/Layer): boolean)|undefined)} layerFilter Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {module:ol/Collection.<module:ol/control/Control>} [controls]\n * @property {module:ol/Collection.<module:ol/interaction/Interaction>} [interactions]\n * @property {Element|Document} keyboardEventTarget\n * @property {module:ol/Collection.<module:ol/Overlay>} overlays\n * @property {Object.<string, *>} values\n */\n\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {module:ol/Collection.<module:ol/control/Control>|Array.<module:ol/control/Control>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/util~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {module:ol/Collection.<module:ol/interaction/Interaction>|Array.<module:ol/interaction/Interaction>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {Element|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array.<module:ol/layer/Base>|module:ol/Collection.<module:ol/layer/Base>} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {boolean} [loadTilesWhileAnimating=false] When set to `true`, tiles\n * will be loaded during animations. This may improve the user experience, but\n * can also make animations stutter on devices with slow memory.\n * @property {boolean} [loadTilesWhileInteracting=false] When set to `true`,\n * tiles will be loaded while interacting with the map. This may improve the\n * user experience, but can also make map panning and zooming choppy on devices\n * with slow memory.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {module:ol/Collection.<module:ol/Overlay>|Array.<module:ol/Overlay>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {Element|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {module:ol/View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n\n/**\n * @constructor\n * @extends {module:ol/Object}\n * @param {module:ol/PluggableMap~MapOptions} options Map options.\n * @fires module:ol/MapBrowserEvent~MapBrowserEvent\n * @fires module:ol/MapEvent~MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nconst PluggableMap = function(options) {\n\n  BaseObject.call(this);\n\n  const optionsInternal = createOptionsInternal(options);\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.loadTilesWhileAnimating_ =\n      options.loadTilesWhileAnimating !== undefined ?\n        options.loadTilesWhileAnimating : false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.loadTilesWhileInteracting_ =\n      options.loadTilesWhileInteracting !== undefined ?\n        options.loadTilesWhileInteracting : false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelRatio_ = options.pixelRatio !== undefined ?\n    options.pixelRatio : DEVICE_PIXEL_RATIO;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.animationDelayKey_;\n\n  /**\n   * @private\n   */\n  this.animationDelay_ = function() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_.call(this, Date.now());\n  }.bind(this);\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.coordinateToPixelTransform_ = createTransform();\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.pixelToCoordinateTransform_ = createTransform();\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.frameIndex_ = 0;\n\n  /**\n   * @private\n   * @type {?module:ol/PluggableMap~FrameState}\n   */\n  this.frameState_ = null;\n\n  /**\n   * The extent at the previous 'moveend' event.\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.previousExtent_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.viewPropertyListenerKey_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.viewChangeListenerKey_ = null;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.layerGroupPropertyListenerKeys_ = null;\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.viewport_ = document.createElement('DIV');\n  this.viewport_.className = 'ol-viewport' + (TOUCH ? ' ol-touch' : '');\n  this.viewport_.style.position = 'relative';\n  this.viewport_.style.overflow = 'hidden';\n  this.viewport_.style.width = '100%';\n  this.viewport_.style.height = '100%';\n  // prevent page zoom on IE >= 10 browsers\n  this.viewport_.style.msTouchAction = 'none';\n  this.viewport_.style.touchAction = 'none';\n\n  /**\n   * @private\n   * @type {!Element}\n   */\n  this.overlayContainer_ = document.createElement('DIV');\n  this.overlayContainer_.className = 'ol-overlaycontainer';\n  this.viewport_.appendChild(this.overlayContainer_);\n\n  /**\n   * @private\n   * @type {!Element}\n   */\n  this.overlayContainerStopEvent_ = document.createElement('DIV');\n  this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n  const overlayEvents = [\n    EventType.CLICK,\n    EventType.DBLCLICK,\n    EventType.MOUSEDOWN,\n    EventType.TOUCHSTART,\n    EventType.MSPOINTERDOWN,\n    MapBrowserEventType.POINTERDOWN,\n    EventType.MOUSEWHEEL,\n    EventType.WHEEL\n  ];\n  for (let i = 0, ii = overlayEvents.length; i < ii; ++i) {\n    listen(this.overlayContainerStopEvent_, overlayEvents[i], stopPropagation);\n  }\n  this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n  /**\n   * @private\n   * @type {module:ol/MapBrowserEventHandler}\n   */\n  this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, options.moveTolerance);\n  for (const key in MapBrowserEventType) {\n    listen(this.mapBrowserEventHandler_, MapBrowserEventType[key],\n      this.handleMapBrowserEvent, this);\n  }\n\n  /**\n   * @private\n   * @type {Element|Document}\n   */\n  this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.keyHandlerKeys_ = null;\n\n  listen(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n  listen(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n  listen(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n\n  /**\n   * @type {module:ol/Collection.<module:ol/control/Control>}\n   * @protected\n   */\n  this.controls = optionsInternal.controls || new Collection();\n\n  /**\n   * @type {module:ol/Collection.<module:ol/interaction/Interaction>}\n   * @protected\n   */\n  this.interactions = optionsInternal.interactions || new Collection();\n\n  /**\n   * @type {module:ol/Collection.<module:ol/Overlay>}\n   * @private\n   */\n  this.overlays_ = optionsInternal.overlays;\n\n  /**\n   * A lookup of overlays by id.\n   * @private\n   * @type {Object.<string, module:ol/Overlay>}\n   */\n  this.overlayIdIndex_ = {};\n\n  /**\n   * @type {module:ol/renderer/Map}\n   * @private\n   */\n  this.renderer_ = this.createRenderer();\n\n  /**\n   * @type {function(Event)|undefined}\n   * @private\n   */\n  this.handleResize_;\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.focus_ = null;\n\n  /**\n   * @private\n   * @type {!Array.<module:ol/PluggableMap~PostRenderFunction>}\n   */\n  this.postRenderFunctions_ = [];\n\n  /**\n   * @private\n   * @type {module:ol/TileQueue}\n   */\n  this.tileQueue_ = new TileQueue(\n    this.getTilePriority.bind(this),\n    this.handleTileChange_.bind(this));\n\n  /**\n   * Uids of features to skip at rendering time.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.skippedFeatureUids_ = {};\n\n  listen(\n    this, getChangeEventType(MapProperty.LAYERGROUP),\n    this.handleLayerGroupChanged_, this);\n  listen(this, getChangeEventType(MapProperty.VIEW),\n    this.handleViewChanged_, this);\n  listen(this, getChangeEventType(MapProperty.SIZE),\n    this.handleSizeChanged_, this);\n  listen(this, getChangeEventType(MapProperty.TARGET),\n    this.handleTargetChanged_, this);\n\n  // setProperties will trigger the rendering of the map if the map\n  // is \"defined\" already.\n  this.setProperties(optionsInternal.values);\n\n  this.controls.forEach(\n    /**\n     * @param {module:ol/control/Control} control Control.\n     * @this {module:ol/PluggableMap}\n     */\n    (function(control) {\n      control.setMap(this);\n    }).bind(this));\n\n  listen(this.controls, CollectionEventType.ADD,\n    /**\n     * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n     */\n    function(event) {\n      event.element.setMap(this);\n    }, this);\n\n  listen(this.controls, CollectionEventType.REMOVE,\n    /**\n     * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n     */\n    function(event) {\n      event.element.setMap(null);\n    }, this);\n\n  this.interactions.forEach(\n    /**\n     * @param {module:ol/interaction/Interaction} interaction Interaction.\n     * @this {module:ol/PluggableMap}\n     */\n    (function(interaction) {\n      interaction.setMap(this);\n    }).bind(this));\n\n  listen(this.interactions, CollectionEventType.ADD,\n    /**\n     * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n     */\n    function(event) {\n      event.element.setMap(this);\n    }, this);\n\n  listen(this.interactions, CollectionEventType.REMOVE,\n    /**\n     * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n     */\n    function(event) {\n      event.element.setMap(null);\n    }, this);\n\n  this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n  listen(this.overlays_, CollectionEventType.ADD,\n    /**\n     * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n     */\n    function(event) {\n      this.addOverlayInternal_(/** @type {module:ol/Overlay} */ (event.element));\n    }, this);\n\n  listen(this.overlays_, CollectionEventType.REMOVE,\n    /**\n     * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n     */\n    function(event) {\n      const overlay = /** @type {module:ol/Overlay} */ (event.element);\n      const id = overlay.getId();\n      if (id !== undefined) {\n        delete this.overlayIdIndex_[id.toString()];\n      }\n      event.element.setMap(null);\n    }, this);\n\n};\n\ninherits(PluggableMap, BaseObject);\n\n\nPluggableMap.prototype.createRenderer = function() {\n  throw new Error('Use a map type that has a createRenderer method');\n};\n\n\n/**\n * Add the given control to the map.\n * @param {module:ol/control/Control} control Control.\n * @api\n */\nPluggableMap.prototype.addControl = function(control) {\n  this.getControls().push(control);\n};\n\n\n/**\n * Add the given interaction to the map.\n * @param {module:ol/interaction/Interaction} interaction Interaction to add.\n * @api\n */\nPluggableMap.prototype.addInteraction = function(interaction) {\n  this.getInteractions().push(interaction);\n};\n\n\n/**\n * Adds the given layer to the top of this map. If you want to add a layer\n * elsewhere in the stack, use `getLayers()` and the methods available on\n * {@link module:ol/Collection~Collection}.\n * @param {module:ol/layer/Base} layer Layer.\n * @api\n */\nPluggableMap.prototype.addLayer = function(layer) {\n  const layers = this.getLayerGroup().getLayers();\n  layers.push(layer);\n};\n\n\n/**\n * Add the given overlay to the map.\n * @param {module:ol/Overlay} overlay Overlay.\n * @api\n */\nPluggableMap.prototype.addOverlay = function(overlay) {\n  this.getOverlays().push(overlay);\n};\n\n\n/**\n * This deals with map's overlay collection changes.\n * @param {module:ol/Overlay} overlay Overlay.\n * @private\n */\nPluggableMap.prototype.addOverlayInternal_ = function(overlay) {\n  const id = overlay.getId();\n  if (id !== undefined) {\n    this.overlayIdIndex_[id.toString()] = overlay;\n  }\n  overlay.setMap(this);\n};\n\n\n/**\n *\n * @inheritDoc\n */\nPluggableMap.prototype.disposeInternal = function() {\n  this.mapBrowserEventHandler_.dispose();\n  unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n  unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n  unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n  if (this.handleResize_ !== undefined) {\n    removeEventListener(EventType.RESIZE, this.handleResize_, false);\n    this.handleResize_ = undefined;\n  }\n  if (this.animationDelayKey_) {\n    cancelAnimationFrame(this.animationDelayKey_);\n    this.animationDelayKey_ = undefined;\n  }\n  this.setTarget(null);\n  BaseObject.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * Detect features that intersect a pixel on the viewport, and execute a\n * callback with each intersecting feature. Layers included in the detection can\n * be configured through the `layerFilter` option in `opt_options`.\n * @param {module:ol~Pixel} pixel Pixel.\n * @param {function(this: S, (module:ol/Feature|module:ol/render/Feature),\n *     module:ol/layer/Layer): T} callback Feature callback. The callback will be\n *     called with two arguments. The first argument is one\n *     {@link module:ol/Feature feature} or\n *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n *     unmanaged layers. To stop detection, callback functions can return a\n *     truthy value.\n * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Optional options.\n * @return {T|undefined} Callback result, i.e. the return value of last\n * callback execution, or the first truthy callback return value.\n * @template S,T\n * @api\n */\nPluggableMap.prototype.forEachFeatureAtPixel = function(pixel, callback, opt_options) {\n  if (!this.frameState_) {\n    return;\n  }\n  const coordinate = this.getCoordinateFromPixel(pixel);\n  opt_options = opt_options !== undefined ? opt_options : {};\n  const hitTolerance = opt_options.hitTolerance !== undefined ?\n    opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n  const layerFilter = opt_options.layerFilter !== undefined ?\n    opt_options.layerFilter : TRUE;\n  return this.renderer_.forEachFeatureAtCoordinate(\n    coordinate, this.frameState_, hitTolerance, callback, null,\n    layerFilter, null);\n};\n\n\n/**\n * Get all features that intersect a pixel on the viewport.\n * @param {module:ol~Pixel} pixel Pixel.\n * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Optional options.\n * @return {Array.<module:ol/Feature|module:ol/render/Feature>} The detected features or\n * `null` if none were found.\n * @api\n */\nPluggableMap.prototype.getFeaturesAtPixel = function(pixel, opt_options) {\n  let features = null;\n  this.forEachFeatureAtPixel(pixel, function(feature) {\n    if (!features) {\n      features = [];\n    }\n    features.push(feature);\n  }, opt_options);\n  return features;\n};\n\n/**\n * Detect layers that have a color value at a pixel on the viewport, and\n * execute a callback with each matching layer. Layers included in the\n * detection can be configured through `opt_layerFilter`.\n * @param {module:ol~Pixel} pixel Pixel.\n * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback\n *     Layer callback. This callback will receive two arguments: first is the\n *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n *     that do not currently support this argument. To stop detection, callback\n *     functions can return a truthy value.\n * @param {S=} opt_this Value to use as `this` when executing `callback`.\n * @param {(function(this: U, module:ol/layer/Layer): boolean)=} opt_layerFilter Layer\n *     filter function. The filter function will receive one argument, the\n *     {@link module:ol/layer/Layer layer-candidate} and it should return a boolean\n *     value. Only layers which are visible and for which this function returns\n *     `true` will be tested for features. By default, all visible layers will\n *     be tested.\n * @param {U=} opt_this2 Value to use as `this` when executing `layerFilter`.\n * @return {T|undefined} Callback result, i.e. the return value of last\n * callback execution, or the first truthy callback return value.\n * @template S,T,U\n * @api\n */\nPluggableMap.prototype.forEachLayerAtPixel = function(pixel, callback, opt_this, opt_layerFilter, opt_this2) {\n  if (!this.frameState_) {\n    return;\n  }\n  const thisArg = opt_this !== undefined ? opt_this : null;\n  const layerFilter = opt_layerFilter !== undefined ? opt_layerFilter : TRUE;\n  const thisArg2 = opt_this2 !== undefined ? opt_this2 : null;\n  return this.renderer_.forEachLayerAtPixel(\n    pixel, this.frameState_, callback, thisArg,\n    layerFilter, thisArg2);\n};\n\n\n/**\n * Detect if features intersect a pixel on the viewport. Layers included in the\n * detection can be configured through `opt_layerFilter`.\n * @param {module:ol~Pixel} pixel Pixel.\n * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Optional options.\n * @return {boolean} Is there a feature at the given pixel?\n * @template U\n * @api\n */\nPluggableMap.prototype.hasFeatureAtPixel = function(pixel, opt_options) {\n  if (!this.frameState_) {\n    return false;\n  }\n  const coordinate = this.getCoordinateFromPixel(pixel);\n  opt_options = opt_options !== undefined ? opt_options : {};\n  const layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n  const hitTolerance = opt_options.hitTolerance !== undefined ?\n    opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n  return this.renderer_.hasFeatureAtCoordinate(\n    coordinate, this.frameState_, hitTolerance, layerFilter, null);\n};\n\n\n/**\n * Returns the coordinate in view projection for a browser event.\n * @param {Event} event Event.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nPluggableMap.prototype.getEventCoordinate = function(event) {\n  return this.getCoordinateFromPixel(this.getEventPixel(event));\n};\n\n\n/**\n * Returns the map pixel position for a browser event relative to the viewport.\n * @param {Event} event Event.\n * @return {module:ol~Pixel} Pixel.\n * @api\n */\nPluggableMap.prototype.getEventPixel = function(event) {\n  const viewportPosition = this.viewport_.getBoundingClientRect();\n  const eventPosition = event.changedTouches ? event.changedTouches[0] : event;\n  return [\n    eventPosition.clientX - viewportPosition.left,\n    eventPosition.clientY - viewportPosition.top\n  ];\n};\n\n\n/**\n * Get the target in which this map is rendered.\n * Note that this returns what is entered as an option or in setTarget:\n * if that was an element, it returns an element; if a string, it returns that.\n * @return {Element|string|undefined} The Element or id of the Element that the\n *     map is rendered in.\n * @observable\n * @api\n */\nPluggableMap.prototype.getTarget = function() {\n  return /** @type {Element|string|undefined} */ (this.get(MapProperty.TARGET));\n};\n\n\n/**\n * Get the DOM element into which this map is rendered. In contrast to\n * `getTarget` this method always return an `Element`, or `null` if the\n * map has no target.\n * @return {Element} The element that the map is rendered in.\n * @api\n */\nPluggableMap.prototype.getTargetElement = function() {\n  const target = this.getTarget();\n  if (target !== undefined) {\n    return typeof target === 'string' ? document.getElementById(target) : target;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * Get the coordinate for a given pixel.  This returns a coordinate in the\n * map view projection.\n * @param {module:ol~Pixel} pixel Pixel position in the map viewport.\n * @return {module:ol/coordinate~Coordinate} The coordinate for the pixel position.\n * @api\n */\nPluggableMap.prototype.getCoordinateFromPixel = function(pixel) {\n  const frameState = this.frameState_;\n  if (!frameState) {\n    return null;\n  } else {\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n};\n\n\n/**\n * Get the map controls. Modifying this collection changes the controls\n * associated with the map.\n * @return {module:ol/Collection.<module:ol/control/Control>} Controls.\n * @api\n */\nPluggableMap.prototype.getControls = function() {\n  return this.controls;\n};\n\n\n/**\n * Get the map overlays. Modifying this collection changes the overlays\n * associated with the map.\n * @return {module:ol/Collection.<module:ol/Overlay>} Overlays.\n * @api\n */\nPluggableMap.prototype.getOverlays = function() {\n  return this.overlays_;\n};\n\n\n/**\n * Get an overlay by its identifier (the value returned by overlay.getId()).\n * Note that the index treats string and numeric identifiers as the same. So\n * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n * @param {string|number} id Overlay identifier.\n * @return {module:ol/Overlay} Overlay.\n * @api\n */\nPluggableMap.prototype.getOverlayById = function(id) {\n  const overlay = this.overlayIdIndex_[id.toString()];\n  return overlay !== undefined ? overlay : null;\n};\n\n\n/**\n * Get the map interactions. Modifying this collection changes the interactions\n * associated with the map.\n *\n * Interactions are used for e.g. pan, zoom and rotate.\n * @return {module:ol/Collection.<module:ol/interaction/Interaction>} Interactions.\n * @api\n */\nPluggableMap.prototype.getInteractions = function() {\n  return this.interactions;\n};\n\n\n/**\n * Get the layergroup associated with this map.\n * @return {module:ol/layer/Group} A layer group containing the layers in this map.\n * @observable\n * @api\n */\nPluggableMap.prototype.getLayerGroup = function() {\n  return (\n    /** @type {module:ol/layer/Group} */ (this.get(MapProperty.LAYERGROUP))\n  );\n};\n\n\n/**\n * Get the collection of layers associated with this map.\n * @return {!module:ol/Collection.<module:ol/layer/Base>} Layers.\n * @api\n */\nPluggableMap.prototype.getLayers = function() {\n  const layers = this.getLayerGroup().getLayers();\n  return layers;\n};\n\n\n/**\n * Get the pixel for a coordinate.  This takes a coordinate in the map view\n * projection and returns the corresponding pixel.\n * @param {module:ol/coordinate~Coordinate} coordinate A map coordinate.\n * @return {module:ol~Pixel} A pixel position in the map viewport.\n * @api\n */\nPluggableMap.prototype.getPixelFromCoordinate = function(coordinate) {\n  const frameState = this.frameState_;\n  if (!frameState) {\n    return null;\n  } else {\n    return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n  }\n};\n\n\n/**\n * Get the map renderer.\n * @return {module:ol/renderer/Map} Renderer\n */\nPluggableMap.prototype.getRenderer = function() {\n  return this.renderer_;\n};\n\n\n/**\n * Get the size of this map.\n * @return {module:ol/size~Size|undefined} The size in pixels of the map in the DOM.\n * @observable\n * @api\n */\nPluggableMap.prototype.getSize = function() {\n  return (\n    /** @type {module:ol/size~Size|undefined} */ (this.get(MapProperty.SIZE))\n  );\n};\n\n\n/**\n * Get the view associated with this map. A view manages properties such as\n * center and resolution.\n * @return {module:ol/View} The view that controls this map.\n * @observable\n * @api\n */\nPluggableMap.prototype.getView = function() {\n  return (\n    /** @type {module:ol/View} */ (this.get(MapProperty.VIEW))\n  );\n};\n\n\n/**\n * Get the element that serves as the map viewport.\n * @return {Element} Viewport.\n * @api\n */\nPluggableMap.prototype.getViewport = function() {\n  return this.viewport_;\n};\n\n\n/**\n * Get the element that serves as the container for overlays.  Elements added to\n * this container will let mousedown and touchstart events through to the map,\n * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n * events.\n * @return {!Element} The map's overlay container.\n */\nPluggableMap.prototype.getOverlayContainer = function() {\n  return this.overlayContainer_;\n};\n\n\n/**\n * Get the element that serves as a container for overlays that don't allow\n * event propagation. Elements added to this container won't let mousedown and\n * touchstart events through to the map, so clicks and gestures on an overlay\n * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n * @return {!Element} The map's overlay container that stops events.\n */\nPluggableMap.prototype.getOverlayContainerStopEvent = function() {\n  return this.overlayContainerStopEvent_;\n};\n\n\n/**\n * @param {module:ol/Tile} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {module:ol/coordinate~Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nPluggableMap.prototype.getTilePriority = function(tile, tileSourceKey, tileCenter, tileResolution) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  const frameState = this.frameState_;\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels\n  // between the center of the tile and the focus.  The factor of 65536 means\n  // that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const deltaX = tileCenter[0] - frameState.focus[0];\n  const deltaY = tileCenter[1] - frameState.focus[1];\n  return 65536 * Math.log(tileResolution) +\n      Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n};\n\n\n/**\n * @param {Event} browserEvent Browser event.\n * @param {string=} opt_type Type.\n */\nPluggableMap.prototype.handleBrowserEvent = function(browserEvent, opt_type) {\n  const type = opt_type || browserEvent.type;\n  const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n  this.handleMapBrowserEvent(mapBrowserEvent);\n};\n\n\n/**\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent The event to handle.\n */\nPluggableMap.prototype.handleMapBrowserEvent = function(mapBrowserEvent) {\n  if (!this.frameState_) {\n    // With no view defined, we cannot translate pixels into geographical\n    // coordinates so interactions cannot be used.\n    return;\n  }\n  this.focus_ = mapBrowserEvent.coordinate;\n  mapBrowserEvent.frameState = this.frameState_;\n  const interactionsArray = this.getInteractions().getArray();\n  if (this.dispatchEvent(mapBrowserEvent) !== false) {\n    for (let i = interactionsArray.length - 1; i >= 0; i--) {\n      const interaction = interactionsArray[i];\n      if (!interaction.getActive()) {\n        continue;\n      }\n      const cont = interaction.handleEvent(mapBrowserEvent);\n      if (!cont) {\n        break;\n      }\n    }\n  }\n};\n\n\n/**\n * @protected\n */\nPluggableMap.prototype.handlePostRender = function() {\n\n  const frameState = this.frameState_;\n\n  // Manage the tile queue\n  // Image loads are expensive and a limited resource, so try to use them\n  // efficiently:\n  // * When the view is static we allow a large number of parallel tile loads\n  //   to complete the frame as quickly as possible.\n  // * When animating or interacting, image loads can cause janks, so we reduce\n  //   the maximum number of loads per frame and limit the number of parallel\n  //   tile loads to remain reactive to view changes and to reduce the chance of\n  //   loading tiles that will quickly disappear from view.\n  const tileQueue = this.tileQueue_;\n  if (!tileQueue.isEmpty()) {\n    let maxTotalLoading = this.maxTilesLoading_;\n    let maxNewLoads = maxTotalLoading;\n    if (frameState) {\n      const hints = frameState.viewHints;\n      if (hints[ViewHint.ANIMATING]) {\n        maxTotalLoading = this.loadTilesWhileAnimating_ ? 8 : 0;\n        maxNewLoads = 2;\n      }\n      if (hints[ViewHint.INTERACTING]) {\n        maxTotalLoading = this.loadTilesWhileInteracting_ ? 8 : 0;\n        maxNewLoads = 2;\n      }\n    }\n    if (tileQueue.getTilesLoading() < maxTotalLoading) {\n      tileQueue.reprioritize(); // FIXME only call if view has changed\n      tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n    }\n  }\n\n  const postRenderFunctions = this.postRenderFunctions_;\n  for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n    postRenderFunctions[i](this, frameState);\n  }\n  postRenderFunctions.length = 0;\n};\n\n\n/**\n * @private\n */\nPluggableMap.prototype.handleSizeChanged_ = function() {\n  this.render();\n};\n\n\n/**\n * @private\n */\nPluggableMap.prototype.handleTargetChanged_ = function() {\n  // target may be undefined, null, a string or an Element.\n  // If it's a string we convert it to an Element before proceeding.\n  // If it's not now an Element we remove the viewport from the DOM.\n  // If it's an Element we append the viewport element to it.\n\n  let targetElement;\n  if (this.getTarget()) {\n    targetElement = this.getTargetElement();\n  }\n\n  if (this.keyHandlerKeys_) {\n    for (let i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n      unlistenByKey(this.keyHandlerKeys_[i]);\n    }\n    this.keyHandlerKeys_ = null;\n  }\n\n  if (!targetElement) {\n    this.renderer_.removeLayerRenderers();\n    removeNode(this.viewport_);\n    if (this.handleResize_ !== undefined) {\n      removeEventListener(EventType.RESIZE, this.handleResize_, false);\n      this.handleResize_ = undefined;\n    }\n  } else {\n    targetElement.appendChild(this.viewport_);\n\n    const keyboardEventTarget = !this.keyboardEventTarget_ ?\n      targetElement : this.keyboardEventTarget_;\n    this.keyHandlerKeys_ = [\n      listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n      listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n    ];\n\n    if (!this.handleResize_) {\n      this.handleResize_ = this.updateSize.bind(this);\n      addEventListener(EventType.RESIZE, this.handleResize_, false);\n    }\n  }\n\n  this.updateSize();\n  // updateSize calls setSize, so no need to call this.render\n  // ourselves here.\n};\n\n\n/**\n * @private\n */\nPluggableMap.prototype.handleTileChange_ = function() {\n  this.render();\n};\n\n\n/**\n * @private\n */\nPluggableMap.prototype.handleViewPropertyChanged_ = function() {\n  this.render();\n};\n\n\n/**\n * @private\n */\nPluggableMap.prototype.handleViewChanged_ = function() {\n  if (this.viewPropertyListenerKey_) {\n    unlistenByKey(this.viewPropertyListenerKey_);\n    this.viewPropertyListenerKey_ = null;\n  }\n  if (this.viewChangeListenerKey_) {\n    unlistenByKey(this.viewChangeListenerKey_);\n    this.viewChangeListenerKey_ = null;\n  }\n  const view = this.getView();\n  if (view) {\n    this.viewport_.setAttribute('data-view', getUid(view));\n    this.viewPropertyListenerKey_ = listen(\n      view, ObjectEventType.PROPERTYCHANGE,\n      this.handleViewPropertyChanged_, this);\n    this.viewChangeListenerKey_ = listen(\n      view, EventType.CHANGE,\n      this.handleViewPropertyChanged_, this);\n  }\n  this.render();\n};\n\n\n/**\n * @private\n */\nPluggableMap.prototype.handleLayerGroupChanged_ = function() {\n  if (this.layerGroupPropertyListenerKeys_) {\n    this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n    this.layerGroupPropertyListenerKeys_ = null;\n  }\n  const layerGroup = this.getLayerGroup();\n  if (layerGroup) {\n    this.layerGroupPropertyListenerKeys_ = [\n      listen(\n        layerGroup, ObjectEventType.PROPERTYCHANGE,\n        this.render, this),\n      listen(\n        layerGroup, EventType.CHANGE,\n        this.render, this)\n    ];\n  }\n  this.render();\n};\n\n\n/**\n * @return {boolean} Is rendered.\n */\nPluggableMap.prototype.isRendered = function() {\n  return !!this.frameState_;\n};\n\n\n/**\n * Requests an immediate render in a synchronous manner.\n * @api\n */\nPluggableMap.prototype.renderSync = function() {\n  if (this.animationDelayKey_) {\n    cancelAnimationFrame(this.animationDelayKey_);\n  }\n  this.animationDelay_();\n};\n\n\n/**\n * Request a map rendering (at the next animation frame).\n * @api\n */\nPluggableMap.prototype.render = function() {\n  if (this.animationDelayKey_ === undefined) {\n    this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n  }\n};\n\n\n/**\n * Remove the given control from the map.\n * @param {module:ol/control/Control} control Control.\n * @return {module:ol/control/Control|undefined} The removed control (or undefined\n *     if the control was not found).\n * @api\n */\nPluggableMap.prototype.removeControl = function(control) {\n  return this.getControls().remove(control);\n};\n\n\n/**\n * Remove the given interaction from the map.\n * @param {module:ol/interaction/Interaction} interaction Interaction to remove.\n * @return {module:ol/interaction/Interaction|undefined} The removed interaction (or\n *     undefined if the interaction was not found).\n * @api\n */\nPluggableMap.prototype.removeInteraction = function(interaction) {\n  return this.getInteractions().remove(interaction);\n};\n\n\n/**\n * Removes the given layer from the map.\n * @param {module:ol/layer/Base} layer Layer.\n * @return {module:ol/layer/Base|undefined} The removed layer (or undefined if the\n *     layer was not found).\n * @api\n */\nPluggableMap.prototype.removeLayer = function(layer) {\n  const layers = this.getLayerGroup().getLayers();\n  return layers.remove(layer);\n};\n\n\n/**\n * Remove the given overlay from the map.\n * @param {module:ol/Overlay} overlay Overlay.\n * @return {module:ol/Overlay|undefined} The removed overlay (or undefined\n *     if the overlay was not found).\n * @api\n */\nPluggableMap.prototype.removeOverlay = function(overlay) {\n  return this.getOverlays().remove(overlay);\n};\n\n\n/**\n * @param {number} time Time.\n * @private\n */\nPluggableMap.prototype.renderFrame_ = function(time) {\n  let viewState;\n\n  const size = this.getSize();\n  const view = this.getView();\n  const extent = createEmpty();\n  const previousFrameState = this.frameState_;\n  /** @type {?module:ol/PluggableMap~FrameState} */\n  let frameState = null;\n  if (size !== undefined && hasArea(size) && view && view.isDef()) {\n    const viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    const layerStates = {};\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      layerStates[getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\n    }\n    viewState = view.getState();\n    let focus = this.focus_;\n    if (!focus) {\n      focus = viewState.center;\n      const pixelResolution = viewState.resolution / this.pixelRatio_;\n      focus[0] = Math.round(focus[0] / pixelResolution) * pixelResolution;\n      focus[1] = Math.round(focus[1] / pixelResolution) * pixelResolution;\n    }\n    frameState = /** @type {module:ol/PluggableMap~FrameState} */ ({\n      animate: false,\n      coordinateToPixelTransform: this.coordinateToPixelTransform_,\n      extent: extent,\n      focus: focus,\n      index: this.frameIndex_++,\n      layerStates: layerStates,\n      layerStatesArray: layerStatesArray,\n      pixelRatio: this.pixelRatio_,\n      pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n      postRenderFunctions: [],\n      size: size,\n      skippedFeatureUids: this.skippedFeatureUids_,\n      tileQueue: this.tileQueue_,\n      time: time,\n      usedTiles: {},\n      viewState: viewState,\n      viewHints: viewHints,\n      wantedTiles: {}\n    });\n  }\n\n  if (frameState) {\n    frameState.extent = getForViewAndSize(viewState.center,\n      viewState.resolution, viewState.rotation, frameState.size, extent);\n  }\n\n  this.frameState_ = frameState;\n  this.renderer_.renderFrame(frameState);\n\n  if (frameState) {\n    if (frameState.animate) {\n      this.render();\n    }\n    Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n\n    if (previousFrameState) {\n      const moveStart = !this.previousExtent_ ||\n                  (!isEmpty(this.previousExtent_) &&\n                  !equals(frameState.extent, this.previousExtent_));\n      if (moveStart) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n        this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n      }\n    }\n\n    const idle = this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n    if (idle) {\n      this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n      clone(frameState.extent, this.previousExtent_);\n    }\n  }\n\n  this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n  setTimeout(this.handlePostRender.bind(this), 0);\n\n};\n\n\n/**\n * Sets the layergroup of this map.\n * @param {module:ol/layer/Group} layerGroup A layer group containing the layers in this map.\n * @observable\n * @api\n */\nPluggableMap.prototype.setLayerGroup = function(layerGroup) {\n  this.set(MapProperty.LAYERGROUP, layerGroup);\n};\n\n\n/**\n * Set the size of this map.\n * @param {module:ol/size~Size|undefined} size The size in pixels of the map in the DOM.\n * @observable\n * @api\n */\nPluggableMap.prototype.setSize = function(size) {\n  this.set(MapProperty.SIZE, size);\n};\n\n\n/**\n * Set the target element to render this map into.\n * @param {Element|string|undefined} target The Element or id of the Element\n *     that the map is rendered in.\n * @observable\n * @api\n */\nPluggableMap.prototype.setTarget = function(target) {\n  this.set(MapProperty.TARGET, target);\n};\n\n\n/**\n * Set the view for this map.\n * @param {module:ol/View} view The view that controls this map.\n * @observable\n * @api\n */\nPluggableMap.prototype.setView = function(view) {\n  this.set(MapProperty.VIEW, view);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n */\nPluggableMap.prototype.skipFeature = function(feature) {\n  const featureUid = getUid(feature).toString();\n  this.skippedFeatureUids_[featureUid] = true;\n  this.render();\n};\n\n\n/**\n * Force a recalculation of the map viewport size.  This should be called when\n * third-party code changes the size of the map viewport.\n * @api\n */\nPluggableMap.prototype.updateSize = function() {\n  const targetElement = this.getTargetElement();\n\n  if (!targetElement) {\n    this.setSize(undefined);\n  } else {\n    const computedStyle = getComputedStyle(targetElement);\n    this.setSize([\n      targetElement.offsetWidth -\n          parseFloat(computedStyle['borderLeftWidth']) -\n          parseFloat(computedStyle['paddingLeft']) -\n          parseFloat(computedStyle['paddingRight']) -\n          parseFloat(computedStyle['borderRightWidth']),\n      targetElement.offsetHeight -\n          parseFloat(computedStyle['borderTopWidth']) -\n          parseFloat(computedStyle['paddingTop']) -\n          parseFloat(computedStyle['paddingBottom']) -\n          parseFloat(computedStyle['borderBottomWidth'])\n    ]);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n */\nPluggableMap.prototype.unskipFeature = function(feature) {\n  const featureUid = getUid(feature).toString();\n  delete this.skippedFeatureUids_[featureUid];\n  this.render();\n};\n\n\n/**\n * @param {MapOptions} options Map options.\n * @return {module:ol/PluggableMap~MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n\n  /**\n   * @type {Element|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n      document.getElementById(options.keyboardEventTarget) :\n      options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object.<string, *>}\n   */\n  const values = {};\n\n  const layerGroup = (options.layers instanceof LayerGroup) ?\n    options.layers : new LayerGroup({layers: options.layers});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] = options.view !== undefined ?\n    options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(options.controls instanceof Collection,\n        47); // Expected `controls` to be an array or an `module:ol/Collection~Collection`\n      controls = options.controls;\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(options.interactions instanceof Collection,\n        48); // Expected `interactions` to be an array or an `module:ol/Collection~Collection`\n      interactions = options.interactions;\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(options.overlays instanceof Collection,\n        49); // Expected `overlays` to be an array or an `module:ol/Collection~Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values\n  };\n\n}\nexport default PluggableMap;\n","/**\n * @module ol/ImageTile\n */\nimport {inherits} from './index.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @typedef {function(new: module:ol/ImageTile, module:ol/tilecoord~TileCoord,\n * module:ol/TileState, string, ?string, module:ol/Tile~LoadFunction)} TileClass\n * @api\n */\n\n/**\n * @constructor\n * @extends {module:ol/Tile}\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/TileState} state State.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/Tile~LoadFunction} tileLoadFunction Tile load function.\n * @param {module:ol/Tile~Options=} opt_options Tile options.\n */\nconst ImageTile = function(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n  Tile.call(this, tileCoord, state, opt_options);\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ = crossOrigin;\n\n  /**\n   * Image URI\n   *\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {Image|HTMLCanvasElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/Tile~LoadFunction}\n   */\n  this.tileLoadFunction_ = tileLoadFunction;\n\n};\n\ninherits(ImageTile, Tile);\n\n\n/**\n * @inheritDoc\n */\nImageTile.prototype.disposeInternal = function() {\n  if (this.state == TileState.LOADING) {\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n  }\n  if (this.interimTile) {\n    this.interimTile.dispose();\n  }\n  this.state = TileState.ABORT;\n  this.changed();\n  Tile.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n * @api\n */\nImageTile.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageTile.prototype.getKey = function() {\n  return this.src_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\nImageTile.prototype.handleImageError_ = function() {\n  this.state = TileState.ERROR;\n  this.unlistenImage_();\n  this.image_ = getBlankImage();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\nImageTile.prototype.handleImageLoad_ = function() {\n  if (this.image_.naturalWidth && this.image_.naturalHeight) {\n    this.state = TileState.LOADED;\n  } else {\n    this.state = TileState.EMPTY;\n  }\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nImageTile.prototype.load = function() {\n  if (this.state == TileState.ERROR) {\n    this.state = TileState.IDLE;\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n  if (this.state == TileState.IDLE) {\n    this.state = TileState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.tileLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\nImageTile.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\n\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/render/ReplayGroup\n */\n/**\n * Base class for replay groups.\n * @constructor\n * @abstract\n */\nconst ReplayGroup = function() {};\n\n\n/**\n * @abstract\n * @param {number|undefined} zIndex Z index.\n * @param {module:ol/render/ReplayType} replayType Replay type.\n * @return {module:ol/render/VectorContext} Replay.\n */\nReplayGroup.prototype.getReplay = function(zIndex, replayType) {};\n\n\n/**\n * @abstract\n * @return {boolean} Is empty.\n */\nReplayGroup.prototype.isEmpty = function() {};\nexport default ReplayGroup;\n","/**\n * @module ol/renderer/Layer\n */\nimport {getUid, inherits} from '../index.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {FALSE, UNDEFINED} from '../functions.js';\nimport SourceState from '../source/State.js';\n\n/**\n * @constructor\n * @extends {module:ol/Observable}\n * @param {module:ol/layer/Layer} layer Layer.\n * @struct\n */\nconst LayerRenderer = function(layer) {\n\n  Observable.call(this);\n\n  /**\n   * @private\n   * @type {module:ol/layer/Layer}\n   */\n  this.layer_ = layer;\n\n\n};\n\ninherits(LayerRenderer, Observable);\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {function(this: S, (module:ol/Feature|module:ol/render/Feature), module:ol/layer/Layer): T}\n *     callback Feature callback.\n * @param {S} thisArg Value to use as `this` when executing `callback`.\n * @return {T|undefined} Callback result.\n * @template S,T\n */\nLayerRenderer.prototype.forEachFeatureAtCoordinate = UNDEFINED;\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @return {boolean} Is there a feature at the given coordinate?\n */\nLayerRenderer.prototype.hasFeatureAtCoordinate = FALSE;\n\n\n/**\n * Create a function that adds loaded tiles to the tile lookup.\n * @param {module:ol/source/Tile} source Tile source.\n * @param {module:ol/proj/Projection} projection Projection of the tiles.\n * @param {Object.<number, Object.<string, module:ol/Tile>>} tiles Lookup of loaded tiles by zoom level.\n * @return {function(number, module:ol/TileRange):boolean} A function that can be\n *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n * @protected\n */\nLayerRenderer.prototype.createLoadedTileFinder = function(source, projection, tiles) {\n  return (\n    /**\n     * @param {number} zoom Zoom level.\n     * @param {module:ol/TileRange} tileRange Tile range.\n     * @return {boolean} The tile range is fully loaded.\n     */\n    function(zoom, tileRange) {\n      function callback(tile) {\n        if (!tiles[zoom]) {\n          tiles[zoom] = {};\n        }\n        tiles[zoom][tile.tileCoord.toString()] = tile;\n      }\n      return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n    }\n  );\n};\n\n\n/**\n * @return {module:ol/layer/Layer} Layer.\n */\nLayerRenderer.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * Handle changes in image state.\n * @param {module:ol/events/Event} event Image change event.\n * @private\n */\nLayerRenderer.prototype.handleImageChange_ = function(event) {\n  const image = /** @type {module:ol/Image} */ (event.target);\n  if (image.getState() === ImageState.LOADED) {\n    this.renderIfReadyAndVisible();\n  }\n};\n\n\n/**\n * Load the image if not already loaded, and register the image change\n * listener if needed.\n * @param {module:ol/ImageBase} image Image.\n * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n * @protected\n */\nLayerRenderer.prototype.loadImage = function(image) {\n  let imageState = image.getState();\n  if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n    listen(image, EventType.CHANGE, this.handleImageChange_, this);\n  }\n  if (imageState == ImageState.IDLE) {\n    image.load();\n    imageState = image.getState();\n  }\n  return imageState == ImageState.LOADED;\n};\n\n\n/**\n * @protected\n */\nLayerRenderer.prototype.renderIfReadyAndVisible = function() {\n  const layer = this.getLayer();\n  if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/source/Tile} tileSource Tile source.\n * @protected\n */\nLayerRenderer.prototype.scheduleExpireCache = function(frameState, tileSource) {\n  if (tileSource.canExpireCache()) {\n    /**\n     * @param {module:ol/source/Tile} tileSource Tile source.\n     * @param {module:ol/PluggableMap} map Map.\n     * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n     */\n    const postRenderFunction = function(tileSource, map, frameState) {\n      const tileSourceKey = getUid(tileSource).toString();\n      if (tileSourceKey in frameState.usedTiles) {\n        tileSource.expireCache(frameState.viewState.projection,\n          frameState.usedTiles[tileSourceKey]);\n      }\n    }.bind(null, tileSource);\n\n    frameState.postRenderFunctions.push(\n      /** @type {module:ol/PluggableMap~PostRenderFunction} */ (postRenderFunction)\n    );\n  }\n};\n\n\n/**\n * @param {!Object.<string, !Object.<string, module:ol/TileRange>>} usedTiles Used tiles.\n * @param {module:ol/source/Tile} tileSource Tile source.\n * @param {number} z Z.\n * @param {module:ol/TileRange} tileRange Tile range.\n * @protected\n */\nLayerRenderer.prototype.updateUsedTiles = function(usedTiles, tileSource, z, tileRange) {\n  // FIXME should we use tilesToDrawByZ instead?\n  const tileSourceKey = getUid(tileSource).toString();\n  const zKey = z.toString();\n  if (tileSourceKey in usedTiles) {\n    if (zKey in usedTiles[tileSourceKey]) {\n      usedTiles[tileSourceKey][zKey].extend(tileRange);\n    } else {\n      usedTiles[tileSourceKey][zKey] = tileRange;\n    }\n  } else {\n    usedTiles[tileSourceKey] = {};\n    usedTiles[tileSourceKey][zKey] = tileRange;\n  }\n};\n\n\n/**\n * Manage tile pyramid.\n * This function performs a number of functions related to the tiles at the\n * current zoom and lower zoom levels:\n * - registers idle tiles in frameState.wantedTiles so that they are not\n *   discarded by the tile queue\n * - enqueues missing tiles\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/source/Tile} tileSource Tile source.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} currentZ Current Z.\n * @param {number} preload Load low resolution tiles up to 'preload' levels.\n * @param {function(this: T, module:ol/Tile)=} opt_tileCallback Tile callback.\n * @param {T=} opt_this Object to use as `this` in `opt_tileCallback`.\n * @protected\n * @template T\n */\nLayerRenderer.prototype.manageTilePyramid = function(\n  frameState, tileSource, tileGrid, pixelRatio, projection, extent,\n  currentZ, preload, opt_tileCallback, opt_this) {\n  const tileSourceKey = getUid(tileSource).toString();\n  if (!(tileSourceKey in frameState.wantedTiles)) {\n    frameState.wantedTiles[tileSourceKey] = {};\n  }\n  const wantedTiles = frameState.wantedTiles[tileSourceKey];\n  const tileQueue = frameState.tileQueue;\n  const minZoom = tileGrid.getMinZoom();\n  let tile, tileRange, tileResolution, x, y, z;\n  for (z = minZoom; z <= currentZ; ++z) {\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n    tileResolution = tileGrid.getResolution(z);\n    for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (currentZ - z <= preload) {\n          tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n          if (tile.getState() == TileState.IDLE) {\n            wantedTiles[tile.getKey()] = true;\n            if (!tileQueue.isKeyQueued(tile.getKey())) {\n              tileQueue.enqueue([tile, tileSourceKey,\n                tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n            }\n          }\n          if (opt_tileCallback !== undefined) {\n            opt_tileCallback.call(opt_this, tile);\n          }\n        } else {\n          tileSource.useTile(z, x, y, projection);\n        }\n      }\n    }\n  }\n};\nexport default LayerRenderer;\n","/**\n * @module ol/layer/Base\n */\nimport {inherits} from '../index.js';\nimport BaseObject from '../Object.js';\nimport LayerProperty from '../layer/Property.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/Object}\n * @param {module:ol/layer/Base~Options} options Layer options.\n * @api\n */\nconst BaseLayer = function(options) {\n\n  BaseObject.call(this);\n\n  /**\n   * @type {Object.<string, *>}\n   */\n  const properties = assign({}, options);\n  properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n  properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n  properties[LayerProperty.Z_INDEX] =\n      options.zIndex !== undefined ? options.zIndex : 0;\n  properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n  properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n\n  this.setProperties(properties);\n\n  /**\n   * @type {module:ol/layer/Layer~State}\n   * @private\n   */\n  this.state_ = /** @type {module:ol/layer/Layer~State} */ ({\n    layer: /** @type {module:ol/layer/Layer} */ (this),\n    managed: true\n  });\n\n  /**\n   * The layer type.\n   * @type {module:ol/LayerType}\n   * @protected;\n   */\n  this.type;\n\n};\n\ninherits(BaseLayer, BaseObject);\n\n\n/**\n * Get the layer type (used when creating a layer renderer).\n * @return {module:ol/LayerType} The layer type.\n */\nBaseLayer.prototype.getType = function() {\n  return this.type;\n};\n\n\n/**\n * @return {module:ol/layer/Layer~State} Layer state.\n */\nBaseLayer.prototype.getLayerState = function() {\n  this.state_.opacity = clamp(this.getOpacity(), 0, 1);\n  this.state_.sourceState = this.getSourceState();\n  this.state_.visible = this.getVisible();\n  this.state_.extent = this.getExtent();\n  this.state_.zIndex = this.getZIndex();\n  this.state_.maxResolution = this.getMaxResolution();\n  this.state_.minResolution = Math.max(this.getMinResolution(), 0);\n\n  return this.state_;\n};\n\n\n/**\n * @abstract\n * @param {Array.<module:ol/layer/Layer>=} opt_array Array of layers (to be\n *     modified in place).\n * @return {Array.<module:ol/layer/Layer>} Array of layers.\n */\nBaseLayer.prototype.getLayersArray = function(opt_array) {};\n\n\n/**\n * @abstract\n * @param {Array.<module:ol/layer/Layer~State>=} opt_states Optional list of layer\n *     states (to be modified in place).\n * @return {Array.<module:ol/layer/Layer~State>} List of layer states.\n */\nBaseLayer.prototype.getLayerStatesArray = function(opt_states) {};\n\n\n/**\n * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n * will be visible regardless of extent.\n * @return {module:ol/extent~Extent|undefined} The layer extent.\n * @observable\n * @api\n */\nBaseLayer.prototype.getExtent = function() {\n  return (\n    /** @type {module:ol/extent~Extent|undefined} */ (this.get(LayerProperty.EXTENT))\n  );\n};\n\n\n/**\n * Return the maximum resolution of the layer.\n * @return {number} The maximum resolution of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.getMaxResolution = function() {\n  return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n};\n\n\n/**\n * Return the minimum resolution of the layer.\n * @return {number} The minimum resolution of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.getMinResolution = function() {\n  return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n};\n\n\n/**\n * Return the opacity of the layer (between 0 and 1).\n * @return {number} The opacity of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.getOpacity = function() {\n  return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n};\n\n\n/**\n * @abstract\n * @return {module:ol/source/State} Source state.\n */\nBaseLayer.prototype.getSourceState = function() {};\n\n\n/**\n * Return the visibility of the layer (`true` or `false`).\n * @return {boolean} The visibility of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.getVisible = function() {\n  return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n};\n\n\n/**\n * Return the Z-index of the layer, which is used to order layers before\n * rendering. The default Z-index is 0.\n * @return {number} The Z-index of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.getZIndex = function() {\n  return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n};\n\n\n/**\n * Set the extent at which the layer is visible.  If `undefined`, the layer\n * will be visible at all extents.\n * @param {module:ol/extent~Extent|undefined} extent The extent of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.setExtent = function(extent) {\n  this.set(LayerProperty.EXTENT, extent);\n};\n\n\n/**\n * Set the maximum resolution at which the layer is visible.\n * @param {number} maxResolution The maximum resolution of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.setMaxResolution = function(maxResolution) {\n  this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n};\n\n\n/**\n * Set the minimum resolution at which the layer is visible.\n * @param {number} minResolution The minimum resolution of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.setMinResolution = function(minResolution) {\n  this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n};\n\n\n/**\n * Set the opacity of the layer, allowed values range from 0 to 1.\n * @param {number} opacity The opacity of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.setOpacity = function(opacity) {\n  this.set(LayerProperty.OPACITY, opacity);\n};\n\n\n/**\n * Set the visibility of the layer (`true` or `false`).\n * @param {boolean} visible The visibility of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.setVisible = function(visible) {\n  this.set(LayerProperty.VISIBLE, visible);\n};\n\n\n/**\n * Set Z-index of the layer, which is used to order layers before rendering.\n * The default Z-index is 0.\n * @param {number} zindex The z-index of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.setZIndex = function(zindex) {\n  this.set(LayerProperty.Z_INDEX, zindex);\n};\nexport default BaseLayer;\n","/**\n * @module ol/style/RegularShape\n */\nimport {inherits} from '../index.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {CANVAS_LINE_DASH} from '../has.js';\nimport ImageState from '../ImageState.js';\nimport {defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit} from '../render/canvas.js';\nimport ImageStyle from '../style/Image.js';\n\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {module:ol/style/Fill} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {boolean} [snapToPixel=true] If `true` integral numbers of pixels are used as the X and Y pixel coordinate\n * when drawing the shape in the output canvas. If `false` fractional numbers may be used. Using `true` allows for\n * \"sharp\" rendering (no blur), while using `false` allows for \"accurate\" rendering. Note that accuracy is important if\n * the shape's position is animated. Without it, the shape may jitter noticeably.\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {module:ol/style/AtlasManager} [atlasManager] The atlas manager to use for this symbol. When\n * using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given, the\n * symbol is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @typedef {Object} RenderOptions\n * @property {module:ol/colorlike~ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {string} lineCap\n * @property {Array.<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} miterLimit\n */\n\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n *\n * @constructor\n * @param {module:ol/style/RegularShape~Options} options Options.\n * @extends {module:ol/style/Image}\n * @api\n */\nconst RegularShape = function(options) {\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.checksums_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.hitDetectionCanvas_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.origin_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.points_ = options.points;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.radius_ = /** @type {number} */ (options.radius !== undefined ?\n    options.radius : options.radius1);\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.radius2_ = options.radius2;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n  /**\n   * @private\n   * @type {module:ol/style/Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.anchor_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.size_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.imageSize_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.hitDetectionImageSize_ = null;\n\n  /**\n   * @protected\n   * @type {module:ol/style/AtlasManager|undefined}\n   */\n  this.atlasManager_ = options.atlasManager;\n\n  this.render_(this.atlasManager_);\n\n  /**\n   * @type {boolean}\n   */\n  const snapToPixel = options.snapToPixel !== undefined ?\n    options.snapToPixel : true;\n\n  /**\n   * @type {boolean}\n   */\n  const rotateWithView = options.rotateWithView !== undefined ?\n    options.rotateWithView : false;\n\n  ImageStyle.call(this, {\n    opacity: 1,\n    rotateWithView: rotateWithView,\n    rotation: options.rotation !== undefined ? options.rotation : 0,\n    scale: 1,\n    snapToPixel: snapToPixel\n  });\n};\n\ninherits(RegularShape, ImageStyle);\n\n\n/**\n * Clones the style. If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n * @return {module:ol/style/RegularShape} The cloned style.\n * @api\n */\nRegularShape.prototype.clone = function() {\n  const style = new RegularShape({\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    points: this.getPoints(),\n    radius: this.getRadius(),\n    radius2: this.getRadius2(),\n    angle: this.getAngle(),\n    snapToPixel: this.getSnapToPixel(),\n    stroke: this.getStroke() ?  this.getStroke().clone() : undefined,\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    atlasManager: this.atlasManager_\n  });\n  style.setOpacity(this.getOpacity());\n  style.setScale(this.getScale());\n  return style;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nRegularShape.prototype.getAnchor = function() {\n  return this.anchor_;\n};\n\n\n/**\n * Get the angle used in generating the shape.\n * @return {number} Shape's rotation in radians.\n * @api\n */\nRegularShape.prototype.getAngle = function() {\n  return this.angle_;\n};\n\n\n/**\n * Get the fill style for the shape.\n * @return {module:ol/style/Fill} Fill style.\n * @api\n */\nRegularShape.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.getHitDetectionImage = function(pixelRatio) {\n  return this.hitDetectionCanvas_;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nRegularShape.prototype.getImage = function(pixelRatio) {\n  return this.canvas_;\n};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.getImageSize = function() {\n  return this.imageSize_;\n};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.getHitDetectionImageSize = function() {\n  return this.hitDetectionImageSize_;\n};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.getImageState = function() {\n  return ImageState.LOADED;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nRegularShape.prototype.getOrigin = function() {\n  return this.origin_;\n};\n\n\n/**\n * Get the number of points for generating the shape.\n * @return {number} Number of points for stars and regular polygons.\n * @api\n */\nRegularShape.prototype.getPoints = function() {\n  return this.points_;\n};\n\n\n/**\n * Get the (primary) radius for the shape.\n * @return {number} Radius.\n * @api\n */\nRegularShape.prototype.getRadius = function() {\n  return this.radius_;\n};\n\n\n/**\n * Get the secondary radius for the shape.\n * @return {number|undefined} Radius2.\n * @api\n */\nRegularShape.prototype.getRadius2 = function() {\n  return this.radius2_;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nRegularShape.prototype.getSize = function() {\n  return this.size_;\n};\n\n\n/**\n * Get the stroke style for the shape.\n * @return {module:ol/style/Stroke} Stroke style.\n * @api\n */\nRegularShape.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.listenImageChange = function(listener, thisArg) {};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.load = function() {};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.unlistenImageChange = function(listener, thisArg) {};\n\n\n/**\n * @protected\n * @param {module:ol/style/AtlasManager|undefined} atlasManager An atlas manager.\n */\nRegularShape.prototype.render_ = function(atlasManager) {\n  let imageSize;\n  let lineCap = '';\n  let lineJoin = '';\n  let miterLimit = 0;\n  let lineDash = null;\n  let lineDashOffset = 0;\n  let strokeStyle;\n  let strokeWidth = 0;\n\n  if (this.stroke_) {\n    strokeStyle = this.stroke_.getColor();\n    if (strokeStyle === null) {\n      strokeStyle = defaultStrokeStyle;\n    }\n    strokeStyle = asColorLike(strokeStyle);\n    strokeWidth = this.stroke_.getWidth();\n    if (strokeWidth === undefined) {\n      strokeWidth = defaultLineWidth;\n    }\n    lineDash = this.stroke_.getLineDash();\n    lineDashOffset = this.stroke_.getLineDashOffset();\n    if (!CANVAS_LINE_DASH) {\n      lineDash = null;\n      lineDashOffset = 0;\n    }\n    lineJoin = this.stroke_.getLineJoin();\n    if (lineJoin === undefined) {\n      lineJoin = defaultLineJoin;\n    }\n    lineCap = this.stroke_.getLineCap();\n    if (lineCap === undefined) {\n      lineCap = defaultLineCap;\n    }\n    miterLimit = this.stroke_.getMiterLimit();\n    if (miterLimit === undefined) {\n      miterLimit = defaultMiterLimit;\n    }\n  }\n\n  let size = 2 * (this.radius_ + strokeWidth) + 1;\n\n  /** @type {module:ol/style/RegularShape~RenderOptions} */\n  const renderOptions = {\n    strokeStyle: strokeStyle,\n    strokeWidth: strokeWidth,\n    size: size,\n    lineCap: lineCap,\n    lineDash: lineDash,\n    lineDashOffset: lineDashOffset,\n    lineJoin: lineJoin,\n    miterLimit: miterLimit\n  };\n\n  if (atlasManager === undefined) {\n    // no atlas manager is used, create a new canvas\n    const context = createCanvasContext2D(size, size);\n    this.canvas_ = context.canvas;\n\n    // canvas.width and height are rounded to the closest integer\n    size = this.canvas_.width;\n    imageSize = size;\n\n    this.draw_(renderOptions, context, 0, 0);\n\n    this.createHitDetectionCanvas_(renderOptions);\n  } else {\n    // an atlas manager is used, add the symbol to an atlas\n    size = Math.round(size);\n\n    const hasCustomHitDetectionImage = !this.fill_;\n    let renderHitDetectionCallback;\n    if (hasCustomHitDetectionImage) {\n      // render the hit-detection image into a separate atlas image\n      renderHitDetectionCallback =\n          this.drawHitDetectionCanvas_.bind(this, renderOptions);\n    }\n\n    const id = this.getChecksum();\n    const info = atlasManager.add(\n      id, size, size, this.draw_.bind(this, renderOptions),\n      renderHitDetectionCallback);\n\n    this.canvas_ = info.image;\n    this.origin_ = [info.offsetX, info.offsetY];\n    imageSize = info.image.width;\n\n    if (hasCustomHitDetectionImage) {\n      this.hitDetectionCanvas_ = info.hitImage;\n      this.hitDetectionImageSize_ =\n          [info.hitImage.width, info.hitImage.height];\n    } else {\n      this.hitDetectionCanvas_ = this.canvas_;\n      this.hitDetectionImageSize_ = [imageSize, imageSize];\n    }\n  }\n\n  this.anchor_ = [size / 2, size / 2];\n  this.size_ = [size, size];\n  this.imageSize_ = [imageSize, imageSize];\n};\n\n\n/**\n * @private\n * @param {module:ol/style/RegularShape~RenderOptions} renderOptions Render options.\n * @param {CanvasRenderingContext2D} context The rendering context.\n * @param {number} x The origin for the symbol (x).\n * @param {number} y The origin for the symbol (y).\n */\nRegularShape.prototype.draw_ = function(renderOptions, context, x, y) {\n  let i, angle0, radiusC;\n  // reset transform\n  context.setTransform(1, 0, 0, 1, 0, 0);\n\n  // then move to (x, y)\n  context.translate(x, y);\n\n  context.beginPath();\n\n  let points = this.points_;\n  if (points === Infinity) {\n    context.arc(\n      renderOptions.size / 2, renderOptions.size / 2,\n      this.radius_, 0, 2 * Math.PI, true);\n  } else {\n    const radius2 = (this.radius2_ !== undefined) ? this.radius2_\n      : this.radius_;\n    if (radius2 !== this.radius_) {\n      points = 2 * points;\n    }\n    for (i = 0; i <= points; i++) {\n      angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n      radiusC = i % 2 === 0 ? this.radius_ : radius2;\n      context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n        renderOptions.size / 2 + radiusC * Math.sin(angle0));\n    }\n  }\n\n\n  if (this.fill_) {\n    let color = this.fill_.getColor();\n    if (color === null) {\n      color = defaultFillStyle;\n    }\n    context.fillStyle = asColorLike(color);\n    context.fill();\n  }\n  if (this.stroke_) {\n    context.strokeStyle = renderOptions.strokeStyle;\n    context.lineWidth = renderOptions.strokeWidth;\n    if (renderOptions.lineDash) {\n      context.setLineDash(renderOptions.lineDash);\n      context.lineDashOffset = renderOptions.lineDashOffset;\n    }\n    context.lineCap = renderOptions.lineCap;\n    context.lineJoin = renderOptions.lineJoin;\n    context.miterLimit = renderOptions.miterLimit;\n    context.stroke();\n  }\n  context.closePath();\n};\n\n\n/**\n * @private\n * @param {module:ol/style/RegularShape~RenderOptions} renderOptions Render options.\n */\nRegularShape.prototype.createHitDetectionCanvas_ = function(renderOptions) {\n  this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n  if (this.fill_) {\n    this.hitDetectionCanvas_ = this.canvas_;\n    return;\n  }\n\n  // if no fill style is set, create an extra hit-detection image with a\n  // default fill style\n  const context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n  this.hitDetectionCanvas_ = context.canvas;\n\n  this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n};\n\n\n/**\n * @private\n * @param {module:ol/style/RegularShape~RenderOptions} renderOptions Render options.\n * @param {CanvasRenderingContext2D} context The context.\n * @param {number} x The origin for the symbol (x).\n * @param {number} y The origin for the symbol (y).\n */\nRegularShape.prototype.drawHitDetectionCanvas_ = function(renderOptions, context, x, y) {\n  // reset transform\n  context.setTransform(1, 0, 0, 1, 0, 0);\n\n  // then move to (x, y)\n  context.translate(x, y);\n\n  context.beginPath();\n\n  let points = this.points_;\n  if (points === Infinity) {\n    context.arc(\n      renderOptions.size / 2, renderOptions.size / 2,\n      this.radius_, 0, 2 * Math.PI, true);\n  } else {\n    const radius2 = (this.radius2_ !== undefined) ? this.radius2_\n      : this.radius_;\n    if (radius2 !== this.radius_) {\n      points = 2 * points;\n    }\n    let i, radiusC, angle0;\n    for (i = 0; i <= points; i++) {\n      angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n      radiusC = i % 2 === 0 ? this.radius_ : radius2;\n      context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n        renderOptions.size / 2 + radiusC * Math.sin(angle0));\n    }\n  }\n\n  context.fillStyle = defaultFillStyle;\n  context.fill();\n  if (this.stroke_) {\n    context.strokeStyle = renderOptions.strokeStyle;\n    context.lineWidth = renderOptions.strokeWidth;\n    if (renderOptions.lineDash) {\n      context.setLineDash(renderOptions.lineDash);\n      context.lineDashOffset = renderOptions.lineDashOffset;\n    }\n    context.stroke();\n  }\n  context.closePath();\n};\n\n\n/**\n * @return {string} The checksum.\n */\nRegularShape.prototype.getChecksum = function() {\n  const strokeChecksum = this.stroke_ ?\n    this.stroke_.getChecksum() : '-';\n  const fillChecksum = this.fill_ ?\n    this.fill_.getChecksum() : '-';\n\n  const recalculate = !this.checksums_ ||\n      (strokeChecksum != this.checksums_[1] ||\n      fillChecksum != this.checksums_[2] ||\n      this.radius_ != this.checksums_[3] ||\n      this.radius2_ != this.checksums_[4] ||\n      this.angle_ != this.checksums_[5] ||\n      this.points_ != this.checksums_[6]);\n\n  if (recalculate) {\n    const checksum = 'r' + strokeChecksum + fillChecksum +\n        (this.radius_ !== undefined ? this.radius_.toString() : '-') +\n        (this.radius2_ !== undefined ? this.radius2_.toString() : '-') +\n        (this.angle_ !== undefined ? this.angle_.toString() : '-') +\n        (this.points_ !== undefined ? this.points_.toString() : '-');\n    this.checksums_ = [checksum, strokeChecksum, fillChecksum,\n      this.radius_, this.radius2_, this.angle_, this.points_];\n  }\n\n  return this.checksums_[0];\n};\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\nimport {inherits} from '../index.js';\nimport RegularShape from '../style/RegularShape.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/style/Fill} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {boolean} [snapToPixel=true] If `true` integral numbers of pixels are used as the X and Y pixel coordinate\n * when drawing the circle in the output canvas. If `false` fractional numbers may be used. Using `true` allows for\n * \"sharp\" rendering (no blur), while using `false` allows for \"accurate\" rendering. Note that accuracy is important if\n * the circle's position is animated. Without it, the circle may jitter noticeably.\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {module:ol/style/AtlasManager} [atlasManager] The atlas manager to use for this circle.\n * When using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given,\n * the circle is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @classdesc\n * Set circle style for vector features.\n *\n * @constructor\n * @param {module:ol/style/Circle~Options=} opt_options Options.\n * @extends {module:ol/style/RegularShape}\n * @api\n */\nconst CircleStyle = function(opt_options) {\n\n  const options = opt_options || {};\n\n  RegularShape.call(this, {\n    points: Infinity,\n    fill: options.fill,\n    radius: options.radius,\n    snapToPixel: options.snapToPixel,\n    stroke: options.stroke,\n    atlasManager: options.atlasManager\n  });\n\n};\n\ninherits(CircleStyle, RegularShape);\n\n\n/**\n * Clones the style.  If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n * @return {module:ol/style/Circle} The cloned style.\n * @override\n * @api\n */\nCircleStyle.prototype.clone = function() {\n  const style = new CircleStyle({\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    radius: this.getRadius(),\n    snapToPixel: this.getSnapToPixel(),\n    atlasManager: this.atlasManager_\n  });\n  style.setOpacity(this.getOpacity());\n  style.setScale(this.getScale());\n  return style;\n};\n\n\n/**\n * Set the circle radius.\n *\n * @param {number} radius Circle radius.\n * @api\n */\nCircleStyle.prototype.setRadius = function(radius) {\n  this.radius_ = radius;\n  this.render_(this.atlasManager_);\n};\nexport default CircleStyle;\n","/**\n * @module ol/layer/Group\n */\nimport {getUid, inherits} from '../index.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getIntersection} from '../extent.js';\nimport BaseLayer from '../layer/Base.js';\nimport {assign, clear} from '../obj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {(Array.<module:ol/layer/Base>|module:ol/Collection.<module:ol/layer/Base>)} [layers] Child layers.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers'\n};\n\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @constructor\n * @extends {module:ol/layer/Base}\n * @param {module:ol/layer/Group~Options=} opt_options Layer options.\n * @api\n */\nconst LayerGroup = function(opt_options) {\n\n  const options = opt_options || {};\n  const baseOptions = /** @type {module:ol/layer/Group~Options} */ (assign({}, options));\n  delete baseOptions.layers;\n\n  let layers = options.layers;\n\n  BaseLayer.call(this, baseOptions);\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.layersListenerKeys_ = [];\n\n  /**\n   * @private\n   * @type {Object.<string, Array.<module:ol/events~EventsKey>>}\n   */\n  this.listenerKeys_ = {};\n\n  listen(this,\n    getChangeEventType(Property.LAYERS),\n    this.handleLayersChanged_, this);\n\n  if (layers) {\n    if (Array.isArray(layers)) {\n      layers = new Collection(layers.slice(), {unique: true});\n    } else {\n      assert(layers instanceof Collection,\n        43); // Expected `layers` to be an array or a `Collection`\n      layers = layers;\n    }\n  } else {\n    layers = new Collection(undefined, {unique: true});\n  }\n\n  this.setLayers(layers);\n\n};\n\ninherits(LayerGroup, BaseLayer);\n\n\n/**\n * @private\n */\nLayerGroup.prototype.handleLayerChange_ = function() {\n  this.changed();\n};\n\n\n/**\n * @param {module:ol/events/Event} event Event.\n * @private\n */\nLayerGroup.prototype.handleLayersChanged_ = function(event) {\n  this.layersListenerKeys_.forEach(unlistenByKey);\n  this.layersListenerKeys_.length = 0;\n\n  const layers = this.getLayers();\n  this.layersListenerKeys_.push(\n    listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n    listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n  );\n\n  for (const id in this.listenerKeys_) {\n    this.listenerKeys_[id].forEach(unlistenByKey);\n  }\n  clear(this.listenerKeys_);\n\n  const layersArray = layers.getArray();\n  for (let i = 0, ii = layersArray.length; i < ii; i++) {\n    const layer = layersArray[i];\n    this.listenerKeys_[getUid(layer).toString()] = [\n      listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n    ];\n  }\n\n  this.changed();\n};\n\n\n/**\n * @param {module:ol/Collection~CollectionEvent} collectionEvent CollectionEvent.\n * @private\n */\nLayerGroup.prototype.handleLayersAdd_ = function(collectionEvent) {\n  const layer = /** @type {module:ol/layer/Base} */ (collectionEvent.element);\n  const key = getUid(layer).toString();\n  this.listenerKeys_[key] = [\n    listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n    listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n  ];\n  this.changed();\n};\n\n\n/**\n * @param {module:ol/Collection~CollectionEvent} collectionEvent CollectionEvent.\n * @private\n */\nLayerGroup.prototype.handleLayersRemove_ = function(collectionEvent) {\n  const layer = /** @type {module:ol/layer/Base} */ (collectionEvent.element);\n  const key = getUid(layer).toString();\n  this.listenerKeys_[key].forEach(unlistenByKey);\n  delete this.listenerKeys_[key];\n  this.changed();\n};\n\n\n/**\n * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n * in this group.\n * @return {!module:ol/Collection.<module:ol/layer/Base>} Collection of\n *   {@link module:ol/layer/Base layers} that are part of this group.\n * @observable\n * @api\n */\nLayerGroup.prototype.getLayers = function() {\n  return (\n    /** @type {!module:ol/Collection.<module:ol/layer/Base>} */ (this.get(Property.LAYERS))\n  );\n};\n\n\n/**\n * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n * in this group.\n * @param {!module:ol/Collection.<module:ol/layer/Base>} layers Collection of\n *   {@link module:ol/layer/Base layers} that are part of this group.\n * @observable\n * @api\n */\nLayerGroup.prototype.setLayers = function(layers) {\n  this.set(Property.LAYERS, layers);\n};\n\n\n/**\n * @inheritDoc\n */\nLayerGroup.prototype.getLayersArray = function(opt_array) {\n  const array = opt_array !== undefined ? opt_array : [];\n  this.getLayers().forEach(function(layer) {\n    layer.getLayersArray(array);\n  });\n  return array;\n};\n\n\n/**\n * @inheritDoc\n */\nLayerGroup.prototype.getLayerStatesArray = function(opt_states) {\n  const states = opt_states !== undefined ? opt_states : [];\n\n  const pos = states.length;\n\n  this.getLayers().forEach(function(layer) {\n    layer.getLayerStatesArray(states);\n  });\n\n  const ownLayerState = this.getLayerState();\n  for (let i = pos, ii = states.length; i < ii; i++) {\n    const layerState = states[i];\n    layerState.opacity *= ownLayerState.opacity;\n    layerState.visible = layerState.visible && ownLayerState.visible;\n    layerState.maxResolution = Math.min(\n      layerState.maxResolution, ownLayerState.maxResolution);\n    layerState.minResolution = Math.max(\n      layerState.minResolution, ownLayerState.minResolution);\n    if (ownLayerState.extent !== undefined) {\n      if (layerState.extent !== undefined) {\n        layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n      } else {\n        layerState.extent = ownLayerState.extent;\n      }\n    }\n  }\n\n  return states;\n};\n\n\n/**\n * @inheritDoc\n */\nLayerGroup.prototype.getSourceState = function() {\n  return SourceState.READY;\n};\n\nexport default LayerGroup;\n","/**\n * @module ol/pointer/MsSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {inherits} from '../index.js';\nimport EventSource from '../pointer/EventSource.js';\n\n/**\n * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n * @constructor\n * @extends {module:ol/pointer/EventSource}\n */\nconst MsSource = function(dispatcher) {\n  const mapping = {\n    'MSPointerDown': this.msPointerDown,\n    'MSPointerMove': this.msPointerMove,\n    'MSPointerUp': this.msPointerUp,\n    'MSPointerOut': this.msPointerOut,\n    'MSPointerOver': this.msPointerOver,\n    'MSPointerCancel': this.msPointerCancel,\n    'MSGotPointerCapture': this.msGotPointerCapture,\n    'MSLostPointerCapture': this.msLostPointerCapture\n  };\n  EventSource.call(this, dispatcher, mapping);\n\n  /**\n   * @const\n   * @type {!Object.<string, MSPointerEvent|Object>}\n   */\n  this.pointerMap = dispatcher.pointerMap;\n};\n\ninherits(MsSource, EventSource);\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst POINTER_TYPES = [\n  '',\n  'unavailable',\n  'touch',\n  'pen',\n  'mouse'\n];\n\n\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @private\n * @param {MSPointerEvent} inEvent The in event.\n * @return {Object} The copied event.\n */\nMsSource.prototype.prepareEvent_ = function(inEvent) {\n  let e = inEvent;\n  if (typeof inEvent.pointerType === 'number') {\n    e = this.dispatcher.cloneEvent(inEvent, inEvent);\n    e.pointerType = POINTER_TYPES[inEvent.pointerType];\n  }\n\n  return e;\n};\n\n\n/**\n * Remove this pointer from the list of active pointers.\n * @param {number} pointerId Pointer identifier.\n */\nMsSource.prototype.cleanup = function(pointerId) {\n  delete this.pointerMap[pointerId.toString()];\n};\n\n\n/**\n * Handler for `msPointerDown`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msPointerDown = function(inEvent) {\n  this.pointerMap[inEvent.pointerId.toString()] = inEvent;\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.down(e, inEvent);\n};\n\n\n/**\n * Handler for `msPointerMove`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msPointerMove = function(inEvent) {\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.move(e, inEvent);\n};\n\n\n/**\n * Handler for `msPointerUp`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msPointerUp = function(inEvent) {\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.up(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n};\n\n\n/**\n * Handler for `msPointerOut`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msPointerOut = function(inEvent) {\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.leaveOut(e, inEvent);\n};\n\n\n/**\n * Handler for `msPointerOver`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msPointerOver = function(inEvent) {\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.enterOver(e, inEvent);\n};\n\n\n/**\n * Handler for `msPointerCancel`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msPointerCancel = function(inEvent) {\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.cancel(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n};\n\n\n/**\n * Handler for `msLostPointerCapture`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msLostPointerCapture = function(inEvent) {\n  const e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n};\n\n\n/**\n * Handler for `msGotPointerCapture`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msGotPointerCapture = function(inEvent) {\n  const e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n};\nexport default MsSource;\n","/**\n * @module ol/pointer/NativeSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {inherits} from '../index.js';\nimport EventSource from '../pointer/EventSource.js';\n\n/**\n * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n * @constructor\n * @extends {module:ol/pointer/EventSource}\n */\nconst NativeSource = function(dispatcher) {\n  const mapping = {\n    'pointerdown': this.pointerDown,\n    'pointermove': this.pointerMove,\n    'pointerup': this.pointerUp,\n    'pointerout': this.pointerOut,\n    'pointerover': this.pointerOver,\n    'pointercancel': this.pointerCancel,\n    'gotpointercapture': this.gotPointerCapture,\n    'lostpointercapture': this.lostPointerCapture\n  };\n  EventSource.call(this, dispatcher, mapping);\n};\n\ninherits(NativeSource, EventSource);\n\n\n/**\n * Handler for `pointerdown`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.pointerDown = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointermove`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.pointerMove = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointerup`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.pointerUp = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointerout`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.pointerOut = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointerover`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.pointerOver = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointercancel`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.pointerCancel = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `lostpointercapture`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.lostPointerCapture = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `gotpointercapture`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.gotPointerCapture = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\nexport default NativeSource;\n","/**\n * @module ol/pointer/PointerEvent\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {inherits} from '../index.js';\nimport Event from '../events/Event.js';\n\n/**\n * A class for pointer events.\n *\n * This class is used as an abstraction for mouse events,\n * touch events and even native pointer events.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {string} type The type of the event to create.\n * @param {Event} originalEvent The event.\n * @param {Object.<string, ?>=} opt_eventDict An optional dictionary of\n *    initial event properties.\n */\nconst PointerEvent = function(type, originalEvent, opt_eventDict) {\n  Event.call(this, type);\n\n  /**\n   * @const\n   * @type {Event}\n   */\n  this.originalEvent = originalEvent;\n\n  const eventDict = opt_eventDict ? opt_eventDict : {};\n\n  /**\n   * @type {number}\n   */\n  this.buttons = this.getButtons_(eventDict);\n\n  /**\n   * @type {number}\n   */\n  this.pressure = this.getPressure_(eventDict, this.buttons);\n\n  // MouseEvent related properties\n\n  /**\n   * @type {boolean}\n   */\n  this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\n\n  /**\n   * @type {boolean}\n   */\n  this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\n\n  /**\n   * @type {Object}\n   */\n  this.view = 'view' in eventDict ? eventDict['view'] : null;\n\n  /**\n   * @type {number}\n   */\n  this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\n\n  /**\n   * @type {number}\n   */\n  this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\n\n  /**\n   * @type {boolean}\n   */\n  this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\n\n  /**\n   * @type {boolean}\n   */\n  this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\n\n  /**\n   * @type {boolean}\n   */\n  this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\n\n  /**\n   * @type {boolean}\n   */\n  this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\n\n  /**\n   * @type {number}\n   */\n  this.button = 'button' in eventDict ? eventDict['button'] : 0;\n\n  /**\n   * @type {Node}\n   */\n  this.relatedTarget = 'relatedTarget' in eventDict ?\n    eventDict['relatedTarget'] : null;\n\n  // PointerEvent related properties\n\n  /**\n   * @const\n   * @type {number}\n   */\n  this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.width = 'width' in eventDict ? eventDict['width'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.height = 'height' in eventDict ? eventDict['height'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\n\n  /**\n   * @type {string}\n   */\n  this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\n\n  /**\n   * @type {number}\n   */\n  this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\n\n  /**\n   * @type {boolean}\n   */\n  this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\n\n  // keep the semantics of preventDefault\n  if (originalEvent.preventDefault) {\n    this.preventDefault = function() {\n      originalEvent.preventDefault();\n    };\n  }\n};\n\ninherits(PointerEvent, Event);\n\n\n/**\n * Is the `buttons` property supported?\n * @type {boolean}\n */\nlet HAS_BUTTONS = false;\n\n\n/**\n * @private\n * @param {Object.<string, ?>} eventDict The event dictionary.\n * @return {number} Button indicator.\n */\nPointerEvent.prototype.getButtons_ = function(eventDict) {\n  // According to the w3c spec,\n  // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\n  // MouseEvent.button == 0 can mean either no mouse button depressed, or the\n  // left mouse button depressed.\n  //\n  // As of now, the only way to distinguish between the two states of\n  // MouseEvent.button is by using the deprecated MouseEvent.which property, as\n  // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\n  // no mouse button is held.\n  //\n  // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\n  // but initMouseEvent does not expose an argument with which to set\n  // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\n  // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\n  // of app developers.\n  //\n  // The only way to propagate the correct state of MouseEvent.which and\n  // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\n  // is to call initMouseEvent with a buttonArg value of -1.\n  //\n  // This is fixed with DOM Level 4's use of buttons\n  let buttons;\n  if (eventDict.buttons || HAS_BUTTONS) {\n    buttons = eventDict.buttons;\n  } else {\n    switch (eventDict.which) {\n      case 1: buttons = 1; break;\n      case 2: buttons = 4; break;\n      case 3: buttons = 2; break;\n      default: buttons = 0;\n    }\n  }\n  return buttons;\n};\n\n\n/**\n * @private\n * @param {Object.<string, ?>} eventDict The event dictionary.\n * @param {number} buttons Button indicator.\n * @return {number} The pressure.\n */\nPointerEvent.prototype.getPressure_ = function(eventDict, buttons) {\n  // Spec requires that pointers without pressure specified use 0.5 for down\n  // state and 0 for up state.\n  let pressure = 0;\n  if (eventDict.pressure) {\n    pressure = eventDict.pressure;\n  } else {\n    pressure = buttons ? 0.5 : 0;\n  }\n  return pressure;\n};\n\n\n/**\n * Checks if the `buttons` property is supported.\n */\n(function() {\n  try {\n    const ev = new MouseEvent('click', {buttons: 1});\n    HAS_BUTTONS = ev.buttons === 1;\n  } catch (e) {\n    // pass\n  }\n})();\nexport default PointerEvent;\n","/**\n * @module ol/pointer/TouchSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {inherits} from '../index.js';\nimport {remove} from '../array.js';\nimport EventSource from '../pointer/EventSource.js';\nimport {POINTER_ID} from '../pointer/MouseSource.js';\n\n\n/**\n * @constructor\n * @param {module:ol/pointer/PointerEventHandler} dispatcher The event handler.\n * @param {module:ol/pointer/MouseSource} mouseSource Mouse source.\n * @extends {module:ol/pointer/EventSource}\n */\nconst TouchSource = function(dispatcher, mouseSource) {\n  const mapping = {\n    'touchstart': this.touchstart,\n    'touchmove': this.touchmove,\n    'touchend': this.touchend,\n    'touchcancel': this.touchcancel\n  };\n  EventSource.call(this, dispatcher, mapping);\n\n  /**\n   * @const\n   * @type {!Object.<string, Event|Object>}\n   */\n  this.pointerMap = dispatcher.pointerMap;\n\n  /**\n   * @const\n   * @type {module:ol/pointer/MouseSource}\n   */\n  this.mouseSource = mouseSource;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.firstTouchId_ = undefined;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.clickCount_ = 0;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.resetId_ = undefined;\n\n  /**\n   * Mouse event timeout: This should be long enough to\n   * ignore compat mouse events made by touch.\n   * @private\n   * @type {number}\n   */\n  this.dedupTimeout_ = 2500;\n};\n\ninherits(TouchSource, EventSource);\n\n\n/**\n * @type {number}\n */\nconst CLICK_COUNT_TIMEOUT = 200;\n\n\n/**\n * @type {string}\n */\nconst POINTER_TYPE = 'touch';\n\n/**\n * @private\n * @param {Touch} inTouch The in touch.\n * @return {boolean} True, if this is the primary touch.\n */\nTouchSource.prototype.isPrimaryTouch_ = function(inTouch) {\n  return this.firstTouchId_ === inTouch.identifier;\n};\n\n\n/**\n * Set primary touch if there are no pointers, or the only pointer is the mouse.\n * @param {Touch} inTouch The in touch.\n * @private\n */\nTouchSource.prototype.setPrimaryTouch_ = function(inTouch) {\n  const count = Object.keys(this.pointerMap).length;\n  if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\n    this.firstTouchId_ = inTouch.identifier;\n    this.cancelResetClickCount_();\n  }\n};\n\n\n/**\n * @private\n * @param {Object} inPointer The in pointer object.\n */\nTouchSource.prototype.removePrimaryPointer_ = function(inPointer) {\n  if (inPointer.isPrimary) {\n    this.firstTouchId_ = undefined;\n    this.resetClickCount_();\n  }\n};\n\n\n/**\n * @private\n */\nTouchSource.prototype.resetClickCount_ = function() {\n  this.resetId_ = setTimeout(\n    this.resetClickCountHandler_.bind(this),\n    CLICK_COUNT_TIMEOUT);\n};\n\n\n/**\n * @private\n */\nTouchSource.prototype.resetClickCountHandler_ = function() {\n  this.clickCount_ = 0;\n  this.resetId_ = undefined;\n};\n\n\n/**\n * @private\n */\nTouchSource.prototype.cancelResetClickCount_ = function() {\n  if (this.resetId_ !== undefined) {\n    clearTimeout(this.resetId_);\n  }\n};\n\n\n/**\n * @private\n * @param {Event} browserEvent Browser event\n * @param {Touch} inTouch Touch event\n * @return {Object} A pointer object.\n */\nTouchSource.prototype.touchToPointer_ = function(browserEvent, inTouch) {\n  const e = this.dispatcher.cloneEvent(browserEvent, inTouch);\n  // Spec specifies that pointerId 1 is reserved for Mouse.\n  // Touch identifiers can start at 0.\n  // Add 2 to the touch identifier for compatibility.\n  e.pointerId = inTouch.identifier + 2;\n  // TODO: check if this is necessary?\n  //e.target = findTarget(e);\n  e.bubbles = true;\n  e.cancelable = true;\n  e.detail = this.clickCount_;\n  e.button = 0;\n  e.buttons = 1;\n  e.width = inTouch.webkitRadiusX || inTouch.radiusX || 0;\n  e.height = inTouch.webkitRadiusY || inTouch.radiusY || 0;\n  e.pressure = inTouch.webkitForce || inTouch.force || 0.5;\n  e.isPrimary = this.isPrimaryTouch_(inTouch);\n  e.pointerType = POINTER_TYPE;\n\n  // make sure that the properties that are different for\n  // each `Touch` object are not copied from the BrowserEvent object\n  e.clientX = inTouch.clientX;\n  e.clientY = inTouch.clientY;\n  e.screenX = inTouch.screenX;\n  e.screenY = inTouch.screenY;\n\n  return e;\n};\n\n\n/**\n * @private\n * @param {Event} inEvent Touch event\n * @param {function(Event, Object)} inFunction In function.\n */\nTouchSource.prototype.processTouches_ = function(inEvent, inFunction) {\n  const touches = Array.prototype.slice.call(inEvent.changedTouches);\n  const count = touches.length;\n  function preventDefault() {\n    inEvent.preventDefault();\n  }\n  for (let i = 0; i < count; ++i) {\n    const pointer = this.touchToPointer_(inEvent, touches[i]);\n    // forward touch preventDefaults\n    pointer.preventDefault = preventDefault;\n    inFunction.call(this, inEvent, pointer);\n  }\n};\n\n\n/**\n * @private\n * @param {TouchList} touchList The touch list.\n * @param {number} searchId Search identifier.\n * @return {boolean} True, if the `Touch` with the given id is in the list.\n */\nTouchSource.prototype.findTouch_ = function(touchList, searchId) {\n  const l = touchList.length;\n  for (let i = 0; i < l; i++) {\n    const touch = touchList[i];\n    if (touch.identifier === searchId) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * In some instances, a touchstart can happen without a touchend. This\n * leaves the pointermap in a broken state.\n * Therefore, on every touchstart, we remove the touches that did not fire a\n * touchend event.\n * To keep state globally consistent, we fire a pointercancel for\n * this \"abandoned\" touch\n *\n * @private\n * @param {Event} inEvent The in event.\n */\nTouchSource.prototype.vacuumTouches_ = function(inEvent) {\n  const touchList = inEvent.touches;\n  // pointerMap.getCount() should be < touchList.length here,\n  // as the touchstart has not been processed yet.\n  const keys = Object.keys(this.pointerMap);\n  const count = keys.length;\n  if (count >= touchList.length) {\n    const d = [];\n    for (let i = 0; i < count; ++i) {\n      const key = keys[i];\n      const value = this.pointerMap[key];\n      // Never remove pointerId == 1, which is mouse.\n      // Touch identifiers are 2 smaller than their pointerId, which is the\n      // index in pointermap.\n      if (key != POINTER_ID && !this.findTouch_(touchList, key - 2)) {\n        d.push(value.out);\n      }\n    }\n    for (let i = 0; i < d.length; ++i) {\n      this.cancelOut_(inEvent, d[i]);\n    }\n  }\n};\n\n\n/**\n * Handler for `touchstart`, triggers `pointerover`,\n * `pointerenter` and `pointerdown` events.\n *\n * @param {Event} inEvent The in event.\n */\nTouchSource.prototype.touchstart = function(inEvent) {\n  this.vacuumTouches_(inEvent);\n  this.setPrimaryTouch_(inEvent.changedTouches[0]);\n  this.dedupSynthMouse_(inEvent);\n  this.clickCount_++;\n  this.processTouches_(inEvent, this.overDown_);\n};\n\n\n/**\n * @private\n * @param {Event} browserEvent The event.\n * @param {Object} inPointer The in pointer object.\n */\nTouchSource.prototype.overDown_ = function(browserEvent, inPointer) {\n  this.pointerMap[inPointer.pointerId] = {\n    target: inPointer.target,\n    out: inPointer,\n    outTarget: inPointer.target\n  };\n  this.dispatcher.over(inPointer, browserEvent);\n  this.dispatcher.enter(inPointer, browserEvent);\n  this.dispatcher.down(inPointer, browserEvent);\n};\n\n\n/**\n * Handler for `touchmove`.\n *\n * @param {Event} inEvent The in event.\n */\nTouchSource.prototype.touchmove = function(inEvent) {\n  inEvent.preventDefault();\n  this.processTouches_(inEvent, this.moveOverOut_);\n};\n\n\n/**\n * @private\n * @param {Event} browserEvent The event.\n * @param {Object} inPointer The in pointer.\n */\nTouchSource.prototype.moveOverOut_ = function(browserEvent, inPointer) {\n  const event = inPointer;\n  const pointer = this.pointerMap[event.pointerId];\n  // a finger drifted off the screen, ignore it\n  if (!pointer) {\n    return;\n  }\n  const outEvent = pointer.out;\n  const outTarget = pointer.outTarget;\n  this.dispatcher.move(event, browserEvent);\n  if (outEvent && outTarget !== event.target) {\n    outEvent.relatedTarget = event.target;\n    event.relatedTarget = outTarget;\n    // recover from retargeting by shadow\n    outEvent.target = outTarget;\n    if (event.target) {\n      this.dispatcher.leaveOut(outEvent, browserEvent);\n      this.dispatcher.enterOver(event, browserEvent);\n    } else {\n      // clean up case when finger leaves the screen\n      event.target = outTarget;\n      event.relatedTarget = null;\n      this.cancelOut_(browserEvent, event);\n    }\n  }\n  pointer.out = event;\n  pointer.outTarget = event.target;\n};\n\n\n/**\n * Handler for `touchend`, triggers `pointerup`,\n * `pointerout` and `pointerleave` events.\n *\n * @param {Event} inEvent The event.\n */\nTouchSource.prototype.touchend = function(inEvent) {\n  this.dedupSynthMouse_(inEvent);\n  this.processTouches_(inEvent, this.upOut_);\n};\n\n\n/**\n * @private\n * @param {Event} browserEvent An event.\n * @param {Object} inPointer The inPointer object.\n */\nTouchSource.prototype.upOut_ = function(browserEvent, inPointer) {\n  this.dispatcher.up(inPointer, browserEvent);\n  this.dispatcher.out(inPointer, browserEvent);\n  this.dispatcher.leave(inPointer, browserEvent);\n  this.cleanUpPointer_(inPointer);\n};\n\n\n/**\n * Handler for `touchcancel`, triggers `pointercancel`,\n * `pointerout` and `pointerleave` events.\n *\n * @param {Event} inEvent The in event.\n */\nTouchSource.prototype.touchcancel = function(inEvent) {\n  this.processTouches_(inEvent, this.cancelOut_);\n};\n\n\n/**\n * @private\n * @param {Event} browserEvent The event.\n * @param {Object} inPointer The in pointer.\n */\nTouchSource.prototype.cancelOut_ = function(browserEvent, inPointer) {\n  this.dispatcher.cancel(inPointer, browserEvent);\n  this.dispatcher.out(inPointer, browserEvent);\n  this.dispatcher.leave(inPointer, browserEvent);\n  this.cleanUpPointer_(inPointer);\n};\n\n\n/**\n * @private\n * @param {Object} inPointer The inPointer object.\n */\nTouchSource.prototype.cleanUpPointer_ = function(inPointer) {\n  delete this.pointerMap[inPointer.pointerId];\n  this.removePrimaryPointer_(inPointer);\n};\n\n\n/**\n * Prevent synth mouse events from creating pointer events.\n *\n * @private\n * @param {Event} inEvent The in event.\n */\nTouchSource.prototype.dedupSynthMouse_ = function(inEvent) {\n  const lts = this.mouseSource.lastTouches;\n  const t = inEvent.changedTouches[0];\n  // only the primary finger will synth mouse events\n  if (this.isPrimaryTouch_(t)) {\n    // remember x/y of last touch\n    const lt = [t.clientX, t.clientY];\n    lts.push(lt);\n\n    setTimeout(function() {\n      // remove touch after timeout\n      remove(lts, lt);\n    }, this.dedupTimeout_);\n  }\n};\nexport default TouchSource;\n","/**\n * @module ol/pointer/PointerEventHandler\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {inherits} from '../index.js';\nimport {listen, unlisten} from '../events.js';\nimport EventTarget from '../events/EventTarget.js';\nimport {POINTER, MSPOINTER, TOUCH} from '../has.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport MouseSource from '../pointer/MouseSource.js';\nimport MsSource from '../pointer/MsSource.js';\nimport NativeSource from '../pointer/NativeSource.js';\nimport PointerEvent from '../pointer/PointerEvent.js';\nimport TouchSource from '../pointer/TouchSource.js';\n\n/**\n * @constructor\n * @extends {module:ol/events/EventTarget}\n * @param {Element|HTMLDocument} element Viewport element.\n */\nconst PointerEventHandler = function(element) {\n  EventTarget.call(this);\n\n  /**\n   * @const\n   * @private\n   * @type {Element|HTMLDocument}\n   */\n  this.element_ = element;\n\n  /**\n   * @const\n   * @type {!Object.<string, Event|Object>}\n   */\n  this.pointerMap = {};\n\n  /**\n   * @type {Object.<string, function(Event)>}\n   * @private\n   */\n  this.eventMap_ = {};\n\n  /**\n   * @type {Array.<module:ol/pointer/EventSource>}\n   * @private\n   */\n  this.eventSourceList_ = [];\n\n  this.registerSources();\n};\n\ninherits(PointerEventHandler, EventTarget);\n\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array.<Array>}\n */\nconst CLONE_PROPS = [\n  // MouseEvent\n  ['bubbles', false],\n  ['cancelable', false],\n  ['view', null],\n  ['detail', null],\n  ['screenX', 0],\n  ['screenY', 0],\n  ['clientX', 0],\n  ['clientY', 0],\n  ['ctrlKey', false],\n  ['altKey', false],\n  ['shiftKey', false],\n  ['metaKey', false],\n  ['button', 0],\n  ['relatedTarget', null],\n  // DOM Level 3\n  ['buttons', 0],\n  // PointerEvent\n  ['pointerId', 0],\n  ['width', 0],\n  ['height', 0],\n  ['pressure', 0],\n  ['tiltX', 0],\n  ['tiltY', 0],\n  ['pointerType', ''],\n  ['hwTimestamp', 0],\n  ['isPrimary', false],\n  // event instance\n  ['type', ''],\n  ['target', null],\n  ['currentTarget', null],\n  ['which', 0]\n];\n\n\n/**\n * Set up the event sources (mouse, touch and native pointers)\n * that generate pointer events.\n */\nPointerEventHandler.prototype.registerSources = function() {\n  if (POINTER) {\n    this.registerSource('native', new NativeSource(this));\n  } else if (MSPOINTER) {\n    this.registerSource('ms', new MsSource(this));\n  } else {\n    const mouseSource = new MouseSource(this);\n    this.registerSource('mouse', mouseSource);\n\n    if (TOUCH) {\n      this.registerSource('touch', new TouchSource(this, mouseSource));\n    }\n  }\n\n  // register events on the viewport element\n  this.register_();\n};\n\n\n/**\n * Add a new event source that will generate pointer events.\n *\n * @param {string} name A name for the event source\n * @param {module:ol/pointer/EventSource} source The source event.\n */\nPointerEventHandler.prototype.registerSource = function(name, source) {\n  const s = source;\n  const newEvents = s.getEvents();\n\n  if (newEvents) {\n    newEvents.forEach(function(e) {\n      const handler = s.getHandlerForEvent(e);\n\n      if (handler) {\n        this.eventMap_[e] = handler.bind(s);\n      }\n    }.bind(this));\n    this.eventSourceList_.push(s);\n  }\n};\n\n\n/**\n * Set up the events for all registered event sources.\n * @private\n */\nPointerEventHandler.prototype.register_ = function() {\n  const l = this.eventSourceList_.length;\n  for (let i = 0; i < l; i++) {\n    const eventSource = this.eventSourceList_[i];\n    this.addEvents_(eventSource.getEvents());\n  }\n};\n\n\n/**\n * Remove all registered events.\n * @private\n */\nPointerEventHandler.prototype.unregister_ = function() {\n  const l = this.eventSourceList_.length;\n  for (let i = 0; i < l; i++) {\n    const eventSource = this.eventSourceList_[i];\n    this.removeEvents_(eventSource.getEvents());\n  }\n};\n\n\n/**\n * Calls the right handler for a new event.\n * @private\n * @param {Event} inEvent Browser event.\n */\nPointerEventHandler.prototype.eventHandler_ = function(inEvent) {\n  const type = inEvent.type;\n  const handler = this.eventMap_[type];\n  if (handler) {\n    handler(inEvent);\n  }\n};\n\n\n/**\n * Setup listeners for the given events.\n * @private\n * @param {Array.<string>} events List of events.\n */\nPointerEventHandler.prototype.addEvents_ = function(events) {\n  events.forEach(function(eventName) {\n    listen(this.element_, eventName, this.eventHandler_, this);\n  }.bind(this));\n};\n\n\n/**\n * Unregister listeners for the given events.\n * @private\n * @param {Array.<string>} events List of events.\n */\nPointerEventHandler.prototype.removeEvents_ = function(events) {\n  events.forEach(function(e) {\n    unlisten(this.element_, e, this.eventHandler_, this);\n  }.bind(this));\n};\n\n\n/**\n * Returns a snapshot of inEvent, with writable properties.\n *\n * @param {Event} event Browser event.\n * @param {Event|Touch} inEvent An event that contains\n *    properties to copy.\n * @return {Object} An object containing shallow copies of\n *    `inEvent`'s properties.\n */\nPointerEventHandler.prototype.cloneEvent = function(event, inEvent) {\n  const eventCopy = {};\n  for (let i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\n    const p = CLONE_PROPS[i][0];\n    eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\n  }\n\n  return eventCopy;\n};\n\n\n// EVENTS\n\n\n/**\n * Triggers a 'pointerdown' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.down = function(data, event) {\n  this.fireEvent(PointerEventType.POINTERDOWN, data, event);\n};\n\n\n/**\n * Triggers a 'pointermove' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.move = function(data, event) {\n  this.fireEvent(PointerEventType.POINTERMOVE, data, event);\n};\n\n\n/**\n * Triggers a 'pointerup' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.up = function(data, event) {\n  this.fireEvent(PointerEventType.POINTERUP, data, event);\n};\n\n\n/**\n * Triggers a 'pointerenter' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.enter = function(data, event) {\n  data.bubbles = false;\n  this.fireEvent(PointerEventType.POINTERENTER, data, event);\n};\n\n\n/**\n * Triggers a 'pointerleave' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.leave = function(data, event) {\n  data.bubbles = false;\n  this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\n};\n\n\n/**\n * Triggers a 'pointerover' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.over = function(data, event) {\n  data.bubbles = true;\n  this.fireEvent(PointerEventType.POINTEROVER, data, event);\n};\n\n\n/**\n * Triggers a 'pointerout' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.out = function(data, event) {\n  data.bubbles = true;\n  this.fireEvent(PointerEventType.POINTEROUT, data, event);\n};\n\n\n/**\n * Triggers a 'pointercancel' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.cancel = function(data, event) {\n  this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\n};\n\n\n/**\n * Triggers a combination of 'pointerout' and 'pointerleave' events.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.leaveOut = function(data, event) {\n  this.out(data, event);\n  if (!this.contains_(data.target, data.relatedTarget)) {\n    this.leave(data, event);\n  }\n};\n\n\n/**\n * Triggers a combination of 'pointerover' and 'pointerevents' events.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.enterOver = function(data, event) {\n  this.over(data, event);\n  if (!this.contains_(data.target, data.relatedTarget)) {\n    this.enter(data, event);\n  }\n};\n\n\n/**\n * @private\n * @param {Element} container The container element.\n * @param {Element} contained The contained element.\n * @return {boolean} Returns true if the container element\n *   contains the other element.\n */\nPointerEventHandler.prototype.contains_ = function(container, contained) {\n  if (!container || !contained) {\n    return false;\n  }\n  return container.contains(contained);\n};\n\n\n// EVENT CREATION AND TRACKING\n/**\n * Creates a new Event of type `inType`, based on the information in\n * `data`.\n *\n * @param {string} inType A string representing the type of event to create.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n * @return {module:ol/pointer/PointerEvent} A PointerEvent of type `inType`.\n */\nPointerEventHandler.prototype.makeEvent = function(inType, data, event) {\n  return new PointerEvent(inType, event, data);\n};\n\n\n/**\n * Make and dispatch an event in one call.\n * @param {string} inType A string representing the type of event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.fireEvent = function(inType, data, event) {\n  const e = this.makeEvent(inType, data, event);\n  this.dispatchEvent(e);\n};\n\n\n/**\n * Creates a pointer event from a native pointer event\n * and dispatches this event.\n * @param {Event} event A platform event with a target.\n */\nPointerEventHandler.prototype.fireNativeEvent = function(event) {\n  const e = this.makeEvent(event.type, event, event);\n  this.dispatchEvent(e);\n};\n\n\n/**\n * Wrap a native mouse event into a pointer event.\n * This proxy method is required for the legacy IE support.\n * @param {string} eventType The pointer event type.\n * @param {Event} event The event.\n * @return {module:ol/pointer/PointerEvent} The wrapped event.\n */\nPointerEventHandler.prototype.wrapMouseEvent = function(eventType, event) {\n  const pointerEvent = this.makeEvent(\n    eventType, MouseSource.prepareEvent(event, this), event);\n  return pointerEvent;\n};\n\n\n/**\n * @inheritDoc\n */\nPointerEventHandler.prototype.disposeInternal = function() {\n  this.unregister_();\n  EventTarget.prototype.disposeInternal.call(this);\n};\n\n\nexport default PointerEventHandler;\n","/**\n * @module ol/format/GML2\n */\nimport {inherits} from '../index.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase, {GMLNS} from '../format/GMLBase.js';\nimport {writeStringTextNode} from '../format/xsd.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport {createElementNS, getAllTextContent, makeArrayPusher, makeChildAppender,\n  makeReplacer, makeSimpleNodeFactory, OBJECT_PROPERTY_NODE_FACTORY, pushParseAndPop, pushSerializeAndPop} from '../xml.js';\n\n\n/**\n * @const\n * @type {string}\n */\nconst schemaLocation = GMLNS + ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @constructor\n * @param {module:ol/format/GMLBase~Options=} opt_options Optional configuration object.\n * @extends {module:ol/format/GMLBase}\n * @api\n */\nconst GML2 = function(opt_options) {\n  const options = /** @type {module:ol/format/GMLBase~Options} */\n      (opt_options ? opt_options : {});\n\n  GMLBase.call(this, options);\n\n  this.FEATURE_COLLECTION_PARSERS[GMLNS][\n    'featureMember'] =\n      makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n\n  /**\n   * @inheritDoc\n   */\n  this.schemaLocation = options.schemaLocation ?\n    options.schemaLocation : schemaLocation;\n\n};\n\ninherits(GML2, GMLBase);\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nGML2.prototype.readFlatCoordinates_ = function(node, objectStack) {\n  const s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n  const context = /** @type {module:ol/xml~NodeStackItem} */ (objectStack[0]);\n  const containerSrs = context['srsName'];\n  let axisOrientation = 'enu';\n  if (containerSrs) {\n    const proj = getProjection(containerSrs);\n    if (proj) {\n      axisOrientation = proj.getAxisOrientation();\n    }\n  }\n  const coordsGroups = s.trim().split(/\\s+/);\n  const flatCoordinates = [];\n  for (let i = 0, ii = coordsGroups.length; i < ii; i++) {\n    const coords = coordsGroups[i].split(/,+/);\n    const x = parseFloat(coords[0]);\n    const y = parseFloat(coords[1]);\n    const z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n    if (axisOrientation.substr(0, 2) === 'en') {\n      flatCoordinates.push(x, y, z);\n    } else {\n      flatCoordinates.push(y, x, z);\n    }\n  }\n  return flatCoordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {module:ol/extent~Extent|undefined} Envelope.\n */\nGML2.prototype.readBox_ = function(node, objectStack) {\n  /** @type {Array.<number>} */\n  const flatCoordinates = pushParseAndPop([null],\n    this.BOX_PARSERS_, node, objectStack, this);\n  return createOrUpdate(flatCoordinates[1][0],\n    flatCoordinates[1][1], flatCoordinates[1][3],\n    flatCoordinates[1][4]);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.innerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nGML2.prototype.outerBoundaryIsParser_ = function(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(undefined,\n    this.RING_PARSERS, node, objectStack, this);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.GEOMETRY_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const multiSurface = context['multiSurface'];\n  const surface = context['surface'];\n  const multiCurve = context['multiCurve'];\n  let nodeName;\n  if (!Array.isArray(value)) {\n    nodeName = /** @type {module:ol/geom/Geometry} */ (value).getType();\n    if (nodeName === 'MultiPolygon' && multiSurface === true) {\n      nodeName = 'MultiSurface';\n    } else if (nodeName === 'Polygon' && surface === true) {\n      nodeName = 'Surface';\n    } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n      nodeName = 'MultiCurve';\n    }\n  } else {\n    nodeName = 'Envelope';\n  }\n  return createElementNS('http://www.opengis.net/gml',\n    nodeName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/Feature} feature Feature.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeFeatureElement = function(node, feature, objectStack) {\n  const fid = feature.getId();\n  if (fid) {\n    node.setAttribute('fid', fid);\n  }\n  const context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const featureNS = context['featureNS'];\n  const geometryName = feature.getGeometryName();\n  if (!context.serializers) {\n    context.serializers = {};\n    context.serializers[featureNS] = {};\n  }\n  const properties = feature.getProperties();\n  const keys = [];\n  const values = [];\n  for (const key in properties) {\n    const value = properties[key];\n    if (value !== null) {\n      keys.push(key);\n      values.push(value);\n      if (key == geometryName || value instanceof Geometry) {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = makeChildAppender(\n            this.writeGeometryElement, this);\n        }\n      } else {\n        if (!(key in context.serializers[featureNS])) {\n          context.serializers[featureNS][key] = makeChildAppender(writeStringTextNode);\n        }\n      }\n    }\n  }\n  const item = assign({}, context);\n  item.node = node;\n  pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n    (item), context.serializers,\n    makeSimpleNodeFactory(undefined, featureNS),\n    values,\n    objectStack, keys);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/LineString} geometry LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'LineStringSegment' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'LineString' ||\n      node.nodeName === 'LineStringSegment') {\n    const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  } else if (node.nodeName === 'Curve') {\n    const segments = createElementNS(node.namespaceURI, 'segments');\n    node.appendChild(segments);\n    this.writeCurveSegments_(segments,\n      geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLineStringOrCurveMember_ = function(node, line, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/MultiLineString} geometry MultiLineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiCurveOrLineString_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const curve = context['curve'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const lines = geometry.getLineStrings();\n  pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n    this.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/Geometry|module:ol/extent~Extent} geometry Geometry.\n * @param {Array.<*>} objectStack Node stack.\n */\nGML2.prototype.writeGeometryElement = function(node, geometry, objectStack) {\n  const context = /** @type {module:ol/format/Feature~WriteOptions} */ (objectStack[objectStack.length - 1]);\n  const item = assign({}, context);\n  item.node = node;\n  let value;\n  if (Array.isArray(geometry)) {\n    if (context.dataProjection) {\n      value = transformExtent(\n        geometry, context.featureProjection, context.dataProjection);\n    } else {\n      value = geometry;\n    }\n  } else {\n    value = transformWithOptions(/** @type {module:ol/geom/Geometry} */ (geometry), true, context);\n  }\n  pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n    (item), this.GEOMETRY_SERIALIZERS_,\n    this.GEOMETRY_NODE_FACTORY_, [value],\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {string} namespaceURI XML namespace.\n * @returns {Node} coordinates node.\n * @private\n */\nGML2.prototype.createCoordinatesNode_ = function(namespaceURI) {\n  const coordinates = createElementNS(namespaceURI, 'coordinates');\n  coordinates.setAttribute('decimal', '.');\n  coordinates.setAttribute('cs', ',');\n  coordinates.setAttribute('ts', ' ');\n\n  return coordinates;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/LineString|module:ol/geom/LinearRing} value Geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCoordinates_ = function(node, value, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  // only 2d for simple features profile\n  const points = value.getCoordinates();\n  const len = points.length;\n  const parts = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    const point = points[i];\n    parts[i] = this.getCoords_(point, srsName, hasZ);\n  }\n  writeStringTextNode(node, parts.join(' '));\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/LineString} line LineString geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeCurveSegments_ = function(node, line, objectStack) {\n  const child = createElementNS(node.namespaceURI, 'LineStringSegment');\n  node.appendChild(child);\n  this.writeCurveOrLineString_(child, line, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/Polygon} geometry Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (node.nodeName !== 'PolygonPatch' && srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n    const rings = geometry.getLinearRings();\n    pushSerializeAndPop(\n      {node: node, hasZ: hasZ, srsName: srsName},\n      this.RING_SERIALIZERS_,\n      this.RING_NODE_FACTORY_,\n      rings, objectStack, undefined, this);\n  } else if (node.nodeName === 'Surface') {\n    const patches = createElementNS(node.namespaceURI, 'patches');\n    node.appendChild(patches);\n    this.writeSurfacePatches_(\n      patches, geometry, objectStack);\n  }\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node} Node.\n * @private\n */\nGML2.prototype.RING_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const exteriorWritten = context['exteriorWritten'];\n  if (exteriorWritten === undefined) {\n    context['exteriorWritten'] = true;\n  }\n  return createElementNS(parentNode.namespaceURI,\n    exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfacePatches_ = function(node, polygon, objectStack) {\n  const child = createElementNS(node.namespaceURI, 'PolygonPatch');\n  node.appendChild(child);\n  this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/LinearRing} ring LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeRing_ = function(node, ring, objectStack) {\n  const linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n  node.appendChild(linearRing);\n  this.writeLinearRing_(linearRing, ring, objectStack);\n};\n\n\n/**\n * @param {Array.<number>} point Point geometry.\n * @param {string=} opt_srsName Optional srsName\n * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n * @return {string} The coords string.\n * @private\n */\nGML2.prototype.getCoords_ = function(point, opt_srsName, opt_hasZ) {\n  let axisOrientation = 'enu';\n  if (opt_srsName) {\n    axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n  }\n  let coords = ((axisOrientation.substr(0, 2) === 'en') ?\n    point[0] + ',' + point[1] :\n    point[1] + ',' + point[0]);\n  if (opt_hasZ) {\n    // For newly created points, Z can be undefined.\n    const z = point[2] || 0;\n    coords += ',' + z;\n  }\n\n  return coords;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/Point} geometry Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  const point = geometry.getCoordinates();\n  const coord = this.getCoords_(point, srsName, hasZ);\n  writeStringTextNode(coordinates, coord);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/MultiPoint} geometry MultiPoint geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiPoint_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const points = geometry.getPoints();\n  pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n    this.POINTMEMBER_SERIALIZERS_,\n    makeSimpleNodeFactory('pointMember'), points,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/Point} point Point geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writePointMember_ = function(node, point, objectStack) {\n  const child = createElementNS(node.namespaceURI, 'Point');\n  node.appendChild(child);\n  this.writePoint_(child, point, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/LinearRing} geometry LinearRing geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeLinearRing_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const coordinates = this.createCoordinatesNode_(node.namespaceURI);\n  node.appendChild(coordinates);\n  this.writeCoordinates_(coordinates, geometry, objectStack);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/MultiPolygon} geometry MultiPolygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeMultiSurfaceOrPolygon_ = function(node, geometry, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const hasZ = context['hasZ'];\n  const srsName = context['srsName'];\n  const surface = context['surface'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const polygons = geometry.getPolygons();\n  pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n    this.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n    this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n    objectStack, undefined, this);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/Polygon} polygon Polygon geometry.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeSurfaceOrPolygonMember_ = function(node, polygon, objectStack) {\n  const child = this.GEOMETRY_NODE_FACTORY_(\n    polygon, objectStack);\n  if (child) {\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {Array.<*>} objectStack Node stack.\n * @private\n */\nGML2.prototype.writeEnvelope = function(node, extent, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const srsName = context['srsName'];\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  const keys = ['lowerCorner', 'upperCorner'];\n  const values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n  pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n    ({node: node}), this.ENVELOPE_SERIALIZERS_,\n    OBJECT_PROPERTY_NODE_FACTORY,\n    values,\n    objectStack, keys, this);\n};\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nconst MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n * @private\n */\nGML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return createElementNS('http://www.opengis.net/gml',\n    MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]);\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeArrayPusher(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Box': makeReplacer(GML2.prototype.readBox_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML2.prototype.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiCurve': makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'Point': makeChildAppender(GML2.prototype.writePoint_),\n    'MultiPoint': makeChildAppender(\n      GML2.prototype.writeMultiPoint_),\n    'LineString': makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiLineString': makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': makeChildAppender(\n      GML2.prototype.writeLinearRing_),\n    'Polygon': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': makeChildAppender(\n      GML2.prototype.writeEnvelope)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML2.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_),\n    'curveMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML2.prototype.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': makeChildAppender(GML2.prototype.writeRing_),\n    'innerBoundaryIs': makeChildAppender(GML2.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML2.prototype.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(\n      GML2.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML2.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML2.prototype.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode)\n  }\n};\n\nexport default GML2;\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n * @constructor\n */\nconst IconImageCache = function() {\n\n  /**\n   * @type {!Object.<string, module:ol/style/IconImage>}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.cacheSize_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxCacheSize_ = 32;\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/color~Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\n\n/**\n * FIXME empty description for jsdoc\n */\nIconImageCache.prototype.clear = function() {\n  this.cache_ = {};\n  this.cacheSize_ = 0;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nIconImageCache.prototype.expire = function() {\n  if (this.cacheSize_ > this.maxCacheSize_) {\n    let i = 0;\n    for (const key in this.cache_) {\n      const iconImage = this.cache_[key];\n      if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n        delete this.cache_[key];\n        --this.cacheSize_;\n      }\n    }\n  }\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/color~Color} color Color.\n * @return {module:ol/style/IconImage} Icon image.\n */\nIconImageCache.prototype.get = function(src, crossOrigin, color) {\n  const key = getKey(src, crossOrigin, color);\n  return key in this.cache_ ? this.cache_[key] : null;\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/color~Color} color Color.\n * @param {module:ol/style/IconImage} iconImage Icon image.\n */\nIconImageCache.prototype.set = function(src, crossOrigin, color, iconImage) {\n  const key = getKey(src, crossOrigin, color);\n  this.cache_[key] = iconImage;\n  ++this.cacheSize_;\n};\n\n\n/**\n * Set the cache size of the icon cache. Default is `32`. Change this value when\n * your map uses more than 32 different icon images and you are not caching icon\n * styles on the application level.\n * @param {number} maxCacheSize Cache max size.\n * @api\n */\nIconImageCache.prototype.setSize = function(maxCacheSize) {\n  this.maxCacheSize_ = maxCacheSize;\n  this.expire();\n};\nexport default IconImageCache;\n\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/renderer/canvas/Map\n */\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\nimport {inherits} from '../../index.js';\nimport {includes, stableSort} from '../../array.js';\nimport {CLASS_UNSELECTABLE} from '../../css.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {visibleAtResolution} from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport MapRenderer, {sortByZIndex} from '../Map.js';\nimport SourceState from '../../source/State.js';\n\n\n/**\n * @type {Array.<module:ol/renderer/Layer>}\n */\nexport const layerRendererConstructors = [];\n\n\n/**\n * @constructor\n * @extends {module:ol/renderer/Map}\n * @param {module:ol/PluggableMap} map Map.\n * @api\n */\nconst CanvasMapRenderer = function(map) {\n  MapRenderer.call(this, map);\n\n  const container = map.getViewport();\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context_ = createCanvasContext2D();\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = this.context_.canvas;\n\n  this.canvas_.style.width = '100%';\n  this.canvas_.style.height = '100%';\n  this.canvas_.style.display = 'block';\n  this.canvas_.className = CLASS_UNSELECTABLE;\n  container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderedVisible_ = true;\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.transform_ = createTransform();\n\n};\n\ninherits(CanvasMapRenderer, MapRenderer);\n\n\n/**\n * @param {module:ol/render/EventType} type Event type.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @private\n */\nCanvasMapRenderer.prototype.dispatchComposeEvent_ = function(type, frameState) {\n  const map = this.getMap();\n  const context = this.context_;\n  if (map.hasListener(type)) {\n    const extent = frameState.extent;\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const rotation = viewState.rotation;\n\n    const transform = this.getTransform(frameState);\n\n    const vectorContext = new CanvasImmediateRenderer(context, pixelRatio,\n      extent, transform, rotation);\n    const composeEvent = new RenderEvent(type, vectorContext,\n      frameState, context, null);\n    map.dispatchEvent(composeEvent);\n  }\n};\n\n\n/**\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @protected\n * @return {!module:ol/transform~Transform} Transform.\n */\nCanvasMapRenderer.prototype.getTransform = function(frameState) {\n  const viewState = frameState.viewState;\n  const dx1 = this.canvas_.width / 2;\n  const dy1 = this.canvas_.height / 2;\n  const sx = frameState.pixelRatio / viewState.resolution;\n  const sy = -sx;\n  const angle = -viewState.rotation;\n  const dx2 = -viewState.center[0];\n  const dy2 = -viewState.center[1];\n  return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasMapRenderer.prototype.renderFrame = function(frameState) {\n\n  if (!frameState) {\n    if (this.renderedVisible_) {\n      this.canvas_.style.display = 'none';\n      this.renderedVisible_ = false;\n    }\n    return;\n  }\n\n  const context = this.context_;\n  const pixelRatio = frameState.pixelRatio;\n  const width = Math.round(frameState.size[0] * pixelRatio);\n  const height = Math.round(frameState.size[1] * pixelRatio);\n  if (this.canvas_.width != width || this.canvas_.height != height) {\n    this.canvas_.width = width;\n    this.canvas_.height = height;\n  } else {\n    context.clearRect(0, 0, width, height);\n  }\n\n  const rotation = frameState.viewState.rotation;\n\n  this.calculateMatrices2D(frameState);\n\n  this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, frameState);\n\n  const layerStatesArray = frameState.layerStatesArray;\n  stableSort(layerStatesArray, sortByZIndex);\n\n  if (rotation) {\n    context.save();\n    rotateAtOffset(context, rotation, width / 2, height / 2);\n  }\n\n  const viewResolution = frameState.viewState.resolution;\n  let i, ii, layer, layerRenderer, layerState;\n  for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n    layerState = layerStatesArray[i];\n    layer = layerState.layer;\n    layerRenderer = /** @type {module:ol/renderer/canvas/Layer} */ (this.getLayerRenderer(layer));\n    if (!visibleAtResolution(layerState, viewResolution) ||\n        layerState.sourceState != SourceState.READY) {\n      continue;\n    }\n    if (layerRenderer.prepareFrame(frameState, layerState)) {\n      layerRenderer.composeFrame(frameState, layerState, context);\n    }\n  }\n\n  if (rotation) {\n    context.restore();\n  }\n\n  this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, frameState);\n\n  if (!this.renderedVisible_) {\n    this.canvas_.style.display = '';\n    this.renderedVisible_ = true;\n  }\n\n  this.scheduleRemoveUnusedLayerRenderers(frameState);\n  this.scheduleExpireIconCache(frameState);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasMapRenderer.prototype.forEachLayerAtPixel = function(pixel, frameState, callback, thisArg,\n  layerFilter, thisArg2) {\n  let result;\n  const viewState = frameState.viewState;\n  const viewResolution = viewState.resolution;\n\n  const layerStates = frameState.layerStatesArray;\n  const numLayers = layerStates.length;\n\n  const coordinate = applyTransform(\n    frameState.pixelToCoordinateTransform, pixel.slice());\n\n  let i;\n  for (i = numLayers - 1; i >= 0; --i) {\n    const layerState = layerStates[i];\n    const layer = layerState.layer;\n    if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n      const layerRenderer = /** @type {module:ol/renderer/canvas/Layer} */ (this.getLayerRenderer(layer));\n      result = layerRenderer.forEachLayerAtCoordinate(\n        coordinate, frameState, callback, thisArg);\n      if (result) {\n        return result;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasMapRenderer.prototype.registerLayerRenderers = function(constructors) {\n  MapRenderer.prototype.registerLayerRenderers.call(this, constructors);\n  for (let i = 0, ii = constructors.length; i < ii; ++i) {\n    const ctor = constructors[i];\n    if (!includes(layerRendererConstructors, ctor)) {\n      layerRendererConstructors.push(ctor);\n    }\n  }\n};\n\nexport default CanvasMapRenderer;\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport {inherits} from '../../index.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {equals} from '../../array.js';\nimport {getHeight, getIntersection, getWidth, isEmpty} from '../../extent.js';\nimport VectorRenderType from '../../layer/VectorRenderType.js';\nimport {assign} from '../../obj.js';\nimport {layerRendererConstructors} from './Map.js';\nimport IntermediateCanvasRenderer from '../canvas/IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @constructor\n * @extends {module:ol/renderer/canvas/IntermediateCanvas}\n * @param {module:ol/layer/Image|module:ol/layer/Vector} imageLayer Image or vector layer.\n * @api\n */\nconst CanvasImageLayerRenderer = function(imageLayer) {\n\n  IntermediateCanvasRenderer.call(this, imageLayer);\n\n  /**\n   * @private\n   * @type {?module:ol/ImageBase}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.imageTransform_ = createTransform();\n\n  /**\n   * @type {!Array.<string>}\n   */\n  this.skippedFeatures_ = [];\n\n  /**\n   * @private\n   * @type {module:ol/renderer/canvas/VectorLayer}\n   */\n  this.vectorRenderer_ = null;\n\n  if (imageLayer.getType() === LayerType.VECTOR) {\n    for (let i = 0, ii = layerRendererConstructors.length; i < ii; ++i) {\n      const ctor = layerRendererConstructors[i];\n      if (ctor !== CanvasImageLayerRenderer && ctor['handles'](imageLayer)) {\n        this.vectorRenderer_ = new ctor(imageLayer);\n        break;\n      }\n    }\n  }\n\n};\n\ninherits(CanvasImageLayerRenderer, IntermediateCanvasRenderer);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasImageLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.IMAGE ||\n    layer.getType() === LayerType.VECTOR &&\n    /** @type {module:ol/layer/Vector} */ (layer).getRenderMode() === VectorRenderType.IMAGE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/ImageLayer} The layer renderer.\n */\nCanvasImageLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasImageLayerRenderer(/** @type {module:ol/layer/Image} */ (layer));\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageLayerRenderer.prototype.disposeInternal = function() {\n  if (this.vectorRenderer_) {\n    this.vectorRenderer_.dispose();\n  }\n  IntermediateCanvasRenderer.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageLayerRenderer.prototype.getImage = function() {\n  return !this.image_ ? null : this.image_.getImage();\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageLayerRenderer.prototype.getImageTransform = function() {\n  return this.imageTransform_;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageLayerRenderer.prototype.prepareFrame = function(frameState, layerState) {\n\n  const pixelRatio = frameState.pixelRatio;\n  const size = frameState.size;\n  const viewState = frameState.viewState;\n  const viewCenter = viewState.center;\n  const viewResolution = viewState.resolution;\n\n  let image;\n  const imageLayer = /** @type {module:ol/layer/Image} */ (this.getLayer());\n  const imageSource = imageLayer.getSource();\n\n  const hints = frameState.viewHints;\n\n  const vectorRenderer = this.vectorRenderer_;\n  let renderedExtent = frameState.extent;\n  if (!vectorRenderer && layerState.extent !== undefined) {\n    renderedExtent = getIntersection(renderedExtent, layerState.extent);\n  }\n\n  if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)) {\n    let projection = viewState.projection;\n    if (!ENABLE_RASTER_REPROJECTION) {\n      const sourceProjection = imageSource.getProjection();\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n    }\n    let skippedFeatures = this.skippedFeatures_;\n    if (vectorRenderer) {\n      const context = vectorRenderer.context;\n      const imageFrameState = /** @type {module:ol/PluggableMap~FrameState} */ (assign({}, frameState, {\n        size: [\n          getWidth(renderedExtent) / viewResolution,\n          getHeight(renderedExtent) / viewResolution\n        ],\n        viewState: /** @type {module:ol/View~State} */ (assign({}, frameState.viewState, {\n          rotation: 0\n        }))\n      }));\n      const newSkippedFeatures = Object.keys(imageFrameState.skippedFeatureUids).sort();\n      image = new ImageCanvas(renderedExtent, viewResolution, pixelRatio, context.canvas, function(callback) {\n        if (vectorRenderer.prepareFrame(imageFrameState, layerState) &&\n            (vectorRenderer.replayGroupChanged ||\n            !equals(skippedFeatures, newSkippedFeatures))) {\n          context.canvas.width = imageFrameState.size[0] * pixelRatio;\n          context.canvas.height = imageFrameState.size[1] * pixelRatio;\n          vectorRenderer.compose(context, imageFrameState, layerState);\n          skippedFeatures = newSkippedFeatures;\n          callback();\n        }\n      });\n    } else {\n      image = imageSource.getImage(\n        renderedExtent, viewResolution, pixelRatio, projection);\n    }\n    if (image && this.loadImage(image)) {\n      this.image_ = image;\n      this.skippedFeatures_ = skippedFeatures;\n    }\n  }\n\n  if (this.image_) {\n    image = this.image_;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const imagePixelRatio = image.getPixelRatio();\n    const scale = pixelRatio * imageResolution /\n        (viewResolution * imagePixelRatio);\n    const transform = composeTransform(this.imageTransform_,\n      pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n      scale, scale,\n      0,\n      imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution,\n      imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n    composeTransform(this.coordinateToCanvasPixelTransform,\n      pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n      pixelRatio / viewResolution, -pixelRatio / viewResolution,\n      0,\n      -viewCenter[0], -viewCenter[1]);\n\n    this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n  }\n\n  return !!this.image_;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  if (this.vectorRenderer_) {\n    return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg);\n  } else {\n    return IntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate.call(this, coordinate, frameState, hitTolerance, callback, thisArg);\n  }\n};\n\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport {inherits} from './index.js';\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n *\n * @constructor\n * @extends {module:ol/MapEvent}\n * @param {string} type Event type.\n * @param {module:ol/PluggableMap} map Map.\n * @param {Event} browserEvent Browser event.\n * @param {boolean=} opt_dragging Is the map currently being dragged?\n * @param {?module:ol/PluggableMap~FrameState=} opt_frameState Frame state.\n */\nconst MapBrowserEvent = function(type, map, browserEvent, opt_dragging, opt_frameState) {\n\n  MapEvent.call(this, type, map, opt_frameState);\n\n  /**\n   * The original browser event.\n   * @const\n   * @type {Event}\n   * @api\n   */\n  this.originalEvent = browserEvent;\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original browser event.\n   * @type {module:ol~Pixel}\n   * @api\n   */\n  this.pixel = map.getEventPixel(browserEvent);\n\n  /**\n   * The coordinate in view projection corresponding to the original browser event.\n   * @type {module:ol/coordinate~Coordinate}\n   * @api\n   */\n  this.coordinate = map.getCoordinateFromPixel(this.pixel);\n\n  /**\n   * Indicates if the map is currently being dragged. Only set for\n   * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n   *\n   * @type {boolean}\n   * @api\n   */\n  this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n\n};\n\ninherits(MapBrowserEvent, MapEvent);\n\n\n/**\n * Prevents the default browser action.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault\n * @override\n * @api\n */\nMapBrowserEvent.prototype.preventDefault = function() {\n  MapEvent.prototype.preventDefault.call(this);\n  this.originalEvent.preventDefault();\n};\n\n\n/**\n * Prevents further propagation of the current event.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation\n * @override\n * @api\n */\nMapBrowserEvent.prototype.stopPropagation = function() {\n  MapEvent.prototype.stopPropagation.call(this);\n  this.originalEvent.stopPropagation();\n};\nexport default MapBrowserEvent;\n","/**\n * @module ol/geom/flat/flip\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array.<number>=} opt_dest Destination.\n * @param {number=} opt_destOffset Destination offset.\n * @return {Array.<number>} Flat coordinates.\n */\nexport function flipXY(flatCoordinates, offset, end, stride, opt_dest, opt_destOffset) {\n  let dest, destOffset;\n  if (opt_dest !== undefined) {\n    dest = opt_dest;\n    destOffset = opt_destOffset !== undefined ? opt_destOffset : 0;\n  } else {\n    dest = [];\n    destOffset = 0;\n  }\n  let j = offset;\n  while (j < end) {\n    const x = flatCoordinates[j++];\n    dest[destOffset++] = flatCoordinates[j++];\n    dest[destOffset++] = x;\n    for (let k = 2; k < stride; ++k) {\n      dest[destOffset++] = flatCoordinates[j++];\n    }\n  }\n  dest.length = destOffset;\n  return dest;\n}\n","/**\n * @module ol/format/Polyline\n */\nimport {inherits} from '../index.js';\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport TextFeature from '../format/TextFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\nimport {flipXY} from '../geom/flat/flip.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [factor=1e5] The factor by which the coordinates values will be scaled.\n * @property {module:ol/geom/GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the format reader.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the Encoded\n * Polyline Algorithm Format.\n *\n * @constructor\n * @extends {module:ol/format/TextFeature}\n * @param {module:ol/format/Polyline~Options=} opt_options Optional configuration object.\n * @api\n */\nconst Polyline = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  TextFeature.call(this);\n\n  /**\n   * @inheritDoc\n   */\n  this.dataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.factor_ = options.factor ? options.factor : 1e5;\n\n  /**\n   * @private\n   * @type {module:ol/geom/GeometryLayout}\n   */\n  this.geometryLayout_ = options.geometryLayout ?\n    options.geometryLayout : GeometryLayout.XY;\n};\n\ninherits(Polyline, TextFeature);\n\n\n/**\n * Encode a list of n-dimensional points and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array.<number>} numbers A list of n-dimensional points.\n * @param {number} stride The number of dimension of the points in the list.\n * @param {number=} opt_factor The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeDeltas(numbers, stride, opt_factor) {\n  const factor = opt_factor ? opt_factor : 1e5;\n  let d;\n\n  const lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  for (let i = 0, ii = numbers.length; i < ii;) {\n    for (d = 0; d < stride; ++d, ++i) {\n      const num = numbers[i];\n      const delta = num - lastNumbers[d];\n      lastNumbers[d] = num;\n\n      numbers[i] = delta;\n    }\n  }\n\n  return encodeFloats(numbers, factor);\n}\n\n\n/**\n * Decode a list of n-dimensional points from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} stride The number of dimension of the points in the\n *     encoded string.\n * @param {number=} opt_factor The factor by which the resulting numbers will\n *     be divided. Default is `1e5`.\n * @return {Array.<number>} A list of n-dimensional points.\n * @api\n */\nexport function decodeDeltas(encoded, stride, opt_factor) {\n  const factor = opt_factor ? opt_factor : 1e5;\n  let d;\n\n  /** @type {Array.<number>} */\n  const lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  const numbers = decodeFloats(encoded, factor);\n\n  for (let i = 0, ii = numbers.length; i < ii;) {\n    for (d = 0; d < stride; ++d, ++i) {\n      lastNumbers[d] += numbers[i];\n\n      numbers[i] = lastNumbers[d];\n    }\n  }\n\n  return numbers;\n}\n\n\n/**\n * Encode a list of floating point numbers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array.<number>} numbers A list of floating point numbers.\n * @param {number=} opt_factor The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeFloats(numbers, opt_factor) {\n  const factor = opt_factor ? opt_factor : 1e5;\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] = Math.round(numbers[i] * factor);\n  }\n\n  return encodeSignedIntegers(numbers);\n}\n\n\n/**\n * Decode a list of floating point numbers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number=} opt_factor The factor by which the result will be divided.\n *     Default is `1e5`.\n * @return {Array.<number>} A list of floating point numbers.\n * @api\n */\nexport function decodeFloats(encoded, opt_factor) {\n  const factor = opt_factor ? opt_factor : 1e5;\n  const numbers = decodeSignedIntegers(encoded);\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] /= factor;\n  }\n  return numbers;\n}\n\n\n/**\n * Encode a list of signed integers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array.<number>} numbers A list of signed integers.\n * @return {string} The encoded string.\n */\nexport function encodeSignedIntegers(numbers) {\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    const num = numbers[i];\n    numbers[i] = (num < 0) ? ~(num << 1) : (num << 1);\n  }\n  return encodeUnsignedIntegers(numbers);\n}\n\n\n/**\n * Decode a list of signed integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array.<number>} A list of signed integers.\n */\nexport function decodeSignedIntegers(encoded) {\n  const numbers = decodeUnsignedIntegers(encoded);\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    const num = numbers[i];\n    numbers[i] = (num & 1) ? ~(num >> 1) : (num >> 1);\n  }\n  return numbers;\n}\n\n\n/**\n * Encode a list of unsigned integers and return an encoded string\n *\n * @param {Array.<number>} numbers A list of unsigned integers.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedIntegers(numbers) {\n  let encoded = '';\n  for (let i = 0, ii = numbers.length; i < ii; ++i) {\n    encoded += encodeUnsignedInteger(numbers[i]);\n  }\n  return encoded;\n}\n\n\n/**\n * Decode a list of unsigned integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array.<number>} A list of unsigned integers.\n */\nexport function decodeUnsignedIntegers(encoded) {\n  const numbers = [];\n  let current = 0;\n  let shift = 0;\n  for (let i = 0, ii = encoded.length; i < ii; ++i) {\n    const b = encoded.charCodeAt(i) - 63;\n    current |= (b & 0x1f) << shift;\n    if (b < 0x20) {\n      numbers.push(current);\n      current = 0;\n      shift = 0;\n    } else {\n      shift += 5;\n    }\n  }\n  return numbers;\n}\n\n\n/**\n * Encode one single unsigned integer and return an encoded string\n *\n * @param {number} num Unsigned integer that should be encoded.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedInteger(num) {\n  let value, encoded = '';\n  while (num >= 0x20) {\n    value = (0x20 | (num & 0x1f)) + 63;\n    encoded += String.fromCharCode(value);\n    num >>= 5;\n  }\n  value = num + 63;\n  encoded += String.fromCharCode(value);\n  return encoded;\n}\n\n\n/**\n * Read the feature from the Polyline source. The coordinates are assumed to be\n * in two dimensions and in latitude, longitude order.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/Feature} Feature.\n * @api\n */\nPolyline.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nPolyline.prototype.readFeatureFromText = function(text, opt_options) {\n  const geometry = this.readGeometryFromText(text, opt_options);\n  return new Feature(geometry);\n};\n\n\n/**\n * Read the feature from the source. As Polyline sources contain a single\n * feature, this will return the feature in an array.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nPolyline.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nPolyline.prototype.readFeaturesFromText = function(text, opt_options) {\n  const feature = this.readFeatureFromText(text, opt_options);\n  return [feature];\n};\n\n\n/**\n * Read the geometry from the source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/geom/Geometry} Geometry.\n * @api\n */\nPolyline.prototype.readGeometry;\n\n\n/**\n * @inheritDoc\n */\nPolyline.prototype.readGeometryFromText = function(text, opt_options) {\n  const stride = getStrideForLayout(this.geometryLayout_);\n  const flatCoordinates = decodeDeltas(text, stride, this.factor_);\n  flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n  const coordinates = inflateCoordinates(flatCoordinates, 0, flatCoordinates.length, stride);\n\n  return (\n    /** @type {module:ol/geom/Geometry} */ (transformWithOptions(\n      new LineString(coordinates, this.geometryLayout_),\n      false,\n      this.adaptOptions(opt_options)\n    ))\n  );\n};\n\n\n/**\n * Read the projection from a Polyline source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {module:ol/proj/Projection} Projection.\n * @api\n */\nPolyline.prototype.readProjection;\n\n\n/**\n * @inheritDoc\n */\nPolyline.prototype.writeFeatureText = function(feature, opt_options) {\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    return this.writeGeometryText(geometry, opt_options);\n  } else {\n    assert(false, 40); // Expected `feature` to have a geometry\n    return '';\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nPolyline.prototype.writeFeaturesText = function(features, opt_options) {\n  return this.writeFeatureText(features[0], opt_options);\n};\n\n\n/**\n * Write a single geometry in Polyline format.\n *\n * @function\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {string} Geometry.\n * @api\n */\nPolyline.prototype.writeGeometry;\n\n\n/**\n * @inheritDoc\n */\nPolyline.prototype.writeGeometryText = function(geometry, opt_options) {\n  geometry = /** @type {module:ol/geom/LineString} */\n    (transformWithOptions(geometry, true, this.adaptOptions(opt_options)));\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n  return encodeDeltas(flatCoordinates, stride, this.factor_);\n};\nexport default Polyline;\n","/**\n * @module ol/format/WMSCapabilities\n */\nimport {inherits} from '../index.js';\nimport {readHref} from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport {readDecimalString, readString, readNonNegativeInteger, readDecimal, readBooleanString, readNonNegativeIntegerString} from '../format/xsd.js';\nimport {makeArrayPusher, makeObjectPropertyPusher, makeObjectPropertySetter,\n  makeStructureNS, pushParseAndPop} from '../xml.js';\n\n\n/**\n * @classdesc\n * Format for reading WMS capabilities data\n *\n * @constructor\n * @extends {module:ol/format/XML}\n * @api\n */\nconst WMSCapabilities = function() {\n\n  XML.call(this);\n\n  /**\n   * @type {string|undefined}\n   */\n  this.version = undefined;\n};\n\ninherits(WMSCapabilities, XML);\n\n\n/**\n * @const\n * @type {Array.<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.opengis.net/wms'\n];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Service': makeObjectPropertySetter(readService),\n    'Capability': makeObjectPropertySetter(readCapability)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst CAPABILITY_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Request': makeObjectPropertySetter(readRequest),\n    'Exception': makeObjectPropertySetter(readException),\n    'Layer': makeObjectPropertySetter(readCapabilityLayer)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst SERVICE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Name': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'KeywordList': makeObjectPropertySetter(readKeywordList),\n    'OnlineResource': makeObjectPropertySetter(readHref),\n    'ContactInformation': makeObjectPropertySetter(readContactInformation),\n    'Fees': makeObjectPropertySetter(readString),\n    'AccessConstraints': makeObjectPropertySetter(readString),\n    'LayerLimit': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxHeight': makeObjectPropertySetter(readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst CONTACT_INFORMATION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ContactPersonPrimary': makeObjectPropertySetter(readContactPersonPrimary),\n    'ContactPosition': makeObjectPropertySetter(readString),\n    'ContactAddress': makeObjectPropertySetter(readContactAddress),\n    'ContactVoiceTelephone': makeObjectPropertySetter(readString),\n    'ContactFacsimileTelephone': makeObjectPropertySetter(readString),\n    'ContactElectronicMailAddress': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst CONTACT_PERSON_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ContactPerson': makeObjectPropertySetter(readString),\n    'ContactOrganization': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst CONTACT_ADDRESS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'AddressType': makeObjectPropertySetter(readString),\n    'Address': makeObjectPropertySetter(readString),\n    'City': makeObjectPropertySetter(readString),\n    'StateOrProvince': makeObjectPropertySetter(readString),\n    'PostCode': makeObjectPropertySetter(readString),\n    'Country': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst EXCEPTION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Format': makeArrayPusher(readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst LAYER_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Name': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'KeywordList': makeObjectPropertySetter(readKeywordList),\n    'CRS': makeObjectPropertyPusher(readString),\n    'EX_GeographicBoundingBox': makeObjectPropertySetter(readEXGeographicBoundingBox),\n    'BoundingBox': makeObjectPropertyPusher(readBoundingBox),\n    'Dimension': makeObjectPropertyPusher(readDimension),\n    'Attribution': makeObjectPropertySetter(readAttribution),\n    'AuthorityURL': makeObjectPropertyPusher(readAuthorityURL),\n    'Identifier': makeObjectPropertyPusher(readString),\n    'MetadataURL': makeObjectPropertyPusher(readMetadataURL),\n    'DataURL': makeObjectPropertyPusher(readFormatOnlineresource),\n    'FeatureListURL': makeObjectPropertyPusher(readFormatOnlineresource),\n    'Style': makeObjectPropertyPusher(readStyle),\n    'MinScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'MaxScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'Layer': makeObjectPropertyPusher(readLayer)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst ATTRIBUTION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'OnlineResource': makeObjectPropertySetter(readHref),\n    'LogoURL': makeObjectPropertySetter(readSizedFormatOnlineresource)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS =\n    makeStructureNS(NAMESPACE_URIS, {\n      'westBoundLongitude': makeObjectPropertySetter(readDecimal),\n      'eastBoundLongitude': makeObjectPropertySetter(readDecimal),\n      'southBoundLatitude': makeObjectPropertySetter(readDecimal),\n      'northBoundLatitude': makeObjectPropertySetter(readDecimal)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst REQUEST_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'GetCapabilities': makeObjectPropertySetter(readOperationType),\n    'GetMap': makeObjectPropertySetter(readOperationType),\n    'GetFeatureInfo': makeObjectPropertySetter(readOperationType)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst OPERATIONTYPE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Format': makeObjectPropertyPusher(readString),\n    'DCPType': makeObjectPropertyPusher(readDCPType)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst DCPTYPE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'HTTP': makeObjectPropertySetter(readHTTP)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst HTTP_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Get': makeObjectPropertySetter(readFormatOnlineresource),\n    'Post': makeObjectPropertySetter(readFormatOnlineresource)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Name': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'LegendURL': makeObjectPropertyPusher(readSizedFormatOnlineresource),\n    'StyleSheetURL': makeObjectPropertySetter(readFormatOnlineresource),\n    'StyleURL': makeObjectPropertySetter(readFormatOnlineresource)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst FORMAT_ONLINERESOURCE_PARSERS =\n    makeStructureNS(NAMESPACE_URIS, {\n      'Format': makeObjectPropertySetter(readString),\n      'OnlineResource': makeObjectPropertySetter(readHref)\n    });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst KEYWORDLIST_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Keyword': makeArrayPusher(readString)\n  });\n\n\n/**\n * Read a WMS capabilities document.\n *\n * @function\n * @param {Document|Node|string} source The XML source.\n * @return {Object} An object representing the WMS capabilities.\n * @api\n */\nWMSCapabilities.prototype.read;\n\n\n/**\n * @inheritDoc\n */\nWMSCapabilities.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nWMSCapabilities.prototype.readFromNode = function(node) {\n  this.version = node.getAttribute('version').trim();\n  const wmsCapabilityObject = pushParseAndPop({\n    'version': this.version\n  }, PARSERS, node, []);\n  return wmsCapabilityObject ? wmsCapabilityObject : null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readAttribution(node, objectStack) {\n  return pushParseAndPop({}, ATTRIBUTION_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object} Bounding box object.\n */\nfunction readBoundingBox(node, objectStack) {\n  const extent = [\n    readDecimalString(node.getAttribute('minx')),\n    readDecimalString(node.getAttribute('miny')),\n    readDecimalString(node.getAttribute('maxx')),\n    readDecimalString(node.getAttribute('maxy'))\n  ];\n\n  const resolutions = [\n    readDecimalString(node.getAttribute('resx')),\n    readDecimalString(node.getAttribute('resy'))\n  ];\n\n  return {\n    'crs': node.getAttribute('CRS'),\n    'extent': extent,\n    'res': resolutions\n  };\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/extent~Extent|undefined} Bounding box object.\n */\nfunction readEXGeographicBoundingBox(node, objectStack) {\n  const geographicBoundingBox = pushParseAndPop(\n    {},\n    EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS,\n    node, objectStack);\n  if (!geographicBoundingBox) {\n    return undefined;\n  }\n  const westBoundLongitude = /** @type {number|undefined} */\n        (geographicBoundingBox['westBoundLongitude']);\n  const southBoundLatitude = /** @type {number|undefined} */\n        (geographicBoundingBox['southBoundLatitude']);\n  const eastBoundLongitude = /** @type {number|undefined} */\n        (geographicBoundingBox['eastBoundLongitude']);\n  const northBoundLatitude = /** @type {number|undefined} */\n        (geographicBoundingBox['northBoundLatitude']);\n  if (westBoundLongitude === undefined || southBoundLatitude === undefined ||\n        eastBoundLongitude === undefined || northBoundLatitude === undefined) {\n    return undefined;\n  }\n  return [\n    westBoundLongitude, southBoundLatitude,\n    eastBoundLongitude, northBoundLatitude\n  ];\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Capability object.\n */\nfunction readCapability(node, objectStack) {\n  return pushParseAndPop({}, CAPABILITY_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Service object.\n */\nfunction readService(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Contact information object.\n */\nfunction readContactInformation(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_INFORMATION_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Contact person object.\n */\nfunction readContactPersonPrimary(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_PERSON_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Contact address object.\n */\nfunction readContactAddress(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_ADDRESS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<string>|undefined} Format array.\n */\nfunction readException(node, objectStack) {\n  return pushParseAndPop([], EXCEPTION_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nfunction readCapabilityLayer(node, objectStack) {\n  return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nfunction readLayer(node, objectStack) {\n  const parentLayerObject = /**  @type {!Object.<string,*>} */ (objectStack[objectStack.length - 1]);\n\n  const layerObject = pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n\n  if (!layerObject) {\n    return undefined;\n  }\n  let queryable = readBooleanString(node.getAttribute('queryable'));\n  if (queryable === undefined) {\n    queryable = parentLayerObject['queryable'];\n  }\n  layerObject['queryable'] = queryable !== undefined ? queryable : false;\n\n  let cascaded = readNonNegativeIntegerString(\n    node.getAttribute('cascaded'));\n  if (cascaded === undefined) {\n    cascaded = parentLayerObject['cascaded'];\n  }\n  layerObject['cascaded'] = cascaded;\n\n  let opaque = readBooleanString(node.getAttribute('opaque'));\n  if (opaque === undefined) {\n    opaque = parentLayerObject['opaque'];\n  }\n  layerObject['opaque'] = opaque !== undefined ? opaque : false;\n\n  let noSubsets = readBooleanString(node.getAttribute('noSubsets'));\n  if (noSubsets === undefined) {\n    noSubsets = parentLayerObject['noSubsets'];\n  }\n  layerObject['noSubsets'] = noSubsets !== undefined ? noSubsets : false;\n\n  let fixedWidth = readDecimalString(node.getAttribute('fixedWidth'));\n  if (!fixedWidth) {\n    fixedWidth = parentLayerObject['fixedWidth'];\n  }\n  layerObject['fixedWidth'] = fixedWidth;\n\n  let fixedHeight = readDecimalString(node.getAttribute('fixedHeight'));\n  if (!fixedHeight) {\n    fixedHeight = parentLayerObject['fixedHeight'];\n  }\n  layerObject['fixedHeight'] = fixedHeight;\n\n  // See 7.2.4.8\n  const addKeys = ['Style', 'CRS', 'AuthorityURL'];\n  addKeys.forEach(function(key) {\n    if (key in parentLayerObject) {\n      const childValue = layerObject[key] || [];\n      layerObject[key] = childValue.concat(parentLayerObject[key]);\n    }\n  });\n\n  const replaceKeys = ['EX_GeographicBoundingBox', 'BoundingBox', 'Dimension',\n    'Attribution', 'MinScaleDenominator', 'MaxScaleDenominator'];\n  replaceKeys.forEach(function(key) {\n    if (!(key in layerObject)) {\n      const parentValue = parentLayerObject[key];\n      layerObject[key] = parentValue;\n    }\n  });\n\n  return layerObject;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object} Dimension object.\n */\nfunction readDimension(node, objectStack) {\n  const dimensionObject = {\n    'name': node.getAttribute('name'),\n    'units': node.getAttribute('units'),\n    'unitSymbol': node.getAttribute('unitSymbol'),\n    'default': node.getAttribute('default'),\n    'multipleValues': readBooleanString(node.getAttribute('multipleValues')),\n    'nearestValue': readBooleanString(node.getAttribute('nearestValue')),\n    'current': readBooleanString(node.getAttribute('current')),\n    'values': readString(node)\n  };\n  return dimensionObject;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nfunction readFormatOnlineresource(node, objectStack) {\n  return pushParseAndPop({}, FORMAT_ONLINERESOURCE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Request object.\n */\nfunction readRequest(node, objectStack) {\n  return pushParseAndPop({}, REQUEST_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} DCP type object.\n */\nfunction readDCPType(node, objectStack) {\n  return pushParseAndPop({}, DCPTYPE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} HTTP object.\n */\nfunction readHTTP(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Operation type object.\n */\nfunction readOperationType(node, objectStack) {\n  return pushParseAndPop({}, OPERATIONTYPE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nfunction readSizedFormatOnlineresource(node, objectStack) {\n  const formatOnlineresource = readFormatOnlineresource(node, objectStack);\n  if (formatOnlineresource) {\n    const size = [\n      readNonNegativeIntegerString(node.getAttribute('width')),\n      readNonNegativeIntegerString(node.getAttribute('height'))\n    ];\n    formatOnlineresource['size'] = size;\n    return formatOnlineresource;\n  }\n  return undefined;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Authority URL object.\n */\nfunction readAuthorityURL(node, objectStack) {\n  const authorityObject = readFormatOnlineresource(node, objectStack);\n  if (authorityObject) {\n    authorityObject['name'] = node.getAttribute('name');\n    return authorityObject;\n  }\n  return undefined;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Metadata URL object.\n */\nfunction readMetadataURL(node, objectStack) {\n  const metadataObject = readFormatOnlineresource(node, objectStack);\n  if (metadataObject) {\n    metadataObject['type'] = node.getAttribute('type');\n    return metadataObject;\n  }\n  return undefined;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  return pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<string>|undefined} Keyword list.\n */\nfunction readKeywordList(node, objectStack) {\n  return pushParseAndPop([], KEYWORDLIST_PARSERS, node, objectStack);\n}\n\n\nexport default WMSCapabilities;\n","/**\n * @module ol/format/OWS\n */\nimport {inherits} from '../index.js';\nimport {readHref} from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport {readString} from '../format/xsd.js';\nimport {makeObjectPropertyPusher, makeObjectPropertySetter, makeStructureNS, pushParseAndPop} from '../xml.js';\n\n/**\n * @constructor\n * @extends {module:ol/format/XML}\n */\nconst OWS = function() {\n  XML.call(this);\n};\n\ninherits(OWS, XML);\n\n\n/**\n * @const\n * @type {Array.<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ServiceIdentification': makeObjectPropertySetter(readServiceIdentification),\n    'ServiceProvider': makeObjectPropertySetter(readServiceProvider),\n    'OperationsMetadata': makeObjectPropertySetter(readOperationsMetadata)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst ADDRESS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'DeliveryPoint': makeObjectPropertySetter(readString),\n    'City': makeObjectPropertySetter(readString),\n    'AdministrativeArea': makeObjectPropertySetter(readString),\n    'PostalCode': makeObjectPropertySetter(readString),\n    'Country': makeObjectPropertySetter(readString),\n    'ElectronicMailAddress': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst ALLOWED_VALUES_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Value': makeObjectPropertyPusher(readValue)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst CONSTRAINT_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'AllowedValues': makeObjectPropertySetter(readAllowedValues)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst CONTACT_INFO_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Phone': makeObjectPropertySetter(readPhone),\n    'Address': makeObjectPropertySetter(readAddress)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst DCP_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'HTTP': makeObjectPropertySetter(readHttp)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst HTTP_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Get': makeObjectPropertyPusher(readGet),\n    'Post': undefined // TODO\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst OPERATION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'DCP': makeObjectPropertySetter(readDcp)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst OPERATIONS_METADATA_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Operation': readOperation\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst PHONE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Voice': makeObjectPropertySetter(readString),\n    'Facsimile': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst REQUEST_METHOD_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Constraint': makeObjectPropertyPusher(readConstraint)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst SERVICE_CONTACT_PARSERS =\n    makeStructureNS(\n      NAMESPACE_URIS, {\n        'IndividualName': makeObjectPropertySetter(readString),\n        'PositionName': makeObjectPropertySetter(readString),\n        'ContactInfo': makeObjectPropertySetter(readContactInfo)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst SERVICE_IDENTIFICATION_PARSERS =\n    makeStructureNS(\n      NAMESPACE_URIS, {\n        'Abstract': makeObjectPropertySetter(readString),\n        'AccessConstraints': makeObjectPropertySetter(readString),\n        'Fees': makeObjectPropertySetter(readString),\n        'Title': makeObjectPropertySetter(readString),\n        'ServiceTypeVersion': makeObjectPropertySetter(readString),\n        'ServiceType': makeObjectPropertySetter(readString)\n      });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst SERVICE_PROVIDER_PARSERS =\n    makeStructureNS(\n      NAMESPACE_URIS, {\n        'ProviderName': makeObjectPropertySetter(readString),\n        'ProviderSite': makeObjectPropertySetter(readHref),\n        'ServiceContact': makeObjectPropertySetter(readServiceContact)\n      });\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      return this.readFromNode(n);\n    }\n  }\n  return null;\n};\n\n\n/**\n * @inheritDoc\n */\nOWS.prototype.readFromNode = function(node) {\n  const owsObject = pushParseAndPop({},\n    PARSERS, node, []);\n  return owsObject ? owsObject : null;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} The address.\n */\nfunction readAddress(node, objectStack) {\n  return pushParseAndPop({},\n    ADDRESS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} The values.\n */\nfunction readAllowedValues(node, objectStack) {\n  return pushParseAndPop({},\n    ALLOWED_VALUES_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} The constraint.\n */\nfunction readConstraint(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return pushParseAndPop({'name': name},\n    CONSTRAINT_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} The contact info.\n */\nfunction readContactInfo(node, objectStack) {\n  return pushParseAndPop({},\n    CONTACT_INFO_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} The DCP.\n */\nfunction readDcp(node, objectStack) {\n  return pushParseAndPop({},\n    DCP_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} The GET object.\n */\nfunction readGet(node, objectStack) {\n  const href = readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return pushParseAndPop({'href': href},\n    REQUEST_METHOD_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} The HTTP object.\n */\nfunction readHttp(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} The operation.\n */\nfunction readOperation(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = pushParseAndPop({},\n    OPERATION_PARSERS, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} The operations metadata.\n */\nfunction readOperationsMetadata(node, objectStack) {\n  return pushParseAndPop({},\n    OPERATIONS_METADATA_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} The phone.\n */\nfunction readPhone(node, objectStack) {\n  return pushParseAndPop({},\n    PHONE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} The service identification.\n */\nfunction readServiceIdentification(node, objectStack) {\n  return pushParseAndPop(\n    {}, SERVICE_IDENTIFICATION_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} The service contact.\n */\nfunction readServiceContact(node, objectStack) {\n  return pushParseAndPop(\n    {}, SERVICE_CONTACT_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object|undefined} The service provider.\n */\nfunction readServiceProvider(node, objectStack) {\n  return pushParseAndPop(\n    {}, SERVICE_PROVIDER_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {string|undefined} The value.\n */\nfunction readValue(node, objectStack) {\n  return readString(node);\n}\n\n\nexport default OWS;\n","/**\n * @module ol/format/IGC\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport TextFeature from '../format/TextFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * IGC altitude/z. One of 'barometric', 'gps', 'none'.\n * @enum {string}\n */\nconst IGCZ = {\n  BAROMETRIC: 'barometric',\n  GPS: 'gps',\n  NONE: 'none'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {IGCZ|string} [altitudeMode='none'] Altitude mode. Possible\n * values are `'barometric'`, `'gps'`, and `'none'`.\n */\n\n\n/**\n * @classdesc\n * Feature format for `*.igc` flight recording files.\n *\n * @constructor\n * @extends {module:ol/format/TextFeature}\n * @param {module:ol/format/IGC~Options=} opt_options Options.\n * @api\n */\nconst IGC = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  TextFeature.call(this);\n\n  /**\n   * @inheritDoc\n   */\n  this.dataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @private\n   * @type {IGCZ}\n   */\n  this.altitudeMode_ = options.altitudeMode ? options.altitudeMode : IGCZ.NONE;\n};\n\ninherits(IGC, TextFeature);\n\n\n/**\n * @const\n * @type {RegExp}\n */\nconst B_RECORD_RE =\n    /^B(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{5})([NS])(\\d{3})(\\d{5})([EW])([AV])(\\d{5})(\\d{5})/;\n\n\n/**\n * @const\n * @type {RegExp}\n */\nconst H_RECORD_RE = /^H.([A-Z]{3}).*?:(.*)/;\n\n\n/**\n * @const\n * @type {RegExp}\n */\nconst HFDTE_RECORD_RE = /^HFDTE(\\d{2})(\\d{2})(\\d{2})/;\n\n\n/**\n * A regular expression matching the newline characters `\\r\\n`, `\\r` and `\\n`.\n *\n * @const\n * @type {RegExp}\n */\nconst NEWLINE_RE = /\\r\\n|\\r|\\n/;\n\n\n/**\n * Read the feature from the IGC source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/Feature} Feature.\n * @api\n */\nIGC.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nIGC.prototype.readFeatureFromText = function(text, opt_options) {\n  const altitudeMode = this.altitudeMode_;\n  const lines = text.split(NEWLINE_RE);\n  /** @type {Object.<string, string>} */\n  const properties = {};\n  const flatCoordinates = [];\n  let year = 2000;\n  let month = 0;\n  let day = 1;\n  let lastDateTime = -1;\n  let i, ii;\n  for (i = 0, ii = lines.length; i < ii; ++i) {\n    const line = lines[i];\n    let m;\n    if (line.charAt(0) == 'B') {\n      m = B_RECORD_RE.exec(line);\n      if (m) {\n        const hour = parseInt(m[1], 10);\n        const minute = parseInt(m[2], 10);\n        const second = parseInt(m[3], 10);\n        let y = parseInt(m[4], 10) + parseInt(m[5], 10) / 60000;\n        if (m[6] == 'S') {\n          y = -y;\n        }\n        let x = parseInt(m[7], 10) + parseInt(m[8], 10) / 60000;\n        if (m[9] == 'W') {\n          x = -x;\n        }\n        flatCoordinates.push(x, y);\n        if (altitudeMode != IGCZ.NONE) {\n          let z;\n          if (altitudeMode == IGCZ.GPS) {\n            z = parseInt(m[11], 10);\n          } else if (altitudeMode == IGCZ.BAROMETRIC) {\n            z = parseInt(m[12], 10);\n          } else {\n            z = 0;\n          }\n          flatCoordinates.push(z);\n        }\n        let dateTime = Date.UTC(year, month, day, hour, minute, second);\n        // Detect UTC midnight wrap around.\n        if (dateTime < lastDateTime) {\n          dateTime = Date.UTC(year, month, day + 1, hour, minute, second);\n        }\n        flatCoordinates.push(dateTime / 1000);\n        lastDateTime = dateTime;\n      }\n    } else if (line.charAt(0) == 'H') {\n      m = HFDTE_RECORD_RE.exec(line);\n      if (m) {\n        day = parseInt(m[1], 10);\n        month = parseInt(m[2], 10) - 1;\n        year = 2000 + parseInt(m[3], 10);\n      } else {\n        m = H_RECORD_RE.exec(line);\n        if (m) {\n          properties[m[1]] = m[2].trim();\n        }\n      }\n    }\n  }\n  if (flatCoordinates.length === 0) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  const layout = altitudeMode == IGCZ.NONE ? GeometryLayout.XYM : GeometryLayout.XYZM;\n  lineString.setFlatCoordinates(layout, flatCoordinates);\n  const feature = new Feature(transformWithOptions(lineString, false, opt_options));\n  feature.setProperties(properties);\n  return feature;\n};\n\n\n/**\n * Read the feature from the source. As IGC sources contain a single\n * feature, this will return the feature in an array.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nIGC.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nIGC.prototype.readFeaturesFromText = function(text, opt_options) {\n  const feature = this.readFeatureFromText(text, opt_options);\n  if (feature) {\n    return [feature];\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * Read the projection from the IGC source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {module:ol/proj/Projection} Projection.\n * @api\n */\nIGC.prototype.readProjection;\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nIGC.prototype.writeFeatureText = function(feature, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nIGC.prototype.writeFeaturesText = function(features, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nIGC.prototype.writeGeometryText = function(geometry, opt_options) {};\n\n\n/**\n * Not implemented.\n * @inheritDoc\n */\nIGC.prototype.readGeometryFromText = function(text, opt_options) {};\nexport default IGC;\n","/**\n * @module ol/format/GPX\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport {includes} from '../array.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {readString, readDecimal, readNonNegativeInteger, readDateTime, writeStringTextNode, writeNonNegativeIntegerTextNode, writeDecimalTextNode, writeDateTimeTextNode} from '../format/xsd.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport {get as getProjection} from '../proj.js';\nimport {createElementNS, makeArrayPusher, makeArraySerializer, makeChildAppender,\n  makeObjectPropertySetter, makeSequence, makeSimpleNodeFactory, makeStructureNS,\n  OBJECT_PROPERTY_NODE_FACTORY, parseNode, pushParseAndPop, pushSerializeAndPop,\n  XML_SCHEMA_INSTANCE_URI} from '../xml.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {function(module:ol/Feature, Node)} [readExtensions] Callback function\n * to process `extensions` nodes. To prevent memory leaks, this callback function must\n * not store any references to the node. Note that the `extensions`\n * node is not allowed in GPX 1.0. Moreover, only `extensions`\n * nodes from `wpt`, `rte` and `trk` can be processed, as those are\n * directly mapped to a feature.\n */\n\n/**\n * @typedef {Object} LayoutOptions\n * @property {boolean} [hasZ]\n * @property {boolean} [hasM]\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * @constructor\n * @extends {module:ol/format/XMLFeature}\n * @param {module:ol/format/GPX~Options=} opt_options Options.\n * @api\n */\nconst GPX = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  XMLFeature.call(this);\n\n  /**\n   * @inheritDoc\n   */\n  this.dataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @type {function(module:ol/Feature, Node)|undefined}\n   * @private\n   */\n  this.readExtensions_ = options.readExtensions;\n};\n\ninherits(GPX, XMLFeature);\n\n\n/**\n * @const\n * @type {Array.<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1'\n];\n\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION = 'http://www.topografix.com/GPX/1/1 ' +\n    'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n\n/**\n * @const\n * @type {Object.<string, function(Node, Array.<*>): (module:ol/Feature|undefined)>}\n */\nconst FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt\n};\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst GPX_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': makeArrayPusher(readRte),\n    'trk': makeArrayPusher(readTrk),\n    'wpt': makeArrayPusher(readWpt)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst LINK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': makeObjectPropertySetter(readString, 'linkText'),\n    'type': makeObjectPropertySetter(readString, 'linkType')\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst RTE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'number': makeObjectPropertySetter(readNonNegativeInteger),\n    'extensions': parseExtensions,\n    'type': makeObjectPropertySetter(readString),\n    'rtept': parseRtePt\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst RTEPT_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst TRK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'number': makeObjectPropertySetter(readNonNegativeInteger),\n    'type': makeObjectPropertySetter(readString),\n    'extensions': parseExtensions,\n    'trkseg': parseTrkSeg\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst TRKSEG_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': parseTrkPt\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst TRKPT_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst WPT_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime),\n    'magvar': makeObjectPropertySetter(readDecimal),\n    'geoidheight': makeObjectPropertySetter(readDecimal),\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'sym': makeObjectPropertySetter(readString),\n    'type': makeObjectPropertySetter(readString),\n    'fix': makeObjectPropertySetter(readString),\n    'sat': makeObjectPropertySetter(readNonNegativeInteger),\n    'hdop': makeObjectPropertySetter(readDecimal),\n    'vdop': makeObjectPropertySetter(readDecimal),\n    'pdop': makeObjectPropertySetter(readDecimal),\n    'ageofdgpsdata': makeObjectPropertySetter(readDecimal),\n    'dgpsid': makeObjectPropertySetter(readNonNegativeInteger),\n    'extensions': parseExtensions\n  });\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst LINK_SEQUENCE = ['text', 'type'];\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst LINK_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': makeChildAppender(writeStringTextNode),\n    'type': makeChildAppender(writeStringTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst RTE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'rtept'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst RTE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'rtept': makeArraySerializer(makeChildAppender(writeWptType))\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst RTEPT_TYPE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst TRK_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'trkseg'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst TRK_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'trkseg': makeArraySerializer(makeChildAppender(writeTrkSeg))\n  });\n\n\n/**\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst TRKSEG_NODE_FACTORY = makeSimpleNodeFactory('trkpt');\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst TRKSEG_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': makeChildAppender(writeWptType)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst WPT_TYPE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time', 'magvar', 'geoidheight', 'name', 'cmt', 'desc', 'src',\n    'link', 'sym', 'type', 'fix', 'sat', 'hdop', 'vdop', 'pdop',\n    'ageofdgpsdata', 'dgpsid'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst WPT_TYPE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': makeChildAppender(writeDecimalTextNode),\n    'time': makeChildAppender(writeDateTimeTextNode),\n    'magvar': makeChildAppender(writeDecimalTextNode),\n    'geoidheight': makeChildAppender(writeDecimalTextNode),\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'sym': makeChildAppender(writeStringTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'fix': makeChildAppender(writeStringTextNode),\n    'sat': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'hdop': makeChildAppender(writeDecimalTextNode),\n    'vdop': makeChildAppender(writeDecimalTextNode),\n    'pdop': makeChildAppender(writeDecimalTextNode),\n    'ageofdgpsdata': makeChildAppender(writeDecimalTextNode),\n    'dgpsid': makeChildAppender(writeNonNegativeIntegerTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk'\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, opt_nodeName) {\n  const geometry = /** @type {module:ol/Feature} */ (value).getGeometry();\n  if (geometry) {\n    const nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      const parentNode = objectStack[objectStack.length - 1].node;\n      return createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst GPX_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': makeChildAppender(writeRte),\n    'trk': makeChildAppender(writeTrk),\n    'wpt': makeChildAppender(writeWpt)\n  });\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {module:ol/format/GPX~LayoutOptions} layoutOptions Layout options.\n * @param {Node} node Node.\n * @param {!Object} values Values.\n * @return {Array.<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat')));\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {module:ol/format/GPX~LayoutOptions} layoutOptions Layout options.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>=} ends Ends.\n * @return {module:ol/geom/GeometryLayout} Layout.\n */\nfunction applyLayoutOptions(layoutOptions, flatCoordinates, ends) {\n  let layout = GeometryLayout.XY;\n  let stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = GeometryLayout.XYZM;\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = GeometryLayout.XYZ;\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = GeometryLayout.XYM;\n    stride = 3;\n  }\n  if (stride !== 4) {\n    for (let i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = flatCoordinates.length / 4 * stride;\n    if (ends) {\n      for (let i = 0, ii = ends.length; i < ii; i++) {\n        ends[i] = ends[i] / 4 * stride;\n      }\n    }\n  }\n  return layout;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  const values = pushParseAndPop({}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    const rteValues = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n    const flatCoordinates = /** @type {Array.<number>} */ (rteValues['flatCoordinates']);\n    const layoutOptions = /** @type {module:ol/format/GPX~LayoutOptions} */ (rteValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  const values = pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    const trkValues = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n    const flatCoordinates = /** @type {Array.<number>} */ (trkValues['flatCoordinates']);\n    const layoutOptions = /** @type {module:ol/format/GPX~LayoutOptions} */ (trkValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  const values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  parseNode(TRKSEG_PARSERS, node, objectStack);\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  const ends = /** @type {Array.<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  const options = /** @type {module:ol/format/Feature~ReadOptions} */ (objectStack[0]);\n  const values = pushParseAndPop({\n    'flatCoordinates': [],\n    'layoutOptions': {}\n  }, RTE_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const layoutOptions = /** @type {module:ol/format/GPX~LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates);\n  const geometry = new LineString(null);\n  geometry.setFlatCoordinates(layout, flatCoordinates);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  const options = /** @type {module:ol/format/Feature~ReadOptions} */ (objectStack[0]);\n  const values = pushParseAndPop({\n    'flatCoordinates': [],\n    'ends': [],\n    'layoutOptions': {}\n  }, TRK_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const flatCoordinates = /** @type {Array.<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  const ends = /** @type {Array.<number>} */ (values['ends']);\n  delete values['ends'];\n  const layoutOptions = /** @type {module:ol/format/GPX~LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  const layout = applyLayoutOptions(layoutOptions, flatCoordinates, ends);\n  const geometry = new MultiLineString(null);\n  geometry.setFlatCoordinates(layout, flatCoordinates, ends);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  const options = /** @type {module:ol/format/Feature~ReadOptions} */ (objectStack[0]);\n  const values = pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  const layoutOptions = /** @type {module:ol/format/GPX~LayoutOptions} */ ({});\n  const coordinates = appendCoordinate([], layoutOptions, node, values);\n  const layout = applyLayoutOptions(layoutOptions, coordinates);\n  const geometry = new Point(coordinates, layout);\n  transformWithOptions(geometry, false, options);\n  const feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Array.<module:ol/Feature>} features List of features.\n * @private\n */\nGPX.prototype.handleReadExtensions_ = function(features) {\n  if (!features) {\n    features = [];\n  }\n  for (let i = 0, ii = features.length; i < ii; ++i) {\n    const feature = features[i];\n    if (this.readExtensions_) {\n      const extensionsNode = feature.get('extensionsNode_') || null;\n      this.readExtensions_(feature, extensionsNode);\n    }\n    feature.set('extensionsNode_', undefined);\n  }\n};\n\n\n/**\n * Read the first feature from a GPX source.\n * Routes (`<rte>`) are converted into LineString geometries, and tracks (`<trk>`)\n * into MultiLineString. Any properties on route and track waypoints are ignored.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/Feature} Feature.\n * @api\n */\nGPX.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nGPX.prototype.readFeatureFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return null;\n  }\n  const featureReader = FEATURE_READER[node.localName];\n  if (!featureReader) {\n    return null;\n  }\n  const feature = featureReader(node, [this.getReadOptions(node, opt_options)]);\n  if (!feature) {\n    return null;\n  }\n  this.handleReadExtensions_([feature]);\n  return feature;\n};\n\n\n/**\n * Read all features from a GPX source.\n * Routes (`<rte>`) are converted into LineString geometries, and tracks (`<trk>`)\n * into MultiLineString. Any properties on route and track waypoints are ignored.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nGPX.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nGPX.prototype.readFeaturesFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return [];\n  }\n  if (node.localName == 'gpx') {\n    /** @type {Array.<module:ol/Feature>} */\n    const features = pushParseAndPop([], GPX_PARSERS,\n      node, [this.getReadOptions(node, opt_options)]);\n    if (features) {\n      this.handleReadExtensions_(features);\n      return features;\n    } else {\n      return [];\n    }\n  }\n  return [];\n};\n\n\n/**\n * Read the projection from a GPX source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {module:ol/proj/Projection} Projection.\n * @api\n */\nGPX.prototype.readProjection;\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array.<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  const context = objectStack[objectStack.length - 1];\n  const properties = context['properties'];\n  const link = [\n    properties['linkText'],\n    properties['linkType']\n  ];\n  pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */ ({node: node}),\n    LINK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    link, objectStack, LINK_SEQUENCE);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n  const parentNode = context.node;\n  const namespaceURI = parentNode.namespaceURI;\n  const properties = context['properties'];\n  //FIXME Projection handling\n  node.setAttributeNS(null, 'lat', coordinate[1]);\n  node.setAttributeNS(null, 'lon', coordinate[0]);\n  const geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case GeometryLayout.XYZM:\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n      // fall through\n    case GeometryLayout.XYZ:\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case GeometryLayout.XYM:\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n      // pass\n  }\n  const orderedKeys = (node.nodeName == 'rtept') ?\n    RTEPT_TYPE_SEQUENCE[namespaceURI] :\n    WPT_TYPE_SEQUENCE[namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n    ({node: node, 'properties': properties}),\n    WPT_TYPE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  const options = /** @type {module:ol/format/Feature~WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  const context = {node: node, 'properties': properties};\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {module:ol/geom/LineString} */ (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    properties['rtept'] = geometry.getCoordinates();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context,\n    RTE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  const options = /** @type {module:ol/format/Feature~WriteOptions} */ (objectStack[0]);\n  const properties = feature.getProperties();\n  /** @type {module:ol/xml~NodeStackItem} */\n  const context = {node: node, 'properties': properties};\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {module:ol/geom/MultiLineString} */\n      (transformWithOptions(geometry, true, options));\n    properties['trkseg'] = geometry.getLineStrings();\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context,\n    TRK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/LineString} lineString LineString.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {module:ol/xml~NodeStackItem} */\n  const context = {node: node, 'geometryLayout': lineString.getLayout(),\n    'properties': {}};\n  pushSerializeAndPop(context,\n    TRKSEG_SERIALIZERS, TRKSEG_NODE_FACTORY,\n    lineString.getCoordinates(), objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  const options = /** @type {module:ol/format/Feature~WriteOptions} */ (objectStack[0]);\n  const context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {module:ol/geom/Point} */\n      (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    writeWptType(node, geometry.getCoordinates(), objectStack);\n  }\n}\n\n\n/**\n * Encode an array of features in the GPX format.\n * LineString geometries are output as routes (`<rte>`), and MultiLineString\n * as tracks (`<trk>`).\n *\n * @function\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {string} Result.\n * @api\n */\nGPX.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GPX format as an XML node.\n * LineString geometries are output as routes (`<rte>`), and MultiLineString\n * as tracks (`<trk>`).\n *\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nGPX.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  //FIXME Serialize metadata\n  const gpx = createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n  const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n  gpx.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n  gpx.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\n  gpx.setAttribute('version', '1.1');\n  gpx.setAttribute('creator', 'OpenLayers');\n\n  pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n    ({node: gpx}), GPX_SERIALIZERS, GPX_NODE_FACTORY, features, [opt_options]);\n  return gpx;\n};\nexport default GPX;\n","/**\n * @module ol/style/AtlasManager\n */\nimport {WEBGL_MAX_TEXTURE_SIZE} from '../index.js';\nimport {UNDEFINED} from '../functions.js';\nimport Atlas from '../style/Atlas.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [initialSize=256] The size in pixels of the first atlas image.\n * @property {number} [maxSize] The maximum size in pixels of atlas images. Default is\n * `WEBGL_MAX_TEXTURE_SIZE` or 2048 if WebGL is not supported.\n * @property {number} [space=1] The space in pixels between images.\n */\n\n\n/**\n * Provides information for an image inside an atlas manager.\n * `offsetX` and `offsetY` is the position of the image inside\n * the atlas image `image` and the position of the hit-detection image\n * inside the hit-detection atlas image `hitImage`.\n * @typedef {Object} AtlasManagerInfo\n * @property {number} offsetX\n * @property {number} offsetY\n * @property {HTMLCanvasElement} image\n * @property {HTMLCanvasElement} hitImage\n */\n\n\n/**\n * The size in pixels of the first atlas image.\n * @type {number}\n */\nconst INITIAL_ATLAS_SIZE = 256;\n\n/**\n * The maximum size in pixels of atlas images.\n * @type {number}\n */\nconst MAX_ATLAS_SIZE = -1;\n\n\n/**\n * Manages the creation of image atlases.\n *\n * Images added to this manager will be inserted into an atlas, which\n * will be used for rendering.\n * The `size` given in the constructor is the size for the first\n * atlas. After that, when new atlases are created, they will have\n * twice the size as the latest atlas (until `maxSize` is reached).\n *\n * If an application uses many images or very large images, it is recommended\n * to set a higher `size` value to avoid the creation of too many atlases.\n *\n * @constructor\n * @struct\n * @api\n * @param {module:ol/style/AtlasManager~Options=} opt_options Options.\n */\nconst AtlasManager = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * The size in pixels of the latest atlas image.\n   * @private\n   * @type {number}\n   */\n  this.currentSize_ = options.initialSize !== undefined ?\n    options.initialSize : INITIAL_ATLAS_SIZE;\n\n  /**\n   * The maximum size in pixels of atlas images.\n   * @private\n   * @type {number}\n   */\n  this.maxSize_ = options.maxSize !== undefined ?\n    options.maxSize : MAX_ATLAS_SIZE != -1 ?\n      MAX_ATLAS_SIZE : WEBGL_MAX_TEXTURE_SIZE !== undefined ?\n        WEBGL_MAX_TEXTURE_SIZE : 2048;\n\n  /**\n   * The size in pixels between images.\n   * @private\n   * @type {number}\n   */\n  this.space_ = options.space !== undefined ? options.space : 1;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/style/Atlas>}\n   */\n  this.atlases_ = [new Atlas(this.currentSize_, this.space_)];\n\n  /**\n   * The size in pixels of the latest atlas image for hit-detection images.\n   * @private\n   * @type {number}\n   */\n  this.currentHitSize_ = this.currentSize_;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/style/Atlas>}\n   */\n  this.hitAtlases_ = [new Atlas(this.currentHitSize_, this.space_)];\n};\n\n\n/**\n * @param {string} id The identifier of the entry to check.\n * @return {?module:ol/style/AtlasManager~AtlasManagerInfo} The position and atlas image for the\n *    entry, or `null` if the entry is not part of the atlas manager.\n */\nAtlasManager.prototype.getInfo = function(id) {\n  /** @type {?module:ol/style/Atlas~AtlasInfo} */\n  const info = this.getInfo_(this.atlases_, id);\n\n  if (!info) {\n    return null;\n  }\n  const hitInfo = /** @type {module:ol/style/Atlas~AtlasInfo} */ (this.getInfo_(this.hitAtlases_, id));\n\n  return this.mergeInfos_(info, hitInfo);\n};\n\n\n/**\n * @private\n * @param {Array.<module:ol/style/Atlas>} atlases The atlases to search.\n * @param {string} id The identifier of the entry to check.\n * @return {?module:ol/style/Atlas~AtlasInfo} The position and atlas image for the entry,\n *    or `null` if the entry is not part of the atlases.\n */\nAtlasManager.prototype.getInfo_ = function(atlases, id) {\n  for (let i = 0, ii = atlases.length; i < ii; ++i) {\n    const atlas = atlases[i];\n    const info = atlas.get(id);\n    if (info) {\n      return info;\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n * @param {module:ol/style/Atlas~AtlasInfo} info The info for the real image.\n * @param {module:ol/style/Atlas~AtlasInfo} hitInfo The info for the hit-detection\n *    image.\n * @return {?module:ol/style/AtlasManager~AtlasManagerInfo} The position and atlas image for the\n *    entry, or `null` if the entry is not part of the atlases.\n */\nAtlasManager.prototype.mergeInfos_ = function(info, hitInfo) {\n  return (\n    /** @type {module:ol/style/AtlasManager~AtlasManagerInfo} */ ({\n      offsetX: info.offsetX,\n      offsetY: info.offsetY,\n      image: info.image,\n      hitImage: hitInfo.image\n    })\n  );\n};\n\n\n/**\n * Add an image to the atlas manager.\n *\n * If an entry for the given id already exists, the entry will\n * be overridden (but the space on the atlas graphic will not be freed).\n *\n * If `renderHitCallback` is provided, the image (or the hit-detection version\n * of the image) will be rendered into a separate hit-detection atlas image.\n *\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *    Called to render the new image onto an atlas image.\n * @param {function(CanvasRenderingContext2D, number, number)=}\n *    opt_renderHitCallback Called to render a hit-detection image onto a hit\n *    detection atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *    `renderCallback` and `renderHitCallback`.\n * @return {?module:ol/style/AtlasManager~AtlasManagerInfo}  The position and atlas image for the\n *    entry, or `null` if the image is too big.\n */\nAtlasManager.prototype.add = function(id, width, height,\n  renderCallback, opt_renderHitCallback, opt_this) {\n  if (width + this.space_ > this.maxSize_ ||\n      height + this.space_ > this.maxSize_) {\n    return null;\n  }\n\n  /** @type {?module:ol/style/Atlas~AtlasInfo} */\n  const info = this.add_(false, id, width, height, renderCallback, opt_this);\n  if (!info) {\n    return null;\n  }\n\n  // even if no hit-detection entry is requested, we insert a fake entry into\n  // the hit-detection atlas, to make sure that the offset is the same for\n  // the original image and the hit-detection image.\n  const renderHitCallback = opt_renderHitCallback !== undefined ?\n    opt_renderHitCallback : UNDEFINED;\n\n  const hitInfo = /** @type {module:ol/style/Atlas~AtlasInfo} */ (this.add_(true,\n    id, width, height, renderHitCallback, opt_this));\n\n  return this.mergeInfos_(info, hitInfo);\n};\n\n\n/**\n * @private\n * @param {boolean} isHitAtlas If the hit-detection atlases are used.\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *    Called to render the new image onto an atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *    `renderCallback` and `renderHitCallback`.\n * @return {?module:ol/style/Atlas~AtlasInfo}  The position and atlas image for the entry,\n *    or `null` if the image is too big.\n */\nAtlasManager.prototype.add_ = function(isHitAtlas, id, width, height, renderCallback, opt_this) {\n  const atlases = (isHitAtlas) ? this.hitAtlases_ : this.atlases_;\n  let atlas, info, i, ii;\n  for (i = 0, ii = atlases.length; i < ii; ++i) {\n    atlas = atlases[i];\n    info = atlas.add(id, width, height, renderCallback, opt_this);\n    if (info) {\n      return info;\n    } else if (!info && i === ii - 1) {\n      // the entry could not be added to one of the existing atlases,\n      // create a new atlas that is twice as big and try to add to this one.\n      let size;\n      if (isHitAtlas) {\n        size = Math.min(this.currentHitSize_ * 2, this.maxSize_);\n        this.currentHitSize_ = size;\n      } else {\n        size = Math.min(this.currentSize_ * 2, this.maxSize_);\n        this.currentSize_ = size;\n      }\n      atlas = new Atlas(size, this.space_);\n      atlases.push(atlas);\n      // run the loop another time\n      ++ii;\n    }\n  }\n  return null;\n};\nexport default AtlasManager;\n","/**\n * @module ol/source/UTFGrid\n */\nimport {inherits} from '../index.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport {assert} from '../asserts.js';\nimport {listenOnce} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {jsonp as requestJSONP} from '../net.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport SourceState from '../source/State.js';\nimport TileSource from '../source/Tile.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n\n/**\n * @constructor\n * @extends {module:ol/Tile}\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/TileState} state State.\n * @param {string} src Image source URI.\n * @param {module:ol/extent~Extent} extent Extent of the tile.\n * @param {boolean} preemptive Load the tile when visible (before it's needed).\n * @param {boolean} jsonp Load the tile as a script.\n */\nexport const CustomTile = function(tileCoord, state, src, extent, preemptive, jsonp) {\n\n  Tile.call(this, tileCoord, state);\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent_ = extent;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.preemptive_ = preemptive;\n\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.grid_ = null;\n\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.keys_ = null;\n\n  /**\n   * @private\n   * @type {Object.<string, Object>|undefined}\n   */\n  this.data_ = null;\n\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.jsonp_ = jsonp;\n\n};\ninherits(CustomTile, Tile);\n\n\n/**\n * Get the image element for this tile.\n * @return {Image} Image.\n */\nCustomTile.prototype.getImage = function() {\n  return null;\n};\n\n\n/**\n * Synchronously returns data at given coordinate (if available).\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @return {*} The data.\n */\nCustomTile.prototype.getData = function(coordinate) {\n  if (!this.grid_ || !this.keys_) {\n    return null;\n  }\n  const xRelative = (coordinate[0] - this.extent_[0]) /\n      (this.extent_[2] - this.extent_[0]);\n  const yRelative = (coordinate[1] - this.extent_[1]) /\n      (this.extent_[3] - this.extent_[1]);\n\n  const row = this.grid_[Math.floor((1 - yRelative) * this.grid_.length)];\n\n  if (typeof row !== 'string') {\n    return null;\n  }\n\n  let code = row.charCodeAt(Math.floor(xRelative * row.length));\n  if (code >= 93) {\n    code--;\n  }\n  if (code >= 35) {\n    code--;\n  }\n  code -= 32;\n\n  let data = null;\n  if (code in this.keys_) {\n    const id = this.keys_[code];\n    if (this.data_ && id in this.data_) {\n      data = this.data_[id];\n    } else {\n      data = id;\n    }\n  }\n  return data;\n};\n\n\n/**\n * Calls the callback (synchronously by default) with the available data\n * for given coordinate (or `null` if not yet loaded).\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {function(this: T, *)} callback Callback.\n * @param {T=} opt_this The object to use as `this` in the callback.\n * @param {boolean=} opt_request If `true` the callback is always async.\n *                               The tile data is requested if not yet loaded.\n * @template T\n */\nCustomTile.prototype.forDataAtCoordinate = function(coordinate, callback, opt_this, opt_request) {\n  if (this.state == TileState.IDLE && opt_request === true) {\n    listenOnce(this, EventType.CHANGE, function(e) {\n      callback.call(opt_this, this.getData(coordinate));\n    }, this);\n    this.loadInternal_();\n  } else {\n    if (opt_request === true) {\n      setTimeout(function() {\n        callback.call(opt_this, this.getData(coordinate));\n      }.bind(this), 0);\n    } else {\n      callback.call(opt_this, this.getData(coordinate));\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCustomTile.prototype.getKey = function() {\n  return this.src_;\n};\n\n\n/**\n * @private\n */\nCustomTile.prototype.handleError_ = function() {\n  this.state = TileState.ERROR;\n  this.changed();\n};\n\n\n/**\n * @param {!UTFGridJSON} json UTFGrid data.\n * @private\n */\nCustomTile.prototype.handleLoad_ = function(json) {\n  this.grid_ = json.grid;\n  this.keys_ = json.keys;\n  this.data_ = json.data;\n\n  this.state = TileState.EMPTY;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nCustomTile.prototype.loadInternal_ = function() {\n  if (this.state == TileState.IDLE) {\n    this.state = TileState.LOADING;\n    if (this.jsonp_) {\n      requestJSONP(this.src_, this.handleLoad_.bind(this),\n        this.handleError_.bind(this));\n    } else {\n      const client = new XMLHttpRequest();\n      client.addEventListener('load', this.onXHRLoad_.bind(this));\n      client.addEventListener('error', this.onXHRError_.bind(this));\n      client.open('GET', this.src_);\n      client.send();\n    }\n  }\n};\n\n\n/**\n * @private\n * @param {Event} event The load event.\n */\nCustomTile.prototype.onXHRLoad_ = function(event) {\n  const client = /** @type {XMLHttpRequest} */ (event.target);\n  // status will be 0 for file:// urls\n  if (!client.status || client.status >= 200 && client.status < 300) {\n    let response;\n    try {\n      response = /** @type {!UTFGridJSON} */(JSON.parse(client.responseText));\n    } catch (err) {\n      this.handleError_();\n      return;\n    }\n    this.handleLoad_(response);\n  } else {\n    this.handleError_();\n  }\n};\n\n\n/**\n * @private\n * @param {Event} event The error event.\n */\nCustomTile.prototype.onXHRError_ = function(event) {\n  this.handleError_();\n};\n\n\n/**\n * @override\n */\nCustomTile.prototype.load = function() {\n  if (this.preemptive_) {\n    this.loadInternal_();\n  }\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [preemptive=true]\n * If `true` the UTFGrid source loads the tiles based on their \"visibility\".\n * This improves the speed of response, but increases traffic.\n * Note that if set to `false`, you need to pass `true` as `opt_request`\n * to the `forDataAtCoordinateAndResolution` method otherwise no data\n * will ever be loaded.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {tileJSON} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {string} [url] TileJSON endpoint that provides the configuration for this source.\n * Request will be made through JSONP. If not provided, `tileJSON` must be configured.\n */\n\n\n/**\n * @classdesc\n * Layer source for UTFGrid interaction data loaded from TileJSON format.\n *\n * @constructor\n * @extends {module:ol/source/Tile}\n * @param {module:ol/source/UTFGrid~Options=} options Source options.\n * @api\n */\nconst UTFGrid = function(options) {\n  TileSource.call(this, {\n    projection: getProjection('EPSG:3857'),\n    state: SourceState.LOADING\n  });\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.preemptive_ = options.preemptive !== undefined ?\n    options.preemptive : true;\n\n  /**\n   * @private\n   * @type {!module:ol/Tile~UrlFunction}\n   */\n  this.tileUrlFunction_ = nullTileUrlFunction;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.template_ = undefined;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.jsonp_ = options.jsonp || false;\n\n  if (options.url) {\n    if (this.jsonp_) {\n      requestJSONP(options.url, this.handleTileJSONResponse.bind(this),\n        this.handleTileJSONError.bind(this));\n    } else {\n      const client = new XMLHttpRequest();\n      client.addEventListener('load', this.onXHRLoad_.bind(this));\n      client.addEventListener('error', this.onXHRError_.bind(this));\n      client.open('GET', options.url);\n      client.send();\n    }\n  } else if (options.tileJSON) {\n    this.handleTileJSONResponse(options.tileJSON);\n  } else {\n    assert(false, 51); // Either `url` or `tileJSON` options must be provided\n  }\n};\n\ninherits(UTFGrid, TileSource);\n\n\n/**\n * @private\n * @param {Event} event The load event.\n */\nUTFGrid.prototype.onXHRLoad_ = function(event) {\n  const client = /** @type {XMLHttpRequest} */ (event.target);\n  // status will be 0 for file:// urls\n  if (!client.status || client.status >= 200 && client.status < 300) {\n    let response;\n    try {\n      response = /** @type {TileJSON} */(JSON.parse(client.responseText));\n    } catch (err) {\n      this.handleTileJSONError();\n      return;\n    }\n    this.handleTileJSONResponse(response);\n  } else {\n    this.handleTileJSONError();\n  }\n};\n\n\n/**\n * @private\n * @param {Event} event The error event.\n */\nUTFGrid.prototype.onXHRError_ = function(event) {\n  this.handleTileJSONError();\n};\n\n\n/**\n * Return the template from TileJSON.\n * @return {string|undefined} The template from TileJSON.\n * @api\n */\nUTFGrid.prototype.getTemplate = function() {\n  return this.template_;\n};\n\n\n/**\n * Calls the callback (synchronously by default) with the available data\n * for given coordinate and resolution (or `null` if not yet loaded or\n * in case of an error).\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {function(*)} callback Callback.\n * @param {boolean=} opt_request If `true` the callback is always async.\n *                               The tile data is requested if not yet loaded.\n * @api\n */\nUTFGrid.prototype.forDataAtCoordinateAndResolution = function(\n  coordinate, resolution, callback, opt_request) {\n  if (this.tileGrid) {\n    const tileCoord = this.tileGrid.getTileCoordForCoordAndResolution(\n      coordinate, resolution);\n    const tile = /** @type {!module:ol/source/UTFGrid~CustomTile} */(this.getTile(\n      tileCoord[0], tileCoord[1], tileCoord[2], 1, this.getProjection()));\n    tile.forDataAtCoordinate(coordinate, callback, null, opt_request);\n  } else {\n    if (opt_request === true) {\n      setTimeout(function() {\n        callback(null);\n      }, 0);\n    } else {\n      callback(null);\n    }\n  }\n};\n\n\n/**\n * @protected\n */\nUTFGrid.prototype.handleTileJSONError = function() {\n  this.setState(SourceState.ERROR);\n};\n\n\n/**\n * TODO: very similar to ol/source/TileJSON#handleTileJSONResponse\n * @protected\n * @param {TileJSON} tileJSON Tile JSON.\n */\nUTFGrid.prototype.handleTileJSONResponse = function(tileJSON) {\n\n  const epsg4326Projection = getProjection('EPSG:4326');\n\n  const sourceProjection = this.getProjection();\n  let extent;\n  if (tileJSON.bounds !== undefined) {\n    const transform = getTransformFromProjections(\n      epsg4326Projection, sourceProjection);\n    extent = applyTransform(tileJSON.bounds, transform);\n  }\n\n  const minZoom = tileJSON.minzoom || 0;\n  const maxZoom = tileJSON.maxzoom || 22;\n  const tileGrid = createXYZ({\n    extent: extentFromProjection(sourceProjection),\n    maxZoom: maxZoom,\n    minZoom: minZoom\n  });\n  this.tileGrid = tileGrid;\n\n  this.template_ = tileJSON.template;\n\n  const grids = tileJSON.grids;\n  if (!grids) {\n    this.setState(SourceState.ERROR);\n    return;\n  }\n\n  this.tileUrlFunction_ = createFromTemplates(grids, tileGrid);\n\n  if (tileJSON.attribution !== undefined) {\n    const attributionExtent = extent !== undefined ?\n      extent : epsg4326Projection.getExtent();\n\n    this.setAttributions(function(frameState) {\n      if (intersects(attributionExtent, frameState.extent)) {\n        return [tileJSON.attribution];\n      }\n      return null;\n    });\n  }\n\n  this.setState(SourceState.READY);\n\n};\n\n\n/**\n * @inheritDoc\n */\nUTFGrid.prototype.getTile = function(z, x, y, pixelRatio, projection) {\n  const tileCoordKey = getKeyZXY(z, x, y);\n  if (this.tileCache.containsKey(tileCoordKey)) {\n    return (\n      /** @type {!module:ol/Tile} */ (this.tileCache.get(tileCoordKey))\n    );\n  } else {\n    const tileCoord = [z, x, y];\n    const urlTileCoord =\n        this.getTileCoordForTileUrlFunction(tileCoord, projection);\n    const tileUrl = this.tileUrlFunction_(urlTileCoord, pixelRatio, projection);\n    const tile = new CustomTile(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.tileGrid.getTileCoordExtent(tileCoord),\n      this.preemptive_,\n      this.jsonp_);\n    this.tileCache.set(tileCoordKey, tile);\n    return tile;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nUTFGrid.prototype.useTile = function(z, x, y) {\n  const tileCoordKey = getKeyZXY(z, x, y);\n  if (this.tileCache.containsKey(tileCoordKey)) {\n    this.tileCache.get(tileCoordKey);\n  }\n};\n\n\nexport default UTFGrid;\n","/**\n * @module ol/source/ImageMapGuide\n */\nimport {inherits} from '../index.js';\nimport ImageWrapper from '../Image.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getHeight, getWidth, scaleFromCenter} from '../extent.js';\nimport {assign} from '../obj.js';\nimport ImageSource, {defaultImageLoadFunction} from '../source/Image.js';\nimport {appendParams} from '../uri.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [url] The mapagent url.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {number} [displayDpi=96] The display resolution.\n * @property {number} [metersPerUnit=1] The meters-per-unit value.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {boolean} [useOverlay] If `true`, will use `GETDYNAMICMAPOVERLAYIMAGE`.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [ratio=1] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array.<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {module:ol/Image~LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {Object} [params] Additional parameters.\n */\n\n\n/**\n * @classdesc\n * Source for images from Mapguide servers\n *\n * @constructor\n * @fires ol/source/Image~ImageSourceEvent\n * @extends {module:ol/source/Image}\n * @param {module:ol/source/ImageMapGuide~Options=} options ImageMapGuide options.\n * @api\n */\nconst ImageMapGuide = function(options) {\n\n  ImageSource.call(this, {\n    projection: options.projection,\n    resolutions: options.resolutions\n  });\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.displayDpi_ = options.displayDpi !== undefined ?\n    options.displayDpi : 96;\n\n  /**\n   * @private\n   * @type {!Object}\n   */\n  this.params_ = options.params || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.url_ = options.url;\n\n  /**\n   * @private\n   * @type {module:ol/Image~LoadFunction}\n   */\n  this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n    options.imageLoadFunction : defaultImageLoadFunction;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.metersPerUnit_ = options.metersPerUnit !== undefined ?\n    options.metersPerUnit : 1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.ratio_ = options.ratio !== undefined ? options.ratio : 1;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.useOverlay_ = options.useOverlay !== undefined ?\n    options.useOverlay : false;\n\n  /**\n   * @private\n   * @type {module:ol/Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = 0;\n\n};\n\ninherits(ImageMapGuide, ImageSource);\n\n\n/**\n * Get the user-provided params, i.e. those passed to the constructor through\n * the \"params\" option, and possibly updated using the updateParams method.\n * @return {Object} Params.\n * @api\n */\nImageMapGuide.prototype.getParams = function() {\n  return this.params_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageMapGuide.prototype.getImageInternal = function(extent, resolution, pixelRatio, projection) {\n  resolution = this.findNearestResolution(resolution);\n  pixelRatio = this.hidpi_ ? pixelRatio : 1;\n\n  let image = this.image_;\n  if (image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), extent)) {\n    return image;\n  }\n\n  if (this.ratio_ != 1) {\n    extent = extent.slice();\n    scaleFromCenter(extent, this.ratio_);\n  }\n  const width = getWidth(extent) / resolution;\n  const height = getHeight(extent) / resolution;\n  const size = [width * pixelRatio, height * pixelRatio];\n\n  if (this.url_ !== undefined) {\n    const imageUrl = this.getUrl(this.url_, this.params_, extent, size,\n      projection);\n    image = new ImageWrapper(extent, resolution, pixelRatio,\n      imageUrl, this.crossOrigin_,\n      this.imageLoadFunction_);\n    listen(image, EventType.CHANGE,\n      this.handleImageChange, this);\n  } else {\n    image = null;\n  }\n  this.image_ = image;\n  this.renderedRevision_ = this.getRevision();\n\n  return image;\n};\n\n\n/**\n * Return the image load function of the source.\n * @return {module:ol/Image~LoadFunction} The image load function.\n * @api\n */\nImageMapGuide.prototype.getImageLoadFunction = function() {\n  return this.imageLoadFunction_;\n};\n\n\n/**\n * @param {module:ol/extent~Extent} extent The map extents.\n * @param {module:ol/size~Size} size The viewport size.\n * @param {number} metersPerUnit The meters-per-unit value.\n * @param {number} dpi The display resolution.\n * @return {number} The computed map scale.\n */\nfunction getScale(extent, size, metersPerUnit, dpi) {\n  const mcsW = getWidth(extent);\n  const mcsH = getHeight(extent);\n  const devW = size[0];\n  const devH = size[1];\n  const mpp = 0.0254 / dpi;\n  if (devH * mcsW > devW * mcsH) {\n    return mcsW * metersPerUnit / (devW * mpp); // width limited\n  } else {\n    return mcsH * metersPerUnit / (devH * mpp); // height limited\n  }\n}\n\n\n/**\n * Update the user-provided params.\n * @param {Object} params Params.\n * @api\n */\nImageMapGuide.prototype.updateParams = function(params) {\n  assign(this.params_, params);\n  this.changed();\n};\n\n\n/**\n * @param {string} baseUrl The mapagent url.\n * @param {Object.<string, string|number>} params Request parameters.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/size~Size} size Size.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {string} The mapagent map image request URL.\n */\nImageMapGuide.prototype.getUrl = function(baseUrl, params, extent, size, projection) {\n  const scale = getScale(extent, size,\n    this.metersPerUnit_, this.displayDpi_);\n  const center = getCenter(extent);\n  const baseParams = {\n    'OPERATION': this.useOverlay_ ? 'GETDYNAMICMAPOVERLAYIMAGE' : 'GETMAPIMAGE',\n    'VERSION': '2.0.0',\n    'LOCALE': 'en',\n    'CLIENTAGENT': 'ol/source/ImageMapGuide source',\n    'CLIP': '1',\n    'SETDISPLAYDPI': this.displayDpi_,\n    'SETDISPLAYWIDTH': Math.round(size[0]),\n    'SETDISPLAYHEIGHT': Math.round(size[1]),\n    'SETVIEWSCALE': scale,\n    'SETVIEWCENTERX': center[0],\n    'SETVIEWCENTERY': center[1]\n  };\n  assign(baseParams, params);\n  return appendParams(baseUrl, baseParams);\n};\n\n\n/**\n * Set the image load function of the MapGuide source.\n * @param {module:ol/Image~LoadFunction} imageLoadFunction Image load function.\n * @api\n */\nImageMapGuide.prototype.setImageLoadFunction = function(imageLoadFunction) {\n  this.image_ = null;\n  this.imageLoadFunction_ = imageLoadFunction;\n  this.changed();\n};\nexport default ImageMapGuide;\n","/**\n * @module ol/style/IconImage\n */\nimport {inherits} from '../index.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {listenOnce, unlistenByKey} from '../events.js';\nimport EventTarget from '../events/EventTarget.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\n\n/**\n * @constructor\n * @param {Image|HTMLCanvasElement} image Image.\n * @param {string|undefined} src Src.\n * @param {module:ol/size~Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/ImageState} imageState Image state.\n * @param {module:ol/color~Color} color Color.\n * @extends {module:ol/events/EventTarget}\n */\nconst IconImage = function(image, src, size, crossOrigin, imageState, color) {\n\n  EventTarget.call(this);\n\n  /**\n   * @private\n   * @type {Image|HTMLCanvasElement}\n   */\n  this.hitDetectionImage_ = null;\n\n  /**\n   * @private\n   * @type {Image|HTMLCanvasElement}\n   */\n  this.image_ = !image ? new Image() : image;\n\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = color ?\n    /** @type {HTMLCanvasElement} */ (document.createElement('CANVAS')) :\n    null;\n\n  /**\n   * @private\n   * @type {module:ol/color~Color}\n   */\n  this.color_ = color;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/ImageState}\n   */\n  this.imageState_ = imageState;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.size_ = size;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.tainting_ = false;\n  if (this.imageState_ == ImageState.LOADED) {\n    this.determineTainting_();\n  }\n\n};\n\ninherits(IconImage, EventTarget);\n\n\n/**\n * @param {Image|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {module:ol/size~Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/ImageState} imageState Image state.\n * @param {module:ol/color~Color} color Color.\n * @return {module:ol/style/IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\n\n/**\n * @private\n */\nIconImage.prototype.determineTainting_ = function() {\n  const context = createCanvasContext2D(1, 1);\n  try {\n    context.drawImage(this.image_, 0, 0);\n    context.getImageData(0, 0, 1, 1);\n  } catch (e) {\n    this.tainting_ = true;\n  }\n};\n\n\n/**\n * @private\n */\nIconImage.prototype.dispatchChangeEvent_ = function() {\n  this.dispatchEvent(EventType.CHANGE);\n};\n\n\n/**\n * @private\n */\nIconImage.prototype.handleImageError_ = function() {\n  this.imageState_ = ImageState.ERROR;\n  this.unlistenImage_();\n  this.dispatchChangeEvent_();\n};\n\n\n/**\n * @private\n */\nIconImage.prototype.handleImageLoad_ = function() {\n  this.imageState_ = ImageState.LOADED;\n  if (this.size_) {\n    this.image_.width = this.size_[0];\n    this.image_.height = this.size_[1];\n  }\n  this.size_ = [this.image_.width, this.image_.height];\n  this.unlistenImage_();\n  this.determineTainting_();\n  this.replaceColor_();\n  this.dispatchChangeEvent_();\n};\n\n\n/**\n * @param {number} pixelRatio Pixel ratio.\n * @return {Image|HTMLCanvasElement} Image or Canvas element.\n */\nIconImage.prototype.getImage = function(pixelRatio) {\n  return this.canvas_ ? this.canvas_ : this.image_;\n};\n\n\n/**\n * @return {module:ol/ImageState} Image state.\n */\nIconImage.prototype.getImageState = function() {\n  return this.imageState_;\n};\n\n\n/**\n * @param {number} pixelRatio Pixel ratio.\n * @return {Image|HTMLCanvasElement} Image element.\n */\nIconImage.prototype.getHitDetectionImage = function(pixelRatio) {\n  if (!this.hitDetectionImage_) {\n    if (this.tainting_) {\n      const width = this.size_[0];\n      const height = this.size_[1];\n      const context = createCanvasContext2D(width, height);\n      context.fillRect(0, 0, width, height);\n      this.hitDetectionImage_ = context.canvas;\n    } else {\n      this.hitDetectionImage_ = this.image_;\n    }\n  }\n  return this.hitDetectionImage_;\n};\n\n\n/**\n * @return {module:ol/size~Size} Image size.\n */\nIconImage.prototype.getSize = function() {\n  return this.size_;\n};\n\n\n/**\n * @return {string|undefined} Image src.\n */\nIconImage.prototype.getSrc = function() {\n  return this.src_;\n};\n\n\n/**\n * Load not yet loaded URI.\n */\nIconImage.prototype.load = function() {\n  if (this.imageState_ == ImageState.IDLE) {\n    this.imageState_ = ImageState.LOADING;\n    this.imageListenerKeys_ = [\n      listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    try {\n      this.image_.src = this.src_;\n    } catch (e) {\n      this.handleImageError_();\n    }\n  }\n};\n\n\n/**\n * @private\n */\nIconImage.prototype.replaceColor_ = function() {\n  if (this.tainting_ || this.color_ === null) {\n    return;\n  }\n\n  this.canvas_.width = this.image_.width;\n  this.canvas_.height = this.image_.height;\n\n  const ctx = this.canvas_.getContext('2d');\n  ctx.drawImage(this.image_, 0, 0);\n\n  const imgData = ctx.getImageData(0, 0, this.image_.width, this.image_.height);\n  const data = imgData.data;\n  const r = this.color_[0] / 255.0;\n  const g = this.color_[1] / 255.0;\n  const b = this.color_[2] / 255.0;\n\n  for (let i = 0, ii = data.length; i < ii; i += 4) {\n    data[i] *= r;\n    data[i + 1] *= g;\n    data[i + 2] *= b;\n  }\n  ctx.putImageData(imgData, 0, 0);\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\nIconImage.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default IconImage;\n","/**\n * @module ol/interaction/Extent\n */\nimport {inherits} from '../index.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {squaredDistanceToSegment, closestOnSegment, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\nimport Event from '../events/Event.js';\nimport {boundingExtent, getArea} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/extent~Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [boxStyle]\n * Style for the drawn extent box. Defaults to\n * {@link module:ol/style/Style~createEditing()['Polygon']}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to\n * {@link module:ol/style/Style~createEditing()['Point']}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n\n\n/**\n * @enum {string}\n */\nconst ExtentEventType = {\n  /**\n   * Triggered after the extent is changed\n   * @event module:ol/interaction/Extent~ExtentEventType#extentchanged\n   * @api\n   */\n  EXTENTCHANGED: 'extentchanged'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\n * instances of this type.\n *\n * @constructor\n * @param {module:ol/extent~Extent} extent the new extent\n * @extends {module:ol/events/Event}\n */\nconst ExtentInteractionEvent = function(extent) {\n  Event.call(this, ExtentEventType.EXTENTCHANGED);\n\n  /**\n   * The current extent.\n   * @type {module:ol/extent~Extent}\n   * @api\n   */\n  this.extent = extent;\n\n};\ninherits(ExtentInteractionEvent, Event);\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @fires module:ol/interaction/Extent~Event\n * @param {module:ol/interaction/Extent~Options=} opt_options Options.\n * @api\n */\nconst ExtentInteraction = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * Extent of the drawn box\n   * @type {module:ol/extent~Extent}\n   * @private\n   */\n  this.extent_ = null;\n\n  /**\n   * Handler for pointer move events\n   * @type {function (module:ol/coordinate~Coordinate): module:ol/extent~Extent|null}\n   * @private\n   */\n  this.pointerHandler_ = null;\n\n  /**\n   * Pixel threshold to snap to extent\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * Is the pointer snapped to an extent vertex\n   * @type {boolean}\n   * @private\n   */\n  this.snappedToVertex_ = false;\n\n  /**\n   * Feature for displaying the visible extent\n   * @type {module:ol/Feature}\n   * @private\n   */\n  this.extentFeature_ = null;\n\n  /**\n   * Feature for displaying the visible pointer\n   * @type {module:ol/Feature}\n   * @private\n   */\n  this.vertexFeature_ = null;\n\n  if (!opt_options) {\n    opt_options = {};\n  }\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleEvent: handleEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  /**\n   * Layer for the extentFeature\n   * @type {module:ol/layer/Vector}\n   * @private\n   */\n  this.extentOverlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: !!opt_options.wrapX\n    }),\n    style: opt_options.boxStyle ? opt_options.boxStyle : getDefaultExtentStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * Layer for the vertexFeature\n   * @type {module:ol/layer/Vector}\n   * @private\n   */\n  this.vertexOverlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: !!opt_options.wrapX\n    }),\n    style: opt_options.pointerStyle ? opt_options.pointerStyle : getDefaultPointerStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  if (opt_options.extent) {\n    this.setExtent(opt_options.extent);\n  }\n};\n\ninherits(ExtentInteraction, PointerInteraction);\n\n/**\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Event.\n * @return {boolean} Propagate event?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n  //display pointer (if not dragging)\n  if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE && !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n  //call pointer to determine up/down/drag\n  handlePointerEvent.call(this, mapBrowserEvent);\n  //return false to stop propagation\n  return false;\n}\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Event handled?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  const pixel = mapBrowserEvent.pixel;\n  const map = mapBrowserEvent.map;\n\n  const extent = this.getExtent();\n  let vertex = this.snapToVertex_(pixel, map);\n\n  //find the extent corner opposite the passed corner\n  const getOpposingPoint = function(point) {\n    let x_ = null;\n    let y_ = null;\n    if (point[0] == extent[0]) {\n      x_ = extent[2];\n    } else if (point[0] == extent[2]) {\n      x_ = extent[0];\n    }\n    if (point[1] == extent[1]) {\n      y_ = extent[3];\n    } else if (point[1] == extent[3]) {\n      y_ = extent[1];\n    }\n    if (x_ !== null && y_ !== null) {\n      return [x_, y_];\n    }\n    return null;\n  };\n  if (vertex && extent) {\n    const x = (vertex[0] == extent[0] || vertex[0] == extent[2]) ? vertex[0] : null;\n    const y = (vertex[1] == extent[1] || vertex[1] == extent[3]) ? vertex[1] : null;\n\n    //snap to point\n    if (x !== null && y !== null) {\n      this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n    //snap to edge\n    } else if (x !== null) {\n      this.pointerHandler_ = getEdgeHandler(\n        getOpposingPoint([x, extent[1]]),\n        getOpposingPoint([x, extent[3]])\n      );\n    } else if (y !== null) {\n      this.pointerHandler_ = getEdgeHandler(\n        getOpposingPoint([extent[0], y]),\n        getOpposingPoint([extent[2], y])\n      );\n    }\n  //no snap - new bbox\n  } else {\n    vertex = map.getCoordinateFromPixel(pixel);\n    this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n    this.pointerHandler_ = getPointHandler(vertex);\n  }\n  return true; //event handled; start downup sequence\n}\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Event handled?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (this.pointerHandler_) {\n    const pixelCoordinate = mapBrowserEvent.coordinate;\n    this.setExtent(this.pointerHandler_(pixelCoordinate));\n    this.createOrUpdatePointerFeature_(pixelCoordinate);\n  }\n  return true;\n}\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  this.pointerHandler_ = null;\n  //If bbox is zero area, set to null;\n  const extent = this.getExtent();\n  if (!extent || getArea(extent) === 0) {\n    this.setExtent(null);\n  }\n  return false; //Stop handling downup sequence\n}\n\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {module:ol/style/Style~StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POLYGON];\n  };\n}\n\n/**\n * Returns the default style for the pointer\n *\n * @return {module:ol/style/Style~StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\n/**\n * @param {module:ol/coordinate~Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @returns {function (module:ol/coordinate~Coordinate): module:ol/extent~Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n  return function(point) {\n    return boundingExtent([fixedPoint, point]);\n  };\n}\n\n/**\n * @param {module:ol/coordinate~Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {module:ol/coordinate~Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @returns {function (module:ol/coordinate~Coordinate): module:ol/extent~Extent|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n  if (fixedP1[0] == fixedP2[0]) {\n    return function(point) {\n      return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n    };\n  } else if (fixedP1[1] == fixedP2[1]) {\n    return function(point) {\n      return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n    };\n  } else {\n    return null;\n  }\n}\n\n/**\n * @param {module:ol/extent~Extent} extent extent\n * @returns {Array<Array<module:ol/coordinate~Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n  return [\n    [[extent[0], extent[1]], [extent[0], extent[3]]],\n    [[extent[0], extent[3]], [extent[2], extent[3]]],\n    [[extent[2], extent[3]], [extent[2], extent[1]]],\n    [[extent[2], extent[1]], [extent[0], extent[1]]]\n  ];\n}\n\n/**\n * @param {module:ol~Pixel} pixel cursor location\n * @param {module:ol/PluggableMap} map map\n * @returns {module:ol/coordinate~Coordinate|null} snapped vertex on extent\n * @private\n */\nExtentInteraction.prototype.snapToVertex_ = function(pixel, map) {\n  const pixelCoordinate = map.getCoordinateFromPixel(pixel);\n  const sortByDistance = function(a, b) {\n    return squaredDistanceToSegment(pixelCoordinate, a) -\n        squaredDistanceToSegment(pixelCoordinate, b);\n  };\n  const extent = this.getExtent();\n  if (extent) {\n    //convert extents to line segments and find the segment closest to pixelCoordinate\n    const segments = getSegments(extent);\n    segments.sort(sortByDistance);\n    const closestSegment = segments[0];\n\n    let vertex = (closestOnSegment(pixelCoordinate,\n      closestSegment));\n    const vertexPixel = map.getPixelFromCoordinate(vertex);\n\n    //if the distance is within tolerance, snap to the segment\n    if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n      //test if we should further snap to a vertex\n      const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n      const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n      const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      this.snappedToVertex_ = dist <= this.pixelTolerance_;\n      if (this.snappedToVertex_) {\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n      }\n      return vertex;\n    }\n  }\n  return null;\n};\n\n/**\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent pointer move event\n * @private\n */\nExtentInteraction.prototype.handlePointerMove_ = function(mapBrowserEvent) {\n  const pixel = mapBrowserEvent.pixel;\n  const map = mapBrowserEvent.map;\n\n  let vertex = this.snapToVertex_(pixel, map);\n  if (!vertex) {\n    vertex = map.getCoordinateFromPixel(pixel);\n  }\n  this.createOrUpdatePointerFeature_(vertex);\n};\n\n/**\n * @param {module:ol/extent~Extent} extent extent\n * @returns {module:ol/Feature} extent as featrue\n * @private\n */\nExtentInteraction.prototype.createOrUpdateExtentFeature_ = function(extent) {\n  let extentFeature = this.extentFeature_;\n\n  if (!extentFeature) {\n    if (!extent) {\n      extentFeature = new Feature({});\n    } else {\n      extentFeature = new Feature(polygonFromExtent(extent));\n    }\n    this.extentFeature_ = extentFeature;\n    this.extentOverlay_.getSource().addFeature(extentFeature);\n  } else {\n    if (!extent) {\n      extentFeature.setGeometry(undefined);\n    } else {\n      extentFeature.setGeometry(polygonFromExtent(extent));\n    }\n  }\n  return extentFeature;\n};\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} vertex location of feature\n * @returns {module:ol/Feature} vertex as feature\n * @private\n */\nExtentInteraction.prototype.createOrUpdatePointerFeature_ = function(vertex) {\n  let vertexFeature = this.vertexFeature_;\n  if (!vertexFeature) {\n    vertexFeature = new Feature(new Point(vertex));\n    this.vertexFeature_ = vertexFeature;\n    this.vertexOverlay_.getSource().addFeature(vertexFeature);\n  } else {\n    const geometry = /** @type {module:ol/geom/Point} */ (vertexFeature.getGeometry());\n    geometry.setCoordinates(vertex);\n  }\n  return vertexFeature;\n};\n\n\n/**\n * @inheritDoc\n */\nExtentInteraction.prototype.setMap = function(map) {\n  this.extentOverlay_.setMap(map);\n  this.vertexOverlay_.setMap(map);\n  PointerInteraction.prototype.setMap.call(this, map);\n};\n\n/**\n * Returns the current drawn extent in the view projection\n *\n * @return {module:ol/extent~Extent} Drawn extent in the view projection.\n * @api\n */\nExtentInteraction.prototype.getExtent = function() {\n  return this.extent_;\n};\n\n/**\n * Manually sets the drawn extent, using the view projection.\n *\n * @param {module:ol/extent~Extent} extent Extent\n * @api\n */\nExtentInteraction.prototype.setExtent = function(extent) {\n  //Null extent means no bbox\n  this.extent_ = extent ? extent : null;\n  this.createOrUpdateExtentFeature_(extent);\n  this.dispatchEvent(new ExtentInteractionEvent(this.extent_));\n};\n\n\nexport default ExtentInteraction;\n","/**\n * @module ol/control/Zoom\n */\nimport {inherits} from '../index.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|Element} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Element} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {Element|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @constructor\n * @extends {module:ol/control/Control}\n * @param {module:ol/control/Zoom~Options=} opt_options Zoom options.\n * @api\n */\nconst Zoom = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  const className = options.className !== undefined ? options.className : 'ol-zoom';\n\n  const delta = options.delta !== undefined ? options.delta : 1;\n\n  const zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n  const zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n  const zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n    options.zoomInTipLabel : 'Zoom in';\n  const zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n    options.zoomOutTipLabel : 'Zoom out';\n\n  const inElement = document.createElement('button');\n  inElement.className = className + '-in';\n  inElement.setAttribute('type', 'button');\n  inElement.title = zoomInTipLabel;\n  inElement.appendChild(\n    typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel\n  );\n\n  listen(inElement, EventType.CLICK,\n    Zoom.prototype.handleClick_.bind(this, delta));\n\n  const outElement = document.createElement('button');\n  outElement.className = className + '-out';\n  outElement.setAttribute('type', 'button');\n  outElement.title = zoomOutTipLabel;\n  outElement.appendChild(\n    typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel\n  );\n\n  listen(outElement, EventType.CLICK,\n    Zoom.prototype.handleClick_.bind(this, -delta));\n\n  const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n  const element = document.createElement('div');\n  element.className = cssClasses;\n  element.appendChild(inElement);\n  element.appendChild(outElement);\n\n  Control.call(this, {\n    element: element,\n    target: options.target\n  });\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n};\n\ninherits(Zoom, Control);\n\n\n/**\n * @param {number} delta Zoom delta.\n * @param {Event} event The event to handle\n * @private\n */\nZoom.prototype.handleClick_ = function(delta, event) {\n  event.preventDefault();\n  this.zoomByDelta_(delta);\n};\n\n\n/**\n * @param {number} delta Zoom delta.\n * @private\n */\nZoom.prototype.zoomByDelta_ = function(delta) {\n  const map = this.getMap();\n  const view = map.getView();\n  if (!view) {\n    // the map does not have a view, so we can't act\n    // upon it\n    return;\n  }\n  const currentResolution = view.getResolution();\n  if (currentResolution) {\n    const newResolution = view.constrainResolution(currentResolution, delta);\n    if (this.duration_ > 0) {\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      view.animate({\n        resolution: newResolution,\n        duration: this.duration_,\n        easing: easeOut\n      });\n    } else {\n      view.setResolution(newResolution);\n    }\n  }\n};\nexport default Zoom;\n","/**\n * @module ol/control/Rotate\n */\n\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {inherits} from '../index.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|Element} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(module:ol/MapEvent)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {Element|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @constructor\n * @extends {module:ol/control/Control}\n * @param {module:ol/control/Rotate~Options=} opt_options Rotate options.\n * @api\n */\nconst Rotate = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  const className = options.className !== undefined ? options.className : 'ol-rotate';\n\n  const label = options.label !== undefined ? options.label : '\\u21E7';\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  this.label_ = null;\n\n  if (typeof label === 'string') {\n    this.label_ = document.createElement('span');\n    this.label_.className = 'ol-compass';\n    this.label_.textContent = label;\n  } else {\n    this.label_ = label;\n    this.label_.classList.add('ol-compass');\n  }\n\n  const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n  const button = document.createElement('button');\n  button.className = className + '-reset';\n  button.setAttribute('type', 'button');\n  button.title = tipLabel;\n  button.appendChild(this.label_);\n\n  listen(button, EventType.CLICK,\n    Rotate.prototype.handleClick_, this);\n\n  const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n  const element = document.createElement('div');\n  element.className = cssClasses;\n  element.appendChild(button);\n\n  this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n  Control.call(this, {\n    element: element,\n    render: options.render || render,\n    target: options.target\n  });\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = undefined;\n\n  if (this.autoHide_) {\n    this.element.classList.add(CLASS_HIDDEN);\n  }\n\n};\n\ninherits(Rotate, Control);\n\n\n/**\n * @param {Event} event The event to handle\n * @private\n */\nRotate.prototype.handleClick_ = function(event) {\n  event.preventDefault();\n  if (this.callResetNorth_ !== undefined) {\n    this.callResetNorth_();\n  } else {\n    this.resetNorth_();\n  }\n};\n\n\n/**\n * @private\n */\nRotate.prototype.resetNorth_ = function() {\n  const map = this.getMap();\n  const view = map.getView();\n  if (!view) {\n    // the map does not have a view, so we can't act\n    // upon it\n    return;\n  }\n  if (view.getRotation() !== undefined) {\n    if (this.duration_ > 0) {\n      view.animate({\n        rotation: 0,\n        duration: this.duration_,\n        easing: easeOut\n      });\n    } else {\n      view.setRotation(0);\n    }\n  }\n};\n\n\n/**\n * Update the rotate control element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/Rotate}\n * @api\n */\nexport function render(mapEvent) {\n  const frameState = mapEvent.frameState;\n  if (!frameState) {\n    return;\n  }\n  const rotation = frameState.viewState.rotation;\n  if (rotation != this.rotation_) {\n    const transform = 'rotate(' + rotation + 'rad)';\n    if (this.autoHide_) {\n      const contains = this.element.classList.contains(CLASS_HIDDEN);\n      if (!contains && rotation === 0) {\n        this.element.classList.add(CLASS_HIDDEN);\n      } else if (contains && rotation !== 0) {\n        this.element.classList.remove(CLASS_HIDDEN);\n      }\n    }\n    this.label_.style.msTransform = transform;\n    this.label_.style.webkitTransform = transform;\n    this.label_.style.transform = transform;\n  }\n  this.rotation_ = rotation;\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Attribution\n */\nimport {inherits} from '../index.js';\nimport {equals} from '../array.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {Element|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible=true] Specify if attributions can\n * be collapsed. If you use an OSM source, should be set to `false` — see\n * {@link https://www.openstreetmap.org/copyright OSM Copyright} —\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Element} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(module:ol/MapEvent)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @constructor\n * @extends {module:ol/control/Control}\n * @param {module:ol/control/Attribution~Options=} opt_options Attribution options.\n * @api\n */\nconst Attribution = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.ulElement_ = document.createElement('UL');\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.collapsible_ = options.collapsible !== undefined ?\n    options.collapsible : true;\n\n  if (!this.collapsible_) {\n    this.collapsed_ = false;\n  }\n\n  const className = options.className !== undefined ? options.className : 'ol-attribution';\n\n  const tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n  const collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n  if (typeof collapseLabel === 'string') {\n    /**\n     * @private\n     * @type {Element}\n     */\n    this.collapseLabel_ = document.createElement('span');\n    this.collapseLabel_.textContent = collapseLabel;\n  } else {\n    this.collapseLabel_ = collapseLabel;\n  }\n\n  const label = options.label !== undefined ? options.label : 'i';\n\n  if (typeof label === 'string') {\n    /**\n     * @private\n     * @type {Element}\n     */\n    this.label_ = document.createElement('span');\n    this.label_.textContent = label;\n  } else {\n    this.label_ = label;\n  }\n\n\n  const activeLabel = (this.collapsible_ && !this.collapsed_) ?\n    this.collapseLabel_ : this.label_;\n  const button = document.createElement('button');\n  button.setAttribute('type', 'button');\n  button.title = tipLabel;\n  button.appendChild(activeLabel);\n\n  listen(button, EventType.CLICK, this.handleClick_, this);\n\n  const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n  const element = document.createElement('div');\n  element.className = cssClasses;\n  element.appendChild(this.ulElement_);\n  element.appendChild(button);\n\n  Control.call(this, {\n    element: element,\n    render: options.render || render,\n    target: options.target\n  });\n\n  /**\n   * A list of currently rendered resolutions.\n   * @type {Array.<string>}\n   * @private\n   */\n  this.renderedAttributions_ = [];\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderedVisible_ = true;\n\n};\n\ninherits(Attribution, Control);\n\n\n/**\n * Get a list of visible attributions.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @return {Array.<string>} Attributions.\n * @private\n */\nAttribution.prototype.getSourceAttributions_ = function(frameState) {\n  /**\n   * Used to determine if an attribution already exists.\n   * @type {!Object.<string, boolean>}\n   */\n  const lookup = {};\n\n  /**\n   * A list of visible attributions.\n   * @type {Array.<string>}\n   */\n  const visibleAttributions = [];\n\n  const layerStatesArray = frameState.layerStatesArray;\n  const resolution = frameState.viewState.resolution;\n  for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n    const layerState = layerStatesArray[i];\n    if (!visibleAtResolution(layerState, resolution)) {\n      continue;\n    }\n\n    const source = layerState.layer.getSource();\n    if (!source) {\n      continue;\n    }\n\n    const attributionGetter = source.getAttributions();\n    if (!attributionGetter) {\n      continue;\n    }\n\n    const attributions = attributionGetter(frameState);\n    if (!attributions) {\n      continue;\n    }\n\n    if (Array.isArray(attributions)) {\n      for (let j = 0, jj = attributions.length; j < jj; ++j) {\n        if (!(attributions[j] in lookup)) {\n          visibleAttributions.push(attributions[j]);\n          lookup[attributions[j]] = true;\n        }\n      }\n    } else {\n      if (!(attributions in lookup)) {\n        visibleAttributions.push(attributions);\n        lookup[attributions] = true;\n      }\n    }\n  }\n  return visibleAttributions;\n};\n\n\n/**\n * Update the attribution element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/Attribution}\n * @api\n */\nexport function render(mapEvent) {\n  this.updateElement_(mapEvent.frameState);\n}\n\n\n/**\n * @private\n * @param {?module:ol/PluggableMap~FrameState} frameState Frame state.\n */\nAttribution.prototype.updateElement_ = function(frameState) {\n  if (!frameState) {\n    if (this.renderedVisible_) {\n      this.element.style.display = 'none';\n      this.renderedVisible_ = false;\n    }\n    return;\n  }\n\n  const attributions = this.getSourceAttributions_(frameState);\n\n  const visible = attributions.length > 0;\n  if (this.renderedVisible_ != visible) {\n    this.element.style.display = visible ? '' : 'none';\n    this.renderedVisible_ = visible;\n  }\n\n  if (equals(attributions, this.renderedAttributions_)) {\n    return;\n  }\n\n  removeChildren(this.ulElement_);\n\n  // append the attributions\n  for (let i = 0, ii = attributions.length; i < ii; ++i) {\n    const element = document.createElement('LI');\n    element.innerHTML = attributions[i];\n    this.ulElement_.appendChild(element);\n  }\n\n  this.renderedAttributions_ = attributions;\n};\n\n\n/**\n * @param {Event} event The event to handle\n * @private\n */\nAttribution.prototype.handleClick_ = function(event) {\n  event.preventDefault();\n  this.handleToggle_();\n};\n\n\n/**\n * @private\n */\nAttribution.prototype.handleToggle_ = function() {\n  this.element.classList.toggle(CLASS_COLLAPSED);\n  if (this.collapsed_) {\n    replaceNode(this.collapseLabel_, this.label_);\n  } else {\n    replaceNode(this.label_, this.collapseLabel_);\n  }\n  this.collapsed_ = !this.collapsed_;\n};\n\n\n/**\n * Return `true` if the attribution is collapsible, `false` otherwise.\n * @return {boolean} True if the widget is collapsible.\n * @api\n */\nAttribution.prototype.getCollapsible = function() {\n  return this.collapsible_;\n};\n\n\n/**\n * Set whether the attribution should be collapsible.\n * @param {boolean} collapsible True if the widget is collapsible.\n * @api\n */\nAttribution.prototype.setCollapsible = function(collapsible) {\n  if (this.collapsible_ === collapsible) {\n    return;\n  }\n  this.collapsible_ = collapsible;\n  this.element.classList.toggle('ol-uncollapsible');\n  if (!collapsible && this.collapsed_) {\n    this.handleToggle_();\n  }\n};\n\n\n/**\n * Collapse or expand the attribution according to the passed parameter. Will\n * not do anything if the attribution isn't collapsible or if the current\n * collapsed state is already the one requested.\n * @param {boolean} collapsed True if the widget is collapsed.\n * @api\n */\nAttribution.prototype.setCollapsed = function(collapsed) {\n  if (!this.collapsible_ || this.collapsed_ === collapsed) {\n    return;\n  }\n  this.handleToggle_();\n};\n\n\n/**\n * Return `true` when the attribution is currently collapsed or `false`\n * otherwise.\n * @return {boolean} True if the widget is collapsed.\n * @api\n */\nAttribution.prototype.getCollapsed = function() {\n  return this.collapsed_;\n};\nexport default Attribution;\n","/**\n * @module ol/control/util\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {module:ol/control/Attribution~Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {module:ol/control/Rotate~Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {module:ol/control/Zoom~Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {module:ol/control/util~DefaultsOptions=} opt_options\n * Defaults options.\n * @return {module:ol/Collection.<module:ol/control/Control>}\n * Controls.\n * @function module:ol/control.defaults\n * @api\n */\nexport function defaults(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl = options.attribution !== undefined ?\n    options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/geom/flat/geodesic\n */\nimport {squaredSegmentDistance, toRadians, toDegrees} from '../../math.js';\nimport {get as getProjection, getTransform} from '../../proj.js';\n\n\n/**\n * @param {function(number): module:ol/coordinate~Coordinate} interpolate Interpolate function.\n * @param {module:ol/proj~TransformFunction} transform Transform from longitude/latitude to\n *     projected coordinates.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array.<number>} Flat coordinates.\n */\nfunction line(interpolate, transform, squaredTolerance) {\n  // FIXME reduce garbage generation\n  // FIXME optimize stack operations\n\n  /** @type {Array.<number>} */\n  const flatCoordinates = [];\n\n  let geoA = interpolate(0);\n  let geoB = interpolate(1);\n\n  let a = transform(geoA);\n  let b = transform(geoB);\n\n  /** @type {Array.<module:ol/coordinate~Coordinate>} */\n  const geoStack = [geoB, geoA];\n  /** @type {Array.<module:ol/coordinate~Coordinate>} */\n  const stack = [b, a];\n  /** @type {Array.<number>} */\n  const fractionStack = [1, 0];\n\n  /** @type {!Object.<string, boolean>} */\n  const fractions = {};\n\n  let maxIterations = 1e5;\n  let geoM, m, fracA, fracB, fracM, key;\n\n  while (--maxIterations > 0 && fractionStack.length > 0) {\n    // Pop the a coordinate off the stack\n    fracA = fractionStack.pop();\n    geoA = geoStack.pop();\n    a = stack.pop();\n    // Add the a coordinate if it has not been added yet\n    key = fracA.toString();\n    if (!(key in fractions)) {\n      flatCoordinates.push(a[0], a[1]);\n      fractions[key] = true;\n    }\n    // Pop the b coordinate off the stack\n    fracB = fractionStack.pop();\n    geoB = geoStack.pop();\n    b = stack.pop();\n    // Find the m point between the a and b coordinates\n    fracM = (fracA + fracB) / 2;\n    geoM = interpolate(fracM);\n    m = transform(geoM);\n    if (squaredSegmentDistance(m[0], m[1], a[0], a[1],\n      b[0], b[1]) < squaredTolerance) {\n      // If the m point is sufficiently close to the straight line, then we\n      // discard it.  Just use the b coordinate and move on to the next line\n      // segment.\n      flatCoordinates.push(b[0], b[1]);\n      key = fracB.toString();\n      fractions[key] = true;\n    } else {\n      // Otherwise, we need to subdivide the current line segment.  Split it\n      // into two and push the two line segments onto the stack.\n      fractionStack.push(fracB, fracM, fracM, fracA);\n      stack.push(b, m, m, a);\n      geoStack.push(geoB, geoM, geoM, geoA);\n    }\n  }\n\n  return flatCoordinates;\n}\n\n\n/**\n * Generate a great-circle arcs between two lat/lon points.\n * @param {number} lon1 Longitude 1 in degrees.\n * @param {number} lat1 Latitude 1 in degrees.\n * @param {number} lon2 Longitude 2 in degrees.\n * @param {number} lat2 Latitude 2 in degrees.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array.<number>} Flat coordinates.\n */\nexport function greatCircleArc(lon1, lat1, lon2, lat2, projection, squaredTolerance) {\n  const geoProjection = getProjection('EPSG:4326');\n\n  const cosLat1 = Math.cos(toRadians(lat1));\n  const sinLat1 = Math.sin(toRadians(lat1));\n  const cosLat2 = Math.cos(toRadians(lat2));\n  const sinLat2 = Math.sin(toRadians(lat2));\n  const cosDeltaLon = Math.cos(toRadians(lon2 - lon1));\n  const sinDeltaLon = Math.sin(toRadians(lon2 - lon1));\n  const d = sinLat1 * sinLat2 + cosLat1 * cosLat2 * cosDeltaLon;\n\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {module:ol/coordinate~Coordinate} Coordinate.\n     */\n    function(frac) {\n      if (1 <= d) {\n        return [lon2, lat2];\n      }\n      const D = frac * Math.acos(d);\n      const cosD = Math.cos(D);\n      const sinD = Math.sin(D);\n      const y = sinDeltaLon * cosLat2;\n      const x = cosLat1 * sinLat2 - sinLat1 * cosLat2 * cosDeltaLon;\n      const theta = Math.atan2(y, x);\n      const lat = Math.asin(sinLat1 * cosD + cosLat1 * sinD * Math.cos(theta));\n      const lon = toRadians(lon1) +\n            Math.atan2(Math.sin(theta) * sinD * cosLat1,\n              cosD - sinLat1 * Math.sin(lat));\n      return [toDegrees(lon), toDegrees(lat)];\n    }, getTransform(geoProjection, projection), squaredTolerance);\n}\n\n\n/**\n * Generate a meridian (line at constant longitude).\n * @param {number} lon Longitude.\n * @param {number} lat1 Latitude 1.\n * @param {number} lat2 Latitude 2.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array.<number>} Flat coordinates.\n */\nexport function meridian(lon, lat1, lat2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {module:ol/coordinate~Coordinate} Coordinate.\n     */\n    function(frac) {\n      return [lon, lat1 + ((lat2 - lat1) * frac)];\n    },\n    getTransform(epsg4326Projection, projection), squaredTolerance);\n}\n\n\n/**\n * Generate a parallel (line at constant latitude).\n * @param {number} lat Latitude.\n * @param {number} lon1 Longitude 1.\n * @param {number} lon2 Longitude 2.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array.<number>} Flat coordinates.\n */\nexport function parallel(lat, lon1, lon2, projection, squaredTolerance) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {module:ol/coordinate~Coordinate} Coordinate.\n     */\n    function(frac) {\n      return [lon1 + ((lon2 - lon1) * frac), lat];\n    },\n    getTransform(epsg4326Projection, projection), squaredTolerance);\n}\n","/**\n * @module ol/Graticule\n */\nimport {degreesToStringHDMS} from './coordinate.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {intersects, getCenter} from './extent.js';\nimport GeometryLayout from './geom/GeometryLayout.js';\nimport LineString from './geom/LineString.js';\nimport Point from './geom/Point.js';\nimport {meridian, parallel} from './geom/flat/geodesic.js';\nimport {clamp} from './math.js';\nimport {get as getProjection, equivalent as equivalentProjection, getTransform, transformExtent} from './proj.js';\nimport RenderEventType from './render/EventType.js';\nimport Fill from './style/Fill.js';\nimport Stroke from './style/Stroke.js';\nimport Text from './style/Text.js';\n\n\n/**\n * @type {module:ol/style/Stroke}\n * @private\n * @const\n */\nconst DEFAULT_STROKE_STYLE = new Stroke({\n  color: 'rgba(0,0,0,0.2)'\n});\n\n/**\n * TODO can be configurable\n * @type {Array.<number>}\n * @private\n */\nconst INTERVALS = [\n  90, 45, 30, 20, 10, 5, 2, 1, 0.5, 0.2, 0.1, 0.05, 0.01, 0.005, 0.002, 0.001\n];\n\n/**\n * @typedef {Object} GraticuleLabelDataType\n * @property {module:ol/geom/Point} geom\n * @property {string} text\n */\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/PluggableMap} [map] Reference to an\n * {@link module:ol/Map~Map} object.\n * @property {number} [maxLines=100] The maximum number of meridians and\n * parallels from the center of the map. The default value of 100 means that at\n * most 200 meridians and 200 parallels will be displayed. The default value is\n * appropriate for conformal projections like Spherical Mercator. If you\n * increase the value, more lines will be drawn and the drawing performance will\n * decrease.\n * @property {module:ol/style/Stroke} [strokeStyle='rgba(0,0,0,0.2)'] The\n * stroke style to use for drawing the graticule. If not provided, a not fully\n * opaque black will be used.\n * @property {number} [targetSize=100] The target size of the graticule cells,\n * in pixels.\n * @property {boolean} [showLabels=false] Render a label with the respective\n * latitude/longitude for each graticule line.\n * @property {function(number):string} [lonLabelFormatter] Label formatter for\n * longitudes. This function is called with the longitude as argument, and\n * should return a formatted string representing the longitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {function(number):string} [latLabelFormatter] Label formatter for\n * latitudes. This function is called with the latitude as argument, and\n * should return a formatted string representing the latitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {number} [lonLabelPosition=0] Longitude label position in fractions\n * (0..1) of view extent. 0 means at the bottom of the viewport, 1 means at the\n * top.\n * @property {number} [latLabelPosition=1] Latitude label position in fractions\n * (0..1) of view extent. 0 means at the left of the viewport, 1 means at the\n * right.\n * @property {module:ol/style/Text} [lonLabelStyle] Longitude label text\n * style. If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textBaseline: 'bottom',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: new Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textBaseline` configuration will not work well for\n * `lonLabelPosition` configurations that position labels close to the top of\n * the viewport.\n * @property {module:ol/style/Text} [latLabelStyle] Latitude label text style.\n * If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textAlign: 'end',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textAlign` configuration will not work well for\n * `latLabelPosition` configurations that position labels close to the left of\n * the viewport.\n */\n\n\n/**\n * Render a grid for a coordinate system on a map.\n * @constructor\n * @param {module:ol/Graticule~Options=} opt_options Options.\n * @api\n */\nconst Graticule = function(opt_options) {\n  const options = opt_options || {};\n\n  /**\n   * @type {module:ol/PluggableMap}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?module:ol/events~EventsKey}\n   * @private\n   */\n  this.postcomposeListenerKey_ = null;\n\n  /**\n   * @type {module:ol/proj/Projection}\n   */\n  this.projection_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxLat_ = Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxLon_ = Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.minLat_ = -Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.minLon_ = -Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxLatP_ = Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxLonP_ = Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.minLatP_ = -Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.minLonP_ = -Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.targetSize_ = options.targetSize !== undefined ? options.targetSize : 100;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxLines_ = options.maxLines !== undefined ? options.maxLines : 100;\n\n  /**\n   * @type {Array.<module:ol/geom/LineString>}\n   * @private\n   */\n  this.meridians_ = [];\n\n  /**\n   * @type {Array.<module:ol/geom/LineString>}\n   * @private\n   */\n  this.parallels_ = [];\n\n  /**\n   * @type {module:ol/style/Stroke}\n   * @private\n   */\n  this.strokeStyle_ = options.strokeStyle !== undefined ? options.strokeStyle : DEFAULT_STROKE_STYLE;\n\n  /**\n   * @type {module:ol/proj~TransformFunction|undefined}\n   * @private\n   */\n  this.fromLonLatTransform_ = undefined;\n\n  /**\n   * @type {module:ol/proj~TransformFunction|undefined}\n   * @private\n   */\n  this.toLonLatTransform_ = undefined;\n\n  /**\n   * @type {module:ol/coordinate~Coordinate}\n   * @private\n   */\n  this.projectionCenterLonLat_ = null;\n\n  /**\n   * @type {Array.<module:ol/Graticule~GraticuleLabelDataType>}\n   * @private\n   */\n  this.meridiansLabels_ = null;\n\n  /**\n   * @type {Array.<module:ol/Graticule~GraticuleLabelDataType>}\n   * @private\n   */\n  this.parallelsLabels_ = null;\n\n  if (options.showLabels == true) {\n\n    /**\n     * @type {null|function(number):string}\n     * @private\n     */\n    this.lonLabelFormatter_ = options.lonLabelFormatter == undefined ?\n      degreesToStringHDMS.bind(this, 'EW') : options.lonLabelFormatter;\n\n    /**\n     * @type {function(number):string}\n     * @private\n     */\n    this.latLabelFormatter_ = options.latLabelFormatter == undefined ?\n      degreesToStringHDMS.bind(this, 'NS') : options.latLabelFormatter;\n\n    /**\n     * Longitude label position in fractions (0..1) of view extent. 0 means\n     * bottom, 1 means top.\n     * @type {number}\n     * @private\n     */\n    this.lonLabelPosition_ = options.lonLabelPosition == undefined ? 0 :\n      options.lonLabelPosition;\n\n    /**\n     * Latitude Label position in fractions (0..1) of view extent. 0 means left, 1\n     * means right.\n     * @type {number}\n     * @private\n     */\n    this.latLabelPosition_ = options.latLabelPosition == undefined ? 1 :\n      options.latLabelPosition;\n\n    /**\n     * @type {module:ol/style/Text}\n     * @private\n     */\n    this.lonLabelStyle_ = options.lonLabelStyle !== undefined ? options.lonLabelStyle :\n      new Text({\n        font: '12px Calibri,sans-serif',\n        textBaseline: 'bottom',\n        fill: new Fill({\n          color: 'rgba(0,0,0,1)'\n        }),\n        stroke: new Stroke({\n          color: 'rgba(255,255,255,1)',\n          width: 3\n        })\n      });\n\n    /**\n     * @type {module:ol/style/Text}\n     * @private\n     */\n    this.latLabelStyle_ = options.latLabelStyle !== undefined ? options.latLabelStyle :\n      new Text({\n        font: '12px Calibri,sans-serif',\n        textAlign: 'end',\n        fill: new Fill({\n          color: 'rgba(0,0,0,1)'\n        }),\n        stroke: new Stroke({\n          color: 'rgba(255,255,255,1)',\n          width: 3\n        })\n      });\n\n    this.meridiansLabels_ = [];\n    this.parallelsLabels_ = [];\n  }\n\n  this.setMap(options.map !== undefined ? options.map : null);\n};\n\n\n/**\n * @param {number} lon Longitude.\n * @param {number} minLat Minimal latitude.\n * @param {number} maxLat Maximal latitude.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} index Index.\n * @return {number} Index.\n * @private\n */\nGraticule.prototype.addMeridian_ = function(lon, minLat, maxLat, squaredTolerance, extent, index) {\n  const lineString = this.getMeridian_(lon, minLat, maxLat, squaredTolerance, index);\n  if (intersects(lineString.getExtent(), extent)) {\n    if (this.meridiansLabels_) {\n      const textPoint = this.getMeridianPoint_(lineString, extent, index);\n      this.meridiansLabels_[index] = {\n        geom: textPoint,\n        text: this.lonLabelFormatter_(lon)\n      };\n    }\n    this.meridians_[index++] = lineString;\n  }\n  return index;\n};\n\n/**\n * @param {module:ol/geom/LineString} lineString Meridian\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} index Index.\n * @return {module:ol/geom/Point} Meridian point.\n * @private\n */\nGraticule.prototype.getMeridianPoint_ = function(lineString, extent, index) {\n  const flatCoordinates = lineString.getFlatCoordinates();\n  const clampedBottom = Math.max(extent[1], flatCoordinates[1]);\n  const clampedTop = Math.min(extent[3], flatCoordinates[flatCoordinates.length - 1]);\n  const lat = clamp(\n    extent[1] + Math.abs(extent[1] - extent[3]) * this.lonLabelPosition_,\n    clampedBottom, clampedTop);\n  const coordinate = [flatCoordinates[0], lat];\n  const point = this.meridiansLabels_[index] !== undefined ?\n    this.meridiansLabels_[index].geom : new Point(null);\n  point.setCoordinates(coordinate);\n  return point;\n};\n\n\n/**\n * @param {number} lat Latitude.\n * @param {number} minLon Minimal longitude.\n * @param {number} maxLon Maximal longitude.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} index Index.\n * @return {number} Index.\n * @private\n */\nGraticule.prototype.addParallel_ = function(lat, minLon, maxLon, squaredTolerance, extent, index) {\n  const lineString = this.getParallel_(lat, minLon, maxLon, squaredTolerance, index);\n  if (intersects(lineString.getExtent(), extent)) {\n    if (this.parallelsLabels_) {\n      const textPoint = this.getParallelPoint_(lineString, extent, index);\n      this.parallelsLabels_[index] = {\n        geom: textPoint,\n        text: this.latLabelFormatter_(lat)\n      };\n    }\n    this.parallels_[index++] = lineString;\n  }\n  return index;\n};\n\n\n/**\n * @param {module:ol/geom/LineString} lineString Parallels.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} index Index.\n * @return {module:ol/geom/Point} Parallel point.\n * @private\n */\nGraticule.prototype.getParallelPoint_ = function(lineString, extent, index) {\n  const flatCoordinates = lineString.getFlatCoordinates();\n  const clampedLeft = Math.max(extent[0], flatCoordinates[0]);\n  const clampedRight = Math.min(extent[2], flatCoordinates[flatCoordinates.length - 2]);\n  const lon = clamp(\n    extent[0] + Math.abs(extent[0] - extent[2]) * this.latLabelPosition_,\n    clampedLeft, clampedRight);\n  const coordinate = [lon, flatCoordinates[1]];\n  const point = this.parallelsLabels_[index] !== undefined ?\n    this.parallelsLabels_[index].geom : new Point(null);\n  point.setCoordinates(coordinate);\n  return point;\n};\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} squaredTolerance Squared tolerance.\n * @private\n */\nGraticule.prototype.createGraticule_ = function(extent, center, resolution, squaredTolerance) {\n\n  const interval = this.getInterval_(resolution);\n  if (interval == -1) {\n    this.meridians_.length = this.parallels_.length = 0;\n    if (this.meridiansLabels_) {\n      this.meridiansLabels_.length = 0;\n    }\n    if (this.parallelsLabels_) {\n      this.parallelsLabels_.length = 0;\n    }\n    return;\n  }\n\n  const centerLonLat = this.toLonLatTransform_(center);\n  let centerLon = centerLonLat[0];\n  let centerLat = centerLonLat[1];\n  const maxLines = this.maxLines_;\n  let cnt, idx, lat, lon;\n\n  let validExtent = [\n    Math.max(extent[0], this.minLonP_),\n    Math.max(extent[1], this.minLatP_),\n    Math.min(extent[2], this.maxLonP_),\n    Math.min(extent[3], this.maxLatP_)\n  ];\n\n  validExtent = transformExtent(validExtent, this.projection_, 'EPSG:4326');\n  const maxLat = validExtent[3];\n  const maxLon = validExtent[2];\n  const minLat = validExtent[1];\n  const minLon = validExtent[0];\n\n  // Create meridians\n\n  centerLon = Math.floor(centerLon / interval) * interval;\n  lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n  idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, 0);\n\n  cnt = 0;\n  while (lon != this.minLon_ && cnt++ < maxLines) {\n    lon = Math.max(lon - interval, this.minLon_);\n    idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, idx);\n  }\n\n  lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n  cnt = 0;\n  while (lon != this.maxLon_ && cnt++ < maxLines) {\n    lon = Math.min(lon + interval, this.maxLon_);\n    idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, idx);\n  }\n\n  this.meridians_.length = idx;\n  if (this.meridiansLabels_) {\n    this.meridiansLabels_.length = idx;\n  }\n\n  // Create parallels\n\n  centerLat = Math.floor(centerLat / interval) * interval;\n  lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n  idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, 0);\n\n  cnt = 0;\n  while (lat != this.minLat_ && cnt++ < maxLines) {\n    lat = Math.max(lat - interval, this.minLat_);\n    idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, idx);\n  }\n\n  lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n  cnt = 0;\n  while (lat != this.maxLat_ && cnt++ < maxLines) {\n    lat = Math.min(lat + interval, this.maxLat_);\n    idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, idx);\n  }\n\n  this.parallels_.length = idx;\n  if (this.parallelsLabels_) {\n    this.parallelsLabels_.length = idx;\n  }\n\n};\n\n\n/**\n * @param {number} resolution Resolution.\n * @return {number} The interval in degrees.\n * @private\n */\nGraticule.prototype.getInterval_ = function(resolution) {\n  const centerLon = this.projectionCenterLonLat_[0];\n  const centerLat = this.projectionCenterLonLat_[1];\n  let interval = -1;\n  const target = Math.pow(this.targetSize_ * resolution, 2);\n  /** @type {Array.<number>} **/\n  const p1 = [];\n  /** @type {Array.<number>} **/\n  const p2 = [];\n  for (let i = 0, ii = INTERVALS.length; i < ii; ++i) {\n    const delta = INTERVALS[i] / 2;\n    p1[0] = centerLon - delta;\n    p1[1] = centerLat - delta;\n    p2[0] = centerLon + delta;\n    p2[1] = centerLat + delta;\n    this.fromLonLatTransform_(p1, p1);\n    this.fromLonLatTransform_(p2, p2);\n    const dist = Math.pow(p2[0] - p1[0], 2) + Math.pow(p2[1] - p1[1], 2);\n    if (dist <= target) {\n      break;\n    }\n    interval = INTERVALS[i];\n  }\n  return interval;\n};\n\n\n/**\n * Get the map associated with this graticule.\n * @return {module:ol/PluggableMap} The map.\n * @api\n */\nGraticule.prototype.getMap = function() {\n  return this.map_;\n};\n\n\n/**\n * @param {number} lon Longitude.\n * @param {number} minLat Minimal latitude.\n * @param {number} maxLat Maximal latitude.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {module:ol/geom/LineString} The meridian line string.\n * @param {number} index Index.\n * @private\n */\nGraticule.prototype.getMeridian_ = function(lon, minLat, maxLat, squaredTolerance, index) {\n  const flatCoordinates = meridian(lon, minLat, maxLat, this.projection_, squaredTolerance);\n  const lineString = this.meridians_[index] !== undefined ? this.meridians_[index] : new LineString(null);\n  lineString.setFlatCoordinates(GeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Get the list of meridians.  Meridians are lines of equal longitude.\n * @return {Array.<module:ol/geom/LineString>} The meridians.\n * @api\n */\nGraticule.prototype.getMeridians = function() {\n  return this.meridians_;\n};\n\n\n/**\n * @param {number} lat Latitude.\n * @param {number} minLon Minimal longitude.\n * @param {number} maxLon Maximal longitude.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {module:ol/geom/LineString} The parallel line string.\n * @param {number} index Index.\n * @private\n */\nGraticule.prototype.getParallel_ = function(lat, minLon, maxLon, squaredTolerance, index) {\n  const flatCoordinates = parallel(lat, minLon, maxLon, this.projection_, squaredTolerance);\n  const lineString = this.parallels_[index] !== undefined ? this.parallels_[index] : new LineString(null);\n  lineString.setFlatCoordinates(GeometryLayout.XY, flatCoordinates);\n  return lineString;\n};\n\n\n/**\n * Get the list of parallels.  Parallels are lines of equal latitude.\n * @return {Array.<module:ol/geom/LineString>} The parallels.\n * @api\n */\nGraticule.prototype.getParallels = function() {\n  return this.parallels_;\n};\n\n\n/**\n * @param {module:ol/render/Event} e Event.\n * @private\n */\nGraticule.prototype.handlePostCompose_ = function(e) {\n  const vectorContext = e.vectorContext;\n  const frameState = e.frameState;\n  const extent = frameState.extent;\n  const viewState = frameState.viewState;\n  const center = viewState.center;\n  const projection = viewState.projection;\n  const resolution = viewState.resolution;\n  const pixelRatio = frameState.pixelRatio;\n  const squaredTolerance =\n      resolution * resolution / (4 * pixelRatio * pixelRatio);\n\n  const updateProjectionInfo = !this.projection_ ||\n      !equivalentProjection(this.projection_, projection);\n\n  if (updateProjectionInfo) {\n    this.updateProjectionInfo_(projection);\n  }\n\n  this.createGraticule_(extent, center, resolution, squaredTolerance);\n\n  // Draw the lines\n  vectorContext.setFillStrokeStyle(null, this.strokeStyle_);\n  let i, l, line;\n  for (i = 0, l = this.meridians_.length; i < l; ++i) {\n    line = this.meridians_[i];\n    vectorContext.drawGeometry(line);\n  }\n  for (i = 0, l = this.parallels_.length; i < l; ++i) {\n    line = this.parallels_[i];\n    vectorContext.drawGeometry(line);\n  }\n  let labelData;\n  if (this.meridiansLabels_) {\n    for (i = 0, l = this.meridiansLabels_.length; i < l; ++i) {\n      labelData = this.meridiansLabels_[i];\n      this.lonLabelStyle_.setText(labelData.text);\n      vectorContext.setTextStyle(this.lonLabelStyle_);\n      vectorContext.drawGeometry(labelData.geom);\n    }\n  }\n  if (this.parallelsLabels_) {\n    for (i = 0, l = this.parallelsLabels_.length; i < l; ++i) {\n      labelData = this.parallelsLabels_[i];\n      this.latLabelStyle_.setText(labelData.text);\n      vectorContext.setTextStyle(this.latLabelStyle_);\n      vectorContext.drawGeometry(labelData.geom);\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @private\n */\nGraticule.prototype.updateProjectionInfo_ = function(projection) {\n  const epsg4326Projection = getProjection('EPSG:4326');\n\n  const worldExtent = projection.getWorldExtent();\n  const worldExtentP = transformExtent(worldExtent, epsg4326Projection, projection);\n\n  this.maxLat_ = worldExtent[3];\n  this.maxLon_ = worldExtent[2];\n  this.minLat_ = worldExtent[1];\n  this.minLon_ = worldExtent[0];\n\n  this.maxLatP_ = worldExtentP[3];\n  this.maxLonP_ = worldExtentP[2];\n  this.minLatP_ = worldExtentP[1];\n  this.minLonP_ = worldExtentP[0];\n\n  this.fromLonLatTransform_ = getTransform(epsg4326Projection, projection);\n\n  this.toLonLatTransform_ = getTransform(projection, epsg4326Projection);\n\n  this.projectionCenterLonLat_ = this.toLonLatTransform_(getCenter(projection.getExtent()));\n\n  this.projection_ = projection;\n};\n\n\n/**\n * Set the map for this graticule.  The graticule will be rendered on the\n * provided map.\n * @param {module:ol/PluggableMap} map Map.\n * @api\n */\nGraticule.prototype.setMap = function(map) {\n  if (this.map_) {\n    unlistenByKey(this.postcomposeListenerKey_);\n    this.postcomposeListenerKey_ = null;\n    this.map_.render();\n  }\n  if (map) {\n    this.postcomposeListenerKey_ = listen(map, RenderEventType.POSTCOMPOSE, this.handlePostCompose_, this);\n    map.render();\n  }\n  this.map_ = map;\n};\nexport default Graticule;\n","/**\n * @module ol/control/MousePosition\n */\n\nimport {inherits} from '../index.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport Control from '../control/Control.js';\nimport {getTransformFromProjections, identityTransform, get as getProjection} from '../proj.js';\n\n\n/**\n * @type {string}\n */\nconst PROJECTION = 'projection';\n\n/**\n * @type {string}\n */\nconst COORDINATE_FORMAT = 'coordinateFormat';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {module:ol/coordinate~CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {function(module:ol/MapEvent)} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {Element|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string} [undefinedHTML='&nbsp;'] Markup to show when coordinates are not\n * available (e.g. when the pointer leaves the map viewport).  By default, the last position\n * will be replaced with `'&nbsp;'` when the pointer leaves the viewport.  To\n * retain the last rendered position, set this option to something falsey (like an empty\n * string `''`).\n */\n\n\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * @constructor\n * @extends {module:ol/control/Control}\n * @param {module:ol/control/MousePosition~Options=} opt_options Mouse position\n *     options.\n * @api\n */\nconst MousePosition = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  const element = document.createElement('DIV');\n  element.className = options.className !== undefined ? options.className : 'ol-mouse-position';\n\n  Control.call(this, {\n    element: element,\n    render: options.render || render,\n    target: options.target\n  });\n\n  listen(this,\n    getChangeEventType(PROJECTION),\n    this.handleProjectionChanged_, this);\n\n  if (options.coordinateFormat) {\n    this.setCoordinateFormat(options.coordinateFormat);\n  }\n  if (options.projection) {\n    this.setProjection(options.projection);\n  }\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.undefinedHTML_ = 'undefinedHTML' in options ? options.undefinedHTML : '&nbsp;';\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderOnMouseOut_ = !!this.undefinedHTML_;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.renderedHTML_ = element.innerHTML;\n\n  /**\n   * @private\n   * @type {module:ol/proj/Projection}\n   */\n  this.mapProjection_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/proj~TransformFunction}\n   */\n  this.transform_ = null;\n\n  /**\n   * @private\n   * @type {module:ol~Pixel}\n   */\n  this.lastMouseMovePixel_ = null;\n\n};\n\ninherits(MousePosition, Control);\n\n\n/**\n * Update the mouseposition element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/MousePosition}\n * @api\n */\nexport function render(mapEvent) {\n  const frameState = mapEvent.frameState;\n  if (!frameState) {\n    this.mapProjection_ = null;\n  } else {\n    if (this.mapProjection_ != frameState.viewState.projection) {\n      this.mapProjection_ = frameState.viewState.projection;\n      this.transform_ = null;\n    }\n  }\n  this.updateHTML_(this.lastMouseMovePixel_);\n}\n\n\n/**\n * @private\n */\nMousePosition.prototype.handleProjectionChanged_ = function() {\n  this.transform_ = null;\n};\n\n\n/**\n * Return the coordinate format type used to render the current position or\n * undefined.\n * @return {module:ol/coordinate~CoordinateFormat|undefined} The format to render the current\n *     position in.\n * @observable\n * @api\n */\nMousePosition.prototype.getCoordinateFormat = function() {\n  return (\n    /** @type {module:ol/coordinate~CoordinateFormat|undefined} */ (this.get(COORDINATE_FORMAT))\n  );\n};\n\n\n/**\n * Return the projection that is used to report the mouse position.\n * @return {module:ol/proj/Projection|undefined} The projection to report mouse\n *     position in.\n * @observable\n * @api\n */\nMousePosition.prototype.getProjection = function() {\n  return (\n    /** @type {module:ol/proj/Projection|undefined} */ (this.get(PROJECTION))\n  );\n};\n\n\n/**\n * @param {Event} event Browser event.\n * @protected\n */\nMousePosition.prototype.handleMouseMove = function(event) {\n  const map = this.getMap();\n  this.lastMouseMovePixel_ = map.getEventPixel(event);\n  this.updateHTML_(this.lastMouseMovePixel_);\n};\n\n\n/**\n * @param {Event} event Browser event.\n * @protected\n */\nMousePosition.prototype.handleMouseOut = function(event) {\n  this.updateHTML_(null);\n  this.lastMouseMovePixel_ = null;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMousePosition.prototype.setMap = function(map) {\n  Control.prototype.setMap.call(this, map);\n  if (map) {\n    const viewport = map.getViewport();\n    this.listenerKeys.push(\n      listen(viewport, EventType.MOUSEMOVE, this.handleMouseMove, this)\n    );\n    if (this.renderOnMouseOut_) {\n      this.listenerKeys.push(\n        listen(viewport, EventType.MOUSEOUT, this.handleMouseOut, this)\n      );\n    }\n  }\n};\n\n\n/**\n * Set the coordinate format type used to render the current position.\n * @param {module:ol/coordinate~CoordinateFormat} format The format to render the current\n *     position in.\n * @observable\n * @api\n */\nMousePosition.prototype.setCoordinateFormat = function(format) {\n  this.set(COORDINATE_FORMAT, format);\n};\n\n\n/**\n * Set the projection that is used to report the mouse position.\n * @param {module:ol/proj~ProjectionLike} projection The projection to report mouse\n *     position in.\n * @observable\n * @api\n */\nMousePosition.prototype.setProjection = function(projection) {\n  this.set(PROJECTION, getProjection(projection));\n};\n\n\n/**\n * @param {?module:ol~Pixel} pixel Pixel.\n * @private\n */\nMousePosition.prototype.updateHTML_ = function(pixel) {\n  let html = this.undefinedHTML_;\n  if (pixel && this.mapProjection_) {\n    if (!this.transform_) {\n      const projection = this.getProjection();\n      if (projection) {\n        this.transform_ = getTransformFromProjections(\n          this.mapProjection_, projection);\n      } else {\n        this.transform_ = identityTransform;\n      }\n    }\n    const map = this.getMap();\n    const coordinate = map.getCoordinateFromPixel(pixel);\n    if (coordinate) {\n      this.transform_(coordinate, coordinate);\n      const coordinateFormat = this.getCoordinateFormat();\n      if (coordinateFormat) {\n        html = coordinateFormat(coordinate);\n      } else {\n        html = coordinate.toString();\n      }\n    }\n  }\n  if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n    this.element.innerHTML = html;\n    this.renderedHTML_ = html;\n  }\n};\n\n\nexport default MousePosition;\n","/**\n * @module ol/render\n */\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport {create as createTransform, scale as scaleTransform} from './transform.js';\nimport CanvasImmediateRenderer from './render/canvas/Immediate.js';\n\n\n/**\n * @typedef {Object} State\n * @property {CanvasRenderingContext2D} context Canvas context that the layer is being rendered to.\n * @property {module:ol/Feature|module:ol/render/Feature} feature\n * @property {module:ol/geom/SimpleGeometry} geometry\n * @property {number} pixelRatio Pixel ratio used by the layer renderer.\n * @property {number} resolution Resolution that the render batch was created and optimized for.\n * This is not the view's resolution that is being rendered.\n * @property {number} rotation Rotation of the rendered layer in radians.\n */\n\n\n/**\n * A function to be used when sorting features before rendering.\n * It takes two instances of {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and returns a `{number}`.\n *\n * @typedef {function((module:ol/Feature|module:ol/render/Feature),\n *           (module:ol/Feature|module:ol/render/Feature)):number} OrderFunction\n */\n\n\n/**\n * @typedef {Object} ToContextOptions\n * @property {module:ol/size~Size} [size] Desired size of the canvas in css\n * pixels. When provided, both canvas and css size will be set according to the\n * `pixelRatio`. If not provided, the current canvas and css sizes will not be\n * altered.\n * @property {number} [pixelRatio=window.devicePixelRatio] Pixel ratio (canvas\n * pixel to css pixel ratio) for the canvas.\n */\n\n\n/**\n * Binds a Canvas Immediate API to a canvas context, to allow drawing geometries\n * to the context's canvas.\n *\n * The units for geometry coordinates are css pixels relative to the top left\n * corner of the canvas element.\n * ```js\n * import {toContext} from 'ol/render';\n * import Fill from 'ol/style/Fill';\n * import Polygon from 'ol/geom/Polygon';\n *\n * var canvas = document.createElement('canvas');\n * var render = toContext(canvas.getContext('2d'),\n *     { size: [100, 100] });\n * render.setFillStrokeStyle(new Fill({ color: blue }));\n * render.drawPolygon(\n *     new Polygon([[[0, 0], [100, 100], [100, 0], [0, 0]]]));\n * ```\n *\n * @param {CanvasRenderingContext2D} context Canvas context.\n * @param {module:ol/render~ToContextOptions=} opt_options Options.\n * @return {module:ol/render/canvas/Immediate} Canvas Immediate.\n * @api\n */\nexport function toContext(context, opt_options) {\n  const canvas = context.canvas;\n  const options = opt_options ? opt_options : {};\n  const pixelRatio = options.pixelRatio || DEVICE_PIXEL_RATIO;\n  const size = options.size;\n  if (size) {\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n  }\n  const extent = [0, 0, canvas.width, canvas.height];\n  const transform = scaleTransform(createTransform(), pixelRatio, pixelRatio);\n  return new CanvasImmediateRenderer(context, pixelRatio, extent, transform, 0);\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight,\n  getTopLeft, getTopRight, getWidth, intersects} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {getTransform} from '../proj.js';\n\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array.<module:ol/coordinate~Coordinate>} source\n * @property {Array.<module:ol/coordinate~Coordinate>} target\n */\n\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n *\n * @param {module:ol/proj/Projection} sourceProj Source projection.\n * @param {module:ol/proj/Projection} targetProj Target projection.\n * @param {module:ol/extent~Extent} targetExtent Target extent to triangulate.\n * @param {module:ol/extent~Extent} maxSourceExtent Maximal source extent that can be used.\n * @param {number} errorThreshold Acceptable error (in source units).\n * @constructor\n */\nconst Triangulation = function(sourceProj, targetProj, targetExtent,\n  maxSourceExtent, errorThreshold) {\n\n  /**\n   * @type {module:ol/proj/Projection}\n   * @private\n   */\n  this.sourceProj_ = sourceProj;\n\n  /**\n   * @type {module:ol/proj/Projection}\n   * @private\n   */\n  this.targetProj_ = targetProj;\n\n  /** @type {!Object.<string, module:ol/coordinate~Coordinate>} */\n  let transformInvCache = {};\n  const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} c A coordinate.\n   * @return {module:ol/coordinate~Coordinate} Transformed coordinate.\n   * @private\n   */\n  this.transformInv_ = function(c) {\n    const key = c[0] + '/' + c[1];\n    if (!transformInvCache[key]) {\n      transformInvCache[key] = transformInv(c);\n    }\n    return transformInvCache[key];\n  };\n\n  /**\n   * @type {module:ol/extent~Extent}\n   * @private\n   */\n  this.maxSourceExtent_ = maxSourceExtent;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n  /**\n   * @type {Array.<module:ol/reproj/Triangulation~Triangle>}\n   * @private\n   */\n  this.triangles_ = [];\n\n  /**\n   * Indicates that the triangulation crosses edge of the source projection.\n   * @type {boolean}\n   * @private\n   */\n  this.wrapsXInSource_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n    getWidth(this.sourceProj_.getExtent()) : null;\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n    getWidth(this.targetProj_.getExtent()) : null;\n\n  const destinationTopLeft = getTopLeft(targetExtent);\n  const destinationTopRight = getTopRight(targetExtent);\n  const destinationBottomRight = getBottomRight(targetExtent);\n  const destinationBottomLeft = getBottomLeft(targetExtent);\n  const sourceTopLeft = this.transformInv_(destinationTopLeft);\n  const sourceTopRight = this.transformInv_(destinationTopRight);\n  const sourceBottomRight = this.transformInv_(destinationBottomRight);\n  const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n  this.addQuad_(\n    destinationTopLeft, destinationTopRight,\n    destinationBottomRight, destinationBottomLeft,\n    sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft,\n    MAX_SUBDIVISION);\n\n  if (this.wrapsXInSource_) {\n    let leftBound = Infinity;\n    this.triangles_.forEach(function(triangle, i, arr) {\n      leftBound = Math.min(leftBound,\n        triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n    });\n\n    // Shift triangles to be as close to `leftBound` as possible\n    // (if the distance is more than `worldWidth / 2` it can be closer.\n    this.triangles_.forEach(function(triangle) {\n      if (Math.max(triangle.source[0][0], triangle.source[1][0],\n        triangle.source[2][0]) - leftBound > this.sourceWorldWidth_ / 2) {\n        const newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n          [triangle.source[1][0], triangle.source[1][1]],\n          [triangle.source[2][0], triangle.source[2][1]]];\n        if ((newTriangle[0][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[0][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[1][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[1][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[2][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[2][0] -= this.sourceWorldWidth_;\n        }\n\n        // Rarely (if the extent contains both the dateline and prime meridian)\n        // the shift can in turn break some triangles.\n        // Detect this here and don't shift in such cases.\n        const minX = Math.min(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        const maxX = Math.max(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n          triangle.source = newTriangle;\n        }\n      }\n    }.bind(this));\n  }\n\n  transformInvCache = {};\n};\n\n\n/**\n * Adds triangle to the triangulation.\n * @param {module:ol/coordinate~Coordinate} a The target a coordinate.\n * @param {module:ol/coordinate~Coordinate} b The target b coordinate.\n * @param {module:ol/coordinate~Coordinate} c The target c coordinate.\n * @param {module:ol/coordinate~Coordinate} aSrc The source a coordinate.\n * @param {module:ol/coordinate~Coordinate} bSrc The source b coordinate.\n * @param {module:ol/coordinate~Coordinate} cSrc The source c coordinate.\n * @private\n */\nTriangulation.prototype.addTriangle_ = function(a, b, c,\n  aSrc, bSrc, cSrc) {\n  this.triangles_.push({\n    source: [aSrc, bSrc, cSrc],\n    target: [a, b, c]\n  });\n};\n\n\n/**\n * Adds quad (points in clock-wise order) to the triangulation\n * (and reprojects the vertices) if valid.\n * Performs quad subdivision if needed to increase precision.\n *\n * @param {module:ol/coordinate~Coordinate} a The target a coordinate.\n * @param {module:ol/coordinate~Coordinate} b The target b coordinate.\n * @param {module:ol/coordinate~Coordinate} c The target c coordinate.\n * @param {module:ol/coordinate~Coordinate} d The target d coordinate.\n * @param {module:ol/coordinate~Coordinate} aSrc The source a coordinate.\n * @param {module:ol/coordinate~Coordinate} bSrc The source b coordinate.\n * @param {module:ol/coordinate~Coordinate} cSrc The source c coordinate.\n * @param {module:ol/coordinate~Coordinate} dSrc The source d coordinate.\n * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n * @private\n */\nTriangulation.prototype.addQuad_ = function(a, b, c, d,\n  aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n\n  const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n  const sourceCoverageX = this.sourceWorldWidth_ ?\n    getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n  const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n  // when the quad is wrapped in the source projection\n  // it covers most of the projection extent, but not fully\n  const wrapsX = this.sourceProj_.canWrapX() &&\n               sourceCoverageX > 0.5 && sourceCoverageX < 1;\n\n  let needsSubdivision = false;\n\n  if (maxSubdivision > 0) {\n    if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n      const targetQuadExtent = boundingExtent([a, b, c, d]);\n      const targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n      needsSubdivision |=\n          targetCoverageX > MAX_TRIANGLE_WIDTH;\n    }\n    if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n      needsSubdivision |=\n          sourceCoverageX > MAX_TRIANGLE_WIDTH;\n    }\n  }\n\n  if (!needsSubdivision && this.maxSourceExtent_) {\n    if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n      // whole quad outside source projection extent -> ignore\n      return;\n    }\n  }\n\n  if (!needsSubdivision) {\n    if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n      if (maxSubdivision > 0) {\n        needsSubdivision = true;\n      } else {\n        return;\n      }\n    }\n  }\n\n  if (maxSubdivision > 0) {\n    if (!needsSubdivision) {\n      const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n      const centerSrc = this.transformInv_(center);\n\n      let dx;\n      if (wrapsX) {\n        const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n             modulo(cSrc[0], sourceWorldWidth)) / 2;\n        dx = centerSrcEstimX -\n            modulo(centerSrc[0], sourceWorldWidth);\n      } else {\n        dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n      }\n      const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n      const centerSrcErrorSquared = dx * dx + dy * dy;\n      needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n    }\n    if (needsSubdivision) {\n      if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n        // split horizontally (top & bottom)\n        const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n        const bcSrc = this.transformInv_(bc);\n        const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n        const daSrc = this.transformInv_(da);\n\n        this.addQuad_(\n          a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n        this.addQuad_(\n          da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n      } else {\n        // split vertically (left & right)\n        const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n        const abSrc = this.transformInv_(ab);\n        const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n        const cdSrc = this.transformInv_(cd);\n\n        this.addQuad_(\n          a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n        this.addQuad_(\n          ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n      }\n      return;\n    }\n  }\n\n  if (wrapsX) {\n    if (!this.canWrapXInSource_) {\n      return;\n    }\n    this.wrapsXInSource_ = true;\n  }\n\n  this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n  this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n};\n\n\n/**\n * Calculates extent of the 'source' coordinates from all the triangles.\n *\n * @return {module:ol/extent~Extent} Calculated extent.\n */\nTriangulation.prototype.calculateSourceExtent = function() {\n  const extent = createEmpty();\n\n  this.triangles_.forEach(function(triangle, i, arr) {\n    const src = triangle.source;\n    extendCoordinate(extent, src[0]);\n    extendCoordinate(extent, src[1]);\n    extendCoordinate(extent, src[2]);\n  });\n\n  return extent;\n};\n\n\n/**\n * @return {Array.<module:ol/reproj/Triangulation~Triangle>} Array of the calculated triangles.\n */\nTriangulation.prototype.getTriangles = function() {\n  return this.triangles_;\n};\nexport default Triangulation;\n","/**\n * @module ol/TileCache\n */\nimport {inherits} from './index.js';\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\n/**\n * @constructor\n * @extends {module:ol/structs/LRUCache.<module:ol/Tile>}\n * @param {number=} opt_highWaterMark High water mark.\n * @struct\n */\nconst TileCache = function(opt_highWaterMark) {\n\n  LRUCache.call(this, opt_highWaterMark);\n\n};\n\ninherits(TileCache, LRUCache);\n\n\n/**\n * @param {!Object.<string, module:ol/TileRange>} usedTiles Used tiles.\n */\nTileCache.prototype.expireCache = function(usedTiles) {\n  while (this.canExpireCache()) {\n    const tile = this.peekLast();\n    const zKey = tile.tileCoord[0].toString();\n    if (zKey in usedTiles && usedTiles[zKey].contains(tile.tileCoord)) {\n      break;\n    } else {\n      this.pop().dispose();\n    }\n  }\n};\n\n\n/**\n * Prune all tiles from the cache that don't have the same z as the newest tile.\n */\nTileCache.prototype.pruneExceptNewestZ = function() {\n  if (this.getCount() === 0) {\n    return;\n  }\n  const key = this.peekFirstKey();\n  const tileCoord = fromKey(key);\n  const z = tileCoord[0];\n  this.forEach(function(tile) {\n    if (tile.tileCoord[0] !== z) {\n      this.remove(getKey(tile.tileCoord));\n      tile.dispose();\n    }\n  }, this);\n};\nexport default TileCache;\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line'\n};\n","/**\n * @module ol/featureloader\n */\nimport {UNDEFINED} from './functions.js';\nimport FormatType from './format/FormatType.js';\n\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:module:ol/source/Vector, module:ol/extent~Extent, number,\n *                    module:ol/proj/Projection)} FeatureLoader\n * @api\n */\n\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(module:ol/extent~Extent, number, module:ol/proj/Projection): string} FeatureUrlFunction\n * @api\n */\n\n\n/**\n * @param {string|module:ol/featureloader~FeatureUrlFunction} url Feature URL service.\n * @param {module:ol/format/Feature} format Feature format.\n * @param {function(this:module:ol/VectorTile, Array.<module:ol/Feature>, module:ol/proj/Projection, module:ol/extent~Extent)|function(this:module:ol/source/Vector, Array.<module:ol/Feature>)} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:module:ol/VectorTile)|function(this:module:ol/source/Vector)} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {module:ol/featureloader~FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n  return (\n    /**\n     * @param {module:ol/extent~Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @this {module:ol/source/Vector|module:ol/VectorTile}\n     */\n    function(extent, resolution, projection) {\n      const xhr = new XMLHttpRequest();\n      xhr.open('GET',\n        typeof url === 'function' ? url(extent, resolution, projection) : url,\n        true);\n      if (format.getType() == FormatType.ARRAY_BUFFER) {\n        xhr.responseType = 'arraybuffer';\n      }\n      /**\n       * @param {Event} event Event.\n       * @private\n       */\n      xhr.onload = function(event) {\n        // status will be 0 for file:// urls\n        if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n          const type = format.getType();\n          /** @type {Document|Node|Object|string|undefined} */\n          let source;\n          if (type == FormatType.JSON || type == FormatType.TEXT) {\n            source = xhr.responseText;\n          } else if (type == FormatType.XML) {\n            source = xhr.responseXML;\n            if (!source) {\n              source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n            }\n          } else if (type == FormatType.ARRAY_BUFFER) {\n            source = /** @type {ArrayBuffer} */ (xhr.response);\n          }\n          if (source) {\n            success.call(this, format.readFeatures(source,\n              {featureProjection: projection}),\n            format.readProjection(source), format.getLastExtent());\n          } else {\n            failure.call(this);\n          }\n        } else {\n          failure.call(this);\n        }\n      }.bind(this);\n      /**\n       * @private\n       */\n      xhr.onerror = function() {\n        failure.call(this);\n      }.bind(this);\n      xhr.send();\n    }\n  );\n}\n\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|module:ol/featureloader~FeatureUrlFunction} url Feature URL service.\n * @param {module:ol/format/Feature} format Feature format.\n * @return {module:ol/featureloader~FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  return loadFeaturesXhr(url, format,\n    /**\n     * @param {Array.<module:ol/Feature>} features The loaded features.\n     * @param {module:ol/proj/Projection} dataProjection Data\n     * projection.\n     * @this {module:ol/source/Vector}\n     */\n    function(features, dataProjection) {\n      this.addFeatures(features);\n    }, /* FIXME handle error */ UNDEFINED);\n}\n","/**\n * @module ol/layer/VectorRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array.<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(this: S, module:ol/coordinate~Coordinate, module:ol/coordinate~Coordinate): T} callback Function\n *     called for each segment.\n * @param {S=} opt_this The object to be used as the value of 'this'\n *     within callback.\n * @return {T|boolean} Value.\n * @template T,S\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback, opt_this) {\n  const point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  const point2 = [];\n  let ret;\n  for (; (offset + stride) < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback.call(opt_this, point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n","/**\n * @module ol/TileQueue\n */\nimport {inherits} from './index.js';\nimport TileState from './TileState.js';\nimport {listen, unlisten} from './events.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n\n\n/**\n * @typedef {function(module:ol/Tile, string, module:ol/coordinate~Coordinate, number): number} PriorityFunction\n */\n\n\n/**\n * @constructor\n * @extends {module:ol/structs/PriorityQueue.<Array>}\n * @param {module:ol/TileQueue~PriorityFunction} tilePriorityFunction\n *     Tile priority function.\n * @param {function(): ?} tileChangeCallback\n *     Function called on each tile change event.\n * @struct\n */\nconst TileQueue = function(tilePriorityFunction, tileChangeCallback) {\n\n  PriorityQueue.call(\n    this,\n    /**\n     * @param {Array} element Element.\n     * @return {number} Priority.\n     */\n    function(element) {\n      return tilePriorityFunction.apply(null, element);\n    },\n    /**\n     * @param {Array} element Element.\n     * @return {string} Key.\n     */\n    function(element) {\n      return (/** @type {module:ol/Tile} */ (element[0]).getKey());\n    });\n\n  /**\n   * @private\n   * @type {function(): ?}\n   */\n  this.tileChangeCallback_ = tileChangeCallback;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.tilesLoading_ = 0;\n\n  /**\n   * @private\n   * @type {!Object.<string,boolean>}\n   */\n  this.tilesLoadingKeys_ = {};\n\n};\n\ninherits(TileQueue, PriorityQueue);\n\n\n/**\n * @inheritDoc\n */\nTileQueue.prototype.enqueue = function(element) {\n  const added = PriorityQueue.prototype.enqueue.call(this, element);\n  if (added) {\n    const tile = element[0];\n    listen(tile, EventType.CHANGE, this.handleTileChange, this);\n  }\n  return added;\n};\n\n\n/**\n * @return {number} Number of tiles loading.\n */\nTileQueue.prototype.getTilesLoading = function() {\n  return this.tilesLoading_;\n};\n\n\n/**\n * @param {module:ol/events/Event} event Event.\n * @protected\n */\nTileQueue.prototype.handleTileChange = function(event) {\n  const tile = /** @type {module:ol/Tile} */ (event.target);\n  const state = tile.getState();\n  if (state === TileState.LOADED || state === TileState.ERROR ||\n      state === TileState.EMPTY || state === TileState.ABORT) {\n    unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\n    const tileKey = tile.getKey();\n    if (tileKey in this.tilesLoadingKeys_) {\n      delete this.tilesLoadingKeys_[tileKey];\n      --this.tilesLoading_;\n    }\n    this.tileChangeCallback_();\n  }\n};\n\n\n/**\n * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n * @param {number} maxNewLoads Maximum number of new tiles to load.\n */\nTileQueue.prototype.loadMoreTiles = function(maxTotalLoading, maxNewLoads) {\n  let newLoads = 0;\n  let abortedTiles = false;\n  let state, tile, tileKey;\n  while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n         this.getCount() > 0) {\n    tile = /** @type {module:ol/Tile} */ (this.dequeue()[0]);\n    tileKey = tile.getKey();\n    state = tile.getState();\n    if (state === TileState.ABORT) {\n      abortedTiles = true;\n    } else if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n      this.tilesLoadingKeys_[tileKey] = true;\n      ++this.tilesLoading_;\n      ++newLoads;\n      tile.load();\n    }\n  }\n  if (newLoads === 0 && abortedTiles) {\n    // Do not stop the render loop when all wanted tiles were aborted due to\n    // a small, saturated tile cache.\n    this.tileChangeCallback_();\n  }\n};\nexport default TileQueue;\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION, inherits} from './index.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error}\n * @constructor\n * @extends {Error}\n * @param {number} code Error code.\n */\nconst AssertionError = function(code) {\n\n  const path = VERSION.split('-')[0];\n\n  /**\n   * @type {string}\n   */\n  this.message = 'Assertion failed. See https://openlayers.org/en/' + path +\n      '/doc/errors/#' + code + ' for details.';\n\n  /**\n   * Error code. The meaning of the code can be found on\n   * {@link https://openlayers.org/en/latest/doc/errors/} (replace `latest` with\n   * the version found in the OpenLayers script's header comment if a version\n   * other than the latest is used).\n   * @type {number}\n   * @api\n   */\n  this.code = code;\n\n  this.name = 'AssertionError';\n\n};\n\ninherits(AssertionError, Error);\n\nexport default AssertionError;\n","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos,\n            str = readUtf8(this.buf, this.pos, end);\n        this.pos = end;\n        return str;\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.ceil(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","var Processor = require('./processor');\n\nexports.Processor = Processor;\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var hasImageData = true;\ntry {\n  new ImageData(10, 10);\n} catch (_) {\n  hasImageData = false;\n}\n\nvar context = document.createElement('canvas').getContext('2d');\n\nfunction newImageData(data, width, height) {\n  if (hasImageData) {\n    return new ImageData(data, width, height);\n  } else {\n    var imageData = context.createImageData(width, height);\n    imageData.data.set(data);\n    return imageData;\n  }\n}\n\nexports.newImageData = newImageData;\n","var newImageData = require('./util').newImageData;\n\n/**\n * Create a function for running operations.  This function is serialized for\n * use in a worker.\n * @param {function(Array, Object):*} operation The operation.\n * @return {function(Object):ArrayBuffer} A function that takes an object with\n * buffers, meta, imageOps, width, and height properties and returns an array\n * buffer.\n */\nfunction createMinion(operation) {\n  var workerHasImageData = true;\n  try {\n    new ImageData(10, 10);\n  } catch (_) {\n    workerHasImageData = false;\n  }\n\n  function newWorkerImageData(data, width, height) {\n    if (workerHasImageData) {\n      return new ImageData(data, width, height);\n    } else {\n      return {data: data, width: width, height: height};\n    }\n  }\n\n  return function(data) {\n    // bracket notation for minification support\n    var buffers = data['buffers'];\n    var meta = data['meta'];\n    var imageOps = data['imageOps'];\n    var width = data['width'];\n    var height = data['height'];\n\n    var numBuffers = buffers.length;\n    var numBytes = buffers[0].byteLength;\n    var output, b;\n\n    if (imageOps) {\n      var images = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        images[b] = newWorkerImageData(\n            new Uint8ClampedArray(buffers[b]), width, height);\n      }\n      output = operation(images, meta).data;\n    } else {\n      output = new Uint8ClampedArray(numBytes);\n      var arrays = new Array(numBuffers);\n      var pixels = new Array(numBuffers);\n      for (b = 0; b < numBuffers; ++b) {\n        arrays[b] = new Uint8ClampedArray(buffers[b]);\n        pixels[b] = [0, 0, 0, 0];\n      }\n      for (var i = 0; i < numBytes; i += 4) {\n        for (var j = 0; j < numBuffers; ++j) {\n          var array = arrays[j];\n          pixels[j][0] = array[i];\n          pixels[j][1] = array[i + 1];\n          pixels[j][2] = array[i + 2];\n          pixels[j][3] = array[i + 3];\n        }\n        var pixel = operation(pixels, meta);\n        output[i] = pixel[0];\n        output[i + 1] = pixel[1];\n        output[i + 2] = pixel[2];\n        output[i + 3] = pixel[3];\n      }\n    }\n    return output.buffer;\n  };\n}\n\n/**\n * Create a worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Worker} The worker.\n */\nfunction createWorker(config, onMessage) {\n  var lib = Object.keys(config.lib || {}).map(function(name) {\n    return 'var ' + name + ' = ' + config.lib[name].toString() + ';';\n  });\n\n  var lines = lib.concat([\n    'var __minion__ = (' + createMinion.toString() + ')(', config.operation.toString(), ');',\n    'self.addEventListener(\"message\", function(event) {',\n    '  var buffer = __minion__(event.data);',\n    '  self.postMessage({buffer: buffer, meta: event.data.meta}, [buffer]);',\n    '});'\n  ]);\n\n  var blob = new Blob(lines, {type: 'text/javascript'});\n  var source = URL.createObjectURL(blob);\n  var worker = new Worker(source);\n  worker.addEventListener('message', onMessage);\n  return worker;\n}\n\n/**\n * Create a faux worker for running operations.\n * @param {Object} config Configuration.\n * @param {function(MessageEvent)} onMessage Called with a message event.\n * @return {Object} The faux worker.\n */\nfunction createFauxWorker(config, onMessage) {\n  var minion = createMinion(config.operation);\n  return {\n    postMessage: function(data) {\n      setTimeout(function() {\n        onMessage({'data': {'buffer': minion(data), 'meta': data['meta']}});\n      }, 0);\n    }\n  };\n}\n\n/**\n * A processor runs pixel or image operations in workers.\n * @param {Object} config Configuration.\n */\nfunction Processor(config) {\n  this._imageOps = !!config.imageOps;\n  var threads;\n  if (config.threads === 0) {\n    threads = 0;\n  } else if (this._imageOps) {\n    threads = 1;\n  } else {\n    threads = config.threads || 1;\n  }\n  var workers = [];\n  if (threads) {\n    for (var i = 0; i < threads; ++i) {\n      workers[i] = createWorker(config, this._onWorkerMessage.bind(this, i));\n    }\n  } else {\n    workers[0] = createFauxWorker(config, this._onWorkerMessage.bind(this, 0));\n  }\n  this._workers = workers;\n  this._queue = [];\n  this._maxQueueLength = config.queue || Infinity;\n  this._running = 0;\n  this._dataLookup = {};\n  this._job = null;\n}\n\n/**\n * Run operation on input data.\n * @param {Array.<Array|ImageData>} inputs Array of pixels or image data\n *     (depending on the operation type).\n * @param {Object} meta A user data object.  This is passed to all operations\n *     and must be serializable.\n * @param {function(Error, ImageData, Object)} callback Called when work\n *     completes.  The first argument is any error.  The second is the ImageData\n *     generated by operations.  The third is the user data object.\n */\nProcessor.prototype.process = function(inputs, meta, callback) {\n  this._enqueue({\n    inputs: inputs,\n    meta: meta,\n    callback: callback\n  });\n  this._dispatch();\n};\n\n/**\n * Stop responding to any completed work and destroy the processor.\n */\nProcessor.prototype.destroy = function() {\n  for (var key in this) {\n    this[key] = null;\n  }\n  this._destroyed = true;\n};\n\n/**\n * Add a job to the queue.\n * @param {Object} job The job.\n */\nProcessor.prototype._enqueue = function(job) {\n  this._queue.push(job);\n  while (this._queue.length > this._maxQueueLength) {\n    this._queue.shift().callback(null, null);\n  }\n};\n\n/**\n * Dispatch a job.\n */\nProcessor.prototype._dispatch = function() {\n  if (this._running === 0 && this._queue.length > 0) {\n    var job = this._job = this._queue.shift();\n    var width = job.inputs[0].width;\n    var height = job.inputs[0].height;\n    var buffers = job.inputs.map(function(input) {\n      return input.data.buffer;\n    });\n    var threads = this._workers.length;\n    this._running = threads;\n    if (threads === 1) {\n      this._workers[0].postMessage({\n        'buffers': buffers,\n        'meta': job.meta,\n        'imageOps': this._imageOps,\n        'width': width,\n        'height': height\n      }, buffers);\n    } else {\n      var length = job.inputs[0].data.length;\n      var segmentLength = 4 * Math.ceil(length / 4 / threads);\n      for (var i = 0; i < threads; ++i) {\n        var offset = i * segmentLength;\n        var slices = [];\n        for (var j = 0, jj = buffers.length; j < jj; ++j) {\n          slices.push(buffers[i].slice(offset, offset + segmentLength));\n        }\n        this._workers[i].postMessage({\n          'buffers': slices,\n          'meta': job.meta,\n          'imageOps': this._imageOps,\n          'width': width,\n          'height': height\n        }, slices);\n      }\n    }\n  }\n};\n\n/**\n * Handle messages from the worker.\n * @param {number} index The worker index.\n * @param {MessageEvent} event The message event.\n */\nProcessor.prototype._onWorkerMessage = function(index, event) {\n  if (this._destroyed) {\n    return;\n  }\n  this._dataLookup[index] = event.data;\n  --this._running;\n  if (this._running === 0) {\n    this._resolveJob();\n  }\n};\n\n/**\n * Resolve a job.  If there are no more worker threads, the processor callback\n * will be called.\n */\nProcessor.prototype._resolveJob = function() {\n  var job = this._job;\n  var threads = this._workers.length;\n  var data, meta;\n  if (threads === 1) {\n    data = new Uint8ClampedArray(this._dataLookup[0]['buffer']);\n    meta = this._dataLookup[0]['meta'];\n  } else {\n    var length = job.inputs[0].data.length;\n    data = new Uint8ClampedArray(length);\n    meta = new Array(length);\n    var segmentLength = 4 * Math.ceil(length / 4 / threads);\n    for (var i = 0; i < threads; ++i) {\n      var buffer = this._dataLookup[i]['buffer'];\n      var offset = i * segmentLength;\n      data.set(new Uint8ClampedArray(buffer), offset);\n      meta[i] = this._dataLookup[i]['meta'];\n    }\n  }\n  this._job = null;\n  this._dataLookup = {};\n  job.callback(null,\n      newImageData(data, job.inputs[0].width, job.inputs[0].height), meta);\n  this._dispatch();\n};\n\nmodule.exports = Processor;\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n"],"sourceRoot":""}