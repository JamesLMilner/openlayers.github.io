{"version":3,"sources":["webpack:///./feature-animation.js"],"names":["__webpack_require__","r","__webpack_exports__","_src_ol_Feature_js__WEBPACK_IMPORTED_MODULE_0__","_src_ol_Map_js__WEBPACK_IMPORTED_MODULE_1__","_src_ol_Observable_js__WEBPACK_IMPORTED_MODULE_2__","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_3__","_src_ol_easing_js__WEBPACK_IMPORTED_MODULE_4__","_src_ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_5__","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_6__","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_7__","_src_ol_proj_js__WEBPACK_IMPORTED_MODULE_8__","_src_ol_source_js__WEBPACK_IMPORTED_MODULE_9__","_src_ol_source_js__WEBPACK_IMPORTED_MODULE_10__","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_11__","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_12__","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_13__","_src_ol_render_js__WEBPACK_IMPORTED_MODULE_14__","tileLayer","source","wrapX","map","layers","target","view","center","zoom","multiWorld","vector","addLayer","const","duration","on","e","feature","start","listenerKey","Date","getTime","event","vectorContext","Object","frameState","flashGeom","getGeometry","clone","elapsed","time","elapsedRatio","radius","opacity","style","image","stroke","color","width","setStyle","drawGeometry","render","window","setInterval","x","Math","random","y","geom","addFeature"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,IAAAI,EAAAJ,EAAA,GAAAK,EAAAL,EAAA,KAAAM,EAAAN,EAAA,GAAAO,EAAAP,EAAA,IAAAQ,EAAAR,EAAA,IAAAS,EAAAT,EAAA,GAAAU,EAAAV,EAAA,IAAAW,EAAAX,EAAA,GAAAY,EAAAZ,EAAA,IAAAa,EAAAb,EAAA,IAAAc,EAAAd,EAAA,IAAAe,EAAAf,EAAA,IAAAgB,EAAAhB,EAAA,IAAAiB,EAAAjB,EAAA,IAYMkB,EAAY,IAAIT,EAAA,EAAU,CAC9BU,OAAQ,IAAIP,EAAA,EAAI,CACdQ,OAAO,MAILC,EAAM,IAAIjB,EAAA,EAAI,CAClBkB,OAAQ,CAACJ,GACTK,OAAQ,MACRC,KAAM,IAAIlB,EAAA,EAAK,CACbmB,OAAQ,CAAC,EAAG,GACZC,KAAM,EACNC,YAAY,MAIVR,EAAS,IAAIN,EAAA,EAAa,CAC9BO,OAAO,IAEHQ,EAAS,IAAIlB,EAAA,EAAY,CAC7BS,OAAQA,IAEVE,EAAIQ,SAASD,GAUbE,IAAMC,EAAW,IAoCjBZ,EAAOa,GAAG,aAAc,SAASC,GAnCjC,IAAeC,EACPC,EACAC,EAFOF,EAoCPD,EAAEC,QAnCFC,GAAQ,IAAIE,MAAOC,UACnBF,EAAclB,EAAUc,GAAG,aAEjC,SAAiBO,GACfT,IAAMU,EAAgBC,OAAAxB,EAAA,EAAAwB,CAAiBF,GACjCG,EAAaH,EAAMG,WACnBC,EAAYT,EAAQU,cAAcC,QAClCC,EAAUJ,EAAWK,KAAOZ,EAC5Ba,EAAeF,EAAUf,EAEzBkB,EAAiC,GAAxBR,OAAAlC,EAAA,EAAAkC,CAAQO,GAAqB,EACtCE,EAAUT,OAAAlC,EAAA,EAAAkC,CAAQ,EAAIO,GAEtBG,EAAQ,IAAIrC,EAAA,EAAM,CACtBsC,MAAO,IAAIrC,EAAA,EAAY,CACrBkC,OAAQA,EACRI,OAAQ,IAAIrC,EAAA,EAAO,CACjBsC,MAAO,mBAAqBJ,EAAU,IACtCK,MAAO,IAAOL,QAKpBV,EAAcgB,SAASL,GACvBX,EAAciB,aAAad,GACvBG,EAAUf,EACZU,OAAApC,EAAA,EAAAoC,CAAQL,GAIVf,EAAIqC,aAQRC,OAAOC,YAhDP,WACE9B,IAAM+B,EAAoB,IAAhBC,KAAKC,SAAiB,IAC1BC,EAAoB,IAAhBF,KAAKC,SAAiB,GAC1BE,EAAO,IAAIzD,EAAA,EAAMiC,OAAA9B,EAAA,EAAA8B,CAAW,CAACoB,EAAGG,KAChC9B,EAAU,IAAI/B,EAAA,EAAQ8D,GAC5B9C,EAAO+C,WAAWhC,IA2CiB","file":"feature-animation.js","sourcesContent":["import Feature from '../src/ol/Feature.js';\nimport Map from '../src/ol/Map.js';\nimport {unByKey} from '../src/ol/Observable.js';\nimport View from '../src/ol/View.js';\nimport {easeOut} from '../src/ol/easing.js';\nimport Point from '../src/ol/geom/Point.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\nimport {fromLonLat} from '../src/ol/proj.js';\nimport {OSM, Vector as VectorSource} from '../src/ol/source.js';\nimport {Circle as CircleStyle, Stroke, Style} from '../src/ol/style.js';\nimport {getVectorContext} from '../src/ol/render.js';\n\nconst tileLayer = new TileLayer({\n  source: new OSM({\n    wrapX: false\n  })\n});\n\nconst map = new Map({\n  layers: [tileLayer],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 1,\n    multiWorld: true\n  })\n});\n\nconst source = new VectorSource({\n  wrapX: false\n});\nconst vector = new VectorLayer({\n  source: source\n});\nmap.addLayer(vector);\n\nfunction addRandomFeature() {\n  const x = Math.random() * 360 - 180;\n  const y = Math.random() * 180 - 90;\n  const geom = new Point(fromLonLat([x, y]));\n  const feature = new Feature(geom);\n  source.addFeature(feature);\n}\n\nconst duration = 3000;\nfunction flash(feature) {\n  const start = new Date().getTime();\n  const listenerKey = tileLayer.on('postrender', animate);\n\n  function animate(event) {\n    const vectorContext = getVectorContext(event);\n    const frameState = event.frameState;\n    const flashGeom = feature.getGeometry().clone();\n    const elapsed = frameState.time - start;\n    const elapsedRatio = elapsed / duration;\n    // radius will be 5 at start and 30 at end.\n    const radius = easeOut(elapsedRatio) * 25 + 5;\n    const opacity = easeOut(1 - elapsedRatio);\n\n    const style = new Style({\n      image: new CircleStyle({\n        radius: radius,\n        stroke: new Stroke({\n          color: 'rgba(255, 0, 0, ' + opacity + ')',\n          width: 0.25 + opacity\n        })\n      })\n    });\n\n    vectorContext.setStyle(style);\n    vectorContext.drawGeometry(flashGeom);\n    if (elapsed > duration) {\n      unByKey(listenerKey);\n      return;\n    }\n    // tell OpenLayers to continue postrender animation\n    map.render();\n  }\n}\n\nsource.on('addfeature', function(e) {\n  flash(e.feature);\n});\n\nwindow.setInterval(addRandomFeature, 1000);\n"],"sourceRoot":""}