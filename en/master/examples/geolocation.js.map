{"version":3,"sources":["webpack:///./geolocation.js"],"names":["__webpack_require__","r","__webpack_exports__","_src_ol_Feature_js__WEBPACK_IMPORTED_MODULE_0__","_src_ol_Geolocation_js__WEBPACK_IMPORTED_MODULE_1__","_src_ol_Map_js__WEBPACK_IMPORTED_MODULE_2__","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_3__","_src_ol_control_js__WEBPACK_IMPORTED_MODULE_4__","_src_ol_geom_Point_js__WEBPACK_IMPORTED_MODULE_5__","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_6__","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_7__","_src_ol_source_js__WEBPACK_IMPORTED_MODULE_8__","_src_ol_source_js__WEBPACK_IMPORTED_MODULE_9__","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_10__","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_11__","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_12__","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_13__","view","center","zoom","map","layers","source","target","controls","Object","attributionOptions","collapsible","geolocation","trackingOptions","enableHighAccuracy","projection","getProjection","el","id","document","getElementById","addEventListener","setTracking","this","checked","on","innerText","getAccuracy","getAltitude","getAltitudeAccuracy","getHeading","getSpeed","error","const","info","innerHTML","message","style","display","accuracyFeature","setGeometry","getAccuracyGeometry","positionFeature","setStyle","image","radius","fill","color","stroke","width","coordinates","getPosition","features"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,IAAAI,EAAAJ,EAAA,KAAAK,EAAAL,EAAA,GAAAM,EAAAN,EAAA,GAAAO,EAAAP,EAAA,KAAAQ,EAAAR,EAAA,IAAAS,EAAAT,EAAA,GAAAU,EAAAV,EAAA,IAAAW,EAAAX,EAAA,GAAAY,EAAAZ,EAAA,IAAAa,EAAAb,EAAA,IAAAc,EAAAd,EAAA,KAAAe,EAAAf,EAAA,IAAAgB,EAAAhB,EAAA,IAUMiB,EAAO,IAAIX,EAAA,GACfY,QAAS,EAAG,GACZC,KAAM,IAGFC,EAAM,IAAIf,EAAA,GACdgB,QACE,IAAIZ,EAAA,GACFa,OAAQ,IAAIX,EAAA,KAGhBY,OAAQ,MACRC,SAAUC,OAAAlB,EAAA,EAAAkB,EACRC,oBACEC,aAAa,KAGjBV,KAAMA,IAGFW,EAAc,IAAIxB,EAAA,GAEtByB,iBACEC,oBAAoB,GAEtBC,WAAYd,EAAKe,kBAGnB,SAASC,EAAGC,GACV,OAAOC,SAASC,eAAeF,GAGjCD,EAAG,SAASI,iBAAiB,SAAU,WACrCT,EAAYU,YAAYC,KAAKC,WAI/BZ,EAAYa,GAAG,SAAU,WACvBR,EAAG,YAAYS,UAAYd,EAAYe,cAAgB,OACvDV,EAAG,YAAYS,UAAYd,EAAYgB,cAAgB,OACvDX,EAAG,oBAAoBS,UAAYd,EAAYiB,sBAAwB,OACvEZ,EAAG,WAAWS,UAAYd,EAAYkB,aAAe,SACrDb,EAAG,SAASS,UAAYd,EAAYmB,WAAa,WAInDnB,EAAYa,GAAG,QAAS,SAASO,GAC/BC,IAAMC,EAAOf,SAASC,eAAe,QACrCc,EAAKC,UAAYH,EAAMI,QACvBF,EAAKG,MAAMC,QAAU,KAGvBL,IAAMM,EAAkB,IAAIpD,EAAA,EAC5ByB,EAAYa,GAAG,0BAA2B,WACxCc,EAAgBC,YAAY5B,EAAY6B,yBAG1CR,IAAMS,EAAkB,IAAIvD,EAAA,EAC5BuD,EAAgBC,SAAS,IAAI9C,EAAA,GAC3B+C,MAAO,IAAI9C,EAAA,GACT+C,OAAQ,EACRC,KAAM,IAAI/C,EAAA,GACRgD,MAAO,YAETC,OAAQ,IAAIhD,EAAA,GACV+C,MAAO,OACPE,MAAO,SAKbrC,EAAYa,GAAG,kBAAmB,WAChCQ,IAAMiB,EAActC,EAAYuC,cAChCT,EAAgBF,YAAYU,EAC1B,IAAI1D,EAAA,EAAM0D,GAAe,QAG7B,IAAIxD,EAAA,GACFU,IAAKA,EACLE,OAAQ,IAAIV,EAAA,GACVwD,UAAWb,EAAiBG","file":"geolocation.js","sourcesContent":["import Feature from '../src/ol/Feature.js';\nimport Geolocation from '../src/ol/Geolocation.js';\nimport Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport {defaults as defaultControls} from '../src/ol/control.js';\nimport Point from '../src/ol/geom/Point.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\nimport {OSM, Vector as VectorSource} from '../src/ol/source.js';\nimport {Circle as CircleStyle, Fill, Stroke, Style} from '../src/ol/style.js';\n\nconst view = new View({\n  center: [0, 0],\n  zoom: 2\n});\n\nconst map = new Map({\n  layers: [\n    new TileLayer({\n      source: new OSM()\n    })\n  ],\n  target: 'map',\n  controls: defaultControls({\n    attributionOptions: {\n      collapsible: false\n    }\n  }),\n  view: view\n});\n\nconst geolocation = new Geolocation({\n  // enableHighAccuracy must be set to true to have the heading value.\n  trackingOptions: {\n    enableHighAccuracy: true\n  },\n  projection: view.getProjection()\n});\n\nfunction el(id) {\n  return document.getElementById(id);\n}\n\nel('track').addEventListener('change', function() {\n  geolocation.setTracking(this.checked);\n});\n\n// update the HTML page when the position changes.\ngeolocation.on('change', function() {\n  el('accuracy').innerText = geolocation.getAccuracy() + ' [m]';\n  el('altitude').innerText = geolocation.getAltitude() + ' [m]';\n  el('altitudeAccuracy').innerText = geolocation.getAltitudeAccuracy() + ' [m]';\n  el('heading').innerText = geolocation.getHeading() + ' [rad]';\n  el('speed').innerText = geolocation.getSpeed() + ' [m/s]';\n});\n\n// handle geolocation error.\ngeolocation.on('error', function(error) {\n  const info = document.getElementById('info');\n  info.innerHTML = error.message;\n  info.style.display = '';\n});\n\nconst accuracyFeature = new Feature();\ngeolocation.on('change:accuracyGeometry', function() {\n  accuracyFeature.setGeometry(geolocation.getAccuracyGeometry());\n});\n\nconst positionFeature = new Feature();\npositionFeature.setStyle(new Style({\n  image: new CircleStyle({\n    radius: 6,\n    fill: new Fill({\n      color: '#3399CC'\n    }),\n    stroke: new Stroke({\n      color: '#fff',\n      width: 2\n    })\n  })\n}));\n\ngeolocation.on('change:position', function() {\n  const coordinates = geolocation.getPosition();\n  positionFeature.setGeometry(coordinates ?\n    new Point(coordinates) : null);\n});\n\nnew VectorLayer({\n  map: map,\n  source: new VectorSource({\n    features: [accuracyFeature, positionFeature]\n  })\n});\n"],"sourceRoot":""}