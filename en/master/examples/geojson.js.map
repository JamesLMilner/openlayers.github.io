{"version":3,"sources":["webpack:///./geojson.js"],"names":["__webpack_require__","r","__webpack_exports__","_src_ol_Feature_js__WEBPACK_IMPORTED_MODULE_0__","_src_ol_Map_js__WEBPACK_IMPORTED_MODULE_1__","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_2__","_src_ol_control_js__WEBPACK_IMPORTED_MODULE_3__","_src_ol_format_GeoJSON_js__WEBPACK_IMPORTED_MODULE_4__","_src_ol_geom_Circle_js__WEBPACK_IMPORTED_MODULE_5__","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_6__","_src_ol_layer_js__WEBPACK_IMPORTED_MODULE_7__","_src_ol_source_js__WEBPACK_IMPORTED_MODULE_8__","_src_ol_source_js__WEBPACK_IMPORTED_MODULE_9__","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_10__","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_11__","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_12__","_src_ol_style_js__WEBPACK_IMPORTED_MODULE_13__","image","radius","fill","stroke","color","width","styles","Point","LineString","MultiLineString","MultiPoint","MultiPolygon","Polygon","lineDash","GeometryCollection","Circle","vectorSource","features","readFeatures","type","crs","properties","name","geometry","coordinates","geometries","addFeature","const","vectorLayer","source","style","feature","getGeometry","getType","layers","target","controls","Object","attributionOptions","collapsible","view","center","zoom"],"mappings":"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","file":"geojson.js","sourcesContent":["import Feature from '../src/ol/Feature.js';\nimport Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport {defaults as defaultControls} from '../src/ol/control.js';\nimport GeoJSON from '../src/ol/format/GeoJSON.js';\nimport Circle from '../src/ol/geom/Circle.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\nimport {OSM, Vector as VectorSource} from '../src/ol/source.js';\nimport {Circle as CircleStyle, Fill, Stroke, Style} from '../src/ol/style.js';\n\n\nconst image = new CircleStyle({\n  radius: 5,\n  fill: null,\n  stroke: new Stroke({color: 'red', width: 1})\n});\n\nconst styles = {\n  'Point': new Style({\n    image: image\n  }),\n  'LineString': new Style({\n    stroke: new Stroke({\n      color: 'green',\n      width: 1\n    })\n  }),\n  'MultiLineString': new Style({\n    stroke: new Stroke({\n      color: 'green',\n      width: 1\n    })\n  }),\n  'MultiPoint': new Style({\n    image: image\n  }),\n  'MultiPolygon': new Style({\n    stroke: new Stroke({\n      color: 'yellow',\n      width: 1\n    }),\n    fill: new Fill({\n      color: 'rgba(255, 255, 0, 0.1)'\n    })\n  }),\n  'Polygon': new Style({\n    stroke: new Stroke({\n      color: 'blue',\n      lineDash: [4],\n      width: 3\n    }),\n    fill: new Fill({\n      color: 'rgba(0, 0, 255, 0.1)'\n    })\n  }),\n  'GeometryCollection': new Style({\n    stroke: new Stroke({\n      color: 'magenta',\n      width: 2\n    }),\n    fill: new Fill({\n      color: 'magenta'\n    }),\n    image: new CircleStyle({\n      radius: 10,\n      fill: null,\n      stroke: new Stroke({\n        color: 'magenta'\n      })\n    })\n  }),\n  'Circle': new Style({\n    stroke: new Stroke({\n      color: 'red',\n      width: 2\n    }),\n    fill: new Fill({\n      color: 'rgba(255,0,0,0.2)'\n    })\n  })\n};\n\nconst styleFunction = function(feature) {\n  return styles[feature.getGeometry().getType()];\n};\n\nconst geojsonObject = {\n  'type': 'FeatureCollection',\n  'crs': {\n    'type': 'name',\n    'properties': {\n      'name': 'EPSG:3857'\n    }\n  },\n  'features': [{\n    'type': 'Feature',\n    'geometry': {\n      'type': 'Point',\n      'coordinates': [0, 0]\n    }\n  }, {\n    'type': 'Feature',\n    'geometry': {\n      'type': 'LineString',\n      'coordinates': [[4e6, -2e6], [8e6, 2e6]]\n    }\n  }, {\n    'type': 'Feature',\n    'geometry': {\n      'type': 'LineString',\n      'coordinates': [[4e6, 2e6], [8e6, -2e6]]\n    }\n  }, {\n    'type': 'Feature',\n    'geometry': {\n      'type': 'Polygon',\n      'coordinates': [[[-5e6, -1e6], [-4e6, 1e6], [-3e6, -1e6]]]\n    }\n  }, {\n    'type': 'Feature',\n    'geometry': {\n      'type': 'MultiLineString',\n      'coordinates': [\n        [[-1e6, -7.5e5], [-1e6, 7.5e5]],\n        [[1e6, -7.5e5], [1e6, 7.5e5]],\n        [[-7.5e5, -1e6], [7.5e5, -1e6]],\n        [[-7.5e5, 1e6], [7.5e5, 1e6]]\n      ]\n    }\n  }, {\n    'type': 'Feature',\n    'geometry': {\n      'type': 'MultiPolygon',\n      'coordinates': [\n        [[[-5e6, 6e6], [-5e6, 8e6], [-3e6, 8e6], [-3e6, 6e6]]],\n        [[[-2e6, 6e6], [-2e6, 8e6], [0, 8e6], [0, 6e6]]],\n        [[[1e6, 6e6], [1e6, 8e6], [3e6, 8e6], [3e6, 6e6]]]\n      ]\n    }\n  }, {\n    'type': 'Feature',\n    'geometry': {\n      'type': 'GeometryCollection',\n      'geometries': [{\n        'type': 'LineString',\n        'coordinates': [[-5e6, -5e6], [0, -5e6]]\n      }, {\n        'type': 'Point',\n        'coordinates': [4e6, -5e6]\n      }, {\n        'type': 'Polygon',\n        'coordinates': [[[1e6, -6e6], [2e6, -4e6], [3e6, -6e6]]]\n      }]\n    }\n  }]\n};\n\nconst vectorSource = new VectorSource({\n  features: (new GeoJSON()).readFeatures(geojsonObject)\n});\n\nvectorSource.addFeature(new Feature(new Circle([5e6, 7e6], 1e6)));\n\nconst vectorLayer = new VectorLayer({\n  source: vectorSource,\n  style: styleFunction\n});\n\nconst map = new Map({\n  layers: [\n    new TileLayer({\n      source: new OSM()\n    }),\n    vectorLayer\n  ],\n  target: 'map',\n  controls: defaultControls({\n    attributionOptions: {\n      collapsible: false\n    }\n  }),\n  view: new View({\n    center: [0, 0],\n    zoom: 2\n  })\n});\n"],"sourceRoot":""}