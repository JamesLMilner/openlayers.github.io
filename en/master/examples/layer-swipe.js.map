{"version":3,"sources":["webpack:///./layer-swipe.js"],"names":["osm","source","aerial","attributions","url","maxZoom","map","layers","target","view","center","zoom","swipe","document","getElementById","on","event","const","ctx","context","width","canvas","value","save","beginPath","rect","height","clip","restore","addEventListener","render"],"mappings":"2FAAA,+CAMMA,EAAM,IAAI,IAAU,CACxBC,OAAQ,IAAI,MAORC,EAAS,IAAI,IAAU,CAC3BD,OAAQ,IAAI,IAAI,CACdE,aALiB,4LAMjBC,IAAK,iGACLC,QAAS,OAIPC,EAAM,IAAI,IAAI,CAClBC,OAAQ,CAACP,EAAKE,GACdM,OAAQ,MACRC,KAAM,IAAI,IAAK,CACbC,OAAQ,CAAC,EAAG,GACZC,KAAM,MAIJC,EAAQC,SAASC,eAAe,SAEtCZ,EAAOa,GAAG,aAAa,SAASC,GAC9BC,IAAMC,EAAMF,EAAMG,QACZC,EAAQF,EAAIG,OAAOD,OAASR,EAAMU,MAAQ,KAEhDJ,EAAIK,OACJL,EAAIM,YACJN,EAAIO,KAAKL,EAAO,EAAGF,EAAIG,OAAOD,MAAQA,EAAOF,EAAIG,OAAOK,QACxDR,EAAIS,UAGNzB,EAAOa,GAAG,cAAc,SAASC,GACnBA,EAAMG,QACdS,aAGNhB,EAAMiB,iBAAiB,SAAS,WAC9BvB,EAAIwB,YACH,K","file":"layer-swipe.js","sourcesContent":["import Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport TileLayer from '../src/ol/layer/Tile.js';\nimport OSM from '../src/ol/source/OSM.js';\nimport XYZ from '../src/ol/source/XYZ.js';\n\nconst osm = new TileLayer({\n  source: new OSM()\n});\n\nconst key = 'get_your_own_D6rA4zTHduk6KOKTXzGB';\nconst attributions = '<a href=\"https://www.maptiler.com/copyright/\" target=\"_blank\">&copy; MapTiler</a> ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">&copy; OpenStreetMap contributors</a>';\n\nconst aerial = new TileLayer({\n  source: new XYZ({\n    attributions: attributions,\n    url: 'https://api.maptiler.com/tiles/satellite/{z}/{x}/{y}.jpg?key=' + key,\n    maxZoom: 20\n  })\n});\n\nconst map = new Map({\n  layers: [osm, aerial],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2\n  })\n});\n\nconst swipe = document.getElementById('swipe');\n\naerial.on('prerender', function(event) {\n  const ctx = event.context;\n  const width = ctx.canvas.width * (swipe.value / 100);\n\n  ctx.save();\n  ctx.beginPath();\n  ctx.rect(width, 0, ctx.canvas.width - width, ctx.canvas.height);\n  ctx.clip();\n});\n\naerial.on('postrender', function(event) {\n  const ctx = event.context;\n  ctx.restore();\n});\n\nswipe.addEventListener('input', function() {\n  map.render();\n}, false);\n"],"sourceRoot":""}