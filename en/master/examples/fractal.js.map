{"version":3,"sources":["webpack:///./fractal.js"],"names":["__webpack_require__","r","__webpack_exports__","_src_ol_Feature_js__WEBPACK_IMPORTED_MODULE_0__","_src_ol_Map_js__WEBPACK_IMPORTED_MODULE_1__","_src_ol_View_js__WEBPACK_IMPORTED_MODULE_2__","_src_ol_geom_LineString_js__WEBPACK_IMPORTED_MODULE_3__","_src_ol_layer_Vector_js__WEBPACK_IMPORTED_MODULE_4__","_src_ol_source_Vector_js__WEBPACK_IMPORTED_MODULE_5__","cos30","Math","cos","PI","rise","sin","run","triangle","feature","layer","source","features","layers","target","view","center","zoom","injectNodes","startNode","const","endNode","next","start","point","end","dx","dy","firstNode","sqrt","a","atan2","secondNode","thirdNode","updateTimer","depthInput","document","getElementById","update","depth","geometry","clone","graph","coordinates","length","level","node","coordsToGraph","getCoordinates","i","let","graphToCoords","innerHTML","setCoordinates","setGeometry","makeFractal","Number","value","onchange","window","clearTimeout","setTimeout"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,IAAAI,EAAAJ,EAAA,GAAAK,EAAAL,EAAA,GAAAM,EAAAN,EAAA,IAAAO,EAAAP,EAAA,IAAAQ,EAAAR,EAAA,IAQMS,EAAQC,KAAKC,IAAID,KAAKE,GAAK,GAE3BC,EAHS,IAEDH,KAAKI,IAAIJ,KAAKE,GAAK,GAE3BG,EAJS,IAIMN,EAEfO,EAAW,IAAIV,EAAA,IAClB,EAPY,MAOCS,GAAMF,KAASE,GAAMF,IAAQ,EAP9B,OAUTI,EAAU,IAAId,EAAA,EAAQa,GAEtBE,EAAQ,IAAIX,EAAA,GAChBY,OAAQ,IAAIX,EAAA,GACVY,UAAWH,OAIH,IAAIb,EAAA,GACdiB,QAASH,GACTI,OAAQ,MACRC,KAAM,IAAIlB,EAAA,GACRmB,QAAS,EAAG,GACZC,KAAM,MAqBV,SAASC,EAAYC,GACnBC,IAAMC,EAAUF,EAAUG,KAEpBC,EAAQJ,EAAUK,MAClBC,EAAMN,EAAUG,KAAKE,MACrBE,EAAKD,EAAI,GAAKF,EAAM,GACpBI,EAAKF,EAAI,GAAKF,EAAM,GAGpBK,GACJJ,OAAQD,EAAM,GAAKG,EAAK,EAAGH,EAAM,GAAKI,EAAK,IAIvClC,EAAIS,KAAK2B,KAAKH,EAAKA,EAAKC,EAAKA,IAAO,EAAI1B,GACxC6B,EAAI5B,KAAK6B,MAAMJ,EAAID,GAAMxB,KAAKE,GAAK,EACnC4B,GACJR,OAAQD,EAAM,GAAK9B,EAAIS,KAAKC,IAAI2B,GAAIP,EAAM,GAAK9B,EAAIS,KAAKI,IAAIwB,KAIxDG,GACJT,OAAQC,EAAI,GAAKC,EAAK,EAAGD,EAAI,GAAKE,EAAK,IAGzCR,EAAUG,KAAOM,EACjBA,EAAUN,KAAOU,EACjBA,EAAWV,KAAOW,EAClBA,EAAUX,KAAOD,EA0BnBD,IAMIc,EANEC,EAAaC,SAASC,eAAe,SAE3C,SAASC,KAzET,SAAqBC,GAGnB,IAFAnB,IAAMoB,EAAWhC,EAASiC,QACpBC,EA+CR,SAAuBC,GAKrB,IAJAvB,IAAMsB,GACJlB,MAAOmB,EAAY,IAEfC,EAASD,EAAYC,OAClBC,EAAQ,EAAGC,EAAOJ,EAAOG,EAAQD,EAAS,IAAKC,EACtDC,EAAKxB,MACHE,MAAOmB,EAAYE,EAAQ,IAE7BC,EAAOA,EAAKxB,KAEd,OAAOoB,EA1DOK,CAAcP,EAASQ,kBAC5BC,EAAI,EAAGA,EAAIV,IAASU,EAE3B,IADAC,IAAIJ,EAAOJ,EACJI,EAAKxB,MAAM,CAChBF,IAAME,EAAOwB,EAAKxB,KAClBJ,EAAY4B,GACZA,EAAOxB,EAGXF,IAAMuB,EAoDR,SAAuBD,GAErB,IADAtB,IAAMuB,GAAeD,EAAMlB,OAClBsB,EAAOJ,EAAOO,EAAI,EAAGH,EAAKxB,KAAMwB,EAAOA,EAAKxB,OAAQ2B,EAC3DN,EAAYM,GAAKH,EAAKxB,KAAKE,MAE7B,OAAOmB,EAzDaQ,CAAcT,GAClCN,SAASC,eAAe,SAASe,UAAYT,EAAYC,OACzDJ,EAASa,eAAeV,GACxBlC,EAAQ6C,YAAYd,GA4DpBe,CAAYC,OAAOrB,EAAWsB,QAUhCtB,EAAWuB,SAAW,WACpBC,OAAOC,aAAa1B,GACpBA,EAAcyB,OAAOE,WAAWvB,EAAQ,MAG1CA","file":"fractal.js","sourcesContent":["import Feature from '../src/ol/Feature.js';\nimport Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport LineString from '../src/ol/geom/LineString.js';\nimport VectorLayer from '../src/ol/layer/Vector.js';\nimport VectorSource from '../src/ol/source/Vector.js';\n\nconst radius = 10e6;\nconst cos30 = Math.cos(Math.PI / 6);\nconst sin30 = Math.sin(Math.PI / 6);\nconst rise = radius * sin30;\nconst run = radius * cos30;\n\nconst triangle = new LineString([\n  [0, radius], [run, -rise], [-run, -rise], [0, radius]\n]);\n\nconst feature = new Feature(triangle);\n\nconst layer = new VectorLayer({\n  source: new VectorSource({\n    features: [feature]\n  })\n});\n\nconst map = new Map({\n  layers: [layer],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 1\n  })\n});\n\nfunction makeFractal(depth) {\n  const geometry = triangle.clone();\n  const graph = coordsToGraph(geometry.getCoordinates());\n  for (let i = 0; i < depth; ++i) {\n    let node = graph;\n    while (node.next) {\n      const next = node.next;\n      injectNodes(node);\n      node = next;\n    }\n  }\n  const coordinates = graphToCoords(graph);\n  document.getElementById('count').innerHTML = coordinates.length;\n  geometry.setCoordinates(coordinates);\n  feature.setGeometry(geometry);\n}\n\nfunction injectNodes(startNode) {\n  const endNode = startNode.next;\n\n  const start = startNode.point;\n  const end = startNode.next.point;\n  const dx = end[0] - start[0];\n  const dy = end[1] - start[1];\n\n  // first point at 1/3 along the segment\n  const firstNode = {\n    point: [start[0] + dx / 3, start[1] + dy / 3]\n  };\n\n  // second point at peak of _/\\_\n  const r = Math.sqrt(dx * dx + dy * dy) / (2 * cos30);\n  const a = Math.atan2(dy, dx) + Math.PI / 6;\n  const secondNode = {\n    point: [start[0] + r * Math.cos(a), start[1] + r * Math.sin(a)]\n  };\n\n  // third point at 2/3 along the segment\n  const thirdNode = {\n    point: [end[0] - dx / 3, end[1] - dy / 3]\n  };\n\n  startNode.next = firstNode;\n  firstNode.next = secondNode;\n  secondNode.next = thirdNode;\n  thirdNode.next = endNode;\n}\n\n\nfunction coordsToGraph(coordinates) {\n  const graph = {\n    point: coordinates[0]\n  };\n  const length = coordinates.length;\n  for (let level = 0, node = graph; level < length - 1; ++level) {\n    node.next = {\n      point: coordinates[level + 1]\n    };\n    node = node.next;\n  }\n  return graph;\n}\n\nfunction graphToCoords(graph) {\n  const coordinates = [graph.point];\n  for (let node = graph, i = 1; node.next; node = node.next, ++i) {\n    coordinates[i] = node.next.point;\n  }\n  return coordinates;\n}\n\nconst depthInput = document.getElementById('depth');\n\nfunction update() {\n  makeFractal(Number(depthInput.value));\n}\n\nlet updateTimer;\n\n\n/**\n * Regenerate fractal on depth change.  Change events are debounced so updates\n * only occur every 200ms.\n */\ndepthInput.onchange = function() {\n  window.clearTimeout(updateTimer);\n  updateTimer = window.setTimeout(update, 200);\n};\n\nupdate();\n"],"sourceRoot":""}