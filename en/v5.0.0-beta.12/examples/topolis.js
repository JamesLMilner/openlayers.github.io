webpackJsonp([36],{576:function(a,b,c){"use strict";function d(a,b){const c=a.getFeatureById(b.id);a.removeFeature(c)}function e(a,b){let c;const d=a.getEdgeByPoint(b,5)[0];return c=d?a.modEdgeSplit(d,b):a.addIsoNode(b),c}Object.defineProperty(b,"__esModule",{value:!0});var f=c(15),g=c(2),h=c(1),i=c(84),j=c(34),k=c(6),l=c(16),m=c(9),n=c(277);const o=new k.d({source:new l.f}),p=new l.n({wrapX:!1}),q=new k.e({source:p,style:function(a){const b=new m.g({image:new m.b({radius:8,fill:new m.c({color:"rgba(255, 0, 0, 0.2)"}),stroke:new m.f({color:"red",width:1})}),text:new m.h({text:a.get("node").id.toString(),fill:new m.c({color:"red"}),stroke:new m.f({color:"white",width:3})})});return[b]}}),r=new l.n({wrapX:!1}),s=new k.e({source:r,style:function(a){const b=new m.g({stroke:new m.f({color:"blue",width:1}),text:new m.h({text:a.get("edge").id.toString(),fill:new m.c({color:"blue"}),stroke:new m.f({color:"white",width:2})})});return[b]}}),t=new l.n({wrapX:!1}),u=new k.e({source:t,style:function(a){const b=new m.g({stroke:new m.f({color:"black",width:1}),fill:new m.c({color:"rgba(0, 255, 0, 0.2)"}),text:new m.h({font:"bold 12px sans-serif",text:a.get("face").id.toString(),fill:new m.c({color:"green"}),stroke:new m.f({color:"white",width:2})})});return[b]}}),v=new g.a({layers:[o,u,s,q],target:"map",view:new h.a({center:[-11e6,46e5],zoom:16})}),w=topolis.createTopology();w.on("addnode",function(a){const b=new f.a({geometry:new i.c(a.coordinate),node:a});b.setId(a.id),p.addFeature(b)}),w.on("removenode",function(a){d(p,a)}),w.on("addedge",function(a){const b=new f.a({geometry:new i.a(a.coordinates),edge:a});b.setId(a.id),r.addFeature(b)}),w.on("modedge",function(a){const b=r.getFeatureById(a.id);b.setGeometry(new i.a(a.coordinates))}),w.on("removeedge",function(a){d(r,a)}),w.on("addface",function(a){const b=w.getFaceGeometry(a),c=new f.a({geometry:new i.d(b),face:a});c.setId(a.id),t.addFeature(c)}),w.on("removeface",function(a){d(t,a)});const x=new j.d({type:"LineString"});x.on("drawend",function(a){const b=a.feature.getGeometry().getCoordinates(),c=b[0],d=b[b.length-1];let f,g;try{f=w.getNodeByPoint(c),g=w.getNodeByPoint(d);const a=w.getEdgeByPoint(c,5),h=w.getEdgeByPoint(d,5),i=w.getEdgesByLine(b);if(1===i.length&&!f&&!g&&0===a.length&&0===h.length)return w.remEdgeNewFace(i[0]),f=i[0].start,f.face&&w.removeIsoNode(f),g=i[0].end,void(g.face&&w.removeIsoNode(g));f||(f=e(w,c),b[0]=f.coordinate),g||(g=e(w,d),b[b.length-1]=g.coordinate),w.addEdgeNewFaces(f,g,b)}catch(a){toastr.warning(a.toString())}}),v.addInteraction(x);const y=new j.j({source:r});v.addInteraction(y),v.addControl(new n.a)}},[576]);