webpackJsonp([126],{403:function(a,b,c){"use strict";Object.defineProperty(b,"__esModule",{value:!0});var d=c(2),e=c(1),f=c(26),g=c(7),h=c(100),i=c(6),j=c(52);const k=function(a,b){if(b.geometry){let a;const c=b.type;let d=b.geometry;return 1===c?(a="MultiPoint",1==d.length&&(a="Point",d=d[0])):2===c?(a="MultiLineString",1==d.length&&(a="LineString",d=d[0])):3===c&&(a="Polygon",1<d.length&&(a="MultiPolygon",d=[d])),{type:"Feature",geometry:{type:a,coordinates:d},properties:b.tags}}return b},l=new j.a({code:"TILE_PIXELS",units:"tile-pixels"}),m=new d.a({layers:[new i.d({source:new g.b})],target:"map",view:new e.a({center:[0,0],zoom:2})});fetch("data/geojson/countries.geojson").then(function(a){return a.json()}).then(function(a){const b=geojsonvt(a,{extent:4096,debug:1}),c=new h.a({format:new f.a,tileLoadFunction:function(a){const c=a.getFormat(),d=a.getTileCoord(),e=b.getTile(d[0],d[1],-d[2]-1),f=c.readFeatures(JSON.stringify({type:"FeatureCollection",features:e?e.features:[]},k));a.setLoader(function(){a.setFeatures(f),a.setProjection(l)})},url:"data:"}),d=new i.f({source:c});m.addLayer(d)})}},[403]);