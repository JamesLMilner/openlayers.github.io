{"version":3,"file":"tracing.js","mappings":"sOAaA,MAAMA,EAAS,IAAI,IAAU,CAC3BC,OAAQ,IAAI,MAIRC,EAAa,IAAI,IAAY,CACjCD,OAAQ,IAAI,IAAa,CACvBE,OAAQ,IAAI,IACZC,IAAK,yJAKHC,EAAa,IAAI,IAAY,CACjCJ,OAAQ,IAAI,IACZK,MAAO,IAAI,KAAM,CACfC,OAAQ,IAAI,IAAO,CACjBC,MAAO,uBACPC,MAAO,IAETC,KAAM,IAAI,IAAK,CACbF,MAAO,+BAMPG,EAAc,IAAI,IAAQ,CAC9BC,SAAU,IAAI,IAAW,MAErBC,EAAgB,IAAI,IAAY,CACpCZ,OAAQ,IAAI,IAAa,CACvBa,SAAU,CAACH,KAEbL,MAAO,IAAI,KAAM,CACfC,OAAQ,IAAI,IAAO,CACjBC,MAAO,qBACPC,MAAO,QAKPM,EAAM,IAAI,IAAI,CAClBC,OAAQ,CAAChB,EAAQE,EAAYG,EAAYQ,GACzCI,OAAQ,MACRC,KAAM,IAAI,KAAK,CACbC,OAAQ,EAAE,SAAU,SACpBC,KAAM,MAIV,IAAIC,EAEJ,MAAMC,EAAkB,IAAI,IAAK,CAC/BrB,OAAQC,EAAWqB,cAGfC,EAAaC,SAASC,eAAe,QAE3C,SAASC,IACP,MAAMC,EAAQJ,EAAWI,MACX,SAAVA,IACFP,EAAkB,IAAI,KAAK,CACzBQ,KAAMD,EACN3B,OAAQI,EAAWkB,YACnBO,OAAO,EACPC,YAAa7B,EAAWqB,cAE1BR,EAAIY,eAAeN,GACnBN,EAAIY,eAAeL,GAEvB,CAEAE,EAAWQ,SAAW,WACpBjB,EAAIkB,kBAAkBZ,GACtBN,EAAIkB,kBAAkBX,GACtBK,GACF,EACAA,G","sources":["webpack:///./tracing.js"],"sourcesContent":["import Draw from '../src/ol/interaction/Draw.js';\nimport Feature from '../src/ol/Feature.js';\nimport Fill from '../src/ol/style/Fill.js';\nimport GeoJSON from '../src/ol/format/GeoJSON.js';\nimport LineString from '../src/ol/geom/LineString.js';\nimport Map from '../src/ol/Map.js';\nimport Snap from '../src/ol/interaction/Snap.js';\nimport Stroke from '../src/ol/style/Stroke.js';\nimport Style from '../src/ol/style/Style.js';\nimport View from '../src/ol/View.js';\nimport {OSM, Vector as VectorSource} from '../src/ol/source.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\n\nconst raster = new TileLayer({\n  source: new OSM(),\n});\n\n// features in this layer will be snapped to\nconst baseVector = new VectorLayer({\n  source: new VectorSource({\n    format: new GeoJSON(),\n    url: \"https://ahocevar.com/geoserver/wfs?service=wfs&request=getfeature&typename=topp:states&cql_filter=STATE_NAME='Idaho'&outputformat=application/json\",\n  }),\n});\n\n// this is were the drawn features go\nconst drawVector = new VectorLayer({\n  source: new VectorSource(),\n  style: new Style({\n    stroke: new Stroke({\n      color: 'rgba(100, 255, 0, 1)',\n      width: 2,\n    }),\n    fill: new Fill({\n      color: 'rgba(100, 255, 0, 0.3)',\n    }),\n  }),\n});\n\n// this line only appears when we're tracing a feature outer ring\nconst previewLine = new Feature({\n  geometry: new LineString([]),\n});\nconst previewVector = new VectorLayer({\n  source: new VectorSource({\n    features: [previewLine],\n  }),\n  style: new Style({\n    stroke: new Stroke({\n      color: 'rgba(255, 0, 0, 1)',\n      width: 2,\n    }),\n  }),\n});\n\nconst map = new Map({\n  layers: [raster, baseVector, drawVector, previewVector],\n  target: 'map',\n  view: new View({\n    center: [-12986427, 5678422],\n    zoom: 5,\n  }),\n});\n\nlet drawInteraction;\n\nconst snapInteraction = new Snap({\n  source: baseVector.getSource(),\n});\n\nconst typeSelect = document.getElementById('type');\n\nfunction addInteraction() {\n  const value = typeSelect.value;\n  if (value !== 'None') {\n    drawInteraction = new Draw({\n      type: value,\n      source: drawVector.getSource(),\n      trace: true,\n      traceSource: baseVector.getSource(),\n    });\n    map.addInteraction(drawInteraction);\n    map.addInteraction(snapInteraction);\n  }\n}\n\ntypeSelect.onchange = function () {\n  map.removeInteraction(drawInteraction);\n  map.removeInteraction(snapInteraction);\n  addInteraction();\n};\naddInteraction();\n"],"names":["raster","source","baseVector","format","url","drawVector","style","stroke","color","width","fill","previewLine","geometry","previewVector","features","map","layers","target","view","center","zoom","drawInteraction","snapInteraction","getSource","typeSelect","document","getElementById","addInteraction","value","type","trace","traceSource","onchange","removeInteraction"],"sourceRoot":""}