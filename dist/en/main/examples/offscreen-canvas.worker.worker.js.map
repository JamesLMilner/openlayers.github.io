{"version":3,"file":"offscreen-canvas.worker.worker.js","mappings":"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IACA,IACA,GAEJ,aAAgB,CACZ,IACA,IACA,IACA,GAEJ,KAAQ,CACJ,EACA,IACA,IACA,GAEJ,WAAc,CACV,IACA,IACA,IACA,GAEJ,MAAS,CACL,IACA,IACA,IACA,GAEJ,MAAS,CACL,IACA,IACA,IACA,GAEJ,OAAU,CACN,IACA,IACA,IACA,GAEJ,MAAS,CACL,EACA,EACA,EACA,GAEJ,eAAkB,CACd,IACA,IACA,IACA,GAEJ,KAAQ,CACJ,EACA,EACA,IACA,GAEJ,WAAc,CACV,IACA,GACA,IACA,GAEJ,MAAS,CACL,IACA,GACA,GACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,UAAa,CACT,GACA,IACA,IACA,GAEJ,WAAc,CACV,IACA,IACA,EACA,GAEJ,UAAa,CACT,IACA,IACA,GACA,GAEJ,MAAS,CACL,IACA,IACA,GACA,GAEJ,eAAkB,CACd,IACA,IACA,IACA,GAEJ,SAAY,CACR,IACA,IACA,IACA,GAEJ,QAAW,CACP,IACA,GACA,GACA,GAEJ,KAAQ,CACJ,EACA,IACA,IACA,GAEJ,SAAY,CACR,EACA,EACA,IACA,GAEJ,SAAY,CACR,EACA,IACA,IACA,GAEJ,cAAiB,CACb,IACA,IACA,GACA,GAEJ,SAAY,CACR,IACA,IACA,IACA,GAEJ,UAAa,CACT,EACA,IACA,EACA,GAEJ,SAAY,CACR,IACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,YAAe,CACX,IACA,EACA,IACA,GAEJ,eAAkB,CACd,GACA,IACA,GACA,GAEJ,WAAc,CACV,IACA,IACA,EACA,GAEJ,WAAc,CACV,IACA,GACA,IACA,GAEJ,QAAW,CACP,IACA,EACA,EACA,GAEJ,WAAc,CACV,IACA,IACA,IACA,GAEJ,aAAgB,CACZ,IACA,IACA,IACA,GAEJ,cAAiB,CACb,GACA,GACA,IACA,GAEJ,cAAiB,CACb,GACA,GACA,GACA,GAEJ,cAAiB,CACb,GACA,GACA,GACA,GAEJ,cAAiB,CACb,EACA,IACA,IACA,GAEJ,WAAc,CACV,IACA,EACA,IACA,GAEJ,SAAY,CACR,IACA,GACA,IACA,GAEJ,YAAe,CACX,EACA,IACA,IACA,GAEJ,QAAW,CACP,IACA,IACA,IACA,GAEJ,QAAW,CACP,IACA,IACA,IACA,GAEJ,WAAc,CACV,GACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,GACA,GACA,GAEJ,YAAe,CACX,IACA,IACA,IACA,GAEJ,YAAe,CACX,GACA,IACA,GACA,GAEJ,QAAW,CACP,IACA,EACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,WAAc,CACV,IACA,IACA,IACA,GAEJ,KAAQ,CACJ,IACA,IACA,EACA,GAEJ,UAAa,CACT,IACA,IACA,GACA,GAEJ,KAAQ,CACJ,IACA,IACA,IACA,GAEJ,MAAS,CACL,EACA,IACA,EACA,GAEJ,YAAe,CACX,IACA,IACA,GACA,GAEJ,KAAQ,CACJ,IACA,IACA,IACA,GAEJ,SAAY,CACR,IACA,IACA,IACA,GAEJ,QAAW,CACP,IACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,GACA,GACA,GAEJ,OAAU,CACN,GACA,EACA,IACA,GAEJ,MAAS,CACL,IACA,IACA,IACA,GAEJ,MAAS,CACL,IACA,IACA,IACA,GAEJ,SAAY,CACR,IACA,IACA,IACA,GAEJ,cAAiB,CACb,IACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,EACA,GAEJ,aAAgB,CACZ,IACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,WAAc,CACV,IACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,qBAAwB,CACpB,IACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,WAAc,CACV,IACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,YAAe,CACX,IACA,IACA,IACA,GAEJ,cAAiB,CACb,GACA,IACA,IACA,GAEJ,aAAgB,CACZ,IACA,IACA,IACA,GAEJ,eAAkB,CACd,IACA,IACA,IACA,GAEJ,eAAkB,CACd,IACA,IACA,IACA,G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","sources":["webpack:///../node_modules/color-name/index.js","webpack:///../node_modules/ieee754/index.js","webpack:///../node_modules/json-stringify-safe/stringify.js","webpack:///../node_modules/pbf/index.js","webpack:///../node_modules/rbush/rbush.min.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///../src/ol/events/Event.js","webpack:///../src/ol/ObjectEventType.js","webpack:///../src/ol/Disposable.js","webpack:///../src/ol/array.js","webpack:///../src/ol/functions.js","webpack:///../src/ol/obj.js","webpack:///../src/ol/events/Target.js","webpack:///../src/ol/events/EventType.js","webpack:///../src/ol/events.js","webpack:///../src/ol/Observable.js","webpack:///../src/ol/util.js","webpack:///../src/ol/Object.js","webpack:///../src/ol/asserts.js","webpack:///../src/ol/Feature.js","webpack:///../src/ol/transform.js","webpack:///../src/ol/extent/Relationship.js","webpack:///../src/ol/extent.js","webpack:///../src/ol/math.js","webpack:///../src/ol/geom/flat/simplify.js","webpack:///../src/ol/geom/flat/contains.js","webpack:///../src/ol/geom/flat/interiorpoint.js","webpack:///../src/ol/proj/Units.js","webpack:///../src/ol/proj/Projection.js","webpack:///../src/ol/proj/epsg3857.js","webpack:///../src/ol/proj/epsg4326.js","webpack:///../src/ol/proj/projections.js","webpack:///../src/ol/proj/transforms.js","webpack:///../src/ol/coordinate.js","webpack:///../src/ol/sphere.js","webpack:///../src/ol/console.js","webpack:///../src/ol/proj.js","webpack:///../src/ol/geom/flat/reverse.js","webpack:///../src/ol/geom/flat/orient.js","webpack:///../src/ol/geom/flat/interpolate.js","webpack:///../src/ol/geom/flat/center.js","webpack:///../src/ol/geom/flat/transform.js","webpack:///../src/ol/render/Feature.js","webpack:///../src/ol/geom/Geometry.js","webpack:///../src/ol/geom/SimpleGeometry.js","webpack:///../src/ol/geom/flat/deflate.js","webpack:///../src/ol/geom/Point.js","webpack:///../src/ol/geom/flat/closest.js","webpack:///../src/ol/geom/flat/segments.js","webpack:///../src/ol/geom/flat/inflate.js","webpack:///../src/ol/geom/flat/intersectsextent.js","webpack:///../src/ol/geom/flat/length.js","webpack:///../src/ol/geom/LineString.js","webpack:///../src/ol/geom/flat/area.js","webpack:///../src/ol/geom/LinearRing.js","webpack:///../src/ol/geom/Polygon.js","webpack:///../src/ol/geom/MultiPoint.js","webpack:///../src/ol/geom/MultiLineString.js","webpack:///../src/ol/geom/MultiPolygon.js","webpack:///../src/ol/format/Feature.js","webpack:///../src/ol/format/MVT.js","webpack:///../src/ol/structs/PriorityQueue.js","webpack:///../src/ol/TileState.js","webpack:///../src/ol/TileQueue.js","webpack:///../src/ol/layer/Property.js","webpack:///../src/ol/layer/Base.js","webpack:///../src/ol/render/EventType.js","webpack:///../src/ol/ViewHint.js","webpack:///../src/ol/ViewProperty.js","webpack:///../src/ol/tilegrid/common.js","webpack:///../src/ol/centerconstraint.js","webpack:///../src/ol/resolutionconstraint.js","webpack:///../src/ol/rotationconstraint.js","webpack:///../src/ol/easing.js","webpack:///../src/ol/View.js","webpack:///../src/ol/layer/Layer.js","webpack:///../src/ol/ImageState.js","webpack:///../src/ol/size.js","webpack:///../src/ol/style/Image.js","webpack:///../node_modules/color-space/rgb.js","webpack:///../node_modules/color-space/xyz.js","webpack:///../node_modules/color-space/luv.js","webpack:///../node_modules/color-space/lchuv.js","webpack:///../node_modules/color-parse/index.js","webpack:///../node_modules/color-space/hsl.js","webpack:///../src/ol/color.js","webpack:///../node_modules/color-rgba/index.js","webpack:///../src/ol/has.js","webpack:///../src/ol/dom.js","webpack:///../src/ol/Image.js","webpack:///../src/ol/style/IconImageCache.js","webpack:///../src/ol/style/IconImage.js","webpack:///../src/ol/colorlike.js","webpack:///../src/ol/css.js","webpack:///../src/ol/render/canvas.js","webpack:///../src/ol/style/RegularShape.js","webpack:///../src/ol/style/Circle.js","webpack:///../src/ol/style/Fill.js","webpack:///../src/ol/style/Stroke.js","webpack:///../src/ol/style/Style.js","webpack:///../src/ol/style/Icon.js","webpack:///../src/ol/style/Text.js","webpack:///../src/ol/expr/expression.js","webpack:///../src/ol/expr/cpu.js","webpack:///../src/ol/render/canvas/style.js","webpack:///../src/ol/layer/BaseVector.js","webpack:///../src/ol/render/canvas/Instruction.js","webpack:///../src/ol/render/VectorContext.js","webpack:///../src/ol/render/canvas/Builder.js","webpack:///../src/ol/render/canvas/ImageBuilder.js","webpack:///../src/ol/render/canvas/LineStringBuilder.js","webpack:///../src/ol/render/canvas/PolygonBuilder.js","webpack:///../src/ol/geom/flat/linechunk.js","webpack:///../src/ol/geom/flat/straightchunk.js","webpack:///../src/ol/render/canvas/TextBuilder.js","webpack:///../src/ol/render/canvas/BuilderGroup.js","webpack:///../src/ol/render/canvas/ZIndexContext.js","webpack:///../src/ol/geom/flat/textpath.js","webpack:///../src/ol/render/canvas/Executor.js","webpack:///../src/ol/render/canvas/ExecutorGroup.js","webpack:///../src/ol/renderer/Layer.js","webpack:///../src/ol/render/Event.js","webpack:///../src/ol/renderer/canvas/Layer.js","webpack:///../src/ol/Tile.js","webpack:///../src/ol/ImageTile.js","webpack:///../src/ol/reproj/Triangulation.js","webpack:///../src/ol/reproj.js","webpack:///../src/ol/reproj/Tile.js","webpack:///../src/ol/reproj/common.js","webpack:///../src/ol/TileRange.js","webpack:///../src/ol/renderer/canvas/TileLayer.js","webpack:///../src/ol/render/canvas/Immediate.js","webpack:///../src/ol/render/canvas/hitdetect.js","webpack:///../src/ol/renderer/vector.js","webpack:///../src/ol/renderer/canvas/VectorTileLayer.js","webpack:///../src/ol/layer/TileProperty.js","webpack:///../src/ol/layer/VectorTile.js","webpack:///../src/ol/VectorTile.js","webpack:///../src/ol/structs/LRUCache.js","webpack:///../src/ol/tilecoord.js","webpack:///../src/ol/TileCache.js","webpack:///../src/ol/tilegrid/TileGrid.js","webpack:///../src/ol/source/TileEventType.js","webpack:///../src/ol/source/Source.js","webpack:///../src/ol/tilegrid.js","webpack:///../src/ol/source/Tile.js","webpack:///../src/ol/tileurlfunction.js","webpack:///../src/ol/source/UrlTile.js","webpack:///../src/ol/VectorRenderTile.js","webpack:///../src/ol/featureloader.js","webpack:///../src/ol/source/VectorTile.js","webpack:///../src/ol/net.js","webpack:///../node_modules/ol-mapbox-style/dist/index.js","webpack:///./offscreen-canvas.worker.js"],"sourcesContent":["'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","exports = module.exports = stringify\nexports.getSerialize = serializer\n\nfunction stringify(obj, replacer, spaces, cycleReplacer) {\n  return JSON.stringify(obj, serializer(replacer, cycleReplacer), spaces)\n}\n\nfunction serializer(replacer, cycleReplacer) {\n  var stack = [], keys = []\n\n  if (cycleReplacer == null) cycleReplacer = function(key, value) {\n    if (stack[0] === value) return \"[Circular ~]\"\n    return \"[Circular ~.\" + keys.slice(0, stack.indexOf(value)).join(\".\") + \"]\"\n  }\n\n  return function(key, value) {\n    if (stack.length > 0) {\n      var thisPos = stack.indexOf(this)\n      ~thisPos ? stack.splice(thisPos + 1) : stack.push(this)\n      ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key)\n      if (~stack.indexOf(value)) value = cycleReplacer.call(this, key, value)\n    }\n    else stack.push(value)\n\n    return replacer == null ? value : replacer.call(this, key, value)\n  }\n}\n","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\n// Threshold chosen based on both benchmarking and knowledge about browser string\n// data structures (which currently switch structure types at 12 bytes or more)\nvar TEXT_DECODER_MIN_LENGTH = 12;\nvar utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf8');\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos;\n        var pos = this.pos;\n        this.pos = end;\n\n        if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\n            // longer strings are fast with the built-in browser TextDecoder API\n            return readUtf8TextDecoder(this.buf, pos, end);\n        }\n        // short strings are fast with our custom implementation\n        return readUtf8(this.buf, pos, end);\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readVarint(isSigned));\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSVarint());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readBoolean());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFloat());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readDouble());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction readUtf8TextDecoder(buf, pos, end) {\n    return utf8TextDecoder.decode(buf.subarray(pos, end));\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this,\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {Array}\n */\nconst matrixPrecision = [1e6, 1e6, 1e6, 1e6, 2, 2];\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString =\n    'matrix(' +\n    mat\n      .map(\n        (value, i) =>\n          Math.round(value * matrixPrecision[i]) / matrixPrecision[i],\n      )\n      .join(', ') +\n    ')';\n  return transformString;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest,\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size,\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest,\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops,\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth,\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @param {boolean} [multiWorld] Return all worlds\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection, multiWorld) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth && !multiWorld) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates,\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0,\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1],\n      );\n    },\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y,\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y,\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y,\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest,\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters,\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth,\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing),\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat),\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326'),\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform,\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward),\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse),\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857',\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326',\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection,\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection,\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection,\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.',\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326,\n  );\n}\n\naddCommon();\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right,\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension,\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n          ? flatCoordinates[o + i]\n          : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate,\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t,\n      ),\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate,\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate,\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false,\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride,\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {\n  douglasPeucker,\n  douglasPeuckerArray,\n  quantizeArray,\n} from '../geom/flat/simplify.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'` or 'MultiLineString'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, stride, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.ends_ = ends || null;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n\n    /**\n     * @type {number}\n     */\n    this.squaredTolerance_;\n\n    /**\n     * @type {number}\n     */\n    this.stride_ = stride;\n\n    /**\n     * @private\n     * @type {RenderFeature}\n     */\n    this.simplifiedGeometry_;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2,\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        this.ends_,\n        2,\n        flatCenter,\n        0,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const ends = inflateEnds(this.flatCoordinates_, this.ends_);\n      const flatCenters = linearRingssCenter(this.flatCoordinates_, 0, ends, 2);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        ends,\n        2,\n        flatCenters,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5,\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride_;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0,\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_,\n      );\n    }\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   */\n  applyTransform(transformFn) {\n    transformFn(this.flatCoordinates_, this.flatCoordinates_, this.stride_);\n  }\n\n  /**\n   * @return {RenderFeature} A cloned render feature.\n   */\n  clone() {\n    return new RenderFeature(\n      this.type_,\n      this.flatCoordinates_.slice(),\n      this.ends_?.slice(),\n      this.stride_,\n      Object.assign({}, this.properties_),\n      this.id_,\n    );\n  }\n\n  /**\n   * @return {Array<number>|null} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Add transform and resolution based geometry simplification to this instance.\n   * @return {RenderFeature} This render feature.\n   */\n  enableSimplifyTransformed() {\n    this.simplifyTransformed = memoizeOne((squaredTolerance, transform) => {\n      if (squaredTolerance === this.squaredTolerance_) {\n        return this.simplifiedGeometry_;\n      }\n      this.simplifiedGeometry_ = this.clone();\n      if (transform) {\n        this.simplifiedGeometry_.applyTransform(transform);\n      }\n      const simplifiedFlatCoordinates =\n        this.simplifiedGeometry_.getFlatCoordinates();\n      let simplifiedEnds;\n      switch (this.type_) {\n        case 'LineString':\n          simplifiedFlatCoordinates.length = douglasPeucker(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.flatCoordinates_.length,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n          );\n          simplifiedEnds = [simplifiedFlatCoordinates.length];\n          break;\n        case 'MultiLineString':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = douglasPeuckerArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        case 'Polygon':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = quantizeArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            Math.sqrt(squaredTolerance),\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        default:\n      }\n      if (simplifiedEnds) {\n        this.simplifiedGeometry_ = new RenderFeature(\n          this.type_,\n          simplifiedFlatCoordinates,\n          simplifiedEnds,\n          2,\n          this.properties_,\n          this.id_,\n        );\n      }\n      this.squaredTolerance_ = squaredTolerance;\n      return this.simplifiedGeometry_;\n    });\n    return this;\n  }\n}\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds()),\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = renderFeature.getEnds();\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName='geometry'] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      },\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform,\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {this} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0,\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates,\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride,\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride,\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest,\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride,\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends,\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride,\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss,\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i],\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint,\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t,\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1,\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride),\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates,\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess,\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i],\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss,\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i],\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    },\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent,\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent,\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    extend(this.flatCoordinates, coordinate);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(\n        0.5,\n        this.flatMidpoint_ ?? undefined,\n      );\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatMidpoint_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0,\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius),\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1],\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride,\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      const layout =\n        lineStrings.length === 0\n          ? this.getLayout()\n          : lineStrings[0].getLayout();\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    /** @type {Array<number>} */\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5,\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout =\n        polygons.length === 0 ? this.getLayout() : polygons[0].getLayout();\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss,\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right,\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters,\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatInteriorPoints_);\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<Array<number>>} */\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss,\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends,\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends,\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_,\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/format/Feature\n */\nimport Feature from '../Feature.js';\nimport RenderFeature from '../render/Feature.js';\nimport {\n  GeometryCollection,\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {abstract} from '../util.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n  transformExtent,\n} from '../proj.js';\nimport {\n  linearRingsAreOriented,\n  linearRingssAreOriented,\n  orientLinearRings,\n  orientLinearRingsArray,\n} from '../geom/flat/orient.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @typedef {Object} SimpleGeometryObject\n * @property {import('../geom/Geometry.js').Type} type Type.\n * @property {Array<number>} flatCoordinates Flat coordinates.\n * @property {Array<number>|Array<Array<number>>} [ends] Ends or endss.\n * @property {import('../geom/Geometry.js').GeometryLayout} [layout] Layout.\n */\n\n/**\n * @typedef {Array<GeometryObject>} GeometryCollectionObject\n */\n\n/**\n * @typedef {SimpleGeometryObject|GeometryCollectionObject} GeometryObject\n */\n\n/**\n * @typedef {Object} FeatureObject\n * @property {string|number} [id] Id.\n * @property {GeometryObject} [geometry] Geometry.\n * @property {Object<string, *>} [properties] Properties.\n */\n\n/***\n * @template {import(\"../Feature.js\").FeatureLike} T\n * @typedef {T extends import(\"../render/Feature.js\").default ? typeof import(\"../render/Feature.js\").default : typeof import(\"../Feature.js\").default} FeatureToFeatureClass<T>\n */\n\n/***\n * @template {import(\"../Feature.js\").FeatureClass} T\n * @typedef {T[keyof T] extends import(\"../render/Feature.js\").default ? import(\"../render/Feature.js\").default : import(\"../Feature.js\").default} FeatureClassToFeature<T>\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @template {import('../Feature.js').FeatureClass} [T=typeof import('../Feature.js').default]\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../Feature.js\").FeatureClass}\n     */\n    this.featureClass = Feature;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n        featureClass: this.featureClass,\n      },\n      options,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike|Array<import(\"../render/Feature.js\").default>} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<import('../Feature.js').FeatureLike|FeatureClassToFeature<T>>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @template {import(\"../geom/Geometry.js\").default|RenderFeature} T\n * @param {T} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {T} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed = geometry;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    if (write) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    const fromProjection = write ? featureProjection : dataProjection;\n    const toProjection = write ? dataProjection : featureProjection;\n    if (fromProjection.getUnits() === 'tile-pixels') {\n      transformed.transform(fromProjection, toProjection);\n    } else {\n      transformed.applyTransform(getTransform(fromProjection, toProjection));\n    }\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n\nconst GeometryConstructor = {\n  Point: Point,\n  LineString: LineString,\n  Polygon: Polygon,\n  MultiPoint: MultiPoint,\n  MultiLineString: MultiLineString,\n  MultiPolygon: MultiPolygon,\n};\n\nfunction orientFlatCoordinates(flatCoordinates, ends, stride) {\n  if (Array.isArray(ends[0])) {\n    // MultiPolagon\n    if (!linearRingssAreOriented(flatCoordinates, 0, ends, stride)) {\n      flatCoordinates = flatCoordinates.slice();\n      orientLinearRingsArray(flatCoordinates, 0, ends, stride);\n    }\n    return flatCoordinates;\n  }\n  if (!linearRingsAreOriented(flatCoordinates, 0, ends, stride)) {\n    flatCoordinates = flatCoordinates.slice();\n    orientLinearRings(flatCoordinates, 0, ends, stride);\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {FeatureObject} object Feature object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {RenderFeature|Array<RenderFeature>} Render feature.\n */\nexport function createRenderFeature(object, options) {\n  const geometry = object.geometry;\n  if (!geometry) {\n    return [];\n  }\n  if (Array.isArray(geometry)) {\n    return geometry\n      .map((geometry) => createRenderFeature({...object, geometry}))\n      .flat();\n  }\n\n  const geometryType =\n    geometry.type === 'MultiPolygon' ? 'Polygon' : geometry.type;\n  if (geometryType === 'GeometryCollection' || geometryType === 'Circle') {\n    throw new Error('Unsupported geometry type: ' + geometryType);\n  }\n\n  const stride = geometry.layout.length;\n  return transformGeometryWithOptions(\n    new RenderFeature(\n      geometryType,\n      geometryType === 'Polygon'\n        ? orientFlatCoordinates(geometry.flatCoordinates, geometry.ends, stride)\n        : geometry.flatCoordinates,\n      geometry.ends?.flat(),\n      stride,\n      object.properties || {},\n      object.id,\n    ).enableSimplifyTransformed(),\n    false,\n    options,\n  );\n}\n\n/**\n * @param {GeometryObject|null} object Geometry object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nexport function createGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n  if (Array.isArray(object)) {\n    const geometries = object.map((geometry) =>\n      createGeometry(geometry, options),\n    );\n    return new GeometryCollection(geometries);\n  }\n  const Geometry = GeometryConstructor[object.type];\n  return transformGeometryWithOptions(\n    new Geometry(object.flatCoordinates, object.layout, object.ends),\n    false,\n    options,\n  );\n}\n","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport FeatureFormat, {transformGeometryWithOptions} from './Feature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport PBF from 'pbf';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Projection from '../proj/Projection.js';\nimport RenderFeature from '../render/Feature.js';\nimport {get} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\n\n/**\n * @template {import(\"../Feature.js\").FeatureClass} FeatureClassToFeature\n * @typedef {Object} Options\n * @property {FeatureClassToFeature} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT~MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * @property {string} [idProperty] Optional property that will be assigned as the feature id and removed from the properties.\n * layers.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @template {import('../Feature.js').FeatureClass} [T=typeof import(\"../render/Feature.js\").default]\n * @extends {FeatureFormat<T>}\n * @api\n */\nclass MVT extends FeatureFormat {\n  /**\n   * @param {Options<T>} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {Projection}\n     */\n    this.dataProjection = new Projection({\n      code: '',\n      units: 'tile-pixels',\n    });\n\n    /**\n     * @private\n     * @type {import(\"../Feature.js\").FeatureClass}\n     */\n    this.featureClass_ = options.featureClass\n      ? options.featureClass\n      : RenderFeature;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.idProperty_ = options.idProperty;\n\n    this.supportedMediaTypes = [\n      'application/vnd.mapbox-vector-tile',\n      'application/x-protobuf',\n    ];\n  }\n\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @param {PBF} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array<number>} ends Array to store ends in.\n   * @private\n   */\n  readRawGeometry_(pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n\n    const end = pbf.readVarint() + pbf.pos;\n    let cmd = 1;\n    let length = 0;\n    let x = 0;\n    let y = 0;\n    let coordsLen = 0;\n    let currentEnd = 0;\n\n    while (pbf.pos < end) {\n      if (!length) {\n        const cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) {\n          // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n      } else if (cmd === 7) {\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(\n            flatCoordinates[currentEnd],\n            flatCoordinates[currentEnd + 1],\n          );\n          coordsLen += 2;\n        }\n      } else {\n        throw new Error('Invalid command found in the PBF');\n      }\n    }\n\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n  }\n\n  /**\n   * @private\n   * @param {PBF} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {import(\"./Feature.js\").ReadOptions} options Read options.\n   * @return {import(\"../Feature.js\").FeatureLike|null} Feature.\n   */\n  createFeature_(pbf, rawFeature, options) {\n    const type = rawFeature.type;\n    if (type === 0) {\n      return null;\n    }\n\n    let feature;\n    const values = rawFeature.properties;\n\n    let id;\n    if (!this.idProperty_) {\n      id = rawFeature.id;\n    } else {\n      id = values[this.idProperty_];\n      delete values[this.idProperty_];\n    }\n\n    values[this.layerName_] = rawFeature.layer.name;\n\n    const flatCoordinates = /** @type {Array<number>} */ ([]);\n    const ends = /** @type {Array<number>} */ ([]);\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n    const geometryType = getGeometryType(type, ends.length);\n\n    if (this.featureClass_ === RenderFeature) {\n      feature = new this.featureClass_(\n        geometryType,\n        flatCoordinates,\n        ends,\n        2,\n        values,\n        id,\n      );\n      feature.transform(options.dataProjection);\n    } else {\n      let geom;\n      if (geometryType == 'Polygon') {\n        const endss = inflateEnds(flatCoordinates, ends);\n        geom =\n          endss.length > 1\n            ? new MultiPolygon(flatCoordinates, 'XY', endss)\n            : new Polygon(flatCoordinates, 'XY', ends);\n      } else {\n        geom =\n          geometryType === 'Point'\n            ? new Point(flatCoordinates, 'XY')\n            : geometryType === 'LineString'\n              ? new LineString(flatCoordinates, 'XY')\n              : geometryType === 'MultiPoint'\n                ? new MultiPoint(flatCoordinates, 'XY')\n                : geometryType === 'MultiLineString'\n                  ? new MultiLineString(flatCoordinates, 'XY', ends)\n                  : null;\n      }\n      const ctor = /** @type {typeof import(\"../Feature.js\").default} */ (\n        this.featureClass_\n      );\n      feature = new ctor();\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n      const geometry = transformGeometryWithOptions(geom, false, options);\n      feature.setGeometry(geometry);\n      if (id !== undefined) {\n        feature.setId(id);\n      }\n      feature.setProperties(values, true);\n    }\n\n    return feature;\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'arraybuffer';\n  }\n\n  /**\n   * Read all features.\n   *\n   * @param {ArrayBuffer} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import('./Feature.js').FeatureClassToFeature<T>>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    const layers = this.layers_;\n    options = this.adaptOptions(options);\n    const dataProjection = get(options.dataProjection);\n    dataProjection.setWorldExtent(options.extent);\n    options.dataProjection = dataProjection;\n\n    const pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n    const pbfLayers = pbf.readFields(layersPBFReader, {});\n    const features = [];\n    for (const name in pbfLayers) {\n      if (layers && !layers.includes(name)) {\n        continue;\n      }\n      const pbfLayer = pbfLayers[name];\n\n      const extent = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n      dataProjection.setExtent(extent);\n\n      for (let i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        const rawFeature = readRawFeature(pbf, pbfLayer, i);\n        const feature = this.createFeature_(pbf, rawFeature, options);\n        if (feature !== null) {\n          features.push(feature);\n        }\n      }\n    }\n\n    return /** @type {Array<import('./Feature.js').FeatureClassToFeature<T>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array<string>} layers Layers.\n   * @api\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n}\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {PBF} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    const layer = {\n      keys: [],\n      values: [],\n      features: [],\n    };\n    const end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {PBF} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    let value = null;\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value =\n        tag === 1\n          ? pbf.readString()\n          : tag === 2\n            ? pbf.readFloat()\n            : tag === 3\n              ? pbf.readDouble()\n              : tag === 4\n                ? pbf.readVarint64()\n                : tag === 5\n                  ? pbf.readVarint()\n                  : tag === 6\n                    ? pbf.readSVarint()\n                    : tag === 7\n                      ? pbf.readBoolean()\n                      : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {PBF} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      const key = feature.layer.keys[pbf.readVarint()];\n      const value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @param {PBF} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  const end = pbf.readVarint() + pbf.pos;\n\n  const feature = {\n    layer: layer,\n    type: 0,\n    properties: {},\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n/**\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {import(\"../render/Feature.js\").Type} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {import(\"../render/Feature.js\").Type} */\n  let geometryType;\n  if (type === 1) {\n    geometryType = numEnds === 1 ? 'Point' : 'MultiPoint';\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ? 'LineString' : 'MultiLineString';\n  } else if (type === 3) {\n    geometryType = 'Polygon';\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\nexport default MVT;\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue',\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      },\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution,\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number',\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent,\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance,\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset,\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution,\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  const t = tolerance === undefined ? toRadians(5) : tolerance;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving || rotation === undefined) {\n        return rotation;\n      }\n\n      if (Math.abs(rotation) <= t) {\n        return 0;\n      }\n      return rotation;\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to\n * fit the extent into. Defaults to the size of the map the view is associated with.\n * If no map or multiple maps are connected to the view, provide the desired box size\n * (e.g. `map.getSize()`).\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null,\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection(),\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection(),\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor,\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor,\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed box size.\n   * @param {import(\"./size.js\").Size} [size] The pixel dimensions of the box\n   * into which the calculated extent should fit. Defaults to the size of the\n   * map the view is associated with.\n   * If no map or multiple maps are connected to the view, provide the desired\n   * box size (e.g. `map.getSize()`).\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size,\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2,\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`',\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`',\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection(),\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback,\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position,\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation(),\n      ),\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving,\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving,\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center,\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving,\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size,\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction),\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor),\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number | undefined} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_,\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this,\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this,\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /** @return {string} Declutter */\n  getDeclutter() {\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {}\n\n  /**\n   * When the renderer follows a layout -> render approach, do the final rendering here.\n   * @param {import('../Map.js').FrameState} frameState Frame state\n   */\n  renderDeferred(frameState) {\n    const layerRenderer = this.getRenderer();\n    if (!layerRenderer) {\n      return;\n    }\n    layerRenderer.renderDeferred(frameState);\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.',\n          );\n          layerStatesArray.push(layerState);\n        },\n        this,\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {import('../style/Style.js').DeclutterMode} declutterMode Declutter mode: `declutter`, `obstacle`, `none`.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * @return {Promise<void>} `false` or Promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return Promise.resolve();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * RGB space.\n *\n * @module  color-space/rgb\n */\n\nexport default {\n\tname: 'rgb',\n\tmin: [0,0,0],\n\tmax: [255,255,255],\n\tchannel: ['red', 'green', 'blue'],\n\talias: ['RGB']\n};\n","/**\n * CIE XYZ\n *\n * @module  color-space/xyz\n */\nimport rgb from './rgb.js';\n\nvar xyz = {\n\tname: 'xyz',\n\tmin: [0,0,0],\n\tchannel: ['X','Y','Z'],\n\talias: ['XYZ', 'ciexyz', 'cie1931']\n};\n\n\n/**\n * Whitepoint reference values with observer/illuminant\n *\n * http://en.wikipedia.org/wiki/Standard_illuminant\n */\nxyz.whitepoint = {\n\t//1931 2°\n\t2: {\n\t\t//incadescent\n\t\tA:[109.85, 100, 35.585],\n\t\t// B:[],\n\t\tC: [98.074, 100, 118.232],\n\t\tD50: [96.422, 100, 82.521],\n\t\tD55: [95.682, 100, 92.149],\n\t\t//daylight\n\t\tD65: [95.045592705167, 100, 108.9057750759878],\n\t\tD75: [94.972, 100, 122.638],\n\t\t//flourescent\n\t\t// F1: [],\n\t\tF2: [99.187, 100, 67.395],\n\t\t// F3: [],\n\t\t// F4: [],\n\t\t// F5: [],\n\t\t// F6:[],\n\t\tF7: [95.044, 100, 108.755],\n\t\t// F8: [],\n\t\t// F9: [],\n\t\t// F10: [],\n\t\tF11: [100.966, 100, 64.370],\n\t\t// F12: [],\n\t\tE: [100,100,100]\n\t},\n\n\t//1964  10°\n\t10: {\n\t\t//incadescent\n\t\tA:[111.144, 100, 35.200],\n\t\tC: [97.285, 100, 116.145],\n\t\tD50: [96.720, 100, 81.427],\n\t\tD55: [95.799, 100, 90.926],\n\t\t//daylight\n\t\tD65: [94.811, 100, 107.304],\n\t\tD75: [94.416, 100, 120.641],\n\t\t//flourescent\n\t\tF2: [103.280, 100, 69.026],\n\t\tF7: [95.792, 100, 107.687],\n\t\tF11: [103.866, 100, 65.627],\n\t\tE: [100,100,100]\n\t}\n};\n\n\n/**\n * Top values are the whitepoint’s top values, default are D65\n */\nxyz.max = xyz.whitepoint[2].D65;\n\n\n/**\n * Transform xyz to rgb\n *\n * @param {Array} xyz Array of xyz values\n *\n * @return {Array} RGB values\n */\nxyz.rgb = function (_xyz, white) {\n\t//FIXME: make sure we have to divide like this. Probably we have to replace matrix as well then\n\twhite = white || xyz.whitepoint[2].E;\n\n\tvar x = _xyz[0] / white[0],\n\t\ty = _xyz[1] / white[1],\n\t\tz = _xyz[2] / white[2],\n\t\tr, g, b;\n\n\t// assume sRGB\n\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\tr = (x * 3.240969941904521) + (y * -1.537383177570093) + (z * -0.498610760293);\n\tg = (x * -0.96924363628087) + (y * 1.87596750150772) + (z * 0.041555057407175);\n\tb = (x * 0.055630079696993) + (y * -0.20397695888897) + (z * 1.056971514242878);\n\n\tr = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r = (r * 12.92);\n\n\tg = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g = (g * 12.92);\n\n\tb = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b = (b * 12.92);\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n}\n\n\n\n/**\n * RGB to XYZ\n *\n * @param {Array} rgb RGB channels\n *\n * @return {Array} XYZ channels\n */\nrgb.xyz = function(rgb, white) {\n\tvar r = rgb[0] / 255,\n\t\t\tg = rgb[1] / 255,\n\t\t\tb = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.41239079926595) + (g * 0.35758433938387) + (b * 0.18048078840183);\n\tvar y = (r * 0.21263900587151) + (g * 0.71516867876775) + (b * 0.072192315360733);\n\tvar z = (r * 0.019330818715591) + (g * 0.11919477979462) + (b * 0.95053215224966);\n\n\twhite = white || xyz.whitepoint[2].E;\n\n\treturn [x * white[0], y * white[1], z * white[2]];\n};\n\n\n\nexport default xyz;\n","/**\n * CIE LUV (C'est la vie)\n *\n * @module color-space/luv\n */\n import xyz from './xyz.js';\n\nexport default {\n\tname: 'luv',\n\t//NOTE: luv has no rigidly defined limits\n\t//easyrgb fails to get proper coords\n\t//boronine states no rigid limits\n\t//colorMine refers this ones:\n\tmin: [0,-134,-140],\n\tmax: [100,224,122],\n\tchannel: ['lightness', 'u', 'v'],\n\talias: ['LUV', 'cieluv', 'cie1976'],\n\n\txyz: function(arg, i, o){\n\t\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\t\tl = arg[0], u = arg[1], v = arg[2];\n\n\t\tif (l === 0) return [0,0,0];\n\n\t\t//get constants\n\t\t//var e = 0.008856451679035631; //(6/29)^3\n\t\tvar k = 0.0011070564598794539; //(3/29)^3\n\n\t\t//get illuminant/observer\n\t\ti = i || 'D65';\n\t\to = o || 2;\n\n\t\txn = xyz.whitepoint[o][i][0];\n\t\tyn = xyz.whitepoint[o][i][1];\n\t\tzn = xyz.whitepoint[o][i][2];\n\n\t\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\t\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\t\t// un = 0.19783000664283;\n\t\t// vn = 0.46831999493879;\n\n\n\t\t_u = u / (13 * l) + un || 0;\n\t\t_v = v / (13 * l) + vn || 0;\n\n\t\ty = l > 8 ? yn * Math.pow( (l + 16) / 116 , 3) : yn * l * k;\n\n\t\t//wikipedia method\n\t\tx = y * 9 * _u / (4 * _v) || 0;\n\t\tz = y * (12 - 3 * _u - 20 * _v) / (4 * _v) || 0;\n\n\t\t//boronine method\n\t\t//https://github.com/boronine/husl/blob/master/husl.coffee#L201\n\t\t// x = 0 - (9 * y * _u) / ((_u - 4) * _v - _u * _v);\n\t\t// z = (9 * y - (15 * _v * y) - (_v * x)) / (3 * _v);\n\n\t\treturn [x, y, z];\n\t}\n};\n\n// http://www.brucelindbloom.com/index.html?Equations.html\n// https://github.com/boronine/husl/blob/master/husl.coffee\n//i - illuminant\n//o - observer\nxyz.luv = function(arg, i, o) {\n\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\n\t//get constants\n\tvar e = 0.008856451679035631; //(6/29)^3\n\tvar k = 903.2962962962961; //(29/3)^3\n\n\t//get illuminant/observer coords\n\ti = i || 'D65';\n\to = o || 2;\n\n\txn = xyz.whitepoint[o][i][0];\n\tyn = xyz.whitepoint[o][i][1];\n\tzn = xyz.whitepoint[o][i][2];\n\n\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\n\n\tx = arg[0], y = arg[1], z = arg[2];\n\n\n\t_u = (4 * x) / (x + (15 * y) + (3 * z)) || 0;\n\t_v = (9 * y) / (x + (15 * y) + (3 * z)) || 0;\n\n\tvar yr = y/yn;\n\n\tl = yr <= e ? k * yr : 116 * Math.pow(yr, 1/3) - 16;\n\n\tu = 13 * l * (_u - un);\n\tv = 13 * l * (_v - vn);\n\n\treturn [l, u, v];\n};\n","/**\n * Cylindrical CIE LUV\n *\n * @module color-space/lchuv\n */\nimport luv from './luv.js';\nimport xyz from './xyz.js';\n\n//cylindrical luv\nvar lchuv = {\n\tname: 'lchuv',\n\tchannel: ['lightness', 'chroma', 'hue'],\n\talias: ['LCHuv', 'cielchuv'],\n\tmin: [0,0,0],\n\tmax: [100,100,360],\n\n\tluv: function(luv){\n\t\tvar l = luv[0],\n\t\tc = luv[1],\n\t\th = luv[2],\n\t\tu, v, hr;\n\n\t\thr = h / 360 * 2 * Math.PI;\n\t\tu = c * Math.cos(hr);\n\t\tv = c * Math.sin(hr);\n\t\treturn [l, u, v];\n\t},\n\n\txyz: function(arg) {\n\t\treturn luv.xyz(lchuv.luv(arg));\n\t}\n};\n\nexport default lchuv;\n\nluv.lchuv = function(luv){\n\tvar l = luv[0], u = luv[1], v = luv[2];\n\n\tvar c = Math.sqrt(u*u + v*v);\n\tvar hr = Math.atan2(v,u);\n\tvar h = hr * 360 / 2 / Math.PI;\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\treturn [l,c,h]\n};\n\nxyz.lchuv = function(arg){\n  return luv.lchuv(xyz.luv(arg));\n};\n","/**\n * @module color-parse\n */\nimport names from 'color-name'\n\nexport default parse\n\n/**\n * Base hues\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\n */\n//FIXME: use external hue detector\nvar baseHues = {\n\tred: 0,\n\torange: 60,\n\tyellow: 120,\n\tgreen: 180,\n\tblue: 240,\n\tpurple: 300\n}\n\n/**\n * Parse color from the string passed\n *\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\n */\nfunction parse(cstr) {\n\tvar m, parts = [], alpha = 1, space\n\n\t//numeric case\n\tif (typeof cstr === 'number') {\n\t\treturn { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\t}\n\tif (typeof cstr === 'number') return { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\n\tcstr = String(cstr).toLowerCase();\n\n\t//keyword\n\tif (names[cstr]) {\n\t\tparts = names[cstr].slice()\n\t\tspace = 'rgb'\n\t}\n\n\t//reserved words\n\telse if (cstr === 'transparent') {\n\t\talpha = 0\n\t\tspace = 'rgb'\n\t\tparts = [0, 0, 0]\n\t}\n\n\t//hex\n\telse if (cstr[0] === '#') {\n\t\tvar base = cstr.slice(1)\n\t\tvar size = base.length\n\t\tvar isShort = size <= 4\n\t\talpha = 1\n\n\t\tif (isShort) {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[0], 16),\n\t\t\t\tparseInt(base[1] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[2], 16)\n\t\t\t]\n\t\t\tif (size === 4) {\n\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[3], 16),\n\t\t\t\tparseInt(base[4] + base[5], 16)\n\t\t\t]\n\t\t\tif (size === 8) {\n\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\n\t\t\t}\n\t\t}\n\n\t\tif (!parts[0]) parts[0] = 0\n\t\tif (!parts[1]) parts[1] = 0\n\t\tif (!parts[2]) parts[2] = 0\n\n\t\tspace = 'rgb'\n\t}\n\n\t// color space\n\telse if (m = /^((?:rgba?|hs[lvb]a?|hwba?|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms|oklch|oklab|color))\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\n\t\tvar name = m[1]\n\t\tspace = name.replace(/a$/, '')\n\t\tvar dims = space === 'cmyk' ? 4 : space === 'gray' ? 1 : 3\n\t\tparts = m[2].trim().split(/\\s*[,\\/]\\s*|\\s+/)\n\n\t\t// color(srgb-linear x x x) -> srgb-linear(x x x)\n\t\tif (space === 'color') space = parts.shift()\n\n\t\tparts = parts.map(function (x, i) {\n\t\t\t//<percentage>\n\t\t\tif (x[x.length - 1] === '%') {\n\t\t\t\tx = parseFloat(x) / 100\n\t\t\t\t// alpha -> 0..1\n\t\t\t\tif (i === 3) return x\n\t\t\t\t// rgb -> 0..255\n\t\t\t\tif (space === 'rgb') return x * 255\n\t\t\t\t// hsl, hwb H -> 0..100\n\t\t\t\tif (space[0] === 'h') return x * 100\n\t\t\t\t// lch, lab L -> 0..100\n\t\t\t\tif (space[0] === 'l' && !i) return x * 100\n\t\t\t\t// lab A B -> -125..125\n\t\t\t\tif (space === 'lab') return x * 125\n\t\t\t\t// lch C -> 0..150, H -> 0..360\n\t\t\t\tif (space === 'lch') return i < 2 ? x * 150 : x * 360\n\t\t\t\t// oklch/oklab L -> 0..1\n\t\t\t\tif (space[0] === 'o' && !i) return x\n\t\t\t\t// oklab A B -> -0.4..0.4\n\t\t\t\tif (space === 'oklab') return x * 0.4\n\t\t\t\t// oklch C -> 0..0.4, H -> 0..360\n\t\t\t\tif (space === 'oklch') return i < 2 ? x * 0.4 : x * 360\n\t\t\t\t// color(xxx) -> 0..1\n\t\t\t\treturn x\n\t\t\t}\n\n\t\t\t//hue\n\t\t\tif (space[i] === 'h' || (i === 2 && space[space.length - 1] === 'h')) {\n\t\t\t\t//<base-hue>\n\t\t\t\tif (baseHues[x] !== undefined) return baseHues[x]\n\t\t\t\t//<deg>\n\t\t\t\tif (x.endsWith('deg')) return parseFloat(x)\n\t\t\t\t//<turn>\n\t\t\t\tif (x.endsWith('turn')) return parseFloat(x) * 360\n\t\t\t\tif (x.endsWith('grad')) return parseFloat(x) * 360 / 400\n\t\t\t\tif (x.endsWith('rad')) return parseFloat(x) * 180 / Math.PI\n\t\t\t}\n\t\t\tif (x === 'none') return 0\n\t\t\treturn parseFloat(x)\n\t\t});\n\n\t\talpha = parts.length > dims ? parts.pop() : 1\n\t}\n\n\t//named channels case\n\telse if (/[0-9](?:\\s|\\/|,)/.test(cstr)) {\n\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\n\t\t\treturn parseFloat(value)\n\t\t})\n\n\t\tspace = cstr.match(/([a-z])/ig)?.join('')?.toLowerCase() || 'rgb'\n\t}\n\n\treturn {\n\t\tspace,\n\t\tvalues: parts,\n\t\talpha\n\t}\n}\n","/**\n * @module color-space/hsl\n */\nimport rgb from './rgb.js';\n\nexport default {\n\tname: 'hsl',\n\tmin: [0,0,0],\n\tmax: [360,100,100],\n\tchannel: ['hue', 'saturation', 'lightness'],\n\talias: ['HSL'],\n\n\trgb: function(hsl) {\n\t\tvar h = hsl[0]/360, s = hsl[1]/100, l = hsl[2]/100, t1, t2, t3, rgb, val, i=0;\n\n\t\tif (s === 0) return val = l * 255, [val, val, val];\n\n\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\tt1 = 2 * l - t2;\n\n\t\trgb = [0, 0, 0];\n\t\tfor (;i<3;) {\n\t\t\tt3 = h + 1 / 3 * - (i - 1);\n\t\t\tt3 < 0 ? t3++ : t3 > 1 && t3--;\n\t\t\tval = 6 * t3 < 1 ? t1 + (t2 - t1) * 6 * t3 :\n\t\t\t2 * t3 < 1 ? t2 :\n\t\t\t3 * t3 < 2 ?  t1 + (t2 - t1) * (2 / 3 - t3) * 6 :\n\t\t\tt1;\n\t\t\trgb[i++] = val * 255;\n\t\t}\n\n\t\treturn rgb;\n\t}\n};\n\n\n//extend rgb\nrgb.hsl = function(rgb) {\n\tvar r = rgb[0]/255,\n\t\t\tg = rgb[1]/255,\n\t\t\tb = rgb[2]/255,\n\t\t\tmin = Math.min(r, g, b),\n\t\t\tmax = Math.max(r, g, b),\n\t\t\tdelta = max - min,\n\t\t\th, s, l;\n\n\tif (max === min) {\n\t\th = 0;\n\t}\n\telse if (r === max) {\n\t\th = (g - b) / delta;\n\t}\n\telse if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t}\n\telse if (b === max) {\n\t\th = 4 + (r - g)/ delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t}\n\telse if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t}\n\telse {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n","/**\n * @module ol/color\n */\nimport lchuv from 'color-space/lchuv.js';\nimport parseRgba from 'color-rgba';\nimport rgb from 'color-space/rgb.js';\nimport xyz from 'color-space/xyz.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const output = xyz.lchuv(rgb.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const output = xyz.rgb(lchuv.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throw new Error('Failed to parse \"' + s + '\" as color');\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throw new Error('Failed to parse \"' + s + '\" as color');\n    }\n  }\n  normalize(color);\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * Exported for the tests.\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 1000) / 1000;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch (_) {\n    return false;\n  }\n}\n","/** @module  color-rgba */\nimport parse from 'color-parse'\nimport rgb from 'color-space/rgb.js'\nimport hsl from 'color-space/hsl.js'\n\nexport default function rgba(color) {\n\t// template literals\n\tif (Array.isArray(color) && color.raw) color = String.raw(...arguments)\n\tif (color instanceof Number) color = +color\n\n\tvar values, i, l\n\n\t//attempt to parse non-array arguments\n\tvar parsed = parse(color)\n\n\tif (!parsed.space) return []\n\n\tconst min = parsed.space[0] === 'h' ? hsl.min : rgb.min\n\tconst max = parsed.space[0] === 'h' ? hsl.max : rgb.max\n\n\tvalues = Array(3)\n\tvalues[0] = Math.min(Math.max(parsed.values[0], min[0]), max[0])\n\tvalues[1] = Math.min(Math.max(parsed.values[1], min[1]), max[1])\n\tvalues[2] = Math.min(Math.max(parsed.values[2], min[2]), max[2])\n\n\tif (parsed.space[0] === 'h') {\n\t\tvalues = hsl.rgb(values)\n\t}\n\n\tvalues.push(Math.min(Math.max(parsed.alpha, 0), 1))\n\n\treturn values\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet sharedCanvasContext;\n\n/**\n * @return {CanvasRenderingContext2D} Shared canvas context.\n */\nexport function getSharedCanvasContext2D() {\n  if (!sharedCanvasContext) {\n    sharedCanvasContext = createCanvasContext2D(1, 1);\n  }\n  return sharedCanvasContext;\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/Image\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport ImageState from './ImageState.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|import(\"./Image.js\").Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./Image.js\").Loader}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(\n            this.getExtent(),\n            requestResolution,\n            this.getPixelRatio(),\n          ),\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              image instanceof ImageBitmap ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e),\n          ),\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImageCache\n */\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getSharedCanvasContext2D} from '../dom.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {!Object<string, CanvasPattern>}\n     * @private\n     */\n    this.patternCache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.patternCache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          delete this.patternCache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {CanvasPattern} Icon image.\n   */\n  getPattern(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\n   */\n  set(src, crossOrigin, color, iconImage, pattern) {\n    const key = getCacheKey(src, crossOrigin, color);\n    const update = key in this.cache_;\n    this.cache_[key] = iconImage;\n    if (pattern) {\n      if (iconImage.getImageState() === ImageState.IDLE) {\n        iconImage.load();\n      }\n      if (iconImage.getImageState() === ImageState.LOADING) {\n        iconImage.ready().then(() => {\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n            iconImage.getImage(1),\n            'repeat',\n          );\n        });\n      } else {\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n          iconImage.getImage(1),\n          'repeat',\n        );\n      }\n    }\n    if (!update) {\n      ++this.cacheSize_;\n    }\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @return {string} Cache key.\n */\nexport function getCacheKey(src, crossOrigin, color) {\n  const colorString = color ? asArray(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {decodeFallback} from '../Image.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|string|null}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n\n    /**\n     * @private\n     * @type {Promise<void>|null}\n     */\n    this.ready_ = null;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch (e) {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * @return {Promise<void>} Promise that resolves when the image is loaded.\n   */\n  ready() {\n    if (!this.ready_) {\n      this.ready_ = new Promise((resolve) => {\n        if (\n          this.imageState_ === ImageState.LOADED ||\n          this.imageState_ === ImageState.ERROR\n        ) {\n          resolve();\n        } else {\n          this.addEventListener(EventType.CHANGE, function onChange() {\n            if (\n              this.imageState_ === ImageState.LOADED ||\n              this.imageState_ === ImageState.ERROR\n            ) {\n              this.removeEventListener(EventType.CHANGE, onChange);\n              resolve();\n            }\n          });\n        }\n      });\n    }\n    return this.ready_;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n * @param {string|undefined} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @param {boolean} [pattern] Also cache a `repeat` pattern with the icon image.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color, pattern) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image && 'src' in image ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color,\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  if (\n    pattern &&\n    iconImage &&\n    !iconImageCache.getPattern(cacheKey, crossOrigin, color)\n  ) {\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/colorlike\n */\nimport ImageState from './ImageState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {get as getIconImage} from './style/IconImage.js';\nimport {shared as iconCache} from './style/IconImageCache.js';\nimport {toString} from './color.js';\n\n/**\n * @typedef {Object} PatternDescriptor\n * @property {string} src Pattern image URL\n * @property {import(\"./color.js\").Color|string} [color] Color to tint the pattern with.\n * @property {import(\"./size.js\").Size} [size] Size of the desired slice from the pattern image.\n * Use this together with `offset` when the pattern image is a sprite sheet.\n * @property {import(\"./size.js\").Size} [offset] Offset of the desired slice from the pattern image.\n * Use this together with `size` when the pattern image is a sprite sheet.\n */\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, [CanvasPattern](https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern),\n * or [CanvasGradient](https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient). The origin for\n * patterns and gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike|PatternDescriptor|null} color Color.\n * @return {ColorLike|null} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (!color) {\n    return null;\n  }\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  if (typeof color === 'object' && 'src' in color) {\n    return asCanvasPattern(color);\n  }\n  return color;\n}\n\n/**\n * @param {PatternDescriptor} pattern Pattern descriptor.\n * @return {CanvasPattern|null} Canvas pattern or null if the pattern referenced in the\n * PatternDescriptor was not found in the icon image cache.\n */\nfunction asCanvasPattern(pattern) {\n  if (!pattern.offset || !pattern.size) {\n    return iconCache.getPattern(pattern.src, 'anonymous', pattern.color);\n  }\n\n  const cacheKey = pattern.src + ':' + pattern.offset;\n\n  const canvasPattern = iconCache.getPattern(\n    cacheKey,\n    undefined,\n    pattern.color,\n  );\n  if (canvasPattern) {\n    return canvasPattern;\n  }\n\n  const iconImage = iconCache.get(pattern.src, 'anonymous', null);\n  if (iconImage.getImageState() !== ImageState.LOADED) {\n    return null;\n  }\n  const patternCanvasContext = createCanvasContext2D(\n    pattern.size[0],\n    pattern.size[1],\n  );\n  patternCanvasContext.drawImage(\n    iconImage.getImage(1),\n    pattern.offset[0],\n    pattern.offset[1],\n    pattern.size[0],\n    pattern.size[1],\n    0,\n    0,\n    pattern.size[0],\n    pattern.size[1],\n  );\n  getIconImage(\n    patternCanvasContext.canvas,\n    cacheKey,\n    undefined,\n    ImageState.LOADED,\n    pattern.color,\n    true,\n  );\n  return iconCache.getPattern(cacheKey, undefined, pattern.color);\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i',\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n * @property {number} [fillPatternScale] Fill pattern scale.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text,\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text,\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      lineHeight = 0;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D|import(\"../render/canvas/ZIndexContext.js\").ZIndexContextProxy} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale,\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    if (context.globalAlpha === undefined) {\n      context.globalAlpha = (context) => (context.globalAlpha *= opacity);\n    } else {\n      context.globalAlpha *= opacity;\n    }\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h,\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1],\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1],\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or both radius and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} radius Radius of a regular polygon.\n * @property {number} [radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius` and `radius2`.\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when both `radius` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      opacity: 1,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvases_;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ = options.radius;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    this.imageState_ =\n      this.fill_ && this.fill_.loading()\n        ? ImageState.LOADING\n        : ImageState.LOADED;\n    if (this.imageState_ === ImageState.LOADING) {\n      this.ready().then(() => (this.imageState_ = ImageState.LOADED));\n    }\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_,\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvases_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio,\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvases_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvases_ = {};\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  ready() {\n    return this.fill_ ? this.fill_.ready() : Promise.resolve();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\nimport ImageState from '../ImageState.js';\nimport {get as getIconImage} from './IconImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} [color=null] A color,\n * gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats. For polygon fills (not for {@link import(\"./RegularShape.js\").default} fills),\n * a pattern can also be provided as {@link module:ol/colorlike~PatternDescriptor}.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default|null}\n     */\n    this.patternImage_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null}\n     */\n    this.color_ = null;\n    if (options.color !== undefined) {\n      this.setColor(options.color);\n    }\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    if (color !== null && typeof color === 'object' && 'src' in color) {\n      const patternImage = getIconImage(\n        null,\n        color.src,\n        'anonymous',\n        undefined,\n        color.offset ? null : color.color ? color.color : null,\n        !(color.offset && color.size),\n      );\n      patternImage.ready().then(() => {\n        this.patternImage_ = null;\n      });\n      if (patternImage.getImageState() === ImageState.IDLE) {\n        patternImage.load();\n      }\n      if (patternImage.getImageState() === ImageState.LOADING) {\n        this.patternImage_ = patternImage;\n      }\n    }\n    this.color_ = color;\n  }\n\n  /**\n   * @return {boolean} The fill style is loading an image pattern.\n   */\n  loading() {\n    return !!this.patternImage_;\n  }\n\n  /**\n   * @return {Promise<void>} `false` or a promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return this.patternImage_ ? this.patternImage_.ready() : Promise.resolve();\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * Defines how symbols and text are decluttered on layers ith `declutter` set to `true`\n * * **declutter**: Overlapping symbols and text are decluttered.\n * * **obstacle**: Symbols and text are rendered, but serve as obstacle for subsequent attempts\n *   to place a symbol or text at the same location.\n * * **none**: No decluttering is done.\n *\n * @typedef {\"declutter\"|\"obstacle\"|\"none\"} DeclutterMode\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`',\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point'],\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {import(\"./Style.js\").DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time',\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided',\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`',\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if ('complete' in image) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_,\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height,\n              ),\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height),\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n\n  ready() {\n    return this.iconImage_.ready();\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import('../style/Style.js').DeclutterMode} [declutterMode] Declutter mode: `declutter`, `obstacle`, `none`\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {isStringColor} from '../color.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * See below for details on the available operators (with notes for those that are WebGL or Canvas only).\n *\n * * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels (WebGL only).\n *   * `['get', 'attributeName', typeHint]` fetches a feature property value, similar to `feature.get('attributeName')`\n *     A type hint can optionally be specified, in case the resulting expression contains a type ambiguity which\n *     will make it invalid. Type hints can be one of: 'string', 'color', 'number', 'boolean', 'number[]'\n *   * `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection (WebGL only).\n *   * `['resolution']` returns the current resolution\n *   * `['time']` The time in seconds since the creation of the layer (WebGL only).\n *   * `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   * `['zoom']` The current zoom level (WebGL only).\n *\n * * Math operators:\n *   * `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2, ...]` adds the values\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *   * `['string', value1, value2, ...]` returns the first value in the list that evaluates to a string.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 'default value']]`\n *     (Canvas only).\n *   * `['number', value1, value2, ...]` returns the first value in the list that evaluates to a number.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 42]]`\n *     (Canvas only).\n *   * `['coalesce', value1, value2, ...]` returns the first value in the list which is not null or undefined.\n *     An example would be to provide a default value for get: `['coalesce', ['get','propertyname'], 'default value']]`\n *     (Canvas only).\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4 (WebGL only).\n *   * `['color', red, green, blue, alpha]` or `['color', shade, alpha]` creates a `color` value from `number` values;\n *     the `alpha` parameter is optional; if not specified, it will be set to 1 (WebGL only).\n *     Note: `red`, `green` and `blue` or `shade` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range) (WebGL only).\n *   * `['to-string', value]` converts the input value to a string. If the input is a boolean, the result is \"true\" or \"false\".\n *     If the input is a number, it is converted to a string as specified by the \"NumberToString\" algorithm of the ECMAScript\n *     Language Specification. If the input is a color, it is converted to a string of the form \"rgba(r,g,b,a)\". (Canvas only)\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {boolean} geometryType The style uses the feature geometry type.\n * @property {import(\"../style/flat.js\").FlatStyle|import(\"../style/webgl.js\").WebGLStyle} style The style being parsed\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    geometryType: false,\n    style: {},\n  };\n}\n\n/**\n * @param {string} typeHint Type hint\n * @return {number} Resulting value type (will be a single type)\n */\nfunction getTypeFromHint(typeHint) {\n  switch (typeHint) {\n    case 'string':\n      return StringType;\n    case 'color':\n      return ColorType;\n    case 'number':\n      return NumberType;\n    case 'boolean':\n      return BooleanType;\n    case 'number[]':\n      return NumberArrayType;\n    default:\n      throw new Error(`Unrecognized type hint: ${typeHint}`);\n  }\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @param {number} [typeHint] Optional type hint\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, context, typeHint) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      let type = StringType;\n      if (isStringColor(encoded)) {\n        type |= ColorType;\n      }\n      // apply the given type hint only if it won't result in an empty type\n      if (!isType(type & typeHint, NoneType)) {\n        type &= typeHint;\n      }\n      return new LiteralExpression(type, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('Expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('Empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, context, typeHint);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('Expected an array of numbers');\n    }\n  }\n\n  let type = NumberArrayType;\n  if (encoded.length === 3 || encoded.length === 4) {\n    type |= ColorType;\n  }\n  if (typeHint) {\n    type &= typeHint;\n  }\n  return new LiteralExpression(type, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Coalesce: 'coalesce',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n  ToString: 'to-string',\n};\n\n/**\n * @typedef {function(Array, ParsingContext, number):Expression} Parser\n * Third argument is a type hint\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createParser(\n    ([_, typeHint]) => {\n      if (typeHint !== undefined) {\n        return getTypeFromHint(\n          /** @type {string} */ (\n            /** @type {LiteralExpression} */ (typeHint).value\n          ),\n        );\n      }\n      return AnyType;\n    },\n    withArgsCount(1, 2),\n    withGetArgs,\n  ),\n  [Ops.Var]: createParser(\n    ([firstArg]) => firstArg.type,\n    withArgsCount(1, 1),\n    withVarArgs,\n  ),\n  [Ops.Id]: createParser(NumberType | StringType, withNoArgs, usesFeatureId),\n  [Ops.Concat]: createParser(\n    StringType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(AnyType),\n  ),\n  [Ops.GeometryType]: createParser(StringType, withNoArgs, usesGeometryType),\n  [Ops.Resolution]: createParser(NumberType, withNoArgs),\n  [Ops.Zoom]: createParser(NumberType, withNoArgs),\n  [Ops.Time]: createParser(NumberType, withNoArgs),\n  [Ops.Any]: createParser(\n    BooleanType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(BooleanType),\n  ),\n  [Ops.All]: createParser(\n    BooleanType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(BooleanType),\n  ),\n  [Ops.Not]: createParser(\n    BooleanType,\n    withArgsCount(1, 1),\n    parseArgsOfType(BooleanType),\n  ),\n  [Ops.Equal]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.NotEqual]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.GreaterThan]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.GreaterThanOrEqualTo]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.LessThan]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.LessThanOrEqualTo]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.Multiply]: createParser(\n    (parsedArgs) => {\n      let outputType = NumberType | ColorType;\n      for (let i = 0; i < parsedArgs.length; i++) {\n        outputType &= parsedArgs[i].type;\n      }\n      return outputType;\n    },\n    withArgsCount(2, Infinity),\n    parseArgsOfType(NumberType | ColorType),\n    narrowArgsType,\n  ),\n  [Ops.Coalesce]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 1; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(2, Infinity),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.Divide]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Add]: createParser(\n    NumberType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Subtract]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Clamp]: createParser(\n    NumberType,\n    withArgsCount(3, 3),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Mod]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Pow]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Abs]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Floor]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Ceil]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Round]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Sin]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Cos]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Atan]: createParser(\n    NumberType,\n    withArgsCount(1, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Sqrt]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Match]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 2; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(4, Infinity),\n    withEvenArgs,\n    parseMatchArgs,\n  ),\n  [Ops.Between]: createParser(\n    BooleanType,\n    withArgsCount(3, 3),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Interpolate]: createParser(\n    (parsedArgs) => {\n      let type = ColorType | NumberType;\n      for (let i = 3; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      return type;\n    },\n    withArgsCount(6, Infinity),\n    withEvenArgs,\n    parseInterpolateArgs,\n  ),\n  [Ops.Case]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 1; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(3, Infinity),\n    withOddArgs,\n    parseCaseArgs,\n  ),\n  [Ops.In]: createParser(BooleanType, withArgsCount(2, 2), parseInArgs),\n  [Ops.Number]: createParser(\n    NumberType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(AnyType),\n  ),\n  [Ops.String]: createParser(\n    StringType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(AnyType),\n  ),\n  [Ops.Array]: createParser(\n    (parsedArgs) => {\n      return parsedArgs.length === 3 || parsedArgs.length === 4\n        ? NumberArrayType | ColorType\n        : NumberArrayType;\n    },\n    withArgsCount(1, Infinity),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Color]: createParser(\n    ColorType,\n    withArgsCount(1, 4),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Band]: createParser(\n    NumberType,\n    withArgsCount(1, 3),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Palette]: createParser(ColorType, withArgsCount(2, 2), parsePaletteArgs),\n  [Ops.ToString]: createParser(\n    StringType,\n    withArgsCount(1, 1),\n    parseArgsOfType(BooleanType | NumberType | StringType | ColorType),\n  ),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, ParsingContext, Array<Expression>, number?):Array<Expression>|void} ArgValidator\n * An argument validator applies various checks to an encoded expression arguments\n * Returns the parsed arguments if any.\n * Third argument is the array of parsed arguments from previous validators\n * Fourth argument is an optional type hint\n */\n\n/**\n * @type ArgValidator\n */\nfunction withGetArgs(encoded, context) {\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for get operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.properties.add(arg.value);\n  if (encoded.length === 3) {\n    const hint = parse(encoded[2], context);\n    return [arg, hint];\n  }\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withVarArgs(encoded, context, parsedArgs, typeHint) {\n  const varName = encoded[1];\n  if (typeof varName !== 'string') {\n    throw new Error('Expected a string argument for var operation');\n  }\n  context.variables.add(varName);\n  if (\n    !('variables' in context.style) ||\n    context.style.variables[varName] === undefined\n  ) {\n    return [new LiteralExpression(AnyType, varName)];\n  }\n  const initialValue = context.style.variables[varName];\n  const arg = /** @type {LiteralExpression} */ (parse(initialValue, context));\n  arg.value = varName;\n  if (typeHint && !overlapsType(typeHint, arg.type)) {\n    throw new Error(\n      `The variable ${varName} has type ${typeName(\n        arg.type,\n      )} but the following type was expected: ${typeName(typeHint)}`,\n    );\n  }\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesFeatureId(encoded, context) {\n  context.featureId = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesGeometryType(encoded, context) {\n  context.geometryType = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withNoArgs(encoded, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`Expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsCount(minArgs, maxArgs) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `Expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`,\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `Expected ${range} arguments for ${operation}, got ${argCount}`,\n      );\n    }\n  };\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction parseArgsOfType(argType) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], context);\n      if (!overlapsType(argType, expression.type)) {\n        const gotType = typeName(argType);\n        const expectedType = typeName(expression.type);\n        throw new Error(\n          `Unexpected type for argument ${i} of ${operation} operation` +\n            `, got ${gotType} but expected ${expectedType}`,\n        );\n      }\n      expression.type &= argType;\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction narrowArgsType(encoded, context, parsedArgs) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n\n  // first pass to determine a narrowed down type\n  let sameType = AnyType;\n  for (let i = 0; i < parsedArgs.length; ++i) {\n    sameType &= parsedArgs[i].type;\n  }\n\n  if (sameType === NoneType) {\n    throw new Error(\n      `No common type could be found for arguments of ${operation} operation`,\n    );\n  }\n\n  // re-parse args\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    args[i] = parse(encoded[i + 1], context, sameType);\n  }\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withOddArgs(encoded, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `An odd amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\n        argCount,\n      )} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withEvenArgs(encoded, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `An even amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\n        argCount,\n      )} instead`,\n    );\n  }\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseMatchArgs(encoded, context, parsedArgs, typeHint) {\n  const argsCount = encoded.length - 1;\n\n  const input = parse(encoded[1], context);\n  let inputType = input.type;\n  const fallback = parse(encoded[encoded.length - 1], context);\n  let outputType =\n    typeHint !== undefined ? typeHint & fallback.type : fallback.type;\n\n  // first parse args to figure out possible types\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    const match = parse(encoded[i + 2], context);\n    const output = parse(encoded[i + 3], context);\n    inputType &= match.type;\n    outputType &= output.type;\n    args[i] = match;\n    args[i + 1] = output;\n  }\n\n  // check input and output types validity\n  const expectedInputType = StringType | NumberType | BooleanType;\n  if (!overlapsType(expectedInputType, inputType)) {\n    throw new Error(\n      `Expected an input of type ${typeName(\n        expectedInputType,\n      )} for the interpolate operation` +\n        `, got ${typeName(inputType)} instead`,\n    );\n  }\n  inputType &= expectedInputType;\n  if (isType(outputType, NoneType)) {\n    throw new Error(\n      `Could not find a common output type for the following match operation: ` +\n        JSON.stringify(encoded),\n    );\n  }\n\n  // parse again inputs and outputs with common type\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    const match = parse(encoded[i + 2], context, inputType);\n    const output = parse(encoded[i + 3], context, outputType);\n    args[i] = match;\n    args[i + 1] = output;\n  }\n\n  return [\n    parse(encoded[1], context, inputType),\n    ...args,\n    parse(encoded[encoded.length - 1], context, outputType),\n  ];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseInterpolateArgs(encoded, context, parsedArgs, typeHint) {\n  const interpolationType = encoded[1];\n  let interpolation;\n  switch (interpolationType[0]) {\n    case 'linear':\n      interpolation = 1;\n      break;\n    case 'exponential':\n      interpolation = interpolationType[1];\n      if (typeof interpolation !== 'number') {\n        throw new Error(\n          `Expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(interpolation)} instead`,\n        );\n      }\n      break;\n    default:\n      interpolation = null;\n  }\n  if (!interpolation) {\n    throw new Error(\n      `Invalid interpolation type: ${JSON.stringify(interpolationType)}`,\n    );\n  }\n  interpolation = parse(interpolation, context);\n\n  // check input types\n  let input = parse(encoded[2], context);\n  if (!overlapsType(NumberType, input.type)) {\n    throw new Error(\n      `Expected an input of type number for the interpolate operation` +\n        `, got ${typeName(input.type)} instead`,\n    );\n  }\n  input = parse(encoded[2], context, NumberType); // parse again with narrower output\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    let stop = parse(encoded[i + 3], context);\n    if (!overlapsType(NumberType, stop.type)) {\n      throw new Error(\n        `Expected all stop input values in the interpolate operation to be of type number` +\n          `, got ${typeName(stop.type)} at position ${i + 2} instead`,\n      );\n    }\n    let output = parse(encoded[i + 4], context);\n    if (!overlapsType(NumberType | ColorType, output.type)) {\n      throw new Error(\n        `Expected all stop output values in the interpolate operation to be a number or color` +\n          `, got ${typeName(output.type)} at position ${i + 3} instead`,\n      );\n    }\n    // parse again with narrower types\n    stop = parse(encoded[i + 3], context, NumberType);\n    output = parse(encoded[i + 4], context, NumberType | ColorType);\n    args[i] = stop;\n    args[i + 1] = output;\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseCaseArgs(encoded, context, parsedArgs, typeHint) {\n  const fallback = parse(encoded[encoded.length - 1], context);\n  let outputType =\n    typeHint !== undefined ? typeHint & fallback.type : fallback.type;\n\n  // first parse args to figure out possible types\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    const condition = parse(encoded[i + 1], context);\n    const output = parse(encoded[i + 2], context);\n    if (!overlapsType(BooleanType, condition.type)) {\n      throw new Error(\n        `Expected all conditions in the case operation to be of type boolean` +\n          `, got ${typeName(condition.type)} at position ${i} instead`,\n      );\n    }\n    outputType &= output.type;\n    args[i] = condition;\n    args[i + 1] = output;\n  }\n\n  if (isType(outputType, NoneType)) {\n    throw new Error(\n      `Could not find a common output type for the following case operation: ` +\n        JSON.stringify(encoded),\n    );\n  }\n\n  // parse again args with common output type\n  for (let i = 0; i < args.length - 1; i += 2) {\n    args[i + 1] = parse(encoded[i + 2], context, outputType);\n  }\n  args[args.length - 1] = parse(\n    encoded[encoded.length - 1],\n    context,\n    outputType,\n  );\n\n  return args;\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseInArgs(encoded, context) {\n  /** @type {Array<number|string>} */\n  let haystack = /** @type {any} */ (encoded[2]);\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `The \"in\" operator was provided a literal value which was not an array as second argument.`,\n    );\n  }\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `For the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions.`,\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `The \"in\" operator was provided a literal value which was not an array as second argument.`,\n      );\n    }\n    haystack = haystack[1];\n  }\n\n  let needleType = StringType | NumberType;\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    const arg = parse(haystack[i], context);\n    needleType &= arg.type;\n    args[i] = arg;\n  }\n  if (isType(needleType, NoneType)) {\n    throw new Error(\n      `Could not find a common type for the following in operation: ` +\n        JSON.stringify(encoded),\n    );\n  }\n\n  const needle = parse(encoded[1], context, needleType);\n  return [needle, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parsePaletteArgs(encoded, context) {\n  const index = parse(encoded[1], context, NumberType);\n  if (index.type !== NumberType) {\n    throw new Error(\n      `The first argument of palette must be an number, got ${typeName(\n        index.type,\n      )} instead`,\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('The second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    const color = parse(colors[i], context, ColorType);\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `The palette color at index ${i} must be a literal value`,\n      );\n    }\n    if (!overlapsType(color.type, ColorType)) {\n      throw new Error(\n        `The palette color at index ${i} should be of type color, got ${typeName(\n          color.type,\n        )} instead`,\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {number|function(Array<Expression>):number} returnType The return type of the operator; can be a fixed value or a callback taking the parsed\n * arguments\n * @param {Array<ArgValidator>} argValidators A chain of argument validators; the return value of the last validator\n * will be used as parsed arguments\n * @return {Parser} The parser.\n */\nfunction createParser(returnType, ...argValidators) {\n  return function (encoded, context, typeHint) {\n    const operator = encoded[0];\n    let parsedArgs = [];\n    for (let i = 0; i < argValidators.length; i++) {\n      parsedArgs =\n        argValidators[i](encoded, context, parsedArgs, typeHint) || parsedArgs;\n    }\n    let actualType =\n      typeof returnType === 'function' ? returnType(parsedArgs) : returnType;\n    if (typeHint !== undefined) {\n      if (!overlapsType(actualType, typeHint)) {\n        throw new Error(\n          `The following expression was expected to return ${typeName(\n            typeHint,\n          )}, but returns ${typeName(actualType)} instead: ${JSON.stringify(\n            encoded,\n          )}`,\n        );\n      }\n      actualType &= typeHint;\n    }\n    if (actualType === NoneType) {\n      throw new Error(\n        `No matching type was found for the following expression: ${JSON.stringify(\n          encoded,\n        )}`,\n      );\n    }\n    return new CallExpression(actualType, operator, ...parsedArgs);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @param {number} [typeHint] Optional type hint\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, context, typeHint) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`Unknown operator: ${operator}`);\n  }\n  return parser(encoded, context, typeHint);\n}\n\n/**\n * Returns a simplified geometry type suited for the `geometry-type` operator\n * @param {import('../geom/Geometry.js').default|import('../render/Feature.js').default} geometry Geometry object\n * @return {'Point'|'LineString'|'Polygon'|''} Simplified geometry type; empty string of no geometry found\n */\nexport function computeGeometryType(geometry) {\n  if (!geometry) {\n    return '';\n  }\n  const type = geometry.getType();\n  switch (type) {\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n      return type;\n    case 'MultiPoint':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n      return /** @type {'Point'|'LineString'|'Polygon'} */ (type.substring(5));\n    case 'Circle':\n      return 'Polygon';\n    case 'GeometryCollection':\n      return computeGeometryType(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries()[0],\n      );\n    default:\n      return '';\n  }\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  ColorType,\n  LiteralExpression,\n  Ops,\n  overlapsType,\n  parse,\n  typeName,\n} from './expression.js';\nimport {\n  fromString,\n  lchaToRgba,\n  normalize,\n  rgbaToLcha,\n  toString,\n  withAlpha,\n} from '../color.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n * @property {string} geometryType Geometry type of the current object.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n    geometryType: '',\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>)} SizeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, context);\n  if (!overlapsType(type, expression.type)) {\n    const expected = typeName(type);\n    const actual = typeName(expression.type);\n    throw new Error(\n      `Expected expression to be of type ${expected}, got ${actual}`,\n    );\n  }\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String:\n    case Ops.Coalesce: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (context) => context.featureId;\n    }\n    case Ops.GeometryType: {\n      return (context) => context.geometryType;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Between:\n    case Ops.In:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Case: {\n      return compileCaseExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    case Ops.ToString: {\n      return compileConvertExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Coalesce: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value !== 'undefined' && value !== null) {\n            return value;\n          }\n        }\n        throw new Error('Expected one of the values to be non-null');\n      };\n    }\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => context.properties[name];\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Between: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        const max = args[2](context);\n        return value >= min && value <= max;\n      };\n    }\n    case Ops.In: {\n      return (context) => {\n        const value = args[0](context);\n        for (let i = 1; i < length; ++i) {\n          if (value === args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileCaseExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    for (let i = 0; i < length - 1; i += 2) {\n      const condition = args[i](context);\n      if (condition) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output,\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output,\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileConvertExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.ToString: {\n      return (context) => {\n        const value = args[0](context);\n        if (expression.args[0].type === ColorType) {\n          return toString(value);\n        }\n        return value.toString();\n      };\n    }\n    default: {\n      throw new Error(`Unsupported convert operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return normalize(lchaToRgba(lcha));\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  computeGeometryType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    if (parsingContext.geometryType) {\n      evaluationContext.geometryType = computeGeometryType(\n        feature.getGeometry(),\n      );\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle),\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  let evaluateColor;\n  if (prefix + 'fill-pattern-src' in flatStyle) {\n    evaluateColor = patternEvaluator(flatStyle, prefix + 'fill-', context);\n  } else {\n    evaluateColor = colorLikeEvaluator(\n      flatStyle,\n      prefix + 'fill-color',\n      context,\n    );\n  }\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === 'none') {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context,\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context,\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context,\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context,\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context,\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context,\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context,\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === 'none') {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context,\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context,\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context,\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context,\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context,\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context,\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context,\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context,\n  );\n\n  // The following properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const text = new Text({declutterMode});\n\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align',\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline',\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context,\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context,\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units',\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units',\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const radiusName = prefix + 'radius';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n  const radius = requireNumber(flatStyle[radiusName], radiusName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\nfunction patternEvaluator(flatStyle, prefix, context) {\n  const srcEvaluator = stringEvaluator(\n    flatStyle,\n    prefix + 'pattern-src',\n    context,\n  );\n  const offsetEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-offset',\n    context,\n  );\n  const patternSizeEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-size',\n    context,\n  );\n  const colorEvaluator = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'color',\n    context,\n  );\n  return function (context) {\n    return {\n      src: srcEvaluator(context),\n      offset: offsetEvaluator && offsetEvaluator(context),\n      size: patternSizeEvaluator && patternSizeEvaluator(context),\n      color: colorEvaluator && colorEvaluator(context),\n    };\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    ColorType | StringType,\n    context,\n  );\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeEvaluator?} The expression evaluator.\n */\nfunction sizeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireSize(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context,\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`,\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import('../../style/Style.js').DeclutterMode} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} A number or an array of two numbers.\n */\nfunction requireSize(value, property) {\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  return requireSize(value, property);\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default<import('../Feature').FeatureLike>|import(\"../source/VectorTile.js\").default<import('../Feature').FeatureLike>} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default<import('../Feature').FeatureLike>|import(\"../source/VectorTile.js\").default<import('../Feature').FeatureLike>} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.declutter_ = options.declutter ? String(options.declutter) : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {string} Declutter group.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {\n    const declutterGroup = this.getDeclutter();\n    if (declutterGroup in frameState.declutter === false) {\n      frameState.declutter[declutterGroup] = new RBush(9);\n    }\n    this.getRenderer().renderDeclutter(frameState, layerState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type Array<import(\"../style/flat.js\").Rule>\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   * @param {number} [index] Render order index.\n   */\n  drawFeature(feature, style, index) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst,\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false,\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {\n    this.beginGeometry(geometry, feature, index);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds,\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n            index,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n            index,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          undefined,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          undefined,\n          index,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} index Render order index\n   */\n  beginGeometry(geometry, feature, index) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillPatternScale =\n        fillStyleColor &&\n        typeof fillStyleColor === 'object' &&\n        'src' in fillStyleColor\n          ? this.pixelRatio\n          : 1;\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle,\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align and scale it!\n      fillInstruction.push(state.fillPatternScale);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {containsCoordinate} from '../../extent.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {\n    if (\n      !this.image_ ||\n      (this.maxExtent &&\n        !containsCoordinate(this.maxExtent, pointGeometry.getFlatCoordinates()))\n    ) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature, index);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature, index);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const filteredFlatCoordinates = [];\n    for (\n      let i = 0, ii = flatCoordinates.length;\n      i < ii;\n      i += multiPointGeometry.getStride()\n    ) {\n      if (\n        !this.maxExtent ||\n        containsCoordinate(this.maxExtent, flatCoordinates.slice(i, i + 2))\n      ) {\n        filteredFlatCoordinates.push(\n          flatCoordinates[i],\n          flatCoordinates[i + 1],\n        );\n      }\n    }\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(filteredFlatCoordinates, 2);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false,\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride,\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke,\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false,\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride,\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride,\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1),\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1],\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.maxExtent, geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature, index);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride,\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2,\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke,\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature, index);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n      this.declutterMode_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n      this.declutterMode_,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle,\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle,\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ =\n        fillState && fillState.fillStyle\n          ? typeof fillState.fillStyle == 'string'\n            ? fillState.fillStyle\n            : '|' + getUid(fillState.fillStyle)\n          : '';\n    }\n    this.declutterMode_ = textStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_,\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/render/canvas/ZIndexContext\n */\n\nimport {getSharedCanvasContext2D} from '../../dom.js';\n\n/** @typedef {CanvasRenderingContext2D & {globalAlpha: any}} ZIndexContextProxy */\n\n/**\n * @extends {CanvasRenderingContext2D}\n */\nclass ZIndexContext {\n  constructor() {\n    /**\n     * @private\n     * @type {Array<Array<*>>}\n     */\n    this.instructions_ = [];\n    /**\n     * @type {number}\n     */\n    this.zIndex = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offset_ = 0;\n\n    /**\n     * @type {ZIndexContextProxy}\n     */\n    this.context_ = /** @type {ZIndexContextProxy} */ (\n      new Proxy(getSharedCanvasContext2D(), {\n        get: (target, property) => {\n          if (\n            typeof (/** @type {*} */ (getSharedCanvasContext2D())[property]) !==\n            'function'\n          ) {\n            // we only accept calling functions on the proxy, not accessing properties\n            return undefined;\n          }\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property);\n          return this.pushMethodArgs_;\n        },\n        set: (target, property, value) => {\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property, value);\n          return true;\n        },\n      })\n    );\n  }\n\n  /**\n   * @private\n   * @param {...*} args Args.\n   * @return {ZIndexContext} This.\n   */\n  pushMethodArgs_ = (...args) => {\n    this.instructions_[this.zIndex + this.offset_].push(args);\n    return this;\n  };\n\n  /**\n   * Push a function that renders to the context directly.\n   * @param {function(CanvasRenderingContext2D): void} render Function.\n   */\n  pushFunction(render) {\n    this.instructions_[this.zIndex + this.offset_].push(render);\n  }\n\n  /**\n   * Get a proxy for CanvasRenderingContext2D which does not support getting state\n   * (e.g. `context.globalAlpha`, which will return `undefined`). To set state, if it relies on a\n   * previous state (e.g. `context.globalAlpha = context.globalAlpha / 2`), set a function,\n   * e.g. `context.globalAlpha = (context) => context.globalAlpha / 2`.\n   * @return {ZIndexContextProxy} Context.\n   */\n  getContext() {\n    return this.context_;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  draw(context) {\n    this.instructions_.forEach((instructionsAtIndex) => {\n      for (let i = 0, ii = instructionsAtIndex.length; i < ii; ++i) {\n        const property = instructionsAtIndex[i];\n        if (typeof property === 'function') {\n          property(context);\n          continue;\n        }\n        const instructionAtIndex = instructionsAtIndex[++i];\n        if (typeof (/** @type {*} */ (context)[property]) === 'function') {\n          /** @type {*} */ (context)[property](...instructionAtIndex);\n        } else {\n          if (typeof instructionAtIndex === 'function') {\n            /** @type {*} */ (context)[property] = instructionAtIndex(context);\n            continue;\n          }\n          /** @type {*} */ (context)[property] = instructionAtIndex;\n        }\n      }\n    });\n  }\n\n  clear() {\n    this.instructions_.length = 0;\n    this.zIndex = 0;\n    this.offset_ = 0;\n  }\n\n  /**\n   * Offsets the zIndex by the highest current zIndex. Useful for rendering multiple worlds or tiles, to\n   * avoid conflicting context.clip() or context.save()/restore() calls.\n   */\n  offset() {\n    this.offset_ = this.instructions_.length;\n    this.zIndex = 0;\n  }\n}\n\nexport default ZIndexContext;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation,\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport ZIndexContext from '../canvas/ZIndexContext.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: import('../../size.js').Size, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, import(\"../../style/Style.js\").DeclutterMode): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions.\n   * @param {boolean} [deferredRendering] Enable deferred rendering.\n   */\n  constructor(\n    resolution,\n    pixelRatio,\n    overlaps,\n    instructions,\n    deferredRendering,\n  ) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.alignAndScaleFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas/ZIndexContext.js\").default}\n     */\n    this.zIndexContext_ = deferredRendering ? new ZIndexContext() : null;\n  }\n\n  /**\n   * @return {ZIndexContext} ZIndex context.\n   */\n  getZIndexContext() {\n    return this.zIndexContext_;\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign,\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks,\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignAndScaleFill_ = /** @type {number} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction),\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature,\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY,\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent,\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent,\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    scaledCanvasSize,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= scaledCanvasSize[0] &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= scaledCanvasSize[1] &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction),\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale,\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    const alignAndScale = this.alignAndScaleFill_;\n    if (alignAndScale) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      if (alignAndScale !== 1) {\n        context.scale(alignAndScale, alignAndScale);\n      }\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (alignAndScale) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context.strokeStyle =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign,\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    scaledCanvasSize,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree,\n  ) {\n    const zIndexContext = this.zIndexContext_;\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_,\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      /** @type {import('../../style/Style.js').DeclutterMode} */\n      declutterMode,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[4];\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction[5];\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[6];\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          declutterMode = instruction[14] || 'declutter';\n          const declutterImageWithText =\n            /** @type {{args: import(\"../canvas.js\").DeclutterImageWithText, declutterMode: import('../../style/Style.js').DeclutterMode}} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey,\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature,\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              scaledCanvasSize,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              let imageArgs, imageDeclutterMode, imageDeclutterBox;\n              if (declutterImageWithText) {\n                const index = dd - d;\n                if (!declutterImageWithText[index]) {\n                  // We now have the image for an image+text combination.\n                  declutterImageWithText[index] = {args, declutterMode};\n                  // Don't render anything for now, wait for the text.\n                  continue;\n                }\n                const imageDeclutter = declutterImageWithText[index];\n                imageArgs = imageDeclutter.args;\n                imageDeclutterMode = imageDeclutter.declutterMode;\n                delete declutterImageWithText[index];\n                imageDeclutterBox = getDeclutterBox(imageArgs);\n              }\n              // We now have image and text for an image+text combination.\n              let renderImage, renderText;\n              if (\n                imageArgs &&\n                (imageDeclutterMode !== 'declutter' ||\n                  !declutterTree.collides(imageDeclutterBox))\n              ) {\n                renderImage = true;\n              }\n              if (\n                declutterMode !== 'declutter' ||\n                !declutterTree.collides(dimensions.declutterBox)\n              ) {\n                renderText = true;\n              }\n              if (\n                imageDeclutterMode === 'declutter' &&\n                declutterMode === 'declutter'\n              ) {\n                const render = renderImage && renderText;\n                renderImage = render;\n                renderText = render;\n              }\n              if (renderImage) {\n                if (imageDeclutterMode !== 'none') {\n                  declutterTree.insert(imageDeclutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, imageArgs);\n              }\n              if (renderText) {\n                if (declutterMode !== 'none') {\n                  declutterTree.insert(dimensions.declutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, args);\n              }\n            } else {\n              this.replayImageOrLabel_.apply(this, args);\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n          declutterMode = instruction[14] || 'declutter';\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_,\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree && declutterMode !== 'none') {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(\n              feature,\n              currentGeometry,\n              declutterMode,\n            );\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          context.moveTo(x, y);\n          prevX = (x + 0.5) | 0;\n          prevY = (y + 0.5) | 0;\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignAndScaleFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          /** @type {import(\"../../colorlike.js\").ColorLike} */\n          context.fillStyle = instruction[1];\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree,\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      scaledCanvasSize,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree,\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent,\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      [context.canvas.width, context.canvas.height],\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent,\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const ALL = [\n  'Polygon',\n  'Circle',\n  'LineString',\n  'Image',\n  'Text',\n  'Default',\n];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const DECLUTTER = ['Image', 'Text'];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const NON_DECLUTTER = ALL.filter(\n  (builderType) => !DECLUTTER.includes(builderType),\n);\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   * @param {boolean} [deferredRendering] Enable deferred rendering with renderDeferred().\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer,\n    deferredRendering,\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<string, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.renderedContext_ = null;\n\n    /**\n     * @type {Object<number, Array<import(\"./ZIndexContext.js\").default>>}\n     */\n    this.deferredZIndexContexts_ = {};\n\n    this.createExecutors_(allInstructions, deferredRendering);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<string, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   * @param {boolean} deferredRendering Enable deferred rendering.\n   */\n  createExecutors_(allInstructions, deferredRendering) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions,\n          deferredRendering,\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures,\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1],\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true},\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent,\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import('../../style/Style.js').DeclutterMode} declutterMode Declutter mode.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry, declutterMode) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize,\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            declutterMode === 'none' ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ALL.length - 1; j >= 0; --j) {\n        builderType = ALL[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent,\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} targetContext Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ALL}\n   * @param {import(\"rbush\").default|null} [declutterTree] Declutter tree.\n   *     When set to null, no decluttering is done, even when the executor group has a `ZIndexContext`.\n   */\n  execute(\n    targetContext,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree,\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    builderTypes = builderTypes ? builderTypes : ALL;\n    const maxBuilderTypes = ALL.length;\n    let i, ii, j, jj, replays;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        const replay = replays[builderType];\n        if (replay !== undefined) {\n          const zIndexContext =\n            declutterTree === null ? undefined : replay.getZIndexContext();\n          const context = zIndexContext\n            ? zIndexContext.getContext()\n            : targetContext;\n          const requireClip =\n            this.maxExtent_ &&\n            builderType !== 'Image' &&\n            builderType !== 'Text';\n          if (requireClip) {\n            context.save();\n            // setup clipping so that the parts of over-simplified geometries are not\n            // visible outside the current extent when panning\n            this.clip(context, transform);\n          }\n          if (\n            !zIndexContext ||\n            builderType === 'Text' ||\n            builderType === 'Image'\n          ) {\n            replay.execute(\n              context,\n              scaledCanvasSize,\n              transform,\n              viewRotation,\n              snapToPixel,\n              declutterTree,\n            );\n          } else {\n            zIndexContext.pushFunction((context) =>\n              replay.execute(\n                context,\n                scaledCanvasSize,\n                transform,\n                viewRotation,\n                snapToPixel,\n                declutterTree,\n              ),\n            );\n          }\n          if (requireClip) {\n            context.restore();\n          }\n          if (zIndexContext) {\n            zIndexContext.offset();\n            const index = zs[i] * maxBuilderTypes + j;\n            if (!this.deferredZIndexContexts_[index]) {\n              this.deferredZIndexContexts_[index] = [];\n            }\n            this.deferredZIndexContexts_[index].push(zIndexContext);\n          }\n        }\n      }\n    }\n\n    this.renderedContext_ = targetContext;\n  }\n\n  getDeferredZIndexContexts() {\n    return this.deferredZIndexContexts_;\n  }\n\n  getRenderedContext() {\n    return this.renderedContext_;\n  }\n\n  renderDeferred() {\n    const deferredZIndexContexts = this.deferredZIndexContexts_;\n    const zs = Object.keys(deferredZIndexContexts).map(Number).sort(ascending);\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      deferredZIndexContexts[zs[i]].forEach((zIndexContext) => {\n        zIndexContext.draw(this.renderedContext_); // FIXME Pass clip to replay for temporarily enabling clip\n        zIndexContext.clear();\n      });\n      deferredZIndexContexts[zs[i]].length = 0;\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferred(frameState) {}\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getHeight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @private\n     * @type {ZIndexContext}\n     */\n    this.deferredContext_ = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor),\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @protected\n   */\n  prepareContainer(frameState, target) {\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2,\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    if (!this.containerReused) {\n      const canvas = this.context.canvas;\n      if (canvas.width != width || canvas.height != height) {\n        canvas.width = width;\n        canvas.height = height;\n      } else {\n        this.context.clearRect(0, 0, width, height);\n      }\n      if (canvasTransform !== canvas.style.transform) {\n        canvas.style.transform = canvasTransform;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {}\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import('../../render/canvas/ZIndexContext.js').ZIndexContextProxy} Context.\n   */\n  getRenderContext(frameState) {\n    if (frameState.declutter && !this.deferredContext_) {\n      this.deferredContext_ = new ZIndexContext();\n    }\n    return frameState.declutter\n      ? this.deferredContext_.getContext()\n      : this.context;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferred(frameState) {\n    if (!frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(\n      RenderEventType.PRERENDER,\n      this.context,\n      frameState,\n    );\n    if (frameState.declutter && this.deferredContext_) {\n      this.deferredContext_.draw(this.context);\n      this.deferredContext_.clear();\n    }\n    this.renderDeferredInternal(frameState);\n    this.dispatchRenderEvent_(\n      RenderEventType.POSTRENDER,\n      this.context,\n      frameState,\n    );\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX,\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2,\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile|null}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    let tile = this.interimTile;\n    if (!tile) {\n      //empty chain\n      return this;\n    }\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    let tile = this.interimTile;\n    if (!tile) {\n      return;\n    }\n\n    /** @type {Tile} */\n    let prev = this;\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      }\n      if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution,\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256),\n              ),\n            ),\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision,\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0],\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0],\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1,\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution,\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter,\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution,\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution,\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution,\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [clipExtent] Clip extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchContext.\n * @param {boolean} [clipExtent] Clip stitchContext to sourceExtent.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate,\n  drawSingle,\n  clipExtent,\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool,\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  let stitchContext;\n  const stitchScale = pixelRatio / sourceResolution;\n  // Round up Float32 scale values to prevent interpolation in Firefox.\n  const inverseScale = (interpolate ? 1 : 1 + Math.pow(2, -24)) / stitchScale;\n\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    stitchContext = createCanvasContext2D(\n      Math.round(getWidth(sourceDataExtent) * stitchScale),\n      Math.round(getHeight(sourceDataExtent) * stitchScale),\n      canvasPool,\n    );\n\n    if (!interpolate) {\n      stitchContext.imageSmoothingEnabled = false;\n    }\n    if (sourceExtent && clipExtent) {\n      const xPos = (sourceExtent[0] - sourceDataExtent[0]) * stitchScale;\n      const yPos = -(sourceExtent[3] - sourceDataExtent[3]) * stitchScale;\n      const width = getWidth(sourceExtent) * stitchScale;\n      const height = getHeight(sourceExtent) * stitchScale;\n      stitchContext.rect(xPos, yPos, width, height);\n      stitchContext.clip();\n    }\n\n    sources.forEach(function (src, i, arr) {\n      // This test should never fail -- but it does. Need to find a fix the upstream condition\n      if (src.image.width > 0 && src.image.height > 0) {\n        if (src.clipExtent) {\n          stitchContext.save();\n          const xPos = (src.clipExtent[0] - sourceDataExtent[0]) * stitchScale;\n          const yPos = -(src.clipExtent[3] - sourceDataExtent[3]) * stitchScale;\n          const width = getWidth(src.clipExtent) * stitchScale;\n          const height = getHeight(src.clipExtent) * stitchScale;\n          stitchContext.rect(\n            interpolate ? xPos : Math.round(xPos),\n            interpolate ? yPos : Math.round(yPos),\n            interpolate ? width : Math.round(xPos + width) - Math.round(xPos),\n            interpolate ? height : Math.round(yPos + height) - Math.round(yPos),\n          );\n          stitchContext.clip();\n        }\n\n        const xPos = (src.extent[0] - sourceDataExtent[0]) * stitchScale;\n        const yPos = -(src.extent[3] - sourceDataExtent[3]) * stitchScale;\n        const srcWidth = getWidth(src.extent) * stitchScale;\n        const srcHeight = getHeight(src.extent) * stitchScale;\n        stitchContext.drawImage(\n          src.image,\n          gutter,\n          gutter,\n          src.image.width - 2 * gutter,\n          src.image.height - 2 * gutter,\n          interpolate ? xPos : Math.round(xPos),\n          interpolate ? yPos : Math.round(yPos),\n          interpolate\n            ? srcWidth\n            : Math.round(xPos + srcWidth) - Math.round(xPos),\n          interpolate\n            ? srcHeight\n            : Math.round(yPos + srcHeight) - Math.round(yPos),\n        );\n\n        if (src.clipExtent) {\n          stitchContext.restore();\n        }\n      }\n    });\n  }\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution,\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1)),\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1)),\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0,\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY,\n    );\n\n    let image;\n    if (stitchContext) {\n      image = stitchContext.canvas;\n      context.scale(inverseScale, -inverseScale);\n    } else {\n      const source = sources[0];\n      const extent = source.extent;\n      image = source.image;\n      context.scale(\n        getWidth(extent) / image.width,\n        -getHeight(extent) / image.height,\n      );\n    }\n\n    context.drawImage(image, 0, 0);\n    context.restore();\n  });\n\n  if (stitchContext) {\n    releaseCanvas(stitchContext);\n    canvasPool.push(stitchContext.canvas);\n  }\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection, getWidth, wrapAndSliceX} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @typedef {Object} TileOffset\n * @property {import(\"../ImageTile.js\").default} tile Tile.\n * @property {number} offset Offset.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    options,\n  ) {\n    super(tileCoord, TileState.IDLE, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<TileOffset>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.clipExtent_ = sourceProj.canWrapX()\n      ? sourceProj.getExtent()\n      : undefined;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      let worldWidth = 0;\n      let worldsAway = 0;\n      if (sourceProj.canWrapX()) {\n        worldWidth = getWidth(sourceProjExtent);\n        worldsAway = Math.floor(\n          (sourceExtent[0] - sourceProjExtent[0]) / worldWidth,\n        );\n      }\n\n      const sourceExtents = wrapAndSliceX(\n        sourceExtent.slice(),\n        sourceProj,\n        true,\n      );\n      sourceExtents.forEach((extent) => {\n        const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n          extent,\n          this.sourceZ_,\n        );\n\n        for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n          for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n            const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n            if (tile) {\n              const offset = worldsAway * worldWidth;\n              this.sourceTiles_.push({tile, offset});\n            }\n          }\n        }\n        ++worldsAway;\n      });\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((source) => {\n      const tile = source.tile;\n      if (tile && tile.getState() == TileState.LOADED) {\n        const extent = this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord);\n        extent[0] += source.offset;\n        extent[2] += source.offset;\n        const clipExtent = this.clipExtent_?.slice();\n        if (clipExtent) {\n          clipExtent[0] += source.offset;\n          clipExtent[2] += source.offset;\n        }\n        sources.push({\n          extent: extent,\n          clipExtent: clipExtent,\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_,\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_,\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate,\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(({tile}) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this,\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function ({tile}, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection,\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0]),\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1]),\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection),\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    this.prepareContainer(frameState, target);\n\n    // desired dimensions of the canvas in pixels\n    const width = this.context.canvas.width;\n    const height = this.context.canvas.height;\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection),\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ,\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size,\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent,\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent,\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    const context = this.getRenderContext(frameState);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2,\n    );\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection,\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ,\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]],\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition,\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload(),\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(this.context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const context = this.getRenderContext(frameState);\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== context.globalAlpha;\n    if (alphaChanged) {\n      context.save();\n      context.globalAlpha = alpha;\n    }\n    context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h,\n    );\n\n    if (alphaChanged) {\n      context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey],\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        ),\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback,\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size,\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform,\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY,\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true,\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_,\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI,\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry),\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry),\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry),\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false,\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_,\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false,\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride(),\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash),\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle,\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle,\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle,\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent in render projection.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} [squaredTolerance] Squared tolerance.\n * @param {import(\"../../proj/Projection.js\").default} [projection] Render projection.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation,\n  squaredTolerance,\n  projection,\n) {\n  const userExtent = projection ? toUserExtent(extent, projection) : extent;\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation,\n    squaredTolerance,\n    projection\n      ? getTransformFromProjections(getUserProjection(), projection)\n      : null,\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(userExtent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false},\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          }),\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style,\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  /** @type {Array<F>} */\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutter,\n  index,\n) {\n  const loadingPromises = [];\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let loading = true;\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      loading = false;\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n    }\n    if (loading) {\n      loadingPromises.push(imageStyle.ready());\n    }\n  }\n  const fillStyle = style.getFill();\n  if (fillStyle && fillStyle.loading()) {\n    loadingPromises.push(fillStyle.ready());\n  }\n  const loading = loadingPromises.length > 0;\n  if (loading) {\n    Promise.all(loadingPromises).then(() => listener(null));\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutter,\n    index,\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutter,\n  index,\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform,\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature, index);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      index,\n      declutter,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature, index) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature, index);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer(),\n    index,\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup,\n  index,\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup,\n      index,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && imageStyle && hasText ? {} : undefined;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const hasImage = imageStyle && imageStyle.getOpacity() !== 0;\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && hasImage && hasText ? {} : undefined;\n  if (hasImage) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasExecutorGroup, {\n  DECLUTTER,\n} from '../../render/canvas/ExecutorGroup.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply,\n  reset as resetTransform,\n  scale,\n  scale as scaleTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  boundingExtent,\n  buffer,\n  containsExtent,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\nimport {wrapX} from '../../coordinate.js';\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst IMAGE_REPLAYS = {\n  'image': ['Polygon', 'Circle', 'LineString', 'Image', 'Text'],\n  'hybrid': ['Polygon', 'LineString'],\n  'vector': [],\n};\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst VECTOR_REPLAYS = {\n  'hybrid': ['Image', 'Text', 'Default'],\n  'vector': ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'],\n};\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n * @extends {CanvasTileLayerRenderer<import(\"../../layer/VectorTile.js\").default>}\n */\nclass CanvasVectorTileLayerRenderer extends CanvasTileLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorTile.js\").default} layer VectorTile layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedOpacity_ = 1;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {Array<ZIndexContext>}\n     */\n    this.tileClipContexts_ = null;\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection\").default} projection Projection.\n   * @return {boolean|undefined} Tile needs to be rendered.\n   */\n  prepareTile(tile, pixelRatio, projection) {\n    let render;\n    const state = tile.getState();\n    if (state === TileState.LOADED || state === TileState.ERROR) {\n      this.updateExecutorGroup_(tile, pixelRatio, projection);\n      if (this.tileImageNeedsRender_(tile)) {\n        render = true;\n      }\n    }\n    return render;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const layer = this.getLayer();\n    const tile = layer.getSource().getTile(z, x, y, pixelRatio, projection);\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    if (hifi || !tile.wantedResolution) {\n      tile.wantedResolution = resolution;\n    }\n    const render = this.prepareTile(tile, pixelRatio, projection);\n    if (\n      render &&\n      (hifi || Date.now() - frameState.time < 8) &&\n      layer.getRenderMode() !== 'vector'\n    ) {\n      this.renderTileImage_(tile, frameState);\n    }\n    return super.getTile(z, x, y, frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const layer = this.getLayer();\n    return (\n      super.isDrawableTile(tile) &&\n      (layer.getRenderMode() === 'vector'\n        ? getUid(layer) in tile.executorGroups\n        : tile.hasContext(layer))\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTileImage(tile) {\n    return tile.getImage(this.getLayer());\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerRevision = this.getLayer().getRevision();\n    if (this.renderedLayerRevision_ !== layerRevision) {\n      this.renderedLayerRevision_ = layerRevision;\n      this.renderedTiles.length = 0;\n    }\n    return super.prepareFrame(frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateExecutorGroup_(tile, pixelRatio, projection) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const revision = layer.getRevision();\n    const renderOrder = layer.getRenderOrder() || null;\n\n    const resolution = tile.wantedResolution;\n    const builderState = tile.getReplayState(layer);\n    if (\n      !builderState.dirty &&\n      builderState.renderedResolution === resolution &&\n      builderState.renderedRevision == revision &&\n      builderState.renderedRenderOrder == renderOrder\n    ) {\n      return;\n    }\n\n    const source = layer.getSource();\n    const declutter = !!layer.getDeclutter();\n    const sourceTileGrid = source.getTileGrid();\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n\n    const sourceTiles = source.getSourceTiles(pixelRatio, projection, tile);\n    const layerUid = getUid(layer);\n    delete tile.hitDetectionImageData[layerUid];\n    tile.executorGroups[layerUid] = [];\n    builderState.dirty = false;\n    for (let t = 0, tt = sourceTiles.length; t < tt; ++t) {\n      const sourceTile = sourceTiles[t];\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      const sourceTileCoord = sourceTile.tileCoord;\n      const sourceTileExtent =\n        sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      const sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      const builderExtent = buffer(\n        sharedExtent,\n        layer.getRenderBuffer() * resolution,\n        this.tmpExtent,\n      );\n      const bufferedExtent = equals(sourceTileExtent, sharedExtent)\n        ? null\n        : builderExtent;\n      const builderGroup = new CanvasBuilderGroup(\n        0,\n        sharedExtent,\n        resolution,\n        pixelRatio,\n      );\n      const squaredTolerance = getSquaredRenderTolerance(\n        resolution,\n        pixelRatio,\n      );\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @param {number} [index] Render order index.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      const render = function (feature, index) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            builderGroup,\n            declutter,\n            index,\n          );\n          builderState.dirty = builderState.dirty || dirty;\n        }\n      };\n\n      const features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== builderState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (let i = 0, ii = features.length; i < ii; ++i) {\n        const feature = features[i];\n        if (\n          !bufferedExtent ||\n          intersects(bufferedExtent, feature.getGeometry().getExtent())\n        ) {\n          render.call(this, feature, i);\n        }\n      }\n      const executorGroupInstructions = builderGroup.finish();\n      // no need to clip when the render tile is covered by a single source tile\n      const replayExtent =\n        layer.getRenderMode() !== 'vector' &&\n        declutter &&\n        sourceTiles.length === 1\n          ? null\n          : sharedExtent;\n      const renderingReplayGroup = new CanvasExecutorGroup(\n        replayExtent,\n        resolution,\n        pixelRatio,\n        source.getOverlaps(),\n        executorGroupInstructions,\n        layer.getRenderBuffer(),\n        true,\n      );\n      tile.executorGroups[layerUid].push(renderingReplayGroup);\n    }\n    builderState.renderedRevision = revision;\n    builderState.renderedRenderOrder = renderOrder;\n    builderState.renderedResolution = resolution;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    const layer = this.getLayer();\n    const source = layer.getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection,\n    );\n\n    const hitExtent = boundingExtent([coordinate]);\n    buffer(hitExtent, resolution * hitTolerance, hitExtent);\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position.\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      let key = feature.getId();\n      if (key === undefined) {\n        key = getUid(feature);\n      }\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          }),\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    const renderedTiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n\n    let found;\n    for (let i = 0, ii = renderedTiles.length; !found && i < ii; ++i) {\n      const tile = renderedTiles[i];\n      const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      if (!intersects(tileExtent, hitExtent)) {\n        continue;\n      }\n\n      const layerUid = getUid(layer);\n      const executorGroups = [tile.executorGroups[layerUid]];\n      const declutter = layer.getDeclutter();\n      executorGroups.some((executorGroups) => {\n        const declutteredFeatures = declutter\n          ? frameState.declutter[declutter].all().map((item) => item.value)\n          : null;\n        for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n          const executorGroup = executorGroups[t];\n          found = executorGroup.forEachFeatureAtCoordinate(\n            coordinate,\n            resolution,\n            rotation,\n            hitTolerance,\n            featureCallback,\n            declutteredFeatures,\n          );\n          if (found) {\n            return true;\n          }\n        }\n      });\n    }\n    return found;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature.js\").FeatureLike>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve, reject) => {\n      const layer = this.getLayer();\n      const layerUid = getUid(layer);\n      const source = layer.getSource();\n      const projection = this.renderedProjection;\n      const projectionExtent = projection.getExtent();\n      const resolution = this.renderedResolution;\n      const tileGrid = source.getTileGridForProjection(projection);\n      const coordinate = applyTransform(\n        this.renderedPixelToCoordinateTransform_,\n        pixel.slice(),\n      );\n      const tileCoord = tileGrid.getTileCoordForCoordAndResolution(\n        coordinate,\n        resolution,\n      );\n      /** @type {import(\"../../VectorRenderTile.js\").default|undefined} */\n      let tile;\n      for (let i = 0, ii = this.renderedTiles.length; i < ii; ++i) {\n        if (\n          tileCoord.toString() === this.renderedTiles[i].tileCoord.toString()\n        ) {\n          tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n            this.renderedTiles[i]\n          );\n          if (tile.getState() === TileState.LOADED) {\n            const extent = tileGrid.getTileCoordExtent(tile.tileCoord);\n            if (\n              source.getWrapX() &&\n              projection.canWrapX() &&\n              !containsExtent(projectionExtent, extent)\n            ) {\n              wrapX(coordinate, projection);\n            }\n            break;\n          }\n          tile = undefined;\n        }\n      }\n      if (!tile || tile.loadingSourceTiles > 0) {\n        resolve([]);\n        return;\n      }\n      const extent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      const corner = getTopLeft(extent);\n      const tilePixel = [\n        (coordinate[0] - corner[0]) / resolution,\n        (corner[1] - coordinate[1]) / resolution,\n      ];\n      /** @type {Array<import(\"../../Feature.js\").FeatureLike>} */\n      const features = tile.getSourceTiles().reduce(function (\n        accumulator,\n        sourceTile,\n      ) {\n        return accumulator.concat(sourceTile.getFeatures());\n      }, []);\n      /** @type {ImageData|undefined} */\n      let hitDetectionImageData = tile.hitDetectionImageData[layerUid];\n      if (!hitDetectionImageData) {\n        const tileSize = toSize(\n          tileGrid.getTileSize(\n            tileGrid.getZForResolution(resolution, source.zDirection),\n          ),\n        );\n        const rotation = this.renderedRotation_;\n        const transforms = [\n          this.getRenderTransform(\n            tileGrid.getTileCoordCenter(tile.wrappedTileCoord),\n            resolution,\n            0,\n            HIT_DETECT_RESOLUTION,\n            tileSize[0] * HIT_DETECT_RESOLUTION,\n            tileSize[1] * HIT_DETECT_RESOLUTION,\n            0,\n          ),\n        ];\n        hitDetectionImageData = createHitDetectionImageData(\n          tileSize,\n          transforms,\n          features,\n          layer.getStyleFunction(),\n          tileGrid.getTileCoordExtent(tile.wrappedTileCoord),\n          tile.getReplayState(layer).renderedResolution,\n          rotation,\n        );\n        tile.hitDetectionImageData[layerUid] = hitDetectionImageData;\n      }\n      resolve(hitDetect(tilePixel, features, hitDetectionImageData));\n    });\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {\n    const context = this.context;\n    const alpha = context.globalAlpha;\n    context.globalAlpha = layerState.opacity;\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const tiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    for (let i = 0, ii = tiles.length; i < ii; ++i) {\n      const tile = tiles[i];\n      const executorGroups = tile.executorGroups[getUid(this.getLayer())];\n      const declutter = this.getLayer().getDeclutter();\n      if (executorGroups) {\n        for (let j = executorGroups.length - 1; j >= 0; --j) {\n          executorGroups[j].execute(\n            this.context,\n            [this.context.canvas.width, this.context.canvas.height],\n            this.getTileRenderTransform(tile, frameState),\n            frameState.viewState.rotation,\n            hifi,\n            DECLUTTER,\n            declutter ? frameState.declutter[declutter] : undefined,\n          );\n        }\n      }\n    }\n    context.globalAlpha = alpha;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {\n    const tiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    const executorGroups = tiles.reduce((acc, tile, index) => {\n      tile.executorGroups[getUid(this.getLayer())].forEach((executorGroup) =>\n        acc.push({\n          executorGroup,\n          index,\n        }),\n      );\n      return acc;\n    }, []);\n\n    const executorGroupZIndexContexts = executorGroups.map(({executorGroup}) =>\n      executorGroup.getDeferredZIndexContexts(),\n    );\n    const usedZIndices = {};\n    for (let i = 0, ii = executorGroups.length; i < ii; ++i) {\n      const executorGroupZindexContext =\n        executorGroups[i].executorGroup.getDeferredZIndexContexts();\n      for (const key in executorGroupZindexContext) {\n        usedZIndices[key] = true;\n      }\n    }\n    const zIndexKeys = Object.keys(usedZIndices).sort(ascending);\n    zIndexKeys.map(Number).forEach((zIndex) => {\n      executorGroupZIndexContexts.forEach((zIndexContexts, i) => {\n        if (!zIndexContexts[zIndex]) {\n          return;\n        }\n        zIndexContexts[zIndex].forEach((zIndexContext) => {\n          const {executorGroup, index} = executorGroups[i];\n          const context = executorGroup.getRenderedContext();\n          const alpha = context.globalAlpha;\n          context.globalAlpha = this.renderedOpacity_;\n          const tileClipContext = this.tileClipContexts_[index];\n          if (tileClipContext) {\n            tileClipContext.draw(context);\n          }\n          zIndexContext.draw(context);\n          if (tileClipContext) {\n            context.restore();\n          }\n          context.globalAlpha = alpha;\n          zIndexContext.clear();\n        });\n        zIndexContexts[zIndex].length = 0;\n      });\n    });\n  }\n\n  getTileRenderTransform(tile, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    const size = frameState.size;\n    const width = Math.round(size[0] * pixelRatio);\n    const height = Math.round(size[1] * pixelRatio);\n\n    const source = this.getLayer().getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection,\n    );\n    const tileCoord = tile.tileCoord;\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n    const worldOffset =\n      tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tileExtent[0];\n    const transform = multiply(\n      scale(this.inversePixelTransform.slice(), 1 / pixelRatio, 1 / pixelRatio),\n      this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        worldOffset,\n      ),\n    );\n    return transform;\n  }\n\n  /**\n   * Render the vectors for this layer.\n   * @param {CanvasRenderingContext2D} context Target context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  postRender(context, frameState) {\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n\n    this.renderedPixelToCoordinateTransform_ =\n      frameState.pixelToCoordinateTransform.slice();\n    this.renderedRotation_ = frameState.viewState.rotation;\n    this.renderedOpacity_ =\n      frameState.layerStatesArray[frameState.layerIndex].opacity;\n\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const renderMode = layer.getRenderMode();\n    const alpha = context.globalAlpha;\n    context.globalAlpha = this.renderedOpacity_;\n    const declutter = layer.getDeclutter();\n    const replayTypes = declutter\n      ? VECTOR_REPLAYS[renderMode].filter((type) => !DECLUTTER.includes(type))\n      : VECTOR_REPLAYS[renderMode];\n    const viewState = frameState.viewState;\n    const rotation = viewState.rotation;\n    const tileSource = layer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const z = tileGrid.getZForResolution(\n      viewState.resolution,\n      tileSource.zDirection,\n    );\n\n    const tiles = this.renderedTiles;\n    const clips = [];\n    const clipZs = [];\n    const tileClipContexts = [];\n    let ready = true;\n    for (let i = tiles.length - 1; i >= 0; --i) {\n      const tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n        tiles[i]\n      );\n      ready = ready && !tile.getReplayState(layer).dirty;\n      const executorGroups = tile.executorGroups[getUid(layer)].filter(\n        (group) => group.hasExecutors(replayTypes),\n      );\n      if (executorGroups.length === 0) {\n        continue;\n      }\n      const transform = this.getTileRenderTransform(tile, frameState);\n      const currentZ = tile.tileCoord[0];\n      let contextSaved = false;\n      // Clip mask for regions in this tile that already filled by a higher z tile\n      const currentClip = executorGroups[0].getClipCoords(transform);\n      let clipContext = context;\n      let tileClipContext;\n      if (currentClip) {\n        tileClipContext = new ZIndexContext();\n        clipContext = tileClipContext.getContext();\n        for (let j = 0, jj = clips.length; j < jj; ++j) {\n          if (z !== currentZ && currentZ < clipZs[j]) {\n            const clip = clips[j];\n            if (\n              intersects(\n                [\n                  currentClip[0],\n                  currentClip[3],\n                  currentClip[4],\n                  currentClip[7],\n                ],\n                [clip[0], clip[3], clip[4], clip[7]],\n              )\n            ) {\n              if (!contextSaved) {\n                clipContext.save();\n                contextSaved = true;\n              }\n              clipContext.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              clipContext.moveTo(currentClip[0], currentClip[1]);\n              clipContext.lineTo(currentClip[2], currentClip[3]);\n              clipContext.lineTo(currentClip[4], currentClip[5]);\n              clipContext.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              clipContext.moveTo(clip[6], clip[7]);\n              clipContext.lineTo(clip[4], clip[5]);\n              clipContext.lineTo(clip[2], clip[3]);\n              clipContext.lineTo(clip[0], clip[1]);\n              clipContext.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n      }\n      for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n        const executorGroup = executorGroups[t];\n        executorGroup.execute(\n          context,\n          [context.canvas.width, context.canvas.height],\n          transform,\n          rotation,\n          hifi,\n          replayTypes,\n          frameState.declutter === null ? undefined : frameState.declutter,\n        );\n      }\n      if (contextSaved) {\n        if (clipContext === context) {\n          clipContext.restore();\n        } else {\n          tileClipContexts[i] = tileClipContext;\n        }\n      }\n    }\n    context.globalAlpha = alpha;\n    this.ready = ready;\n    this.tileClipContexts_ = tileClipContexts;\n    if (!frameState.declutter) {\n      this.renderDeferredInternal(frameState);\n    }\n\n    super.postRender(context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n   * @param {boolean} [declutter] Enable decluttering.\n   * @param {number} [index] Render order index.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    declutter,\n    index,\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            undefined,\n            declutter,\n            index,\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        undefined,\n        declutter,\n        index,\n      );\n    }\n    return loading;\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} A new tile image was rendered.\n   * @private\n   */\n  tileImageNeedsRender_(tile) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    if (layer.getRenderMode() === 'vector') {\n      return false;\n    }\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const resolution = tile.wantedResolution;\n    return (\n      replayState.renderedTileResolution !== resolution ||\n      replayState.renderedTileRevision !== revision\n    );\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {import(\"../../Map\").FrameState} frameState Frame state.\n   * @private\n   */\n  renderTileImage_(tile, frameState) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const executorGroups = tile.executorGroups[getUid(layer)];\n    replayState.renderedTileRevision = revision;\n\n    const tileCoord = tile.wrappedTileCoord;\n    const z = tileCoord[0];\n    const source = layer.getSource();\n    let pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileResolution = tileGrid.getResolution(tile.tileCoord[0]);\n    const renderPixelRatio =\n      (frameState.pixelRatio / tile.wantedResolution) * tileResolution;\n    const resolution = tileGrid.getResolution(z);\n    const context = tile.getContext(layer);\n\n    // Increase tile size when overzooming for low pixel ratio, to avoid blurry tiles\n    pixelRatio = Math.round(\n      Math.max(pixelRatio, renderPixelRatio / pixelRatio),\n    );\n    const size = source.getTilePixelSize(z, pixelRatio, projection);\n    context.canvas.width = size[0];\n    context.canvas.height = size[1];\n    const renderScale = pixelRatio / renderPixelRatio;\n    if (renderScale !== 1) {\n      const canvasTransform = resetTransform(this.tmpTransform_);\n      scaleTransform(canvasTransform, renderScale, renderScale);\n      context.setTransform.apply(context, canvasTransform);\n    }\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    const pixelScale = renderPixelRatio / resolution;\n    const transform = resetTransform(this.tmpTransform_);\n    scaleTransform(transform, pixelScale, -pixelScale);\n    translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n    for (let i = 0, ii = executorGroups.length; i < ii; ++i) {\n      const executorGroup = executorGroups[i];\n      executorGroup.execute(\n        context,\n        [\n          context.canvas.width * renderScale,\n          context.canvas.height * renderScale,\n        ],\n        transform,\n        0,\n        true,\n        IMAGE_REPLAYS[layer.getRenderMode()],\n        null,\n      );\n    }\n    replayState.renderedTileResolution = tile.wantedResolution;\n  }\n}\n\nexport default CanvasVectorTileLayerRenderer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/VectorTile\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorTileLayerRenderer from '../renderer/canvas/VectorTileLayer.js';\nimport TileProperty from './TileProperty.js';\nimport {assert} from '../asserts.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} VectorTileLayerOnSignature\n */\n\n/**\n * @typedef {'hybrid' | 'vector'} VectorTileRenderType\n */\n\n/**\n * @typedef {Object} Options\n * @template {import(\"../source/VectorTile.js\").default<import('../Feature').FeatureLike>} VectorTileSourceType\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {VectorTileRenderType} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views, but get lifted above all polygon and line elements.\n *  * `'vector'`: Everything is rendered as vectors and the original render order is maintained. Use\n *    this mode for improved performance and visual epxerience on vector tile layers with not too many\n *    rendered features (e.g. for highlighting a subset of features of another layer with the same\n *    source).\n * @property {VectorTileSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor|false} [background] Background color for the layer. If not specified, no\n * background will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @param {Options} [options] Options.\n * @template {import(\"../source/VectorTile.js\").default<import('../Feature').FeatureLike>} VectorTileSourceType\n * @extends {BaseVectorLayer<VectorTileSourceType, CanvasVectorTileLayerRenderer>}\n * @api\n */\nclass VectorTileLayer extends BaseVectorLayer {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = /** @type {Object} */ (Object.assign({}, options));\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n\n    super(\n      /** @type {import(\"./BaseVector.js\").Options<VectorTileSourceType>} */ (\n        baseOptions\n      ),\n    );\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    const renderMode = options.renderMode || 'hybrid';\n    assert(\n      renderMode == 'hybrid' || renderMode == 'vector',\n      \"`renderMode` must be `'hybrid'` or `'vector'`\",\n    );\n\n    /**\n     * @private\n     * @type {VectorTileRenderType}\n     */\n    this.renderMode_ = renderMode;\n\n    this.setPreload(options.preload ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n\n    /**\n     * @return {import(\"./Base.js\").BackgroundColor} Background color.\n     * @function\n     * @api\n     */\n    this.getBackground;\n\n    /**\n     * @param {import(\"./Base.js\").BackgroundColor} background Background color.\n     * @function\n     * @api\n     */\n    this.setBackground;\n  }\n\n  createRenderer() {\n    return new CanvasVectorTileLayerRenderer(this);\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {VectorTileRenderType} The render mode.\n   */\n  getRenderMode() {\n    return this.renderMode_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default VectorTileLayer;\n","/**\n * @module ol/VectorTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\nclass VectorTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Data source url.\n   * @param {import(\"./format/Feature.js\").default<typeof import(\"./Feature.js\").default|typeof import(\"./render/Feature.js\").default>} format Feature format.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, format, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * Extent of this tile; set by the source.\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = null;\n\n    /**\n     * @private\n     * @type {import(\"./format/Feature.js\").default}\n     */\n    this.format_ = format;\n\n    /**\n     * @private\n     * @type {Array<import(\"./Feature.js\").FeatureLike>}\n     */\n    this.features_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * Feature projection of this tile; set by the source.\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection = null;\n\n    /**\n     * Resolution of this tile; set by the source.\n     * @type {number}\n     */\n    this.resolution;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = src;\n\n    this.key = src;\n  }\n\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {import(\"./format/Feature.js\").default} Feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Get the features for this tile. Geometries will be in the view projection.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n      if (this.loader_) {\n        this.loader_(this.extent, this.resolution, this.projection);\n      }\n    }\n  }\n\n  /**\n   * Handler for successful tile load.\n   * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n   * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n   */\n  onLoad(features, dataProjection) {\n    this.setFeatures(features);\n  }\n\n  /**\n   * Handler for tile load errors.\n   */\n  onError() {\n    this.setState(TileState.ERROR);\n  }\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array<import(\"./Feature.js\").FeatureLike>} features Features.\n   * @api\n   */\n  setFeatures(features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  }\n\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {import(\"./featureloader.js\").FeatureLoader} loader Feature loader.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n}\n\nexport default VectorTile;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already',\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        /**\n         * @param {number} a First resolution\n         * @param {number} b Second resolution\n         * @return {number} Comparison result\n         */\n        (a, b) => b - a,\n        true,\n      ),\n      '`resolutions` must be sorted in descending order',\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal',\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal',\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n          ? DEFAULT_TILE_SIZE\n          : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map((size, z) => {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1),\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      });\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent,\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (x !== undefined && y !== undefined) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange,\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange,\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_,\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange,\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange,\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord,\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default|null} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0,\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord),\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\nexport {TileGrid};\nexport {default as WMTS} from './tilegrid/WMTS.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth,\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution,\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      'A VectorTile source can only be rendered if it has a projection compatible with the view projection.',\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          if (!range) {\n            throw new Error(\n              'The {-y} placeholder requires a tile grid with extent',\n            );\n          }\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getUid} from './util.js';\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nconst canvasPool = [];\n\nclass VectorRenderTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function\n   * to get source tiles for this tile.\n   */\n  constructor(tileCoord, state, urlTileCoord, getSourceTiles) {\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {!Object<string, CanvasRenderingContext2D>}\n     */\n    this.context_ = {};\n\n    /**\n     * Executor groups by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.executorGroups = {};\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    this.loadingSourceTiles = 0;\n\n    /**\n     * @type {Object<number, ImageData>}\n     */\n    this.hitDetectionImageData = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles = [];\n\n    /**\n     * @type {Object<string, boolean>}\n     */\n    this.errorTileKeys = {};\n\n    /**\n     * @type {number}\n     */\n    this.wantedResolution;\n\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n    this.getSourceTiles = getSourceTiles.bind(undefined, this);\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext(layer) {\n    const key = getUid(layer);\n    if (!(key in this.context_)) {\n      this.context_[key] = createCanvasContext2D(1, 1, canvasPool);\n    }\n    return this.context_[key];\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {boolean} Tile has a rendering context for the given layer.\n   */\n  hasContext(layer) {\n    return getUid(layer) in this.context_;\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage(layer) {\n    return this.hasContext(layer) ? this.getContext(layer).canvas : null;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedResolution: NaN,\n        renderedRevision: -1,\n        renderedTileResolution: NaN,\n        renderedTileRevision: -1,\n        renderedTileZ: -1,\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * Load the tile.\n   */\n  load() {\n    this.getSourceTiles();\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    for (const key in this.context_) {\n      const context = this.context_[key];\n      releaseCanvas(context);\n      canvasPool.push(context.canvas);\n      delete this.context_[key];\n    }\n    super.release();\n  }\n}\n\nexport default VectorRenderTile;\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n *\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<FeatureType>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").FeatureLike]\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<FeatureType>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure,\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true,\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      try {\n        /** @type {Document|Node|Object|string|undefined} */\n        let source;\n        if (type == 'text' || type == 'json') {\n          source = xhr.responseText;\n        } else if (type == 'xml') {\n          source = xhr.responseXML || xhr.responseText;\n        } else if (type == 'arraybuffer') {\n          source = /** @type {ArrayBuffer} */ (xhr.response);\n        }\n        if (source) {\n          success(\n            /** @type {Array<FeatureType>} */\n            (\n              format.readFeatures(source, {\n                extent: extent,\n                featureProjection: projection,\n              })\n            ),\n            format.readProjection(source),\n          );\n        } else {\n          failure();\n        }\n      } catch {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").FeatureLike]\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<import('./format/Feature.js').FeatureToFeatureClass<FeatureType>>} format Feature format.\n * @return {FeatureLoader<FeatureType>} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<FeatureType>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source =\n      /** @type {import(\"./source/Vector\").default<FeatureType>} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<FeatureType>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID,\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/VectorTile\n */\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../VectorTile.js';\nimport TileCache from '../TileCache.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport VectorRenderTile from '../VectorRenderTile.js';\nimport {DEFAULT_MAX_ZOOM} from '../tilegrid/common.js';\nimport {\n  buffer as bufferExtent,\n  getIntersection,\n  intersects,\n} from '../extent.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {fromKey, getCacheKeyForTileKey, getKeyZXY} from '../tilecoord.js';\nimport {isEmpty} from '../obj.js';\nimport {loadFeaturesXhr} from '../featureloader.js';\nimport {toSize} from '../size.js';\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} FeatureType\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least twice the number of tiles in the viewport.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {import(\"../format/Feature.js\").default<import(\"../format/Feature.js\").FeatureToFeatureClass<FeatureType>>} [format] Feature format for tiles. Used and required by the default.\n * @property {boolean} [overlaps=true] This source may have overlapping geometries. Setting this\n * to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection of the tile grid.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../VectorTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/VectorTile~VectorTile}.\n * @property {number} [maxZoom=22] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=512] Optional tile size. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. Could look like this for pbf tiles:\n * ```js\n * function(tile, url) {\n *   tile.setLoader(function(extent, resolution, projection) {\n *     fetch(url).then(function(response) {\n *       response.arrayBuffer().then(function(data) {\n *         const format = tile.getFormat() // ol/format/MVT configured as source format\n *         const features = format.readFeatures(data, {\n *           extent: extent,\n *           featureProjection: projection\n *         });\n *         tile.setFeatures(features);\n *       });\n *     });\n *   });\n * }\n * ```\n * If you do not need extent, resolution and projection to get the features for a tile (e.g.\n * for GeoJSON tiles), your `tileLoadFunction` does not need a `setLoader()` call. Only make sure\n * to call `setFeatures()` on the tile:\n * ```js\n * const format = new GeoJSON({featureProjection: map.getView().getProjection()});\n * async function tileLoadFunction(tile, url) {\n *   const response = await fetch(url);\n *   const data = await response.json();\n *   tile.setFeatures(format.readFeatures(data));\n * }\n * ```\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {number} [transition] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When set to `true`, tiles will be wrapped horizontally to\n * render multiple worlds.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=1]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Class for layer sources providing vector data divided into a tile grid, to be\n * used with {@link module:ol/layer/VectorTile~VectorTileLayer}. Although this source receives tiles\n * with vector features from the server, it is not meant for feature editing.\n * Features are optimized for rendering, their geometries are clipped at or near\n * tile boundaries and simplified for a view resolution. See\n * {@link module:ol/source/Vector~VectorSource} for vector sources that are suitable for feature\n * editing.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nclass VectorTile extends UrlTile {\n  /**\n   * @param {!Options<FeatureType>} options Vector tile options.\n   */\n  constructor(options) {\n    const projection = options.projection || 'EPSG:3857';\n\n    const extent = options.extent || extentFromProjection(projection);\n\n    const tileGrid =\n      options.tileGrid ||\n      createXYZ({\n        extent: extent,\n        maxResolution: options.maxResolution,\n        maxZoom: options.maxZoom !== undefined ? options.maxZoom : 22,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize || 512,\n      });\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      interpolate: true,\n      opaque: false,\n      projection: projection,\n      state: options.state,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultLoadFunction,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX === undefined ? true : options.wrapX,\n      transition: options.transition,\n      zDirection: options.zDirection === undefined ? 1 : options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default<import(\"../format/Feature.js\").FeatureToFeatureClass<FeatureType>>|null}\n     */\n    this.format_ = options.format ? options.format : null;\n\n    /**\n     * @private\n     * @type {TileCache}\n     */\n    this.sourceTileCache = new TileCache(this.tileCache.highWaterMark);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @protected\n     * @type {typeof import(\"../VectorTile.js\").default}\n     */\n    this.tileClass = options.tileClass ? options.tileClass : Tile;\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGrids_ = {};\n  }\n\n  /**\n   * Get features whose bounding box intersects the provided extent. Only features for cached\n   * tiles for the last rendered zoom level are available in the source. So this method is only\n   * suitable for requesting tiles for extents that are currently rendered.\n   *\n   * Features are returned in random tile order and as they are included in the tiles. This means\n   * they can be clipped, duplicated across tiles, and simplified to the render resolution.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    const features = [];\n    const tileCache = this.tileCache;\n    if (tileCache.getCount() === 0) {\n      return features;\n    }\n    const z = fromKey(tileCache.peekFirstKey())[0];\n    const tileGrid = this.tileGrid;\n    tileCache.forEach(function (tile) {\n      if (tile.tileCoord[0] !== z || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const sourceTiles = tile.getSourceTiles();\n      for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n        const sourceTile = sourceTiles[i];\n        const tileCoord = sourceTile.tileCoord;\n        if (intersects(extent, tileGrid.getTileCoordExtent(tileCoord))) {\n          const tileFeatures = sourceTile.getFeatures();\n          if (tileFeatures) {\n            for (let j = 0, jj = tileFeatures.length; j < jj; ++j) {\n              const candidate = tileFeatures[j];\n              const geometry = candidate.getGeometry();\n              if (intersects(extent, geometry.getExtent())) {\n                features.push(candidate);\n              }\n            }\n          }\n        }\n      }\n    });\n    return features;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * clear {@link module:ol/TileCache~TileCache} and delete all source tiles\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n    this.sourceTileCache.clear();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    const usedSourceTiles = Object.keys(usedTiles).reduce((acc, key) => {\n      const cacheKey = getCacheKeyForTileKey(key);\n      const tile = tileCache.peek(cacheKey);\n      if (tile) {\n        const sourceTiles = tile.sourceTiles;\n        for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n          acc[sourceTiles[i].getKey()] = true;\n        }\n      }\n      return acc;\n    }, {});\n    super.expireCache(projection, usedTiles);\n    this.sourceTileCache.expireCache(usedSourceTiles);\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection\").default} projection Projection.\n   * @param {VectorRenderTile} tile Vector image tile.\n   * @return {Array<import(\"../VectorTile\").default>} Tile keys.\n   */\n  getSourceTiles(pixelRatio, projection, tile) {\n    if (tile.getState() === TileState.IDLE) {\n      tile.setState(TileState.LOADING);\n      const urlTileCoord = tile.wrappedTileCoord;\n      const tileGrid = this.getTileGridForProjection(projection);\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      const z = urlTileCoord[0];\n      const resolution = tileGrid.getResolution(z);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(extent, -resolution, extent);\n      const sourceTileGrid = this.tileGrid;\n      const sourceExtent = sourceTileGrid.getExtent();\n      if (sourceExtent) {\n        getIntersection(extent, sourceExtent, extent);\n      }\n      const sourceZ = sourceTileGrid.getZForResolution(\n        resolution,\n        this.zDirection,\n      );\n\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        const tileUrl = this.tileUrlFunction(\n          sourceTileCoord,\n          pixelRatio,\n          projection,\n        );\n        const sourceTile = this.sourceTileCache.containsKey(tileUrl)\n          ? this.sourceTileCache.get(tileUrl)\n          : new this.tileClass(\n              sourceTileCoord,\n              tileUrl ? TileState.IDLE : TileState.EMPTY,\n              tileUrl,\n              this.format_,\n              this.tileLoadFunction,\n            );\n        tile.sourceTiles.push(sourceTile);\n        const sourceTileState = sourceTile.getState();\n        if (sourceTileState < TileState.LOADED) {\n          const listenChange = (event) => {\n            this.handleTileChange(event);\n            const state = sourceTile.getState();\n            if (state === TileState.LOADED || state === TileState.ERROR) {\n              const sourceTileKey = sourceTile.getKey();\n              if (sourceTileKey in tile.errorTileKeys) {\n                if (sourceTile.getState() === TileState.LOADED) {\n                  delete tile.errorTileKeys[sourceTileKey];\n                }\n              } else {\n                tile.loadingSourceTiles--;\n              }\n              if (state === TileState.ERROR) {\n                tile.errorTileKeys[sourceTileKey] = true;\n              } else {\n                sourceTile.removeEventListener(EventType.CHANGE, listenChange);\n              }\n              if (tile.loadingSourceTiles === 0) {\n                tile.setState(\n                  isEmpty(tile.errorTileKeys)\n                    ? TileState.LOADED\n                    : TileState.ERROR,\n                );\n              }\n            }\n          };\n          sourceTile.addEventListener(EventType.CHANGE, listenChange);\n          tile.loadingSourceTiles++;\n        }\n        if (sourceTileState === TileState.IDLE) {\n          sourceTile.extent =\n            sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n          sourceTile.projection = projection;\n          sourceTile.resolution = sourceTileGrid.getResolution(\n            sourceTileCoord[0],\n          );\n          this.sourceTileCache.set(tileUrl, sourceTile);\n          sourceTile.load();\n        }\n      });\n      if (!tile.loadingSourceTiles) {\n        tile.setState(\n          tile.sourceTiles.some(\n            (sourceTile) => sourceTile.getState() === TileState.ERROR,\n          )\n            ? TileState.ERROR\n            : TileState.LOADED,\n        );\n      }\n    }\n\n    return tile.sourceTiles;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!VectorRenderTile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const coordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    let tile;\n    if (this.tileCache.containsKey(coordKey)) {\n      tile = this.tileCache.get(coordKey);\n      if (tile.key === key) {\n        return tile;\n      }\n    }\n    const tileCoord = [z, x, y];\n    let urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const sourceExtent = this.getTileGrid().getExtent();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (urlTileCoord && sourceExtent) {\n      const tileExtent = tileGrid.getTileCoordExtent(urlTileCoord);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(tileExtent, -tileGrid.getResolution(z), tileExtent);\n      if (!intersects(sourceExtent, tileExtent)) {\n        urlTileCoord = null;\n      }\n    }\n    let empty = true;\n    if (urlTileCoord !== null) {\n      const sourceTileGrid = this.tileGrid;\n      const resolution = tileGrid.getResolution(z);\n      const sourceZ = sourceTileGrid.getZForResolution(resolution, 1);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      bufferExtent(extent, -resolution, extent);\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        empty =\n          empty &&\n          !this.tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n      });\n    }\n    const newTile = new VectorRenderTile(\n      tileCoord,\n      empty ? TileState.EMPTY : TileState.IDLE,\n      urlTileCoord,\n      this.getSourceTiles.bind(this, pixelRatio, projection),\n    );\n\n    newTile.key = key;\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      this.tileCache.replace(coordKey, newTile);\n    } else {\n      this.tileCache.set(coordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const code = projection.getCode();\n    let tileGrid = this.tileGrids_[code];\n    if (!tileGrid) {\n      // A tile grid that matches the tile size of the source tile grid is more\n      // likely to have 1:1 relationships between source tiles and rendered tiles.\n      const sourceTileGrid = this.tileGrid;\n      const resolutions = sourceTileGrid.getResolutions().slice();\n      const origins = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getOrigin(z);\n      });\n      const tileSizes = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getTileSize(z);\n      });\n      const length = DEFAULT_MAX_ZOOM + 1;\n      for (let z = resolutions.length; z < length; ++z) {\n        resolutions.push(resolutions[z - 1] / 2);\n        origins.push(origins[z - 1]);\n        tileSizes.push(tileSizes[z - 1]);\n      }\n      tileGrid = new TileGrid({\n        extent: sourceTileGrid.getExtent(),\n        origins: origins,\n        resolutions: resolutions,\n        tileSizes: tileSizes,\n      });\n      this.tileGrids_[code] = tileGrid;\n    }\n    return tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    return [\n      Math.round(tileSize[0] * pixelRatio),\n      Math.round(tileSize[1] * pixelRatio),\n    ];\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    super.updateCacheSize(tileCount * 2, projection);\n    this.sourceTileCache.highWaterMark =\n      this.getTileCacheForProjection(projection).highWaterMark;\n  }\n}\n\nexport default VectorTile;\n\n/**\n * Sets the loader for a tile.\n * @param {import(\"../VectorTile.js\").default} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n  tile.setLoader(\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    function (extent, resolution, projection) {\n      loadFeaturesXhr(\n        url,\n        tile.getFormat(),\n        extent,\n        resolution,\n        projection,\n        tile.onLoad.bind(tile),\n        tile.onError.bind(tile),\n      );\n    },\n  );\n}\n","/**\n * @module ol/net\n */\nimport {getUid} from './util.js';\n\n/**\n * Simple JSONP helper. Supports error callbacks and a custom callback param.\n * The error callback will be called when no JSONP is executed after 10 seconds.\n *\n * @param {string} url Request url. A 'callback' query parameter will be\n *     appended.\n * @param {Function} callback Callback on success.\n * @param {Function} [errback] Callback on error.\n * @param {string} [callbackParam] Custom query parameter for the JSONP\n *     callback. Default is 'callback'.\n */\nexport function jsonp(url, callback, errback, callbackParam) {\n  const script = document.createElement('script');\n  const key = 'olc_' + getUid(callback);\n  function cleanup() {\n    delete window[key];\n    script.parentNode.removeChild(script);\n  }\n  script.async = true;\n  script.src =\n    url +\n    (url.includes('?') ? '&' : '?') +\n    (callbackParam || 'callback') +\n    '=' +\n    key;\n  const timer = setTimeout(function () {\n    cleanup();\n    if (errback) {\n      errback();\n    }\n  }, 10000);\n  window[key] = function (data) {\n    clearTimeout(timer);\n    cleanup();\n    callback(data);\n  };\n  document.head.appendChild(script);\n}\n\nexport class ResponseError extends Error {\n  /**\n   * @param {XMLHttpRequest} response The XHR object.\n   */\n  constructor(response) {\n    const message = 'Unexpected response status: ' + response.status;\n    super(message);\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ResponseError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.response = response;\n  }\n}\n\nexport class ClientError extends Error {\n  /**\n   * @param {XMLHttpRequest} client The XHR object.\n   */\n  constructor(client) {\n    super('Failed to issue request');\n\n    /**\n     * @type {string}\n     */\n    this.name = 'ClientError';\n\n    /**\n     * @type {XMLHttpRequest}\n     */\n    this.client = client;\n  }\n}\n\n/**\n * @param {string} url The URL.\n * @return {Promise<Object>} A promise that resolves to the JSON response.\n */\nexport function getJSON(url) {\n  return new Promise(function (resolve, reject) {\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The load event.\n     */\n    function onLoad(event) {\n      const client = event.target;\n      // status will be 0 for file:// urls\n      if (!client.status || (client.status >= 200 && client.status < 300)) {\n        let data;\n        try {\n          data = JSON.parse(client.responseText);\n        } catch (err) {\n          const message = 'Error parsing response text as JSON: ' + err.message;\n          reject(new Error(message));\n          return;\n        }\n        resolve(data);\n        return;\n      }\n\n      reject(new ResponseError(client));\n    }\n\n    /**\n     * @param {ProgressEvent<XMLHttpRequest>} event The error event.\n     */\n    function onError(event) {\n      reject(new ClientError(event.target));\n    }\n\n    const client = new XMLHttpRequest();\n    client.addEventListener('load', onLoad);\n    client.addEventListener('error', onError);\n    client.open('GET', url);\n    client.setRequestHeader('Accept', 'application/json');\n    client.send();\n  });\n}\n\n/**\n * @param {string} base The base URL.\n * @param {string} url The potentially relative URL.\n * @return {string} The full URL.\n */\nexport function resolveUrl(base, url) {\n  if (url.includes('://')) {\n    return url;\n  }\n  return new URL(url, base).href;\n}\n\nlet originalXHR;\nexport function overrideXHR(xhr) {\n  if (typeof XMLHttpRequest !== 'undefined') {\n    originalXHR = XMLHttpRequest;\n  }\n  global.XMLHttpRequest = xhr;\n}\n\nexport function restoreXHR() {\n  global.XMLHttpRequest = originalXHR;\n}\n","import Circle from 'ol/style/Circle.js';\nimport Fill from 'ol/style/Fill.js';\nimport Icon from 'ol/style/Icon.js';\nimport RenderFeature from 'ol/render/Feature.js';\nimport Stroke from 'ol/style/Stroke.js';\nimport Style from 'ol/style/Style.js';\nimport Text from 'ol/style/Text.js';\nimport { toPromise } from 'ol/functions.js';\nimport { registerFont, checkedFonts } from 'ol/render/canvas.js';\nimport TileState from 'ol/TileState.js';\nimport { VectorTile } from 'ol';\nimport { expandUrl } from 'ol/tileurlfunction.js';\nimport { getUid } from 'ol/util.js';\nimport GeoJSON from 'ol/format/GeoJSON.js';\nimport ImageLayer from 'ol/layer/Image.js';\nimport Layer from 'ol/layer/Layer.js';\nimport LayerGroup from 'ol/layer/Group.js';\nimport MVT from 'ol/format/MVT.js';\nimport Map from 'ol/Map.js';\nimport Raster from 'ol/source/Raster.js';\nimport Source from 'ol/source/Source.js';\nimport TileGrid from 'ol/tilegrid/TileGrid.js';\nimport TileJSON from 'ol/source/TileJSON.js';\nimport TileLayer from 'ol/layer/Tile.js';\nimport VectorLayer from 'ol/layer/Vector.js';\nimport VectorSource from 'ol/source/Vector.js';\nimport VectorTileLayer from 'ol/layer/VectorTile.js';\nimport VectorTileSource, { defaultLoadFunction } from 'ol/source/VectorTile.js';\nimport View from 'ol/View.js';\nimport { METERS_PER_UNIT } from 'ol/proj/Units.js';\nimport { bbox } from 'ol/loadingstrategy.js';\nimport { createXYZ } from 'ol/tilegrid.js';\nimport { get as get$1, getUserProjection, getPointResolution, fromLonLat, equivalent } from 'ol/proj.js';\nimport { getCenter, getTopLeft } from 'ol/extent.js';\nimport BaseEvent from 'ol/events/Event.js';\nimport EventType from 'ol/events/EventType.js';\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nvar csscolorparser = {};\n\nvar parseCSSColor_1;\n// (c) Dean McNamee <dean@gmail.com>, 2012.\n//\n// https://github.com/deanm/css-color-parser-js\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n// IN THE SOFTWARE.\n// http://www.w3.org/TR/css3-color/\nvar kCSSColorTable = {\n    'transparent': [\n        0,\n        0,\n        0,\n        0\n    ],\n    'aliceblue': [\n        240,\n        248,\n        255,\n        1\n    ],\n    'antiquewhite': [\n        250,\n        235,\n        215,\n        1\n    ],\n    'aqua': [\n        0,\n        255,\n        255,\n        1\n    ],\n    'aquamarine': [\n        127,\n        255,\n        212,\n        1\n    ],\n    'azure': [\n        240,\n        255,\n        255,\n        1\n    ],\n    'beige': [\n        245,\n        245,\n        220,\n        1\n    ],\n    'bisque': [\n        255,\n        228,\n        196,\n        1\n    ],\n    'black': [\n        0,\n        0,\n        0,\n        1\n    ],\n    'blanchedalmond': [\n        255,\n        235,\n        205,\n        1\n    ],\n    'blue': [\n        0,\n        0,\n        255,\n        1\n    ],\n    'blueviolet': [\n        138,\n        43,\n        226,\n        1\n    ],\n    'brown': [\n        165,\n        42,\n        42,\n        1\n    ],\n    'burlywood': [\n        222,\n        184,\n        135,\n        1\n    ],\n    'cadetblue': [\n        95,\n        158,\n        160,\n        1\n    ],\n    'chartreuse': [\n        127,\n        255,\n        0,\n        1\n    ],\n    'chocolate': [\n        210,\n        105,\n        30,\n        1\n    ],\n    'coral': [\n        255,\n        127,\n        80,\n        1\n    ],\n    'cornflowerblue': [\n        100,\n        149,\n        237,\n        1\n    ],\n    'cornsilk': [\n        255,\n        248,\n        220,\n        1\n    ],\n    'crimson': [\n        220,\n        20,\n        60,\n        1\n    ],\n    'cyan': [\n        0,\n        255,\n        255,\n        1\n    ],\n    'darkblue': [\n        0,\n        0,\n        139,\n        1\n    ],\n    'darkcyan': [\n        0,\n        139,\n        139,\n        1\n    ],\n    'darkgoldenrod': [\n        184,\n        134,\n        11,\n        1\n    ],\n    'darkgray': [\n        169,\n        169,\n        169,\n        1\n    ],\n    'darkgreen': [\n        0,\n        100,\n        0,\n        1\n    ],\n    'darkgrey': [\n        169,\n        169,\n        169,\n        1\n    ],\n    'darkkhaki': [\n        189,\n        183,\n        107,\n        1\n    ],\n    'darkmagenta': [\n        139,\n        0,\n        139,\n        1\n    ],\n    'darkolivegreen': [\n        85,\n        107,\n        47,\n        1\n    ],\n    'darkorange': [\n        255,\n        140,\n        0,\n        1\n    ],\n    'darkorchid': [\n        153,\n        50,\n        204,\n        1\n    ],\n    'darkred': [\n        139,\n        0,\n        0,\n        1\n    ],\n    'darksalmon': [\n        233,\n        150,\n        122,\n        1\n    ],\n    'darkseagreen': [\n        143,\n        188,\n        143,\n        1\n    ],\n    'darkslateblue': [\n        72,\n        61,\n        139,\n        1\n    ],\n    'darkslategray': [\n        47,\n        79,\n        79,\n        1\n    ],\n    'darkslategrey': [\n        47,\n        79,\n        79,\n        1\n    ],\n    'darkturquoise': [\n        0,\n        206,\n        209,\n        1\n    ],\n    'darkviolet': [\n        148,\n        0,\n        211,\n        1\n    ],\n    'deeppink': [\n        255,\n        20,\n        147,\n        1\n    ],\n    'deepskyblue': [\n        0,\n        191,\n        255,\n        1\n    ],\n    'dimgray': [\n        105,\n        105,\n        105,\n        1\n    ],\n    'dimgrey': [\n        105,\n        105,\n        105,\n        1\n    ],\n    'dodgerblue': [\n        30,\n        144,\n        255,\n        1\n    ],\n    'firebrick': [\n        178,\n        34,\n        34,\n        1\n    ],\n    'floralwhite': [\n        255,\n        250,\n        240,\n        1\n    ],\n    'forestgreen': [\n        34,\n        139,\n        34,\n        1\n    ],\n    'fuchsia': [\n        255,\n        0,\n        255,\n        1\n    ],\n    'gainsboro': [\n        220,\n        220,\n        220,\n        1\n    ],\n    'ghostwhite': [\n        248,\n        248,\n        255,\n        1\n    ],\n    'gold': [\n        255,\n        215,\n        0,\n        1\n    ],\n    'goldenrod': [\n        218,\n        165,\n        32,\n        1\n    ],\n    'gray': [\n        128,\n        128,\n        128,\n        1\n    ],\n    'green': [\n        0,\n        128,\n        0,\n        1\n    ],\n    'greenyellow': [\n        173,\n        255,\n        47,\n        1\n    ],\n    'grey': [\n        128,\n        128,\n        128,\n        1\n    ],\n    'honeydew': [\n        240,\n        255,\n        240,\n        1\n    ],\n    'hotpink': [\n        255,\n        105,\n        180,\n        1\n    ],\n    'indianred': [\n        205,\n        92,\n        92,\n        1\n    ],\n    'indigo': [\n        75,\n        0,\n        130,\n        1\n    ],\n    'ivory': [\n        255,\n        255,\n        240,\n        1\n    ],\n    'khaki': [\n        240,\n        230,\n        140,\n        1\n    ],\n    'lavender': [\n        230,\n        230,\n        250,\n        1\n    ],\n    'lavenderblush': [\n        255,\n        240,\n        245,\n        1\n    ],\n    'lawngreen': [\n        124,\n        252,\n        0,\n        1\n    ],\n    'lemonchiffon': [\n        255,\n        250,\n        205,\n        1\n    ],\n    'lightblue': [\n        173,\n        216,\n        230,\n        1\n    ],\n    'lightcoral': [\n        240,\n        128,\n        128,\n        1\n    ],\n    'lightcyan': [\n        224,\n        255,\n        255,\n        1\n    ],\n    'lightgoldenrodyellow': [\n        250,\n        250,\n        210,\n        1\n    ],\n    'lightgray': [\n        211,\n        211,\n        211,\n        1\n    ],\n    'lightgreen': [\n        144,\n        238,\n        144,\n        1\n    ],\n    'lightgrey': [\n        211,\n        211,\n        211,\n        1\n    ],\n    'lightpink': [\n        255,\n        182,\n        193,\n        1\n    ],\n    'lightsalmon': [\n        255,\n        160,\n        122,\n        1\n    ],\n    'lightseagreen': [\n        32,\n        178,\n        170,\n        1\n    ],\n    'lightskyblue': [\n        135,\n        206,\n        250,\n        1\n    ],\n    'lightslategray': [\n        119,\n        136,\n        153,\n        1\n    ],\n    'lightslategrey': [\n        119,\n        136,\n        153,\n        1\n    ],\n    'lightsteelblue': [\n        176,\n        196,\n        222,\n        1\n    ],\n    'lightyellow': [\n        255,\n        255,\n        224,\n        1\n    ],\n    'lime': [\n        0,\n        255,\n        0,\n        1\n    ],\n    'limegreen': [\n        50,\n        205,\n        50,\n        1\n    ],\n    'linen': [\n        250,\n        240,\n        230,\n        1\n    ],\n    'magenta': [\n        255,\n        0,\n        255,\n        1\n    ],\n    'maroon': [\n        128,\n        0,\n        0,\n        1\n    ],\n    'mediumaquamarine': [\n        102,\n        205,\n        170,\n        1\n    ],\n    'mediumblue': [\n        0,\n        0,\n        205,\n        1\n    ],\n    'mediumorchid': [\n        186,\n        85,\n        211,\n        1\n    ],\n    'mediumpurple': [\n        147,\n        112,\n        219,\n        1\n    ],\n    'mediumseagreen': [\n        60,\n        179,\n        113,\n        1\n    ],\n    'mediumslateblue': [\n        123,\n        104,\n        238,\n        1\n    ],\n    'mediumspringgreen': [\n        0,\n        250,\n        154,\n        1\n    ],\n    'mediumturquoise': [\n        72,\n        209,\n        204,\n        1\n    ],\n    'mediumvioletred': [\n        199,\n        21,\n        133,\n        1\n    ],\n    'midnightblue': [\n        25,\n        25,\n        112,\n        1\n    ],\n    'mintcream': [\n        245,\n        255,\n        250,\n        1\n    ],\n    'mistyrose': [\n        255,\n        228,\n        225,\n        1\n    ],\n    'moccasin': [\n        255,\n        228,\n        181,\n        1\n    ],\n    'navajowhite': [\n        255,\n        222,\n        173,\n        1\n    ],\n    'navy': [\n        0,\n        0,\n        128,\n        1\n    ],\n    'oldlace': [\n        253,\n        245,\n        230,\n        1\n    ],\n    'olive': [\n        128,\n        128,\n        0,\n        1\n    ],\n    'olivedrab': [\n        107,\n        142,\n        35,\n        1\n    ],\n    'orange': [\n        255,\n        165,\n        0,\n        1\n    ],\n    'orangered': [\n        255,\n        69,\n        0,\n        1\n    ],\n    'orchid': [\n        218,\n        112,\n        214,\n        1\n    ],\n    'palegoldenrod': [\n        238,\n        232,\n        170,\n        1\n    ],\n    'palegreen': [\n        152,\n        251,\n        152,\n        1\n    ],\n    'paleturquoise': [\n        175,\n        238,\n        238,\n        1\n    ],\n    'palevioletred': [\n        219,\n        112,\n        147,\n        1\n    ],\n    'papayawhip': [\n        255,\n        239,\n        213,\n        1\n    ],\n    'peachpuff': [\n        255,\n        218,\n        185,\n        1\n    ],\n    'peru': [\n        205,\n        133,\n        63,\n        1\n    ],\n    'pink': [\n        255,\n        192,\n        203,\n        1\n    ],\n    'plum': [\n        221,\n        160,\n        221,\n        1\n    ],\n    'powderblue': [\n        176,\n        224,\n        230,\n        1\n    ],\n    'purple': [\n        128,\n        0,\n        128,\n        1\n    ],\n    'rebeccapurple': [\n        102,\n        51,\n        153,\n        1\n    ],\n    'red': [\n        255,\n        0,\n        0,\n        1\n    ],\n    'rosybrown': [\n        188,\n        143,\n        143,\n        1\n    ],\n    'royalblue': [\n        65,\n        105,\n        225,\n        1\n    ],\n    'saddlebrown': [\n        139,\n        69,\n        19,\n        1\n    ],\n    'salmon': [\n        250,\n        128,\n        114,\n        1\n    ],\n    'sandybrown': [\n        244,\n        164,\n        96,\n        1\n    ],\n    'seagreen': [\n        46,\n        139,\n        87,\n        1\n    ],\n    'seashell': [\n        255,\n        245,\n        238,\n        1\n    ],\n    'sienna': [\n        160,\n        82,\n        45,\n        1\n    ],\n    'silver': [\n        192,\n        192,\n        192,\n        1\n    ],\n    'skyblue': [\n        135,\n        206,\n        235,\n        1\n    ],\n    'slateblue': [\n        106,\n        90,\n        205,\n        1\n    ],\n    'slategray': [\n        112,\n        128,\n        144,\n        1\n    ],\n    'slategrey': [\n        112,\n        128,\n        144,\n        1\n    ],\n    'snow': [\n        255,\n        250,\n        250,\n        1\n    ],\n    'springgreen': [\n        0,\n        255,\n        127,\n        1\n    ],\n    'steelblue': [\n        70,\n        130,\n        180,\n        1\n    ],\n    'tan': [\n        210,\n        180,\n        140,\n        1\n    ],\n    'teal': [\n        0,\n        128,\n        128,\n        1\n    ],\n    'thistle': [\n        216,\n        191,\n        216,\n        1\n    ],\n    'tomato': [\n        255,\n        99,\n        71,\n        1\n    ],\n    'turquoise': [\n        64,\n        224,\n        208,\n        1\n    ],\n    'violet': [\n        238,\n        130,\n        238,\n        1\n    ],\n    'wheat': [\n        245,\n        222,\n        179,\n        1\n    ],\n    'white': [\n        255,\n        255,\n        255,\n        1\n    ],\n    'whitesmoke': [\n        245,\n        245,\n        245,\n        1\n    ],\n    'yellow': [\n        255,\n        255,\n        0,\n        1\n    ],\n    'yellowgreen': [\n        154,\n        205,\n        50,\n        1\n    ]\n};\nfunction clamp_css_byte(i) {\n    // Clamp to integer 0 .. 255.\n    i = Math.round(i);\n    // Seems to be what Chrome does (vs truncation).\n    return i < 0 ? 0 : i > 255 ? 255 : i;\n}\nfunction clamp_css_float(f) {\n    // Clamp to float 0.0 .. 1.0.\n    return f < 0 ? 0 : f > 1 ? 1 : f;\n}\nfunction parse_css_int(str) {\n    // int or percentage.\n    if (str[str.length - 1] === '%')\n        return clamp_css_byte(parseFloat(str) / 100 * 255);\n    return clamp_css_byte(parseInt(str));\n}\nfunction parse_css_float(str) {\n    // float or percentage.\n    if (str[str.length - 1] === '%')\n        return clamp_css_float(parseFloat(str) / 100);\n    return clamp_css_float(parseFloat(str));\n}\nfunction css_hue_to_rgb(m1, m2, h) {\n    if (h < 0)\n        h += 1;\n    else if (h > 1)\n        h -= 1;\n    if (h * 6 < 1)\n        return m1 + (m2 - m1) * h * 6;\n    if (h * 2 < 1)\n        return m2;\n    if (h * 3 < 2)\n        return m1 + (m2 - m1) * (2 / 3 - h) * 6;\n    return m1;\n}\nfunction parseCSSColor(css_str) {\n    // Remove all whitespace, not compliant, but should just be more accepting.\n    var str = css_str.replace(/ /g, '').toLowerCase();\n    // Color keywords (and transparent) lookup.\n    if (str in kCSSColorTable)\n        return kCSSColorTable[str].slice();\n    // dup.\n    // #abc and #abc123 syntax.\n    if (str[0] === '#') {\n        if (str.length === 4) {\n            var iv = parseInt(str.substr(1), 16);\n            // TODO(deanm): Stricter parsing.\n            if (!(iv >= 0 && iv <= 4095))\n                return null;\n            // Covers NaN.\n            return [\n                (iv & 3840) >> 4 | (iv & 3840) >> 8,\n                iv & 240 | (iv & 240) >> 4,\n                iv & 15 | (iv & 15) << 4,\n                1\n            ];\n        } else if (str.length === 7) {\n            var iv = parseInt(str.substr(1), 16);\n            // TODO(deanm): Stricter parsing.\n            if (!(iv >= 0 && iv <= 16777215))\n                return null;\n            // Covers NaN.\n            return [\n                (iv & 16711680) >> 16,\n                (iv & 65280) >> 8,\n                iv & 255,\n                1\n            ];\n        }\n        return null;\n    }\n    var op = str.indexOf('('), ep = str.indexOf(')');\n    if (op !== -1 && ep + 1 === str.length) {\n        var fname = str.substr(0, op);\n        var params = str.substr(op + 1, ep - (op + 1)).split(',');\n        var alpha = 1;\n        // To allow case fallthrough.\n        switch (fname) {\n        case 'rgba':\n            if (params.length !== 4)\n                return null;\n            alpha = parse_css_float(params.pop());\n        // Fall through.\n        case 'rgb':\n            if (params.length !== 3)\n                return null;\n            return [\n                parse_css_int(params[0]),\n                parse_css_int(params[1]),\n                parse_css_int(params[2]),\n                alpha\n            ];\n        case 'hsla':\n            if (params.length !== 4)\n                return null;\n            alpha = parse_css_float(params.pop());\n        // Fall through.\n        case 'hsl':\n            if (params.length !== 3)\n                return null;\n            var h = (parseFloat(params[0]) % 360 + 360) % 360 / 360;\n            // 0 .. 1\n            // NOTE(deanm): According to the CSS spec s/l should only be\n            // percentages, but we don't bother and let float or percentage.\n            var s = parse_css_float(params[1]);\n            var l = parse_css_float(params[2]);\n            var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n            var m1 = l * 2 - m2;\n            return [\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h + 1 / 3) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h - 1 / 3) * 255),\n                alpha\n            ];\n        default:\n            return null;\n        }\n    }\n    return null;\n}\ntry {\n    parseCSSColor_1 = csscolorparser.parseCSSColor = parseCSSColor;\n} catch (e) {\n}\n\n//      \n/**\n * An RGBA color value. Create instances from color strings using the static\n * method `Color.parse`. The constructor accepts RGB channel values in the range\n * `[0, 1]`, premultiplied by A.\n *\n * @param {number} r The red channel.\n * @param {number} g The green channel.\n * @param {number} b The blue channel.\n * @param {number} a The alpha channel.\n * @private\n */\nclass Color {\n    constructor(r, g, b, a = 1) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n    /**\n     * Parses valid CSS color strings and returns a `Color` instance.\n     * @returns A `Color` instance, or `undefined` if the input is not a valid color string.\n     */\n    static parse(input) {\n        if (!input) {\n            return undefined;\n        }\n        if (input instanceof Color) {\n            return input;\n        }\n        if (typeof input !== 'string') {\n            return undefined;\n        }\n        const rgba = parseCSSColor_1(input);\n        if (!rgba) {\n            return undefined;\n        }\n        return new Color(rgba[0] / 255 * rgba[3], rgba[1] / 255 * rgba[3], rgba[2] / 255 * rgba[3], rgba[3]);\n    }\n    /**\n     * Returns an RGBA string representing the color value.\n     *\n     * @returns An RGBA string.\n     * @example\n     * var purple = new Color.parse('purple');\n     * purple.toString; // = \"rgba(128,0,128,1)\"\n     * var translucentGreen = new Color.parse('rgba(26, 207, 26, .73)');\n     * translucentGreen.toString(); // = \"rgba(26,207,26,0.73)\"\n     */\n    toString() {\n        const [r, g, b, a] = this.toArray();\n        return `rgba(${ Math.round(r) },${ Math.round(g) },${ Math.round(b) },${ a })`;\n    }\n    /**\n     * Returns an RGBA array of values representing the color, unpremultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 255].\n     */\n    toArray() {\n        const {r, g, b, a} = this;\n        return a === 0 ? [\n            0,\n            0,\n            0,\n            0\n        ] : [\n            r * 255 / a,\n            g * 255 / a,\n            b * 255 / a,\n            a\n        ];\n    }\n    /**\n     * Returns a RGBA array of float values representing the color, unpremultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 1].\n     */\n    toArray01() {\n        const {r, g, b, a} = this;\n        return a === 0 ? [\n            0,\n            0,\n            0,\n            0\n        ] : [\n            r / a,\n            g / a,\n            b / a,\n            a\n        ];\n    }\n    /**\n     * Returns an RGBA array of values representing the color, premultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 1].\n     */\n    toArray01PremultipliedAlpha() {\n        const {r, g, b, a} = this;\n        return [\n            r,\n            g,\n            b,\n            a\n        ];\n    }\n}\nColor.black = new Color(0, 0, 0, 1);\nColor.white = new Color(1, 1, 1, 1);\nColor.transparent = new Color(0, 0, 0, 0);\nColor.red = new Color(1, 0, 0, 1);\nColor.blue = new Color(0, 0, 1, 1);\nvar Color$1 = Color;\n\nfunction convertLiteral(value) {\n    return typeof value === 'object' ? [\n        'literal',\n        value\n    ] : value;\n}\nfunction convertFunction(parameters, propertySpec) {\n    let stops = parameters.stops;\n    if (!stops) {\n        // identity function\n        return convertIdentityFunction(parameters, propertySpec);\n    }\n    const zoomAndFeatureDependent = stops && typeof stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n    stops = stops.map(stop => {\n        if (!featureDependent && propertySpec.tokens && typeof stop[1] === 'string') {\n            return [\n                stop[0],\n                convertTokenString(stop[1])\n            ];\n        }\n        return [\n            stop[0],\n            convertLiteral(stop[1])\n        ];\n    });\n    if (zoomAndFeatureDependent) {\n        return convertZoomAndPropertyFunction(parameters, propertySpec, stops);\n    } else if (zoomDependent) {\n        return convertZoomFunction(parameters, propertySpec, stops);\n    } else {\n        return convertPropertyFunction(parameters, propertySpec, stops);\n    }\n}\nfunction convertIdentityFunction(parameters, propertySpec) {\n    const get = [\n        'get',\n        parameters.property\n    ];\n    if (parameters.default === undefined) {\n        // By default, expressions for string-valued properties get coerced. To preserve\n        // legacy function semantics, insert an explicit assertion instead.\n        return propertySpec.type === 'string' ? [\n            'string',\n            get\n        ] : get;\n    } else if (propertySpec.type === 'enum') {\n        return [\n            'match',\n            get,\n            Object.keys(propertySpec.values),\n            get,\n            parameters.default\n        ];\n    } else {\n        const expression = [\n            propertySpec.type === 'color' ? 'to-color' : propertySpec.type,\n            get,\n            convertLiteral(parameters.default)\n        ];\n        if (propertySpec.type === 'array') {\n            expression.splice(1, 0, propertySpec.value, propertySpec.length || null);\n        }\n        return expression;\n    }\n}\nfunction getInterpolateOperator(parameters) {\n    switch (parameters.colorSpace) {\n    case 'hcl':\n        return 'interpolate-hcl';\n    case 'lab':\n        return 'interpolate-lab';\n    default:\n        return 'interpolate';\n    }\n}\nfunction convertZoomAndPropertyFunction(parameters, propertySpec, stops) {\n    const featureFunctionParameters = {};\n    const featureFunctionStops = {};\n    const zoomStops = [];\n    for (let s = 0; s < stops.length; s++) {\n        const stop = stops[s];\n        const zoom = stop[0].zoom;\n        if (featureFunctionParameters[zoom] === undefined) {\n            featureFunctionParameters[zoom] = {\n                zoom,\n                type: parameters.type,\n                property: parameters.property,\n                default: parameters.default\n            };\n            featureFunctionStops[zoom] = [];\n            zoomStops.push(zoom);\n        }\n        featureFunctionStops[zoom].push([\n            stop[0].value,\n            stop[1]\n        ]);\n    }\n    // the interpolation type for the zoom dimension of a zoom-and-property\n    // function is determined directly from the style property specification\n    // for which it's being used: linear for interpolatable properties, step\n    // otherwise.\n    const functionType = getFunctionType({}, propertySpec);\n    if (functionType === 'exponential') {\n        const expression = [\n            getInterpolateOperator(parameters),\n            ['linear'],\n            ['zoom']\n        ];\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, false);\n        }\n        return expression;\n    } else {\n        const expression = [\n            'step',\n            ['zoom']\n        ];\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, true);\n        }\n        fixupDegenerateStepCurve(expression);\n        return expression;\n    }\n}\nfunction coalesce(a, b) {\n    if (a !== undefined)\n        return a;\n    if (b !== undefined)\n        return b;\n}\nfunction getFallback(parameters, propertySpec) {\n    const defaultValue = convertLiteral(coalesce(parameters.default, propertySpec.default));\n    /*\n     * Some fields with type: resolvedImage have an undefined default.\n     * Because undefined is an invalid value for resolvedImage, set fallback to\n     * an empty string instead of undefined to ensure output\n     * passes validation.\n     */\n    if (defaultValue === undefined && propertySpec.type === 'resolvedImage') {\n        return '';\n    }\n    return defaultValue;\n}\nfunction convertPropertyFunction(parameters, propertySpec, stops) {\n    const type = getFunctionType(parameters, propertySpec);\n    const get = [\n        'get',\n        parameters.property\n    ];\n    if (type === 'categorical' && typeof stops[0][0] === 'boolean') {\n        const expression = ['case'];\n        for (const stop of stops) {\n            expression.push([\n                '==',\n                get,\n                stop[0]\n            ], stop[1]);\n        }\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    } else if (type === 'categorical') {\n        const expression = [\n            'match',\n            get\n        ];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    } else if (type === 'interval') {\n        const expression = [\n            'step',\n            [\n                'number',\n                get\n            ]\n        ];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], true);\n        }\n        fixupDegenerateStepCurve(expression);\n        return parameters.default === undefined ? expression : [\n            'case',\n            [\n                '==',\n                [\n                    'typeof',\n                    get\n                ],\n                'number'\n            ],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    } else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        const expression = [\n            getInterpolateOperator(parameters),\n            base === 1 ? ['linear'] : [\n                'exponential',\n                base\n            ],\n            [\n                'number',\n                get\n            ]\n        ];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        return parameters.default === undefined ? expression : [\n            'case',\n            [\n                '==',\n                [\n                    'typeof',\n                    get\n                ],\n                'number'\n            ],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    } else {\n        throw new Error(`Unknown property function type ${ type }`);\n    }\n}\nfunction convertZoomFunction(parameters, propertySpec, stops, input = ['zoom']) {\n    const type = getFunctionType(parameters, propertySpec);\n    let expression;\n    let isStep = false;\n    if (type === 'interval') {\n        expression = [\n            'step',\n            input\n        ];\n        isStep = true;\n    } else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        expression = [\n            getInterpolateOperator(parameters),\n            base === 1 ? ['linear'] : [\n                'exponential',\n                base\n            ],\n            input\n        ];\n    } else {\n        throw new Error(`Unknown zoom function type \"${ type }\"`);\n    }\n    for (const stop of stops) {\n        appendStopPair(expression, stop[0], stop[1], isStep);\n    }\n    fixupDegenerateStepCurve(expression);\n    return expression;\n}\nfunction fixupDegenerateStepCurve(expression) {\n    // degenerate step curve (i.e. a constant function): add a noop stop\n    if (expression[0] === 'step' && expression.length === 3) {\n        expression.push(0);\n        expression.push(expression[3]);\n    }\n}\nfunction appendStopPair(curve, input, output, isStep) {\n    // Skip duplicate stop values. They were not validated for functions, but they are for expressions.\n    // https://github.com/mapbox/mapbox-gl-js/issues/4107\n    if (curve.length > 3 && input === curve[curve.length - 2]) {\n        return;\n    }\n    // step curves don't get the first input value, as it is redundant.\n    if (!(isStep && curve.length === 2)) {\n        curve.push(input);\n    }\n    curve.push(output);\n}\nfunction getFunctionType(parameters, propertySpec) {\n    if (parameters.type) {\n        return parameters.type;\n    } else {\n        return propertySpec.expression.interpolated ? 'exponential' : 'interval';\n    }\n}\n// \"String with {name} token\" => [\"concat\", \"String with \", [\"get\", \"name\"], \" token\"]\nfunction convertTokenString(s) {\n    const result = ['concat'];\n    const re = /{([^{}]+)}/g;\n    let pos = 0;\n    for (let match = re.exec(s); match !== null; match = re.exec(s)) {\n        const literal = s.slice(pos, re.lastIndex - match[0].length);\n        pos = re.lastIndex;\n        if (literal.length > 0)\n            result.push(literal);\n        result.push([\n            'get',\n            match[1]\n        ]);\n    }\n    if (result.length === 1) {\n        return s;\n    }\n    if (pos < s.length) {\n        result.push(s.slice(pos));\n    } else if (result.length === 2) {\n        return [\n            'to-string',\n            result[1]\n        ];\n    }\n    return result;\n}\n\n//      \nclass ParsingError extends Error {\n    constructor(key, message) {\n        super(message);\n        this.message = message;\n        this.key = key;\n    }\n}\nvar ParsingError$1 = ParsingError;\n\n//      \n/**\n * Tracks `let` bindings during expression parsing.\n * @private\n */\nclass Scope {\n    constructor(parent, bindings = []) {\n        this.parent = parent;\n        this.bindings = {};\n        for (const [name, expression] of bindings) {\n            this.bindings[name] = expression;\n        }\n    }\n    concat(bindings) {\n        return new Scope(this, bindings);\n    }\n    get(name) {\n        if (this.bindings[name]) {\n            return this.bindings[name];\n        }\n        if (this.parent) {\n            return this.parent.get(name);\n        }\n        throw new Error(`${ name } not found in scope.`);\n    }\n    has(name) {\n        if (this.bindings[name])\n            return true;\n        return this.parent ? this.parent.has(name) : false;\n    }\n}\nvar Scope$1 = Scope;\n\n//      \nconst NullType = { kind: 'null' };\nconst NumberType = { kind: 'number' };\nconst StringType = { kind: 'string' };\nconst BooleanType = { kind: 'boolean' };\nconst ColorType = { kind: 'color' };\nconst ObjectType = { kind: 'object' };\nconst ValueType = { kind: 'value' };\nconst ErrorType = { kind: 'error' };\nconst CollatorType = { kind: 'collator' };\nconst FormattedType = { kind: 'formatted' };\nconst ResolvedImageType = { kind: 'resolvedImage' };\nfunction array$1(itemType, N) {\n    return {\n        kind: 'array',\n        itemType,\n        N\n    };\n}\nfunction toString$1(type) {\n    if (type.kind === 'array') {\n        const itemType = toString$1(type.itemType);\n        return typeof type.N === 'number' ? `array<${ itemType }, ${ type.N }>` : type.itemType.kind === 'value' ? 'array' : `array<${ itemType }>`;\n    } else {\n        return type.kind;\n    }\n}\nconst valueMemberTypes = [\n    NullType,\n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    FormattedType,\n    ObjectType,\n    array$1(ValueType),\n    ResolvedImageType\n];\n/**\n * Returns null if `t` is a subtype of `expected`; otherwise returns an\n * error message.\n * @private\n */\nfunction checkSubtype(expected, t) {\n    if (t.kind === 'error') {\n        // Error is a subtype of every type\n        return null;\n    } else if (expected.kind === 'array') {\n        if (t.kind === 'array' && (t.N === 0 && t.itemType.kind === 'value' || !checkSubtype(expected.itemType, t.itemType)) && (typeof expected.N !== 'number' || expected.N === t.N)) {\n            return null;\n        }\n    } else if (expected.kind === t.kind) {\n        return null;\n    } else if (expected.kind === 'value') {\n        for (const memberType of valueMemberTypes) {\n            if (!checkSubtype(memberType, t)) {\n                return null;\n            }\n        }\n    }\n    return `Expected ${ toString$1(expected) } but found ${ toString$1(t) } instead.`;\n}\nfunction isValidType(provided, allowedTypes) {\n    return allowedTypes.some(t => t.kind === provided.kind);\n}\nfunction isValidNativeType(provided, allowedTypes) {\n    return allowedTypes.some(t => {\n        if (t === 'null') {\n            return provided === null;\n        } else if (t === 'array') {\n            return Array.isArray(provided);\n        } else if (t === 'object') {\n            return provided && !Array.isArray(provided) && typeof provided === 'object';\n        } else {\n            return t === typeof provided;\n        }\n    });\n}\n\n//      \n// Flow type declarations for Intl cribbed from\n// https://github.com/facebook/flow/issues/1270\nclass Collator {\n    constructor(caseSensitive, diacriticSensitive, locale) {\n        if (caseSensitive)\n            this.sensitivity = diacriticSensitive ? 'variant' : 'case';\n        else\n            this.sensitivity = diacriticSensitive ? 'accent' : 'base';\n        this.locale = locale;\n        this.collator = new Intl.Collator(this.locale ? this.locale : [], {\n            sensitivity: this.sensitivity,\n            usage: 'search'\n        });\n    }\n    compare(lhs, rhs) {\n        return this.collator.compare(lhs, rhs);\n    }\n    resolvedLocale() {\n        // We create a Collator without \"usage: search\" because we don't want\n        // the search options encoded in our result (e.g. \"en-u-co-search\")\n        return new Intl.Collator(this.locale ? this.locale : []).resolvedOptions().locale;\n    }\n}\n\n//      \nclass FormattedSection {\n    constructor(text, image, scale, fontStack, textColor) {\n        // combine characters so that diacritic marks are not separate code points\n        this.text = text.normalize ? text.normalize() : text;\n        this.image = image;\n        this.scale = scale;\n        this.fontStack = fontStack;\n        this.textColor = textColor;\n    }\n}\nclass Formatted {\n    constructor(sections) {\n        this.sections = sections;\n    }\n    static fromString(unformatted) {\n        return new Formatted([new FormattedSection(unformatted, null, null, null, null)]);\n    }\n    isEmpty() {\n        if (this.sections.length === 0)\n            return true;\n        return !this.sections.some(section => section.text.length !== 0 || section.image && section.image.name.length !== 0);\n    }\n    static factory(text) {\n        if (text instanceof Formatted) {\n            return text;\n        } else {\n            return Formatted.fromString(text);\n        }\n    }\n    toString() {\n        if (this.sections.length === 0)\n            return '';\n        return this.sections.map(section => section.text).join('');\n    }\n    serialize() {\n        const serialized = ['format'];\n        for (const section of this.sections) {\n            if (section.image) {\n                serialized.push([\n                    'image',\n                    section.image.name\n                ]);\n                continue;\n            }\n            serialized.push(section.text);\n            const options = {};\n            if (section.fontStack) {\n                options['text-font'] = [\n                    'literal',\n                    section.fontStack.split(',')\n                ];\n            }\n            if (section.scale) {\n                options['font-scale'] = section.scale;\n            }\n            if (section.textColor) {\n                options['text-color'] = ['rgba'].concat(section.textColor.toArray());\n            }\n            serialized.push(options);\n        }\n        return serialized;\n    }\n}\n\n//      \nclass ResolvedImage {\n    constructor(options) {\n        this.name = options.name;\n        this.available = options.available;\n    }\n    toString() {\n        return this.name;\n    }\n    static fromString(name) {\n        if (!name)\n            return null;\n        // treat empty values as no image\n        return new ResolvedImage({\n            name,\n            available: false\n        });\n    }\n    serialize() {\n        return [\n            'image',\n            this.name\n        ];\n    }\n}\n\nfunction validateRGBA(r, g, b, a) {\n    if (!(typeof r === 'number' && r >= 0 && r <= 255 && typeof g === 'number' && g >= 0 && g <= 255 && typeof b === 'number' && b >= 0 && b <= 255)) {\n        const value = typeof a === 'number' ? [\n            r,\n            g,\n            b,\n            a\n        ] : [\n            r,\n            g,\n            b\n        ];\n        return `Invalid rgba value [${ value.join(', ') }]: 'r', 'g', and 'b' must be between 0 and 255.`;\n    }\n    if (!(typeof a === 'undefined' || typeof a === 'number' && a >= 0 && a <= 1)) {\n        return `Invalid rgba value [${ [\n            r,\n            g,\n            b,\n            a\n        ].join(', ') }]: 'a' must be between 0 and 1.`;\n    }\n    return null;\n}\nfunction isValue(mixed) {\n    if (mixed === null) {\n        return true;\n    } else if (typeof mixed === 'string') {\n        return true;\n    } else if (typeof mixed === 'boolean') {\n        return true;\n    } else if (typeof mixed === 'number') {\n        return true;\n    } else if (mixed instanceof Color$1) {\n        return true;\n    } else if (mixed instanceof Collator) {\n        return true;\n    } else if (mixed instanceof Formatted) {\n        return true;\n    } else if (mixed instanceof ResolvedImage) {\n        return true;\n    } else if (Array.isArray(mixed)) {\n        for (const item of mixed) {\n            if (!isValue(item)) {\n                return false;\n            }\n        }\n        return true;\n    } else if (typeof mixed === 'object') {\n        for (const key in mixed) {\n            if (!isValue(mixed[key])) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        return false;\n    }\n}\nfunction typeOf(value) {\n    if (value === null) {\n        return NullType;\n    } else if (typeof value === 'string') {\n        return StringType;\n    } else if (typeof value === 'boolean') {\n        return BooleanType;\n    } else if (typeof value === 'number') {\n        return NumberType;\n    } else if (value instanceof Color$1) {\n        return ColorType;\n    } else if (value instanceof Collator) {\n        return CollatorType;\n    } else if (value instanceof Formatted) {\n        return FormattedType;\n    } else if (value instanceof ResolvedImage) {\n        return ResolvedImageType;\n    } else if (Array.isArray(value)) {\n        const length = value.length;\n        let itemType;\n        for (const item of value) {\n            const t = typeOf(item);\n            if (!itemType) {\n                itemType = t;\n            } else if (itemType === t) {\n                continue;\n            } else {\n                itemType = ValueType;\n                break;\n            }\n        }\n        return array$1(itemType || ValueType, length);\n    } else {\n        return ObjectType;\n    }\n}\nfunction toString(value) {\n    const type = typeof value;\n    if (value === null) {\n        return '';\n    } else if (type === 'string' || type === 'number' || type === 'boolean') {\n        return String(value);\n    } else if (value instanceof Color$1 || value instanceof Formatted || value instanceof ResolvedImage) {\n        return value.toString();\n    } else {\n        return JSON.stringify(value);\n    }\n}\n\nclass Literal {\n    constructor(type, value) {\n        this.type = type;\n        this.value = value;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`'literal' expression requires exactly one argument, but found ${ args.length - 1 } instead.`);\n        if (!isValue(args[1]))\n            return context.error(`invalid value`);\n        const value = args[1];\n        let type = typeOf(value);\n        // special case: infer the item type if possible for zero-length arrays\n        const expected = context.expectedType;\n        if (type.kind === 'array' && type.N === 0 && expected && expected.kind === 'array' && (typeof expected.N !== 'number' || expected.N === 0)) {\n            type = expected;\n        }\n        return new Literal(type, value);\n    }\n    evaluate() {\n        return this.value;\n    }\n    eachChild() {\n    }\n    outputDefined() {\n        return true;\n    }\n    serialize() {\n        if (this.type.kind === 'array' || this.type.kind === 'object') {\n            return [\n                'literal',\n                this.value\n            ];\n        } else if (this.value instanceof Color$1) {\n            // Constant-folding can generate Literal expressions that you\n            // couldn't actually generate with a \"literal\" expression,\n            // so we have to implement an equivalent serialization here\n            return ['rgba'].concat(this.value.toArray());\n        } else if (this.value instanceof Formatted) {\n            // Same as Color\n            return this.value.serialize();\n        } else {\n            return this.value;\n        }\n    }\n}\nvar Literal$1 = Literal;\n\n//      \nclass RuntimeError {\n    constructor(message) {\n        this.name = 'ExpressionEvaluationError';\n        this.message = message;\n    }\n    toJSON() {\n        return this.message;\n    }\n}\nvar RuntimeError$1 = RuntimeError;\n\nconst types$2 = {\n    string: StringType,\n    number: NumberType,\n    boolean: BooleanType,\n    object: ObjectType\n};\nclass Assertion {\n    constructor(type, args) {\n        this.type = type;\n        this.args = args;\n    }\n    static parse(args, context) {\n        if (args.length < 2)\n            return context.error(`Expected at least one argument.`);\n        let i = 1;\n        let type;\n        const name = args[0];\n        if (name === 'array') {\n            let itemType;\n            if (args.length > 2) {\n                const type = args[1];\n                if (typeof type !== 'string' || !(type in types$2) || type === 'object')\n                    return context.error('The item type argument of \"array\" must be one of string, number, boolean', 1);\n                itemType = types$2[type];\n                i++;\n            } else {\n                itemType = ValueType;\n            }\n            let N;\n            if (args.length > 3) {\n                if (args[2] !== null && (typeof args[2] !== 'number' || args[2] < 0 || args[2] !== Math.floor(args[2]))) {\n                    return context.error('The length argument to \"array\" must be a positive integer literal', 2);\n                }\n                N = args[2];\n                i++;\n            }\n            type = array$1(itemType, N);\n        } else {\n            type = types$2[name];\n        }\n        const parsed = [];\n        for (; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input)\n                return null;\n            parsed.push(input);\n        }\n        return new Assertion(type, parsed);\n    }\n    evaluate(ctx) {\n        for (let i = 0; i < this.args.length; i++) {\n            const value = this.args[i].evaluate(ctx);\n            const error = checkSubtype(this.type, typeOf(value));\n            if (!error) {\n                return value;\n            } else if (i === this.args.length - 1) {\n                throw new RuntimeError$1(`Expected value to be of type ${ toString$1(this.type) }, but found ${ toString$1(typeOf(value)) } instead.`);\n            }\n        }\n        return null;\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return this.args.every(arg => arg.outputDefined());\n    }\n    serialize() {\n        const type = this.type;\n        const serialized = [type.kind];\n        if (type.kind === 'array') {\n            const itemType = type.itemType;\n            if (itemType.kind === 'string' || itemType.kind === 'number' || itemType.kind === 'boolean') {\n                serialized.push(itemType.kind);\n                const N = type.N;\n                if (typeof N === 'number' || this.args.length > 1) {\n                    serialized.push(N);\n                }\n            }\n        }\n        return serialized.concat(this.args.map(arg => arg.serialize()));\n    }\n}\nvar Assertion$1 = Assertion;\n\n//      \nclass FormatExpression {\n    constructor(sections) {\n        this.type = FormattedType;\n        this.sections = sections;\n    }\n    static parse(args, context) {\n        if (args.length < 2) {\n            return context.error(`Expected at least one argument.`);\n        }\n        const firstArg = args[1];\n        if (!Array.isArray(firstArg) && typeof firstArg === 'object') {\n            return context.error(`First argument must be an image or text section.`);\n        }\n        const sections = [];\n        let nextTokenMayBeObject = false;\n        for (let i = 1; i <= args.length - 1; ++i) {\n            const arg = args[i];\n            if (nextTokenMayBeObject && typeof arg === 'object' && !Array.isArray(arg)) {\n                nextTokenMayBeObject = false;\n                let scale = null;\n                if (arg['font-scale']) {\n                    scale = context.parse(arg['font-scale'], 1, NumberType);\n                    if (!scale)\n                        return null;\n                }\n                let font = null;\n                if (arg['text-font']) {\n                    font = context.parse(arg['text-font'], 1, array$1(StringType));\n                    if (!font)\n                        return null;\n                }\n                let textColor = null;\n                if (arg['text-color']) {\n                    textColor = context.parse(arg['text-color'], 1, ColorType);\n                    if (!textColor)\n                        return null;\n                }\n                const lastExpression = sections[sections.length - 1];\n                lastExpression.scale = scale;\n                lastExpression.font = font;\n                lastExpression.textColor = textColor;\n            } else {\n                const content = context.parse(args[i], 1, ValueType);\n                if (!content)\n                    return null;\n                const kind = content.type.kind;\n                if (kind !== 'string' && kind !== 'value' && kind !== 'null' && kind !== 'resolvedImage')\n                    return context.error(`Formatted text type must be 'string', 'value', 'image' or 'null'.`);\n                nextTokenMayBeObject = true;\n                sections.push({\n                    content,\n                    scale: null,\n                    font: null,\n                    textColor: null\n                });\n            }\n        }\n        return new FormatExpression(sections);\n    }\n    evaluate(ctx) {\n        const evaluateSection = section => {\n            const evaluatedContent = section.content.evaluate(ctx);\n            if (typeOf(evaluatedContent) === ResolvedImageType) {\n                return new FormattedSection('', evaluatedContent, null, null, null);\n            }\n            return new FormattedSection(toString(evaluatedContent), null, section.scale ? section.scale.evaluate(ctx) : null, section.font ? section.font.evaluate(ctx).join(',') : null, section.textColor ? section.textColor.evaluate(ctx) : null);\n        };\n        return new Formatted(this.sections.map(evaluateSection));\n    }\n    eachChild(fn) {\n        for (const section of this.sections) {\n            fn(section.content);\n            if (section.scale) {\n                fn(section.scale);\n            }\n            if (section.font) {\n                fn(section.font);\n            }\n            if (section.textColor) {\n                fn(section.textColor);\n            }\n        }\n    }\n    outputDefined() {\n        // Technically the combinatoric set of all children\n        // Usually, this.text will be undefined anyway\n        return false;\n    }\n    serialize() {\n        const serialized = ['format'];\n        for (const section of this.sections) {\n            serialized.push(section.content.serialize());\n            const options = {};\n            if (section.scale) {\n                options['font-scale'] = section.scale.serialize();\n            }\n            if (section.font) {\n                options['text-font'] = section.font.serialize();\n            }\n            if (section.textColor) {\n                options['text-color'] = section.textColor.serialize();\n            }\n            serialized.push(options);\n        }\n        return serialized;\n    }\n}\n\n//      \nclass ImageExpression {\n    constructor(input) {\n        this.type = ResolvedImageType;\n        this.input = input;\n    }\n    static parse(args, context) {\n        if (args.length !== 2) {\n            return context.error(`Expected two arguments.`);\n        }\n        const name = context.parse(args[1], 1, StringType);\n        if (!name)\n            return context.error(`No image name provided.`);\n        return new ImageExpression(name);\n    }\n    evaluate(ctx) {\n        const evaluatedImageName = this.input.evaluate(ctx);\n        const value = ResolvedImage.fromString(evaluatedImageName);\n        if (value && ctx.availableImages)\n            value.available = ctx.availableImages.indexOf(evaluatedImageName) > -1;\n        return value;\n    }\n    eachChild(fn) {\n        fn(this.input);\n    }\n    outputDefined() {\n        // The output of image is determined by the list of available images in the evaluation context\n        return false;\n    }\n    serialize() {\n        return [\n            'image',\n            this.input.serialize()\n        ];\n    }\n}\n\nconst types$1 = {\n    'to-boolean': BooleanType,\n    'to-color': ColorType,\n    'to-number': NumberType,\n    'to-string': StringType\n};\n/**\n * Special form for error-coalescing coercion expressions \"to-number\",\n * \"to-color\".  Since these coercions can fail at runtime, they accept multiple\n * arguments, only evaluating one at a time until one succeeds.\n *\n * @private\n */\nclass Coercion {\n    constructor(type, args) {\n        this.type = type;\n        this.args = args;\n    }\n    static parse(args, context) {\n        if (args.length < 2)\n            return context.error(`Expected at least one argument.`);\n        const name = args[0];\n        if ((name === 'to-boolean' || name === 'to-string') && args.length !== 2)\n            return context.error(`Expected one argument.`);\n        const type = types$1[name];\n        const parsed = [];\n        for (let i = 1; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input)\n                return null;\n            parsed.push(input);\n        }\n        return new Coercion(type, parsed);\n    }\n    evaluate(ctx) {\n        if (this.type.kind === 'boolean') {\n            return Boolean(this.args[0].evaluate(ctx));\n        } else if (this.type.kind === 'color') {\n            let input;\n            let error;\n            for (const arg of this.args) {\n                input = arg.evaluate(ctx);\n                error = null;\n                if (input instanceof Color$1) {\n                    return input;\n                } else if (typeof input === 'string') {\n                    const c = ctx.parseColor(input);\n                    if (c)\n                        return c;\n                } else if (Array.isArray(input)) {\n                    if (input.length < 3 || input.length > 4) {\n                        error = `Invalid rbga value ${ JSON.stringify(input) }: expected an array containing either three or four numeric values.`;\n                    } else {\n                        error = validateRGBA(input[0], input[1], input[2], input[3]);\n                    }\n                    if (!error) {\n                        return new Color$1(input[0] / 255, input[1] / 255, input[2] / 255, input[3]);\n                    }\n                }\n            }\n            throw new RuntimeError$1(error || `Could not parse color from value '${ typeof input === 'string' ? input : String(JSON.stringify(input)) }'`);\n        } else if (this.type.kind === 'number') {\n            let value = null;\n            for (const arg of this.args) {\n                value = arg.evaluate(ctx);\n                if (value === null)\n                    return 0;\n                const num = Number(value);\n                if (isNaN(num))\n                    continue;\n                return num;\n            }\n            throw new RuntimeError$1(`Could not convert ${ JSON.stringify(value) } to number.`);\n        } else if (this.type.kind === 'formatted') {\n            // There is no explicit 'to-formatted' but this coercion can be implicitly\n            // created by properties that expect the 'formatted' type.\n            return Formatted.fromString(toString(this.args[0].evaluate(ctx)));\n        } else if (this.type.kind === 'resolvedImage') {\n            return ResolvedImage.fromString(toString(this.args[0].evaluate(ctx)));\n        } else {\n            return toString(this.args[0].evaluate(ctx));\n        }\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return this.args.every(arg => arg.outputDefined());\n    }\n    serialize() {\n        if (this.type.kind === 'formatted') {\n            return new FormatExpression([{\n                    content: this.args[0],\n                    scale: null,\n                    font: null,\n                    textColor: null\n                }]).serialize();\n        }\n        if (this.type.kind === 'resolvedImage') {\n            return new ImageExpression(this.args[0]).serialize();\n        }\n        const serialized = [`to-${ this.type.kind }`];\n        this.eachChild(child => {\n            serialized.push(child.serialize());\n        });\n        return serialized;\n    }\n}\nvar Coercion$1 = Coercion;\n\n//      \nconst geometryTypes = [\n    'Unknown',\n    'Point',\n    'LineString',\n    'Polygon'\n];\nclass EvaluationContext {\n    constructor() {\n        this.globals = null;\n        this.feature = null;\n        this.featureState = null;\n        this.formattedSection = null;\n        this._parseColorCache = {};\n        this.availableImages = null;\n        this.canonical = null;\n        this.featureTileCoord = null;\n        this.featureDistanceData = null;\n    }\n    id() {\n        return this.feature && this.feature.id !== undefined ? this.feature.id : null;\n    }\n    geometryType() {\n        return this.feature ? typeof this.feature.type === 'number' ? geometryTypes[this.feature.type] : this.feature.type : null;\n    }\n    geometry() {\n        return this.feature && 'geometry' in this.feature ? this.feature.geometry : null;\n    }\n    canonicalID() {\n        return this.canonical;\n    }\n    properties() {\n        return this.feature && this.feature.properties || {};\n    }\n    distanceFromCenter() {\n        if (this.featureTileCoord && this.featureDistanceData) {\n            const c = this.featureDistanceData.center;\n            const scale = this.featureDistanceData.scale;\n            const {x, y} = this.featureTileCoord;\n            // Calculate the distance vector `d` (left handed)\n            const dX = x * scale - c[0];\n            const dY = y * scale - c[1];\n            // The bearing vector `b` (left handed)\n            const bX = this.featureDistanceData.bearing[0];\n            const bY = this.featureDistanceData.bearing[1];\n            // Distance is calculated as `dot(d, v)`\n            const dist = bX * dX + bY * dY;\n            return dist;\n        }\n        return 0;\n    }\n    parseColor(input) {\n        let cached = this._parseColorCache[input];\n        if (!cached) {\n            cached = this._parseColorCache[input] = Color$1.parse(input);\n        }\n        return cached;\n    }\n}\nvar EvaluationContext$1 = EvaluationContext;\n\n//      \nclass CompoundExpression {\n    constructor(name, type, evaluate, args) {\n        this.name = name;\n        this.type = type;\n        this._evaluate = evaluate;\n        this.args = args;\n    }\n    evaluate(ctx) {\n        return this._evaluate(ctx, this.args);\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return false;\n    }\n    serialize() {\n        return [this.name].concat(this.args.map(arg => arg.serialize()));\n    }\n    static parse(args, context) {\n        const op = args[0];\n        const definition = CompoundExpression.definitions[op];\n        if (!definition) {\n            return context.error(`Unknown expression \"${ op }\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        }\n        // Now check argument types against each signature\n        const type = Array.isArray(definition) ? definition[0] : definition.type;\n        const availableOverloads = Array.isArray(definition) ? [[\n                definition[1],\n                definition[2]\n            ]] : definition.overloads;\n        const overloads = availableOverloads.filter(([signature]) => !Array.isArray(signature) || // varags\n        signature.length === args.length - 1    // correct param count\n);\n        let signatureContext = null;\n        for (const [params, evaluate] of overloads) {\n            // Use a fresh context for each attempted signature so that, if\n            // we eventually succeed, we haven't polluted `context.errors`.\n            signatureContext = new ParsingContext$1(context.registry, context.path, null, context.scope);\n            // First parse all the args, potentially coercing to the\n            // types expected by this overload.\n            const parsedArgs = [];\n            let argParseFailed = false;\n            for (let i = 1; i < args.length; i++) {\n                const arg = args[i];\n                const expectedType = Array.isArray(params) ? params[i - 1] : params.type;\n                const parsed = signatureContext.parse(arg, 1 + parsedArgs.length, expectedType);\n                if (!parsed) {\n                    argParseFailed = true;\n                    break;\n                }\n                parsedArgs.push(parsed);\n            }\n            if (argParseFailed) {\n                // Couldn't coerce args of this overload to expected type, move\n                // on to next one.\n                continue;\n            }\n            if (Array.isArray(params)) {\n                if (params.length !== parsedArgs.length) {\n                    signatureContext.error(`Expected ${ params.length } arguments, but found ${ parsedArgs.length } instead.`);\n                    continue;\n                }\n            }\n            for (let i = 0; i < parsedArgs.length; i++) {\n                const expected = Array.isArray(params) ? params[i] : params.type;\n                const arg = parsedArgs[i];\n                signatureContext.concat(i + 1).checkSubtype(expected, arg.type);\n            }\n            if (signatureContext.errors.length === 0) {\n                return new CompoundExpression(op, type, evaluate, parsedArgs);\n            }\n        }\n        if (overloads.length === 1) {\n            context.errors.push(...signatureContext.errors);\n        } else {\n            const expected = overloads.length ? overloads : availableOverloads;\n            const signatures = expected.map(([params]) => stringifySignature(params)).join(' | ');\n            const actualTypes = [];\n            // For error message, re-parse arguments without trying to\n            // apply any coercions\n            for (let i = 1; i < args.length; i++) {\n                const parsed = context.parse(args[i], 1 + actualTypes.length);\n                if (!parsed)\n                    return null;\n                actualTypes.push(toString$1(parsed.type));\n            }\n            context.error(`Expected arguments of type ${ signatures }, but found (${ actualTypes.join(', ') }) instead.`);\n        }\n        return null;\n    }\n    static register(registry, definitions) {\n        CompoundExpression.definitions = definitions;\n        for (const name in definitions) {\n            registry[name] = CompoundExpression;\n        }\n    }\n}\nfunction stringifySignature(signature) {\n    if (Array.isArray(signature)) {\n        return `(${ signature.map(toString$1).join(', ') })`;\n    } else {\n        return `(${ toString$1(signature.type) }...)`;\n    }\n}\nvar CompoundExpression$1 = CompoundExpression;\n\n//      \nclass CollatorExpression {\n    constructor(caseSensitive, diacriticSensitive, locale) {\n        this.type = CollatorType;\n        this.locale = locale;\n        this.caseSensitive = caseSensitive;\n        this.diacriticSensitive = diacriticSensitive;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`Expected one argument.`);\n        const options = args[1];\n        if (typeof options !== 'object' || Array.isArray(options))\n            return context.error(`Collator options argument must be an object.`);\n        const caseSensitive = context.parse(options['case-sensitive'] === undefined ? false : options['case-sensitive'], 1, BooleanType);\n        if (!caseSensitive)\n            return null;\n        const diacriticSensitive = context.parse(options['diacritic-sensitive'] === undefined ? false : options['diacritic-sensitive'], 1, BooleanType);\n        if (!diacriticSensitive)\n            return null;\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale)\n                return null;\n        }\n        return new CollatorExpression(caseSensitive, diacriticSensitive, locale);\n    }\n    evaluate(ctx) {\n        return new Collator(this.caseSensitive.evaluate(ctx), this.diacriticSensitive.evaluate(ctx), this.locale ? this.locale.evaluate(ctx) : null);\n    }\n    eachChild(fn) {\n        fn(this.caseSensitive);\n        fn(this.diacriticSensitive);\n        if (this.locale) {\n            fn(this.locale);\n        }\n    }\n    outputDefined() {\n        // Technically the set of possible outputs is the combinatoric set of Collators produced\n        // by all possible outputs of locale/caseSensitive/diacriticSensitive\n        // But for the primary use of Collators in comparison operators, we ignore the Collator's\n        // possible outputs anyway, so we can get away with leaving this false for now.\n        return false;\n    }\n    serialize() {\n        const options = {};\n        options['case-sensitive'] = this.caseSensitive.serialize();\n        options['diacritic-sensitive'] = this.diacriticSensitive.serialize();\n        if (this.locale) {\n            options['locale'] = this.locale.serialize();\n        }\n        return [\n            'collator',\n            options\n        ];\n    }\n}\n\n//      \n// minX, minY, maxX, maxY\nconst EXTENT = 8192;\nfunction updateBBox(bbox, coord) {\n    bbox[0] = Math.min(bbox[0], coord[0]);\n    bbox[1] = Math.min(bbox[1], coord[1]);\n    bbox[2] = Math.max(bbox[2], coord[0]);\n    bbox[3] = Math.max(bbox[3], coord[1]);\n}\nfunction mercatorXfromLng(lng) {\n    return (180 + lng) / 360;\n}\nfunction mercatorYfromLat(lat) {\n    return (180 - 180 / Math.PI * Math.log(Math.tan(Math.PI / 4 + lat * Math.PI / 360))) / 360;\n}\nfunction boxWithinBox(bbox1, bbox2) {\n    if (bbox1[0] <= bbox2[0])\n        return false;\n    if (bbox1[2] >= bbox2[2])\n        return false;\n    if (bbox1[1] <= bbox2[1])\n        return false;\n    if (bbox1[3] >= bbox2[3])\n        return false;\n    return true;\n}\nfunction getTileCoordinates(p, canonical) {\n    const x = mercatorXfromLng(p[0]);\n    const y = mercatorYfromLat(p[1]);\n    const tilesAtZoom = Math.pow(2, canonical.z);\n    return [\n        Math.round(x * tilesAtZoom * EXTENT),\n        Math.round(y * tilesAtZoom * EXTENT)\n    ];\n}\nfunction onBoundary(p, p1, p2) {\n    const x1 = p[0] - p1[0];\n    const y1 = p[1] - p1[1];\n    const x2 = p[0] - p2[0];\n    const y2 = p[1] - p2[1];\n    return x1 * y2 - x2 * y1 === 0 && x1 * x2 <= 0 && y1 * y2 <= 0;\n}\nfunction rayIntersect(p, p1, p2) {\n    return p1[1] > p[1] !== p2[1] > p[1] && p[0] < (p2[0] - p1[0]) * (p[1] - p1[1]) / (p2[1] - p1[1]) + p1[0];\n}\n// ray casting algorithm for detecting if point is in polygon\nfunction pointWithinPolygon(point, rings) {\n    let inside = false;\n    for (let i = 0, len = rings.length; i < len; i++) {\n        const ring = rings[i];\n        for (let j = 0, len2 = ring.length; j < len2 - 1; j++) {\n            if (onBoundary(point, ring[j], ring[j + 1]))\n                return false;\n            if (rayIntersect(point, ring[j], ring[j + 1]))\n                inside = !inside;\n        }\n    }\n    return inside;\n}\nfunction pointWithinPolygons(point, polygons) {\n    for (let i = 0; i < polygons.length; i++) {\n        if (pointWithinPolygon(point, polygons[i]))\n            return true;\n    }\n    return false;\n}\nfunction perp(v1, v2) {\n    return v1[0] * v2[1] - v1[1] * v2[0];\n}\n// check if p1 and p2 are in different sides of line segment q1->q2\nfunction twoSided(p1, p2, q1, q2) {\n    // q1->p1 (x1, y1), q1->p2 (x2, y2), q1->q2 (x3, y3)\n    const x1 = p1[0] - q1[0];\n    const y1 = p1[1] - q1[1];\n    const x2 = p2[0] - q1[0];\n    const y2 = p2[1] - q1[1];\n    const x3 = q2[0] - q1[0];\n    const y3 = q2[1] - q1[1];\n    const det1 = x1 * y3 - x3 * y1;\n    const det2 = x2 * y3 - x3 * y2;\n    if (det1 > 0 && det2 < 0 || det1 < 0 && det2 > 0)\n        return true;\n    return false;\n}\n// a, b are end points for line segment1, c and d are end points for line segment2\nfunction lineIntersectLine(a, b, c, d) {\n    // check if two segments are parallel or not\n    // precondition is end point a, b is inside polygon, if line a->b is\n    // parallel to polygon edge c->d, then a->b won't intersect with c->d\n    const vectorP = [\n        b[0] - a[0],\n        b[1] - a[1]\n    ];\n    const vectorQ = [\n        d[0] - c[0],\n        d[1] - c[1]\n    ];\n    if (perp(vectorQ, vectorP) === 0)\n        return false;\n    // If lines are intersecting with each other, the relative location should be:\n    // a and b lie in different sides of segment c->d\n    // c and d lie in different sides of segment a->b\n    if (twoSided(a, b, c, d) && twoSided(c, d, a, b))\n        return true;\n    return false;\n}\nfunction lineIntersectPolygon(p1, p2, polygon) {\n    for (const ring of polygon) {\n        // loop through every edge of the ring\n        for (let j = 0; j < ring.length - 1; ++j) {\n            if (lineIntersectLine(p1, p2, ring[j], ring[j + 1])) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction lineStringWithinPolygon(line, polygon) {\n    // First, check if geometry points of line segments are all inside polygon\n    for (let i = 0; i < line.length; ++i) {\n        if (!pointWithinPolygon(line[i], polygon)) {\n            return false;\n        }\n    }\n    // Second, check if there is line segment intersecting polygon edge\n    for (let i = 0; i < line.length - 1; ++i) {\n        if (lineIntersectPolygon(line[i], line[i + 1], polygon)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction lineStringWithinPolygons(line, polygons) {\n    for (let i = 0; i < polygons.length; i++) {\n        if (lineStringWithinPolygon(line, polygons[i]))\n            return true;\n    }\n    return false;\n}\nfunction getTilePolygon(coordinates, bbox, canonical) {\n    const polygon = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const ring = [];\n        for (let j = 0; j < coordinates[i].length; j++) {\n            const coord = getTileCoordinates(coordinates[i][j], canonical);\n            updateBBox(bbox, coord);\n            ring.push(coord);\n        }\n        polygon.push(ring);\n    }\n    return polygon;\n}\nfunction getTilePolygons(coordinates, bbox, canonical) {\n    const polygons = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const polygon = getTilePolygon(coordinates[i], bbox, canonical);\n        polygons.push(polygon);\n    }\n    return polygons;\n}\nfunction updatePoint(p, bbox, polyBBox, worldSize) {\n    if (p[0] < polyBBox[0] || p[0] > polyBBox[2]) {\n        const halfWorldSize = worldSize * 0.5;\n        let shift = p[0] - polyBBox[0] > halfWorldSize ? -worldSize : polyBBox[0] - p[0] > halfWorldSize ? worldSize : 0;\n        if (shift === 0) {\n            shift = p[0] - polyBBox[2] > halfWorldSize ? -worldSize : polyBBox[2] - p[0] > halfWorldSize ? worldSize : 0;\n        }\n        p[0] += shift;\n    }\n    updateBBox(bbox, p);\n}\nfunction resetBBox(bbox) {\n    bbox[0] = bbox[1] = Infinity;\n    bbox[2] = bbox[3] = -Infinity;\n}\nfunction getTilePoints(geometry, pointBBox, polyBBox, canonical) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [\n        canonical.x * EXTENT,\n        canonical.y * EXTENT\n    ];\n    const tilePoints = [];\n    if (!geometry)\n        return tilePoints;\n    for (const points of geometry) {\n        for (const point of points) {\n            const p = [\n                point.x + shifts[0],\n                point.y + shifts[1]\n            ];\n            updatePoint(p, pointBBox, polyBBox, worldSize);\n            tilePoints.push(p);\n        }\n    }\n    return tilePoints;\n}\nfunction getTileLines(geometry, lineBBox, polyBBox, canonical) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [\n        canonical.x * EXTENT,\n        canonical.y * EXTENT\n    ];\n    const tileLines = [];\n    if (!geometry)\n        return tileLines;\n    for (const line of geometry) {\n        const tileLine = [];\n        for (const point of line) {\n            const p = [\n                point.x + shifts[0],\n                point.y + shifts[1]\n            ];\n            updateBBox(lineBBox, p);\n            tileLine.push(p);\n        }\n        tileLines.push(tileLine);\n    }\n    if (lineBBox[2] - lineBBox[0] <= worldSize / 2) {\n        resetBBox(lineBBox);\n        for (const line of tileLines) {\n            for (const p of line) {\n                updatePoint(p, lineBBox, polyBBox, worldSize);\n            }\n        }\n    }\n    return tileLines;\n}\nfunction pointsWithinPolygons(ctx, polygonGeometry) {\n    const pointBBox = [\n        Infinity,\n        Infinity,\n        -Infinity,\n        -Infinity\n    ];\n    const polyBBox = [\n        Infinity,\n        Infinity,\n        -Infinity,\n        -Infinity\n    ];\n    const canonical = ctx.canonicalID();\n    if (!canonical) {\n        return false;\n    }\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox))\n            return false;\n        for (const point of tilePoints) {\n            if (!pointWithinPolygon(point, tilePolygon))\n                return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox))\n            return false;\n        for (const point of tilePoints) {\n            if (!pointWithinPolygons(point, tilePolygons))\n                return false;\n        }\n    }\n    return true;\n}\nfunction linesWithinPolygons(ctx, polygonGeometry) {\n    const lineBBox = [\n        Infinity,\n        Infinity,\n        -Infinity,\n        -Infinity\n    ];\n    const polyBBox = [\n        Infinity,\n        Infinity,\n        -Infinity,\n        -Infinity\n    ];\n    const canonical = ctx.canonicalID();\n    if (!canonical) {\n        return false;\n    }\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox))\n            return false;\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygon(line, tilePolygon))\n                return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox))\n            return false;\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygons(line, tilePolygons))\n                return false;\n        }\n    }\n    return true;\n}\nclass Within {\n    constructor(geojson, geometries) {\n        this.type = BooleanType;\n        this.geojson = geojson;\n        this.geometries = geometries;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`'within' expression requires exactly one argument, but found ${ args.length - 1 } instead.`);\n        if (isValue(args[1])) {\n            const geojson = args[1];\n            if (geojson.type === 'FeatureCollection') {\n                for (let i = 0; i < geojson.features.length; ++i) {\n                    const type = geojson.features[i].geometry.type;\n                    if (type === 'Polygon' || type === 'MultiPolygon') {\n                        return new Within(geojson, geojson.features[i].geometry);\n                    }\n                }\n            } else if (geojson.type === 'Feature') {\n                const type = geojson.geometry.type;\n                if (type === 'Polygon' || type === 'MultiPolygon') {\n                    return new Within(geojson, geojson.geometry);\n                }\n            } else if (geojson.type === 'Polygon' || geojson.type === 'MultiPolygon') {\n                return new Within(geojson, geojson);\n            }\n        }\n        return context.error(`'within' expression requires valid geojson object that contains polygon geometry type.`);\n    }\n    evaluate(ctx) {\n        if (ctx.geometry() != null && ctx.canonicalID() != null) {\n            if (ctx.geometryType() === 'Point') {\n                return pointsWithinPolygons(ctx, this.geometries);\n            } else if (ctx.geometryType() === 'LineString') {\n                return linesWithinPolygons(ctx, this.geometries);\n            }\n        }\n        return false;\n    }\n    eachChild() {\n    }\n    outputDefined() {\n        return true;\n    }\n    serialize() {\n        return [\n            'within',\n            this.geojson\n        ];\n    }\n}\nvar Within$1 = Within;\n\n//      \nfunction isFeatureConstant(e) {\n    if (e instanceof CompoundExpression$1) {\n        if (e.name === 'get' && e.args.length === 1) {\n            return false;\n        } else if (e.name === 'feature-state') {\n            return false;\n        } else if (e.name === 'has' && e.args.length === 1) {\n            return false;\n        } else if (e.name === 'properties' || e.name === 'geometry-type' || e.name === 'id') {\n            return false;\n        } else if (/^filter-/.test(e.name)) {\n            return false;\n        }\n    }\n    if (e instanceof Within$1) {\n        return false;\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isFeatureConstant(arg)) {\n            result = false;\n        }\n    });\n    return result;\n}\nfunction isStateConstant(e) {\n    if (e instanceof CompoundExpression$1) {\n        if (e.name === 'feature-state') {\n            return false;\n        }\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isStateConstant(arg)) {\n            result = false;\n        }\n    });\n    return result;\n}\nfunction isGlobalPropertyConstant(e, properties) {\n    if (e instanceof CompoundExpression$1 && properties.indexOf(e.name) >= 0) {\n        return false;\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isGlobalPropertyConstant(arg, properties)) {\n            result = false;\n        }\n    });\n    return result;\n}\n\n//      \nclass Var {\n    constructor(name, boundExpression) {\n        this.type = boundExpression.type;\n        this.name = name;\n        this.boundExpression = boundExpression;\n    }\n    static parse(args, context) {\n        if (args.length !== 2 || typeof args[1] !== 'string')\n            return context.error(`'var' expression requires exactly one string literal argument.`);\n        const name = args[1];\n        if (!context.scope.has(name)) {\n            return context.error(`Unknown variable \"${ name }\". Make sure \"${ name }\" has been bound in an enclosing \"let\" expression before using it.`, 1);\n        }\n        return new Var(name, context.scope.get(name));\n    }\n    evaluate(ctx) {\n        return this.boundExpression.evaluate(ctx);\n    }\n    eachChild() {\n    }\n    outputDefined() {\n        return false;\n    }\n    serialize() {\n        return [\n            'var',\n            this.name\n        ];\n    }\n}\nvar Var$1 = Var;\n\n//      \n/**\n * State associated parsing at a given point in an expression tree.\n * @private\n */\nclass ParsingContext {\n    // The expected type of this expression. Provided only to allow Expression\n    // implementations to infer argument types: Expression#parse() need not\n    // check that the output type of the parsed expression matches\n    // `expectedType`.\n    constructor(registry, path = [], expectedType, scope = new Scope$1(), errors = []) {\n        this.registry = registry;\n        this.path = path;\n        this.key = path.map(part => `[${ part }]`).join('');\n        this.scope = scope;\n        this.errors = errors;\n        this.expectedType = expectedType;\n    }\n    /**\n     * @param expr the JSON expression to parse\n     * @param index the optional argument index if this expression is an argument of a parent expression that's being parsed\n     * @param options\n     * @param options.omitTypeAnnotations set true to omit inferred type annotations.  Caller beware: with this option set, the parsed expression's type will NOT satisfy `expectedType` if it would normally be wrapped in an inferred annotation.\n     * @private\n     */\n    parse(expr, index, expectedType, bindings, options = {}) {\n        if (index) {\n            return this.concat(index, expectedType, bindings)._parse(expr, options);\n        }\n        return this._parse(expr, options);\n    }\n    _parse(expr, options) {\n        if (expr === null || typeof expr === 'string' || typeof expr === 'boolean' || typeof expr === 'number') {\n            expr = [\n                'literal',\n                expr\n            ];\n        }\n        function annotate(parsed, type, typeAnnotation) {\n            if (typeAnnotation === 'assert') {\n                return new Assertion$1(type, [parsed]);\n            } else if (typeAnnotation === 'coerce') {\n                return new Coercion$1(type, [parsed]);\n            } else {\n                return parsed;\n            }\n        }\n        if (Array.isArray(expr)) {\n            if (expr.length === 0) {\n                return this.error(`Expected an array with at least one element. If you wanted a literal array, use [\"literal\", []].`);\n            }\n            const op = expr[0];\n            if (typeof op !== 'string') {\n                this.error(`Expression name must be a string, but found ${ typeof op } instead. If you wanted a literal array, use [\"literal\", [...]].`, 0);\n                return null;\n            }\n            const Expr = this.registry[op];\n            if (Expr) {\n                let parsed = Expr.parse(expr, this);\n                if (!parsed)\n                    return null;\n                if (this.expectedType) {\n                    const expected = this.expectedType;\n                    const actual = parsed.type;\n                    // When we expect a number, string, boolean, or array but have a value, wrap it in an assertion.\n                    // When we expect a color or formatted string, but have a string or value, wrap it in a coercion.\n                    // Otherwise, we do static type-checking.\n                    //\n                    // These behaviors are overridable for:\n                    //   * The \"coalesce\" operator, which needs to omit type annotations.\n                    //   * String-valued properties (e.g. `text-field`), where coercion is more convenient than assertion.\n                    //\n                    if ((expected.kind === 'string' || expected.kind === 'number' || expected.kind === 'boolean' || expected.kind === 'object' || expected.kind === 'array') && actual.kind === 'value') {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'assert');\n                    } else if ((expected.kind === 'color' || expected.kind === 'formatted' || expected.kind === 'resolvedImage') && (actual.kind === 'value' || actual.kind === 'string')) {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'coerce');\n                    } else if (this.checkSubtype(expected, actual)) {\n                        return null;\n                    }\n                }\n                // If an expression's arguments are all literals, we can evaluate\n                // it immediately and replace it with a literal value in the\n                // parsed/compiled result. Expressions that expect an image should\n                // not be resolved here so we can later get the available images.\n                if (!(parsed instanceof Literal$1) && parsed.type.kind !== 'resolvedImage' && isConstant(parsed)) {\n                    const ec = new EvaluationContext$1();\n                    try {\n                        parsed = new Literal$1(parsed.type, parsed.evaluate(ec));\n                    } catch (e) {\n                        this.error(e.message);\n                        return null;\n                    }\n                }\n                return parsed;\n            }\n            return this.error(`Unknown expression \"${ op }\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        } else if (typeof expr === 'undefined') {\n            return this.error(`'undefined' value invalid. Use null instead.`);\n        } else if (typeof expr === 'object') {\n            return this.error(`Bare objects invalid. Use [\"literal\", {...}] instead.`);\n        } else {\n            return this.error(`Expected an array, but found ${ typeof expr } instead.`);\n        }\n    }\n    /**\n     * Returns a copy of this context suitable for parsing the subexpression at\n     * index `index`, optionally appending to 'let' binding map.\n     *\n     * Note that `errors` property, intended for collecting errors while\n     * parsing, is copied by reference rather than cloned.\n     * @private\n     */\n    concat(index, expectedType, bindings) {\n        const path = typeof index === 'number' ? this.path.concat(index) : this.path;\n        const scope = bindings ? this.scope.concat(bindings) : this.scope;\n        return new ParsingContext(this.registry, path, expectedType || null, scope, this.errors);\n    }\n    /**\n     * Push a parsing (or type checking) error into the `this.errors`\n     * @param error The message\n     * @param keys Optionally specify the source of the error at a child\n     * of the current expression at `this.key`.\n     * @private\n     */\n    error(error, ...keys) {\n        const key = `${ this.key }${ keys.map(k => `[${ k }]`).join('') }`;\n        this.errors.push(new ParsingError$1(key, error));\n    }\n    /**\n     * Returns null if `t` is a subtype of `expected`; otherwise returns an\n     * error message and also pushes it to `this.errors`.\n     */\n    checkSubtype(expected, t) {\n        const error = checkSubtype(expected, t);\n        if (error)\n            this.error(error);\n        return error;\n    }\n}\nvar ParsingContext$1 = ParsingContext;\nfunction isConstant(expression) {\n    if (expression instanceof Var$1) {\n        return isConstant(expression.boundExpression);\n    } else if (expression instanceof CompoundExpression$1 && expression.name === 'error') {\n        return false;\n    } else if (expression instanceof CollatorExpression) {\n        // Although the results of a Collator expression with fixed arguments\n        // generally shouldn't change between executions, we can't serialize them\n        // as constant expressions because results change based on environment.\n        return false;\n    } else if (expression instanceof Within$1) {\n        return false;\n    }\n    const isTypeAnnotation = expression instanceof Coercion$1 || expression instanceof Assertion$1;\n    let childrenConstant = true;\n    expression.eachChild(child => {\n        // We can _almost_ assume that if `expressions` children are constant,\n        // they would already have been evaluated to Literal values when they\n        // were parsed.  Type annotations are the exception, because they might\n        // have been inferred and added after a child was parsed.\n        // So we recurse into isConstant() for the children of type annotations,\n        // but otherwise simply check whether they are Literals.\n        if (isTypeAnnotation) {\n            childrenConstant = childrenConstant && isConstant(child);\n        } else {\n            childrenConstant = childrenConstant && child instanceof Literal$1;\n        }\n    });\n    if (!childrenConstant) {\n        return false;\n    }\n    return isFeatureConstant(expression) && isGlobalPropertyConstant(expression, [\n        'zoom',\n        'heatmap-density',\n        'line-progress',\n        'sky-radial-progress',\n        'accumulated',\n        'is-supported-script',\n        'pitch',\n        'distance-from-center'\n    ]);\n}\n\n//      \n/**\n * Returns the index of the last stop <= input, or 0 if it doesn't exist.\n * @private\n */\nfunction findStopLessThanOrEqualTo(stops, input) {\n    const lastIndex = stops.length - 1;\n    let lowerIndex = 0;\n    let upperIndex = lastIndex;\n    let currentIndex = 0;\n    let currentValue, nextValue;\n    while (lowerIndex <= upperIndex) {\n        currentIndex = Math.floor((lowerIndex + upperIndex) / 2);\n        currentValue = stops[currentIndex];\n        nextValue = stops[currentIndex + 1];\n        if (currentValue <= input) {\n            if (currentIndex === lastIndex || input < nextValue) {\n                // Search complete\n                return currentIndex;\n            }\n            lowerIndex = currentIndex + 1;\n        } else if (currentValue > input) {\n            upperIndex = currentIndex - 1;\n        } else {\n            throw new RuntimeError$1('Input is not a number.');\n        }\n    }\n    return 0;\n}\n\n//      \nclass Step {\n    constructor(type, input, stops) {\n        this.type = type;\n        this.input = input;\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n    static parse(args, context) {\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${ args.length - 1 }.`);\n        }\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error(`Expected an even number of arguments.`);\n        }\n        const input = context.parse(args[1], 1, NumberType);\n        if (!input)\n            return null;\n        const stops = [];\n        let outputType = null;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        for (let i = 1; i < args.length; i += 2) {\n            const label = i === 1 ? -Infinity : args[i];\n            const value = args[i + 1];\n            const labelKey = i;\n            const valueKey = i + 1;\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"step\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"step\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed)\n                return null;\n            outputType = outputType || parsed.type;\n            stops.push([\n                label,\n                parsed\n            ]);\n        }\n        return new Step(outputType, input, stops);\n    }\n    evaluate(ctx) {\n        const labels = this.labels;\n        const outputs = this.outputs;\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n        const value = this.input.evaluate(ctx);\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n        const index = findStopLessThanOrEqualTo(labels, value);\n        return outputs[index].evaluate(ctx);\n    }\n    eachChild(fn) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n    outputDefined() {\n        return this.outputs.every(out => out.outputDefined());\n    }\n    serialize() {\n        const serialized = [\n            'step',\n            this.input.serialize()\n        ];\n        for (let i = 0; i < this.labels.length; i++) {\n            if (i > 0) {\n                serialized.push(this.labels[i]);\n            }\n            serialized.push(this.outputs[i].serialize());\n        }\n        return serialized;\n    }\n}\nvar Step$1 = Step;\n\n/*\n * Copyright (C) 2008 Apple Inc. All Rights Reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * Ported from Webkit\n * http://svn.webkit.org/repository/webkit/trunk/Source/WebCore/platform/graphics/UnitBezier.h\n */\n\nvar unitbezier = UnitBezier;\nfunction UnitBezier(p1x, p1y, p2x, p2y) {\n    // Calculate the polynomial coefficients, implicit first and last control points are (0,0) and (1,1).\n    this.cx = 3 * p1x;\n    this.bx = 3 * (p2x - p1x) - this.cx;\n    this.ax = 1 - this.cx - this.bx;\n    this.cy = 3 * p1y;\n    this.by = 3 * (p2y - p1y) - this.cy;\n    this.ay = 1 - this.cy - this.by;\n    this.p1x = p1x;\n    this.p1y = p2y;\n    this.p2x = p2x;\n    this.p2y = p2y;\n}\nUnitBezier.prototype.sampleCurveX = function (t) {\n    // `ax t^3 + bx t^2 + cx t' expanded using Horner's rule.\n    return ((this.ax * t + this.bx) * t + this.cx) * t;\n};\nUnitBezier.prototype.sampleCurveY = function (t) {\n    return ((this.ay * t + this.by) * t + this.cy) * t;\n};\nUnitBezier.prototype.sampleCurveDerivativeX = function (t) {\n    return (3 * this.ax * t + 2 * this.bx) * t + this.cx;\n};\nUnitBezier.prototype.solveCurveX = function (x, epsilon) {\n    if (typeof epsilon === 'undefined')\n        epsilon = 0.000001;\n    var t0, t1, t2, x2, i;\n    // First try a few iterations of Newton's method -- normally very fast.\n    for (t2 = x, i = 0; i < 8; i++) {\n        x2 = this.sampleCurveX(t2) - x;\n        if (Math.abs(x2) < epsilon)\n            return t2;\n        var d2 = this.sampleCurveDerivativeX(t2);\n        if (Math.abs(d2) < 0.000001)\n            break;\n        t2 = t2 - x2 / d2;\n    }\n    // Fall back to the bisection method for reliability.\n    t0 = 0;\n    t1 = 1;\n    t2 = x;\n    if (t2 < t0)\n        return t0;\n    if (t2 > t1)\n        return t1;\n    while (t0 < t1) {\n        x2 = this.sampleCurveX(t2);\n        if (Math.abs(x2 - x) < epsilon)\n            return t2;\n        if (x > x2) {\n            t0 = t2;\n        } else {\n            t1 = t2;\n        }\n        t2 = (t1 - t0) * 0.5 + t0;\n    }\n    // Failure.\n    return t2;\n};\nUnitBezier.prototype.solve = function (x, epsilon) {\n    return this.sampleCurveY(this.solveCurveX(x, epsilon));\n};\n\nvar UnitBezier$1 = /*@__PURE__*/getDefaultExportFromCjs(unitbezier);\n\n//      \nfunction number(a, b, t) {\n    return a * (1 - t) + b * t;\n}\nfunction color(from, to, t) {\n    return new Color$1(number(from.r, to.r, t), number(from.g, to.g, t), number(from.b, to.b, t), number(from.a, to.a, t));\n}\nfunction array(from, to, t) {\n    return from.map((d, i) => {\n        return number(d, to[i], t);\n    });\n}\n\nvar interpolate = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tnumber: number,\n\tcolor: color,\n\tarray: array\n});\n\n//      \n// Constants\nconst Xn = 0.95047,\n    // D65 standard referent\n    Yn = 1, Zn = 1.08883, t0 = 4 / 29, t1 = 6 / 29, t2 = 3 * t1 * t1, t3 = t1 * t1 * t1, deg2rad$1 = Math.PI / 180, rad2deg = 180 / Math.PI;\n// Utilities\nfunction xyz2lab(t) {\n    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\nfunction lab2xyz(t) {\n    return t > t1 ? t * t * t : t2 * (t - t0);\n}\nfunction xyz2rgb(x) {\n    return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\nfunction rgb2xyz(x) {\n    x /= 255;\n    return x <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n// LAB\nfunction rgbToLab(rgbColor) {\n    const b = rgb2xyz(rgbColor.r), a = rgb2xyz(rgbColor.g), l = rgb2xyz(rgbColor.b), x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn), y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.072175 * l) / Yn), z = xyz2lab((0.0193339 * b + 0.119192 * a + 0.9503041 * l) / Zn);\n    return {\n        l: 116 * y - 16,\n        a: 500 * (x - y),\n        b: 200 * (y - z),\n        alpha: rgbColor.a\n    };\n}\nfunction labToRgb(labColor) {\n    let y = (labColor.l + 16) / 116, x = isNaN(labColor.a) ? y : y + labColor.a / 500, z = isNaN(labColor.b) ? y : y - labColor.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Color$1(xyz2rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n    xyz2rgb(-0.969266 * x + 1.8760108 * y + 0.041556 * z), xyz2rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z), labColor.alpha);\n}\nfunction interpolateLab(from, to, t) {\n    return {\n        l: number(from.l, to.l, t),\n        a: number(from.a, to.a, t),\n        b: number(from.b, to.b, t),\n        alpha: number(from.alpha, to.alpha, t)\n    };\n}\n// HCL\nfunction rgbToHcl(rgbColor) {\n    const {l, a, b} = rgbToLab(rgbColor);\n    const h = Math.atan2(b, a) * rad2deg;\n    return {\n        h: h < 0 ? h + 360 : h,\n        c: Math.sqrt(a * a + b * b),\n        l,\n        alpha: rgbColor.a\n    };\n}\nfunction hclToRgb(hclColor) {\n    const h = hclColor.h * deg2rad$1, c = hclColor.c, l = hclColor.l;\n    return labToRgb({\n        l,\n        a: Math.cos(h) * c,\n        b: Math.sin(h) * c,\n        alpha: hclColor.alpha\n    });\n}\nfunction interpolateHue(a, b, t) {\n    const d = b - a;\n    return a + t * (d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d);\n}\nfunction interpolateHcl(from, to, t) {\n    return {\n        h: interpolateHue(from.h, to.h, t),\n        c: number(from.c, to.c, t),\n        l: number(from.l, to.l, t),\n        alpha: number(from.alpha, to.alpha, t)\n    };\n}\nconst lab = {\n    forward: rgbToLab,\n    reverse: labToRgb,\n    interpolate: interpolateLab\n};\nconst hcl = {\n    forward: rgbToHcl,\n    reverse: hclToRgb,\n    interpolate: interpolateHcl\n};\n\n//      \nclass Interpolate {\n    constructor(type, operator, interpolation, input, stops) {\n        this.type = type;\n        this.operator = operator;\n        this.interpolation = interpolation;\n        this.input = input;\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n    static interpolationFactor(interpolation, input, lower, upper) {\n        let t = 0;\n        if (interpolation.name === 'exponential') {\n            t = exponentialInterpolation(input, interpolation.base, lower, upper);\n        } else if (interpolation.name === 'linear') {\n            t = exponentialInterpolation(input, 1, lower, upper);\n        } else if (interpolation.name === 'cubic-bezier') {\n            const c = interpolation.controlPoints;\n            const ub = new UnitBezier$1(c[0], c[1], c[2], c[3]);\n            t = ub.solve(exponentialInterpolation(input, 1, lower, upper));\n        }\n        return t;\n    }\n    static parse(args, context) {\n        let [operator, interpolation, input, ...rest] = args;\n        if (!Array.isArray(interpolation) || interpolation.length === 0) {\n            return context.error(`Expected an interpolation type expression.`, 1);\n        }\n        if (interpolation[0] === 'linear') {\n            interpolation = { name: 'linear' };\n        } else if (interpolation[0] === 'exponential') {\n            const base = interpolation[1];\n            if (typeof base !== 'number')\n                return context.error(`Exponential interpolation requires a numeric base.`, 1, 1);\n            interpolation = {\n                name: 'exponential',\n                base\n            };\n        } else if (interpolation[0] === 'cubic-bezier') {\n            const controlPoints = interpolation.slice(1);\n            if (controlPoints.length !== 4 || controlPoints.some(t => typeof t !== 'number' || t < 0 || t > 1)) {\n                return context.error('Cubic bezier interpolation requires four numeric arguments with values between 0 and 1.', 1);\n            }\n            interpolation = {\n                name: 'cubic-bezier',\n                controlPoints: controlPoints\n            };\n        } else {\n            return context.error(`Unknown interpolation type ${ String(interpolation[0]) }`, 1, 0);\n        }\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${ args.length - 1 }.`);\n        }\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error(`Expected an even number of arguments.`);\n        }\n        input = context.parse(input, 2, NumberType);\n        if (!input)\n            return null;\n        const stops = [];\n        let outputType = null;\n        if (operator === 'interpolate-hcl' || operator === 'interpolate-lab') {\n            outputType = ColorType;\n        } else if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        for (let i = 0; i < rest.length; i += 2) {\n            const label = rest[i];\n            const value = rest[i + 1];\n            const labelKey = i + 3;\n            const valueKey = i + 4;\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed)\n                return null;\n            outputType = outputType || parsed.type;\n            stops.push([\n                label,\n                parsed\n            ]);\n        }\n        if (outputType.kind !== 'number' && outputType.kind !== 'color' && !(outputType.kind === 'array' && outputType.itemType.kind === 'number' && typeof outputType.N === 'number')) {\n            return context.error(`Type ${ toString$1(outputType) } is not interpolatable.`);\n        }\n        return new Interpolate(outputType, operator, interpolation, input, stops);\n    }\n    evaluate(ctx) {\n        const labels = this.labels;\n        const outputs = this.outputs;\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n        const value = this.input.evaluate(ctx);\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n        const index = findStopLessThanOrEqualTo(labels, value);\n        const lower = labels[index];\n        const upper = labels[index + 1];\n        const t = Interpolate.interpolationFactor(this.interpolation, value, lower, upper);\n        const outputLower = outputs[index].evaluate(ctx);\n        const outputUpper = outputs[index + 1].evaluate(ctx);\n        if (this.operator === 'interpolate') {\n            return interpolate[this.type.kind.toLowerCase()](outputLower, outputUpper, t);    // eslint-disable-line import/namespace\n        } else if (this.operator === 'interpolate-hcl') {\n            return hcl.reverse(hcl.interpolate(hcl.forward(outputLower), hcl.forward(outputUpper), t));\n        } else {\n            return lab.reverse(lab.interpolate(lab.forward(outputLower), lab.forward(outputUpper), t));\n        }\n    }\n    eachChild(fn) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n    outputDefined() {\n        return this.outputs.every(out => out.outputDefined());\n    }\n    serialize() {\n        let interpolation;\n        if (this.interpolation.name === 'linear') {\n            interpolation = ['linear'];\n        } else if (this.interpolation.name === 'exponential') {\n            if (this.interpolation.base === 1) {\n                interpolation = ['linear'];\n            } else {\n                interpolation = [\n                    'exponential',\n                    this.interpolation.base\n                ];\n            }\n        } else {\n            interpolation = ['cubic-bezier'].concat(this.interpolation.controlPoints);\n        }\n        const serialized = [\n            this.operator,\n            interpolation,\n            this.input.serialize()\n        ];\n        for (let i = 0; i < this.labels.length; i++) {\n            serialized.push(this.labels[i], this.outputs[i].serialize());\n        }\n        return serialized;\n    }\n}\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n * How it works: Two consecutive stop values define a (scaled and shifted) exponential function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n*/\nfunction exponentialInterpolation(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n    if (difference === 0) {\n        return 0;\n    } else if (base === 1) {\n        return progress / difference;\n    } else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\nvar Interpolate$1 = Interpolate;\n\nclass Coalesce {\n    constructor(type, args) {\n        this.type = type;\n        this.args = args;\n    }\n    static parse(args, context) {\n        if (args.length < 2) {\n            return context.error('Expectected at least one argument.');\n        }\n        let outputType = null;\n        const expectedType = context.expectedType;\n        if (expectedType && expectedType.kind !== 'value') {\n            outputType = expectedType;\n        }\n        const parsedArgs = [];\n        for (const arg of args.slice(1)) {\n            const parsed = context.parse(arg, 1 + parsedArgs.length, outputType, undefined, { typeAnnotation: 'omit' });\n            if (!parsed)\n                return null;\n            outputType = outputType || parsed.type;\n            parsedArgs.push(parsed);\n        }\n        // Above, we parse arguments without inferred type annotation so that\n        // they don't produce a runtime error for `null` input, which would\n        // preempt the desired null-coalescing behavior.\n        // Thus, if any of our arguments would have needed an annotation, we\n        // need to wrap the enclosing coalesce expression with it instead.\n        const needsAnnotation = expectedType && parsedArgs.some(arg => checkSubtype(expectedType, arg.type));\n        return needsAnnotation ? new Coalesce(ValueType, parsedArgs) : new Coalesce(outputType, parsedArgs);\n    }\n    evaluate(ctx) {\n        let result = null;\n        let argCount = 0;\n        let firstImage;\n        for (const arg of this.args) {\n            argCount++;\n            result = arg.evaluate(ctx);\n            // we need to keep track of the first requested image in a coalesce statement\n            // if coalesce can't find a valid image, we return the first image so styleimagemissing can fire\n            if (result && result instanceof ResolvedImage && !result.available) {\n                // set to first image\n                if (!firstImage) {\n                    firstImage = result;\n                }\n                result = null;\n                // if we reach the end, return the first image\n                if (argCount === this.args.length) {\n                    return firstImage;\n                }\n            }\n            if (result !== null)\n                break;\n        }\n        return result;\n    }\n    eachChild(fn) {\n        this.args.forEach(fn);\n    }\n    outputDefined() {\n        return this.args.every(arg => arg.outputDefined());\n    }\n    serialize() {\n        const serialized = ['coalesce'];\n        this.eachChild(child => {\n            serialized.push(child.serialize());\n        });\n        return serialized;\n    }\n}\nvar Coalesce$1 = Coalesce;\n\n//      \nclass Let {\n    constructor(bindings, result) {\n        this.type = result.type;\n        this.bindings = [].concat(bindings);\n        this.result = result;\n    }\n    evaluate(ctx) {\n        return this.result.evaluate(ctx);\n    }\n    eachChild(fn) {\n        for (const binding of this.bindings) {\n            fn(binding[1]);\n        }\n        fn(this.result);\n    }\n    static parse(args, context) {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found ${ args.length - 1 } instead.`);\n        const bindings = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const name = args[i];\n            if (typeof name !== 'string') {\n                return context.error(`Expected string, but found ${ typeof name } instead.`, i);\n            }\n            if (/[^a-zA-Z0-9_]/.test(name)) {\n                return context.error(`Variable names must contain only alphanumeric characters or '_'.`, i);\n            }\n            const value = context.parse(args[i + 1], i + 1);\n            if (!value)\n                return null;\n            bindings.push([\n                name,\n                value\n            ]);\n        }\n        const result = context.parse(args[args.length - 1], args.length - 1, context.expectedType, bindings);\n        if (!result)\n            return null;\n        return new Let(bindings, result);\n    }\n    outputDefined() {\n        return this.result.outputDefined();\n    }\n    serialize() {\n        const serialized = ['let'];\n        for (const [name, expr] of this.bindings) {\n            serialized.push(name, expr.serialize());\n        }\n        serialized.push(this.result.serialize());\n        return serialized;\n    }\n}\nvar Let$1 = Let;\n\n//      \nclass At {\n    constructor(type, index, input) {\n        this.type = type;\n        this.index = index;\n        this.input = input;\n    }\n    static parse(args, context) {\n        if (args.length !== 3)\n            return context.error(`Expected 2 arguments, but found ${ args.length - 1 } instead.`);\n        const index = context.parse(args[1], 1, NumberType);\n        const input = context.parse(args[2], 2, array$1(context.expectedType || ValueType));\n        if (!index || !input)\n            return null;\n        const t = input.type;\n        return new At(t.itemType, index, input);\n    }\n    evaluate(ctx) {\n        const index = this.index.evaluate(ctx);\n        const array = this.input.evaluate(ctx);\n        if (index < 0) {\n            throw new RuntimeError$1(`Array index out of bounds: ${ index } < 0.`);\n        }\n        if (index >= array.length) {\n            throw new RuntimeError$1(`Array index out of bounds: ${ index } > ${ array.length - 1 }.`);\n        }\n        if (index !== Math.floor(index)) {\n            throw new RuntimeError$1(`Array index must be an integer, but found ${ index } instead.`);\n        }\n        return array[index];\n    }\n    eachChild(fn) {\n        fn(this.index);\n        fn(this.input);\n    }\n    outputDefined() {\n        return false;\n    }\n    serialize() {\n        return [\n            'at',\n            this.index.serialize(),\n            this.input.serialize()\n        ];\n    }\n}\nvar At$1 = At;\n\n//      \nclass In {\n    constructor(needle, haystack) {\n        this.type = BooleanType;\n        this.needle = needle;\n        this.haystack = haystack;\n    }\n    static parse(args, context) {\n        if (args.length !== 3) {\n            return context.error(`Expected 2 arguments, but found ${ args.length - 1 } instead.`);\n        }\n        const needle = context.parse(args[1], 1, ValueType);\n        const haystack = context.parse(args[2], 2, ValueType);\n        if (!needle || !haystack)\n            return null;\n        if (!isValidType(needle.type, [\n                BooleanType,\n                StringType,\n                NumberType,\n                NullType,\n                ValueType\n            ])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${ toString$1(needle.type) } instead`);\n        }\n        return new In(needle, haystack);\n    }\n    evaluate(ctx) {\n        const needle = this.needle.evaluate(ctx);\n        const haystack = this.haystack.evaluate(ctx);\n        if (haystack == null)\n            return false;\n        if (!isValidNativeType(needle, [\n                'boolean',\n                'string',\n                'number',\n                'null'\n            ])) {\n            throw new RuntimeError$1(`Expected first argument to be of type boolean, string, number or null, but found ${ toString$1(typeOf(needle)) } instead.`);\n        }\n        if (!isValidNativeType(haystack, [\n                'string',\n                'array'\n            ])) {\n            throw new RuntimeError$1(`Expected second argument to be of type array or string, but found ${ toString$1(typeOf(haystack)) } instead.`);\n        }\n        return haystack.indexOf(needle) >= 0;\n    }\n    eachChild(fn) {\n        fn(this.needle);\n        fn(this.haystack);\n    }\n    outputDefined() {\n        return true;\n    }\n    serialize() {\n        return [\n            'in',\n            this.needle.serialize(),\n            this.haystack.serialize()\n        ];\n    }\n}\nvar In$1 = In;\n\n//      \nclass IndexOf {\n    constructor(needle, haystack, fromIndex) {\n        this.type = NumberType;\n        this.needle = needle;\n        this.haystack = haystack;\n        this.fromIndex = fromIndex;\n    }\n    static parse(args, context) {\n        if (args.length <= 2 || args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${ args.length - 1 } instead.`);\n        }\n        const needle = context.parse(args[1], 1, ValueType);\n        const haystack = context.parse(args[2], 2, ValueType);\n        if (!needle || !haystack)\n            return null;\n        if (!isValidType(needle.type, [\n                BooleanType,\n                StringType,\n                NumberType,\n                NullType,\n                ValueType\n            ])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${ toString$1(needle.type) } instead`);\n        }\n        if (args.length === 4) {\n            const fromIndex = context.parse(args[3], 3, NumberType);\n            if (!fromIndex)\n                return null;\n            return new IndexOf(needle, haystack, fromIndex);\n        } else {\n            return new IndexOf(needle, haystack);\n        }\n    }\n    evaluate(ctx) {\n        const needle = this.needle.evaluate(ctx);\n        const haystack = this.haystack.evaluate(ctx);\n        if (!isValidNativeType(needle, [\n                'boolean',\n                'string',\n                'number',\n                'null'\n            ])) {\n            throw new RuntimeError$1(`Expected first argument to be of type boolean, string, number or null, but found ${ toString$1(typeOf(needle)) } instead.`);\n        }\n        if (!isValidNativeType(haystack, [\n                'string',\n                'array'\n            ])) {\n            throw new RuntimeError$1(`Expected second argument to be of type array or string, but found ${ toString$1(typeOf(haystack)) } instead.`);\n        }\n        if (this.fromIndex) {\n            const fromIndex = this.fromIndex.evaluate(ctx);\n            return haystack.indexOf(needle, fromIndex);\n        }\n        return haystack.indexOf(needle);\n    }\n    eachChild(fn) {\n        fn(this.needle);\n        fn(this.haystack);\n        if (this.fromIndex) {\n            fn(this.fromIndex);\n        }\n    }\n    outputDefined() {\n        return false;\n    }\n    serialize() {\n        if (this.fromIndex != null && this.fromIndex !== undefined) {\n            const fromIndex = this.fromIndex.serialize();\n            return [\n                'index-of',\n                this.needle.serialize(),\n                this.haystack.serialize(),\n                fromIndex\n            ];\n        }\n        return [\n            'index-of',\n            this.needle.serialize(),\n            this.haystack.serialize()\n        ];\n    }\n}\nvar IndexOf$1 = IndexOf;\n\n// Map input label values to output expression index\nclass Match {\n    constructor(inputType, outputType, input, cases, outputs, otherwise) {\n        this.inputType = inputType;\n        this.type = outputType;\n        this.input = input;\n        this.cases = cases;\n        this.outputs = outputs;\n        this.otherwise = otherwise;\n    }\n    static parse(args, context) {\n        if (args.length < 5)\n            return context.error(`Expected at least 4 arguments, but found only ${ args.length - 1 }.`);\n        if (args.length % 2 !== 1)\n            return context.error(`Expected an even number of arguments.`);\n        let inputType;\n        let outputType;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        const cases = {};\n        const outputs = [];\n        for (let i = 2; i < args.length - 1; i += 2) {\n            let labels = args[i];\n            const value = args[i + 1];\n            if (!Array.isArray(labels)) {\n                labels = [labels];\n            }\n            const labelContext = context.concat(i);\n            if (labels.length === 0) {\n                return labelContext.error('Expected at least one branch label.');\n            }\n            for (const label of labels) {\n                if (typeof label !== 'number' && typeof label !== 'string') {\n                    return labelContext.error(`Branch labels must be numbers or strings.`);\n                } else if (typeof label === 'number' && Math.abs(label) > Number.MAX_SAFE_INTEGER) {\n                    return labelContext.error(`Branch labels must be integers no larger than ${ Number.MAX_SAFE_INTEGER }.`);\n                } else if (typeof label === 'number' && Math.floor(label) !== label) {\n                    return labelContext.error(`Numeric branch labels must be integer values.`);\n                } else if (!inputType) {\n                    inputType = typeOf(label);\n                } else if (labelContext.checkSubtype(inputType, typeOf(label))) {\n                    return null;\n                }\n                if (typeof cases[String(label)] !== 'undefined') {\n                    return labelContext.error('Branch labels must be unique.');\n                }\n                cases[String(label)] = outputs.length;\n            }\n            const result = context.parse(value, i, outputType);\n            if (!result)\n                return null;\n            outputType = outputType || result.type;\n            outputs.push(result);\n        }\n        const input = context.parse(args[1], 1, ValueType);\n        if (!input)\n            return null;\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise)\n            return null;\n        if (input.type.kind !== 'value' && context.concat(1).checkSubtype(inputType, input.type)) {\n            return null;\n        }\n        return new Match(inputType, outputType, input, cases, outputs, otherwise);\n    }\n    evaluate(ctx) {\n        const input = this.input.evaluate(ctx);\n        const output = typeOf(input) === this.inputType && this.outputs[this.cases[input]] || this.otherwise;\n        return output.evaluate(ctx);\n    }\n    eachChild(fn) {\n        fn(this.input);\n        this.outputs.forEach(fn);\n        fn(this.otherwise);\n    }\n    outputDefined() {\n        return this.outputs.every(out => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n    serialize() {\n        const serialized = [\n            'match',\n            this.input.serialize()\n        ];\n        // Sort so serialization has an arbitrary defined order, even though\n        // branch order doesn't affect evaluation\n        const sortedLabels = Object.keys(this.cases).sort();\n        // Group branches by unique match expression to support condensed\n        // serializations of the form [case1, case2, ...] -> matchExpression\n        const groupedByOutput = [];\n        const outputLookup = {};\n        // lookup index into groupedByOutput for a given output expression\n        for (const label of sortedLabels) {\n            const outputIndex = outputLookup[this.cases[label]];\n            if (outputIndex === undefined) {\n                // First time seeing this output, add it to the end of the grouped list\n                outputLookup[this.cases[label]] = groupedByOutput.length;\n                groupedByOutput.push([\n                    this.cases[label],\n                    [label]\n                ]);\n            } else {\n                // We've seen this expression before, add the label to that output's group\n                groupedByOutput[outputIndex][1].push(label);\n            }\n        }\n        const coerceLabel = label => this.inputType.kind === 'number' ? Number(label) : label;\n        for (const [outputIndex, labels] of groupedByOutput) {\n            if (labels.length === 1) {\n                // Only a single label matches this output expression\n                serialized.push(coerceLabel(labels[0]));\n            } else {\n                // Array of literal labels pointing to this output expression\n                serialized.push(labels.map(coerceLabel));\n            }\n            serialized.push(this.outputs[outputIndex].serialize());\n        }\n        serialized.push(this.otherwise.serialize());\n        return serialized;\n    }\n}\nvar Match$1 = Match;\n\nclass Case {\n    constructor(type, branches, otherwise) {\n        this.type = type;\n        this.branches = branches;\n        this.otherwise = otherwise;\n    }\n    static parse(args, context) {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found only ${ args.length - 1 }.`);\n        if (args.length % 2 !== 0)\n            return context.error(`Expected an odd number of arguments.`);\n        let outputType;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        const branches = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const test = context.parse(args[i], i, BooleanType);\n            if (!test)\n                return null;\n            const result = context.parse(args[i + 1], i + 1, outputType);\n            if (!result)\n                return null;\n            branches.push([\n                test,\n                result\n            ]);\n            outputType = outputType || result.type;\n        }\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise)\n            return null;\n        return new Case(outputType, branches, otherwise);\n    }\n    evaluate(ctx) {\n        for (const [test, expression] of this.branches) {\n            if (test.evaluate(ctx)) {\n                return expression.evaluate(ctx);\n            }\n        }\n        return this.otherwise.evaluate(ctx);\n    }\n    eachChild(fn) {\n        for (const [test, expression] of this.branches) {\n            fn(test);\n            fn(expression);\n        }\n        fn(this.otherwise);\n    }\n    outputDefined() {\n        return this.branches.every(([_, out]) => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n    serialize() {\n        const serialized = ['case'];\n        this.eachChild(child => {\n            serialized.push(child.serialize());\n        });\n        return serialized;\n    }\n}\nvar Case$1 = Case;\n\n//      \nclass Slice {\n    constructor(type, input, beginIndex, endIndex) {\n        this.type = type;\n        this.input = input;\n        this.beginIndex = beginIndex;\n        this.endIndex = endIndex;\n    }\n    static parse(args, context) {\n        if (args.length <= 2 || args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${ args.length - 1 } instead.`);\n        }\n        const input = context.parse(args[1], 1, ValueType);\n        const beginIndex = context.parse(args[2], 2, NumberType);\n        if (!input || !beginIndex)\n            return null;\n        if (!isValidType(input.type, [\n                array$1(ValueType),\n                StringType,\n                ValueType\n            ])) {\n            return context.error(`Expected first argument to be of type array or string, but found ${ toString$1(input.type) } instead`);\n        }\n        if (args.length === 4) {\n            const endIndex = context.parse(args[3], 3, NumberType);\n            if (!endIndex)\n                return null;\n            return new Slice(input.type, input, beginIndex, endIndex);\n        } else {\n            return new Slice(input.type, input, beginIndex);\n        }\n    }\n    evaluate(ctx) {\n        const input = this.input.evaluate(ctx);\n        const beginIndex = this.beginIndex.evaluate(ctx);\n        if (!isValidNativeType(input, [\n                'string',\n                'array'\n            ])) {\n            throw new RuntimeError$1(`Expected first argument to be of type array or string, but found ${ toString$1(typeOf(input)) } instead.`);\n        }\n        if (this.endIndex) {\n            const endIndex = this.endIndex.evaluate(ctx);\n            return input.slice(beginIndex, endIndex);\n        }\n        return input.slice(beginIndex);\n    }\n    eachChild(fn) {\n        fn(this.input);\n        fn(this.beginIndex);\n        if (this.endIndex) {\n            fn(this.endIndex);\n        }\n    }\n    outputDefined() {\n        return false;\n    }\n    serialize() {\n        if (this.endIndex != null && this.endIndex !== undefined) {\n            const endIndex = this.endIndex.serialize();\n            return [\n                'slice',\n                this.input.serialize(),\n                this.beginIndex.serialize(),\n                endIndex\n            ];\n        }\n        return [\n            'slice',\n            this.input.serialize(),\n            this.beginIndex.serialize()\n        ];\n    }\n}\nvar Slice$1 = Slice;\n\n//      \nfunction isComparableType(op, type) {\n    if (op === '==' || op === '!=') {\n        // equality operator\n        return type.kind === 'boolean' || type.kind === 'string' || type.kind === 'number' || type.kind === 'null' || type.kind === 'value';\n    } else {\n        // ordering operator\n        return type.kind === 'string' || type.kind === 'number' || type.kind === 'value';\n    }\n}\nfunction eq(ctx, a, b) {\n    return a === b;\n}\nfunction neq(ctx, a, b) {\n    return a !== b;\n}\nfunction lt(ctx, a, b) {\n    return a < b;\n}\nfunction gt(ctx, a, b) {\n    return a > b;\n}\nfunction lteq(ctx, a, b) {\n    return a <= b;\n}\nfunction gteq(ctx, a, b) {\n    return a >= b;\n}\nfunction eqCollate(ctx, a, b, c) {\n    return c.compare(a, b) === 0;\n}\nfunction neqCollate(ctx, a, b, c) {\n    return !eqCollate(ctx, a, b, c);\n}\nfunction ltCollate(ctx, a, b, c) {\n    return c.compare(a, b) < 0;\n}\nfunction gtCollate(ctx, a, b, c) {\n    return c.compare(a, b) > 0;\n}\nfunction lteqCollate(ctx, a, b, c) {\n    return c.compare(a, b) <= 0;\n}\nfunction gteqCollate(ctx, a, b, c) {\n    return c.compare(a, b) >= 0;\n}\n/**\n * Special form for comparison operators, implementing the signatures:\n * - (T, T, ?Collator) => boolean\n * - (T, value, ?Collator) => boolean\n * - (value, T, ?Collator) => boolean\n *\n * For inequalities, T must be either value, string, or number. For ==/!=, it\n * can also be boolean or null.\n *\n * Equality semantics are equivalent to Javascript's strict equality (===/!==)\n * -- i.e., when the arguments' types don't match, == evaluates to false, != to\n * true.\n *\n * When types don't match in an ordering comparison, a runtime error is thrown.\n *\n * @private\n */\nfunction makeComparison(op, compareBasic, compareWithCollator) {\n    const isOrderComparison = op !== '==' && op !== '!=';\n    return class Comparison {\n        constructor(lhs, rhs, collator) {\n            this.type = BooleanType;\n            this.lhs = lhs;\n            this.rhs = rhs;\n            this.collator = collator;\n            this.hasUntypedArgument = lhs.type.kind === 'value' || rhs.type.kind === 'value';\n        }\n        static parse(args, context) {\n            if (args.length !== 3 && args.length !== 4)\n                return context.error(`Expected two or three arguments.`);\n            const op = args[0];\n            let lhs = context.parse(args[1], 1, ValueType);\n            if (!lhs)\n                return null;\n            if (!isComparableType(op, lhs.type)) {\n                return context.concat(1).error(`\"${ op }\" comparisons are not supported for type '${ toString$1(lhs.type) }'.`);\n            }\n            let rhs = context.parse(args[2], 2, ValueType);\n            if (!rhs)\n                return null;\n            if (!isComparableType(op, rhs.type)) {\n                return context.concat(2).error(`\"${ op }\" comparisons are not supported for type '${ toString$1(rhs.type) }'.`);\n            }\n            if (lhs.type.kind !== rhs.type.kind && lhs.type.kind !== 'value' && rhs.type.kind !== 'value') {\n                return context.error(`Cannot compare types '${ toString$1(lhs.type) }' and '${ toString$1(rhs.type) }'.`);\n            }\n            if (isOrderComparison) {\n                // typing rules specific to less/greater than operators\n                if (lhs.type.kind === 'value' && rhs.type.kind !== 'value') {\n                    // (value, T)\n                    lhs = new Assertion$1(rhs.type, [lhs]);\n                } else if (lhs.type.kind !== 'value' && rhs.type.kind === 'value') {\n                    // (T, value)\n                    rhs = new Assertion$1(lhs.type, [rhs]);\n                }\n            }\n            let collator = null;\n            if (args.length === 4) {\n                if (lhs.type.kind !== 'string' && rhs.type.kind !== 'string' && lhs.type.kind !== 'value' && rhs.type.kind !== 'value') {\n                    return context.error(`Cannot use collator to compare non-string types.`);\n                }\n                collator = context.parse(args[3], 3, CollatorType);\n                if (!collator)\n                    return null;\n            }\n            return new Comparison(lhs, rhs, collator);\n        }\n        evaluate(ctx) {\n            const lhs = this.lhs.evaluate(ctx);\n            const rhs = this.rhs.evaluate(ctx);\n            if (isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                // check that type is string or number, and equal\n                if (lt.kind !== rt.kind || !(lt.kind === 'string' || lt.kind === 'number')) {\n                    throw new RuntimeError$1(`Expected arguments for \"${ op }\" to be (string, string) or (number, number), but found (${ lt.kind }, ${ rt.kind }) instead.`);\n                }\n            }\n            if (this.collator && !isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                if (lt.kind !== 'string' || rt.kind !== 'string') {\n                    return compareBasic(ctx, lhs, rhs);\n                }\n            }\n            return this.collator ? compareWithCollator(ctx, lhs, rhs, this.collator.evaluate(ctx)) : compareBasic(ctx, lhs, rhs);\n        }\n        eachChild(fn) {\n            fn(this.lhs);\n            fn(this.rhs);\n            if (this.collator) {\n                fn(this.collator);\n            }\n        }\n        outputDefined() {\n            return true;\n        }\n        serialize() {\n            const serialized = [op];\n            this.eachChild(child => {\n                serialized.push(child.serialize());\n            });\n            return serialized;\n        }\n    };\n}\nconst Equals = makeComparison('==', eq, eqCollate);\nconst NotEquals = makeComparison('!=', neq, neqCollate);\nconst LessThan = makeComparison('<', lt, ltCollate);\nconst GreaterThan = makeComparison('>', gt, gtCollate);\nconst LessThanOrEqual = makeComparison('<=', lteq, lteqCollate);\nconst GreaterThanOrEqual = makeComparison('>=', gteq, gteqCollate);\n\n//      \nclass NumberFormat {\n    // BCP 47 language tag\n    // ISO 4217 currency code, required if style=currency\n    // Simple units sanctioned for use in ECMAScript, required if style=unit. https://tc39.es/proposal-unified-intl-numberformat/section6/locales-currencies-tz_proposed_out.html#sec-issanctionedsimpleunitidentifier\n    // Default 0\n    // Default 3\n    constructor(number, locale, currency, unit, minFractionDigits, maxFractionDigits) {\n        this.type = StringType;\n        this.number = number;\n        this.locale = locale;\n        this.currency = currency;\n        this.unit = unit;\n        this.minFractionDigits = minFractionDigits;\n        this.maxFractionDigits = maxFractionDigits;\n    }\n    static parse(args, context) {\n        if (args.length !== 3)\n            return context.error(`Expected two arguments.`);\n        const number = context.parse(args[1], 1, NumberType);\n        if (!number)\n            return null;\n        const options = args[2];\n        if (typeof options !== 'object' || Array.isArray(options))\n            return context.error(`NumberFormat options argument must be an object.`);\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale)\n                return null;\n        }\n        let currency = null;\n        if (options['currency']) {\n            currency = context.parse(options['currency'], 1, StringType);\n            if (!currency)\n                return null;\n        }\n        let unit = null;\n        if (options['unit']) {\n            unit = context.parse(options['unit'], 1, StringType);\n            if (!unit)\n                return null;\n        }\n        let minFractionDigits = null;\n        if (options['min-fraction-digits']) {\n            minFractionDigits = context.parse(options['min-fraction-digits'], 1, NumberType);\n            if (!minFractionDigits)\n                return null;\n        }\n        let maxFractionDigits = null;\n        if (options['max-fraction-digits']) {\n            maxFractionDigits = context.parse(options['max-fraction-digits'], 1, NumberType);\n            if (!maxFractionDigits)\n                return null;\n        }\n        return new NumberFormat(number, locale, currency, unit, minFractionDigits, maxFractionDigits);\n    }\n    evaluate(ctx) {\n        return new Intl.NumberFormat(this.locale ? this.locale.evaluate(ctx) : [], {\n            style: this.currency && 'currency' || this.unit && 'unit' || 'decimal',\n            currency: this.currency ? this.currency.evaluate(ctx) : undefined,\n            unit: this.unit ? this.unit.evaluate(ctx) : undefined,\n            minimumFractionDigits: this.minFractionDigits ? this.minFractionDigits.evaluate(ctx) : undefined,\n            maximumFractionDigits: this.maxFractionDigits ? this.maxFractionDigits.evaluate(ctx) : undefined\n        }).format(this.number.evaluate(ctx));\n    }\n    eachChild(fn) {\n        fn(this.number);\n        if (this.locale) {\n            fn(this.locale);\n        }\n        if (this.currency) {\n            fn(this.currency);\n        }\n        if (this.unit) {\n            fn(this.unit);\n        }\n        if (this.minFractionDigits) {\n            fn(this.minFractionDigits);\n        }\n        if (this.maxFractionDigits) {\n            fn(this.maxFractionDigits);\n        }\n    }\n    outputDefined() {\n        return false;\n    }\n    serialize() {\n        const options = {};\n        if (this.locale) {\n            options['locale'] = this.locale.serialize();\n        }\n        if (this.currency) {\n            options['currency'] = this.currency.serialize();\n        }\n        if (this.unit) {\n            options['unit'] = this.unit.serialize();\n        }\n        if (this.minFractionDigits) {\n            options['min-fraction-digits'] = this.minFractionDigits.serialize();\n        }\n        if (this.maxFractionDigits) {\n            options['max-fraction-digits'] = this.maxFractionDigits.serialize();\n        }\n        return [\n            'number-format',\n            this.number.serialize(),\n            options\n        ];\n    }\n}\n\n//      \nclass Length {\n    constructor(input) {\n        this.type = NumberType;\n        this.input = input;\n    }\n    static parse(args, context) {\n        if (args.length !== 2)\n            return context.error(`Expected 1 argument, but found ${ args.length - 1 } instead.`);\n        const input = context.parse(args[1], 1);\n        if (!input)\n            return null;\n        if (input.type.kind !== 'array' && input.type.kind !== 'string' && input.type.kind !== 'value')\n            return context.error(`Expected argument of type string or array, but found ${ toString$1(input.type) } instead.`);\n        return new Length(input);\n    }\n    evaluate(ctx) {\n        const input = this.input.evaluate(ctx);\n        if (typeof input === 'string') {\n            return input.length;\n        } else if (Array.isArray(input)) {\n            return input.length;\n        } else {\n            throw new RuntimeError$1(`Expected value to be of type string or array, but found ${ toString$1(typeOf(input)) } instead.`);\n        }\n    }\n    eachChild(fn) {\n        fn(this.input);\n    }\n    outputDefined() {\n        return false;\n    }\n    serialize() {\n        const serialized = ['length'];\n        this.eachChild(child => {\n            serialized.push(child.serialize());\n        });\n        return serialized;\n    }\n}\nvar Length$1 = Length;\n\n//      \nconst expressions = {\n    // special forms\n    '==': Equals,\n    '!=': NotEquals,\n    '>': GreaterThan,\n    '<': LessThan,\n    '>=': GreaterThanOrEqual,\n    '<=': LessThanOrEqual,\n    'array': Assertion$1,\n    'at': At$1,\n    'boolean': Assertion$1,\n    'case': Case$1,\n    'coalesce': Coalesce$1,\n    'collator': CollatorExpression,\n    'format': FormatExpression,\n    'image': ImageExpression,\n    'in': In$1,\n    'index-of': IndexOf$1,\n    'interpolate': Interpolate$1,\n    'interpolate-hcl': Interpolate$1,\n    'interpolate-lab': Interpolate$1,\n    'length': Length$1,\n    'let': Let$1,\n    'literal': Literal$1,\n    'match': Match$1,\n    'number': Assertion$1,\n    'number-format': NumberFormat,\n    'object': Assertion$1,\n    'slice': Slice$1,\n    'step': Step$1,\n    'string': Assertion$1,\n    'to-boolean': Coercion$1,\n    'to-color': Coercion$1,\n    'to-number': Coercion$1,\n    'to-string': Coercion$1,\n    'var': Var$1,\n    'within': Within$1\n};\nfunction rgba(ctx, [r, g, b, a]) {\n    r = r.evaluate(ctx);\n    g = g.evaluate(ctx);\n    b = b.evaluate(ctx);\n    const alpha = a ? a.evaluate(ctx) : 1;\n    const error = validateRGBA(r, g, b, alpha);\n    if (error)\n        throw new RuntimeError$1(error);\n    return new Color$1(r / 255 * alpha, g / 255 * alpha, b / 255 * alpha, alpha);\n}\nfunction has(key, obj) {\n    return key in obj;\n}\nfunction get(key, obj) {\n    const v = obj[key];\n    return typeof v === 'undefined' ? null : v;\n}\nfunction binarySearch(v, a, i, j) {\n    while (i <= j) {\n        const m = i + j >> 1;\n        if (a[m] === v)\n            return true;\n        if (a[m] > v)\n            j = m - 1;\n        else\n            i = m + 1;\n    }\n    return false;\n}\nfunction varargs(type) {\n    return { type };\n}\nCompoundExpression$1.register(expressions, {\n    'error': [\n        ErrorType,\n        [StringType],\n        (ctx, [v]) => {\n            throw new RuntimeError$1(v.evaluate(ctx));\n        }\n    ],\n    'typeof': [\n        StringType,\n        [ValueType],\n        (ctx, [v]) => toString$1(typeOf(v.evaluate(ctx)))\n    ],\n    'to-rgba': [\n        array$1(NumberType, 4),\n        [ColorType],\n        (ctx, [v]) => {\n            return v.evaluate(ctx).toArray();\n        }\n    ],\n    'rgb': [\n        ColorType,\n        [\n            NumberType,\n            NumberType,\n            NumberType\n        ],\n        rgba\n    ],\n    'rgba': [\n        ColorType,\n        [\n            NumberType,\n            NumberType,\n            NumberType,\n            NumberType\n        ],\n        rgba\n    ],\n    'has': {\n        type: BooleanType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => has(key.evaluate(ctx), ctx.properties())\n            ],\n            [\n                [\n                    StringType,\n                    ObjectType\n                ],\n                (ctx, [key, obj]) => has(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'get': {\n        type: ValueType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => get(key.evaluate(ctx), ctx.properties())\n            ],\n            [\n                [\n                    StringType,\n                    ObjectType\n                ],\n                (ctx, [key, obj]) => get(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'feature-state': [\n        ValueType,\n        [StringType],\n        (ctx, [key]) => get(key.evaluate(ctx), ctx.featureState || {})\n    ],\n    'properties': [\n        ObjectType,\n        [],\n        ctx => ctx.properties()\n    ],\n    'geometry-type': [\n        StringType,\n        [],\n        ctx => ctx.geometryType()\n    ],\n    'id': [\n        ValueType,\n        [],\n        ctx => ctx.id()\n    ],\n    'zoom': [\n        NumberType,\n        [],\n        ctx => ctx.globals.zoom\n    ],\n    'pitch': [\n        NumberType,\n        [],\n        ctx => ctx.globals.pitch || 0\n    ],\n    'distance-from-center': [\n        NumberType,\n        [],\n        ctx => ctx.distanceFromCenter()\n    ],\n    'heatmap-density': [\n        NumberType,\n        [],\n        ctx => ctx.globals.heatmapDensity || 0\n    ],\n    'line-progress': [\n        NumberType,\n        [],\n        ctx => ctx.globals.lineProgress || 0\n    ],\n    'sky-radial-progress': [\n        NumberType,\n        [],\n        ctx => ctx.globals.skyRadialProgress || 0\n    ],\n    'accumulated': [\n        ValueType,\n        [],\n        ctx => ctx.globals.accumulated === undefined ? null : ctx.globals.accumulated\n    ],\n    '+': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 0;\n            for (const arg of args) {\n                result += arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '*': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 1;\n            for (const arg of args) {\n                result *= arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '-': {\n        type: NumberType,\n        overloads: [\n            [\n                [\n                    NumberType,\n                    NumberType\n                ],\n                (ctx, [a, b]) => a.evaluate(ctx) - b.evaluate(ctx)\n            ],\n            [\n                [NumberType],\n                (ctx, [a]) => -a.evaluate(ctx)\n            ]\n        ]\n    },\n    '/': [\n        NumberType,\n        [\n            NumberType,\n            NumberType\n        ],\n        (ctx, [a, b]) => a.evaluate(ctx) / b.evaluate(ctx)\n    ],\n    '%': [\n        NumberType,\n        [\n            NumberType,\n            NumberType\n        ],\n        (ctx, [a, b]) => a.evaluate(ctx) % b.evaluate(ctx)\n    ],\n    'ln2': [\n        NumberType,\n        [],\n        () => Math.LN2\n    ],\n    'pi': [\n        NumberType,\n        [],\n        () => Math.PI\n    ],\n    'e': [\n        NumberType,\n        [],\n        () => Math.E\n    ],\n    '^': [\n        NumberType,\n        [\n            NumberType,\n            NumberType\n        ],\n        (ctx, [b, e]) => Math.pow(b.evaluate(ctx), e.evaluate(ctx))\n    ],\n    'sqrt': [\n        NumberType,\n        [NumberType],\n        (ctx, [x]) => Math.sqrt(x.evaluate(ctx))\n    ],\n    'log10': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN10\n    ],\n    'ln': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx))\n    ],\n    'log2': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN2\n    ],\n    'sin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.sin(n.evaluate(ctx))\n    ],\n    'cos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.cos(n.evaluate(ctx))\n    ],\n    'tan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.tan(n.evaluate(ctx))\n    ],\n    'asin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.asin(n.evaluate(ctx))\n    ],\n    'acos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.acos(n.evaluate(ctx))\n    ],\n    'atan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.atan(n.evaluate(ctx))\n    ],\n    'min': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.min(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'max': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.max(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'abs': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.abs(n.evaluate(ctx))\n    ],\n    'round': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => {\n            const v = n.evaluate(ctx);\n            // Javascript's Math.round() rounds towards +Infinity for halfway\n            // values, even when they're negative. It's more common to round\n            // away from 0 (e.g., this is what python and C++ do)\n            return v < 0 ? -Math.round(-v) : Math.round(v);\n        }\n    ],\n    'floor': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.floor(n.evaluate(ctx))\n    ],\n    'ceil': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.ceil(n.evaluate(ctx))\n    ],\n    'filter-==': [\n        BooleanType,\n        [\n            StringType,\n            ValueType\n        ],\n        (ctx, [k, v]) => ctx.properties()[k.value] === v.value\n    ],\n    'filter-id-==': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => ctx.id() === v.value\n    ],\n    'filter-type-==': [\n        BooleanType,\n        [StringType],\n        (ctx, [v]) => ctx.geometryType() === v.value\n    ],\n    'filter-<': [\n        BooleanType,\n        [\n            StringType,\n            ValueType\n        ],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter-id-<': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter->': [\n        BooleanType,\n        [\n            StringType,\n            ValueType\n        ],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-id->': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-<=': [\n        BooleanType,\n        [\n            StringType,\n            ValueType\n        ],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter-id-<=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter->=': [\n        BooleanType,\n        [\n            StringType,\n            ValueType\n        ],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[k.value];\n            const b = v.value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-id->=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = v.value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-has': [\n        BooleanType,\n        [ValueType],\n        (ctx, [k]) => k.value in ctx.properties()\n    ],\n    'filter-has-id': [\n        BooleanType,\n        [],\n        ctx => ctx.id() !== null && ctx.id() !== undefined\n    ],\n    'filter-type-in': [\n        BooleanType,\n        [array$1(StringType)],\n        (ctx, [v]) => v.value.indexOf(ctx.geometryType()) >= 0\n    ],\n    'filter-id-in': [\n        BooleanType,\n        [array$1(ValueType)],\n        (ctx, [v]) => v.value.indexOf(ctx.id()) >= 0\n    ],\n    'filter-in-small': [\n        BooleanType,\n        [\n            StringType,\n            array$1(ValueType)\n        ],\n        // assumes v is an array literal\n        (ctx, [k, v]) => v.value.indexOf(ctx.properties()[k.value]) >= 0\n    ],\n    'filter-in-large': [\n        BooleanType,\n        [\n            StringType,\n            array$1(ValueType)\n        ],\n        // assumes v is a array literal with values sorted in ascending order and of a single type\n        (ctx, [k, v]) => binarySearch(ctx.properties()[k.value], v.value, 0, v.value.length - 1)\n    ],\n    'all': {\n        type: BooleanType,\n        overloads: [\n            [\n                [\n                    BooleanType,\n                    BooleanType\n                ],\n                (ctx, [a, b]) => a.evaluate(ctx) && b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (!arg.evaluate(ctx))\n                            return false;\n                    }\n                    return true;\n                }\n            ]\n        ]\n    },\n    'any': {\n        type: BooleanType,\n        overloads: [\n            [\n                [\n                    BooleanType,\n                    BooleanType\n                ],\n                (ctx, [a, b]) => a.evaluate(ctx) || b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (arg.evaluate(ctx))\n                            return true;\n                    }\n                    return false;\n                }\n            ]\n        ]\n    },\n    '!': [\n        BooleanType,\n        [BooleanType],\n        (ctx, [b]) => !b.evaluate(ctx)\n    ],\n    'is-supported-script': [\n        BooleanType,\n        [StringType],\n        // At parse time this will always return true, so we need to exclude this expression with isGlobalPropertyConstant\n        (ctx, [s]) => {\n            const isSupportedScript = ctx.globals && ctx.globals.isSupportedScript;\n            if (isSupportedScript) {\n                return isSupportedScript(s.evaluate(ctx));\n            }\n            return true;\n        }\n    ],\n    'upcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toUpperCase()\n    ],\n    'downcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toLowerCase()\n    ],\n    'concat': [\n        StringType,\n        varargs(ValueType),\n        (ctx, args) => args.map(arg => toString(arg.evaluate(ctx))).join('')\n    ],\n    'resolved-locale': [\n        StringType,\n        [CollatorType],\n        (ctx, [collator]) => collator.evaluate(ctx).resolvedLocale()\n    ]\n});\nvar definitions = expressions;\n\n//      \n/**\n * A type used for returning and propagating errors. The first element of the union\n * represents success and contains a value, and the second represents an error and\n * contains an error value.\n * @private\n */\nfunction success(value) {\n    return {\n        result: 'success',\n        value\n    };\n}\nfunction error(value) {\n    return {\n        result: 'error',\n        value\n    };\n}\n\n//      \nfunction supportsPropertyExpression(spec) {\n    return spec['property-type'] === 'data-driven';\n}\nfunction supportsZoomExpression(spec) {\n    return !!spec.expression && spec.expression.parameters.indexOf('zoom') > -1;\n}\nfunction supportsInterpolation(spec) {\n    return !!spec.expression && spec.expression.interpolated;\n}\n\nfunction isFunction(value) {\n    return typeof value === 'object' && value !== null && !Array.isArray(value);\n}\n\nclass StyleExpression {\n    constructor(expression, propertySpec) {\n        this.expression = expression;\n        this._warningHistory = {};\n        this._evaluator = new EvaluationContext$1();\n        this._defaultValue = propertySpec ? getDefaultValue(propertySpec) : null;\n        this._enumValues = propertySpec && propertySpec.type === 'enum' ? propertySpec.values : null;\n    }\n    evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection, featureTileCoord, featureDistanceData) {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature;\n        this._evaluator.featureState = featureState;\n        this._evaluator.canonical = canonical || null;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection;\n        this._evaluator.featureTileCoord = featureTileCoord || null;\n        this._evaluator.featureDistanceData = featureDistanceData || null;\n        return this.expression.evaluate(this._evaluator);\n    }\n    evaluate(globals, feature, featureState, canonical, availableImages, formattedSection, featureTileCoord, featureDistanceData) {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature || null;\n        this._evaluator.featureState = featureState || null;\n        this._evaluator.canonical = canonical || null;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection || null;\n        this._evaluator.featureTileCoord = featureTileCoord || null;\n        this._evaluator.featureDistanceData = featureDistanceData || null;\n        try {\n            const val = this.expression.evaluate(this._evaluator);\n            // eslint-disable-next-line no-self-compare\n            if (val === null || val === undefined || typeof val === 'number' && val !== val) {\n                return this._defaultValue;\n            }\n            if (this._enumValues && !(val in this._enumValues)) {\n                throw new RuntimeError$1(`Expected value to be one of ${ Object.keys(this._enumValues).map(v => JSON.stringify(v)).join(', ') }, but found ${ JSON.stringify(val) } instead.`);\n            }\n            return val;\n        } catch (e) {\n            if (!this._warningHistory[e.message]) {\n                this._warningHistory[e.message] = true;\n                if (typeof console !== 'undefined') {\n                    console.warn(e.message);\n                }\n            }\n            return this._defaultValue;\n        }\n    }\n}\nfunction isExpression(expression) {\n    return Array.isArray(expression) && expression.length > 0 && typeof expression[0] === 'string' && expression[0] in definitions;\n}\n/**\n * Parse and typecheck the given style spec JSON expression.  If\n * options.defaultValue is provided, then the resulting StyleExpression's\n * `evaluate()` method will handle errors by logging a warning (once per\n * message) and returning the default value.  Otherwise, it will throw\n * evaluation errors.\n *\n * @private\n */\nfunction createExpression(expression, propertySpec) {\n    const parser = new ParsingContext$1(definitions, [], propertySpec ? getExpectedType(propertySpec) : undefined);\n    // For string-valued properties, coerce to string at the top level rather than asserting.\n    const parsed = parser.parse(expression, undefined, undefined, undefined, propertySpec && propertySpec.type === 'string' ? { typeAnnotation: 'coerce' } : undefined);\n    if (!parsed) {\n        return error(parser.errors);\n    }\n    return success(new StyleExpression(parsed, propertySpec));\n}\nclass ZoomConstantExpression {\n    constructor(kind, expression) {\n        this.kind = kind;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== 'constant' && !isStateConstant(expression.expression);\n    }\n    evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n    evaluate(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n}\nclass ZoomDependentExpression {\n    constructor(kind, expression, zoomStops, interpolationType) {\n        this.kind = kind;\n        this.zoomStops = zoomStops;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== 'camera' && !isStateConstant(expression.expression);\n        this.interpolationType = interpolationType;\n    }\n    evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n    evaluate(globals, feature, featureState, canonical, availableImages, formattedSection) {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n    interpolationFactor(input, lower, upper) {\n        if (this.interpolationType) {\n            return Interpolate$1.interpolationFactor(this.interpolationType, input, lower, upper);\n        } else {\n            return 0;\n        }\n    }\n}\nfunction createPropertyExpression(expression, propertySpec) {\n    expression = createExpression(expression, propertySpec);\n    if (expression.result === 'error') {\n        return expression;\n    }\n    const parsed = expression.value.expression;\n    const isFeatureConstant$1 = isFeatureConstant(parsed);\n    if (!isFeatureConstant$1 && !supportsPropertyExpression(propertySpec)) {\n        return error([new ParsingError$1('', 'data expressions not supported')]);\n    }\n    const isZoomConstant = isGlobalPropertyConstant(parsed, [\n        'zoom',\n        'pitch',\n        'distance-from-center'\n    ]);\n    if (!isZoomConstant && !supportsZoomExpression(propertySpec)) {\n        return error([new ParsingError$1('', 'zoom expressions not supported')]);\n    }\n    const zoomCurve = findZoomCurve(parsed);\n    if (!zoomCurve && !isZoomConstant) {\n        return error([new ParsingError$1('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.')]);\n    } else if (zoomCurve instanceof ParsingError$1) {\n        return error([zoomCurve]);\n    } else if (zoomCurve instanceof Interpolate$1 && !supportsInterpolation(propertySpec)) {\n        return error([new ParsingError$1('', '\"interpolate\" expressions cannot be used with this property')]);\n    }\n    if (!zoomCurve) {\n        return success(isFeatureConstant$1 ? new ZoomConstantExpression('constant', expression.value) : new ZoomConstantExpression('source', expression.value));\n    }\n    const interpolationType = zoomCurve instanceof Interpolate$1 ? zoomCurve.interpolation : undefined;\n    return success(isFeatureConstant$1 ? new ZoomDependentExpression('camera', expression.value, zoomCurve.labels, interpolationType) : new ZoomDependentExpression('composite', expression.value, zoomCurve.labels, interpolationType));\n}\n// Zoom-dependent expressions may only use [\"zoom\"] as the input to a top-level \"step\" or \"interpolate\"\n// expression (collectively referred to as a \"curve\"). The curve may be wrapped in one or more \"let\" or\n// \"coalesce\" expressions.\nfunction findZoomCurve(expression) {\n    let result = null;\n    if (expression instanceof Let$1) {\n        result = findZoomCurve(expression.result);\n    } else if (expression instanceof Coalesce$1) {\n        for (const arg of expression.args) {\n            result = findZoomCurve(arg);\n            if (result) {\n                break;\n            }\n        }\n    } else if ((expression instanceof Step$1 || expression instanceof Interpolate$1) && expression.input instanceof CompoundExpression$1 && expression.input.name === 'zoom') {\n        result = expression;\n    }\n    if (result instanceof ParsingError$1) {\n        return result;\n    }\n    expression.eachChild(child => {\n        const childResult = findZoomCurve(child);\n        if (childResult instanceof ParsingError$1) {\n            result = childResult;\n        } else if (!result && childResult) {\n            result = new ParsingError$1('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.');\n        } else if (result && childResult && result !== childResult) {\n            result = new ParsingError$1('', 'Only one zoom-based \"step\" or \"interpolate\" subexpression may be used in an expression.');\n        }\n    });\n    return result;\n}\nfunction getExpectedType(spec) {\n    const types = {\n        color: ColorType,\n        string: StringType,\n        number: NumberType,\n        enum: StringType,\n        boolean: BooleanType,\n        formatted: FormattedType,\n        resolvedImage: ResolvedImageType\n    };\n    if (spec.type === 'array') {\n        return array$1(types[spec.value] || ValueType, spec.length);\n    }\n    return types[spec.type];\n}\nfunction getDefaultValue(spec) {\n    if (spec.type === 'color' && (isFunction(spec.default) || Array.isArray(spec.default))) {\n        // Special case for heatmap-color: it uses the 'default:' to define a\n        // default color ramp, but createExpression expects a simple value to fall\n        // back to in case of runtime errors\n        return new Color$1(0, 0, 0, 0);\n    } else if (spec.type === 'color') {\n        return Color$1.parse(spec.default) || null;\n    } else if (spec.default === undefined) {\n        return null;\n    } else {\n        return spec.default;\n    }\n}\n\n//      \n// Turn jsonlint-lines-primitives objects into primitive objects\nfunction unbundle(value) {\n    if (value instanceof Number || value instanceof String || value instanceof Boolean) {\n        return value.valueOf();\n    } else {\n        return value;\n    }\n}\nfunction deepUnbundle(value) {\n    if (Array.isArray(value)) {\n        return value.map(deepUnbundle);\n    } else if (value instanceof Object && !(value instanceof Number || value instanceof String || value instanceof Boolean)) {\n        const unbundledValue = {};\n        for (const key in value) {\n            unbundledValue[key] = deepUnbundle(value[key]);\n        }\n        return unbundledValue;\n    }\n    return unbundle(value);\n}\n\nvar spec = {\"$version\":8,\"$root\":{\"version\":{\"required\":true,\"type\":\"enum\",\"values\":[8]},\"name\":{\"type\":\"string\"},\"metadata\":{\"type\":\"*\"},\"center\":{\"type\":\"array\",\"value\":\"number\"},\"zoom\":{\"type\":\"number\"},\"bearing\":{\"type\":\"number\",\"default\":0,\"period\":360,\"units\":\"degrees\"},\"pitch\":{\"type\":\"number\",\"default\":0,\"units\":\"degrees\"},\"light\":{\"type\":\"light\"},\"terrain\":{\"type\":\"terrain\"},\"fog\":{\"type\":\"fog\"},\"sources\":{\"required\":true,\"type\":\"sources\"},\"sprite\":{\"type\":\"string\"},\"glyphs\":{\"type\":\"string\"},\"transition\":{\"type\":\"transition\"},\"projection\":{\"type\":\"projection\"},\"layers\":{\"required\":true,\"type\":\"array\",\"value\":\"layer\"}},\"sources\":{\"*\":{\"type\":\"source\"}},\"source\":[\"source_vector\",\"source_raster\",\"source_raster_dem\",\"source_geojson\",\"source_video\",\"source_image\"],\"source_vector\":{\"type\":{\"required\":true,\"type\":\"enum\",\"values\":{\"vector\":{}}},\"url\":{\"type\":\"string\"},\"tiles\":{\"type\":\"array\",\"value\":\"string\"},\"bounds\":{\"type\":\"array\",\"value\":\"number\",\"length\":4,\"default\":[-180,-85.051129,180,85.051129]},\"scheme\":{\"type\":\"enum\",\"values\":{\"xyz\":{},\"tms\":{}},\"default\":\"xyz\"},\"minzoom\":{\"type\":\"number\",\"default\":0},\"maxzoom\":{\"type\":\"number\",\"default\":22},\"attribution\":{\"type\":\"string\"},\"promoteId\":{\"type\":\"promoteId\"},\"volatile\":{\"type\":\"boolean\",\"default\":false},\"*\":{\"type\":\"*\"}},\"source_raster\":{\"type\":{\"required\":true,\"type\":\"enum\",\"values\":{\"raster\":{}}},\"url\":{\"type\":\"string\"},\"tiles\":{\"type\":\"array\",\"value\":\"string\"},\"bounds\":{\"type\":\"array\",\"value\":\"number\",\"length\":4,\"default\":[-180,-85.051129,180,85.051129]},\"minzoom\":{\"type\":\"number\",\"default\":0},\"maxzoom\":{\"type\":\"number\",\"default\":22},\"tileSize\":{\"type\":\"number\",\"default\":512,\"units\":\"pixels\"},\"scheme\":{\"type\":\"enum\",\"values\":{\"xyz\":{},\"tms\":{}},\"default\":\"xyz\"},\"attribution\":{\"type\":\"string\"},\"volatile\":{\"type\":\"boolean\",\"default\":false},\"*\":{\"type\":\"*\"}},\"source_raster_dem\":{\"type\":{\"required\":true,\"type\":\"enum\",\"values\":{\"raster-dem\":{}}},\"url\":{\"type\":\"string\"},\"tiles\":{\"type\":\"array\",\"value\":\"string\"},\"bounds\":{\"type\":\"array\",\"value\":\"number\",\"length\":4,\"default\":[-180,-85.051129,180,85.051129]},\"minzoom\":{\"type\":\"number\",\"default\":0},\"maxzoom\":{\"type\":\"number\",\"default\":22},\"tileSize\":{\"type\":\"number\",\"default\":512,\"units\":\"pixels\"},\"attribution\":{\"type\":\"string\"},\"encoding\":{\"type\":\"enum\",\"values\":{\"terrarium\":{},\"mapbox\":{}},\"default\":\"mapbox\"},\"volatile\":{\"type\":\"boolean\",\"default\":false},\"*\":{\"type\":\"*\"}},\"source_geojson\":{\"type\":{\"required\":true,\"type\":\"enum\",\"values\":{\"geojson\":{}}},\"data\":{\"type\":\"*\"},\"maxzoom\":{\"type\":\"number\",\"default\":18},\"attribution\":{\"type\":\"string\"},\"buffer\":{\"type\":\"number\",\"default\":128,\"maximum\":512,\"minimum\":0},\"filter\":{\"type\":\"*\"},\"tolerance\":{\"type\":\"number\",\"default\":0.375},\"cluster\":{\"type\":\"boolean\",\"default\":false},\"clusterRadius\":{\"type\":\"number\",\"default\":50,\"minimum\":0},\"clusterMaxZoom\":{\"type\":\"number\"},\"clusterMinPoints\":{\"type\":\"number\"},\"clusterProperties\":{\"type\":\"*\"},\"lineMetrics\":{\"type\":\"boolean\",\"default\":false},\"generateId\":{\"type\":\"boolean\",\"default\":false},\"promoteId\":{\"type\":\"promoteId\"}},\"source_video\":{\"type\":{\"required\":true,\"type\":\"enum\",\"values\":{\"video\":{}}},\"urls\":{\"required\":true,\"type\":\"array\",\"value\":\"string\"},\"coordinates\":{\"required\":true,\"type\":\"array\",\"length\":4,\"value\":{\"type\":\"array\",\"length\":2,\"value\":\"number\"}}},\"source_image\":{\"type\":{\"required\":true,\"type\":\"enum\",\"values\":{\"image\":{}}},\"url\":{\"required\":true,\"type\":\"string\"},\"coordinates\":{\"required\":true,\"type\":\"array\",\"length\":4,\"value\":{\"type\":\"array\",\"length\":2,\"value\":\"number\"}}},\"layer\":{\"id\":{\"type\":\"string\",\"required\":true},\"type\":{\"type\":\"enum\",\"values\":{\"fill\":{},\"line\":{},\"symbol\":{},\"circle\":{},\"heatmap\":{},\"fill-extrusion\":{},\"raster\":{},\"hillshade\":{},\"background\":{},\"sky\":{}},\"required\":true},\"metadata\":{\"type\":\"*\"},\"source\":{\"type\":\"string\"},\"source-layer\":{\"type\":\"string\"},\"minzoom\":{\"type\":\"number\",\"minimum\":0,\"maximum\":24},\"maxzoom\":{\"type\":\"number\",\"minimum\":0,\"maximum\":24},\"filter\":{\"type\":\"filter\"},\"layout\":{\"type\":\"layout\"},\"paint\":{\"type\":\"paint\"}},\"layout\":[\"layout_fill\",\"layout_line\",\"layout_circle\",\"layout_heatmap\",\"layout_fill-extrusion\",\"layout_symbol\",\"layout_raster\",\"layout_hillshade\",\"layout_background\",\"layout_sky\"],\"layout_background\":{\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_sky\":{\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_fill\":{\"fill-sort-key\":{\"type\":\"number\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_circle\":{\"circle-sort-key\":{\"type\":\"number\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_heatmap\":{\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_fill-extrusion\":{\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"},\"fill-extrusion-edge-radius\":{\"type\":\"number\",\"private\":true,\"default\":0,\"minimum\":0,\"maximum\":1,\"property-type\":\"constant\"}},\"layout_line\":{\"line-cap\":{\"type\":\"enum\",\"values\":{\"butt\":{},\"round\":{},\"square\":{}},\"default\":\"butt\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"line-join\":{\"type\":\"enum\",\"values\":{\"bevel\":{},\"round\":{},\"miter\":{}},\"default\":\"miter\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"line-miter-limit\":{\"type\":\"number\",\"default\":2,\"requires\":[{\"line-join\":\"miter\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"line-round-limit\":{\"type\":\"number\",\"default\":1.05,\"requires\":[{\"line-join\":\"round\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"line-sort-key\":{\"type\":\"number\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_symbol\":{\"symbol-placement\":{\"type\":\"enum\",\"values\":{\"point\":{},\"line\":{},\"line-center\":{}},\"default\":\"point\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"symbol-spacing\":{\"type\":\"number\",\"default\":250,\"minimum\":1,\"units\":\"pixels\",\"requires\":[{\"symbol-placement\":\"line\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"symbol-avoid-edges\":{\"type\":\"boolean\",\"default\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"symbol-sort-key\":{\"type\":\"number\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"symbol-z-order\":{\"type\":\"enum\",\"values\":{\"auto\":{},\"viewport-y\":{},\"source\":{}},\"default\":\"auto\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-allow-overlap\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-ignore-placement\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-optional\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"icon-image\",\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-rotation-alignment\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{},\"auto\":{}},\"default\":\"auto\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-size\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"units\":\"factor of the original icon size\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"icon-text-fit\":{\"type\":\"enum\",\"values\":{\"none\":{},\"width\":{},\"height\":{},\"both\":{}},\"default\":\"none\",\"requires\":[\"icon-image\",\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-text-fit-padding\":{\"type\":\"array\",\"value\":\"number\",\"length\":4,\"default\":[0,0,0,0],\"units\":\"pixels\",\"requires\":[\"icon-image\",\"text-field\",{\"icon-text-fit\":[\"both\",\"width\",\"height\"]}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-image\":{\"type\":\"resolvedImage\",\"tokens\":true,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"icon-rotate\":{\"type\":\"number\",\"default\":0,\"period\":360,\"units\":\"degrees\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"icon-padding\":{\"type\":\"number\",\"default\":2,\"minimum\":0,\"units\":\"pixels\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-keep-upright\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"icon-image\",{\"icon-rotation-alignment\":\"map\"},{\"symbol-placement\":[\"line\",\"line-center\"]}],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-offset\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"icon-anchor\":{\"type\":\"enum\",\"values\":{\"center\":{},\"left\":{},\"right\":{},\"top\":{},\"bottom\":{},\"top-left\":{},\"top-right\":{},\"bottom-left\":{},\"bottom-right\":{}},\"default\":\"center\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"icon-pitch-alignment\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{},\"auto\":{}},\"default\":\"auto\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-pitch-alignment\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{},\"auto\":{}},\"default\":\"auto\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-rotation-alignment\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{},\"auto\":{}},\"default\":\"auto\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-field\":{\"type\":\"formatted\",\"default\":\"\",\"tokens\":true,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-font\":{\"type\":\"array\",\"value\":\"string\",\"default\":[\"Open Sans Regular\",\"Arial Unicode MS Regular\"],\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-size\":{\"type\":\"number\",\"default\":16,\"minimum\":0,\"units\":\"pixels\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-max-width\":{\"type\":\"number\",\"default\":10,\"minimum\":0,\"units\":\"ems\",\"requires\":[\"text-field\",{\"symbol-placement\":[\"point\"]}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-line-height\":{\"type\":\"number\",\"default\":1.2,\"units\":\"ems\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-letter-spacing\":{\"type\":\"number\",\"default\":0,\"units\":\"ems\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-justify\":{\"type\":\"enum\",\"values\":{\"auto\":{},\"left\":{},\"center\":{},\"right\":{}},\"default\":\"center\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-radial-offset\":{\"type\":\"number\",\"units\":\"ems\",\"default\":0,\"requires\":[\"text-field\"],\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]}},\"text-variable-anchor\":{\"type\":\"array\",\"value\":\"enum\",\"values\":{\"center\":{},\"left\":{},\"right\":{},\"top\":{},\"bottom\":{},\"top-left\":{},\"top-right\":{},\"bottom-left\":{},\"bottom-right\":{}},\"requires\":[\"text-field\",{\"symbol-placement\":[\"point\"]}],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-anchor\":{\"type\":\"enum\",\"values\":{\"center\":{},\"left\":{},\"right\":{},\"top\":{},\"bottom\":{},\"top-left\":{},\"top-right\":{},\"bottom-left\":{},\"bottom-right\":{}},\"default\":\"center\",\"requires\":[\"text-field\",{\"!\":\"text-variable-anchor\"}],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-max-angle\":{\"type\":\"number\",\"default\":45,\"units\":\"degrees\",\"requires\":[\"text-field\",{\"symbol-placement\":[\"line\",\"line-center\"]}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-writing-mode\":{\"type\":\"array\",\"value\":\"enum\",\"values\":{\"horizontal\":{},\"vertical\":{}},\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-rotate\":{\"type\":\"number\",\"default\":0,\"period\":360,\"units\":\"degrees\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-padding\":{\"type\":\"number\",\"default\":2,\"minimum\":0,\"units\":\"pixels\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-keep-upright\":{\"type\":\"boolean\",\"default\":true,\"requires\":[\"text-field\",{\"text-rotation-alignment\":\"map\"},{\"symbol-placement\":[\"line\",\"line-center\"]}],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-transform\":{\"type\":\"enum\",\"values\":{\"none\":{},\"uppercase\":{},\"lowercase\":{}},\"default\":\"none\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-offset\":{\"type\":\"array\",\"value\":\"number\",\"units\":\"ems\",\"length\":2,\"default\":[0,0],\"requires\":[\"text-field\",{\"!\":\"text-radial-offset\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-allow-overlap\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-ignore-placement\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-optional\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"text-field\",\"icon-image\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_raster\":{\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_hillshade\":{\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"filter\":{\"type\":\"array\",\"value\":\"*\"},\"filter_symbol\":{\"type\":\"boolean\",\"default\":false,\"transition\":false,\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\",\"pitch\",\"distance-from-center\"]}},\"filter_fill\":{\"type\":\"boolean\",\"default\":false,\"transition\":false,\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]}},\"filter_line\":{\"type\":\"boolean\",\"default\":false,\"transition\":false,\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]}},\"filter_circle\":{\"type\":\"boolean\",\"default\":false,\"transition\":false,\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]}},\"filter_fill-extrusion\":{\"type\":\"boolean\",\"default\":false,\"transition\":false,\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]}},\"filter_heatmap\":{\"type\":\"boolean\",\"default\":false,\"transition\":false,\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]}},\"filter_operator\":{\"type\":\"enum\",\"values\":{\"==\":{},\"!=\":{},\">\":{},\">=\":{},\"<\":{},\"<=\":{},\"in\":{},\"!in\":{},\"all\":{},\"any\":{},\"none\":{},\"has\":{},\"!has\":{},\"within\":{}}},\"geometry_type\":{\"type\":\"enum\",\"values\":{\"Point\":{},\"LineString\":{},\"Polygon\":{}}},\"function\":{\"expression\":{\"type\":\"expression\"},\"stops\":{\"type\":\"array\",\"value\":\"function_stop\"},\"base\":{\"type\":\"number\",\"default\":1,\"minimum\":0},\"property\":{\"type\":\"string\",\"default\":\"$zoom\"},\"type\":{\"type\":\"enum\",\"values\":{\"identity\":{},\"exponential\":{},\"interval\":{},\"categorical\":{}},\"default\":\"exponential\"},\"colorSpace\":{\"type\":\"enum\",\"values\":{\"rgb\":{},\"lab\":{},\"hcl\":{}},\"default\":\"rgb\"},\"default\":{\"type\":\"*\",\"required\":false}},\"function_stop\":{\"type\":\"array\",\"minimum\":0,\"maximum\":24,\"value\":[\"number\",\"color\"],\"length\":2},\"expression\":{\"type\":\"array\",\"value\":\"*\",\"minimum\":1},\"expression_name\":{\"type\":\"enum\",\"values\":{\"let\":{\"group\":\"Variable binding\"},\"var\":{\"group\":\"Variable binding\"},\"literal\":{\"group\":\"Types\"},\"array\":{\"group\":\"Types\"},\"at\":{\"group\":\"Lookup\"},\"in\":{\"group\":\"Lookup\"},\"index-of\":{\"group\":\"Lookup\"},\"slice\":{\"group\":\"Lookup\"},\"case\":{\"group\":\"Decision\"},\"match\":{\"group\":\"Decision\"},\"coalesce\":{\"group\":\"Decision\"},\"step\":{\"group\":\"Ramps, scales, curves\"},\"interpolate\":{\"group\":\"Ramps, scales, curves\"},\"interpolate-hcl\":{\"group\":\"Ramps, scales, curves\"},\"interpolate-lab\":{\"group\":\"Ramps, scales, curves\"},\"ln2\":{\"group\":\"Math\"},\"pi\":{\"group\":\"Math\"},\"e\":{\"group\":\"Math\"},\"typeof\":{\"group\":\"Types\"},\"string\":{\"group\":\"Types\"},\"number\":{\"group\":\"Types\"},\"boolean\":{\"group\":\"Types\"},\"object\":{\"group\":\"Types\"},\"collator\":{\"group\":\"Types\"},\"format\":{\"group\":\"Types\"},\"image\":{\"group\":\"Types\"},\"number-format\":{\"group\":\"Types\"},\"to-string\":{\"group\":\"Types\"},\"to-number\":{\"group\":\"Types\"},\"to-boolean\":{\"group\":\"Types\"},\"to-rgba\":{\"group\":\"Color\"},\"to-color\":{\"group\":\"Types\"},\"rgb\":{\"group\":\"Color\"},\"rgba\":{\"group\":\"Color\"},\"get\":{\"group\":\"Lookup\"},\"has\":{\"group\":\"Lookup\"},\"length\":{\"group\":\"Lookup\"},\"properties\":{\"group\":\"Feature data\"},\"feature-state\":{\"group\":\"Feature data\"},\"geometry-type\":{\"group\":\"Feature data\"},\"id\":{\"group\":\"Feature data\"},\"zoom\":{\"group\":\"Camera\"},\"pitch\":{\"group\":\"Camera\"},\"distance-from-center\":{\"group\":\"Camera\"},\"heatmap-density\":{\"group\":\"Heatmap\"},\"line-progress\":{\"group\":\"Feature data\"},\"sky-radial-progress\":{\"group\":\"sky\"},\"accumulated\":{\"group\":\"Feature data\"},\"+\":{\"group\":\"Math\"},\"*\":{\"group\":\"Math\"},\"-\":{\"group\":\"Math\"},\"/\":{\"group\":\"Math\"},\"%\":{\"group\":\"Math\"},\"^\":{\"group\":\"Math\"},\"sqrt\":{\"group\":\"Math\"},\"log10\":{\"group\":\"Math\"},\"ln\":{\"group\":\"Math\"},\"log2\":{\"group\":\"Math\"},\"sin\":{\"group\":\"Math\"},\"cos\":{\"group\":\"Math\"},\"tan\":{\"group\":\"Math\"},\"asin\":{\"group\":\"Math\"},\"acos\":{\"group\":\"Math\"},\"atan\":{\"group\":\"Math\"},\"min\":{\"group\":\"Math\"},\"max\":{\"group\":\"Math\"},\"round\":{\"group\":\"Math\"},\"abs\":{\"group\":\"Math\"},\"ceil\":{\"group\":\"Math\"},\"floor\":{\"group\":\"Math\"},\"distance\":{\"group\":\"Math\"},\"==\":{\"group\":\"Decision\"},\"!=\":{\"group\":\"Decision\"},\">\":{\"group\":\"Decision\"},\"<\":{\"group\":\"Decision\"},\">=\":{\"group\":\"Decision\"},\"<=\":{\"group\":\"Decision\"},\"all\":{\"group\":\"Decision\"},\"any\":{\"group\":\"Decision\"},\"!\":{\"group\":\"Decision\"},\"within\":{\"group\":\"Decision\"},\"is-supported-script\":{\"group\":\"String\"},\"upcase\":{\"group\":\"String\"},\"downcase\":{\"group\":\"String\"},\"concat\":{\"group\":\"String\"},\"resolved-locale\":{\"group\":\"String\"}}},\"fog\":{\"range\":{\"type\":\"array\",\"default\":[0.5,10],\"minimum\":-20,\"maximum\":20,\"length\":2,\"value\":\"number\",\"property-type\":\"data-constant\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]}},\"color\":{\"type\":\"color\",\"property-type\":\"data-constant\",\"default\":\"#ffffff\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true},\"high-color\":{\"type\":\"color\",\"property-type\":\"data-constant\",\"default\":\"#245cdf\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true},\"space-color\":{\"type\":\"color\",\"property-type\":\"data-constant\",\"default\":[\"interpolate\",[\"linear\"],[\"zoom\"],4,\"#010b19\",7,\"#367ab9\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true},\"horizon-blend\":{\"type\":\"number\",\"property-type\":\"data-constant\",\"default\":[\"interpolate\",[\"linear\"],[\"zoom\"],4,0.2,7,0.1],\"minimum\":0,\"maximum\":1,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true},\"star-intensity\":{\"type\":\"number\",\"property-type\":\"data-constant\",\"default\":[\"interpolate\",[\"linear\"],[\"zoom\"],5,0.35,6,0],\"minimum\":0,\"maximum\":1,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true}},\"light\":{\"anchor\":{\"type\":\"enum\",\"default\":\"viewport\",\"values\":{\"map\":{},\"viewport\":{}},\"property-type\":\"data-constant\",\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]}},\"position\":{\"type\":\"array\",\"default\":[1.15,210,30],\"length\":3,\"value\":\"number\",\"property-type\":\"data-constant\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]}},\"color\":{\"type\":\"color\",\"property-type\":\"data-constant\",\"default\":\"#ffffff\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true},\"intensity\":{\"type\":\"number\",\"property-type\":\"data-constant\",\"default\":0.5,\"minimum\":0,\"maximum\":1,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true}},\"projection\":{\"name\":{\"type\":\"enum\",\"values\":{\"albers\":{},\"equalEarth\":{},\"equirectangular\":{},\"lambertConformalConic\":{},\"mercator\":{},\"naturalEarth\":{},\"winkelTripel\":{},\"globe\":{}},\"default\":\"mercator\",\"required\":true},\"center\":{\"type\":\"array\",\"length\":2,\"value\":\"number\",\"property-type\":\"data-constant\",\"minimum\":[-180,-90],\"maximum\":[180,90],\"transition\":false,\"requires\":[{\"name\":[\"albers\",\"lambertConformalConic\"]}]},\"parallels\":{\"type\":\"array\",\"length\":2,\"value\":\"number\",\"property-type\":\"data-constant\",\"minimum\":[-90,-90],\"maximum\":[90,90],\"transition\":false,\"requires\":[{\"name\":[\"albers\",\"lambertConformalConic\"]}]}},\"terrain\":{\"source\":{\"type\":\"string\",\"required\":true},\"exaggeration\":{\"type\":\"number\",\"property-type\":\"data-constant\",\"default\":1,\"minimum\":0,\"maximum\":1000,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true,\"requires\":[\"source\"]}},\"paint\":[\"paint_fill\",\"paint_line\",\"paint_circle\",\"paint_heatmap\",\"paint_fill-extrusion\",\"paint_symbol\",\"paint_raster\",\"paint_hillshade\",\"paint_background\",\"paint_sky\"],\"paint_fill\":{\"fill-antialias\":{\"type\":\"boolean\",\"default\":true,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"fill-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"requires\":[{\"!\":\"fill-pattern\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"fill-outline-color\":{\"type\":\"color\",\"transition\":true,\"requires\":[{\"!\":\"fill-pattern\"},{\"fill-antialias\":true}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"fill-translate\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-translate-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"requires\":[\"fill-translate\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-pattern\":{\"type\":\"resolvedImage\",\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"}},\"paint_fill-extrusion\":{\"fill-extrusion-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-extrusion-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"requires\":[{\"!\":\"fill-extrusion-pattern\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"fill-extrusion-translate\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-extrusion-translate-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"requires\":[\"fill-extrusion-translate\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-extrusion-pattern\":{\"type\":\"resolvedImage\",\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"fill-extrusion-height\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"units\":\"meters\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"fill-extrusion-base\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"units\":\"meters\",\"transition\":true,\"requires\":[\"fill-extrusion-height\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"fill-extrusion-vertical-gradient\":{\"type\":\"boolean\",\"default\":true,\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-extrusion-ambient-occlusion-intensity\":{\"property-type\":\"data-constant\",\"type\":\"number\",\"private\":true,\"default\":0,\"minimum\":0,\"maximum\":1,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true},\"fill-extrusion-ambient-occlusion-radius\":{\"property-type\":\"data-constant\",\"type\":\"number\",\"private\":true,\"default\":3,\"minimum\":0,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true,\"requires\":[\"fill-extrusion-edge-radius\"]}},\"paint_line\":{\"line-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"line-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"requires\":[{\"!\":\"line-pattern\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"line-translate\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"line-translate-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"requires\":[\"line-translate\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"line-width\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"line-gap-width\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"line-offset\":{\"type\":\"number\",\"default\":0,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"line-blur\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"line-dasharray\":{\"type\":\"array\",\"value\":\"number\",\"minimum\":0,\"transition\":false,\"units\":\"line widths\",\"requires\":[{\"!\":\"line-pattern\"}],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"line-pattern\":{\"type\":\"resolvedImage\",\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"line-gradient\":{\"type\":\"color\",\"transition\":false,\"requires\":[{\"!\":\"line-pattern\"},{\"source\":\"geojson\",\"has\":{\"lineMetrics\":true}}],\"expression\":{\"interpolated\":true,\"parameters\":[\"line-progress\"]},\"property-type\":\"color-ramp\"},\"line-trim-offset\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"minimum\":[0,0],\"maximum\":[1,1],\"transition\":false,\"requires\":[{\"source\":\"geojson\",\"has\":{\"lineMetrics\":true}}],\"property-type\":\"constant\"}},\"paint_circle\":{\"circle-radius\":{\"type\":\"number\",\"default\":5,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"circle-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"circle-blur\":{\"type\":\"number\",\"default\":0,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"circle-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"circle-translate\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"circle-translate-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"requires\":[\"circle-translate\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"circle-pitch-scale\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"circle-pitch-alignment\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"viewport\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"circle-stroke-width\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"circle-stroke-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"circle-stroke-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"}},\"paint_heatmap\":{\"heatmap-radius\":{\"type\":\"number\",\"default\":30,\"minimum\":1,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"heatmap-weight\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"transition\":false,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"heatmap-intensity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"heatmap-color\":{\"type\":\"color\",\"default\":[\"interpolate\",[\"linear\"],[\"heatmap-density\"],0,\"rgba(0, 0, 255, 0)\",0.1,\"royalblue\",0.3,\"cyan\",0.5,\"lime\",0.7,\"yellow\",1,\"red\"],\"transition\":false,\"expression\":{\"interpolated\":true,\"parameters\":[\"heatmap-density\"]},\"property-type\":\"color-ramp\"},\"heatmap-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"paint_symbol\":{\"icon-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"icon-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"icon-halo-color\":{\"type\":\"color\",\"default\":\"rgba(0, 0, 0, 0)\",\"transition\":true,\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"icon-halo-width\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"icon-halo-blur\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"icon-translate\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"transition\":true,\"units\":\"pixels\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-translate-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"requires\":[\"icon-image\",\"icon-translate\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"text-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"overridable\":true,\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"text-halo-color\":{\"type\":\"color\",\"default\":\"rgba(0, 0, 0, 0)\",\"transition\":true,\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"text-halo-width\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"text-halo-blur\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"text-translate\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"transition\":true,\"units\":\"pixels\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-translate-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"requires\":[\"text-field\",\"text-translate\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"paint_raster\":{\"raster-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-hue-rotate\":{\"type\":\"number\",\"default\":0,\"period\":360,\"transition\":true,\"units\":\"degrees\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-brightness-min\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-brightness-max\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-saturation\":{\"type\":\"number\",\"default\":0,\"minimum\":-1,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-contrast\":{\"type\":\"number\",\"default\":0,\"minimum\":-1,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-resampling\":{\"type\":\"enum\",\"values\":{\"linear\":{},\"nearest\":{}},\"default\":\"linear\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-fade-duration\":{\"type\":\"number\",\"default\":300,\"minimum\":0,\"transition\":false,\"units\":\"milliseconds\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"paint_hillshade\":{\"hillshade-illumination-direction\":{\"type\":\"number\",\"default\":335,\"minimum\":0,\"maximum\":359,\"transition\":false,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"hillshade-illumination-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"viewport\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"hillshade-exaggeration\":{\"type\":\"number\",\"default\":0.5,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"hillshade-shadow-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"hillshade-highlight-color\":{\"type\":\"color\",\"default\":\"#FFFFFF\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"hillshade-accent-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"paint_background\":{\"background-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"requires\":[{\"!\":\"background-pattern\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"background-pattern\":{\"type\":\"resolvedImage\",\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"background-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"paint_sky\":{\"sky-type\":{\"type\":\"enum\",\"values\":{\"gradient\":{},\"atmosphere\":{}},\"default\":\"atmosphere\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"sky-atmosphere-sun\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"units\":\"degrees\",\"minimum\":[0,0],\"maximum\":[360,180],\"transition\":false,\"requires\":[{\"sky-type\":\"atmosphere\"}],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"sky-atmosphere-sun-intensity\":{\"type\":\"number\",\"requires\":[{\"sky-type\":\"atmosphere\"}],\"default\":10,\"minimum\":0,\"maximum\":100,\"transition\":false,\"property-type\":\"data-constant\"},\"sky-gradient-center\":{\"type\":\"array\",\"requires\":[{\"sky-type\":\"gradient\"}],\"value\":\"number\",\"default\":[0,0],\"length\":2,\"units\":\"degrees\",\"minimum\":[0,0],\"maximum\":[360,180],\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"sky-gradient-radius\":{\"type\":\"number\",\"requires\":[{\"sky-type\":\"gradient\"}],\"default\":90,\"minimum\":0,\"maximum\":180,\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"sky-gradient\":{\"type\":\"color\",\"default\":[\"interpolate\",[\"linear\"],[\"sky-radial-progress\"],0.8,\"#87ceeb\",1,\"white\"],\"transition\":false,\"requires\":[{\"sky-type\":\"gradient\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"sky-radial-progress\"]},\"property-type\":\"color-ramp\"},\"sky-atmosphere-halo-color\":{\"type\":\"color\",\"default\":\"white\",\"transition\":false,\"requires\":[{\"sky-type\":\"atmosphere\"}],\"property-type\":\"data-constant\"},\"sky-atmosphere-color\":{\"type\":\"color\",\"default\":\"white\",\"transition\":false,\"requires\":[{\"sky-type\":\"atmosphere\"}],\"property-type\":\"data-constant\"},\"sky-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"transition\":{\"duration\":{\"type\":\"number\",\"default\":300,\"minimum\":0,\"units\":\"milliseconds\"},\"delay\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"units\":\"milliseconds\"}},\"property-type\":{\"data-driven\":{\"type\":\"property-type\"},\"color-ramp\":{\"type\":\"property-type\"},\"data-constant\":{\"type\":\"property-type\"},\"constant\":{\"type\":\"property-type\"}},\"promoteId\":{\"*\":{\"type\":\"string\"}}};\n\n//      \nfunction isExpressionFilter(filter) {\n    if (filter === true || filter === false) {\n        return true;\n    }\n    if (!Array.isArray(filter) || filter.length === 0) {\n        return false;\n    }\n    switch (filter[0]) {\n    case 'has':\n        return filter.length >= 2 && filter[1] !== '$id' && filter[1] !== '$type';\n    case 'in':\n        return filter.length >= 3 && (typeof filter[1] !== 'string' || Array.isArray(filter[2]));\n    case '!in':\n    case '!has':\n    case 'none':\n        return false;\n    case '==':\n    case '!=':\n    case '>':\n    case '>=':\n    case '<':\n    case '<=':\n        return filter.length !== 3 || (Array.isArray(filter[1]) || Array.isArray(filter[2]));\n    case 'any':\n    case 'all':\n        for (const f of filter.slice(1)) {\n            if (!isExpressionFilter(f) && typeof f !== 'boolean') {\n                return false;\n            }\n        }\n        return true;\n    default:\n        return true;\n    }\n}\n/**\n * Given a filter expressed as nested arrays, return a new function\n * that evaluates whether a given feature (with a .properties or .tags property)\n * passes its test.\n *\n * @private\n * @param {Array} filter mapbox gl filter\n * @param {string} layerType the type of the layer this filter will be applied to.\n * @returns {Function} filter-evaluating function\n */\nfunction createFilter(filter, layerType = 'fill') {\n    if (filter === null || filter === undefined) {\n        return {\n            filter: () => true,\n            needGeometry: false,\n            needFeature: false\n        };\n    }\n    if (!isExpressionFilter(filter)) {\n        filter = convertFilter(filter);\n    }\n    const filterExp = filter;\n    let staticFilter = true;\n    try {\n        staticFilter = extractStaticFilter(filterExp);\n    } catch (e) {\n        console.warn(`Failed to extract static filter. Filter will continue working, but at higher memory usage and slower framerate.\nThis is most likely a bug, please report this via https://github.com/mapbox/mapbox-gl-js/issues/new?assignees=&labels=&template=Bug_report.md\nand paste the contents of this message in the report.\nThank you!\nFilter Expression:\n${ JSON.stringify(filterExp, null, 2) }\n        `);\n    }\n    // Compile the static component of the filter\n    const filterSpec = spec[`filter_${ layerType }`];\n    const compiledStaticFilter = createExpression(staticFilter, filterSpec);\n    let filterFunc = null;\n    if (compiledStaticFilter.result === 'error') {\n        throw new Error(compiledStaticFilter.value.map(err => `${ err.key }: ${ err.message }`).join(', '));\n    } else {\n        filterFunc = (globalProperties, feature, canonical) => compiledStaticFilter.value.evaluate(globalProperties, feature, {}, canonical);\n    }\n    // If the static component is not equal to the entire filter then we have a dynamic component\n    // Compile the dynamic component separately\n    let dynamicFilterFunc = null;\n    let needFeature = null;\n    if (staticFilter !== filterExp) {\n        const compiledDynamicFilter = createExpression(filterExp, filterSpec);\n        if (compiledDynamicFilter.result === 'error') {\n            throw new Error(compiledDynamicFilter.value.map(err => `${ err.key }: ${ err.message }`).join(', '));\n        } else {\n            dynamicFilterFunc = (globalProperties, feature, canonical, featureTileCoord, featureDistanceData) => compiledDynamicFilter.value.evaluate(globalProperties, feature, {}, canonical, undefined, undefined, featureTileCoord, featureDistanceData);\n            needFeature = !isFeatureConstant(compiledDynamicFilter.value.expression);\n        }\n    }\n    filterFunc = filterFunc;\n    const needGeometry = geometryNeeded(staticFilter);\n    return {\n        filter: filterFunc,\n        dynamicFilter: dynamicFilterFunc ? dynamicFilterFunc : undefined,\n        needGeometry,\n        needFeature: !!needFeature\n    };\n}\nfunction extractStaticFilter(filter) {\n    if (!isDynamicFilter(filter)) {\n        return filter;\n    }\n    // Shallow copy so we can replace expressions in-place\n    let result = deepUnbundle(filter);\n    // 1. Union branches\n    unionDynamicBranches(result);\n    // 2. Collapse dynamic conditions to  `true`\n    result = collapseDynamicBooleanExpressions(result);\n    return result;\n}\nfunction collapseDynamicBooleanExpressions(expression) {\n    if (!Array.isArray(expression)) {\n        return expression;\n    }\n    const collapsed = collapsedExpression(expression);\n    if (collapsed === true) {\n        return collapsed;\n    } else {\n        return collapsed.map(subExpression => collapseDynamicBooleanExpressions(subExpression));\n    }\n}\n/**\n * Traverses the expression and replaces all instances of branching on a\n * `dynamic` conditional (such as `['pitch']` or `['distance-from-center']`)\n * into an `any` expression.\n * This ensures that all possible outcomes of a `dynamic` branch are considered\n * when evaluating the expression upfront during filtering.\n *\n * @param {Array<any>} filter the filter expression mutated in-place.\n */\nfunction unionDynamicBranches(filter) {\n    let isBranchingDynamically = false;\n    const branches = [];\n    if (filter[0] === 'case') {\n        for (let i = 1; i < filter.length - 1; i += 2) {\n            isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[i]);\n            branches.push(filter[i + 1]);\n        }\n        branches.push(filter[filter.length - 1]);\n    } else if (filter[0] === 'match') {\n        isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[1]);\n        for (let i = 2; i < filter.length - 1; i += 2) {\n            branches.push(filter[i + 1]);\n        }\n        branches.push(filter[filter.length - 1]);\n    } else if (filter[0] === 'step') {\n        isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[1]);\n        for (let i = 1; i < filter.length - 1; i += 2) {\n            branches.push(filter[i + 1]);\n        }\n    }\n    if (isBranchingDynamically) {\n        filter.length = 0;\n        filter.push('any', ...branches);\n    }\n    // traverse and recurse into children\n    for (let i = 1; i < filter.length; i++) {\n        unionDynamicBranches(filter[i]);\n    }\n}\nfunction isDynamicFilter(filter) {\n    // Base Cases\n    if (!Array.isArray(filter)) {\n        return false;\n    }\n    if (isRootExpressionDynamic(filter[0])) {\n        return true;\n    }\n    for (let i = 1; i < filter.length; i++) {\n        const child = filter[i];\n        if (isDynamicFilter(child)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction isRootExpressionDynamic(expression) {\n    return expression === 'pitch' || expression === 'distance-from-center';\n}\nconst dynamicConditionExpressions = new Set([\n    'in',\n    '==',\n    '!=',\n    '>',\n    '>=',\n    '<',\n    '<=',\n    'to-boolean'\n]);\nfunction collapsedExpression(expression) {\n    if (dynamicConditionExpressions.has(expression[0])) {\n        for (let i = 1; i < expression.length; i++) {\n            const param = expression[i];\n            if (isDynamicFilter(param)) {\n                return true;\n            }\n        }\n    }\n    return expression;\n}\n// Comparison function to sort numbers and strings\nfunction compare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\nfunction geometryNeeded(filter) {\n    if (!Array.isArray(filter))\n        return false;\n    if (filter[0] === 'within')\n        return true;\n    for (let index = 1; index < filter.length; index++) {\n        if (geometryNeeded(filter[index]))\n            return true;\n    }\n    return false;\n}\nfunction convertFilter(filter) {\n    if (!filter)\n        return true;\n    const op = filter[0];\n    if (filter.length <= 1)\n        return op !== 'any';\n    const converted = op === '==' ? convertComparisonOp(filter[1], filter[2], '==') : op === '!=' ? convertNegation(convertComparisonOp(filter[1], filter[2], '==')) : op === '<' || op === '>' || op === '<=' || op === '>=' ? convertComparisonOp(filter[1], filter[2], op) : op === 'any' ? convertDisjunctionOp(filter.slice(1)) : op === 'all' ? ['all'].concat(filter.slice(1).map(convertFilter)) : op === 'none' ? ['all'].concat(filter.slice(1).map(convertFilter).map(convertNegation)) : op === 'in' ? convertInOp(filter[1], filter.slice(2)) : op === '!in' ? convertNegation(convertInOp(filter[1], filter.slice(2))) : op === 'has' ? convertHasOp(filter[1]) : op === '!has' ? convertNegation(convertHasOp(filter[1])) : op === 'within' ? filter : true;\n    return converted;\n}\nfunction convertComparisonOp(property, value, op) {\n    switch (property) {\n    case '$type':\n        return [\n            `filter-type-${ op }`,\n            value\n        ];\n    case '$id':\n        return [\n            `filter-id-${ op }`,\n            value\n        ];\n    default:\n        return [\n            `filter-${ op }`,\n            property,\n            value\n        ];\n    }\n}\nfunction convertDisjunctionOp(filters) {\n    return ['any'].concat(filters.map(convertFilter));\n}\nfunction convertInOp(property, values) {\n    if (values.length === 0) {\n        return false;\n    }\n    switch (property) {\n    case '$type':\n        return [\n            `filter-type-in`,\n            [\n                'literal',\n                values\n            ]\n        ];\n    case '$id':\n        return [\n            `filter-id-in`,\n            [\n                'literal',\n                values\n            ]\n        ];\n    default:\n        if (values.length > 200 && !values.some(v => typeof v !== typeof values[0])) {\n            return [\n                'filter-in-large',\n                property,\n                [\n                    'literal',\n                    values.sort(compare)\n                ]\n            ];\n        } else {\n            return [\n                'filter-in-small',\n                property,\n                [\n                    'literal',\n                    values\n                ]\n            ];\n        }\n    }\n}\nfunction convertHasOp(property) {\n    switch (property) {\n    case '$type':\n        return true;\n    case '$id':\n        return [`filter-has-id`];\n    default:\n        return [\n            `filter-has`,\n            property\n        ];\n    }\n}\nfunction convertNegation(filter) {\n    return [\n        '!',\n        filter\n    ];\n}\n\n//      \nvar refProperties = [\n    'type',\n    'source',\n    'source-layer',\n    'minzoom',\n    'maxzoom',\n    'filter',\n    'layout'\n];\n\n//      \nfunction deref(layer, parent) {\n    const result = {};\n    for (const k in layer) {\n        if (k !== 'ref') {\n            result[k] = layer[k];\n        }\n    }\n    refProperties.forEach(k => {\n        if (k in parent) {\n            result[k] = parent[k];\n        }\n    });\n    return result;\n}\n/**\n * Given an array of layers, some of which may contain `ref` properties\n * whose value is the `id` of another property, return a new array where\n * such layers have been augmented with the 'type', 'source', etc. properties\n * from the parent layer, and the `ref` property has been removed.\n *\n * The input is not modified. The output may contain references to portions\n * of the input.\n *\n * @private\n * @param {Array<Layer>} layers\n * @returns {Array<Layer>}\n */\nfunction derefLayers(layers) {\n    layers = layers.slice();\n    const map = Object.create(null);\n    for (let i = 0; i < layers.length; i++) {\n        map[layers[i].id] = layers[i];\n    }\n    for (let i = 0; i < layers.length; i++) {\n        if ('ref' in layers[i]) {\n            layers[i] = deref(layers[i], map[layers[i].ref]);\n        }\n    }\n    return layers;\n}\n\nvar fontWeights = {\n    thin: 100,\n    hairline: 100,\n    'ultra-light': 200,\n    'extra-light': 200,\n    light: 300,\n    book: 300,\n    regular: 400,\n    normal: 400,\n    plain: 400,\n    roman: 400,\n    standard: 400,\n    medium: 500,\n    'semi-bold': 600,\n    'demi-bold': 600,\n    bold: 700,\n    'extra-bold': 800,\n    'ultra-bold': 800,\n    heavy: 900,\n    black: 900,\n    'heavy-black': 900,\n    fat: 900,\n    poster: 900,\n    'ultra-black': 950,\n    'extra-black': 950\n};\nvar sp = ' ';\nvar italicRE = /(italic|oblique)$/i;\nvar fontCache = {};\nvar mapboxToCssFont = function (fonts, size, lineHeight) {\n    var cssData = fontCache[fonts];\n    if (!cssData) {\n        if (!Array.isArray(fonts)) {\n            fonts = [fonts];\n        }\n        var weight = 400;\n        var style = 'normal';\n        var fontFamilies = [];\n        var haveWeight, haveStyle;\n        for (var i = 0, ii = fonts.length; i < ii; ++i) {\n            var font = fonts[i];\n            var parts = font.split(' ');\n            var maybeWeight = parts[parts.length - 1].toLowerCase();\n            if (maybeWeight == 'normal' || maybeWeight == 'italic' || maybeWeight == 'oblique') {\n                style = haveStyle ? style : maybeWeight;\n                haveStyle = true;\n                parts.pop();\n                maybeWeight = parts[parts.length - 1].toLowerCase();\n            } else if (italicRE.test(maybeWeight)) {\n                maybeWeight = maybeWeight.replace(italicRE, '');\n                style = haveStyle ? style : parts[parts.length - 1].replace(maybeWeight, '');\n                haveStyle = true;\n            }\n            for (var w in fontWeights) {\n                var previousPart = parts.length > 1 ? parts[parts.length - 2].toLowerCase() : '';\n                if (maybeWeight == w || maybeWeight == w.replace('-', '') || previousPart + '-' + maybeWeight == w) {\n                    weight = haveWeight ? weight : fontWeights[w];\n                    parts.pop();\n                    if (previousPart && w.startsWith(previousPart)) {\n                        parts.pop();\n                    }\n                    break;\n                }\n            }\n            if (!haveWeight && typeof maybeWeight == 'number') {\n                weight = maybeWeight;\n                haveWeight = true;\n            }\n            var fontFamily = parts.join(sp).replace('Klokantech Noto Sans', 'Noto Sans');\n            if (fontFamily.indexOf(sp) !== -1) {\n                fontFamily = '\"' + fontFamily + '\"';\n            }\n            fontFamilies.push(fontFamily);\n        }\n        // CSS font property: font-style font-weight font-size/line-height font-family\n        cssData = fontCache[fonts] = [\n            style,\n            weight,\n            fontFamilies\n        ];\n    }\n    return cssData[0] + sp + cssData[1] + sp + size + 'px' + (lineHeight ? '/' + lineHeight : '') + sp + cssData[2];\n};\n\nvar mb2css = /*@__PURE__*/getDefaultExportFromCjs(mapboxToCssFont);\n\nconst mapboxBaseUrl = 'https://api.mapbox.com';\n/**\n * Gets the path from a mapbox:// URL.\n * @param {string} url The Mapbox URL.\n * @return {string} The path.\n * @private\n */\nfunction getMapboxPath(url) {\n    const startsWith = 'mapbox://';\n    if (url.indexOf(startsWith) !== 0) {\n        return '';\n    }\n    return url.slice(startsWith.length);\n}\n/**\n * Turns mapbox:// sprite URLs into resolvable URLs.\n * @param {string} url The sprite URL.\n * @param {string} token The access token.\n * @param {string} styleUrl The style URL.\n * @return {string} A resolvable URL.\n * @private\n */\nfunction normalizeSpriteUrl(url, token, styleUrl) {\n    const mapboxPath = getMapboxPath(url);\n    if (!mapboxPath) {\n        return decodeURI(new URL(url, styleUrl).href);\n    }\n    const startsWith = 'sprites/';\n    if (mapboxPath.indexOf(startsWith) !== 0) {\n        throw new Error(`unexpected sprites url: ${ url }`);\n    }\n    const sprite = mapboxPath.slice(startsWith.length);\n    return `${ mapboxBaseUrl }/styles/v1/${ sprite }/sprite?access_token=${ token }`;\n}\n/**\n * Turns mapbox:// style URLs into resolvable URLs.\n * @param {string} url The style URL.\n * @param {string} token The access token.\n * @return {string} A resolvable URL.\n * @private\n */\nfunction normalizeStyleUrl(url, token) {\n    const mapboxPath = getMapboxPath(url);\n    if (!mapboxPath) {\n        return decodeURI(new URL(url, location.href).href);\n    }\n    const startsWith = 'styles/';\n    if (mapboxPath.indexOf(startsWith) !== 0) {\n        throw new Error(`unexpected style url: ${ url }`);\n    }\n    const style = mapboxPath.slice(startsWith.length);\n    return `${ mapboxBaseUrl }/styles/v1/${ style }?&access_token=${ token }`;\n}\n/**\n * Turns mapbox:// source URLs into vector tile URL templates.\n * @param {string} url The source URL.\n * @param {string} token The access token.\n * @param {string} tokenParam The access token key.\n * @param {string} styleUrl The style URL.\n * @return {string} A vector tile template.\n * @private\n */\nfunction normalizeSourceUrl(url, token, tokenParam, styleUrl) {\n    const urlObject = new URL(url, styleUrl);\n    const mapboxPath = getMapboxPath(url);\n    if (!mapboxPath) {\n        if (!token) {\n            return decodeURI(urlObject.href);\n        }\n        if (!urlObject.searchParams.has(tokenParam)) {\n            urlObject.searchParams.set(tokenParam, token);\n        }\n        return decodeURI(urlObject.href);\n    }\n    if (mapboxPath === 'mapbox.satellite') {\n        const sizeFactor = window.devicePixelRatio >= 1.5 ? '@2x' : '';\n        return `https://api.mapbox.com/v4/${ mapboxPath }/{z}/{x}/{y}${ sizeFactor }.webp?access_token=${ token }`;\n    }\n    return `https://{a-d}.tiles.mapbox.com/v4/${ mapboxPath }/{z}/{x}/{y}.vector.pbf?access_token=${ token }`;\n}\n\n/** @typedef {'Style'|'Source'|'Sprite'|'SpriteImage'|'Tiles'|'GeoJSON'} ResourceType */\n/** @typedef {import(\"ol\").Map} Map */\n/** @typedef {import(\"ol/layer\").Layer} Layer */\n/** @typedef {import(\"ol/layer\").Group} LayerGroup */\n/** @typedef {import(\"ol/layer\").Vector} VectorLayer */\n/** @typedef {import(\"ol/layer\").VectorTile} VectorTileLayer */\n/** @typedef {import(\"ol/source\").Source} Source */\nconst functionCacheByStyleId = {};\nconst filterCacheByStyleId = {};\nlet styleId = 0;\nfunction getStyleId(glStyle) {\n    if (!glStyle.id) {\n        glStyle.id = styleId++;\n    }\n    return glStyle.id;\n}\nfunction getStyleFunctionKey(glStyle, olLayer) {\n    return getStyleId(glStyle) + '.' + getUid(olLayer);\n}\n/**\n * @param {Object} glStyle Mapboox style object.\n * @return {Object} Function cache.\n */\nfunction getFunctionCache(glStyle) {\n    let functionCache = functionCacheByStyleId[glStyle.id];\n    if (!functionCache) {\n        functionCache = {};\n        functionCacheByStyleId[getStyleId(glStyle)] = functionCache;\n    }\n    return functionCache;\n}\nfunction clearFunctionCache() {\n    for (const key in functionCacheByStyleId) {\n        delete functionCacheByStyleId[key];\n    }\n}\n/**\n * @param {Object} glStyle Mapboox style object.\n * @return {Object} Filter cache.\n */\nfunction getFilterCache(glStyle) {\n    let filterCache = filterCacheByStyleId[glStyle.id];\n    if (!filterCache) {\n        filterCache = {};\n        filterCacheByStyleId[getStyleId(glStyle)] = filterCache;\n    }\n    return filterCache;\n}\nfunction deg2rad(degrees) {\n    return degrees * Math.PI / 180;\n}\nconst defaultResolutions = (function () {\n    const resolutions = [];\n    for (let res = 78271.51696402048; resolutions.length <= 24; res /= 2) {\n        resolutions.push(res);\n    }\n    return resolutions;\n}());\n/**\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @return {HTMLCanvasElement} Canvas.\n */\nfunction createCanvas(width, height) {\n    if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope && typeof OffscreenCanvas !== 'undefined') {\n        // eslint-disable-line\n        return new OffscreenCanvas(width, height);\n    }\n    const canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    return canvas;\n}\nfunction getZoomForResolution(resolution, resolutions) {\n    let i = 0;\n    const ii = resolutions.length;\n    for (; i < ii; ++i) {\n        const candidate = resolutions[i];\n        if (candidate < resolution && i + 1 < ii) {\n            const zoomFactor = resolutions[i] / resolutions[i + 1];\n            return i + Math.log(resolutions[i] / resolution) / Math.log(zoomFactor);\n        }\n    }\n    return ii - 1;\n}\nfunction getResolutionForZoom(zoom, resolutions) {\n    const base = Math.floor(zoom);\n    const factor = Math.pow(2, zoom - base);\n    return resolutions[base] / factor;\n}\nconst pendingRequests = {};\n/**\n * @param {ResourceType} resourceType Type of resource to load.\n * @param {string} url Url of the resource.\n * @param {Options} [options={}] Options.\n * @param {{request?: Request}} [metadata] Object to be filled with the request.\n * @return {Promise<Object|Response>} Promise that resolves with the loaded resource\n * or rejects with the Response object.\n * @private\n */\nfunction fetchResource(resourceType, url, options = {}, metadata) {\n    if (url in pendingRequests) {\n        if (metadata) {\n            metadata.request = pendingRequests[url][0];\n        }\n        return pendingRequests[url][1];\n    }\n    const transformedRequest = options.transformRequest ? options.transformRequest(url, resourceType) || url : url;\n    const pendingRequest = toPromise(() => transformedRequest).then(transformedRequest => {\n        if (!(transformedRequest instanceof Request)) {\n            transformedRequest = new Request(transformedRequest);\n        }\n        if (!transformedRequest.headers.get('Accept')) {\n            transformedRequest.headers.set('Accept', 'application/json');\n        }\n        if (metadata) {\n            metadata.request = transformedRequest;\n        }\n        return fetch(transformedRequest).then(function (response) {\n            delete pendingRequests[url];\n            return response.ok ? response.json() : Promise.reject(new Error('Error fetching source ' + url));\n        }).catch(function (error) {\n            delete pendingRequests[url];\n            return Promise.reject(new Error('Error fetching source ' + url));\n        });\n    });\n    pendingRequests[url] = [\n        transformedRequest,\n        pendingRequest\n    ];\n    return pendingRequest;\n}\nfunction getGlStyle(glStyleOrUrl, options) {\n    if (typeof glStyleOrUrl === 'string') {\n        if (glStyleOrUrl.trim().startsWith('{')) {\n            try {\n                const glStyle = JSON.parse(glStyleOrUrl);\n                return Promise.resolve(glStyle);\n            } catch (error) {\n                return Promise.reject(error);\n            }\n        } else {\n            glStyleOrUrl = normalizeStyleUrl(glStyleOrUrl, options.accessToken);\n            return fetchResource('Style', glStyleOrUrl, options);\n        }\n    } else {\n        return Promise.resolve(glStyleOrUrl);\n    }\n}\nconst tilejsonCache = {};\n/**\n * @param {Object} glSource glStyle source object.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Promise<{tileJson: Object, tileLoadFunction: import('ol/Tile.js').LoadFunction}?>} TileJson and load function\n */\nfunction getTileJson(glSource, styleUrl, options = {}) {\n    const cacheKey = [\n        styleUrl,\n        JSON.stringify(glSource)\n    ].toString();\n    let promise = tilejsonCache[cacheKey];\n    if (!promise || options.transformRequest) {\n        let tileLoadFunction;\n        if (options.transformRequest) {\n            tileLoadFunction = (tile, src) => {\n                const transformedRequest = options.transformRequest ? options.transformRequest(src, 'Tiles') || src : src;\n                if (tile instanceof VectorTile) {\n                    tile.setLoader((extent, resolution, projection) => {\n                        toPromise(() => transformedRequest).then(transformedRequest => {\n                            fetch(transformedRequest).then(response => response.arrayBuffer()).then(data => {\n                                const format = tile.getFormat();\n                                const features = format.readFeatures(data, {\n                                    extent: extent,\n                                    featureProjection: projection\n                                });\n                                // @ts-ignore\n                                tile.setFeatures(features);\n                            }).catch(e => tile.setState(TileState.ERROR));\n                        });\n                    });\n                } else {\n                    const img = tile.getImage();\n                    toPromise(() => transformedRequest).then(transformedRequest => {\n                        if (transformedRequest instanceof Request) {\n                            fetch(transformedRequest).then(response => response.blob()).then(blob => {\n                                const url = URL.createObjectURL(blob);\n                                img.addEventListener('load', () => URL.revokeObjectURL(url));\n                                img.addEventListener('error', () => URL.revokeObjectURL(url));\n                                img.src = url;\n                            }).catch(e => tile.setState(TileState.ERROR));\n                        } else {\n                            img.src = transformedRequest;\n                        }\n                    });\n                }\n            };\n        }\n        const url = glSource.url;\n        if (url && !glSource.tiles) {\n            const normalizedSourceUrl = normalizeSourceUrl(url, options.accessToken, options.accessTokenParam || 'access_token', styleUrl || location.href);\n            if (url.startsWith('mapbox://')) {\n                promise = Promise.resolve({\n                    tileJson: Object.assign({}, glSource, {\n                        url: undefined,\n                        tiles: expandUrl(normalizedSourceUrl)\n                    }),\n                    tileLoadFunction\n                });\n            } else {\n                const metadata = {};\n                promise = fetchResource('Source', normalizedSourceUrl, options, metadata).then(function (tileJson) {\n                    tileJson.tiles = tileJson.tiles.map(function (tileUrl) {\n                        if (tileJson.scheme === 'tms') {\n                            tileUrl = tileUrl.replace('{y}', '{-y}');\n                        }\n                        return normalizeSourceUrl(tileUrl, options.accessToken, options.accessTokenParam || 'access_token', metadata.request.url);\n                    });\n                    return Promise.resolve({\n                        tileJson,\n                        tileLoadFunction\n                    });\n                });\n            }\n        } else {\n            glSource = Object.assign({}, glSource, {\n                tiles: glSource.tiles.map(function (tileUrl) {\n                    if (glSource.scheme === 'tms') {\n                        tileUrl = tileUrl.replace('{y}', '{-y}');\n                    }\n                    return normalizeSourceUrl(tileUrl, options.accessToken, options.accessTokenParam || 'access_token', styleUrl || location.href);\n                })\n            });\n            promise = Promise.resolve({\n                tileJson: Object.assign({}, glSource),\n                tileLoadFunction\n            });\n        }\n        tilejsonCache[cacheKey] = promise;\n    }\n    return promise;\n}\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} spriteImage Sprite image id.\n * @param {{x: number, y: number, width: number, height: number, pixelRatio: number}} spriteImageData Sprite image data.\n * @param {number} haloWidth Halo width.\n * @param {{r: number, g: number, b: number, a: number}} haloColor Halo color.\n * @return {HTMLCanvasElement} Canvas element with the halo.\n */\nfunction drawIconHalo(spriteImage, spriteImageData, haloWidth, haloColor) {\n    const imgSize = [\n        2 * haloWidth * spriteImageData.pixelRatio + spriteImageData.width,\n        2 * haloWidth * spriteImageData.pixelRatio + spriteImageData.height\n    ];\n    const imageCanvas = createCanvas(imgSize[0], imgSize[1]);\n    const imageContext = imageCanvas.getContext('2d');\n    imageContext.drawImage(spriteImage, spriteImageData.x, spriteImageData.y, spriteImageData.width, spriteImageData.height, haloWidth * spriteImageData.pixelRatio, haloWidth * spriteImageData.pixelRatio, spriteImageData.width, spriteImageData.height);\n    const imageData = imageContext.getImageData(0, 0, imgSize[0], imgSize[1]);\n    imageContext.globalCompositeOperation = 'destination-over';\n    imageContext.fillStyle = `rgba(${ haloColor.r * 255 },${ haloColor.g * 255 },${ haloColor.b * 255 },${ haloColor.a })`;\n    const data = imageData.data;\n    for (let i = 0, ii = imageData.width; i < ii; ++i) {\n        for (let j = 0, jj = imageData.height; j < jj; ++j) {\n            const index = (j * ii + i) * 4;\n            const alpha = data[index + 3];\n            if (alpha > 0) {\n                imageContext.arc(i, j, haloWidth * spriteImageData.pixelRatio, 0, 2 * Math.PI);\n            }\n        }\n    }\n    imageContext.fill();\n    return imageCanvas;\n}\nfunction smoothstep(min, max, value) {\n    const x = Math.max(0, Math.min(1, (value - min) / (max - min)));\n    return x * x * (3 - 2 * x);\n}\n/**\n * @param {HTMLImageElement} image SDF image\n * @param {{x: number, y: number, width: number, height: number}} area Area to unSDF\n * @param {{r: number, g: number, b: number, a: number}} color Color to use\n * @return {HTMLCanvasElement} Regular image\n */\nfunction drawSDF(image, area, color) {\n    const imageCanvas = createCanvas(area.width, area.height);\n    const imageContext = imageCanvas.getContext('2d');\n    imageContext.drawImage(image, area.x, area.y, area.width, area.height, 0, 0, area.width, area.height);\n    const imageData = imageContext.getImageData(0, 0, area.width, area.height);\n    const data = imageData.data;\n    for (let i = 0, ii = imageData.width; i < ii; ++i) {\n        for (let j = 0, jj = imageData.height; j < jj; ++j) {\n            const index = (j * ii + i) * 4;\n            const dist = data[index + 3] / 255;\n            const buffer = 0.75;\n            const gamma = 0.1;\n            const alpha = smoothstep(buffer - gamma, buffer + gamma, dist);\n            if (alpha > 0) {\n                data[index + 0] = Math.round(255 * color.r * alpha);\n                data[index + 1] = Math.round(255 * color.g * alpha);\n                data[index + 2] = Math.round(255 * color.b * alpha);\n                data[index + 3] = Math.round(255 * alpha);\n            } else {\n                data[index + 3] = 0;\n            }\n        }\n    }\n    imageContext.putImageData(imageData, 0, 0);\n    return imageCanvas;\n}    /**\n * @typedef {import(\"./apply.js\").Options} Options\n * @private\n */\n\nconst hairSpacePool = Array(256).join('\\u200A');\nfunction applyLetterSpacing(text, letterSpacing) {\n    if (letterSpacing >= 0.05) {\n        let textWithLetterSpacing = '';\n        const lines = text.split('\\n');\n        const joinSpaceString = hairSpacePool.slice(0, Math.round(letterSpacing / 0.1));\n        for (let l = 0, ll = lines.length; l < ll; ++l) {\n            if (l > 0) {\n                textWithLetterSpacing += '\\n';\n            }\n            textWithLetterSpacing += lines[l].split('').join(joinSpaceString);\n        }\n        return textWithLetterSpacing;\n    }\n    return text;\n}\nlet measureContext;\nfunction getMeasureContext() {\n    if (!measureContext) {\n        measureContext = createCanvas(1, 1).getContext('2d');\n    }\n    return measureContext;\n}\nfunction measureText(text, letterSpacing) {\n    return getMeasureContext().measureText(text).width + (text.length - 1) * letterSpacing;\n}\nconst measureCache = {};\nfunction wrapText(text, font, em, letterSpacing) {\n    if (text.indexOf('\\n') !== -1) {\n        const hardLines = text.split('\\n');\n        const lines = [];\n        for (let i = 0, ii = hardLines.length; i < ii; ++i) {\n            lines.push(wrapText(hardLines[i], font, em, letterSpacing));\n        }\n        return lines.join('\\n');\n    }\n    const key = em + ',' + font + ',' + text + ',' + letterSpacing;\n    let wrappedText = measureCache[key];\n    if (!wrappedText) {\n        const words = text.split(' ');\n        if (words.length > 1) {\n            const ctx = getMeasureContext();\n            ctx.font = font;\n            const oneEm = ctx.measureText('M').width;\n            const maxWidth = oneEm * em;\n            let line = '';\n            const lines = [];\n            // Pass 1 - wrap lines to not exceed maxWidth\n            for (let i = 0, ii = words.length; i < ii; ++i) {\n                const word = words[i];\n                const testLine = line + (line ? ' ' : '') + word;\n                if (measureText(testLine, letterSpacing) <= maxWidth) {\n                    line = testLine;\n                } else {\n                    if (line) {\n                        lines.push(line);\n                    }\n                    line = word;\n                }\n            }\n            if (line) {\n                lines.push(line);\n            }\n            // Pass 2 - add lines with a width of less than 30% of maxWidth to the previous or next line\n            for (let i = 0, ii = lines.length; i < ii && ii > 1; ++i) {\n                const line = lines[i];\n                if (measureText(line, letterSpacing) < maxWidth * 0.35) {\n                    const prevWidth = i > 0 ? measureText(lines[i - 1], letterSpacing) : Infinity;\n                    const nextWidth = i < ii - 1 ? measureText(lines[i + 1], letterSpacing) : Infinity;\n                    lines.splice(i, 1);\n                    ii -= 1;\n                    if (prevWidth < nextWidth) {\n                        lines[i - 1] += ' ' + line;\n                        i -= 1;\n                    } else {\n                        lines[i] = line + ' ' + lines[i];\n                    }\n                }\n            }\n            // Pass 3 - try to fill 80% of maxWidth for each line\n            for (let i = 0, ii = lines.length - 1; i < ii; ++i) {\n                const line = lines[i];\n                const next = lines[i + 1];\n                if (measureText(line, letterSpacing) > maxWidth * 0.7 && measureText(next, letterSpacing) < maxWidth * 0.6) {\n                    const lineWords = line.split(' ');\n                    const lastWord = lineWords.pop();\n                    if (measureText(lastWord, letterSpacing) < maxWidth * 0.2) {\n                        lines[i] = lineWords.join(' ');\n                        lines[i + 1] = lastWord + ' ' + next;\n                    }\n                    ii -= 1;\n                }\n            }\n            wrappedText = lines.join('\\n');\n        } else {\n            wrappedText = text;\n        }\n        wrappedText = applyLetterSpacing(wrappedText, letterSpacing);\n        measureCache[key] = wrappedText;\n    }\n    return wrappedText;\n}\nconst fontFamilyRegEx = /font-family: ?([^;]*);/;\nconst stripQuotesRegEx = /(\"|')/g;\nlet loadedFontFamilies;\nfunction hasFontFamily(family) {\n    if (!loadedFontFamilies) {\n        loadedFontFamilies = {};\n        const styleSheets = document.styleSheets;\n        for (let i = 0, ii = styleSheets.length; i < ii; ++i) {\n            const styleSheet = styleSheets[i];\n            try {\n                const cssRules = styleSheet.rules || styleSheet.cssRules;\n                if (cssRules) {\n                    for (let j = 0, jj = cssRules.length; j < jj; ++j) {\n                        const cssRule = cssRules[j];\n                        if (cssRule.type == 5) {\n                            const match = cssRule.cssText.match(fontFamilyRegEx);\n                            loadedFontFamilies[match[1].replace(stripQuotesRegEx, '')] = true;\n                        }\n                    }\n                }\n            } catch (e) {\n            }\n        }\n    }\n    return family in loadedFontFamilies;\n}\nconst processedFontFamilies = {};\n/**\n * @param {Array} fonts Fonts.\n * @param {string} [templateUrl] Template URL.\n * @return {Array} Processed fonts.\n * @private\n */\nfunction getFonts(fonts, templateUrl = 'https://cdn.jsdelivr.net/npm/@fontsource/{font-family}/{fontweight}{-fontstyle}.css') {\n    const fontsKey = fonts.toString();\n    if (fontsKey in processedFontFamilies) {\n        return processedFontFamilies[fontsKey];\n    }\n    const fontDescriptions = [];\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n        fonts[i] = fonts[i].replace('Arial Unicode MS', 'Arial');\n        const font = fonts[i];\n        const cssFont = mb2css(font, 1);\n        registerFont(cssFont);\n        const parts = cssFont.split(' ');\n        fontDescriptions.push([\n            parts.slice(3).join(' ').replace(/\"/g, ''),\n            parts[1],\n            parts[0]\n        ]);\n    }\n    for (let i = 0, ii = fontDescriptions.length; i < ii; ++i) {\n        const fontDescription = fontDescriptions[i];\n        const family = fontDescription[0];\n        if (!hasFontFamily(family)) {\n            if (checkedFonts.get(`${ fontDescription[2] }\\n${ fontDescription[1] } \\n${ family }`) !== 100) {\n                const fontUrl = templateUrl.replace('{font-family}', family.replace(/ /g, '-').toLowerCase()).replace('{Font+Family}', family.replace(/ /g, '+')).replace('{fontweight}', fontDescription[1]).replace('{-fontstyle}', fontDescription[2].replace('normal', '').replace(/(.+)/, '-$1')).replace('{fontstyle}', fontDescription[2]);\n                if (!document.querySelector('link[href=\"' + fontUrl + '\"]')) {\n                    const markup = document.createElement('link');\n                    markup.href = fontUrl;\n                    markup.rel = 'stylesheet';\n                    document.head.appendChild(markup);\n                }\n            }\n        }\n    }\n    processedFontFamilies[fontsKey] = fonts;\n    return fonts;\n}\n\n/*\nol-mapbox-style - Use Mapbox Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\n/**\n * @typedef {import(\"ol/layer/Vector\").default} VectorLayer\n * @typedef {import(\"ol/layer/VectorTile\").default} VectorTileLayer\n * @typedef {import(\"ol/style/Style\").StyleFunction} StyleFunction\n * @typedef {import('./util.js').ResourceType} ResourceType\n */\nconst types = {\n    'Point': 1,\n    'MultiPoint': 1,\n    'LineString': 2,\n    'MultiLineString': 2,\n    'Polygon': 3,\n    'MultiPolygon': 3\n};\nconst anchor = {\n    'center': [\n        0.5,\n        0.5\n    ],\n    'left': [\n        0,\n        0.5\n    ],\n    'right': [\n        1,\n        0.5\n    ],\n    'top': [\n        0.5,\n        0\n    ],\n    'bottom': [\n        0.5,\n        1\n    ],\n    'top-left': [\n        0,\n        0\n    ],\n    'top-right': [\n        1,\n        0\n    ],\n    'bottom-left': [\n        0,\n        1\n    ],\n    'bottom-right': [\n        1,\n        1\n    ]\n};\nconst expressionData = function (rawExpression, propertySpec) {\n    const compiledExpression = createPropertyExpression(rawExpression, propertySpec);\n    if (compiledExpression.result === 'error') {\n        throw new Error(compiledExpression.value.map(err => `${ err.key }: ${ err.message }`).join(', '));\n    }\n    return compiledExpression.value;\n};\nconst emptyObj$1 = {};\nconst zoomObj = { zoom: 0 };\nlet renderFeatureCoordinates, renderFeature;\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {string} layoutOrPaint 'layout' or 'paint'.\n * @param {string} property Feature property.\n * @param {number} zoom Zoom.\n * @param {Object} feature Gl feature.\n * @param {Object} [functionCache] Function cache.\n * @param {Object} [featureState] Feature state.\n * @return {?} Value.\n */\nfunction getValue(layer, layoutOrPaint, property, zoom, feature, functionCache, featureState) {\n    const layerId = layer.id;\n    if (!functionCache) {\n        functionCache = {};\n        console.warn('No functionCache provided to getValue()');    //eslint-disable-line no-console\n    }\n    if (!functionCache[layerId]) {\n        functionCache[layerId] = {};\n    }\n    const functions = functionCache[layerId];\n    if (!functions[property]) {\n        let value = (layer[layoutOrPaint] || emptyObj$1)[property];\n        const propertySpec = spec[`${ layoutOrPaint }_${ layer.type }`][property];\n        if (value === undefined) {\n            value = propertySpec.default;\n        }\n        let isExpr = isExpression(value);\n        if (!isExpr && isFunction(value)) {\n            value = convertFunction(value, propertySpec);\n            isExpr = true;\n        }\n        if (isExpr) {\n            const compiledExpression = expressionData(value, propertySpec);\n            functions[property] = compiledExpression.evaluate.bind(compiledExpression);\n        } else {\n            if (propertySpec.type == 'color') {\n                value = Color$1.parse(value);\n            }\n            functions[property] = function () {\n                return value;\n            };\n        }\n    }\n    zoomObj.zoom = zoom;\n    return functions[property](zoomObj, feature, featureState);\n}\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {number} zoom Zoom.\n * @param {Object} feature Gl feature.\n * @param {\"icon\"|\"text\"} prefix Style property prefix.\n * @param {Object} [functionCache] Function cache.\n * @return {\"declutter\"|\"obstacle\"|\"none\"} Value.\n */\nfunction getDeclutterMode(layer, zoom, feature, prefix, functionCache) {\n    const allowOverlap = getValue(layer, 'layout', `${ prefix }-allow-overlap`, zoom, feature, functionCache);\n    if (!allowOverlap) {\n        return 'declutter';\n    }\n    const ignorePlacement = getValue(layer, 'layout', `${ prefix }-ignore-placement`, zoom, feature, functionCache);\n    if (!ignorePlacement) {\n        return 'obstacle';\n    }\n    return 'none';\n}\n/**\n * @private\n * @param {string} layerId Layer id.\n * @param {?} filter Filter.\n * @param {Object} feature Feature.\n * @param {number} zoom Zoom.\n * @param {Object} [filterCache] Filter cache.\n * @return {boolean} Filter result.\n */\nfunction evaluateFilter(layerId, filter, feature, zoom, filterCache) {\n    if (!filterCache) {\n        console.warn('No filterCache provided to evaluateFilter()');    //eslint-disable-line no-console\n    }\n    if (!(layerId in filterCache)) {\n        filterCache[layerId] = createFilter(filter).filter;\n    }\n    zoomObj.zoom = zoom;\n    return filterCache[layerId](zoomObj, feature);\n}\nlet renderTransparentEnabled = false;\n/**\n * Configure whether features with a transparent style should be rendered. When\n * set to `true`, it will be possible to hit detect content that is not visible,\n * like transparent fills of polygons, using `ol/layer/Layer#getFeatures()` or\n * `ol/Map#getFeaturesAtPixel()`\n * @param {boolean} enabled Rendering of transparent elements is enabled.\n * Default is `false`.\n */\nfunction renderTransparent(enabled) {\n    if (enabled !== renderTransparentEnabled) {\n        clearFunctionCache();\n        renderTransparentEnabled = enabled;\n    }\n}\n/**\n * @private\n * @param {?} color Color.\n * @param {number} [opacity] Opacity.\n * @return {string} Color.\n */\nfunction colorWithOpacity(color, opacity) {\n    if (color) {\n        if (!renderTransparentEnabled && (color.a === 0 || opacity === 0)) {\n            return undefined;\n        }\n        const a = color.a;\n        opacity = opacity === undefined ? 1 : opacity;\n        return a === 0 ? 'transparent' : 'rgba(' + Math.round(color.r * 255 / a) + ',' + Math.round(color.g * 255 / a) + ',' + Math.round(color.b * 255 / a) + ',' + a * opacity + ')';\n    }\n    return color;\n}\nconst templateRegEx = /\\{[^{}}]*\\}/g;\n/**\n * @private\n * @param {string} text Text.\n * @param {Object} properties Properties.\n * @return {string} Text.\n */\nfunction fromTemplate(text, properties) {\n    return text.replace(templateRegEx, function (match) {\n        return properties[match.slice(1, -1)] || '';\n    });\n}\nlet recordLayer = false;\n/**\n * Turns recording of the Mapbox Style's `layer` on and off. When turned on,\n * the layer that a rendered feature belongs to will be set as the feature's\n * `mapbox-layer` property.\n * @param {boolean} record Recording of the style layer is on.\n */\nfunction recordStyleLayer(record = false) {\n    recordLayer = record;\n}\nconst styleFunctionArgs = {};\n/**\n * Creates a style function from the `glStyle` object for all layers that use\n * the specified `source`, which needs to be a `\"type\": \"vector\"` or\n * `\"type\": \"geojson\"` source and applies it to the specified OpenLayers layer.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function also works in a web worker. In worker mode, the main thread needs\n * to listen to messages from the worker and respond with another message to make\n * sure that sprite image loading works:\n *\n * ```js\n *  worker.addEventListener('message', event => {\n *   if (event.data.action === 'loadImage') {\n *     const image = new Image();\n *     image.crossOrigin = 'anonymous';\n *     image.addEventListener('load', function() {\n *       createImageBitmap(image, 0, 0, image.width, image.height).then(imageBitmap => {\n *         worker.postMessage({\n *           action: 'imageLoaded',\n *           image: imageBitmap,\n *           src: event.data.src\n *         }, [imageBitmap]);\n *       });\n *     });\n *     image.src = event.data.src;\n *   }\n * });\n * ```\n *\n * @param {VectorLayer|VectorTileLayer} olLayer OpenLayers layer to\n * apply the style to. In addition to the style, the layer will get two\n * properties: `mapbox-source` will be the `id` of the `glStyle`'s source used\n * for the layer, and `mapbox-layers` will be an array of the `id`s of the\n * `glStyle`'s layers.\n * @param {string|Object} glStyle Mapbox Style object.\n * @param {string|Array<string>} sourceOrLayers `source` key or an array of layer `id`s\n * from the Mapbox Style object. When a `source` key is provided, all layers for\n * the specified source will be included in the style function. When layer `id`s\n * are provided, they must be from layers that use the same source.\n * @param {Array<number>} resolutions\n * Resolutions for mapping resolution to zoom level.\n * @param {Object} spriteData Sprite data from the url specified in\n * the Mapbox Style object's `sprite` property. Only required if a `sprite`\n * property is specified in the Mapbox Style object.\n * @param {string|Request|Promise<string|Request>} spriteImageUrl Sprite image url for the sprite\n * specified in the Mapbox Style object's `sprite` property. Only required if a\n * `sprite` property is specified in the Mapbox Style object.\n * @param {function(Array<string>, string=):Array<string>} getFonts Function that\n * receives a font stack and the url template from the GL style's `metadata['ol:webfonts']`\n * property (if set) as arguments, and returns a (modified) font stack that\n * is available. Font names are the names used in the Mapbox Style object. If\n * not provided, the font stack will be used as-is. This function can also be\n * used for loading web fonts.\n * @param {function(VectorLayer|VectorTileLayer, string):HTMLImageElement|HTMLCanvasElement|string|undefined} [getImage=undefined]\n * Function that returns an image or a URL for an image name. If the result is an HTMLImageElement, it must already be\n * loaded. The layer can be used to call layer.changed() when the loading and processing of the image has finished.\n * This function can be used for icons not in the sprite or to override sprite icons.\n * @return {StyleFunction} Style function for use in\n * `ol.layer.Vector` or `ol.layer.VectorTile`.\n */\nfunction stylefunction(olLayer, glStyle, sourceOrLayers, resolutions = defaultResolutions, spriteData = undefined, spriteImageUrl = undefined, getFonts = undefined, getImage = undefined) {\n    if (typeof glStyle == 'string') {\n        glStyle = JSON.parse(glStyle);\n    }\n    if (glStyle.version != 8) {\n        throw new Error('glStyle version 8 required.');\n    }\n    styleFunctionArgs[getStyleFunctionKey(glStyle, olLayer)] = Array.from(arguments);\n    let spriteImage, spriteImageSize;\n    let spriteImageUnSDFed;\n    if (spriteImageUrl) {\n        if (typeof Image !== 'undefined') {\n            const img = new Image();\n            let blobUrl;\n            toPromise(() => spriteImageUrl).then(spriteImageUrl => {\n                if (spriteImageUrl instanceof Request) {\n                    fetch(spriteImageUrl).then(response => response.blob()).then(blob => {\n                        blobUrl = URL.createObjectURL(blob);\n                        img.src = blobUrl;\n                    }).catch(() => {\n                    });\n                } else {\n                    img.crossOrigin = 'anonymous';\n                    img.src = spriteImageUrl;\n                    if (blobUrl) {\n                        URL.revokeObjectURL(blobUrl);\n                    }\n                }\n            });\n            img.onload = function () {\n                spriteImage = img;\n                spriteImageSize = [\n                    img.width,\n                    img.height\n                ];\n                olLayer.changed();\n                img.onload = null;\n            };\n        } else if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n            //eslint-disable-line\n            const worker = self;\n            // Main thread needs to handle 'loadImage' and dispatch 'imageLoaded'\n            worker.postMessage({\n                action: 'loadImage',\n                src: spriteImageUrl\n            });\n            worker.addEventListener('message', function handler(event) {\n                if (event.data.action === 'imageLoaded' && event.data.src === spriteImageUrl) {\n                    spriteImage = event.data.image;\n                    spriteImageSize = [\n                        spriteImage.width,\n                        spriteImage.height\n                    ];\n                }\n            });\n        }\n    }\n    const allLayers = derefLayers(glStyle.layers);\n    const layersBySourceLayer = {};\n    const mapboxLayers = [];\n    const iconImageCache = {};\n    const patternCache = {};\n    const functionCache = getFunctionCache(glStyle);\n    const filterCache = getFilterCache(glStyle);\n    let mapboxSource;\n    for (let i = 0, ii = allLayers.length; i < ii; ++i) {\n        const layer = allLayers[i];\n        const layerId = layer.id;\n        if (typeof sourceOrLayers == 'string' && layer.source == sourceOrLayers || Array.isArray(sourceOrLayers) && sourceOrLayers.indexOf(layerId) !== -1) {\n            const sourceLayer = layer['source-layer'];\n            if (!mapboxSource) {\n                mapboxSource = layer.source;\n                const source = glStyle.sources[mapboxSource];\n                if (!source) {\n                    throw new Error(`Source \"${ mapboxSource }\" is not defined`);\n                }\n                const type = source.type;\n                if (type !== 'vector' && type !== 'geojson') {\n                    throw new Error(`Source \"${ mapboxSource }\" is not of type \"vector\" or \"geojson\", but \"${ type }\"`);\n                }\n            } else if (layer.source !== mapboxSource) {\n                throw new Error(`Layer \"${ layerId }\" does not use source \"${ mapboxSource }`);\n            }\n            let layers = layersBySourceLayer[sourceLayer];\n            if (!layers) {\n                layers = [];\n                layersBySourceLayer[sourceLayer] = layers;\n            }\n            layers.push({\n                layer: layer,\n                index: i\n            });\n            mapboxLayers.push(layerId);\n        }\n    }\n    const textHalo = new Stroke();\n    const textColor = new Fill();\n    const styles = [];\n    /**\n   * @param {import(\"ol/Feature\").default|import(\"ol/render/Feature\").default} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {string} [onlyLayer] Calculate style for this layer only.\n   * @return {Array<import(\"ol/style/Style\").default>} Style.\n   */\n    const styleFunction = function (feature, resolution, onlyLayer) {\n        const properties = feature.getProperties();\n        const layers = layersBySourceLayer[properties.layer];\n        if (!layers) {\n            return undefined;\n        }\n        let zoom = resolutions.indexOf(resolution);\n        if (zoom == -1) {\n            zoom = getZoomForResolution(resolution, resolutions);\n        }\n        const type = types[feature.getGeometry().getType()];\n        const f = {\n            id: feature.getId(),\n            properties: properties,\n            type: type\n        };\n        const featureState = olLayer.get('mapbox-featurestate')[feature.getId()];\n        let stylesLength = -1;\n        let featureBelongsToLayer;\n        for (let i = 0, ii = layers.length; i < ii; ++i) {\n            const layerData = layers[i];\n            const layer = layerData.layer;\n            const layerId = layer.id;\n            if (onlyLayer !== undefined && onlyLayer !== layerId) {\n                continue;\n            }\n            const layout = layer.layout || emptyObj$1;\n            const paint = layer.paint || emptyObj$1;\n            if (layout.visibility === 'none' || 'minzoom' in layer && zoom < layer.minzoom || 'maxzoom' in layer && zoom >= layer.maxzoom) {\n                continue;\n            }\n            const filter = layer.filter;\n            if (!filter || evaluateFilter(layerId, filter, f, zoom, filterCache)) {\n                featureBelongsToLayer = layer;\n                let color, opacity, fill, stroke, strokeColor, style;\n                const index = layerData.index;\n                if (type == 3 && (layer.type == 'fill' || layer.type == 'fill-extrusion')) {\n                    opacity = getValue(layer, 'paint', layer.type + '-opacity', zoom, f, functionCache, featureState);\n                    if (layer.type + '-pattern' in paint) {\n                        const fillIcon = getValue(layer, 'paint', layer.type + '-pattern', zoom, f, functionCache, featureState);\n                        if (fillIcon) {\n                            const icon = typeof fillIcon === 'string' ? fromTemplate(fillIcon, properties) : fillIcon.toString();\n                            if (spriteImage && spriteData && spriteData[icon]) {\n                                ++stylesLength;\n                                style = styles[stylesLength];\n                                if (!style || !style.getFill() || style.getStroke() || style.getText()) {\n                                    style = new Style({ fill: new Fill() });\n                                    styles[stylesLength] = style;\n                                }\n                                fill = style.getFill();\n                                style.setZIndex(index);\n                                const icon_cache_key = icon + '.' + opacity;\n                                let pattern = patternCache[icon_cache_key];\n                                if (!pattern) {\n                                    const spriteImageData = spriteData[icon];\n                                    const canvas = createCanvas(spriteImageData.width, spriteImageData.height);\n                                    const ctx = canvas.getContext('2d');\n                                    ctx.globalAlpha = opacity;\n                                    ctx.drawImage(spriteImage, spriteImageData.x, spriteImageData.y, spriteImageData.width, spriteImageData.height, 0, 0, spriteImageData.width, spriteImageData.height);\n                                    pattern = ctx.createPattern(canvas, 'repeat');\n                                    patternCache[icon_cache_key] = pattern;\n                                }\n                                fill.setColor(pattern);\n                            }\n                        }\n                    } else {\n                        color = colorWithOpacity(getValue(layer, 'paint', layer.type + '-color', zoom, f, functionCache, featureState), opacity);\n                        if (layer.type + '-outline-color' in paint) {\n                            strokeColor = colorWithOpacity(getValue(layer, 'paint', layer.type + '-outline-color', zoom, f, functionCache, featureState), opacity);\n                        }\n                        if (!strokeColor) {\n                            strokeColor = color;\n                        }\n                        if (color || strokeColor) {\n                            ++stylesLength;\n                            style = styles[stylesLength];\n                            if (!style || color && !style.getFill() || !color && style.getFill() || strokeColor && !style.getStroke() || !strokeColor && style.getStroke() || style.getText()) {\n                                style = new Style({\n                                    fill: color ? new Fill() : undefined,\n                                    stroke: strokeColor ? new Stroke() : undefined\n                                });\n                                styles[stylesLength] = style;\n                            }\n                            if (color) {\n                                fill = style.getFill();\n                                fill.setColor(color);\n                            }\n                            if (strokeColor) {\n                                stroke = style.getStroke();\n                                stroke.setColor(strokeColor);\n                                stroke.setWidth(0.5);\n                            }\n                            style.setZIndex(index);\n                        }\n                    }\n                }\n                if (type != 1 && layer.type == 'line') {\n                    if (!('line-pattern' in paint)) {\n                        color = colorWithOpacity(getValue(layer, 'paint', 'line-color', zoom, f, functionCache, featureState), getValue(layer, 'paint', 'line-opacity', zoom, f, functionCache, featureState));\n                    } else {\n                        color = undefined;\n                    }\n                    const width = getValue(layer, 'paint', 'line-width', zoom, f, functionCache, featureState);\n                    if (color && width > 0) {\n                        ++stylesLength;\n                        style = styles[stylesLength];\n                        if (!style || !style.getStroke() || style.getFill() || style.getText()) {\n                            style = new Style({ stroke: new Stroke() });\n                            styles[stylesLength] = style;\n                        }\n                        stroke = style.getStroke();\n                        stroke.setLineCap(getValue(layer, 'layout', 'line-cap', zoom, f, functionCache, featureState));\n                        stroke.setLineJoin(getValue(layer, 'layout', 'line-join', zoom, f, functionCache, featureState));\n                        stroke.setMiterLimit(getValue(layer, 'layout', 'line-miter-limit', zoom, f, functionCache, featureState));\n                        stroke.setColor(color);\n                        stroke.setWidth(width);\n                        stroke.setLineDash(paint['line-dasharray'] ? getValue(layer, 'paint', 'line-dasharray', zoom, f, functionCache, featureState).map(function (x) {\n                            return x * width;\n                        }) : null);\n                        style.setZIndex(index);\n                    }\n                }\n                let hasImage = false;\n                let text = null;\n                let placementAngle = 0;\n                let icon, iconImg, skipLabel;\n                if ((type == 1 || type == 2) && 'icon-image' in layout) {\n                    const iconImage = getValue(layer, 'layout', 'icon-image', zoom, f, functionCache, featureState);\n                    if (iconImage) {\n                        icon = typeof iconImage === 'string' ? fromTemplate(iconImage, properties) : iconImage.toString();\n                        let styleGeom = undefined;\n                        const imageElement = getImage ? getImage(olLayer, icon) : undefined;\n                        if (spriteImage && spriteData && spriteData[icon] || imageElement) {\n                            const iconRotationAlignment = getValue(layer, 'layout', 'icon-rotation-alignment', zoom, f, functionCache, featureState);\n                            if (type == 2) {\n                                const geom = feature.getGeometry();\n                                // ol package and ol-debug.js only\n                                if (geom.getFlatMidpoint || geom.getFlatMidpoints) {\n                                    const extent = geom.getExtent();\n                                    const size = Math.sqrt(Math.max(Math.pow((extent[2] - extent[0]) / resolution, 2), Math.pow((extent[3] - extent[1]) / resolution, 2)));\n                                    if (size > 150) {\n                                        //FIXME Do not hard-code a size of 150\n                                        const midpoint = geom.getType() === 'MultiLineString' ? geom.getFlatMidpoints() : geom.getFlatMidpoint();\n                                        if (!renderFeature) {\n                                            renderFeatureCoordinates = [\n                                                NaN,\n                                                NaN\n                                            ];\n                                            renderFeature = new RenderFeature('Point', renderFeatureCoordinates, [], 2, {}, undefined);\n                                        }\n                                        styleGeom = renderFeature;\n                                        renderFeatureCoordinates[0] = midpoint[0];\n                                        renderFeatureCoordinates[1] = midpoint[1];\n                                        const placement = getValue(layer, 'layout', 'symbol-placement', zoom, f, functionCache, featureState);\n                                        if (placement === 'line' && iconRotationAlignment === 'map') {\n                                            const stride = geom.getStride();\n                                            const coordinates = geom.getFlatCoordinates();\n                                            for (let i = 0, ii = coordinates.length - stride; i < ii; i += stride) {\n                                                const x1 = coordinates[i];\n                                                const y1 = coordinates[i + 1];\n                                                const x2 = coordinates[i + stride];\n                                                const y2 = coordinates[i + stride + 1];\n                                                const minX = Math.min(x1, x2);\n                                                const minY = Math.min(y1, y2);\n                                                const maxX = Math.max(x1, x2);\n                                                const maxY = Math.max(y1, y2);\n                                                if (midpoint[0] >= minX && midpoint[0] <= maxX && midpoint[1] >= minY && midpoint[1] <= maxY) {\n                                                    placementAngle = Math.atan2(y1 - y2, x2 - x1);\n                                                    break;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            if (type !== 2 || styleGeom) {\n                                const iconSize = getValue(layer, 'layout', 'icon-size', zoom, f, functionCache, featureState);\n                                const iconColor = paint['icon-color'] !== undefined ? getValue(layer, 'paint', 'icon-color', zoom, f, functionCache, featureState) : null;\n                                if (!iconColor || iconColor.a !== 0) {\n                                    const haloColor = getValue(layer, 'paint', 'icon-halo-color', zoom, f, functionCache, featureState);\n                                    const haloWidth = getValue(layer, 'paint', 'icon-halo-width', zoom, f, functionCache, featureState);\n                                    let iconCacheKey = `${ icon }.${ iconSize }.${ haloWidth }.${ haloColor }`;\n                                    if (iconColor !== null) {\n                                        iconCacheKey += `.${ iconColor }`;\n                                    }\n                                    iconImg = iconImageCache[iconCacheKey];\n                                    if (!iconImg) {\n                                        const declutterMode = getDeclutterMode(layer, zoom, f, 'icon', functionCache);\n                                        let displacement;\n                                        if ('icon-offset' in layout) {\n                                            displacement = getValue(layer, 'layout', 'icon-offset', zoom, f, functionCache, featureState).slice(0);\n                                            displacement[0] *= iconSize;\n                                            displacement[1] *= -iconSize;\n                                        }\n                                        let color = iconColor ? [\n                                            iconColor.r * 255,\n                                            iconColor.g * 255,\n                                            iconColor.b * 255,\n                                            iconColor.a\n                                        ] : undefined;\n                                        if (imageElement) {\n                                            const iconOptions = {\n                                                color: color,\n                                                rotateWithView: iconRotationAlignment === 'map',\n                                                displacement: displacement,\n                                                declutterMode: declutterMode,\n                                                scale: iconSize\n                                            };\n                                            if (typeof imageElement === 'string') {\n                                                // it is a src URL\n                                                iconOptions.src = imageElement;\n                                            } else {\n                                                iconOptions.img = imageElement;\n                                                iconOptions.imgSize = [\n                                                    imageElement.width,\n                                                    imageElement.height\n                                                ];\n                                            }\n                                            iconImg = new Icon(iconOptions);\n                                        } else {\n                                            const spriteImageData = spriteData[icon];\n                                            let img, size, offset;\n                                            if (haloWidth) {\n                                                if (spriteImageData.sdf) {\n                                                    img = drawIconHalo(drawSDF(spriteImage, spriteImageData, iconColor || [\n                                                        0,\n                                                        0,\n                                                        0,\n                                                        1\n                                                    ]), {\n                                                        x: 0,\n                                                        y: 0,\n                                                        width: spriteImageData.width,\n                                                        height: spriteImageData.height,\n                                                        pixelRatio: spriteImageData.pixelRatio\n                                                    }, haloWidth, haloColor);\n                                                    color = undefined;    // do not tint haloed icons\n                                                } else {\n                                                    img = drawIconHalo(spriteImage, spriteImageData, haloWidth, haloColor);\n                                                }\n                                            } else {\n                                                if (spriteImageData.sdf) {\n                                                    if (!spriteImageUnSDFed) {\n                                                        spriteImageUnSDFed = drawSDF(spriteImage, {\n                                                            x: 0,\n                                                            y: 0,\n                                                            width: spriteImageSize[0],\n                                                            height: spriteImageSize[1]\n                                                        }, {\n                                                            r: 1,\n                                                            g: 1,\n                                                            b: 1,\n                                                            a: 1\n                                                        });\n                                                    }\n                                                    img = spriteImageUnSDFed;\n                                                } else {\n                                                    img = spriteImage;\n                                                }\n                                                size = [\n                                                    spriteImageData.width,\n                                                    spriteImageData.height\n                                                ];\n                                                offset = [\n                                                    spriteImageData.x,\n                                                    spriteImageData.y\n                                                ];\n                                            }\n                                            iconImg = new Icon({\n                                                color: color,\n                                                img: img,\n                                                // @ts-ignore\n                                                imgSize: spriteImageSize,\n                                                size: size,\n                                                offset: offset,\n                                                rotateWithView: iconRotationAlignment === 'map',\n                                                scale: iconSize / spriteImageData.pixelRatio,\n                                                displacement: displacement,\n                                                declutterMode: declutterMode\n                                            });\n                                        }\n                                        iconImageCache[iconCacheKey] = iconImg;\n                                    }\n                                }\n                                if (iconImg) {\n                                    ++stylesLength;\n                                    style = styles[stylesLength];\n                                    if (!style || !style.getImage() || style.getFill() || style.getStroke()) {\n                                        style = new Style();\n                                        styles[stylesLength] = style;\n                                    }\n                                    style.setGeometry(styleGeom);\n                                    iconImg.setRotation(placementAngle + deg2rad(getValue(layer, 'layout', 'icon-rotate', zoom, f, functionCache, featureState)));\n                                    iconImg.setOpacity(getValue(layer, 'paint', 'icon-opacity', zoom, f, functionCache, featureState));\n                                    iconImg.setAnchor(anchor[getValue(layer, 'layout', 'icon-anchor', zoom, f, functionCache, featureState)]);\n                                    style.setImage(iconImg);\n                                    text = style.getText();\n                                    style.setText(undefined);\n                                    style.setZIndex(index);\n                                    hasImage = true;\n                                    skipLabel = false;\n                                }\n                            } else {\n                                skipLabel = true;\n                            }\n                        }\n                    }\n                }\n                if (type == 1 && layer.type === 'circle') {\n                    ++stylesLength;\n                    style = styles[stylesLength];\n                    if (!style || !style.getImage() || style.getFill() || style.getStroke()) {\n                        style = new Style();\n                        styles[stylesLength] = style;\n                    }\n                    const circleRadius = 'circle-radius' in paint ? getValue(layer, 'paint', 'circle-radius', zoom, f, functionCache, featureState) : 5;\n                    const circleStrokeColor = colorWithOpacity(getValue(layer, 'paint', 'circle-stroke-color', zoom, f, functionCache, featureState), getValue(layer, 'paint', 'circle-stroke-opacity', zoom, f, functionCache, featureState));\n                    const circleTranslate = getValue(layer, 'paint', 'circle-translate', zoom, f, functionCache, featureState);\n                    const circleColor = colorWithOpacity(getValue(layer, 'paint', 'circle-color', zoom, f, functionCache, featureState), getValue(layer, 'paint', 'circle-opacity', zoom, f, functionCache, featureState));\n                    const circleStrokeWidth = getValue(layer, 'paint', 'circle-stroke-width', zoom, f, functionCache, featureState);\n                    const cache_key = circleRadius + '.' + circleStrokeColor + '.' + circleColor + '.' + circleStrokeWidth + '.' + circleTranslate[0] + '.' + circleTranslate[1];\n                    iconImg = iconImageCache[cache_key];\n                    if (!iconImg) {\n                        iconImg = new Circle({\n                            radius: circleRadius,\n                            displacement: [\n                                circleTranslate[0],\n                                -circleTranslate[1]\n                            ],\n                            stroke: circleStrokeColor && circleStrokeWidth > 0 ? new Stroke({\n                                width: circleStrokeWidth,\n                                color: circleStrokeColor\n                            }) : undefined,\n                            fill: circleColor ? new Fill({ color: circleColor }) : undefined,\n                            declutterMode: 'none'\n                        });\n                        iconImageCache[cache_key] = iconImg;\n                    }\n                    style.setImage(iconImg);\n                    text = style.getText();\n                    style.setText(undefined);\n                    style.setGeometry(undefined);\n                    style.setZIndex(index);\n                    hasImage = true;\n                }\n                let label, font, textLineHeight, textSize, letterSpacing, maxTextWidth;\n                if ('text-field' in layout) {\n                    textSize = Math.round(getValue(layer, 'layout', 'text-size', zoom, f, functionCache, featureState));\n                    const fontArray = getValue(layer, 'layout', 'text-font', zoom, f, functionCache, featureState);\n                    textLineHeight = getValue(layer, 'layout', 'text-line-height', zoom, f, functionCache, featureState);\n                    font = mb2css(getFonts ? getFonts(fontArray, glStyle.metadata ? glStyle.metadata['ol:webfonts'] : undefined) : fontArray, textSize, textLineHeight);\n                    if (!font.includes('sans-serif')) {\n                        font += ',sans-serif';\n                    }\n                    letterSpacing = getValue(layer, 'layout', 'text-letter-spacing', zoom, f, functionCache, featureState);\n                    maxTextWidth = getValue(layer, 'layout', 'text-max-width', zoom, f, functionCache, featureState);\n                    const textField = getValue(layer, 'layout', 'text-field', zoom, f, functionCache, featureState);\n                    if (typeof textField === 'object' && textField.sections) {\n                        if (textField.sections.length === 1) {\n                            label = textField.toString();\n                        } else {\n                            label = textField.sections.reduce((acc, chunk, i) => {\n                                const fonts = chunk.fontStack ? chunk.fontStack.split(',') : fontArray;\n                                const chunkFont = mb2css(getFonts ? getFonts(fonts) : fonts, textSize * (chunk.scale || 1), textLineHeight);\n                                let text = chunk.text;\n                                if (text === '\\n') {\n                                    acc.push('\\n', '');\n                                    return acc;\n                                }\n                                if (type == 2) {\n                                    acc.push(applyLetterSpacing(text, letterSpacing), chunkFont);\n                                    return;\n                                }\n                                text = wrapText(text, chunkFont, maxTextWidth, letterSpacing).split('\\n');\n                                for (let i = 0, ii = text.length; i < ii; ++i) {\n                                    if (i > 0) {\n                                        acc.push('\\n', '');\n                                    }\n                                    acc.push(text[i], chunkFont);\n                                }\n                                return acc;\n                            }, []);\n                        }\n                    } else {\n                        label = fromTemplate(textField, properties).trim();\n                    }\n                    opacity = getValue(layer, 'paint', 'text-opacity', zoom, f, functionCache, featureState);\n                }\n                if (label && opacity && !skipLabel) {\n                    if (!hasImage) {\n                        ++stylesLength;\n                        style = styles[stylesLength];\n                        if (!style || !style.getText() || style.getFill() || style.getStroke()) {\n                            style = new Style();\n                            styles[stylesLength] = style;\n                        }\n                        style.setImage(undefined);\n                        style.setGeometry(undefined);\n                    }\n                    const declutterMode = getDeclutterMode(layer, zoom, f, 'text', functionCache);\n                    if (!style.getText()) {\n                        style.setText(text);\n                    }\n                    text = style.getText();\n                    if (!text || 'getDeclutterMode' in text && text.getDeclutterMode() !== declutterMode) {\n                        text = new Text({\n                            padding: [\n                                2,\n                                2,\n                                2,\n                                2\n                            ],\n                            // @ts-ignore\n                            declutterMode: declutterMode\n                        });\n                        style.setText(text);\n                    }\n                    const textTransform = getValue(layer, 'layout', 'text-transform', zoom, f, functionCache, featureState);\n                    if (textTransform == 'uppercase') {\n                        label = Array.isArray(label) ? label.map((t, i) => i % 2 ? t : t.toUpperCase()) : label.toUpperCase();\n                    } else if (textTransform == 'lowercase') {\n                        label = Array.isArray(label) ? label.map((t, i) => i % 2 ? t : t.toLowerCase()) : label.toLowerCase();\n                    }\n                    const wrappedLabel = Array.isArray(label) ? label : type == 2 ? applyLetterSpacing(label, letterSpacing) : wrapText(label, font, maxTextWidth, letterSpacing);\n                    text.setText(wrappedLabel);\n                    text.setFont(font);\n                    text.setRotation(deg2rad(getValue(layer, 'layout', 'text-rotate', zoom, f, functionCache, featureState)));\n                    const textAnchor = getValue(layer, 'layout', 'text-anchor', zoom, f, functionCache, featureState);\n                    const placement = hasImage || type == 1 ? 'point' : getValue(layer, 'layout', 'symbol-placement', zoom, f, functionCache, featureState);\n                    let textAlign;\n                    if (placement === 'line-center') {\n                        text.setPlacement('line');\n                        textAlign = 'center';\n                    } else {\n                        text.setPlacement(placement);\n                    }\n                    if (placement === 'line' && typeof text.setRepeat === 'function') {\n                        const symbolSpacing = getValue(layer, 'layout', 'symbol-spacing', zoom, f, functionCache, featureState);\n                        text.setRepeat(symbolSpacing * 2);\n                    }\n                    text.setOverflow(placement === 'point');\n                    let textHaloWidth = getValue(layer, 'paint', 'text-halo-width', zoom, f, functionCache, featureState);\n                    const textOffset = getValue(layer, 'layout', 'text-offset', zoom, f, functionCache, featureState);\n                    const textTranslate = getValue(layer, 'paint', 'text-translate', zoom, f, functionCache, featureState);\n                    // Text offset has to take halo width and line height into account\n                    let vOffset = 0;\n                    let hOffset = 0;\n                    if (placement == 'point') {\n                        textAlign = 'center';\n                        if (textAnchor.indexOf('left') !== -1) {\n                            textAlign = 'left';\n                            hOffset = textHaloWidth;\n                        } else if (textAnchor.indexOf('right') !== -1) {\n                            textAlign = 'right';\n                            hOffset = -textHaloWidth;\n                        }\n                        const textRotationAlignment = getValue(layer, 'layout', 'text-rotation-alignment', zoom, f, functionCache, featureState);\n                        text.setRotateWithView(textRotationAlignment == 'map');\n                    } else {\n                        text.setMaxAngle(deg2rad(getValue(layer, 'layout', 'text-max-angle', zoom, f, functionCache, featureState)) * label.length / wrappedLabel.length);\n                        text.setRotateWithView(false);\n                    }\n                    text.setTextAlign(textAlign);\n                    let textBaseline = 'middle';\n                    if (textAnchor.indexOf('bottom') == 0) {\n                        textBaseline = 'bottom';\n                        vOffset = -textHaloWidth - 0.5 * (textLineHeight - 1) * textSize;\n                    } else if (textAnchor.indexOf('top') == 0) {\n                        textBaseline = 'top';\n                        vOffset = textHaloWidth + 0.5 * (textLineHeight - 1) * textSize;\n                    }\n                    text.setTextBaseline(textBaseline);\n                    const textJustify = getValue(layer, 'layout', 'text-justify', zoom, f, functionCache, featureState);\n                    text.setJustify(textJustify === 'auto' ? undefined : textJustify);\n                    text.setOffsetX(textOffset[0] * textSize + hOffset + textTranslate[0]);\n                    text.setOffsetY(textOffset[1] * textSize + vOffset + textTranslate[1]);\n                    textColor.setColor(colorWithOpacity(getValue(layer, 'paint', 'text-color', zoom, f, functionCache, featureState), opacity));\n                    text.setFill(textColor);\n                    const haloColor = colorWithOpacity(getValue(layer, 'paint', 'text-halo-color', zoom, f, functionCache, featureState), opacity);\n                    if (haloColor && textHaloWidth > 0) {\n                        textHalo.setColor(haloColor);\n                        // spec here : https://docs.mapbox.com/mapbox-gl-js/style-spec/#paint-symbol-text-halo-width\n                        // Halo width must be doubled because it is applied around the center of the text outline\n                        textHaloWidth *= 2;\n                        // 1/4 of text size (spec) x 2\n                        const halfTextSize = 0.5 * textSize;\n                        textHalo.setWidth(textHaloWidth <= halfTextSize ? textHaloWidth : halfTextSize);\n                        text.setStroke(textHalo);\n                    } else {\n                        text.setStroke(undefined);\n                    }\n                    const textPadding = getValue(layer, 'layout', 'text-padding', zoom, f, functionCache, featureState);\n                    const padding = text.getPadding();\n                    if (textPadding !== padding[0]) {\n                        padding[0] = textPadding;\n                        padding[1] = textPadding;\n                        padding[2] = textPadding;\n                        padding[3] = textPadding;\n                    }\n                    style.setZIndex(index);\n                }\n            }\n        }\n        if (stylesLength > -1) {\n            styles.length = stylesLength + 1;\n            if (recordLayer) {\n                if ('set' in feature) {\n                    // ol/Feature\n                    feature.set('mapbox-layer', featureBelongsToLayer);\n                } else {\n                    // ol/render/Feature\n                    feature.getProperties()['mapbox-layer'] = featureBelongsToLayer;\n                }\n            }\n            return styles;\n        }\n        return undefined;\n    };\n    olLayer.setStyle(styleFunction);\n    olLayer.set('mapbox-source', mapboxSource);\n    olLayer.set('mapbox-layers', mapboxLayers);\n    olLayer.set('mapbox-featurestate', olLayer.get('mapbox-featurestate') || {});\n    return styleFunction;\n}\n/**\n * Get the the style for a specific Mapbox layer only. This can be useful for creating a legend.\n * @param {import(\"ol/Feature\").default|import(\"ol/render/Feature\").default} feature OpenLayers feature.\n * @param {number} resolution View resolution.\n * @param {import(\"ol/layer\").Vector|import(\"ol/layer\").VectorTile} olLayer OpenLayers layer.\n * @param {string} layerId Id of the Mapbox layer to get the style for\n * @return {Array<import(\"ol/style\").Style>} Styles for the provided Mapbox layer.\n */\nfunction getStyleForLayer(feature, resolution, olLayer, layerId) {\n    const evaluateStyle = olLayer.getStyleFunction();\n    if (evaluateStyle.length === 3) {\n        // @ts-ignore\n        return evaluateStyle(feature, resolution, layerId);\n    }\n    return undefined;\n}\n\n/**\n * Generates a shaded relief image given elevation data.  Uses a 3x3\n * neighborhood for determining slope and aspect.\n * @param {Array<ImageData>} inputs Array of input images.\n * @param {Object} data Data added in the \"beforeoperations\" event.\n * @return {ImageData} Output image.\n */\nfunction hillshade(inputs, data) {\n    const elevationImage = inputs[0];\n    const width = elevationImage.width;\n    const height = elevationImage.height;\n    const elevationData = elevationImage.data;\n    const shadeData = new Uint8ClampedArray(elevationData.length);\n    const dp = data.resolution * 2;\n    const maxX = width - 1;\n    const maxY = height - 1;\n    const pixel = [\n        0,\n        0,\n        0,\n        0\n    ];\n    const twoPi = 2 * Math.PI;\n    const halfPi = Math.PI / 2;\n    const sunEl = Math.PI * data.sunEl / 180;\n    const sunAz = Math.PI * data.sunAz / 180;\n    const cosSunEl = Math.cos(sunEl);\n    const sinSunEl = Math.sin(sunEl);\n    const highlightColor = data.highlightColor;\n    const shadowColor = data.shadowColor;\n    const accentColor = data.accentColor;\n    const encoding = data.encoding;\n    let pixelX, pixelY, x0, x1, y0, y1, offset, z0, z1, dzdx, dzdy, slope, aspect, accent, scaled, shade, scaledAccentColor, compositeShadeColor, clamp, slopeScaleBase, scaledSlope, cosIncidence;\n    function calculateElevation(pixel, encoding = 'mapbox') {\n        // The method used to extract elevations from the DEM.\n        //\n        // The supported methods are the Mapbox format\n        // (red * 256 * 256 + green * 256 + blue) * 0.1 - 10000\n        // and the Terrarium format\n        // (red * 256 + green + blue / 256) - 32768\n        //\n        if (encoding === 'mapbox') {\n            return (pixel[0] * 256 * 256 + pixel[1] * 256 + pixel[2]) * 0.1 - 10000;\n        }\n        if (encoding === 'terrarium') {\n            return pixel[0] * 256 + pixel[1] + pixel[2] / 256 - 32768;\n        }\n    }\n    for (pixelY = 0; pixelY <= maxY; ++pixelY) {\n        y0 = pixelY === 0 ? 0 : pixelY - 1;\n        y1 = pixelY === maxY ? maxY : pixelY + 1;\n        for (pixelX = 0; pixelX <= maxX; ++pixelX) {\n            x0 = pixelX === 0 ? 0 : pixelX - 1;\n            x1 = pixelX === maxX ? maxX : pixelX + 1;\n            // determine elevation for (x0, pixelY)\n            offset = (pixelY * width + x0) * 4;\n            pixel[0] = elevationData[offset];\n            pixel[1] = elevationData[offset + 1];\n            pixel[2] = elevationData[offset + 2];\n            pixel[3] = elevationData[offset + 3];\n            z0 = data.vert * calculateElevation(pixel, encoding);\n            // determine elevation for (x1, pixelY)\n            offset = (pixelY * width + x1) * 4;\n            pixel[0] = elevationData[offset];\n            pixel[1] = elevationData[offset + 1];\n            pixel[2] = elevationData[offset + 2];\n            pixel[3] = elevationData[offset + 3];\n            z1 = data.vert * calculateElevation(pixel, encoding);\n            dzdx = (z1 - z0) / dp;\n            // determine elevation for (pixelX, y0)\n            offset = (y0 * width + pixelX) * 4;\n            pixel[0] = elevationData[offset];\n            pixel[1] = elevationData[offset + 1];\n            pixel[2] = elevationData[offset + 2];\n            pixel[3] = elevationData[offset + 3];\n            z0 = data.vert * calculateElevation(pixel, encoding);\n            // determine elevation for (pixelX, y1)\n            offset = (y1 * width + pixelX) * 4;\n            pixel[0] = elevationData[offset];\n            pixel[1] = elevationData[offset + 1];\n            pixel[2] = elevationData[offset + 2];\n            pixel[3] = elevationData[offset + 3];\n            z1 = data.vert * calculateElevation(pixel, encoding);\n            dzdy = (z1 - z0) / dp;\n            aspect = Math.atan2(dzdy, -dzdx);\n            if (aspect < 0) {\n                aspect = halfPi - aspect;\n            } else if (aspect > halfPi) {\n                aspect = twoPi - aspect + halfPi;\n            } else {\n                aspect = halfPi - aspect;\n            }\n            // Bootstrap slope and corresponding incident values\n            slope = Math.atan(Math.sqrt(dzdx * dzdx + dzdy * dzdy));\n            cosIncidence = sinSunEl * Math.cos(slope) + cosSunEl * Math.sin(slope) * Math.cos(sunAz - aspect);\n            accent = Math.cos(slope);\n            // 255 for Hex colors\n            scaled = 255 * cosIncidence;\n            /*\n       * The following is heavily inspired\n       * by [Maplibre's equivalent WebGL shader](https://github.com/maplibre/maplibre-gl-js/blob/main/src/shaders/hillshade.fragment.glsl)\n       */\n            // Forces given value to stay between two given extremes\n            clamp = Math.min(Math.max(2 * data.sunEl, 0), 1);\n            // Intensity basis for hillshade opacity\n            slopeScaleBase = 1.875 - data.opacity * 1.75;\n            // Intensity interpolation so that higher intensity values create more opaque hillshading\n            scaledSlope = data.opacity !== 0.5 ? halfPi * ((Math.pow(slopeScaleBase, slope) - 1) / (Math.pow(slopeScaleBase, halfPi) - 1)) : slope;\n            // Accent hillshade color with given accentColor to emphasize rougher terrain\n            scaledAccentColor = {\n                r: (1 - accent) * accentColor.r * clamp * 255,\n                g: (1 - accent) * accentColor.g * clamp * 255,\n                b: (1 - accent) * accentColor.b * clamp * 255,\n                a: (1 - accent) * accentColor.a * clamp * 255\n            };\n            // Allows highlight vs shadow discrimination\n            shade = Math.abs(((aspect + sunAz) / Math.PI + 0.5) % 2 - 1);\n            // Creates a composite color mix between highlight & shadow colors to emphasize slopes\n            compositeShadeColor = {\n                r: (highlightColor.r * (1 - shade) + shadowColor.r * shade) * scaled,\n                g: (highlightColor.g * (1 - shade) + shadowColor.g * shade) * scaled,\n                b: (highlightColor.b * (1 - shade) + shadowColor.b * shade) * scaled,\n                a: (highlightColor.a * (1 - shade) + shadowColor.a * shade) * scaled\n            };\n            // Fill in result color value\n            offset = (pixelY * width + pixelX) * 4;\n            shadeData[offset] = scaledAccentColor.r * (1 - shade) + compositeShadeColor.r;\n            shadeData[offset + 1] = scaledAccentColor.g * (1 - shade) + compositeShadeColor.g;\n            shadeData[offset + 2] = scaledAccentColor.b * (1 - shade) + compositeShadeColor.b;\n            // Key opacity on the scaledSlope to improve legibility by increasing higher elevation rates' contrast\n            shadeData[offset + 3] = elevationData[offset + 3] * data.opacity * clamp * Math.sin(scaledSlope);\n        }\n    }\n    return new ImageData(shadeData, width, height);\n}\n\n/*\nol-mapbox-style - Use Mapbox Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\n/**\n * @typedef {Object} FeatureIdentifier\n * @property {string|number} id The feature id.\n * @property {string} source The source id.\n */\n/**\n * @typedef {Object} Options\n * @property {string} [accessToken] Access token for 'mapbox://' urls.\n * @property {function(string, import(\"./util.js\").ResourceType): (Request|string|Promise<Request|string>|void)} [transformRequest]\n * Function for controlling how `ol-mapbox-style` fetches resources. Can be used for modifying\n * the url, adding headers or setting credentials options. Called with the url and the resource\n * type as arguments, this function is supposed to return a `Request` or a url `string`, or a promise tehereof.\n * Without a return value the original request will not be modified.\n * @property {string} [projection='EPSG:3857'] Only useful when working with non-standard projections.\n * Code of a projection registered with OpenLayers. All sources of the style must be provided in this\n * projection. The projection must also have a valid extent defined, which will be used to determine the\n * origin and resolutions of the tile grid for all tiled sources of the style. When provided, the bbox\n * placeholder in tile and geojson urls changes: the default is `{bbox-epsg-3857}`, when projection is e.g.\n * set to `EPSG:4326`, the bbox placeholder will be `{bbox-epsg-4326}`.\n * @property {Array<number>} [resolutions] Only useful when working with non-standard projections.\n * Resolutions for mapping resolution to the `zoom` used in the Mapbox style.\n * @property {string} [styleUrl] URL of the Mapbox GL style. Required for styles that were provided\n * as object, when they contain a relative sprite url, or sources referencing data by relative url.\n * @property {string} [webfonts] Template for resolving webfonts. Can be used to specify where to fetch\n * web fonts when no `ol:webfonts` metadata is set in the style object. See `getFonts()` and the\n * \"Font handling\" section in `README.md` for details.\n * @property {function(VectorLayer|VectorTileLayer, string):HTMLImageElement|HTMLCanvasElement|string|undefined} [getImage=undefined]\n * Function that returns an image for an icon name. If the result is an HTMLImageElement, it must already be\n * loaded. The layer can be used to call layer.changed() when the loading and processing of the image has finished.\n * This function be used for icons not in the sprite or to override sprite icons.\n * @property {string} [accessTokenParam='access_token'] Access token param. For internal use.\n */\n/**\n * @typedef {Object} ApplyStyleOptions\n * @property {string} [source=''] Source. Default is `''`, which causes the first source in the\n * style to be used.\n * @property {Array<string>} [layers] Layers. If no source is provided, the layers with the\n * provided ids will be used from the style's `layers` array. All layers need to use the same source.\n * @property {boolean} [updateSource=true] Update or create vector (tile) layer source with parameters\n * specified for the source in the mapbox style definition.\n */\n/**\n * @param {import(\"ol/proj/Projection.js\").default} projection Projection.\n * @param {number} [tileSize=512] Tile size.\n * @return {Array<number>} Resolutions.\n */\nfunction getTileResolutions(projection, tileSize = 512) {\n    return projection.getExtent() ? createXYZ({\n        extent: projection.getExtent(),\n        tileSize: tileSize,\n        maxZoom: 22\n    }).getResolutions() : defaultResolutions;\n}\n/**\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Options} Completed options with accessToken and accessTokenParam.\n */\nfunction completeOptions(styleUrl, options) {\n    if (!options.accessToken) {\n        options = Object.assign({}, options);\n        const searchParams = new URL(styleUrl).searchParams;\n        // The last search parameter is the access token\n        searchParams.forEach((value, key) => {\n            options.accessToken = value;\n            options.accessTokenParam = key;\n        });\n    }\n    return options;\n}\n/**\n * Applies a style function to an `ol/layer/VectorTile` or `ol/layer/Vector`\n * with an `ol/source/VectorTile` or an `ol/source/Vector`. If the layer does not have a source\n * yet, it will be created and populated from the information in the `glStyle` (unless `updateSource` is\n * set to `false`).\n *\n * **Example:**\n * ```js\n * import {applyStyle} from 'ol-mapbox-style';\n * import {VectorTile} from 'ol/layer.js';\n *\n * const layer = new VectorTile({declutter: true});\n * applyStyle(layer, 'https://api.maptiler.com/maps/basic/style.json?key=YOUR_OPENMAPTILES_TOKEN');\n * ```\n *\n * The style function will render all layers from the `glStyle` object that use the source\n * of the first layer, the specified `source`, or a subset of layers from the same source. The\n * source needs to be a `\"type\": \"vector\"` or `\"type\": \"geojson\"` source.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * @param {VectorTileLayer|VectorLayer} layer OpenLayers layer. When the layer has a source configured,\n * it will be modified to use the configuration from the glStyle's `source`. Options specified on the\n * layer's source will override those from the glStyle's `source`, except for `url` and\n * `tileUrlFunction`. When the source projection is the default (`EPSG:3857`), the `tileGrid` will\n * also be overridden. If you'd rather not have ol-mapbox-style modify the source, configure `applyStyle()`\n * with the `updateSource: false` option.\n * @param {string|Object} glStyle Mapbox Style object.\n * @param {string|Array<string>|Options&ApplyStyleOptions} [sourceOrLayersOrOptions] Options or\n * `source` key or an array of layer `id`s from the Mapbox Style object. When a `source` key is\n * provided, all layers for the specified source will be included in the style function. When layer\n * `id`s are provided, they must be from layers that use the same source. When not provided or a falsey\n * value, all layers using the first source specified in the glStyle will be rendered.\n * @param {Options&ApplyStyleOptions|string} [optionsOrPath] **Deprecated**. Options. Alternatively the path of the style file\n * (only required when a relative path is used for the `\"sprite\"` property of the style).\n * @param {Array<number>} [resolutions] **Deprecated**. Resolutions for mapping resolution to zoom level.\n * Only needed when working with non-standard tile grids or projections, can also be supplied with\n * options.\n * @return {Promise} Promise which will be resolved when the style can be used\n * for rendering.\n */\nfunction applyStyle(layer, glStyle, sourceOrLayersOrOptions = '', optionsOrPath = {}, resolutions = undefined) {\n    let styleUrl, sourceId;\n    /** @type {Options&ApplyStyleOptions} */\n    let options;\n    let sourceOrLayers;\n    let updateSource = true;\n    if (typeof sourceOrLayersOrOptions !== 'string' && !Array.isArray(sourceOrLayersOrOptions)) {\n        options = sourceOrLayersOrOptions;\n        sourceOrLayers = options.source || options.layers;\n        optionsOrPath = options;\n    } else {\n        sourceOrLayers = sourceOrLayersOrOptions;\n    }\n    if (typeof optionsOrPath === 'string') {\n        styleUrl = optionsOrPath;\n        options = {};\n    } else {\n        styleUrl = optionsOrPath.styleUrl;\n        options = optionsOrPath;\n    }\n    if (options.updateSource === false) {\n        updateSource = false;\n    }\n    if (!resolutions) {\n        resolutions = options.resolutions;\n    }\n    if (!styleUrl && typeof glStyle === 'string' && !glStyle.trim().startsWith('{')) {\n        styleUrl = glStyle;\n    }\n    if (styleUrl) {\n        styleUrl = styleUrl.startsWith('data:') ? location.href : normalizeStyleUrl(styleUrl, options.accessToken);\n        options = completeOptions(styleUrl, options);\n    }\n    return new Promise(function (resolve, reject) {\n        // TODO: figure out where best place to check source type is\n        // Note that the source arg is an array of gl layer ids and each must be\n        // dereferenced to get source type to validate\n        getGlStyle(glStyle, options).then(function (glStyle) {\n            if (glStyle.version != 8) {\n                return reject(new Error('glStyle version 8 required.'));\n            }\n            if (!(layer instanceof VectorLayer || layer instanceof VectorTileLayer)) {\n                return reject(new Error('Can only apply to VectorLayer or VectorTileLayer'));\n            }\n            const type = layer instanceof VectorTileLayer ? 'vector' : 'geojson';\n            if (!sourceOrLayers) {\n                sourceId = Object.keys(glStyle.sources).find(function (key) {\n                    return glStyle.sources[key].type === type;\n                });\n                sourceOrLayers = sourceId;\n            } else if (Array.isArray(sourceOrLayers)) {\n                sourceId = glStyle.layers.find(function (layer) {\n                    return layer.id === sourceOrLayers[0];\n                }).source;\n            } else {\n                sourceId = sourceOrLayers;\n            }\n            if (!sourceId) {\n                return reject(new Error(`No ${ type } source found in the glStyle.`));\n            }\n            function assignSource() {\n                if (!updateSource) {\n                    return Promise.resolve();\n                }\n                if (layer instanceof VectorTileLayer) {\n                    return setupVectorSource(glStyle.sources[sourceId], styleUrl, options).then(function (source) {\n                        const targetSource = layer.getSource();\n                        if (!targetSource) {\n                            layer.setSource(source);\n                        } else if (source !== targetSource) {\n                            targetSource.setTileUrlFunction(source.getTileUrlFunction());\n                            if (typeof targetSource.setUrls === 'function' && typeof source.getUrls === 'function') {\n                                // to get correct keys for tile cache and queue\n                                targetSource.setUrls(source.getUrls());\n                            }\n                            //@ts-ignore\n                            if (!targetSource.format_) {\n                                //@ts-ignore\n                                targetSource.format_ = source.format_;\n                            }\n                            if (!targetSource.getAttributions()) {\n                                targetSource.setAttributions(source.getAttributions());\n                            }\n                            if (targetSource.getTileLoadFunction() === defaultLoadFunction) {\n                                targetSource.setTileLoadFunction(source.getTileLoadFunction());\n                            }\n                            if (equivalent(targetSource.getProjection(), source.getProjection())) {\n                                targetSource.tileGrid = source.getTileGrid();\n                            }\n                        }\n                        const tileGrid = layer.getSource().getTileGrid();\n                        if (!isFinite(layer.getMaxResolution()) && !isFinite(layer.getMinZoom()) && tileGrid.getMinZoom() > 0) {\n                            layer.setMaxResolution(getResolutionForZoom(Math.max(0, tileGrid.getMinZoom() - 1e-12), tileGrid.getResolutions()));\n                        }\n                    });\n                }\n                const glSource = glStyle.sources[sourceId];\n                let source = layer.getSource();\n                if (!source || source.get('mapbox-source') !== glSource) {\n                    source = setupGeoJSONSource(glSource, styleUrl, options);\n                }\n                const targetSource = layer.getSource();\n                if (!targetSource) {\n                    layer.setSource(source);\n                } else if (source !== targetSource) {\n                    if (!targetSource.getAttributions()) {\n                        targetSource.setAttributions(source.getAttributions());\n                    }\n                    //@ts-ignore\n                    if (!targetSource.format_) {\n                        //@ts-ignore\n                        targetSource.format_ = source.getFormat();\n                    }\n                    //@ts-ignore\n                    targetSource.url_ = source.getUrl();\n                }\n                return Promise.resolve();\n            }\n            let spriteScale, spriteData, spriteImageUrl, style;\n            function onChange() {\n                if (!style && (!glStyle.sprite || spriteData)) {\n                    if (options.projection && !resolutions) {\n                        const projection = get$1(options.projection);\n                        const units = projection.getUnits();\n                        if (units !== 'm') {\n                            resolutions = defaultResolutions.map(resolution => resolution / METERS_PER_UNIT[units]);\n                        }\n                    }\n                    style = stylefunction(layer, glStyle, sourceOrLayers, resolutions, spriteData, spriteImageUrl, (fonts, templateUrl = options.webfonts) => getFonts(fonts, templateUrl), options.getImage);\n                    if (!layer.getStyle()) {\n                        reject(new Error(`Nothing to show for source [${ sourceId }]`));\n                    } else {\n                        assignSource().then(resolve).catch(reject);\n                    }\n                } else if (style) {\n                    layer.setStyle(style);\n                    assignSource().then(resolve).catch(reject);\n                } else {\n                    reject(new Error('Something went wrong trying to apply style.'));\n                }\n            }\n            if (glStyle.sprite) {\n                const sprite = new URL(normalizeSpriteUrl(glStyle.sprite, options.accessToken, styleUrl || location.href));\n                spriteScale = window.devicePixelRatio >= 1.5 ? 0.5 : 1;\n                const sizeFactor = spriteScale == 0.5 ? '@2x' : '';\n                let spriteUrl = sprite.origin + sprite.pathname + sizeFactor + '.json' + sprite.search;\n                new Promise(function (resolve, reject) {\n                    fetchResource('Sprite', spriteUrl, options).then(resolve).catch(function (error) {\n                        spriteUrl = sprite.origin + sprite.pathname + '.json' + sprite.search;\n                        fetchResource('Sprite', spriteUrl, options).then(resolve).catch(reject);\n                    });\n                }).then(function (spritesJson) {\n                    if (spritesJson === undefined) {\n                        reject(new Error('No sprites found.'));\n                    }\n                    spriteData = spritesJson;\n                    spriteImageUrl = sprite.origin + sprite.pathname + sizeFactor + '.png' + sprite.search;\n                    if (options.transformRequest) {\n                        const transformed = options.transformRequest(spriteImageUrl, 'SpriteImage') || spriteImageUrl;\n                        if (transformed instanceof Request || transformed instanceof Promise) {\n                            spriteImageUrl = transformed;\n                        }\n                    }\n                    onChange();\n                }).catch(function (err) {\n                    reject(new Error(`Sprites cannot be loaded: ${ spriteUrl }: ${ err.message }`));\n                });\n            } else {\n                onChange();\n            }\n        }).catch(reject);\n    });\n}\nconst emptyObj = {};\nfunction setFirstBackground(mapOrLayer, glStyle, options) {\n    glStyle.layers.some(function (layer) {\n        if (layer.type === 'background') {\n            if (mapOrLayer instanceof Layer) {\n                mapOrLayer.setBackground(function (resolution) {\n                    return getBackgroundColor(layer, resolution, options, {});\n                });\n                return true;\n            }\n            if (mapOrLayer instanceof Map || mapOrLayer instanceof LayerGroup) {\n                mapOrLayer.getLayers().insertAt(0, setupBackgroundLayer(layer, options, {}));\n                return true;\n            }\n        }\n    });\n}\n/**\n * Applies properties of the Mapbox Style's first `background` layer to the\n * provided map or layer (group).\n *\n * **Example:**\n * ```js\n * import {applyBackground} from 'ol-mapbox-style';\n * import {Map} from 'ol';\n *\n * const map = new Map({target: 'map'});\n * applyBackground(map, 'https://api.maptiler.com/maps/basic/style.json?key=YOUR_OPENMAPTILES_TOKEN');\n * ```\n * @param {Map|import(\"ol/layer/Base.js\").default} mapOrLayer OpenLayers Map or layer (group).\n * @param {Object|string} glStyle Mapbox Style object or url.\n * @param {Options} options Options.\n * @return {Promise} Promise that resolves when the background is applied.\n */\nfunction applyBackground(mapOrLayer, glStyle, options = {}) {\n    return getGlStyle(glStyle, options).then(function (glStyle) {\n        setFirstBackground(mapOrLayer, glStyle, options);\n    });\n}\nfunction getSourceIdByRef(layers, ref) {\n    let sourceId;\n    layers.some(function (layer) {\n        if (layer.id == ref) {\n            sourceId = layer.source;\n            return true;\n        }\n    });\n    return sourceId;\n}\nfunction extentFromTileJSON(tileJSON, projection) {\n    const bounds = tileJSON.bounds;\n    if (bounds) {\n        const ll = fromLonLat([\n            bounds[0],\n            bounds[1]\n        ], projection);\n        const tr = fromLonLat([\n            bounds[2],\n            bounds[3]\n        ], projection);\n        return [\n            ll[0],\n            ll[1],\n            tr[0],\n            tr[1]\n        ];\n    }\n    return get$1(projection).getExtent();\n}\nfunction sourceOptionsFromTileJSON(glSource, tileJSON, options) {\n    const tileJSONSource = new TileJSON({\n        tileJSON: tileJSON,\n        tileSize: glSource.tileSize || tileJSON.tileSize || 512\n    });\n    const tileJSONDoc = tileJSONSource.getTileJSON();\n    const tileGrid = tileJSONSource.getTileGrid();\n    const projection = get$1(options.projection || 'EPSG:3857');\n    const extent = extentFromTileJSON(tileJSONDoc, projection);\n    const projectionExtent = projection.getExtent();\n    const minZoom = tileJSONDoc.minzoom || 0;\n    const maxZoom = tileJSONDoc.maxzoom || 22;\n    /** @type {import(\"ol/source/VectorTile.js\").Options} */\n    const sourceOptions = {\n        attributions: tileJSONSource.getAttributions(),\n        projection: projection,\n        tileGrid: new TileGrid({\n            origin: projectionExtent ? getTopLeft(projectionExtent) : tileGrid.getOrigin(0),\n            extent: extent || tileGrid.getExtent(),\n            minZoom: minZoom,\n            resolutions: getTileResolutions(projection, tileJSON.tileSize).slice(0, maxZoom + 1),\n            tileSize: tileGrid.getTileSize(0)\n        })\n    };\n    if (Array.isArray(tileJSONDoc.tiles)) {\n        sourceOptions.urls = tileJSONDoc.tiles;\n    } else {\n        sourceOptions.url = tileJSONDoc.tiles;\n    }\n    return sourceOptions;\n}\nfunction getBackgroundColor(glLayer, resolution, options, functionCache) {\n    const background = {\n        id: glLayer.id,\n        type: glLayer.type\n    };\n    const layout = glLayer.layout || {};\n    const paint = glLayer.paint || {};\n    background['paint'] = paint;\n    const zoom = getZoomForResolution(resolution, options.resolutions || defaultResolutions);\n    let opacity;\n    const bg = getValue(background, 'paint', 'background-color', zoom, emptyObj, functionCache);\n    if (paint['background-opacity'] !== undefined) {\n        opacity = getValue(background, 'paint', 'background-opacity', zoom, emptyObj, functionCache);\n    }\n    return layout.visibility == 'none' ? undefined : colorWithOpacity(bg, opacity);\n}\n/**\n * @param {Object} glLayer Mapbox Style layer object.\n * @param {Options} options Options.\n * @param {Object} functionCache Cache for functions.\n * @return {Layer} OpenLayers layer.\n */\nfunction setupBackgroundLayer(glLayer, options, functionCache) {\n    const div = document.createElement('div');\n    div.className = 'ol-mapbox-style-background';\n    div.style.position = 'absolute';\n    div.style.width = '100%';\n    div.style.height = '100%';\n    return new Layer({\n        source: new Source({}),\n        render(frameState) {\n            const color = getBackgroundColor(glLayer, frameState.viewState.resolution, options, functionCache);\n            div.style.backgroundColor = color;\n            return div;\n        }\n    });\n}\n/**\n * Creates an OpenLayers VectorTile source for a gl source entry.\n * @param {Object} glSource \"source\" entry from a Mapbox Style object.\n * @param {string|undefined} styleUrl URL to use for the source. This is expected to be the complete http(s) url,\n * with access key applied.\n * @param {Options} options Options.\n * @return {Promise<import(\"ol/source/VectorTile\").default>} Promise resolving to a VectorTile source.\n * @private\n */\nfunction setupVectorSource(glSource, styleUrl, options) {\n    return new Promise(function (resolve, reject) {\n        getTileJson(glSource, styleUrl, options).then(function ({tileJson, tileLoadFunction}) {\n            const sourceOptions = sourceOptionsFromTileJSON(glSource, tileJson, options);\n            sourceOptions.tileLoadFunction = tileLoadFunction;\n            sourceOptions.format = new MVT();\n            resolve(new VectorTileSource(sourceOptions));\n        }).catch(reject);\n    });\n}\nfunction setupVectorLayer(glSource, styleUrl, options) {\n    const layer = new VectorTileLayer({\n        declutter: true,\n        visible: false\n    });\n    setupVectorSource(glSource, styleUrl, options).then(function (source) {\n        source.set('mapbox-source', glSource);\n        layer.setSource(source);\n    }).catch(function (error) {\n        layer.setSource(undefined);\n    });\n    return layer;\n}\nfunction getBboxTemplate(projection) {\n    const projCode = projection ? projection.getCode() : 'EPSG:3857';\n    return `{bbox-${ projCode.toLowerCase().replace(/[^a-z0-9]/g, '-') }}`;\n}\nfunction setupRasterSource(glSource, styleUrl, options) {\n    return new Promise(function (resolve, reject) {\n        getTileJson(glSource, styleUrl, options).then(function ({tileJson, tileLoadFunction}) {\n            const source = new TileJSON({\n                interpolate: options.interpolate === undefined ? true : options.interpolate,\n                transition: 0,\n                crossOrigin: 'anonymous',\n                tileJSON: tileJson\n            });\n            source.tileGrid = sourceOptionsFromTileJSON(glSource, tileJson, options).tileGrid;\n            if (options.projection) {\n                //@ts-ignore\n                source.projection = get$1(options.projection);\n            }\n            const getTileUrl = source.getTileUrlFunction();\n            if (tileLoadFunction) {\n                source.setTileLoadFunction(tileLoadFunction);\n            }\n            source.setTileUrlFunction(function (tileCoord, pixelRatio, projection) {\n                const bboxTemplate = getBboxTemplate(projection);\n                let src = getTileUrl(tileCoord, pixelRatio, projection);\n                if (src.indexOf(bboxTemplate) != -1) {\n                    const bbox = source.getTileGrid().getTileCoordExtent(tileCoord);\n                    src = src.replace(bboxTemplate, bbox.toString());\n                }\n                return src;\n            });\n            source.set('mapbox-source', glSource);\n            resolve(source);\n        }).catch(function (error) {\n            reject(error);\n        });\n    });\n}\nfunction setupRasterLayer(glSource, styleUrl, options) {\n    const layer = new TileLayer();\n    setupRasterSource(glSource, styleUrl, options).then(function (source) {\n        layer.setSource(source);\n    }).catch(function () {\n        layer.setSource(undefined);\n    });\n    return layer;\n}\n/**\n *\n * @param {Object} glSource \"source\" entry from a Mapbox Style object.\n * @param {string} styleUrl Style url\n * @param {Options} options ol-mapbox-style options.\n * @return {ImageLayer<Raster>} The raster layer\n */\nfunction setupHillshadeLayer(glSource, styleUrl, options) {\n    const tileLayer = setupRasterLayer(glSource, styleUrl, options);\n    /** @type {ImageLayer<Raster>} */\n    const layer = new ImageLayer({\n        source: new Raster({\n            operationType: 'image',\n            operation: hillshade,\n            sources: [tileLayer]\n        })\n    });\n    return layer;\n}\n/**\n * @param {Object} glSource glStyle source.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {VectorSource} Configured vector source.\n */\nfunction setupGeoJSONSource(glSource, styleUrl, options) {\n    const geoJsonFormat = options.projection ? new GeoJSON({ dataProjection: options.projection }) : new GeoJSON();\n    const data = glSource.data;\n    const sourceOptions = {};\n    if (typeof data == 'string') {\n        const geoJsonUrl = normalizeSourceUrl(data, options.accessToken, options.accessTokenParam || 'access_token', styleUrl || location.href);\n        if (/\\{bbox-[0-9a-z-]+\\}/.test(geoJsonUrl)) {\n            const extentUrl = (extent, resolution, projection) => {\n                const bboxTemplate = getBboxTemplate(projection);\n                return geoJsonUrl.replace(bboxTemplate, `${ extent.join(',') }`);\n            };\n            const source = new VectorSource({\n                attributions: glSource.attribution,\n                format: geoJsonFormat,\n                loader: (extent, resolution, projection, success, failure) => {\n                    const url = typeof extentUrl === 'function' ? extentUrl(extent, resolution, projection) : extentUrl;\n                    fetchResource('GeoJSON', url, options).then(json => {\n                        const features = source.getFormat().readFeatures(json, { featureProjection: projection });\n                        source.addFeatures(features);\n                        success(features);\n                    }).catch(response => {\n                        source.removeLoadedExtent(extent);\n                        failure();\n                    });\n                },\n                strategy: bbox\n            });\n            source.set('mapbox-source', glSource);\n            return source;\n        }\n        const source = new VectorSource({\n            attributions: glSource.attribution,\n            format: geoJsonFormat,\n            url: geoJsonUrl,\n            loader: (extent, resolution, projection, success, failure) => {\n                fetchResource('GeoJSON', geoJsonUrl, options).then(json => {\n                    const features = source.getFormat().readFeatures(json, { featureProjection: projection });\n                    source.addFeatures(features);\n                    success(features);\n                }).catch(response => {\n                    source.removeLoadedExtent(extent);\n                    failure();\n                });\n            }\n        });\n        return source;\n    }\n    sourceOptions.features = geoJsonFormat.readFeatures(data, { featureProjection: getUserProjection() || 'EPSG:3857' });\n    const source = new VectorSource(Object.assign({\n        attributions: glSource.attribution,\n        format: geoJsonFormat\n    }, sourceOptions));\n    source.set('mapbox-source', glSource);\n    return source;\n}\nfunction setupGeoJSONLayer(glSource, styleUrl, options) {\n    return new VectorLayer({\n        declutter: true,\n        source: setupGeoJSONSource(glSource, styleUrl, options),\n        visible: false\n    });\n}\nfunction prerenderRasterLayer(glLayer, layer, functionCache) {\n    let zoom = null;\n    return function (event) {\n        if (glLayer.paint && 'raster-opacity' in glLayer.paint && event.frameState.viewState.zoom !== zoom) {\n            zoom = event.frameState.viewState.zoom;\n            delete functionCache[glLayer.id];\n            updateRasterLayerProperties(glLayer, layer, zoom, functionCache);\n        }\n    };\n}\nfunction updateRasterLayerProperties(glLayer, layer, zoom, functionCache) {\n    const opacity = getValue(glLayer, 'paint', 'raster-opacity', zoom, emptyObj, functionCache);\n    layer.setOpacity(opacity);\n}\nfunction manageVisibility(layer, mapOrGroup) {\n    function onChange() {\n        const glStyle = mapOrGroup.get('mapbox-style');\n        if (!glStyle) {\n            return;\n        }\n        const mapboxLayers = derefLayers(glStyle.layers);\n        const layerMapboxLayerids = layer.get('mapbox-layers');\n        const visible = mapboxLayers.filter(function (mapboxLayer) {\n            return layerMapboxLayerids.includes(mapboxLayer.id);\n        }).some(function (mapboxLayer) {\n            return !mapboxLayer.layout || !mapboxLayer.layout.visibility || mapboxLayer.layout.visibility === 'visible';\n        });\n        if (layer.get('visible') !== visible) {\n            layer.setVisible(visible);\n        }\n    }\n    layer.on('change', onChange);\n    onChange();\n}\nfunction setupLayer(glStyle, styleUrl, glLayer, options) {\n    const functionCache = getFunctionCache(glStyle);\n    const glLayers = glStyle.layers;\n    const type = glLayer.type;\n    const id = glLayer.source || getSourceIdByRef(glLayers, glLayer.ref);\n    const glSource = glStyle.sources[id];\n    let layer;\n    if (type == 'background') {\n        layer = setupBackgroundLayer(glLayer, options, functionCache);\n    } else if (glSource.type == 'vector') {\n        layer = setupVectorLayer(glSource, styleUrl, options);\n    } else if (glSource.type == 'raster') {\n        layer = setupRasterLayer(glSource, styleUrl, options);\n        layer.setVisible(glLayer.layout ? glLayer.layout.visibility !== 'none' : true);\n        layer.on('prerender', prerenderRasterLayer(glLayer, layer, functionCache));\n    } else if (glSource.type == 'geojson') {\n        layer = setupGeoJSONLayer(glSource, styleUrl, options);\n    } else if (glSource.type == 'raster-dem' && glLayer.type == 'hillshade') {\n        const hillshadeLayer = setupHillshadeLayer(glSource, styleUrl, options);\n        layer = hillshadeLayer;\n        hillshadeLayer.getSource().on('beforeoperations', function (event) {\n            const data = event.data;\n            data.resolution = getPointResolution(options.projection || 'EPSG:3857', event.resolution, getCenter(event.extent), 'm');\n            const zoom = getZoomForResolution(event.resolution, options.resolutions || defaultResolutions);\n            data.encoding = glSource.encoding;\n            data.vert = 5 * getValue(glLayer, 'paint', 'hillshade-exaggeration', zoom, emptyObj, functionCache);\n            data.sunAz = getValue(glLayer, 'paint', 'hillshade-illumination-direction', zoom, emptyObj, functionCache);\n            data.sunEl = 35;\n            data.opacity = 0.3;\n            data.highlightColor = getValue(glLayer, 'paint', 'hillshade-highlight-color', zoom, emptyObj, functionCache);\n            data.shadowColor = getValue(glLayer, 'paint', 'hillshade-shadow-color', zoom, emptyObj, functionCache);\n            data.accentColor = getValue(glLayer, 'paint', 'hillshade-accent-color', zoom, emptyObj, functionCache);\n        });\n        layer.setVisible(glLayer.layout ? glLayer.layout.visibility !== 'none' : true);\n    }\n    const glSourceId = id;\n    if (layer) {\n        layer.set('mapbox-source', glSourceId);\n    }\n    return layer;\n}\n/**\n * @param {*} glStyle Mapbox Style.\n * @param {Map|LayerGroup} mapOrGroup Map or layer group.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Promise} Promise that resolves when the style is loaded.\n */\nfunction processStyle(glStyle, mapOrGroup, styleUrl, options) {\n    const promises = [];\n    let view = null;\n    if (mapOrGroup instanceof Map) {\n        view = mapOrGroup.getView();\n        if (!view.isDef() && !view.getRotation() && !view.getResolutions()) {\n            const projection = options.projection ? get$1(options.projection) : view.getProjection();\n            view = new View(Object.assign(view.getProperties(), {\n                maxResolution: defaultResolutions[0] / METERS_PER_UNIT[projection.getUnits()],\n                projection: options.projection || view.getProjection()\n            }));\n            mapOrGroup.setView(view);\n        }\n        if ('center' in glStyle && !view.getCenter()) {\n            view.setCenter(fromLonLat(glStyle.center, view.getProjection()));\n        }\n        if ('zoom' in glStyle && view.getZoom() === undefined) {\n            view.setResolution(defaultResolutions[0] / METERS_PER_UNIT[view.getProjection().getUnits()] / Math.pow(2, glStyle.zoom));\n        }\n        if (!view.getCenter() || view.getZoom() === undefined) {\n            view.fit(view.getProjection().getExtent(), {\n                nearest: true,\n                size: mapOrGroup.getSize()\n            });\n        }\n    }\n    mapOrGroup.set('mapbox-style', glStyle);\n    mapOrGroup.set('mapbox-metadata', {\n        styleUrl,\n        options\n    });\n    const glLayers = glStyle.layers;\n    let layerIds = [];\n    let layer, glSourceId, id;\n    for (let i = 0, ii = glLayers.length; i < ii; ++i) {\n        const glLayer = glLayers[i];\n        const type = glLayer.type;\n        if (type == 'heatmap') {\n            //FIXME Unsupported layer type\n            // eslint-disable-next-line no-console\n            console.debug(`layers[${ i }].type \"${ type }\" not supported`);\n            continue;\n        } else {\n            id = glLayer.source || getSourceIdByRef(glLayers, glLayer.ref);\n            // this technique assumes gl layers will be in a particular order\n            if (!id || id != glSourceId) {\n                if (layerIds.length) {\n                    promises.push(finalizeLayer(layer, layerIds, glStyle, styleUrl, mapOrGroup, options));\n                    layerIds = [];\n                }\n                layer = setupLayer(glStyle, styleUrl, glLayer, options);\n                if (!(layer instanceof VectorLayer || layer instanceof VectorTileLayer)) {\n                    layerIds = [];\n                }\n                glSourceId = layer.get('mapbox-source');\n            }\n            layerIds.push(glLayer.id);\n        }\n    }\n    promises.push(finalizeLayer(layer, layerIds, glStyle, styleUrl, mapOrGroup, options));\n    return Promise.all(promises);\n}\n/**\n * Loads and applies a Mapbox Style object into an OpenLayers Map or LayerGroup.\n * This includes the map background, the layers, and for Map instances that did not\n * have a View defined yet also the center and the zoom.\n *\n * **Example:**\n * ```js\n * import apply from 'ol-mapbox-style';\n *\n * apply('map', 'mapbox://styles/mapbox/bright-v9', {accessToken: 'YOUR_MAPBOX_TOKEN'});\n * ```\n *\n * The center and zoom will only be set if present in the Mapbox Style document,\n * and if not already set on the OpenLayers map.\n *\n * Layers will be added to the OpenLayers map, without affecting any layers that\n * might already be set on the map.\n *\n * Layers added by `apply()` will have two additional properties:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function sets an additional `mapbox-style` property on the OpenLayers\n * Map or LayerGroup instance, which holds the Mapbox Style object.\n *\n * @param {Map|HTMLElement|string|LayerGroup} mapOrGroupOrElement Either an existing\n * OpenLayers Map instance, or a HTML element, or the id of a HTML element that will be\n * the target of a new OpenLayers Map, or a layer group. If layer group, styles\n * releated to the map and view will be ignored.\n * @param {string|Object} style JSON style object or style url pointing to a\n * Mapbox Style object. When using Mapbox APIs, the url is the `styleUrl`\n * shown in Mapbox Studio's \"share\" panel. In addition, the `accessToken` option\n * (see below) must be set.\n * When passed as JSON style object, all OpenLayers layers created by `apply()`\n * will be immediately available, but they may not have a source yet (i.e. when\n * they are defined by a TileJSON url in the Mapbox Style document). When passed\n * as style url, layers will be added to the map when the Mapbox Style document\n * is loaded and parsed.\n * @param {Options} options Options.\n * @return {Promise<Map|LayerGroup>} A promise that resolves after all layers have been added to\n * the OpenLayers Map instance or LayerGroup, their sources set, and their styles applied. The\n * `resolve` callback will be called with the OpenLayers Map instance or LayerGroup as\n * argument.\n */\nfunction apply(mapOrGroupOrElement, style, options = {}) {\n    let promise;\n    /** @type {Map|LayerGroup} */\n    let mapOrGroup;\n    if (typeof mapOrGroupOrElement === 'string' || mapOrGroupOrElement instanceof HTMLElement) {\n        mapOrGroup = new Map({ target: mapOrGroupOrElement });\n    } else {\n        mapOrGroup = mapOrGroupOrElement;\n    }\n    if (typeof style === 'string') {\n        const styleUrl = style.startsWith('data:') ? location.href : normalizeStyleUrl(style, options.accessToken);\n        options = completeOptions(styleUrl, options);\n        promise = new Promise(function (resolve, reject) {\n            getGlStyle(style, options).then(function (glStyle) {\n                processStyle(glStyle, mapOrGroup, styleUrl, options).then(function () {\n                    resolve(mapOrGroup);\n                }).catch(reject);\n            }).catch(function (err) {\n                reject(new Error(`Could not load ${ style }: ${ err.message }`));\n            });\n        });\n    } else {\n        promise = new Promise(function (resolve, reject) {\n            processStyle(style, mapOrGroup, !options.styleUrl || options.styleUrl.startsWith('data:') ? location.href : normalizeStyleUrl(options.styleUrl, options.accessToken), options).then(function () {\n                resolve(mapOrGroup);\n            }).catch(reject);\n        });\n    }\n    return promise;\n}\n/**\n * If layerIds is not empty, applies the style specified in glStyle to the layer,\n * and adds the layer to the map.\n *\n * The layer may not yet have a source when the function is called.  If so, the style\n * is applied to the layer via a once listener on the 'change:source' event.\n *\n * @param {Layer} layer An OpenLayers layer instance.\n * @param {Array<string>} layerIds Array containing layer ids of already-processed layers.\n * @param {Object} glStyle Style as a JSON object.\n * @param {string|undefined} styleUrl The original style URL. Only required\n * when a relative path is used with the `\"sprite\"` property of the style.\n * @param {Map|LayerGroup} mapOrGroup OpenLayers Map.\n * @param {Options} options Options.\n * @return {Promise} Returns a promise that resolves after the source has\n * been set on the specified layer, and the style has been applied.\n */\nfunction finalizeLayer(layer, layerIds, glStyle, styleUrl, mapOrGroup, options = {}) {\n    let minZoom = 24;\n    let maxZoom = 0;\n    const glLayers = glStyle.layers;\n    for (let i = 0, ii = glLayers.length; i < ii; ++i) {\n        const glLayer = glLayers[i];\n        if (layerIds.indexOf(glLayer.id) !== -1) {\n            minZoom = Math.min('minzoom' in glLayer ? glLayer.minzoom : 0, minZoom);\n            maxZoom = Math.max('maxzoom' in glLayer ? glLayer.maxzoom : 24, maxZoom);\n        }\n    }\n    return new Promise(function (resolve, reject) {\n        const setStyle = function () {\n            const source = layer.getSource();\n            if (!source || source.getState() === 'error') {\n                reject(new Error('Error accessing data for source ' + layer.get('mapbox-source')));\n                return;\n            }\n            if ('getTileGrid' in source) {\n                const tileGrid = /** @type {import(\"ol/source/Tile.js\").default|import(\"ol/source/VectorTile.js\").default} */\n                source.getTileGrid();\n                if (tileGrid) {\n                    const sourceMinZoom = tileGrid.getMinZoom();\n                    if (minZoom > 0 || sourceMinZoom > 0) {\n                        layer.setMaxResolution(Math.min(getResolutionForZoom(Math.max(0, minZoom - 1e-12), defaultResolutions), getResolutionForZoom(Math.max(0, sourceMinZoom - 1e-12), tileGrid.getResolutions())));\n                    }\n                    if (maxZoom < 24) {\n                        layer.setMinResolution(getResolutionForZoom(maxZoom, defaultResolutions));\n                    }\n                }\n            } else {\n                if (minZoom > 0) {\n                    layer.setMaxResolution(getResolutionForZoom(Math.max(0, minZoom - 1e-12), defaultResolutions));\n                }\n            }\n            if (source instanceof VectorSource || source instanceof VectorTileSource) {\n                applyStyle(layer, glStyle, layerIds, Object.assign({ styleUrl: styleUrl }, options)).then(function () {\n                    manageVisibility(layer, mapOrGroup);\n                    resolve();\n                }).catch(reject);\n            } else {\n                resolve();\n            }\n        };\n        layer.set('mapbox-layers', layerIds);\n        const layers = mapOrGroup.getLayers();\n        if (layers.getArray().indexOf(layer) === -1) {\n            layers.push(layer);\n        }\n        if (layer.getSource()) {\n            setStyle();\n        } else {\n            layer.once('change:source', setStyle);\n        }\n    });\n}\n/**\n * Get the Mapbox Layer object for the provided `layerId`.\n * @param {Map|LayerGroup} mapOrGroup Map or LayerGroup.\n * @param {string} layerId Mapbox Layer id.\n * @return {Object} Mapbox Layer object.\n */\nfunction getMapboxLayer(mapOrGroup, layerId) {\n    const style = mapOrGroup.get('mapbox-style');\n    const layerStyle = style.layers.find(function (layer) {\n        return layer.id === layerId;\n    });\n    return layerStyle;\n}\n/**\n * Add a new Mapbox Layer object to the style. The map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {Object} mapboxLayer Mapbox Layer object.\n * @param {string} [beforeLayerId] Optional id of the Mapbox Layer before the new layer that will be added.\n * @return {Promise<void>} Resolves when the added layer is available.\n */\nfunction addMapboxLayer(mapOrGroup, mapboxLayer, beforeLayerId) {\n    const glStyle = mapOrGroup.get('mapbox-style');\n    const mapboxLayers = glStyle.layers;\n    let spliceIndex;\n    let sourceIndex = -1;\n    if (beforeLayerId !== undefined) {\n        const beforeMapboxLayer = getMapboxLayer(mapOrGroup, beforeLayerId);\n        if (beforeMapboxLayer === undefined) {\n            throw new Error(`Layer with id \"${ beforeLayerId }\" not found.`);\n        }\n        spliceIndex = mapboxLayers.indexOf(beforeMapboxLayer);\n    } else {\n        spliceIndex = mapboxLayers.length;\n    }\n    let sourceOffset;\n    if (spliceIndex > 0 && mapboxLayers[spliceIndex - 1].source === mapboxLayer.source) {\n        sourceIndex = spliceIndex - 1;\n        sourceOffset = -1;\n    } else if (spliceIndex < mapboxLayers.length && mapboxLayers[spliceIndex].source === mapboxLayer.source) {\n        sourceIndex = spliceIndex;\n        sourceOffset = 0;\n    }\n    if (sourceIndex === -1) {\n        const {options, styleUrl} = mapOrGroup.get('mapbox-metadata');\n        const layer = setupLayer(glStyle, styleUrl, mapboxLayer, options);\n        if (beforeLayerId) {\n            const beforeLayer = getLayer(mapOrGroup, beforeLayerId);\n            const beforeLayerIndex = mapOrGroup.getLayers().getArray().indexOf(beforeLayer);\n            mapOrGroup.getLayers().insertAt(beforeLayerIndex, layer);\n        }\n        mapboxLayers.splice(spliceIndex, 0, mapboxLayer);\n        return finalizeLayer(layer, [mapboxLayer.id], glStyle, styleUrl, mapOrGroup, options);\n    }\n    if (mapboxLayers.some(layer => layer.id === mapboxLayer.id)) {\n        throw new Error(`Layer with id \"${ mapboxLayer.id }\" already exists.`);\n    }\n    const sourceLayerId = mapboxLayers[sourceIndex].id;\n    const args = styleFunctionArgs[getStyleFunctionKey(mapOrGroup.get('mapbox-style'), getLayer(mapOrGroup, sourceLayerId))];\n    mapboxLayers.splice(spliceIndex, 0, mapboxLayer);\n    if (args) {\n        const [olLayer, glStyle, sourceOrLayers, resolutions, spriteData, spriteImageUrl, getFonts, getImage] = args;\n        if (Array.isArray(sourceOrLayers)) {\n            const layerIndex = sourceOrLayers.indexOf(sourceLayerId) + sourceOffset;\n            sourceOrLayers.splice(layerIndex, 0, mapboxLayer.id);\n        }\n        stylefunction(olLayer, glStyle, sourceOrLayers, resolutions, spriteData, spriteImageUrl, getFonts, getImage);\n    } else {\n        getLayer(mapOrGroup, mapboxLayers[sourceIndex].id).changed();\n    }\n    return Promise.resolve();\n}\n/**\n * Update a Mapbox Layer object in the style. The map will be re-rendered with the new style.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {Object} mapboxLayer Updated Mapbox Layer object.\n */\nfunction updateMapboxLayer(mapOrGroup, mapboxLayer) {\n    const glStyle = mapOrGroup.get('mapbox-style');\n    const mapboxLayers = glStyle.layers;\n    const index = mapboxLayers.findIndex(function (layer) {\n        return layer.id === mapboxLayer.id;\n    });\n    if (index === -1) {\n        throw new Error(`Layer with id \"${ mapboxLayer.id }\" not found.`);\n    }\n    const oldLayer = mapboxLayers[index];\n    if (oldLayer.source !== mapboxLayer.source) {\n        throw new Error('Updated layer and previous version must use the same source.');\n    }\n    delete getFunctionCache(glStyle)[mapboxLayer.id];\n    delete getFilterCache(glStyle)[mapboxLayer.id];\n    mapboxLayers[index] = mapboxLayer;\n    const args = styleFunctionArgs[getStyleFunctionKey(mapOrGroup.get('mapbox-style'), getLayer(mapOrGroup, mapboxLayer.id))];\n    if (args) {\n        stylefunction.apply(undefined, args);\n    } else {\n        getLayer(mapOrGroup, mapboxLayer.id).changed();\n    }\n}\n/**\n * Updates a Mapbox source object in the style. The according OpenLayers source will be replaced\n * and the map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {string} id Key of the source in the `sources` object literal.\n * @param {Object} mapboxSource Mapbox source object.\n * @return {Promise<Source>} Promise that resolves when the source has been updated.\n */\nfunction updateMapboxSource(mapOrGroup, id, mapboxSource) {\n    const currentSource = getSource(mapOrGroup, id);\n    const layers = mapOrGroup.getLayers().getArray().filter(function (layer) {\n        return (layer instanceof VectorLayer || layer instanceof TileLayer || layer instanceof VectorTileLayer) && layer.getSource() === currentSource;\n    });\n    const metadata = mapOrGroup.get('mapbox-metadata');\n    let newSourcePromise;\n    switch (mapboxSource.type) {\n    case 'vector':\n        newSourcePromise = setupVectorSource(mapboxSource, metadata.styleUrl, metadata.options);\n        break;\n    case 'geojson':\n        newSourcePromise = Promise.resolve(setupGeoJSONSource(mapboxSource, metadata.styleUrl, metadata.options));\n        break;\n    case 'raster':\n    case 'raster-dem':\n        newSourcePromise = setupRasterSource(mapboxSource, metadata.styleUrl, metadata.options);\n        break;\n    default:\n        return Promise.reject(new Error('Unsupported source type ' + mapboxSource.type));\n    }\n    newSourcePromise.then(function (newSource) {\n        layers.forEach(function (layer) {\n            layer.setSource(newSource);\n        });\n    });\n    return newSourcePromise;\n}\n/**\n * Remove a Mapbox Layer object from the style. The map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {string|Object} mapboxLayerIdOrLayer Mapbox Layer id or Mapbox Layer object.\n */\nfunction removeMapboxLayer(mapOrGroup, mapboxLayerIdOrLayer) {\n    const mapboxLayerId = typeof mapboxLayerIdOrLayer === 'string' ? mapboxLayerIdOrLayer : mapboxLayerIdOrLayer.id;\n    const layer = getLayer(mapOrGroup, mapboxLayerId);\n    /** @type {Array<Object>} */\n    const layerMapboxLayers = layer.get('mapbox-layers');\n    if (layerMapboxLayers.length === 1) {\n        throw new Error('Cannot remove last Mapbox layer from an OpenLayers layer.');\n    }\n    layerMapboxLayers.splice(layerMapboxLayers.indexOf(mapboxLayerId), 1);\n    const glStyle = mapOrGroup.get('mapbox-style');\n    const layers = glStyle.layers;\n    layers.splice(layers.findIndex(layer => layer.id === mapboxLayerId), 1);\n    const args = styleFunctionArgs[getStyleFunctionKey(glStyle, layer)];\n    if (args) {\n        const [olLayer, glStyle, sourceOrLayers, resolutions, spriteData, spriteImageUrl, getFonts, getImage] = args;\n        if (Array.isArray(sourceOrLayers)) {\n            sourceOrLayers.splice(sourceOrLayers.findIndex(layer => layer === mapboxLayerId), 1);\n        }\n        stylefunction(olLayer, glStyle, sourceOrLayers, resolutions, spriteData, spriteImageUrl, getFonts, getImage);\n    } else {\n        getLayer(mapOrGroup, mapboxLayerId).changed();\n    }\n}\n/**\n * Get the OpenLayers layer instance that contains the provided Mapbox Style\n * `layer`. Note that multiple Mapbox Style layers are combined in a single\n * OpenLayers layer instance when they use the same Mapbox Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} layerId Mapbox Style layer id.\n * @return {Layer} OpenLayers layer instance.\n */\nfunction getLayer(map, layerId) {\n    const layers = map.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n        const mapboxLayers = layers[i].get('mapbox-layers');\n        if (mapboxLayers && mapboxLayers.indexOf(layerId) !== -1) {\n            return layers[i];\n        }\n    }\n    return undefined;\n}\n/**\n * Get the OpenLayers layer instances for the provided Mapbox Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} sourceId Mapbox Style source id.\n * @return {Array<Layer>} OpenLayers layer instances.\n */\nfunction getLayers(map, sourceId) {\n    const result = [];\n    const layers = map.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n        if (layers[i].get('mapbox-source') === sourceId) {\n            result.push(layers[i]);\n        }\n    }\n    return result;\n}\n/**\n * Get the OpenLayers source instance for the provided Mapbox Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} sourceId Mapbox Style source id.\n * @return {Source} OpenLayers source instance.\n */\nfunction getSource(map, sourceId) {\n    const layers = map.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n        const source = /** @type {Layer} */\n        layers[i].getSource();\n        if (layers[i].get('mapbox-source') === sourceId) {\n            return source;\n        }\n    }\n    return undefined;\n}\n/**\n * Sets or removes a feature state. The feature state is taken into account for styling,\n * just like the feature's properties, and can be used e.g. to conditionally render selected\n * features differently.\n *\n * The feature state will be stored on the OpenLayers layer matching the feature identifier, in the\n * `mapbox-featurestate` property.\n * @param {Map|VectorLayer|VectorTileLayer} mapOrLayer OpenLayers Map or layer to set the feature\n * state on.\n * @param {FeatureIdentifier} feature Feature identifier.\n * @param {Object|null} state Feature state. Set to `null` to remove the feature state.\n */\nfunction setFeatureState(mapOrLayer, feature, state) {\n    const layers = 'getLayers' in mapOrLayer ? getLayers(mapOrLayer, feature.source) : [mapOrLayer];\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n        const featureState = layers[i].get('mapbox-featurestate');\n        if (featureState) {\n            if (state) {\n                featureState[feature.id] = state;\n            } else {\n                delete featureState[feature.id];\n            }\n            layers[i].changed();\n        } else {\n            throw new Error(`Map or layer for source \"${ feature.source }\" not found.`);\n        }\n    }\n}\n/**\n * Sets or removes a feature state. The feature state is taken into account for styling,\n * just like the feature's properties, and can be used e.g. to conditionally render selected\n * features differently.\n * @param {Map|VectorLayer|VectorTileLayer} mapOrLayer Map or layer to set the feature state on.\n * @param {FeatureIdentifier} feature Feature identifier.\n * @return {Object|null} Feature state or `null` when no feature state is set for the given\n * feature identifier.\n */\nfunction getFeatureState(mapOrLayer, feature) {\n    const layers = 'getLayers' in mapOrLayer ? getLayers(mapOrLayer, feature.source) : [mapOrLayer];\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n        const featureState = layers[i].get('mapbox-featurestate');\n        if (featureState && featureState[feature.id]) {\n            return featureState[feature.id];\n        }\n    }\n    return undefined;\n}\n\n/** @typedef {import(\"ol/Map.js\").default} Map */\n/**\n * @classdesc\n * Event emitted on configuration or loading error.\n */\nclass ErrorEvent extends BaseEvent {\n    /**\n   * @param {Error} error error object.\n   */\n    constructor(error) {\n        super(EventType.ERROR);\n        /**\n     * @type {Error}\n     */\n        this.error = error;\n    }\n}\n/**\n * @typedef {Object} Options\n * @property {string} styleUrl The URL of the Mapbox style object to use for this layer.  For a\n * style created with Mapbox Studio and hosted on Mapbox, this will look like\n * 'mapbox://styles/you/your-style'.\n * @property {string} [accessToken] The access token for your Mapbox style. This has to be provided\n * for `mapbox://` style urls. For `https://` and other urls, any access key must be the last query\n * parameter of the style url.\n * @property {string} [source] If your style uses more than one source, you need to use either the\n * `source` property or the `layers` property to limit rendering to a single vector source.  The\n * `source` property corresponds to the id of a vector source in your Mapbox style.\n * @property {Array<string>} [layers] Limit rendering to the list of included layers.  All layers\n * must share the same vector source.  If your style uses more than one source, you need to use\n * either the `source` property or the `layers` property to limit rendering to a single vector\n * source.\n * @property {boolean} [declutter=true] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"ol/layer/Base.js\").BackgroundColor|false} [background] Background color for the layer.\n * If not specified, the background from the Mapbox style object will be used. Set to `false` to prevent\n * the Mapbox style's background from being used.\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"ol/extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible. If neither `maxResolution` nor `minZoom` are defined, the layer's `maxResolution` will\n * match the style source's `minzoom`.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will\n * be visible. If neither `maxResolution` nor `minZoom` are defined, the layer's `minZoom` will match\n * the style source's `minzoom`.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"ol/render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {import(\"ol/layer/VectorTile.js\").VectorTileRenderType} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Everything is rendered as vectors. Use this mode for improved performance on vector\n *    tile layers with only a few rendered features (e.g. for highlighting a subset of features of\n *    another layer with the same source).\n * @property {import(\"ol/Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use `map.addLayer()`.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n/**\n * @classdesc\n * ```js\n * import {MapboxVectorLayer} from 'ol-mapbox-style';\n * ```\n * A vector tile layer based on a Mapbox style that uses a single vector source.  Configure\n * the layer with the `styleUrl` and `accessToken` shown in Mapbox Studio's share panel.\n * If the style uses more than one source, use the `source` property to choose a single\n * vector source.  If you want to render a subset of the layers in the style, use the `layers`\n * property (all layers must share the same vector source).  See the constructor options for\n * more detail.\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new MapboxVectorLayer({\n *           styleUrl: 'mapbox://styles/mapbox/bright-v9',\n *           accessToken: 'your-mapbox-access-token-here',\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * On configuration or loading error, the layer will trigger an `'error'` event.  Listeners\n * will receive an object with an `error` property that can be used to diagnose the problem.\n *\n * **Note for users of the full build**: The `MapboxVectorLayer` requires the\n * [ol-mapbox-style](https://github.com/openlayers/ol-mapbox-style) library to be loaded as well.\n *\n * @param {Options} options Options.\n * @extends {VectorTileLayer}\n * @fires module:ol/events/Event~BaseEvent#event:error\n * @api\n */\nclass MapboxVectorLayer extends VectorTileLayer {\n    /**\n   * @param {Options} options Layer options.  At a minimum, `styleUrl` and `accessToken`\n   * must be provided.\n   */\n    constructor(options) {\n        const declutter = 'declutter' in options ? options.declutter : true;\n        const source = new VectorTileSource({\n            state: 'loading',\n            format: new MVT()\n        });\n        super({\n            source: source,\n            background: options.background,\n            declutter: declutter,\n            className: options.className,\n            opacity: options.opacity,\n            visible: options.visible,\n            zIndex: options.zIndex,\n            minResolution: options.minResolution,\n            maxResolution: options.maxResolution,\n            minZoom: options.minZoom,\n            maxZoom: options.maxZoom,\n            renderOrder: options.renderOrder,\n            renderBuffer: options.renderBuffer,\n            renderMode: options.renderMode,\n            map: options.map,\n            updateWhileAnimating: options.updateWhileAnimating,\n            updateWhileInteracting: options.updateWhileInteracting,\n            preload: options.preload,\n            useInterimTilesOnError: options.useInterimTilesOnError,\n            properties: options.properties\n        });\n        if (options.accessToken) {\n            this.accessToken = options.accessToken;\n        }\n        const url = options.styleUrl;\n        const promises = [applyStyle(this, url, options.layers || options.source, { accessToken: this.accessToken })];\n        if (this.getBackground() === undefined) {\n            promises.push(applyBackground(this, options.styleUrl, { accessToken: this.accessToken }));\n        }\n        Promise.all(promises).then(() => {\n            source.setState('ready');\n        }).catch(error => {\n            this.dispatchEvent(new ErrorEvent(error));\n            const source = this.getSource();\n            source.setState('error');\n        });\n    }\n}\n\nexport { MapboxVectorLayer, addMapboxLayer, apply, applyBackground, applyStyle, apply as default, getFeatureState, getLayer, getLayers, getMapboxLayer, getSource, getStyleForLayer, recordStyleLayer, removeMapboxLayer, renderTransparent, setFeatureState, stylefunction, updateMapboxLayer, updateMapboxSource };\n//# sourceMappingURL=index.js.map\n","import MVT from '../src/ol/format/MVT.js';\nimport TileQueue, {\n  getTilePriority as tilePriorityFunction,\n} from '../src/ol/TileQueue.js';\nimport VectorTileLayer from '../src/ol/layer/VectorTile.js';\nimport VectorTileSource from '../src/ol/source/VectorTile.js';\nimport stringify from 'json-stringify-safe';\nimport {get} from '../src/ol/proj.js';\nimport {inView} from '../src/ol/layer/Layer.js';\nimport {stylefunction} from 'ol-mapbox-style';\n\n/** @type {any} */\nconst worker = self;\n\nlet frameState, pixelRatio, rendererTransform;\nconst canvas = new OffscreenCanvas(1, 1);\n// OffscreenCanvas does not have a style, so we mock it\ncanvas.style = {};\nconst context = canvas.getContext('2d');\n\nconst sources = {\n  landcover: new VectorTileSource({\n    maxZoom: 9,\n    format: new MVT(),\n    url: 'https://api.maptiler.com/tiles/landcover/{z}/{x}/{y}.pbf?key=get_your_own_D6rA4zTHduk6KOKTXzGB',\n  }),\n  contours: new VectorTileSource({\n    minZoom: 9,\n    maxZoom: 14,\n    format: new MVT(),\n    url: 'https://api.maptiler.com/tiles/contours/{z}/{x}/{y}.pbf?key=get_your_own_D6rA4zTHduk6KOKTXzGB',\n  }),\n  maptiler_planet: new VectorTileSource({\n    format: new MVT(),\n    maxZoom: 14,\n    url: 'https://api.maptiler.com/tiles/v3/{z}/{x}/{y}.pbf?key=get_your_own_D6rA4zTHduk6KOKTXzGB',\n  }),\n};\nconst layers = [];\n\n// Font replacement so we do not need to load web fonts in the worker\nfunction getFont(font) {\n  return font[0].replace('Noto Sans', 'serif').replace('Roboto', 'sans-serif');\n}\n\nfunction loadStyles() {\n  const styleUrl =\n    'https://api.maptiler.com/maps/streets-v2/style.json?key=get_your_own_D6rA4zTHduk6KOKTXzGB';\n\n  fetch(styleUrl)\n    .then((data) => data.json())\n    .then((styleJson) => {\n      const buckets = [];\n      let currentSource;\n      styleJson.layers.forEach((layer) => {\n        if (!layer.source) {\n          return;\n        }\n        if (currentSource !== layer.source) {\n          currentSource = layer.source;\n          buckets.push({\n            source: layer.source,\n            layers: [],\n          });\n        }\n        buckets[buckets.length - 1].layers.push(layer.id);\n      });\n\n      const spriteUrl =\n        styleJson.sprite + (pixelRatio > 1 ? '@2x' : '') + '.json';\n      const spriteImageUrl =\n        styleJson.sprite + (pixelRatio > 1 ? '@2x' : '') + '.png';\n      fetch(spriteUrl)\n        .then((data) => data.json())\n        .then((spriteJson) => {\n          buckets.forEach((bucket) => {\n            const source = sources[bucket.source];\n            if (!source) {\n              return;\n            }\n            const layer = new VectorTileLayer({\n              declutter: true,\n              source,\n              minZoom: source.getTileGrid().getMinZoom(),\n            });\n            layer.getRenderer().useContainer = function (target, transform) {\n              this.containerReused = this.getLayer() !== layers[0];\n              this.canvas = canvas;\n              this.context = context;\n              this.container = {\n                firstElementChild: canvas,\n                style: {\n                  opacity: layer.getOpacity(),\n                },\n              };\n              rendererTransform = transform;\n            };\n            stylefunction(\n              layer,\n              styleJson,\n              bucket.layers,\n              undefined,\n              spriteJson,\n              spriteImageUrl,\n              getFont,\n            );\n            layers.push(layer);\n          });\n          worker.postMessage({action: 'requestRender'});\n        });\n    });\n}\n\n// Minimal map-like functionality for rendering\nconst tileQueue = new TileQueue(\n  (tile, tileSourceKey, tileCenter, tileResolution) =>\n    tilePriorityFunction(\n      frameState,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution,\n    ),\n  () => worker.postMessage({action: 'requestRender'}),\n);\n\nconst maxTotalLoading = 8;\nconst maxNewLoads = 2;\n\nworker.addEventListener('message', (event) => {\n  if (event.data.action === 'requestFeatures') {\n    const layersInView = layers.filter((l) =>\n      inView(l.getLayerState(), frameState.viewState),\n    );\n    const observables = layersInView.map((l) =>\n      l.getFeatures(event.data.pixel),\n    );\n    Promise.all(observables).then((res) => {\n      const features = res.flat();\n      worker.postMessage({\n        action: 'getFeatures',\n        features: JSON.parse(stringify(features.map((e) => e.getProperties()))),\n      });\n    });\n    return;\n  }\n\n  if (event.data.action !== 'render') {\n    return;\n  }\n  frameState = event.data.frameState;\n  if (!pixelRatio) {\n    pixelRatio = frameState.pixelRatio;\n    loadStyles();\n  }\n  frameState.tileQueue = tileQueue;\n  frameState.viewState.projection = get('EPSG:3857');\n  layers.forEach((layer) => {\n    if (inView(layer.getLayerState(), frameState.viewState)) {\n      if (layer.getDeclutter() && !frameState.declutterTree) {\n        frameState.declutter = {};\n      }\n      const renderer = layer.getRenderer();\n      renderer.renderFrame(frameState, canvas);\n    }\n  });\n  layers.forEach((layer) => {\n    if (!layer.getRenderer().context) {\n      return;\n    }\n    layer.renderDeclutter(frameState, layer.getLayerState());\n    layer.renderDeferred(frameState);\n  });\n  if (tileQueue.getTilesLoading() < maxTotalLoading) {\n    tileQueue.reprioritize();\n    tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n  }\n  const imageData = canvas.transferToImageBitmap();\n  worker.postMessage(\n    {\n      action: 'rendered',\n      imageData: imageData,\n      transform: rendererTransform,\n      frameState: JSON.parse(stringify(frameState)),\n    },\n    [imageData],\n  );\n});\n"],"names":["module","exports","read","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","i","d","s","NaN","Infinity","Math","pow","write","value","c","rt","abs","isNaN","floor","log","LN2","serializer","replacer","cycleReplacer","stack","keys","key","slice","indexOf","join","length","thisPos","this","splice","push","call","obj","spaces","JSON","stringify","getSerialize","Pbf","ieee754","buf","ArrayBuffer","isView","Uint8Array","pos","type","Varint","Fixed64","Bytes","Fixed32","SHIFT_LEFT_32","SHIFT_RIGHT_32","utf8TextDecoder","TextDecoder","readPackedEnd","pbf","readVarint","toNum","low","high","isSigned","makeRoomForExtraLength","startPos","len","extraLen","realloc","writePackedVarint","arr","writeVarint","writePackedSVarint","writeSVarint","writePackedFloat","writeFloat","writePackedDouble","writeDouble","writePackedBoolean","writeBoolean","writePackedFixed32","writeFixed32","writePackedSFixed32","writeSFixed32","writePackedFixed64","writeFixed64","writePackedSFixed64","writeSFixed64","readUInt32","writeInt32","val","readInt32","prototype","destroy","readFields","readField","result","end","tag","skip","readMessage","readFixed32","readSFixed32","readFixed64","readSFixed64","readFloat","readDouble","b","l","p","h","Error","readVarintRemainder","readVarint64","readSVarint","num","readBoolean","Boolean","readString","decode","subarray","readUtf8TextDecoder","str","b1","b2","b3","b0","bytesPerSequence","String","fromCharCode","readUtf8","readBytes","readPackedVarint","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","min","set","finish","writeBigVarintLow","lsb","writeBigVarintHigh","writeBigVarint","writeString","lead","charCodeAt","writeUtf8","writeBytes","writeRawMessage","fn","writeMessage","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","t","r","a","n","o","f","exp","u","sqrt","max","x","_maxEntries","_minEntries","ceil","clear","children","minX","minY","maxX","maxY","leaf","height","pop","all","_all","data","search","toBBox","collides","load","insert","_build","_splitRoot","_insert","remove","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","sort","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","getter","__esModule","definition","Object","defineProperty","enumerable","get","prop","hasOwnProperty","constructor","propagationStopped","defaultPrevented","target","preventDefault","stopPropagation","disposed","dispose","disposeInternal","ascending","linearFindNearest","direction","candidate","reverseSubArray","begin","tmp","extension","Array","isArray","equals","arr1","arr2","len1","VOID","memoizeOne","lastResult","lastArgs","lastThis","called","nextArgs","arguments","toPromise","err","Promise","reject","resolve","promiseGetter","object","property","super","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","includes","dispatchEvent","event","isString","evt","Event","dispatching","pendingRemovals","propagate","ii","handleEvent","pr","removeEventListener","getListeners","hasListener","index","listen","thisArg","once","bind","originalListener","eventsKey","listenOnce","unlistenByKey","Observable","on","un","revision_","changed","EventType","getRevision","onInternal","onceInternal","ol_key","unInternal","unByKey","uidCounter_","getUid","ol_uid","ObjectEvent","oldValue","values","values_","setProperties","getKeys","getProperties","assign","getPropertiesInternal","hasProperties","notify","eventType","ObjectEventType","addChangeListener","removeChangeListener","silent","applyProperties","source","unset","assertion","errorMessage","geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","geometry","setGeometry","properties","clone","setGeometryName","getGeometryName","getGeometry","style","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","styles","createStyleFunction","setId","id","name","tmp_","transform","multiply","transform1","transform2","a1","c1","d1","e1","f1","a2","c2","d2","e2","f2","coordinate","y","scale","compose","dx1","dy1","sx","sy","angle","dx2","dy2","sin","cos","makeInverse","det","mat","matrixPrecision","map","round","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","coordinates","extent","createEmpty","extendCoordinate","dest","closestSquaredDistanceXY","dx","dy","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","Relationship","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","stride","extendFlatCoordinates","extendXY","forEachCorner","callback","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getHeight","getCorner","corner","getForViewAndSize","center","resolution","rotation","size","x0","y0","x1","y1","x2","y2","x3","y3","getRotatedViewport","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersection","intersection","intersects","applyTransform","transformFn","stops","width","xs","ys","_boundingExtentXYs","wrapX","projection","projectionExtent","getExtent","canWrapX","worldWidth","wrapAndSliceX","multiWorld","isFinite","squaredSegmentDistance","angleInDegrees","PI","lerp","decimals","factor","douglasPeucker","squaredTolerance","simplifiedFlatCoordinates","simplifiedOffset","markers","last","first","maxSquaredDistance","squaredDistance","douglasPeuckerArray","ends","simplifiedEnds","snap","tolerance","quantize","quantizeArray","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","getInteriorPointsOfMultiArray","endss","interiorPoints","options","code_","code","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","tan","EPSG3857Projection","units","point","cosh","PROJECTIONS","fromEPSG4326","input","output","dimension","toEPSG4326","atan","EPSG4326Projection","cache","transforms","destination","sourceCode","destinationCode","coordinate1","coordinate2","cosAngle","sinAngle","worldsAway","sourceExtentWidth","DEFAULT_RADIUS","getDistance","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","levels","info","warn","error","none","level","args","console","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","identityTransform","addProjection","add","projectionLike","replace","pointResolution","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","projections","forEach","addProjections","createProjection","defaultCode","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransform","userProjection","getUserProjection","toUserCoordinate","fromUserCoordinate","destProjection","projections2","forwardTransform","inverseTransform","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","linearRingssAreOriented","orientLinearRings","orientLinearRingsArray","startOrientation","prevEndIndex","orientation","interpolatePoint","fraction","cumulativeLengths","haystack","needle","comparator","mid","cmp","found","binarySearch","lineStringCoordinateAtM","extrapolate","lo","hi","m0","linearRingss","transform2D","j","anchor","anchorX","anchorY","deltaX","deltaY","k","tmpTransform","RenderFeature","styleFunction","type_","flatCoordinates_","flatInteriorPoints_","flatMidpoints_","ends_","properties_","squaredTolerance_","stride_","simplifiedGeometry_","getFlatInteriorPoint","flatCenter","getFlatInteriorPoints","getFlatMidpoint","getFlatMidpoints","midpoint","getOrientedFlatCoordinates","getSimplifiedGeometry","simplifyTransformed","getStride","getType","pixelExtent","projectedExtent","getEnds","enableSimplifyTransformed","getFlatCoordinates","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","intersectsCoordinate","computeExtent","returnOrUpdate","rotate","simplify","intersectsExtent","translate","sourceProj","inCoordinates","outCoordinates","getLayoutForStride","layout","getStrideForLayout","getCoordinates","getFirstCoordinate","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","setFlatCoordinates","setCoordinates","setLayout","nesting","deflateCoordinates","deflateCoordinatesArray","coordinatess","jj","deflateMultiCoordinatesArray","coordinatesss","deflateCoordinate","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","tmpPoint","assignClosestArrayPoint","ret","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","intersectsLineString","coordinatesExtent","point1","point2","start","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRing","intersectsLinearRingArray","lineStringLength","flatMidpoint_","flatMidpointRevision_","maxDelta_","maxDeltaRevision_","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","getCoordinateAt","getLength","linearRing","twiceArea","linearRings","LinearRing","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","fromExtent","appendPoint","multiPoint","getPoint","getPoints","points","lineStrings","appendLineString","multiLineString","interpolate","lineStringsCoordinateAtM","getLineString","getLineStrings","midpoints","intersectsLineStringArray","endss_","flatInteriorPointsRevision_","polygons","thisEndss","appendPolygon","newEndss","multiPolygon","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","linearRingssContainsXY","getEndss","getInteriorPoints","simplifiedEndss","quantizeMultiArray","getPolygon","prevEnds","getPolygons","intersectsLinearRingMultiArray","lastEnds","dataProjection","defaultFeatureProjection","featureClass","supportedMediaTypes","getReadOptions","readProjection","featureProjection","adaptOptions","readFeature","readFeatures","readGeometry","writeFeature","feature","writeFeatures","features","writeGeometry","transformGeometryWithOptions","transformed","fromProjection","toProjection","power","layersPBFReader","layers","layer","layerPBFReader","version","featurePBFReader","readRawFeature","featureClass_","geometryName","layerName_","layerName","layers_","idProperty_","idProperty","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","geometryType","numEnds","getGeometryType","geom","ctor","pbfLayers","pbfLayer","setLayers","DROP","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","element","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","IDLE","LOADING","LOADED","ERROR","EMPTY","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tile","state","getState","TileState","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","getTilePriority","frameState","tileSourceKey","tileCenter","tileResolution","wantedTiles","viewState","background_","background","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","getBackground","getClassName","getLayerState","managed","getZIndex","getOpacity","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","array","getLayerStatesArray","states","getSourceState","setBackground","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","CENTER","RESOLUTION","ROTATION","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","createMinMaxResolution","cappedMaxRes","easeIn","easeOut","inAndOut","animationCallback","returnValue","setTimeout","isNoopAnimation","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","calculateCenterOn","position","rotX","rotY","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","ViewProperty","resolutionConstraintInfo","resolutionConstraint","defaultMaxZoom","defaultZoomFactor","zoomFactor","smoothResolutionConstraint","projExtent","constrainOnlyCenter","resolutions","constrainResolution","capped","z","createSnapToResolutions","defaultMaxResolution","degrees","defaultMinResolution","minZoomLevel","cappedZoomLevel","zoomLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","padding","minZoom_","centerConstraint","smoothExtentConstraint","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","createSnapToZero","theta","createSnapToN","createRotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","zoom","setZoom","oldPadding","getCenterInternal","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","getProjection","animateInternal","animationCount","Date","now","series","complete","duration","easing","getResolutionForZoom","delta","setHint","ViewHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","requestAnimationFrame","currentCenter","currentResolution","w","setViewportSize","getCenter","getConstraints","getConstrainResolution","getHints","hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","nextCenter","nextResolution","nextRotation","getViewStateAndExtent","nearest","baseLevel","fit","geometryOrExtent","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","getConstrainedZoom","targetZoom","targetRes","inView","layerState","Base","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","sourceReady_","rendered","render","setMap","handleSourcePropertyChange_","setSource","getSource","getRenderSource","handleSourceChange_","getFeatures","pixel","getData","isVisible","view","getMapInternal","getView","layerStatesArray","getLayerGroup","find","layerExtent","getAttributions","attributions","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","getDeclutter","renderDeclutter","renderDeferred","setMapInternal","some","arrayLayerState","createRenderer","hasRenderer","toSize","ImageStyle","opacity_","rotateWithView_","rotateWithView","rotation_","scale_","scaleArray_","displacement_","displacement","declutterMode_","declutterMode","getScale","getRotateWithView","getDisplacement","getDeclutterMode","getScaleArray","getAnchor","getImage","pixelRatio","getHitDetectionImage","getPixelRatio","getImageState","getImageSize","getOrigin","getSize","setDisplacement","setRotateWithView","setScale","listenImageChange","unlistenImageChange","ready","channel","alias","xyz","A","C","D50","D55","D65","D75","F2","F7","F11","E","whitepoint","rgb","_xyz","white","g","arg","_u","_v","xn","yn","zn","luv","vn","yr","lchuv","hr","cstr","space","parts","alpha","toLowerCase","base","parseInt","exec","dims","trim","split","shift","parseFloat","baseHues","endsWith","test","match","red","orange","yellow","green","blue","purple","hsl","t1","t2","t3","MAX_CACHE_SIZE","cacheSize","withAlpha","color","rgbaToLcha","fromString","raw","Number","parsed","normalize","asArray","ua","navigator","userAgent","WORKER_OFFSCREEN_CANVAS","devicePixelRatio","WorkerGlobalScope","OffscreenCanvas","self","Image","passive","window","createCanvasContext2D","canvasPool","settings","canvas","document","createElement","getContext","sharedCanvasContext","getSharedCanvasContext2D","releaseCanvas","context","clearRect","decodeFallback","image","src","then","catch","handleLoad","unlisten","handleError","IconImageCache","cache_","patternCache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","crossOrigin","getCacheKey","getPattern","pattern","update","ImageState","createPattern","setSize","maxCacheSize","shared","taintedTestContext","IconImage","imageState","hitDetectionImage_","image_","crossOrigin_","canvas_","color_","imageState_","size_","src_","tainted_","ready_","initializeImage_","isTainted_","willReadFrequently","drawImage","getImageData","dispatchChangeEvent_","handleImageError_","handleImageLoad_","replaceColor_","fillRect","getSrc","HTMLImageElement","ctx","globalCompositeOperation","fillStyle","asString","onChange","cacheKey","asColorLike","canvasPattern","patternCanvasContext","asCanvasPattern","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","lineHeight","weight","variant","families","family","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineJoin","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","checkedFonts","measureFont","measureContext","textHeights","registerFont","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","border","display","left","body","appendChild","offsetHeight","removeChild","measureAndCacheTextWidth","reduce","prev","curr","drawImageOrLabel","labelOrImage","originX","originY","save","globalAlpha","contextInstructions","label","executeLabelInstructions","restore","RegularShape","canvases_","hitDetectionCanvas_","fill_","fill","origin_","points_","radius_","radius2_","radius2","angle_","stroke_","stroke","renderOptions_","loading","getFill","getRadius","getRadius2","getAngle","getStroke","setFill","createHitDetectionCanvas_","renderOptions","draw_","setStroke","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","r1","r2","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","strokeStyle","lineCap","lineDash","lineDashOffset","getColor","getWidth","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","maxRadius","createPath_","lineWidth","setLineDash","drawHitDetectionCanvas_","arc","startAngle","step","angle0","radiusC","lineTo","closePath","setRadius","patternImage_","setColor","patternImage","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","Style","geometry_","geometryFunction_","defaultGeometryFunction","renderer","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","getText","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setImage","setText","defaultStyles","createDefaultStyle","Circle","calculateScale","wantedWidth","wantedHeight","Icon","anchor_","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","img","iconImage_","offset_","offsetOrigin_","offsetOrigin","initialOptions_","onload","imageSize","setAnchor","iconImageSize","Text","font_","textAlign_","textAlign","justify_","justify","repeat_","repeat","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","overflow_","overflow","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","getFont","getPlacement","getRepeat","getMaxAngle","getOverflow","getTextAlign","getJustify","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","numTypes","NoneType","BooleanType","NumberType","StringType","ColorType","NumberArrayType","AnyType","typeNames","namedTypes","typeName","names","namedType","specific","overlapsType","oneType","otherType","isType","expected","LiteralExpression","CallExpression","operator","newParsingContext","variables","Set","featureId","encoded","typeHint","_","isStringColor","parser","parsers","parseCallExpression","item","Ops","Get","Var","Concat","GeometryType","Any","All","Not","Resolution","Zoom","Time","Equal","NotEqual","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","Multiply","Divide","Add","Subtract","Clamp","Mod","Pow","Abs","Floor","Ceil","Round","Sin","Cos","Atan","Sqrt","Match","Between","Interpolate","Coalesce","Case","In","Color","Id","Band","Palette","ToString","createParser","getTypeFromHint","withArgsCount","firstArg","parsedArgs","varName","initialValue","withNoArgs","parseArgsOfType","narrowArgsType","outputType","withEvenArgs","argsCount","inputType","fallback","expectedInputType","interpolationType","interpolation","stop","operation","argCount","condition","needleType","colors","parsedColors","minArgs","maxArgs","argType","expression","gotType","expectedType","sameType","returnType","argValidators","actualType","computeGeometryType","substring","getGeometries","buildExpression","actual","compileExpression","colorValue","compileAssertionExpression","nameExpression","compileAccessorExpression","concat","toString","op","compileLogicalExpression","compileComparisonExpression","compileNumericExpression","compileCaseExpression","compileMatchExpression","previousInput","previousOutput","isColor","interpolateColor","interpolateNumber","compileInterpolateExpression","compileConvertExpression","input1","output1","input2","output2","along","rgba1","rgba2","lcha1","lcha2","deltaHue","lchaToRgba","always","rulesToStyleFunction","rules","parsingContext","evaluator","compiledRules","rule","styleLength","buildStyle","someMatched","filterEvaluator","else","styleEvaluator","buildRuleSet","evaluationContext","flatStylesToStyleFunction","flatStyles","evaluators","nonNullCount","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","prefix","evaluateValue","stringEvaluator","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","numberEvaluator","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluatePadding","numberArrayEvaluator","optionalDeclutterMode","buildText","evaluateImage","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","optionalIconOrigin","optionalIconAnchorUnits","requireColorLike","optionalColorLike","optionalString","requireNumberArray","optionalNumberArray","optionalNumber","optionalSize","icon","buildIcon","pointsName","radiusName","requireNumber","shape","buildShape","evaluateRadius","circle","buildCircle","buildImage","evaluateZIndex","empty","evaluateColor","srcEvaluator","offsetEvaluator","sizeEvaluator","patternSizeEvaluator","colorEvaluator","colorLikeEvaluator","patternEvaluator","evaluateWidth","evaluateLineCap","evaluateLineJoin","evaluateLineDash","evaluateLineDashOffset","evaluateMiterLimit","requireSize","requireSizeLike","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","declutterGroup","setRenderOrder","renderOrder","toStyleLike","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","tmpCoord","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","myEnds","endGeometry","reverseHitDetectionInstructions","reverse","instruction","fillStyleColor","fillPatternScale","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","myBegin","filteredFlatCoordinates","sharedData","origin","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","drawFlatCoordinatess_","setFillStrokeStyles_","circleInstruction","lineChunk","chunkLength","chunks","cursor","chunkM","currentChunk","missing","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","TEXT_ALIGN","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryWidths","beg","keep","saveTextStates_","p0","p1","p2","p3","flatOffset","oo","cc","chunk","chunkBegin","range","drawChars_","strokeKey","textKey","fillKey","baseline","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textRotation","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","tolerance_","maxExtent_","pixelRatio_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","instructions_","context_","Proxy","pushMethodArgs_","pushFunction","draw","instructionsAtIndex","instructionAtIndex","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","singleSegment","previousAngle","iStart","charLength","chars","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","horizontalTextAlign","align","createTextChunks","acc","line","overlaps","deferredRendering","alignAndScaleFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","zIndexContext_","getZIndexContext","createLabel","textIsArray","widths","heights","lineWidths","baseStyle","currentWidth","currentHeight","getTextDimensions","renderWidth","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","beginPath","moveTo","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","canvasTransform","replayImageOrLabel_","scaledCanvasSize","imageOrLabel","dimensions","box","strokePadding","alignAndScale","repeatSize","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","declutterTree","zIndexContext","pixelCoordinates","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","labelWithAnchor","widthIndex","imageArgs","imageDeclutterMode","imageDeclutterBox","renderImage","renderText","imageDeclutter","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","drawChars","part","execute","executeHitDetection","ALL","DECLUTTER","circlePixelIndexArrayCache","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","renderedContext_","deferredZIndexContexts_","createExecutors_","clip","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","forEachFeatureAtCoordinate","hitTolerance","declutteredFeatures","contextSize","newContext","indexes","maxDistanceSq","distances","distanceSq","distance","pixelIndex","getPixelIndexArray","imageData","idx","zs","executor","targetContext","builderTypes","maxBuilderTypes","requireClip","getDeferredZIndexContexts","getRenderedContext","deferredZIndexContexts","boundHandleImageChange_","handleImageChange_","layer_","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","matches","getLayer","handleFontsChanged","renderIfReadyAndVisible","loadImage","inversePixelTransform","pixelContext","container","renderedResolution","tempTransform","pixelTransform","deferredContext_","containerReused","pixelContext_","col","row","useContainer","backgroundColor","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","coordinateToPixelTransform","inverted","prepareContainer","dispatchRenderEvent_","preRender","postRender","renderDeferredInternal","getRenderContext","getRenderTransform","interimTile","transition_","transition","transitionStarts_","release","setState","getInterimTile","refreshInterimChain","getTileCoord","getAlpha","time","inTransition","endTransition","tileLoadFunction","unlisten_","tileLoadFunction_","unlistenImage_","getBlankImage","naturalWidth","naturalHeight","loadHandler","errorHandler","listening","decoding","loaded","listenerKeys","listenImage","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","verifyBrokenDiagonalRendering","calculateSourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","triangulation","sources","gutter","renderEdges","drawSingle","clipExtent","imageSmoothingEnabled","pixelRound","sourceDataExtent","stitchContext","stitchScale","inverseScale","xPos","yPos","rect","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","isBrokenDiagonalRendering","steps","ud","vd","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","clipExtent_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","calculateSourceExtentResolution","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","reproject_","getTileSize","leftToLoad","sourceListenKey","unlistenSources_","TileRange","contains","containsTileRange","extend","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpTileRange_","isDrawableTile","tileState","useInterimTilesOnError","getUseInterimTilesOnError","getTile","getPreload","pixelToCoordinateTransform","getTileGridForProjection","tilePixelRatio","getTilePixelRatio","getTileCoordForCoordAndZ","tileOrigin","tileSize","getGutterForProjection","layerIndex","viewResolution","viewCenter","tileSource","sourceRevision","zDirection","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","viewport","tileCoordIntersectsViewport","uid","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","getInterpolate","clips","clipZs","currentClip","getOpaque","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","contextSaved","drawTileImage","unshift","updateUsedTiles","usedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alphaChanged","postRenderFunction","expireCache","postRenderFunctions","preload","tileCallback","tileQueue","tileCount","getTileCoordCenter","useTile","updateCacheSize","userTransform","transform_","transformRotation_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","simpleGeometry","transformGeom2D","setTransform","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","createHitDetectionImageData","userExtent","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgSize","imgContext","byGeometryType","getGeometriesArrayRecursive","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","builderGroup","hasText","imageReplay","textReplay","lineStringReplay","polygonReplay","hasImage","replayGroup","declutterBuilderGroup","geometryRenderer","circleReplay","getSquaredTolerance","getTolerance","renderFeature","loadingPromises","renderGeometry","renderFeatureInternal","IMAGE_REPLAYS","VECTOR_REPLAYS","boundHandleStyleImageChange_","handleStyleImageChange_","renderedLayerRevision_","renderedPixelToCoordinateTransform_","renderedRotation_","renderedOpacity_","tmpTransform_","tileClipContexts_","prepareTile","updateExecutorGroup_","tileImageNeedsRender_","viewHints","hifi","wantedResolution","getRenderMode","renderTileImage_","executorGroups","hasContext","layerRevision","builderState","getReplayState","dirty","renderedRenderOrder","getTileGrid","tileExtent","sourceTiles","getSourceTiles","layerUid","hitDetectionImageData","tt","sourceTile","sourceTileCoord","sourceTileExtent","sharedExtent","builderExtent","bufferedExtent","executorGroupInstructions","replayExtent","renderingReplayGroup","getOverlaps","lastIndexOf","executorGroup","getTileCoordForCoordAndResolution","getWrapX","loadingSourceTiles","tilePixel","accumulator","getTileRenderTransform","executorGroupZIndexContexts","usedZIndices","executorGroupZindexContext","zIndexContexts","tileClipContext","worldOffset","renderMode","replayTypes","tileClipContexts","group","clipContext","replayState","renderedTileResolution","renderedTileRevision","renderPixelRatio","renderScale","pixelScale","BaseVector","renderMode_","setPreload","setUseInterimTilesOnError","TileProperty","format","format_","features_","loader_","url_","getFormat","onLoad","setFeatures","onError","setLoader","loader","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","getKeyZXY","fromKey","pruneExceptNewestZ","tmpTileCoord","strict","compare","every","currentVal","res","isSorted","origins","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","tempTileRange","tempExtent","tileCoordExtent","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getTileCoordResolution","getFullTileRange","opt_direction","fullTileRanges","adaptAttributions","attributionLike","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","getAttributionsCollapsible","refresh","setAttributions","getForProjection","extentFromProjection","resolutionsFromExtent","createForExtent","createForProjection","createXYZ","xyzOptions","gridOptions","half","TileSourceEvent","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","setKey","getTileCoordForTileUrlFunction","withinExtentAndZ","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","expandUrl","url","urls","startCharCode","stopCharCode","charCode","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","TileEventType","setTileLoadFunction","setTileUrlFunction","urlTileCoord","replayState_","errorTileKeys","renderedTileZ","withCredentials","loadFeaturesXhr","success","failure","xhr","XMLHttpRequest","open","responseType","status","responseText","responseXML","onerror","send","defaultLoadFunction","sourceTileCache","tileClass","tileGrids_","getFeaturesInExtent","tileFeatures","usedSourceTiles","getCacheKeyForTileKey","sourceZ","tileUrl","sourceTileState","listenChange","sourceTileKey","coordKey","newTile","getDefaultExportFromCjs","parseCSSColor_1","kCSSColorTable","clamp_css_byte","clamp_css_float","parse_css_int","parse_css_float","css_hue_to_rgb","m1","m2","parseCSSColor","css_str","iv","substr","ep","fname","params","parse","rgba","toArray","toArray01","toArray01PremultipliedAlpha","black","transparent","Color$1","convertLiteral","convertFunction","parameters","propertySpec","default","convertIdentityFunction","zoomAndFeatureDependent","featureDependent","zoomDependent","tokens","convertTokenString","featureFunctionParameters","featureFunctionStops","zoomStops","functionType","getFunctionType","getInterpolateOperator","appendStopPair","convertPropertyFunction","fixupDegenerateStepCurve","convertZoomAndPropertyFunction","isStep","convertZoomFunction","colorSpace","getFallback","defaultValue","curve","interpolated","re","literal","lastIndex","ParsingError","message","ParsingError$1","Scope","parent","bindings","has","Scope$1","NullType","kind","ObjectType","ValueType","CollatorType","FormattedType","ResolvedImageType","array$1","itemType","N","toString$1","valueMemberTypes","checkSubtype","memberType","isValidType","provided","allowedTypes","isValidNativeType","Collator","caseSensitive","diacriticSensitive","locale","sensitivity","collator","Intl","usage","lhs","rhs","resolvedLocale","resolvedOptions","FormattedSection","fontStack","textColor","Formatted","sections","unformatted","section","factory","serialize","serialized","ResolvedImage","validateRGBA","isValue","mixed","typeOf","Literal","evaluate","eachChild","outputDefined","Literal$1","RuntimeError$1","types$2","string","number","boolean","Assertion","Assertion$1","FormatExpression","nextTokenMayBeObject","lastExpression","content","evaluatedContent","ImageExpression","evaluatedImageName","availableImages","types$1","Coercion","parseColor","child","Coercion$1","geometryTypes","EvaluationContext$1","globals","featureState","formattedSection","_parseColorCache","canonical","featureTileCoord","featureDistanceData","canonicalID","distanceFromCenter","dX","dY","bearing","cached","CompoundExpression","_evaluate","definitions","availableOverloads","overloads","signature","signatureContext","ParsingContext$1","registry","path","scope","argParseFailed","errors","signatures","stringifySignature","actualTypes","register","CompoundExpression$1","CollatorExpression","updateBBox","bbox","boxWithinBox","bbox1","bbox2","getTileCoordinates","lat","tilesAtZoom","onBoundary","rayIntersect","pointWithinPolygon","rings","inside","ring","len2","pointWithinPolygons","twoSided","q1","q2","det1","det2","lineIntersectLine","vectorP","vectorQ","lineIntersectPolygon","lineStringWithinPolygon","lineStringWithinPolygons","getTilePolygon","getTilePolygons","updatePoint","polyBBox","worldSize","halfWorldSize","getTilePoints","pointBBox","shifts","tilePoints","getTileLines","lineBBox","tileLines","tileLine","resetBBox","Within","geojson","tilePolygon","tilePolygons","pointsWithinPolygons","linesWithinPolygons","Within$1","isFeatureConstant","isStateConstant","isGlobalPropertyConstant","boundExpression","Var$1","ParsingContext","expr","_parse","annotate","typeAnnotation","Expr","isConstant","ec","isTypeAnnotation","childrenConstant","findStopLessThanOrEqualTo","currentValue","nextValue","lowerIndex","upperIndex","currentIndex","Step","labels","outputs","labelKey","valueKey","stopCount","out","Step$1","unitbezier","UnitBezier","p1x","p1y","p2x","p2y","cx","bx","ax","cy","by","ay","sampleCurveX","sampleCurveY","sampleCurveDerivativeX","solveCurveX","epsilon","t0","solve","UnitBezier$1","freeze","__proto__","from","to","Xn","Yn","Zn","deg2rad$1","rad2deg","xyz2lab","lab2xyz","xyz2rgb","rgb2xyz","rgbToLab","rgbColor","labToRgb","labColor","interpolateHue","lab","forward","hcl","hclColor","interpolationFactor","lower","upper","exponentialInterpolation","controlPoints","rest","outputLower","outputUpper","lowerValue","upperValue","difference","Interpolate$1","needsAnnotation","firstImage","Coalesce$1","Let","binding","Let$1","At","At$1","In$1","IndexOf","fromIndex","IndexOf$1","cases","otherwise","labelContext","MAX_SAFE_INTEGER","sortedLabels","groupedByOutput","outputLookup","outputIndex","coerceLabel","Match$1","branches","Case$1","Slice","beginIndex","endIndex","Slice$1","isComparableType","eqCollate","makeComparison","compareBasic","compareWithCollator","isOrderComparison","Comparison","hasUntypedArgument","lt","Equals","NotEquals","LessThanOrEqual","GreaterThanOrEqual","NumberFormat","currency","unit","minFractionDigits","maxFractionDigits","minimumFractionDigits","maximumFractionDigits","Length","expressions","varargs","pitch","heatmapDensity","lineProgress","skyRadialProgress","accumulated","LN10","asin","isSupportedScript","toUpperCase","isFunction","StyleExpression","_warningHistory","_evaluator","_defaultValue","spec","getDefaultValue","_enumValues","evaluateWithoutErrorHandling","createExpression","types","enum","formatted","resolvedImage","getExpectedType","ZoomConstantExpression","_styleExpression","isStateDependent","ZoomDependentExpression","createPropertyExpression","isFeatureConstant$1","supportsPropertyExpression","isZoomConstant","supportsZoomExpression","zoomCurve","findZoomCurve","supportsInterpolation","childResult","deepUnbundle","unbundledValue","valueOf","unbundle","isExpressionFilter","createFilter","layerType","needGeometry","needFeature","convertFilter","filterExp","staticFilter","isDynamicFilter","unionDynamicBranches","collapseDynamicBooleanExpressions","extractStaticFilter","filterSpec","compiledStaticFilter","filterFunc","globalProperties","dynamicFilterFunc","compiledDynamicFilter","dynamicFilter","geometryNeeded","collapsed","dynamicConditionExpressions","collapsedExpression","subExpression","isBranchingDynamically","filters","convertComparisonOp","convertNegation","convertInOp","convertHasOp","refProperties","deref","derefLayers","create","ref","fontWeights","thin","hairline","light","book","regular","normal","plain","roman","standard","medium","bold","heavy","fat","poster","sp","italicRE","fontCache","mb2css","cssData","haveWeight","haveStyle","fontFamilies","maybeWeight","previousPart","startsWith","functionCacheByStyleId","filterCacheByStyleId","styleId","getStyleId","glStyle","getStyleFunctionKey","olLayer","getFunctionCache","functionCache","getFilterCache","filterCache","deg2rad","defaultResolutions","createCanvas","drawIconHalo","spriteImage","spriteImageData","haloWidth","haloColor","imageCanvas","imageContext","smoothstep","drawSDF","gamma","putImageData","hairSpacePool","applyLetterSpacing","letterSpacing","textWithLetterSpacing","lines","joinSpaceString","ll","getMeasureContext","measureCache","wrapText","em","hardLines","wrappedText","words","maxWidth","word","testLine","prevWidth","nextWidth","next","lineWords","lastWord","expressionData","rawExpression","compiledExpression","emptyObj$1","zoomObj","renderFeatureCoordinates","getValue","layoutOrPaint","layerId","functions","isExpr","evaluateFilter","renderTransparentEnabled","colorWithOpacity","templateRegEx","fromTemplate","recordLayer","styleFunctionArgs","stylefunction","sourceOrLayers","spriteData","spriteImageUrl","getFonts","spriteImageSize","spriteImageUnSDFed","blobUrl","Request","fetch","response","blob","URL","createObjectURL","revokeObjectURL","worker","postMessage","action","allLayers","layersBySourceLayer","mapboxLayers","iconImageCache","patternCache","mapboxSource","sourceLayer","textHalo","onlyLayer","featureBelongsToLayer","stylesLength","layerData","paint","visibility","minzoom","maxzoom","strokeColor","fillIcon","icon_cache_key","iconImg","skipLabel","textLineHeight","textSize","maxTextWidth","placementAngle","styleGeom","imageElement","iconRotationAlignment","iconSize","iconColor","iconCacheKey","iconOptions","sdf","circleRadius","circleStrokeColor","circleTranslate","circleColor","circleStrokeWidth","cache_key","fontArray","metadata","textField","chunkFont","textTransform","wrappedLabel","textAnchor","symbolSpacing","textHaloWidth","textOffset","textTranslate","vOffset","hOffset","textRotationAlignment","textJustify","halfTextSize","textPadding","rendererTransform","landcover","contours","maptiler_planet","observables","json","styleJson","buckets","currentSource","spriteUrl","sprite","spriteJson","bucket","VectorTile","transferToImageBitmap"],"sourceRoot":""}