{"version":3,"file":"offscreen-canvas.worker.worker.js","mappings":";;AACAA,EAAQC,KAAO,SAAUC,EAAQC,EAAQC,EAAMC,EAAMC,GACnD,IAAIC,EAAGC,EACHC,EAAiB,EAATH,EAAcD,EAAO,EAC7BK,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBE,GAAS,EACTC,EAAIT,EAAQE,EAAS,EAAK,EAC1BQ,EAAIV,GAAQ,EAAI,EAChBW,EAAIb,EAAOC,EAASU,GAOxB,IALAA,GAAKC,EAELP,EAAIQ,GAAM,IAAOH,GAAU,EAC3BG,KAAQH,EACRA,GAASH,EACFG,EAAQ,EAAGL,EAAS,IAAJA,EAAWL,EAAOC,EAASU,GAAIA,GAAKC,EAAGF,GAAS,GAKvE,IAHAJ,EAAID,GAAM,IAAOK,GAAU,EAC3BL,KAAQK,EACRA,GAASP,EACFO,EAAQ,EAAGJ,EAAS,IAAJA,EAAWN,EAAOC,EAASU,GAAIA,GAAKC,EAAGF,GAAS,GAEvE,GAAU,IAANL,EACFA,EAAI,EAAII,MACH,IAAIJ,IAAMG,EACf,OAAOF,EAAIQ,IAAsBC,KAAdF,GAAK,EAAI,GAE5BP,GAAQU,KAAKC,IAAI,EAAGd,GACpBE,GAAQI,CACV,CACA,OAAQI,GAAK,EAAI,GAAKP,EAAIU,KAAKC,IAAI,EAAGZ,EAAIF,EAC5C,EAEAL,EAAQoB,MAAQ,SAAUlB,EAAQmB,EAAOlB,EAAQC,EAAMC,EAAMC,GAC3D,IAAIC,EAAGC,EAAGc,EACNb,EAAiB,EAATH,EAAcD,EAAO,EAC7BK,GAAQ,GAAKD,GAAQ,EACrBE,EAAQD,GAAQ,EAChBa,EAAe,KAATlB,EAAca,KAAKC,IAAI,GAAI,IAAMD,KAAKC,IAAI,GAAI,IAAM,EAC1DN,EAAIT,EAAO,EAAKE,EAAS,EACzBQ,EAAIV,EAAO,GAAK,EAChBW,EAAIM,EAAQ,GAAgB,IAAVA,GAAe,EAAIA,EAAQ,EAAK,EAAI,EAmC1D,IAjCAA,EAAQH,KAAKM,IAAIH,GAEbI,MAAMJ,IAAUA,IAAUJ,KAC5BT,EAAIiB,MAAMJ,GAAS,EAAI,EACvBd,EAAIG,IAEJH,EAAIW,KAAKQ,MAAMR,KAAKS,IAAIN,GAASH,KAAKU,KAClCP,GAASC,EAAIJ,KAAKC,IAAI,GAAIZ,IAAM,IAClCA,IACAe,GAAK,IAGLD,GADEd,EAAII,GAAS,EACNY,EAAKD,EAELC,EAAKL,KAAKC,IAAI,EAAG,EAAIR,IAEpBW,GAAK,IACff,IACAe,GAAK,GAGHf,EAAII,GAASD,GACfF,EAAI,EACJD,EAAIG,GACKH,EAAII,GAAS,GACtBH,GAAMa,EAAQC,EAAK,GAAKJ,KAAKC,IAAI,EAAGd,GACpCE,GAAQI,IAERH,EAAIa,EAAQH,KAAKC,IAAI,EAAGR,EAAQ,GAAKO,KAAKC,IAAI,EAAGd,GACjDE,EAAI,IAIDF,GAAQ,EAAGH,EAAOC,EAASU,GAAS,IAAJL,EAAUK,GAAKC,EAAGN,GAAK,IAAKH,GAAQ,GAI3E,IAFAE,EAAKA,GAAKF,EAAQG,EAClBC,GAAQJ,EACDI,EAAO,EAAGP,EAAOC,EAASU,GAAS,IAAJN,EAAUM,GAAKC,EAAGP,GAAK,IAAKE,GAAQ,GAE1EP,EAAOC,EAASU,EAAIC,IAAU,IAAJC,CAC5B,C,oBC7EA,SAASc,EAAWC,EAAUC,GAC5B,IAAIC,EAAQ,GAAIC,EAAO,GAOvB,OALqB,MAAjBF,IAAuBA,EAAgB,SAASG,EAAKb,GACvD,OAAIW,EAAM,KAAOX,EAAc,eACxB,eAAiBY,EAAKE,MAAM,EAAGH,EAAMI,QAAQf,IAAQgB,KAAK,KAAO,GAC1E,GAEO,SAASH,EAAKb,GACnB,GAAIW,EAAMM,OAAS,EAAG,CACpB,IAAIC,EAAUP,EAAMI,QAAQI,OAC3BD,EAAUP,EAAMS,OAAOF,EAAU,GAAKP,EAAMU,KAAKF,OACjDD,EAAUN,EAAKQ,OAAOF,EAAStB,IAAUiB,GAAOD,EAAKS,KAAKR,IACtDF,EAAMI,QAAQf,KAAQA,EAAQU,EAAcY,KAAKH,KAAMN,EAAKb,GACnE,MACKW,EAAMU,KAAKrB,GAEhB,OAAmB,MAAZS,EAAmBT,EAAQS,EAASa,KAAKH,KAAMN,EAAKb,EAC7D,CACF,EA1BUuB,EAAO5C,QAGjB,SAAmB6C,EAAKf,EAAUgB,EAAQf,GACxC,OAAOgB,KAAKC,UAAUH,EAAKhB,EAAWC,EAAUC,GAAgBe,EAClE,GAJQG,aAAepB,C,mCCCvBe,EAAO5C,QAAUkD,EAEjB,IAAIC,EAAU,EAAQ,KAEtB,SAASD,EAAIE,GACTZ,KAAKY,IAAMC,YAAYC,QAAUD,YAAYC,OAAOF,GAAOA,EAAM,IAAIG,WAAWH,GAAO,GACvFZ,KAAKgB,IAAM,EACXhB,KAAKiB,KAAO,EACZjB,KAAKF,OAASE,KAAKY,IAAId,MAC3B,CAEAY,EAAIQ,OAAU,EACdR,EAAIS,QAAU,EACdT,EAAIU,MAAU,EACdV,EAAIW,QAAU,EAEd,IAAIC,EAAgB,WAChBC,EAAiB,EAAID,EAKrBE,EAAyC,oBAAhBC,YAA8B,KAAO,IAAIA,YAAY,QAwYlF,SAASC,EAAcC,GACnB,OAAOA,EAAIV,OAASP,EAAIU,MACpBO,EAAIC,aAAeD,EAAIX,IAAMW,EAAIX,IAAM,CAC/C,CAEA,SAASa,EAAMC,EAAKC,EAAMC,GACtB,OAAIA,EACc,WAAPD,GAAsBD,IAAQ,GAGlB,YAAdC,IAAS,IAAqBD,IAAQ,EACnD,CAiDA,SAASG,EAAuBC,EAAUC,EAAKR,GAC3C,IAAIS,EACAD,GAAO,MAAS,EAChBA,GAAO,QAAW,EAClBA,GAAO,UAAY,EAAIzD,KAAKQ,MAAMR,KAAKS,IAAIgD,IAAmB,EAAXzD,KAAKU,MAG5DuC,EAAIU,QAAQD,GACZ,IAAK,IAAI/D,EAAIsD,EAAIX,IAAM,EAAG3C,GAAK6D,EAAU7D,IAAKsD,EAAIf,IAAIvC,EAAI+D,GAAYT,EAAIf,IAAIvC,EAClF,CAEA,SAASiE,EAAkBC,EAAKZ,GAAS,IAAK,IAAItD,EAAI,EAAGA,EAAIkE,EAAIzC,OAAQzB,IAAKsD,EAAIa,YAAYD,EAAIlE,GAAO,CACzG,SAASoE,EAAmBF,EAAKZ,GAAQ,IAAK,IAAItD,EAAI,EAAGA,EAAIkE,EAAIzC,OAAQzB,IAAKsD,EAAIe,aAAaH,EAAIlE,GAAM,CACzG,SAASsE,EAAiBJ,EAAKZ,GAAU,IAAK,IAAItD,EAAI,EAAGA,EAAIkE,EAAIzC,OAAQzB,IAAKsD,EAAIiB,WAAWL,EAAIlE,GAAQ,CACzG,SAASwE,EAAkBN,EAAKZ,GAAS,IAAK,IAAItD,EAAI,EAAGA,EAAIkE,EAAIzC,OAAQzB,IAAKsD,EAAImB,YAAYP,EAAIlE,GAAO,CACzG,SAAS0E,EAAmBR,EAAKZ,GAAQ,IAAK,IAAItD,EAAI,EAAGA,EAAIkE,EAAIzC,OAAQzB,IAAKsD,EAAIqB,aAAaT,EAAIlE,GAAM,CACzG,SAAS4E,EAAmBV,EAAKZ,GAAQ,IAAK,IAAItD,EAAI,EAAGA,EAAIkE,EAAIzC,OAAQzB,IAAKsD,EAAIuB,aAAaX,EAAIlE,GAAM,CACzG,SAAS8E,EAAoBZ,EAAKZ,GAAO,IAAK,IAAItD,EAAI,EAAGA,EAAIkE,EAAIzC,OAAQzB,IAAKsD,EAAIyB,cAAcb,EAAIlE,GAAK,CACzG,SAASgF,EAAmBd,EAAKZ,GAAQ,IAAK,IAAItD,EAAI,EAAGA,EAAIkE,EAAIzC,OAAQzB,IAAKsD,EAAI2B,aAAaf,EAAIlE,GAAM,CACzG,SAASkF,EAAoBhB,EAAKZ,GAAO,IAAK,IAAItD,EAAI,EAAGA,EAAIkE,EAAIzC,OAAQzB,IAAKsD,EAAI6B,cAAcjB,EAAIlE,GAAK,CAIzG,SAASoF,EAAW7C,EAAKI,GACrB,OAASJ,EAAII,GACRJ,EAAII,EAAM,IAAM,EAChBJ,EAAII,EAAM,IAAM,IACD,SAAfJ,EAAII,EAAM,EACnB,CAEA,SAAS0C,EAAW9C,EAAK+C,EAAK3C,GAC1BJ,EAAII,GAAO2C,EACX/C,EAAII,EAAM,GAAM2C,IAAQ,EACxB/C,EAAII,EAAM,GAAM2C,IAAQ,GACxB/C,EAAII,EAAM,GAAM2C,IAAQ,EAC5B,CAEA,SAASC,EAAUhD,EAAKI,GACpB,OAASJ,EAAII,GACRJ,EAAII,EAAM,IAAM,EAChBJ,EAAII,EAAM,IAAM,KAChBJ,EAAII,EAAM,IAAM,GACzB,CA5eAN,EAAImD,UAAY,CAEZC,QAAS,WACL9D,KAAKY,IAAM,IACf,EAIAmD,WAAY,SAASC,EAAWC,EAAQC,GAGpC,IAFAA,EAAMA,GAAOlE,KAAKF,OAEXE,KAAKgB,IAAMkD,GAAK,CACnB,IAAIP,EAAM3D,KAAK4B,aACXuC,EAAMR,GAAO,EACbzB,EAAWlC,KAAKgB,IAEpBhB,KAAKiB,KAAa,EAAN0C,EACZK,EAAUG,EAAKF,EAAQjE,MAEnBA,KAAKgB,MAAQkB,GAAUlC,KAAKoE,KAAKT,EACzC,CACA,OAAOM,CACX,EAEAI,YAAa,SAASL,EAAWC,GAC7B,OAAOjE,KAAK+D,WAAWC,EAAWC,EAAQjE,KAAK4B,aAAe5B,KAAKgB,IACvE,EAEAsD,YAAa,WACT,IAAIX,EAAMF,EAAWzD,KAAKY,IAAKZ,KAAKgB,KAEpC,OADAhB,KAAKgB,KAAO,EACL2C,CACX,EAEAY,aAAc,WACV,IAAIZ,EAAMC,EAAU5D,KAAKY,IAAKZ,KAAKgB,KAEnC,OADAhB,KAAKgB,KAAO,EACL2C,CACX,EAIAa,YAAa,WACT,IAAIb,EAAMF,EAAWzD,KAAKY,IAAKZ,KAAKgB,KAAOyC,EAAWzD,KAAKY,IAAKZ,KAAKgB,IAAM,GAAKM,EAEhF,OADAtB,KAAKgB,KAAO,EACL2C,CACX,EAEAc,aAAc,WACV,IAAId,EAAMF,EAAWzD,KAAKY,IAAKZ,KAAKgB,KAAO4C,EAAU5D,KAAKY,IAAKZ,KAAKgB,IAAM,GAAKM,EAE/E,OADAtB,KAAKgB,KAAO,EACL2C,CACX,EAEAe,UAAW,WACP,IAAIf,EAAMhD,EAAQlD,KAAKuC,KAAKY,IAAKZ,KAAKgB,KAAK,EAAM,GAAI,GAErD,OADAhB,KAAKgB,KAAO,EACL2C,CACX,EAEAgB,WAAY,WACR,IAAIhB,EAAMhD,EAAQlD,KAAKuC,KAAKY,IAAKZ,KAAKgB,KAAK,EAAM,GAAI,GAErD,OADAhB,KAAKgB,KAAO,EACL2C,CACX,EAEA/B,WAAY,SAASI,GACjB,IACI2B,EAAKiB,EADLhE,EAAMZ,KAAKY,IAG+B,OAAzB+C,EAAY,KAAjCiB,EAAIhE,EAAIZ,KAAKgB,QAAqC4D,EAAI,IAAajB,GAC9CA,IAAY,KAAjCiB,EAAIhE,EAAIZ,KAAKgB,UAA6B,EAAQ4D,EAAI,IAAajB,GAC9CA,IAAY,KAAjCiB,EAAIhE,EAAIZ,KAAKgB,UAA6B,GAAQ4D,EAAI,IAAajB,GAC9CA,IAAY,KAAjCiB,EAAIhE,EAAIZ,KAAKgB,UAA6B,GAAQ4D,EAAI,IAAajB,EA+S3E,SAA6BkB,EAAGtG,EAAGuG,GAC/B,IACIC,EAAGH,EADHhE,EAAMkE,EAAElE,IAG6B,GAAzCgE,EAAIhE,EAAIkE,EAAE9D,OAAQ+D,GAAU,IAAJH,IAAa,EAAQA,EAAI,IAAM,OAAO/C,EAAMgD,EAAGE,EAAGxG,GACjC,GAAzCqG,EAAIhE,EAAIkE,EAAE9D,OAAQ+D,IAAU,IAAJH,IAAa,EAAQA,EAAI,IAAM,OAAO/C,EAAMgD,EAAGE,EAAGxG,GACjC,GAAzCqG,EAAIhE,EAAIkE,EAAE9D,OAAQ+D,IAAU,IAAJH,IAAa,GAAQA,EAAI,IAAM,OAAO/C,EAAMgD,EAAGE,EAAGxG,GACjC,GAAzCqG,EAAIhE,EAAIkE,EAAE9D,OAAQ+D,IAAU,IAAJH,IAAa,GAAQA,EAAI,IAAM,OAAO/C,EAAMgD,EAAGE,EAAGxG,GACjC,GAAzCqG,EAAIhE,EAAIkE,EAAE9D,OAAQ+D,IAAU,IAAJH,IAAa,GAAQA,EAAI,IAAM,OAAO/C,EAAMgD,EAAGE,EAAGxG,GACjC,GAAzCqG,EAAIhE,EAAIkE,EAAE9D,OAAQ+D,IAAU,EAAJH,IAAa,GAAQA,EAAI,IAAM,OAAO/C,EAAMgD,EAAGE,EAAGxG,GAE1E,MAAM,IAAIyG,MAAM,yCACpB,CAxTeC,CAFctB,IAAY,IAAjCiB,EAAIhE,EAAIZ,KAAKgB,QAA6B,GAEVgB,EAAUhC,QAC9C,EAEAkF,aAAc,WACV,OAAOlF,KAAK4B,YAAW,EAC3B,EAEAuD,YAAa,WACT,IAAIC,EAAMpF,KAAK4B,aACf,OAAOwD,EAAM,GAAM,GAAKA,EAAM,IAAM,EAAIA,EAAM,CAClD,EAEAC,YAAa,WACT,OAAOC,QAAQtF,KAAK4B,aACxB,EAEA2D,WAAY,WACR,IAAIrB,EAAMlE,KAAK4B,aAAe5B,KAAKgB,IAC/BA,EAAMhB,KAAKgB,IAGf,OAFAhB,KAAKgB,IAAMkD,EAEPA,EAAMlD,GApGY,IAoGsBQ,EA+cpD,SAA6BZ,EAAKI,EAAKkD,GACnC,OAAO1C,EAAgBgE,OAAO5E,EAAI6E,SAASzE,EAAKkD,GACpD,CA/cmBwB,CAAoB1F,KAAKY,IAAKI,EAAKkD,GA2YtD,SAAkBtD,EAAKI,EAAKkD,GACxB,IAAIyB,EAAM,GACNtH,EAAI2C,EAER,KAAO3C,EAAI6F,GAAK,CACZ,IASI0B,EAAIC,EAAIC,EATRC,EAAKnF,EAAIvC,GACTS,EAAI,KACJkH,EACAD,EAAK,IAAO,EACZA,EAAK,IAAO,EACZA,EAAK,IAAO,EAAI,EAEpB,GAAI1H,EAAI2H,EAAmB9B,EAAK,MAIP,IAArB8B,EACID,EAAK,MACLjH,EAAIiH,GAEoB,IAArBC,EAEa,MAAV,KADVJ,EAAKhF,EAAIvC,EAAI,OAETS,GAAU,GAALiH,IAAc,EAAY,GAALH,IACjB,MACL9G,EAAI,MAGgB,IAArBkH,GACPJ,EAAKhF,EAAIvC,EAAI,GACbwH,EAAKjF,EAAIvC,EAAI,GACO,MAAV,IAALuH,IAAuC,MAAV,IAALC,MACzB/G,GAAU,GAALiH,IAAa,IAAY,GAALH,IAAc,EAAY,GAALC,IACrC,MAAU/G,GAAK,OAAUA,GAAK,SACnCA,EAAI,OAGgB,IAArBkH,IACPJ,EAAKhF,EAAIvC,EAAI,GACbwH,EAAKjF,EAAIvC,EAAI,GACbyH,EAAKlF,EAAIvC,EAAI,GACO,MAAV,IAALuH,IAAuC,MAAV,IAALC,IAAuC,MAAV,IAALC,MACjDhH,GAAU,GAALiH,IAAa,IAAa,GAALH,IAAc,IAAY,GAALC,IAAc,EAAY,GAALC,IAC3D,OAAUhH,GAAK,WACpBA,EAAI,OAKN,OAANA,GACAA,EAAI,MACJkH,EAAmB,GAEZlH,EAAI,QACXA,GAAK,MACL6G,GAAOM,OAAOC,aAAapH,IAAM,GAAK,KAAQ,OAC9CA,EAAI,MAAa,KAAJA,GAGjB6G,GAAOM,OAAOC,aAAapH,GAC3BT,GAAK2H,CACT,CAEA,OAAOL,CACX,CAxceQ,CAASnG,KAAKY,IAAKI,EAAKkD,EACnC,EAEAkC,UAAW,WACP,IAAIlC,EAAMlE,KAAK4B,aAAe5B,KAAKgB,IAC/BtD,EAASsC,KAAKY,IAAI6E,SAASzF,KAAKgB,IAAKkD,GAEzC,OADAlE,KAAKgB,IAAMkD,EACJxG,CACX,EAIA2I,iBAAkB,SAAS9D,EAAKP,GAC5B,GAAIhC,KAAKiB,OAASP,EAAIU,MAAO,OAAOmB,EAAIrC,KAAKF,KAAK4B,WAAWI,IAC7D,IAAIkC,EAAMxC,EAAc1B,MAExB,IADAuC,EAAMA,GAAO,GACNvC,KAAKgB,IAAMkD,GAAK3B,EAAIrC,KAAKF,KAAK4B,WAAWI,IAChD,OAAOO,CACX,EACA+D,kBAAmB,SAAS/D,GACxB,GAAIvC,KAAKiB,OAASP,EAAIU,MAAO,OAAOmB,EAAIrC,KAAKF,KAAKmF,eAClD,IAAIjB,EAAMxC,EAAc1B,MAExB,IADAuC,EAAMA,GAAO,GACNvC,KAAKgB,IAAMkD,GAAK3B,EAAIrC,KAAKF,KAAKmF,eACrC,OAAO5C,CACX,EACAgE,kBAAmB,SAAShE,GACxB,GAAIvC,KAAKiB,OAASP,EAAIU,MAAO,OAAOmB,EAAIrC,KAAKF,KAAKqF,eAClD,IAAInB,EAAMxC,EAAc1B,MAExB,IADAuC,EAAMA,GAAO,GACNvC,KAAKgB,IAAMkD,GAAK3B,EAAIrC,KAAKF,KAAKqF,eACrC,OAAO9C,CACX,EACAiE,gBAAiB,SAASjE,GACtB,GAAIvC,KAAKiB,OAASP,EAAIU,MAAO,OAAOmB,EAAIrC,KAAKF,KAAK0E,aAClD,IAAIR,EAAMxC,EAAc1B,MAExB,IADAuC,EAAMA,GAAO,GACNvC,KAAKgB,IAAMkD,GAAK3B,EAAIrC,KAAKF,KAAK0E,aACrC,OAAOnC,CACX,EACAkE,iBAAkB,SAASlE,GACvB,GAAIvC,KAAKiB,OAASP,EAAIU,MAAO,OAAOmB,EAAIrC,KAAKF,KAAK2E,cAClD,IAAIT,EAAMxC,EAAc1B,MAExB,IADAuC,EAAMA,GAAO,GACNvC,KAAKgB,IAAMkD,GAAK3B,EAAIrC,KAAKF,KAAK2E,cACrC,OAAOpC,CACX,EACAmE,kBAAmB,SAASnE,GACxB,GAAIvC,KAAKiB,OAASP,EAAIU,MAAO,OAAOmB,EAAIrC,KAAKF,KAAKsE,eAClD,IAAIJ,EAAMxC,EAAc1B,MAExB,IADAuC,EAAMA,GAAO,GACNvC,KAAKgB,IAAMkD,GAAK3B,EAAIrC,KAAKF,KAAKsE,eACrC,OAAO/B,CACX,EACAoE,mBAAoB,SAASpE,GACzB,GAAIvC,KAAKiB,OAASP,EAAIU,MAAO,OAAOmB,EAAIrC,KAAKF,KAAKuE,gBAClD,IAAIL,EAAMxC,EAAc1B,MAExB,IADAuC,EAAMA,GAAO,GACNvC,KAAKgB,IAAMkD,GAAK3B,EAAIrC,KAAKF,KAAKuE,gBACrC,OAAOhC,CACX,EACAqE,kBAAmB,SAASrE,GACxB,GAAIvC,KAAKiB,OAASP,EAAIU,MAAO,OAAOmB,EAAIrC,KAAKF,KAAKwE,eAClD,IAAIN,EAAMxC,EAAc1B,MAExB,IADAuC,EAAMA,GAAO,GACNvC,KAAKgB,IAAMkD,GAAK3B,EAAIrC,KAAKF,KAAKwE,eACrC,OAAOjC,CACX,EACAsE,mBAAoB,SAAStE,GACzB,GAAIvC,KAAKiB,OAASP,EAAIU,MAAO,OAAOmB,EAAIrC,KAAKF,KAAKyE,gBAClD,IAAIP,EAAMxC,EAAc1B,MAExB,IADAuC,EAAMA,GAAO,GACNvC,KAAKgB,IAAMkD,GAAK3B,EAAIrC,KAAKF,KAAKyE,gBACrC,OAAOlC,CACX,EAEA6B,KAAM,SAAST,GACX,IAAI1C,EAAa,EAAN0C,EACX,GAAI1C,IAASP,EAAIQ,OAAQ,KAAOlB,KAAKY,IAAIZ,KAAKgB,OAAS,WAClD,GAAIC,IAASP,EAAIU,MAAOpB,KAAKgB,IAAMhB,KAAK4B,aAAe5B,KAAKgB,SAC5D,GAAIC,IAASP,EAAIW,QAASrB,KAAKgB,KAAO,MACtC,IAAIC,IAASP,EAAIS,QACjB,MAAM,IAAI6D,MAAM,uBAAyB/D,GADfjB,KAAKgB,KAAO,CACQ,CACvD,EAIA8F,SAAU,SAAS3C,EAAKlD,GACpBjB,KAAKwC,YAAa2B,GAAO,EAAKlD,EAClC,EAEAoB,QAAS,SAAS0E,GAGd,IAFA,IAAIjH,EAASE,KAAKF,QAAU,GAErBA,EAASE,KAAKgB,IAAM+F,GAAKjH,GAAU,EAE1C,GAAIA,IAAWE,KAAKF,OAAQ,CACxB,IAAIc,EAAM,IAAIG,WAAWjB,GACzBc,EAAIoG,IAAIhH,KAAKY,KACbZ,KAAKY,IAAMA,EACXZ,KAAKF,OAASA,CAClB,CACJ,EAEAmH,OAAQ,WAGJ,OAFAjH,KAAKF,OAASE,KAAKgB,IACnBhB,KAAKgB,IAAM,EACJhB,KAAKY,IAAI6E,SAAS,EAAGzF,KAAKF,OACrC,EAEAoD,aAAc,SAASS,GACnB3D,KAAKqC,QAAQ,GACbqB,EAAW1D,KAAKY,IAAK+C,EAAK3D,KAAKgB,KAC/BhB,KAAKgB,KAAO,CAChB,EAEAoC,cAAe,SAASO,GACpB3D,KAAKqC,QAAQ,GACbqB,EAAW1D,KAAKY,IAAK+C,EAAK3D,KAAKgB,KAC/BhB,KAAKgB,KAAO,CAChB,EAEAsC,aAAc,SAASK,GACnB3D,KAAKqC,QAAQ,GACbqB,EAAW1D,KAAKY,KAAY,EAAP+C,EAAU3D,KAAKgB,KACpC0C,EAAW1D,KAAKY,IAAKlC,KAAKQ,MAAMyE,EAAMpC,GAAiBvB,KAAKgB,IAAM,GAClEhB,KAAKgB,KAAO,CAChB,EAEAwC,cAAe,SAASG,GACpB3D,KAAKqC,QAAQ,GACbqB,EAAW1D,KAAKY,KAAY,EAAP+C,EAAU3D,KAAKgB,KACpC0C,EAAW1D,KAAKY,IAAKlC,KAAKQ,MAAMyE,EAAMpC,GAAiBvB,KAAKgB,IAAM,GAClEhB,KAAKgB,KAAO,CAChB,EAEAwB,YAAa,SAASmB,IAClBA,GAAOA,GAAO,GAEJ,WAAaA,EAAM,EAkKrC,SAAwBA,EAAKhC,GACzB,IAAIG,EAAKC,EAEL4B,GAAO,GACP7B,EAAQ6B,EAAM,WAAe,EAC7B5B,EAAQ4B,EAAM,WAAe,IAG7B5B,KAAU4B,EAAM,YAEN,YAHV7B,KAAU6B,EAAM,aAIZ7B,EAAOA,EAAM,EAAK,GAElBA,EAAM,EACNC,EAAQA,EAAO,EAAK,IAI5B,GAAI4B,GAAO,qBAAuBA,GAAO,oBACrC,MAAM,IAAIqB,MAAM,0CAGpBrD,EAAIU,QAAQ,IAMhB,SAA2BP,EAAKC,EAAMJ,GAClCA,EAAIf,IAAIe,EAAIX,OAAe,IAANc,EAAa,IAAMA,KAAS,EACjDH,EAAIf,IAAIe,EAAIX,OAAe,IAANc,EAAa,IAAMA,KAAS,EACjDH,EAAIf,IAAIe,EAAIX,OAAe,IAANc,EAAa,IAAMA,KAAS,EACjDH,EAAIf,IAAIe,EAAIX,OAAe,IAANc,EAAa,IAAMA,KAAS,EACjDH,EAAIf,IAAIe,EAAIX,KAAe,IAANc,CACzB,CAVIoF,CAAkBpF,EAAKC,EAAMJ,GAYjC,SAA4BI,EAAMJ,GAC9B,IAAIwF,GAAc,EAAPpF,IAAgB,EAEqC,GAAhEJ,EAAIf,IAAIe,EAAIX,QAAUmG,IAAgBpF,KAAU,GAAK,IAAO,IAASA,EAAM,OACX,GAAhEJ,EAAIf,IAAIe,EAAIX,OAAiB,IAAPe,IAAgBA,KAAU,GAAK,IAAO,IAASA,EAAM,OACX,GAAhEJ,EAAIf,IAAIe,EAAIX,OAAiB,IAAPe,IAAgBA,KAAU,GAAK,IAAO,IAASA,EAAM,OACX,GAAhEJ,EAAIf,IAAIe,EAAIX,OAAiB,IAAPe,IAAgBA,KAAU,GAAK,IAAO,IAASA,EAAM,OACX,GAAhEJ,EAAIf,IAAIe,EAAIX,OAAiB,IAAPe,IAAgBA,KAAU,GAAK,IAAO,IAASA,EAAM,OAC3EJ,EAAIf,IAAIe,EAAIX,OAAiB,IAAPe,CAC1B,CApBIqF,CAAmBrF,EAAMJ,EAC7B,CA3LY0F,CAAe1D,EAAK3D,OAIxBA,KAAKqC,QAAQ,GAEbrC,KAAKY,IAAIZ,KAAKgB,OAAyB,IAAN2C,GAAeA,EAAM,IAAO,IAAO,GAAQA,GAAO,MACnF3D,KAAKY,IAAIZ,KAAKgB,OAAyB,KAAd2C,KAAS,IAAcA,EAAM,IAAO,IAAO,GAAQA,GAAO,MACnF3D,KAAKY,IAAIZ,KAAKgB,OAAyB,KAAd2C,KAAS,IAAcA,EAAM,IAAO,IAAO,GAAQA,GAAO,MACnF3D,KAAKY,IAAIZ,KAAKgB,OAAY2C,IAAQ,EAAK,OAC3C,EAEAjB,aAAc,SAASiB,GACnB3D,KAAKwC,YAAYmB,EAAM,EAAW,GAANA,EAAU,EAAU,EAANA,EAC9C,EAEAX,aAAc,SAASW,GACnB3D,KAAKwC,YAAY8C,QAAQ3B,GAC7B,EAEA2D,YAAa,SAAS3B,GAClBA,EAAMM,OAAON,GACb3F,KAAKqC,QAAqB,EAAbsD,EAAI7F,QAEjBE,KAAKgB,MAEL,IAAIkB,EAAWlC,KAAKgB,IAEpBhB,KAAKgB,IAsSb,SAAmBJ,EAAK+E,EAAK3E,GACzB,IAAK,IAAWlC,EAAGyI,EAAVlJ,EAAI,EAAYA,EAAIsH,EAAI7F,OAAQzB,IAAK,CAG1C,IAFAS,EAAI6G,EAAI6B,WAAWnJ,IAEX,OAAUS,EAAI,MAAQ,CAC1B,IAAIyI,EAWG,CACCzI,EAAI,OAAWT,EAAI,IAAMsH,EAAI7F,QAC7Bc,EAAII,KAAS,IACbJ,EAAII,KAAS,IACbJ,EAAII,KAAS,KAEbuG,EAAOzI,EAEX,QACJ,CAnBI,GAAIA,EAAI,MAAQ,CACZ8B,EAAII,KAAS,IACbJ,EAAII,KAAS,IACbJ,EAAII,KAAS,IACbuG,EAAOzI,EACP,QACJ,CACIA,EAAIyI,EAAO,OAAU,GAAKzI,EAAI,MAAS,MACvCyI,EAAO,IAYnB,MAAWA,IACP3G,EAAII,KAAS,IACbJ,EAAII,KAAS,IACbJ,EAAII,KAAS,IACbuG,EAAO,MAGPzI,EAAI,IACJ8B,EAAII,KAASlC,GAETA,EAAI,KACJ8B,EAAII,KAASlC,GAAK,EAAM,KAEpBA,EAAI,MACJ8B,EAAII,KAASlC,GAAK,GAAM,KAExB8B,EAAII,KAASlC,GAAK,GAAO,IACzB8B,EAAII,KAASlC,GAAK,GAAM,GAAO,KAEnC8B,EAAII,KAASlC,GAAK,EAAM,GAAO,KAEnC8B,EAAII,KAAa,GAAJlC,EAAW,IAEhC,CACA,OAAOkC,CACX,CAzVmByG,CAAUzH,KAAKY,IAAK+E,EAAK3F,KAAKgB,KACzC,IAAImB,EAAMnC,KAAKgB,IAAMkB,EAEjBC,GAAO,KAAMF,EAAuBC,EAAUC,EAAKnC,MAGvDA,KAAKgB,IAAMkB,EAAW,EACtBlC,KAAKwC,YAAYL,GACjBnC,KAAKgB,KAAOmB,CAChB,EAEAS,WAAY,SAASe,GACjB3D,KAAKqC,QAAQ,GACb1B,EAAQ/B,MAAMoB,KAAKY,IAAK+C,EAAK3D,KAAKgB,KAAK,EAAM,GAAI,GACjDhB,KAAKgB,KAAO,CAChB,EAEA8B,YAAa,SAASa,GAClB3D,KAAKqC,QAAQ,GACb1B,EAAQ/B,MAAMoB,KAAKY,IAAK+C,EAAK3D,KAAKgB,KAAK,EAAM,GAAI,GACjDhB,KAAKgB,KAAO,CAChB,EAEA0G,WAAY,SAAShK,GACjB,IAAIyE,EAAMzE,EAAOoC,OACjBE,KAAKwC,YAAYL,GACjBnC,KAAKqC,QAAQF,GACb,IAAK,IAAI9D,EAAI,EAAGA,EAAI8D,EAAK9D,IAAK2B,KAAKY,IAAIZ,KAAKgB,OAAStD,EAAOW,EAChE,EAEAsJ,gBAAiB,SAASC,EAAIvH,GAC1BL,KAAKgB,MAGL,IAAIkB,EAAWlC,KAAKgB,IACpB4G,EAAGvH,EAAKL,MACR,IAAImC,EAAMnC,KAAKgB,IAAMkB,EAEjBC,GAAO,KAAMF,EAAuBC,EAAUC,EAAKnC,MAGvDA,KAAKgB,IAAMkB,EAAW,EACtBlC,KAAKwC,YAAYL,GACjBnC,KAAKgB,KAAOmB,CAChB,EAEA0F,aAAc,SAAS1D,EAAKyD,EAAIvH,GAC5BL,KAAK8G,SAAS3C,EAAKzD,EAAIU,OACvBpB,KAAK2H,gBAAgBC,EAAIvH,EAC7B,EAEAiC,kBAAqB,SAAS6B,EAAK5B,GAAWA,EAAIzC,QAAQE,KAAK6H,aAAa1D,EAAK7B,EAAmBC,EAAQ,EAC5GE,mBAAqB,SAAS0B,EAAK5B,GAAWA,EAAIzC,QAAQE,KAAK6H,aAAa1D,EAAK1B,EAAoBF,EAAO,EAC5GQ,mBAAqB,SAASoB,EAAK5B,GAAWA,EAAIzC,QAAQE,KAAK6H,aAAa1D,EAAKpB,EAAoBR,EAAO,EAC5GI,iBAAqB,SAASwB,EAAK5B,GAAWA,EAAIzC,QAAQE,KAAK6H,aAAa1D,EAAKxB,EAAkBJ,EAAS,EAC5GM,kBAAqB,SAASsB,EAAK5B,GAAWA,EAAIzC,QAAQE,KAAK6H,aAAa1D,EAAKtB,EAAmBN,EAAQ,EAC5GU,mBAAqB,SAASkB,EAAK5B,GAAWA,EAAIzC,QAAQE,KAAK6H,aAAa1D,EAAKlB,EAAoBV,EAAO,EAC5GY,oBAAqB,SAASgB,EAAK5B,GAAWA,EAAIzC,QAAQE,KAAK6H,aAAa1D,EAAKhB,EAAqBZ,EAAM,EAC5Gc,mBAAqB,SAASc,EAAK5B,GAAWA,EAAIzC,QAAQE,KAAK6H,aAAa1D,EAAKd,EAAoBd,EAAO,EAC5GgB,oBAAqB,SAASY,EAAK5B,GAAWA,EAAIzC,QAAQE,KAAK6H,aAAa1D,EAAKZ,EAAqBhB,EAAM,EAE5GuF,gBAAiB,SAAS3D,EAAKzG,GAC3BsC,KAAK8G,SAAS3C,EAAKzD,EAAIU,OACvBpB,KAAK0H,WAAWhK,EACpB,EACAqK,kBAAmB,SAAS5D,EAAKR,GAC7B3D,KAAK8G,SAAS3C,EAAKzD,EAAIW,SACvBrB,KAAKkD,aAAaS,EACtB,EACAqE,mBAAoB,SAAS7D,EAAKR,GAC9B3D,KAAK8G,SAAS3C,EAAKzD,EAAIW,SACvBrB,KAAKoD,cAAcO,EACvB,EACAsE,kBAAmB,SAAS9D,EAAKR,GAC7B3D,KAAK8G,SAAS3C,EAAKzD,EAAIS,SACvBnB,KAAKsD,aAAaK,EACtB,EACAuE,mBAAoB,SAAS/D,EAAKR,GAC9B3D,KAAK8G,SAAS3C,EAAKzD,EAAIS,SACvBnB,KAAKwD,cAAcG,EACvB,EACAwE,iBAAkB,SAAShE,EAAKR,GAC5B3D,KAAK8G,SAAS3C,EAAKzD,EAAIQ,QACvBlB,KAAKwC,YAAYmB,EACrB,EACAyE,kBAAmB,SAASjE,EAAKR,GAC7B3D,KAAK8G,SAAS3C,EAAKzD,EAAIQ,QACvBlB,KAAK0C,aAAaiB,EACtB,EACA0E,iBAAkB,SAASlE,EAAKwB,GAC5B3F,KAAK8G,SAAS3C,EAAKzD,EAAIU,OACvBpB,KAAKsH,YAAY3B,EACrB,EACA2C,gBAAiB,SAASnE,EAAKR,GAC3B3D,KAAK8G,SAAS3C,EAAKzD,EAAIW,SACvBrB,KAAK4C,WAAWe,EACpB,EACA4E,iBAAkB,SAASpE,EAAKR,GAC5B3D,KAAK8G,SAAS3C,EAAKzD,EAAIS,SACvBnB,KAAK8C,YAAYa,EACrB,EACA6E,kBAAmB,SAASrE,EAAKR,GAC7B3D,KAAKmI,iBAAiBhE,EAAKmB,QAAQ3B,GACvC,E,kBC/YgEvD,EAAO5C,QAAwF,WAAW,aAAa,SAASiL,EAAEA,EAAEC,EAAE3K,EAAE4K,EAAE5D,IAAI,SAAS0D,EAAEG,EAAEF,EAAE3K,EAAE4K,EAAE5D,GAAG,KAAK4D,EAAE5K,GAAG,CAAC,GAAG4K,EAAE5K,EAAE,IAAI,CAAC,IAAI8K,EAAEF,EAAE5K,EAAE,EAAEQ,EAAEmK,EAAE3K,EAAE,EAAE8G,EAAEnG,KAAKS,IAAI0J,GAAGC,EAAE,GAAGpK,KAAKqK,IAAI,EAAElE,EAAE,GAAGmE,EAAE,GAAGtK,KAAKuK,KAAKpE,EAAEiE,GAAGD,EAAEC,GAAGD,IAAItK,EAAEsK,EAAE,EAAE,GAAG,EAAE,GAA+EJ,EAAEG,EAAEF,EAA9EhK,KAAKwK,IAAInL,EAAEW,KAAKQ,MAAMwJ,EAAEnK,EAAEuK,EAAED,EAAEG,IAAMtK,KAAKqI,IAAI4B,EAAEjK,KAAKQ,MAAMwJ,GAAGG,EAAEtK,GAAGuK,EAAED,EAAEG,IAAcjE,EAAE,CAAC,IAAID,EAAE8D,EAAEF,GAAGpK,EAAEP,EAAEoL,EAAER,EAAE,IAAItK,EAAEuK,EAAE7K,EAAE2K,GAAG3D,EAAE6D,EAAED,GAAG7D,GAAG,GAAGzG,EAAEuK,EAAE7K,EAAE4K,GAAGrK,EAAE6K,GAAG,CAAC,IAAI9K,EAAEuK,EAAEtK,EAAE6K,GAAG7K,IAAI6K,IAAIpE,EAAE6D,EAAEtK,GAAGwG,GAAG,GAAGxG,IAAI,KAAKyG,EAAE6D,EAAEO,GAAGrE,GAAG,GAAGqE,GAAG,CAAC,IAAIpE,EAAE6D,EAAE7K,GAAG+G,GAAGzG,EAAEuK,EAAE7K,EAAEoL,GAAG9K,EAAEuK,IAAIO,EAAER,GAAGQ,GAAGT,IAAI3K,EAAEoL,EAAE,GAAGT,GAAGS,IAAIR,EAAEQ,EAAE,EAAE,CAAC,CAA9Z,CAAgaV,EAAEC,EAAE3K,GAAG,EAAE4K,GAAGF,EAAE3I,OAAO,EAAEiF,GAAG6D,EAAE,CAAC,SAASvK,EAAEoK,EAAEpK,EAAEuK,GAAG,IAAIF,EAAED,EAAEpK,GAAGoK,EAAEpK,GAAGoK,EAAEG,GAAGH,EAAEG,GAAGF,CAAC,CAAC,SAASE,EAAEH,EAAEpK,GAAG,OAAOoK,EAAEpK,GAAG,EAAEoK,EAAEpK,EAAE,EAAE,CAAC,CAAC,IAAIqK,EAAE,SAASD,QAAG,IAASA,IAAIA,EAAE,GAAGzI,KAAKoJ,YAAY1K,KAAKwK,IAAI,EAAET,GAAGzI,KAAKqJ,YAAY3K,KAAKwK,IAAI,EAAExK,KAAK4K,KAAK,GAAGtJ,KAAKoJ,cAAcpJ,KAAKuJ,OAAO,EAAE,SAASxL,EAAE0K,EAAEpK,EAAEuK,GAAG,IAAIA,EAAE,OAAOvK,EAAEuB,QAAQ6I,GAAG,IAAI,IAAIC,EAAE,EAAEA,EAAErK,EAAEyB,OAAO4I,IAAI,GAAGE,EAAEH,EAAEpK,EAAEqK,IAAI,OAAOA,EAAE,OAAO,CAAC,CAAC,SAASC,EAAEF,EAAEpK,GAAG0G,EAAE0D,EAAE,EAAEA,EAAEe,SAAS1J,OAAOzB,EAAEoK,EAAE,CAAC,SAAS1D,EAAE0D,EAAEpK,EAAEuK,EAAEF,EAAE3K,GAAGA,IAAIA,EAAE+G,EAAE,OAAO/G,EAAE0L,KAAK,IAAI1L,EAAE2L,KAAK,IAAI3L,EAAE4L,MAAK,IAAK5L,EAAE6L,MAAK,IAAK,IAAI,IAAIjB,EAAEtK,EAAEsK,EAAEC,EAAED,IAAI,CAAC,IAAI5D,EAAE0D,EAAEe,SAASb,GAAGE,EAAE9K,EAAE0K,EAAEoB,KAAKnB,EAAE3D,GAAGA,EAAE,CAAC,OAAOhH,CAAC,CAAC,SAAS8K,EAAEJ,EAAEpK,GAAG,OAAOoK,EAAEgB,KAAK/K,KAAKqI,IAAI0B,EAAEgB,KAAKpL,EAAEoL,MAAMhB,EAAEiB,KAAKhL,KAAKqI,IAAI0B,EAAEiB,KAAKrL,EAAEqL,MAAMjB,EAAEkB,KAAKjL,KAAKwK,IAAIT,EAAEkB,KAAKtL,EAAEsL,MAAMlB,EAAEmB,KAAKlL,KAAKwK,IAAIT,EAAEmB,KAAKvL,EAAEuL,MAAMnB,CAAC,CAAC,SAASlK,EAAEkK,EAAEpK,GAAG,OAAOoK,EAAEgB,KAAKpL,EAAEoL,IAAI,CAAC,SAAS5E,EAAE4D,EAAEpK,GAAG,OAAOoK,EAAEiB,KAAKrL,EAAEqL,IAAI,CAAC,SAASZ,EAAEL,GAAG,OAAOA,EAAEkB,KAAKlB,EAAEgB,OAAOhB,EAAEmB,KAAKnB,EAAEiB,KAAK,CAAC,SAASV,EAAEP,GAAG,OAAOA,EAAEkB,KAAKlB,EAAEgB,MAAMhB,EAAEmB,KAAKnB,EAAEiB,KAAK,CAAC,SAAS1L,EAAEyK,EAAEpK,GAAG,OAAOoK,EAAEgB,MAAMpL,EAAEoL,MAAMhB,EAAEiB,MAAMrL,EAAEqL,MAAMrL,EAAEsL,MAAMlB,EAAEkB,MAAMtL,EAAEuL,MAAMnB,EAAEmB,IAAI,CAAC,SAAS9K,EAAE2J,EAAEpK,GAAG,OAAOA,EAAEoL,MAAMhB,EAAEkB,MAAMtL,EAAEqL,MAAMjB,EAAEmB,MAAMvL,EAAEsL,MAAMlB,EAAEgB,MAAMpL,EAAEuL,MAAMnB,EAAEiB,IAAI,CAAC,SAAS5E,EAAE2D,GAAG,MAAM,CAACe,SAASf,EAAEqB,OAAO,EAAED,MAAK,EAAGJ,KAAK,IAAIC,KAAK,IAAIC,MAAK,IAAKC,MAAK,IAAK,CAAC,SAAStL,EAAED,EAAEuK,EAAEF,EAAE3K,EAAE4K,GAAG,IAAI,IAAI5D,EAAE,CAAC6D,EAAEF,GAAG3D,EAAEjF,QAAQ,MAAM4I,EAAE3D,EAAEgF,QAAQnB,EAAE7D,EAAEgF,QAAQhM,GAAG,CAAC,IAAI8K,EAAED,EAAElK,KAAK4K,MAAMZ,EAAEE,GAAG7K,EAAE,GAAGA,EAAE0K,EAAEpK,EAAEwK,EAAED,EAAEF,EAAEC,GAAG5D,EAAE7E,KAAK0I,EAAEC,EAAEA,EAAEH,EAAE,CAAC,CAAC,OAAOA,EAAE7E,UAAUmG,IAAI,WAAW,OAAOhK,KAAKiK,KAAKjK,KAAKkK,KAAK,GAAG,EAAExB,EAAE7E,UAAUsG,OAAO,SAAS1B,GAAG,IAAIpK,EAAE2B,KAAKkK,KAAKtB,EAAE,GAAG,IAAI9J,EAAE2J,EAAEpK,GAAG,OAAOuK,EAAE,IAAI,IAAIF,EAAE1I,KAAKoK,OAAOrM,EAAE,GAAGM,GAAG,CAAC,IAAI,IAAIsK,EAAE,EAAEA,EAAEtK,EAAEmL,SAAS1J,OAAO6I,IAAI,CAAC,IAAI5D,EAAE1G,EAAEmL,SAASb,GAAGE,EAAExK,EAAEwL,KAAKnB,EAAE3D,GAAGA,EAAEjG,EAAE2J,EAAEI,KAAKxK,EAAEwL,KAAKjB,EAAE1I,KAAK6E,GAAG/G,EAAEyK,EAAEI,GAAG7I,KAAKiK,KAAKlF,EAAE6D,GAAG7K,EAAEmC,KAAK6E,GAAG,CAAC1G,EAAEN,EAAEgM,KAAK,CAAC,OAAOnB,CAAC,EAAEF,EAAE7E,UAAUwG,SAAS,SAAS5B,GAAG,IAAIpK,EAAE2B,KAAKkK,KAAK,IAAIpL,EAAE2J,EAAEpK,GAAG,OAAM,EAAG,IAAI,IAAIuK,EAAE,GAAGvK,GAAG,CAAC,IAAI,IAAIqK,EAAE,EAAEA,EAAErK,EAAEmL,SAAS1J,OAAO4I,IAAI,CAAC,IAAI3K,EAAEM,EAAEmL,SAASd,GAAGC,EAAEtK,EAAEwL,KAAK7J,KAAKoK,OAAOrM,GAAGA,EAAE,GAAGe,EAAE2J,EAAEE,GAAG,CAAC,GAAGtK,EAAEwL,MAAM7L,EAAEyK,EAAEE,GAAG,OAAM,EAAGC,EAAE1I,KAAKnC,EAAE,CAAC,CAACM,EAAEuK,EAAEmB,KAAK,CAAC,OAAM,CAAE,EAAErB,EAAE7E,UAAUyG,KAAK,SAAS7B,GAAG,IAAIA,IAAIA,EAAE3I,OAAO,OAAOE,KAAK,GAAGyI,EAAE3I,OAAOE,KAAKqJ,YAAY,CAAC,IAAI,IAAIhL,EAAE,EAAEA,EAAEoK,EAAE3I,OAAOzB,IAAI2B,KAAKuK,OAAO9B,EAAEpK,IAAI,OAAO2B,IAAI,CAAC,IAAI4I,EAAE5I,KAAKwK,OAAO/B,EAAE9I,QAAQ,EAAE8I,EAAE3I,OAAO,EAAE,GAAG,GAAGE,KAAKkK,KAAKV,SAAS1J,OAAO,GAAGE,KAAKkK,KAAKJ,SAASlB,EAAEkB,OAAO9J,KAAKyK,WAAWzK,KAAKkK,KAAKtB,OAAO,CAAC,GAAG5I,KAAKkK,KAAKJ,OAAOlB,EAAEkB,OAAO,CAAC,IAAIpB,EAAE1I,KAAKkK,KAAKlK,KAAKkK,KAAKtB,EAAEA,EAAEF,CAAC,CAAC1I,KAAK0K,QAAQ9B,EAAE5I,KAAKkK,KAAKJ,OAAOlB,EAAEkB,OAAO,GAAE,EAAG,MAAM9J,KAAKkK,KAAKtB,EAAE,OAAO5I,IAAI,EAAE0I,EAAE7E,UAAU0G,OAAO,SAAS9B,GAAG,OAAOA,GAAGzI,KAAK0K,QAAQjC,EAAEzI,KAAKkK,KAAKJ,OAAO,GAAG9J,IAAI,EAAE0I,EAAE7E,UAAU0F,MAAM,WAAW,OAAOvJ,KAAKkK,KAAKpF,EAAE,IAAI9E,IAAI,EAAE0I,EAAE7E,UAAU8G,OAAO,SAASlC,EAAEpK,GAAG,IAAIoK,EAAE,OAAOzI,KAAK,IAAI,IAAI4I,EAAEF,EAAEC,EAAE5D,EAAE/E,KAAKkK,KAAKrB,EAAE7I,KAAKoK,OAAO3B,GAAGlK,EAAE,GAAGsG,EAAE,GAAGE,GAAGxG,EAAEuB,QAAQ,CAAC,GAAGiF,IAAIA,EAAExG,EAAEwL,MAAMrB,EAAEnK,EAAEA,EAAEuB,OAAO,GAAG8I,EAAE/D,EAAEkF,MAAMpB,GAAE,GAAI5D,EAAE8E,KAAK,CAAC,IAAIf,EAAE/K,EAAE0K,EAAE1D,EAAEyE,SAASnL,GAAG,IAAI,IAAIyK,EAAE,OAAO/D,EAAEyE,SAASvJ,OAAO6I,EAAE,GAAGvK,EAAE2B,KAAK6E,GAAG/E,KAAK4K,UAAUrM,GAAGyB,IAAI,CAAC2I,GAAG5D,EAAE8E,OAAO7L,EAAE+G,EAAE8D,GAAGH,GAAGE,IAAI7D,EAAE2D,EAAEc,SAASZ,GAAGD,GAAE,GAAI5D,EAAE,MAAMxG,EAAE2B,KAAK6E,GAAGF,EAAE3E,KAAK0I,GAAGA,EAAE,EAAEF,EAAE3D,EAAEA,EAAEA,EAAEyE,SAAS,GAAG,CAAC,OAAOxJ,IAAI,EAAE0I,EAAE7E,UAAUuG,OAAO,SAAS3B,GAAG,OAAOA,CAAC,EAAEC,EAAE7E,UAAUgH,YAAY,SAASpC,EAAEpK,GAAG,OAAOoK,EAAEgB,KAAKpL,EAAEoL,IAAI,EAAEf,EAAE7E,UAAUiH,YAAY,SAASrC,EAAEpK,GAAG,OAAOoK,EAAEiB,KAAKrL,EAAEqL,IAAI,EAAEhB,EAAE7E,UAAUkH,OAAO,WAAW,OAAO/K,KAAKkK,IAAI,EAAExB,EAAE7E,UAAUmH,SAAS,SAASvC,GAAG,OAAOzI,KAAKkK,KAAKzB,EAAEzI,IAAI,EAAE0I,EAAE7E,UAAUoG,KAAK,SAASxB,EAAEpK,GAAG,IAAI,IAAIuK,EAAE,GAAGH,GAAGA,EAAEoB,KAAKxL,EAAE6B,KAAK+K,MAAM5M,EAAEoK,EAAEe,UAAUZ,EAAE1I,KAAK+K,MAAMrC,EAAEH,EAAEe,UAAUf,EAAEG,EAAEmB,MAAM,OAAO1L,CAAC,EAAEqK,EAAE7E,UAAU2G,OAAO,SAAS/B,EAAEpK,EAAEuK,EAAEF,GAAG,IAAI3K,EAAEgH,EAAE6D,EAAEvK,EAAE,EAAEwK,EAAE7I,KAAKoJ,YAAY,GAAGrE,GAAG8D,EAAE,OAAOF,EAAE5K,EAAE+G,EAAE2D,EAAE9I,MAAMtB,EAAEuK,EAAE,IAAI5I,KAAKoK,QAAQrM,EAAE2K,IAAIA,EAAEhK,KAAK4K,KAAK5K,KAAKS,IAAI4F,GAAGrG,KAAKS,IAAI0J,IAAIA,EAAEnK,KAAK4K,KAAKvE,EAAErG,KAAKC,IAAIkK,EAAEH,EAAE,MAAM3K,EAAE+G,EAAE,KAAK+E,MAAK,EAAG9L,EAAE+L,OAAOpB,EAAE,IAAInK,EAAEG,KAAK4K,KAAKvE,EAAE8D,GAAGhE,EAAEtG,EAAEG,KAAK4K,KAAK5K,KAAKuK,KAAKJ,IAAIvK,EAAEmK,EAAEpK,EAAEuK,EAAE/D,EAAE7E,KAAK6K,aAAa,IAAI,IAAI/B,EAAEzK,EAAEyK,GAAGF,EAAEE,GAAGjE,EAAE,CAAC,IAAImE,EAAEtK,KAAKqI,IAAI+B,EAAEjE,EAAE,EAAE+D,GAAGtK,EAAEmK,EAAEK,EAAEE,EAAEzK,EAAEyB,KAAK8K,aAAa,IAAI,IAAI9M,EAAE8K,EAAE9K,GAAGgL,EAAEhL,GAAGO,EAAE,CAAC,IAAIO,EAAEJ,KAAKqI,IAAI/I,EAAEO,EAAE,EAAEyK,GAAGjL,EAAEyL,SAAStJ,KAAKF,KAAKwK,OAAO/B,EAAEzK,EAAEc,EAAE4J,EAAE,GAAG,CAAC,CAAC,OAAOC,EAAE5K,EAAEiC,KAAKoK,QAAQrM,CAAC,EAAE2K,EAAE7E,UAAUqH,eAAe,SAASzC,EAAEpK,EAAEuK,EAAEF,GAAG,KAAKA,EAAExI,KAAK7B,IAAIA,EAAEwL,MAAMnB,EAAE5I,OAAO,IAAI8I,GAAG,CAAC,IAAI,IAAI7K,EAAE,IAAI4K,EAAE,IAAI5D,OAAE,EAAO8D,EAAE,EAAEA,EAAExK,EAAEmL,SAAS1J,OAAO+I,IAAI,CAAC,IAAItK,EAAEF,EAAEmL,SAASX,GAAGhE,EAAEiE,EAAEvK,GAAGyK,GAAGhL,EAAEyK,EAAE3J,EAAEP,GAAGG,KAAKwK,IAAIpK,EAAE6K,KAAK3L,EAAE2L,MAAMjL,KAAKqI,IAAIjI,EAAE2K,KAAKzL,EAAEyL,QAAQ/K,KAAKwK,IAAIpK,EAAE8K,KAAK5L,EAAE4L,MAAMlL,KAAKqI,IAAIjI,EAAE4K,KAAK1L,EAAE0L,OAAO7E,GAAGmE,EAAEL,GAAGA,EAAEK,EAAEjL,EAAE8G,EAAE9G,EAAE8G,EAAE9G,EAAEgH,EAAExG,GAAGyK,IAAIL,GAAG9D,EAAE9G,IAAIA,EAAE8G,EAAEE,EAAExG,EAAE,CAACF,EAAE0G,GAAG1G,EAAEmL,SAAS,EAAE,CAAC,IAAIxL,EAAEc,EAAE,OAAOT,CAAC,EAAEqK,EAAE7E,UAAU6G,QAAQ,SAASjC,EAAEpK,EAAEuK,GAAG,IAAIF,EAAEE,EAAEH,EAAEzI,KAAKoK,OAAO3B,GAAG1K,EAAE,GAAG4K,EAAE3I,KAAKkL,eAAexC,EAAE1I,KAAKkK,KAAK7L,EAAEN,GAAG,IAAI4K,EAAEa,SAAStJ,KAAKuI,GAAGI,EAAEF,EAAED,GAAGrK,GAAG,GAAGN,EAAEM,GAAGmL,SAAS1J,OAAOE,KAAKoJ,aAAapJ,KAAKmL,OAAOpN,EAAEM,GAAGA,IAAI2B,KAAKoL,oBAAoB1C,EAAE3K,EAAEM,EAAE,EAAEqK,EAAE7E,UAAUsH,OAAO,SAAS1C,EAAEpK,GAAG,IAAIuK,EAAEH,EAAEpK,GAAGqK,EAAEE,EAAEY,SAAS1J,OAAO/B,EAAEiC,KAAKqJ,YAAYrJ,KAAKqL,iBAAiBzC,EAAE7K,EAAE2K,GAAG,IAAI3D,EAAE/E,KAAKsL,kBAAkB1C,EAAE7K,EAAE2K,GAAGG,EAAE/D,EAAE8D,EAAEY,SAASvJ,OAAO8E,EAAE6D,EAAEY,SAAS1J,OAAOiF,IAAI8D,EAAEiB,OAAOlB,EAAEkB,OAAOjB,EAAEgB,KAAKjB,EAAEiB,KAAKlB,EAAEC,EAAE5I,KAAKoK,QAAQzB,EAAEE,EAAE7I,KAAKoK,QAAQ/L,EAAEoK,EAAEpK,EAAE,GAAGmL,SAAStJ,KAAK2I,GAAG7I,KAAKyK,WAAW7B,EAAEC,EAAE,EAAEH,EAAE7E,UAAU4G,WAAW,SAAShC,EAAEpK,GAAG2B,KAAKkK,KAAKpF,EAAE,CAAC2D,EAAEpK,IAAI2B,KAAKkK,KAAKJ,OAAOrB,EAAEqB,OAAO,EAAE9J,KAAKkK,KAAKL,MAAK,EAAGlB,EAAE3I,KAAKkK,KAAKlK,KAAKoK,OAAO,EAAE1B,EAAE7E,UAAUyH,kBAAkB,SAAS7C,EAAEpK,EAAEuK,GAAG,IAAI,IAAIF,EAAE3K,EAAE4K,EAAEE,EAAEtK,EAAEsG,EAAEmE,EAAEhL,EAAE,IAAIc,EAAE,IAAIgG,EAAEzG,EAAEyG,GAAG8D,EAAEvK,EAAEyG,IAAI,CAAC,IAAIxG,EAAEyG,EAAE0D,EAAE,EAAE3D,EAAE9E,KAAKoK,QAAQjB,EAAEpE,EAAE0D,EAAE3D,EAAE8D,EAAE5I,KAAKoK,QAAQmB,GAAGxN,EAAEO,EAAEqK,EAAEQ,EAAEN,OAAE,EAAOtK,OAAE,EAAOsG,OAAE,EAAOmE,OAAE,EAAOH,EAAEnK,KAAKwK,IAAInL,EAAE0L,KAAKd,EAAEc,MAAMlL,EAAEG,KAAKwK,IAAInL,EAAE2L,KAAKf,EAAEe,MAAM7E,EAAEnG,KAAKqI,IAAIhJ,EAAE4L,KAAKhB,EAAEgB,MAAMX,EAAEtK,KAAKqI,IAAIhJ,EAAE6L,KAAKjB,EAAEiB,MAAMlL,KAAKwK,IAAI,EAAErE,EAAEgE,GAAGnK,KAAKwK,IAAI,EAAEF,EAAEzK,IAAIiN,EAAE1C,EAAExK,GAAGwK,EAAEK,GAAGoC,EAAEvN,GAAGA,EAAEuN,EAAE7C,EAAE5D,EAAEhG,EAAE0M,EAAE1M,EAAE0M,EAAE1M,GAAGyM,IAAIvN,GAAGwN,EAAE1M,IAAIA,EAAE0M,EAAE9C,EAAE5D,EAAE,CAAC,OAAO4D,GAAGE,EAAEvK,CAAC,EAAEqK,EAAE7E,UAAUwH,iBAAiB,SAAS5C,EAAEpK,EAAEuK,GAAG,IAAIF,EAAED,EAAEoB,KAAK7J,KAAK6K,YAAYtM,EAAER,EAAE0K,EAAEoB,KAAK7J,KAAK8K,YAAYjG,EAAE7E,KAAKyL,eAAehD,EAAEpK,EAAEuK,EAAEF,GAAG1I,KAAKyL,eAAehD,EAAEpK,EAAEuK,EAAE7K,IAAI0K,EAAEe,SAASkC,KAAKhD,EAAE,EAAEA,EAAE7E,UAAU4H,eAAe,SAAShD,EAAEpK,EAAEuK,EAAEF,GAAGD,EAAEe,SAASkC,KAAKhD,GAAG,IAAI,IAAI3K,EAAEiC,KAAKoK,OAAOzB,EAAE5D,EAAE0D,EAAE,EAAEpK,EAAEN,GAAGQ,EAAEwG,EAAE0D,EAAEG,EAAEvK,EAAEuK,EAAE7K,GAAG8G,EAAEmE,EAAEL,GAAGK,EAAEzK,GAAGuK,EAAEzK,EAAEyK,EAAEF,EAAEvK,EAAEyK,IAAI,CAAC,IAAI9K,EAAEyK,EAAEe,SAASV,GAAGD,EAAEF,EAAEF,EAAEoB,KAAK9L,EAAEC,GAAGA,GAAG6G,GAAGmE,EAAEL,EAAE,CAAC,IAAI,IAAI7J,EAAE8J,EAAEvK,EAAE,EAAES,GAAGT,EAAES,IAAI,CAAC,IAAIgG,EAAE2D,EAAEe,SAAS1K,GAAG+J,EAAEtK,EAAEkK,EAAEoB,KAAK9L,EAAE+G,GAAGA,GAAGD,GAAGmE,EAAEzK,EAAE,CAAC,OAAOsG,CAAC,EAAE6D,EAAE7E,UAAUuH,oBAAoB,SAAS3C,EAAEpK,EAAEuK,GAAG,IAAI,IAAIF,EAAEE,EAAEF,GAAG,EAAEA,IAAIG,EAAExK,EAAEqK,GAAGD,EAAE,EAAEC,EAAE7E,UAAU+G,UAAU,SAASnC,GAAG,IAAI,IAAIpK,EAAEoK,EAAE3I,OAAO,EAAE8I,OAAE,EAAOvK,GAAG,EAAEA,IAAI,IAAIoK,EAAEpK,GAAGmL,SAAS1J,OAAOzB,EAAE,GAAGuK,EAAEH,EAAEpK,EAAE,GAAGmL,UAAUvJ,OAAO2I,EAAEhJ,QAAQ6I,EAAEpK,IAAI,GAAG2B,KAAKuJ,QAAQZ,EAAEF,EAAEpK,GAAG2B,KAAKoK,OAAO,EAAE1B,CAAC,CAAzuMrK,E,GCC/EsN,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAatO,QAGrB,IAAI4C,EAASuL,EAAyBE,GAAY,CAGjDrO,QAAS,CAAC,GAOX,OAHAwO,EAAoBH,GAAU1L,KAAKC,EAAO5C,QAAS4C,EAAQA,EAAO5C,QAASoO,GAGpExL,EAAO5C,OACf,E,wBCfO,SAAS,IACd,MAAM,IAAIwH,MAAM,iCAClB,CAOA,IAAIiH,EAAc,EAWX,SAAS,EAAO5L,GACrB,OAAOA,EAAI6L,SAAW7L,EAAI6L,OAASjG,SAASgG,GAC9C,CCeO,MAAM,EAAkB,CAE7B,QAAW,SAAW,EAAIvN,KAAKyN,IAC/B,QAAY,EAAIzN,KAAKyN,GAAK,QAAW,IACrC,GAAM,MACN,EAAK,EACL,QAAS,KAAO,MC4NlB,MA3NA,MAIEC,YAAYC,GAKVrM,KAAKsM,MAAQD,EAAQE,KASrBvM,KAAKwM,OAAoDH,EAAa,MAStErM,KAAKyM,aAA6BV,IAAnBM,EAAQK,OAAuBL,EAAQK,OAAS,KAS/D1M,KAAK2M,kBACqBZ,IAAxBM,EAAQO,YAA4BP,EAAQO,YAAc,KAM5D5M,KAAK6M,sBACyBd,IAA5BM,EAAQS,gBAAgCT,EAAQS,gBAAkB,MAMpE9M,KAAK+M,aAA6BhB,IAAnBM,EAAQW,QAAuBX,EAAQW,OAMtDhN,KAAKiN,aAAejN,KAAK+M,UAAW/M,KAAKyM,SAMzCzM,KAAKkN,wBAA0Bb,EAAQc,mBAMvCnN,KAAKoN,iBAAmB,KAMxBpN,KAAKqN,eAAiBhB,EAAQiB,aAChC,CAKAC,WACE,OAAOvN,KAAKiN,SACd,CAOAO,UACE,OAAOxN,KAAKsM,KACd,CAOAmB,YACE,OAAOzN,KAAKyM,OACd,CAOAiB,WACE,OAAO1N,KAAKwM,MACd,CASAmB,mBACE,OAAO3N,KAAKqN,gBAAkB,EAAgBrN,KAAKwM,OACrD,CAOAoB,iBACE,OAAO5N,KAAK2M,YACd,CAaAkB,qBACE,OAAO7N,KAAK6M,gBACd,CAOAiB,WACE,OAAO9N,KAAK+M,OACd,CAOAgB,UAAUf,GACRhN,KAAK+M,QAAUC,EACfhN,KAAKiN,aAAeD,IAAUhN,KAAKyM,QACrC,CAKAuB,qBACE,OAAOhO,KAAKoN,gBACd,CAKAa,mBAAmBC,GACjBlO,KAAKoN,iBAAmBc,CAC1B,CAOAC,UAAUzB,GACR1M,KAAKyM,QAAUC,EACf1M,KAAKiN,aAAejN,KAAK+M,UAAWL,EACtC,CAQA0B,eAAexB,GACb5M,KAAK2M,aAAeC,CACtB,CAQAyB,sBAAsBC,GACpBtO,KAAKkN,wBAA0BoB,CACjC,CAOAC,yBACE,OAAOvO,KAAKkN,uBACd,GChQK,MAAMsB,EAAS,QAMTC,EAAY/P,KAAKyN,GAAKqC,EAMtBE,EAAS,EAAED,GAAYA,EAAWA,EAAWA,GAM7CE,EAAe,EAAE,KAAM,GAAI,IAAK,IAOhCC,EAAaJ,EAAS9P,KAAKS,IAAIT,KAAKmQ,IAAInQ,KAAKyN,GAAK,IAM/D,MAAM2C,UAA2B,EAI/B1C,YAAYG,GACVwC,MAAM,CACJxC,KAAMA,EACNyC,MAAO,IACPtC,OAAQgC,EACR1B,QAAQ,EACRJ,YAAa+B,EACbxB,mBAAoB,SAAU8B,EAAYC,GACxC,OAAOD,EAAavQ,KAAKyQ,KAAKD,EAAM,GAAKV,EAC3C,GAEJ,EASK,MAAMY,EAAc,CACzB,IAAIN,EAAmB,aACvB,IAAIA,EAAmB,eACvB,IAAIA,EAAmB,eACvB,IAAIA,EAAmB,eACvB,IAAIA,EAAmB,8CACvB,IAAIA,EAAmB,iDAWlB,SAASO,EAAaC,EAAOC,EAAQC,GAC1C,MAAM1P,EAASwP,EAAMxP,OACrB0P,EAAYA,EAAY,EAAIA,EAAY,OACzBzD,IAAXwD,IAGAA,EAFEC,EAAY,EAELF,EAAM3P,QAEN,IAAI8P,MAAM3P,IAGvB,IAAK,IAAIzB,EAAI,EAAGA,EAAIyB,EAAQzB,GAAKmR,EAAW,CAC1CD,EAAOlR,GAAMoQ,EAAYa,EAAMjR,GAAM,IACrC,IAAIqR,EAAIlB,EAAS9P,KAAKS,IAAIT,KAAKmQ,IAAKnQ,KAAKyN,KAAOmD,EAAMjR,EAAI,GAAK,IAAO,MAClEqR,EAAId,EACNc,EAAId,EACKc,GAAKd,IACdc,GAAKd,GAEPW,EAAOlR,EAAI,GAAKqR,CAClB,CACA,OAAOH,CACT,CAUO,SAASI,EAAWL,EAAOC,EAAQC,GACxC,MAAM1P,EAASwP,EAAMxP,OACrB0P,EAAYA,EAAY,EAAIA,EAAY,OACzBzD,IAAXwD,IAGAA,EAFEC,EAAY,EAELF,EAAM3P,QAEN,IAAI8P,MAAM3P,IAGvB,IAAK,IAAIzB,EAAI,EAAGA,EAAIyB,EAAQzB,GAAKmR,EAC/BD,EAAOlR,GAAM,IAAMiR,EAAMjR,GAAMoQ,EAC/Bc,EAAOlR,EAAI,GACR,IAAMK,KAAKkR,KAAKlR,KAAKqK,IAAIuG,EAAMjR,EAAI,GAAKmQ,IAAY9P,KAAKyN,GAAK,GAEnE,OAAOoD,CACT,CCzHO,MAQM,EAAS,EAAE,KAAM,GAAI,IAAK,IAM1B,EAdS,QAcU7Q,KAAKyN,GAAe,IAUpD,MAAM0D,UAA2B,EAK/BzD,YAAYG,EAAMO,GAChBiC,MAAM,CACJxC,KAAMA,EACNyC,MAAO,UACPtC,OAAQ,EACRI,gBAAiBA,EACjBE,QAAQ,EACRM,cAAe,EACfV,YAAa,GAEjB,EASK,MAAM,EAAc,CACzB,IAAIiD,EAAmB,UACvB,IAAIA,EAAmB,YAAa,OACpC,IAAIA,EAAmB,iCACvB,IAAIA,EAAmB,4BACvB,IAAIA,EAAmB,gDACvB,IAAIA,EAAmB,+CAAgD,OACvE,IAAIA,EAAmB,6CAA8C,QC3DvE,IAAIC,EAAQ,CAAC,ECEb,IAAIC,EAAa,CAAC,EAiBX,SAAS,EAAIC,EAAQC,EAAaC,GACvC,MAAMC,EAAaH,EAAOxC,UACpB4C,EAAkBH,EAAYzC,UAC9B2C,KAAcJ,IAClBA,EAAWI,GAAc,CAAC,GAE5BJ,EAAWI,GAAYC,GAAmBF,CAC5C,CCzBA,MACW,EADX,EAEgB,EAFhB,EAGS,EAHT,EAIS,EAJT,EAKS,EALT,EAMQ,GCTR,MAAMG,EAAW,CACf,EAAG,iCACH,EAAG,qCACH,EAAG,mCACH,EAAG,wDACH,EAAG,iDACH,EAAG,yCACH,EAAG,kCACH,EAAG,oDACH,GAAI,oEACJ,GAAI,0CACJ,GAAI,0EACJ,GAAI,iBACJ,GAAI,gBACJ,GAAI,kEACJ,GAAI,sDACJ,GAAI,mDACJ,GAAI,8DACJ,GAAI,wDACJ,GAAI,sDACJ,GAAI,kEACJ,GAAI,oDACJ,GAAI,iDACJ,GAAI,+BACJ,GAAI,+BACJ,GAAI,gDACJ,GAAI,uDACJ,GAAI,oEACJ,GAAI,2CACJ,GAAI,gBACJ,GAAI,0BACJ,GAAI,mBACJ,GAAI,8BACJ,GAAI,sCACJ,GAAI,wBACJ,GAAI,wCACJ,GAAI,kEACJ,GAAI,qCACJ,GAAI,qDACJ,GAAI,2DACJ,GAAI,+DACJ,GAAI,2DACJ,GAAI,4CACJ,GAAI,sDACJ,GAAI,kCACJ,GAAI,2CACJ,GAAI,wDACJ,GAAI,sDACJ,GAAI,qCACJ,GAAI,mCACJ,GAAI,4BACJ,GAAI,+EACJ,GAAI,uFACJ,GAAI,iCACJ,GAAI,wPACJ,GAAI,uGACJ,GAAI,sGACJ,GAAI,gEAQN,MAAMC,UAAuBtL,MAI3BoH,YAAYG,GACV,MAAMgE,EAAUF,EAAS9D,GAEzBwC,MAAMwB,GAWNvQ,KAAKuM,KAAOA,EAKZvM,KAAKwQ,KAAO,iBAGZxQ,KAAKuQ,QAAUA,CACjB,EAGF,QC3FO,SAASE,EAAOC,EAAWC,GAChC,IAAKD,EACH,MAAM,IAAI,EAAeC,EAE7B,CCWO,SAASC,EAAeC,GAC7B,MAAMnE,EAASoE,IACf,IAAK,IAAIzS,EAAI,EAAG0S,EAAKF,EAAY/Q,OAAQzB,EAAI0S,IAAM1S,EACjD2S,EAAiBtE,EAAQmE,EAAYxS,IAEvC,OAAOqO,CACT,CAyBO,SAAShP,EAAOgP,EAAQ7N,EAAOoS,GACpC,OAAIA,GACFA,EAAK,GAAKvE,EAAO,GAAK7N,EACtBoS,EAAK,GAAKvE,EAAO,GAAK7N,EACtBoS,EAAK,GAAKvE,EAAO,GAAK7N,EACtBoS,EAAK,GAAKvE,EAAO,GAAK7N,EACfoS,GAEF,CACLvE,EAAO,GAAK7N,EACZ6N,EAAO,GAAK7N,EACZ6N,EAAO,GAAK7N,EACZ6N,EAAO,GAAK7N,EAEhB,CA0BO,SAASqS,EAAyBxE,EAAQvD,EAAGuG,GAClD,IAAIyB,EAAIC,EAeR,OAbED,EADEhI,EAAIuD,EAAO,GACRA,EAAO,GAAKvD,EACRuD,EAAO,GAAKvD,EAChBA,EAAIuD,EAAO,GAEX,EAGL0E,EADE1B,EAAIhD,EAAO,GACRA,EAAO,GAAKgD,EACRhD,EAAO,GAAKgD,EAChBA,EAAIhD,EAAO,GAEX,EAEAyE,EAAKA,EAAKC,EAAKA,CACxB,CAUO,SAASC,EAAmB3E,EAAQ4E,GACzC,OAAOC,EAAW7E,EAAQ4E,EAAW,GAAIA,EAAW,GACtD,CAcO,SAASE,EAAeC,EAASC,GACtC,OACED,EAAQ,IAAMC,EAAQ,IACtBA,EAAQ,IAAMD,EAAQ,IACtBA,EAAQ,IAAMC,EAAQ,IACtBA,EAAQ,IAAMD,EAAQ,EAE1B,CAWO,SAASF,EAAW7E,EAAQvD,EAAGuG,GACpC,OAAOhD,EAAO,IAAMvD,GAAKA,GAAKuD,EAAO,IAAMA,EAAO,IAAMgD,GAAKA,GAAKhD,EAAO,EAC3E,CASO,SAASiF,EAAuBjF,EAAQ4E,GAC7C,MAAM7H,EAAOiD,EAAO,GACdhD,EAAOgD,EAAO,GACd/C,EAAO+C,EAAO,GACd9C,EAAO8C,EAAO,GACdvD,EAAImI,EAAW,GACf5B,EAAI4B,EAAW,GACrB,IAAIM,EAAeC,EAcnB,OAbI1I,EAAIM,EACNmI,GAA8BC,EACrB1I,EAAIQ,IACbiI,GAA8BC,GAE5BnC,EAAIhG,EACNkI,GAA8BC,EACrBnC,EAAI9F,IACbgI,GAA8BC,GAE5BD,IAAiBC,IACnBD,EAAeC,GAEVD,CACT,CAOO,SAASd,IACd,MAAO,CAACrS,IAAUA,KAAWA,KAAWA,IAC1C,CAWO,SAASqT,EAAerI,EAAMC,EAAMC,EAAMC,EAAMqH,GACrD,OAAIA,GACFA,EAAK,GAAKxH,EACVwH,EAAK,GAAKvH,EACVuH,EAAK,GAAKtH,EACVsH,EAAK,GAAKrH,EACHqH,GAEF,CAACxH,EAAMC,EAAMC,EAAMC,EAC5B,CAOO,SAASmI,EAAoBd,GAClC,OAAOa,EAAerT,IAAUA,KAAWA,KAAWA,IAAUwS,EAClE,CAOO,SAASe,EAA6BV,EAAYL,GACvD,MAAM9H,EAAImI,EAAW,GACf5B,EAAI4B,EAAW,GACrB,OAAOQ,EAAe3I,EAAGuG,EAAGvG,EAAGuG,EAAGuB,EACpC,CAoBO,SAASgB,EACdC,EACAvU,EACAuG,EACAiO,EACAlB,GAGA,OAAOmB,EADQL,EAAoBd,GACEiB,EAAiBvU,EAAQuG,EAAKiO,EACrE,CAmBO,SAASE,EAAOZ,EAASC,GAC9B,OACED,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,EAE1B,CAyBO,SAAS,EAAOD,EAASC,GAa9B,OAZIA,EAAQ,GAAKD,EAAQ,KACvBA,EAAQ,GAAKC,EAAQ,IAEnBA,EAAQ,GAAKD,EAAQ,KACvBA,EAAQ,GAAKC,EAAQ,IAEnBA,EAAQ,GAAKD,EAAQ,KACvBA,EAAQ,GAAKC,EAAQ,IAEnBA,EAAQ,GAAKD,EAAQ,KACvBA,EAAQ,GAAKC,EAAQ,IAEhBD,CACT,CAMO,SAAST,EAAiBtE,EAAQ4E,GACnCA,EAAW,GAAK5E,EAAO,KACzBA,EAAO,GAAK4E,EAAW,IAErBA,EAAW,GAAK5E,EAAO,KACzBA,EAAO,GAAK4E,EAAW,IAErBA,EAAW,GAAK5E,EAAO,KACzBA,EAAO,GAAK4E,EAAW,IAErBA,EAAW,GAAK5E,EAAO,KACzBA,EAAO,GAAK4E,EAAW,GAE3B,CAsBO,SAASc,EACd1F,EACAwF,EACAvU,EACAuG,EACAiO,GAEA,KAAOxU,EAASuG,EAAKvG,GAAUwU,EAC7BG,EAAS5F,EAAQwF,EAAgBvU,GAASuU,EAAgBvU,EAAS,IAErE,OAAO+O,CACT,CAmBO,SAAS4F,EAAS5F,EAAQvD,EAAGuG,GAClChD,EAAO,GAAKhO,KAAKqI,IAAI2F,EAAO,GAAIvD,GAChCuD,EAAO,GAAKhO,KAAKqI,IAAI2F,EAAO,GAAIgD,GAChChD,EAAO,GAAKhO,KAAKwK,IAAIwD,EAAO,GAAIvD,GAChCuD,EAAO,GAAKhO,KAAKwK,IAAIwD,EAAO,GAAIgD,EAClC,CAWO,SAAS6C,EAAc7F,EAAQ8F,GACpC,IAAI7O,EAEJ,OADAA,EAAM6O,EAASC,EAAc/F,IACzB/I,IAGJA,EAAM6O,EAASE,EAAehG,IAC1B/I,IAGJA,EAAM6O,EAASG,GAAYjG,IACvB/I,IAGJA,EAAM6O,EAAS,GAAW9F,IACtB/I,IAGG,IACT,CAQO,SAASiP,EAAQlG,GACtB,IAAImG,EAAO,EAIX,OAHK,GAAQnG,KACXmG,EAAO,GAASnG,GAAU,GAAUA,IAE/BmG,CACT,CAQO,SAASJ,EAAc/F,GAC5B,MAAO,CAACA,EAAO,GAAIA,EAAO,GAC5B,CAQO,SAASgG,EAAehG,GAC7B,MAAO,CAACA,EAAO,GAAIA,EAAO,GAC5B,CAQO,SAASoG,EAAUpG,GACxB,MAAO,EAAEA,EAAO,GAAKA,EAAO,IAAM,GAAIA,EAAO,GAAKA,EAAO,IAAM,EACjE,CAQO,SAASqG,GAAUrG,EAAQsG,GAChC,IAAI1B,EAYJ,MAXe,gBAAX0B,EACF1B,EAAamB,EAAc/F,GACP,iBAAXsG,EACT1B,EAAaoB,EAAehG,GACR,aAAXsG,EACT1B,EAAa,GAAW5E,GACJ,cAAXsG,EACT1B,EAAaqB,GAAYjG,GAEzB+D,GAAO,EAAO,IAETa,CACT,CA8CO,SAAS2B,GAAmBC,EAAQjE,EAAYkE,EAAUC,GAC/D,MAAMjC,EAAMlC,EAAamE,EAAK,GAAM,EAC9BhC,EAAMnC,EAAamE,EAAK,GAAM,EAC9BC,EAAc3U,KAAK4U,IAAIH,GACvBI,EAAc7U,KAAK8U,IAAIL,GACvBM,EAAOtC,EAAKkC,EACZK,EAAOvC,EAAKoC,EACZI,EAAOvC,EAAKiC,EACZO,EAAOxC,EAAKmC,EACZpK,EAAI+J,EAAO,GACXxD,EAAIwD,EAAO,GACjB,MAAO,CACL/J,EAAIsK,EAAOG,EACXlE,EAAIgE,EAAOC,EACXxK,EAAIsK,EAAOG,EACXlE,EAAIgE,EAAOC,EACXxK,EAAIsK,EAAOG,EACXlE,EAAIgE,EAAOC,EACXxK,EAAIsK,EAAOG,EACXlE,EAAIgE,EAAOC,EACXxK,EAAIsK,EAAOG,EACXlE,EAAIgE,EAAOC,EAEf,CAQO,SAAS,GAAUjH,GACxB,OAAOA,EAAO,GAAKA,EAAO,EAC5B,CAoBO,SAASmH,GAAgBpC,EAASC,EAAST,GAChD,MAAM6C,EAAe7C,GAvZd,CAACxS,IAAUA,KAAU,KAAW,KAgbvC,OAxBIsV,GAAWtC,EAASC,IAClBD,EAAQ,GAAKC,EAAQ,GACvBoC,EAAa,GAAKrC,EAAQ,GAE1BqC,EAAa,GAAKpC,EAAQ,GAExBD,EAAQ,GAAKC,EAAQ,GACvBoC,EAAa,GAAKrC,EAAQ,GAE1BqC,EAAa,GAAKpC,EAAQ,GAExBD,EAAQ,GAAKC,EAAQ,GACvBoC,EAAa,GAAKrC,EAAQ,GAE1BqC,EAAa,GAAKpC,EAAQ,GAExBD,EAAQ,GAAKC,EAAQ,GACvBoC,EAAa,GAAKrC,EAAQ,GAE1BqC,EAAa,GAAKpC,EAAQ,IAG5BK,EAAoB+B,GAEfA,CACT,CA0BO,SAAS,GAAWpH,GACzB,MAAO,CAACA,EAAO,GAAIA,EAAO,GAC5B,CAQO,SAASiG,GAAYjG,GAC1B,MAAO,CAACA,EAAO,GAAIA,EAAO,GAC5B,CAQO,SAAS,GAASA,GACvB,OAAOA,EAAO,GAAKA,EAAO,EAC5B,CASO,SAASqH,GAAWtC,EAASC,GAClC,OACED,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,IACtBD,EAAQ,IAAMC,EAAQ,EAE1B,CAQO,SAAS,GAAQhF,GACtB,OAAOA,EAAO,GAAKA,EAAO,IAAMA,EAAO,GAAKA,EAAO,EACrD,CA0GO,SAASsH,GAAetH,EAAQwD,EAAae,EAAMgD,GACxD,IAAIpD,EAAc,GAClB,GAAIoD,EAAQ,EAAG,CACb,MAAMC,EAAQxH,EAAO,GAAKA,EAAO,GAC3B5C,EAAS4C,EAAO,GAAKA,EAAO,GAClC,IAAK,IAAIrO,EAAI,EAAGA,EAAI4V,IAAS5V,EAC3BwS,EAAY3Q,KACVwM,EAAO,GAAMwH,EAAQ7V,EAAK4V,EAC1BvH,EAAO,GACPA,EAAO,GACPA,EAAO,GAAM5C,EAASzL,EAAK4V,EAC3BvH,EAAO,GAAMwH,EAAQ7V,EAAK4V,EAC1BvH,EAAO,GACPA,EAAO,GACPA,EAAO,GAAM5C,EAASzL,EAAK4V,EAGjC,MACEpD,EAAc,CACZnE,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,GACPA,EAAO,IAGXwD,EAAYW,EAAaA,EAAa,GACtC,MAAMsD,EAAK,GACLC,EAAK,GACX,IAAK,IAAI/V,EAAI,EAAGwG,EAAIgM,EAAY/Q,OAAQzB,EAAIwG,EAAGxG,GAAK,EAClD8V,EAAGjU,KAAK2Q,EAAYxS,IACpB+V,EAAGlU,KAAK2Q,EAAYxS,EAAI,IAE1B,OAvyBF,SAA4B8V,EAAIC,EAAInD,GAKlC,OAAOa,EAJMpT,KAAKqI,IAAIkE,MAAM,KAAMkJ,GACrBzV,KAAKqI,IAAIkE,MAAM,KAAMmJ,GACrB1V,KAAKwK,IAAI+B,MAAM,KAAMkJ,GACrBzV,KAAKwK,IAAI+B,MAAM,KAAMmJ,GACYnD,EAChD,CAiyBSoD,CAAmBF,EAAIC,EAAInD,EACpC,CChmBO,SAAS,GAAOqD,EAAaC,GAClC,IAAIlC,GAAS,EACb,IAAK,IAAIhU,EAAIiW,EAAYxU,OAAS,EAAGzB,GAAK,IAAKA,EAC7C,GAAIiW,EAAYjW,IAAMkW,EAAYlW,GAAI,CACpCgU,GAAS,EACT,KACF,CAEF,OAAOA,CACT,CAgKO,SAAS,GAAMf,EAAYkD,GAChC,GAAIA,EAAWjH,WAAY,CACzB,MAAMkH,EAAa,GAASD,EAAW/G,aACjCiH,EAaH,SAAuBpD,EAAYkD,EAAYG,GACpD,MAAMC,EAAmBJ,EAAW/G,YACpC,IAAIiH,EAAa,EAEfF,EAAWjH,aACV+D,EAAW,GAAKsD,EAAiB,IAAMtD,EAAW,GAAKsD,EAAiB,MAEzED,EAAoBA,GAAqB,GAASC,GAClDF,EAAahW,KAAKQ,OACfoS,EAAW,GAAKsD,EAAiB,IAAMD,IAG5C,OAAOD,CACT,CA1BuB,CAAcpD,EAAYkD,EAAYC,GACrDC,IACFpD,EAAW,IAAMoD,EAAaD,EAElC,CACA,OAAOnD,CACT,CCrZO,SAAS,GAAMzS,EAAOkI,EAAKmC,GAChC,OAAOxK,KAAKqI,IAAIrI,KAAKwK,IAAIrK,EAAOkI,GAAMmC,EACxC,CAaO,SAAS2L,GAAuB1L,EAAGuG,EAAGoF,EAAIC,EAAIC,EAAIC,GACvD,MAAM9D,EAAK6D,EAAKF,EACV1D,EAAK6D,EAAKF,EAChB,GAAW,IAAP5D,GAAmB,IAAPC,EAAU,CACxB,MAAM3I,IAAMU,EAAI2L,GAAM3D,GAAMzB,EAAIqF,GAAM3D,IAAOD,EAAKA,EAAKC,EAAKA,GACxD3I,EAAI,GACNqM,EAAKE,EACLD,EAAKE,GACIxM,EAAI,IACbqM,GAAM3D,EAAK1I,EACXsM,GAAM3D,EAAK3I,EAEf,CACA,OAAO,GAAgBU,EAAGuG,EAAGoF,EAAIC,EACnC,CAUO,SAAS,GAAgBD,EAAIC,EAAIC,EAAIC,GAC1C,MAAM9D,EAAK6D,EAAKF,EACV1D,EAAK6D,EAAKF,EAChB,OAAO5D,EAAKA,EAAKC,EAAKA,CACxB,CAyEO,SAAS,GAAU8D,GACxB,OAAQA,EAAiBxW,KAAKyN,GAAM,GACtC,CASO,SAAS,GAAOxD,EAAG/D,GACxB,MAAM8D,EAAIC,EAAI/D,EACd,OAAO8D,EAAI9D,EAAI,EAAI8D,EAAI9D,EAAI8D,CAC7B,CAUO,SAASyM,GAAKxM,EAAG/D,EAAGuE,GACzB,OAAOR,EAAIQ,GAAKvE,EAAI+D,EACtB,CAQO,SAAS,GAAQC,EAAGwM,GACzB,MAAMC,EAAS3W,KAAKC,IAAI,GAAIyW,GAC5B,OAAO1W,KAAK4W,MAAM1M,EAAIyM,GAAUA,CAClC,CAoBO,SAASnW,GAAM0J,EAAGwM,GACvB,OAAO1W,KAAKQ,MAAM,GAAQ0J,EAAGwM,GAC/B,CASO,SAAS9L,GAAKV,EAAGwM,GACtB,OAAO1W,KAAK4K,KAAK,GAAQV,EAAGwM,GAC9B,CChLO,MAAMG,GAAiB,UAWvB,SAASC,GAAYC,EAAIC,EAAIC,GAClCA,EAASA,GAAUJ,GACnB,MAAMK,EAAO,GAAUH,EAAG,IACpBI,EAAO,GAAUH,EAAG,IACpBI,GAAeD,EAAOD,GAAQ,EAC9BG,EAAc,GAAUL,EAAG,GAAKD,EAAG,IAAM,EACzC9M,EACJjK,KAAK8U,IAAIsC,GAAepX,KAAK8U,IAAIsC,GACjCpX,KAAK8U,IAAIuC,GACPrX,KAAK8U,IAAIuC,GACTrX,KAAK4U,IAAIsC,GACTlX,KAAK4U,IAAIuC,GACb,OAAO,EAAIF,EAASjX,KAAKsX,MAAMtX,KAAKuK,KAAKN,GAAIjK,KAAKuK,KAAK,EAAIN,GAC7D,CCnCA,MAAMsN,GAAS,CACbC,KAAM,EACNC,KAAM,EACNC,MAAO,EACPC,KAAM,GAMR,IAAIC,GAAQL,GAAOC,KC+EnB,IAAIK,IAAwB,EAKrB,SAASC,GAAyBC,GAEvCF,UADyBxK,IAAZ0K,GAA+BA,EAE9C,CAQO,SAASC,GAAepH,EAAOC,GACpC,QAAexD,IAAXwD,EACF,IAAK,IAAIlR,EAAI,EAAG0S,EAAKzB,EAAMxP,OAAQzB,EAAI0S,IAAM1S,EAC3CkR,EAAOlR,GAAKiR,EAAMjR,QAIpBkR,EAASD,EAAM3P,QAEjB,OAAO4P,CACT,CAOO,SAASoH,GAAkBrH,EAAOC,GACvC,QAAexD,IAAXwD,GAAwBD,IAAUC,EAAQ,CAC5C,IAAK,IAAIlR,EAAI,EAAG0S,EAAKzB,EAAMxP,OAAQzB,EAAI0S,IAAM1S,EAC3CkR,EAAOlR,GAAKiR,EAAMjR,GAEpBiR,EAAQC,CACV,CACA,OAAOD,CACT,CASO,SAASsH,GAAcpC,IVpHvB,SAAajI,EAAMiI,GACxB1E,EAAMvD,GAAQiI,CAChB,CUmHEqC,CAAQrC,EAAWhH,UAAWgH,GAC9B,EAAiBA,EAAYA,EAAYkC,GAC3C,CAkBO,SAAS,GAAII,GAClB,MAAiC,iBAAnBA,EVrJZhH,EAFgBvD,EUwJgB,IVrJhCuD,EAAMvD,EAAKwK,QAAQ,yCAA0C,aAC7D,KUqJ4B,GAAoB,KVzJ7C,IAAaxK,CU0JpB,CAsBO,SAASY,GAAmBqH,EAAYvF,EAAYC,EAAOF,GAEhE,IAAIgI,EACJ,MAAMC,GAFNzC,EAAa,GAAIA,IAESjG,yBAC1B,GAAI0I,GAEF,GADAD,EAAkBC,EAAOhI,EAAYC,GACjCF,GAASA,IAAUwF,EAAW9G,WAAY,CAC5C,MAAMJ,EAAgBkH,EAAW7G,mBAC7BL,IACF0J,EACGA,EAAkB1J,EAAiB,EAAgB0B,GAE1D,MACK,CACL,MAAMkI,EAAY1C,EAAW9G,WAC7B,GAAkB,WAAbwJ,IAA2BlI,GAAmB,WAATA,EACxCgI,EAAkB/H,MACb,CAIL,MAAMU,EAAawH,GACjB3C,EACA,GAAI,cAEN,GAAI7E,IAAegH,IAAmC,YAAdO,EAEtCF,EAAkB/H,EAAauF,EAAW7G,uBACrC,CACL,IAAIyJ,EAAW,CACblI,EAAM,GAAKD,EAAa,EACxBC,EAAM,GACNA,EAAM,GAAKD,EAAa,EACxBC,EAAM,GACNA,EAAM,GACNA,EAAM,GAAKD,EAAa,EACxBC,EAAM,GACNA,EAAM,GAAKD,EAAa,GAE1BmI,EAAWzH,EAAWyH,EAAUA,EAAU,GAG1CJ,GAFcxB,GAAY4B,EAASzX,MAAM,EAAG,GAAIyX,EAASzX,MAAM,EAAG,IACnD6V,GAAY4B,EAASzX,MAAM,EAAG,GAAIyX,EAASzX,MAAM,EAAG,KAC9B,CACvC,CACA,MAAM2N,EAAgB0B,EAClB,EAAgBA,GAChBwF,EAAW7G,wBACO5B,IAAlBuB,IACF0J,GAAmB1J,EAEvB,CACF,CACA,OAAO0J,CACT,CASO,SAASK,GAAyBC,IArGlC,SAAwBA,GAC7BA,EAAYC,QAAQX,GACtB,CAoGEY,CAAeF,GACfA,EAAYC,SAAQ,SAAUvH,GAC5BsH,EAAYC,SAAQ,SAAUtH,GACxBD,IAAWC,GACb,EAAiBD,EAAQC,EAAayG,GAE1C,GACF,GACF,CA0CO,SAASe,GAAiBjD,EAAYkD,GAC3C,OAAKlD,EAGqB,iBAAfA,EACF,GAAIA,GAEoB,EALxB,GAAIkD,EAMf,CAwHO,SAAS,GAAWC,EAAaC,GACtC,GAAID,IAAgBC,EAClB,OAAO,EAET,MAAMC,EAAaF,EAAYjK,aAAekK,EAAYlK,WAC1D,GAAIiK,EAAYnK,YAAcoK,EAAYpK,UACxC,OAAOqK,EAGT,OADsBV,GAA4BQ,EAAaC,KACtClB,IAAkBmB,CAC7C,CAWO,SAASV,GACdW,EACAC,GAIA,IAAIC,ETpZC,SAAa7H,EAAYC,GAC9B,IAAI6H,EAIJ,OAHI9H,KAAcJ,GAAcK,KAAmBL,EAAWI,KAC5D8H,EAAYlI,EAAWI,GAAYC,IAE9B6H,CACT,CS8YsB,CAFDH,EAAiBtK,UACZuK,EAAsBvK,WAK9C,OAHKwK,IACHA,EAAgBrB,IAEXqB,CACT,CAYO,SAASE,GAAalI,EAAQC,GAGnC,OAAOkH,GAFkB,GAAInH,GACC,GAAIC,GAEpC,CAgBO,SAASgI,GAAU3G,EAAYtB,EAAQC,GAE5C,OADsBiI,GAAalI,EAAQC,EACpC+H,CAAc1G,OAAYvF,EAAWuF,EAAWxR,OACzD,CAcO,SAAS,GAAgB4M,EAAQsD,EAAQC,EAAagE,GAE3D,OAAOD,GAAetH,EADAwL,GAAalI,EAAQC,QACElE,EAAWkI,EAC1D,CAyBA,IAAIkE,GAAiB,KA2Bd,SAAS,KACd,OAAOA,EACT,CAkBO,SAASC,GAAiB9G,EAAYwG,GAC3C,OAAKK,GAGEF,GAAU3G,EAAYwG,EAAkBK,IAFtC7G,CAGX,CASO,SAAS+G,GAAmB/G,EAAYgH,GAC7C,OAAKH,GAgBEF,GAAU3G,EAAY6G,GAAgBG,IAdzC/B,KACC,GAAOjF,EAAY,CAAC,EAAG,KACxBA,EAAW,KAAO,KAClBA,EAAW,IAAM,KACjBA,EAAW,KAAO,IAClBA,EAAW,IAAM,KAEjBiF,IAAwB,EDjkBvB,YAAiBgC,GAClBjC,GAAQL,GAAOE,MAGnBqC,QAAQrC,QAAQoC,EAClB,CC6jBMpC,CACE,2FAGG7E,EAGX,CAuBO,SAASmH,GAAe/L,EAAQ4L,GACrC,OAAKH,GAGE,GAAgBzL,EAAQyL,GAAgBG,GAFtC5L,CAGX,CAiFO,IAlcLgM,GACAC,GACAC,GAmcAvB,GAAyB,GACzBA,GAAyB,GAtczBqB,GA2cE,EA1cFC,GA2cEtJ,EA1cFuJ,GA2cEjJ,EAHA,EAtcW4H,SAAQ,SAAUI,GAC7Be,GAAanB,SAAQ,SAAUK,GAC7B,EAAiBD,EAAaC,EAAae,IAC3C,EAAiBf,EAAaD,EAAaiB,GAC7C,GACF,ICnEF,OAhKA,MACExM,cAKEpM,KAAK6Y,oBAAiB9M,EAMtB/L,KAAK8Y,8BAA2B/M,EAMhC/L,KAAK+Y,oBAAsB,IAC7B,CASAC,eAAehJ,EAAQ3D,GACrB,GAAIA,EAAS,CACX,IAAIwM,EAAiBxM,EAAQwM,eACzB,GAAcxM,EAAQwM,gBACtB7Y,KAAKiZ,eAAejJ,GAEtB3D,EAAQK,QACRmM,GAC8B,gBAA9BA,EAAenL,aAEfmL,EAAiB,GAAcA,GAC/BA,EAAezK,eAAe/B,EAAQK,SAExCL,EAAU,CACRwM,eAAgBA,EAChBK,kBAAmB7M,EAAQ6M,kBAE/B,CACA,OAAOlZ,KAAKmZ,aAAa9M,EAC3B,CAWA8M,aAAa9M,GACX,OAAO+M,OAAOC,OACZ,CACER,eAAgB7Y,KAAK6Y,eACrBK,kBAAmBlZ,KAAK8Y,0BAE1BzM,EAEJ,CAMAiN,UACE,OAAO,GACT,CAUAC,YAAYvJ,EAAQ3D,GAClB,OAAO,GACT,CAUAmN,aAAaxJ,EAAQ3D,GACnB,OAAO,GACT,CAUAoN,aAAazJ,EAAQ3D,GACnB,OAAO,GACT,CASA4M,eAAejJ,GACb,OAAO,GACT,CAUA0J,aAAaC,EAAStN,GACpB,OAAO,GACT,CAUAuN,cAAcC,EAAUxN,GACtB,OAAO,GACT,CAUAyN,cAAcC,EAAU1N,GACtB,OAAO,GACT,GAWK,SAAS2N,GAA6BD,EAAUnb,EAAOyN,GAC5D,MAAM6M,EAAoB7M,EACtB,GAAcA,EAAQ6M,mBACtB,KACEL,EAAiBxM,EAAU,GAAcA,EAAQwM,gBAAkB,KAEzE,IAAIoB,EAaJ,GAPEA,EAJAf,GACAL,IACC,GAAqBK,EAAmBL,IAE1Bja,EAAQmb,EAASG,QAAUH,GAAU9B,UAClDrZ,EAAQsa,EAAoBL,EAC5Bja,EAAQia,EAAiBK,GAGba,EAGdnb,GACAyN,QACmDN,IAAvB,EAAUqJ,SACtC,CACA,MAAM+E,EAAQzb,KAAKC,IAAI,GAAgC,EAAUyW,UAM3D6C,EAAY,SAAUpH,GAC1B,IAAK,IAAIxS,EAAI,EAAG0S,EAAKF,EAAY/Q,OAAQzB,EAAI0S,IAAM1S,EACjDwS,EAAYxS,GAAKK,KAAK4W,MAAMzE,EAAYxS,GAAK8b,GAASA,EAExD,OAAOtJ,CACT,EACIoJ,IAAgBF,IAClBE,EAAcF,EAASG,SAEzBD,EAAYjG,eAAeiE,EAC7B,CACA,OAAOgC,CACT,CCzMA,OA9DA,MAIE7N,YAAYnL,GAIVjB,KAAKoa,mBAKLpa,KAAKqa,iBAOLra,KAAKiB,KAAOA,EAOZjB,KAAKsa,OAAS,IAChB,CAOAC,iBACEva,KAAKqa,kBAAmB,CAC1B,CAMAG,kBACExa,KAAKoa,oBAAqB,CAC5B,GCpDF,GAMkB,iBCsBlB,OA3BA,MACEhO,cAMEpM,KAAKya,UAAW,CAClB,CAKAC,UACO1a,KAAKya,WACRza,KAAKya,UAAW,EAChBza,KAAK2a,kBAET,CAMAA,kBAAmB,GCed,SAASC,GAAUjS,EAAG/D,GAC3B,OAAO+D,EAAI/D,EAAI,EAAI+D,EAAI/D,GAAK,EAAI,CAClC,CAyBO,SAASiW,GAAkBtY,EAAK+X,EAAQQ,GAC7C,GAAIvY,EAAI,IAAM+X,EACZ,OAAO,EAGT,MAAM1R,EAAIrG,EAAIzC,OACd,GAAIwa,GAAU/X,EAAIqG,EAAI,GACpB,OAAOA,EAAI,EAGb,GAAyB,mBAAdkS,EAA0B,CACnC,IAAK,IAAIzc,EAAI,EAAGA,EAAIuK,IAAKvK,EAAG,CAC1B,MAAM0c,EAAYxY,EAAIlE,GACtB,GAAI0c,IAAcT,EAChB,OAAOjc,EAET,GAAI0c,EAAYT,EACd,OAAIQ,EAAUR,EAAQ/X,EAAIlE,EAAI,GAAI0c,GAAa,EACtC1c,EAAI,EAENA,CAEX,CACA,OAAOuK,EAAI,CACb,CAEA,GAAIkS,EAAY,EAAG,CACjB,IAAK,IAAIzc,EAAI,EAAGA,EAAIuK,IAAKvK,EACvB,GAAIkE,EAAIlE,GAAKic,EACX,OAAOjc,EAAI,EAGf,OAAOuK,EAAI,CACb,CAEA,GAAIkS,EAAY,EAAG,CACjB,IAAK,IAAIzc,EAAI,EAAGA,EAAIuK,IAAKvK,EACvB,GAAIkE,EAAIlE,IAAMic,EACZ,OAAOjc,EAGX,OAAOuK,EAAI,CACb,CAEA,IAAK,IAAIvK,EAAI,EAAGA,EAAIuK,IAAKvK,EAAG,CAC1B,GAAIkE,EAAIlE,IAAMic,EACZ,OAAOjc,EAET,GAAIkE,EAAIlE,GAAKic,EACX,OAAI/X,EAAIlE,EAAI,GAAKic,EAASA,EAAS/X,EAAIlE,GAC9BA,EAAI,EAENA,CAEX,CACA,OAAOuK,EAAI,CACb,CAOO,SAASoS,GAAgBzY,EAAK0Y,EAAO/W,GAC1C,KAAO+W,EAAQ/W,GAAK,CAClB,MAAMgX,EAAM3Y,EAAI0Y,GAChB1Y,EAAI0Y,GAAS1Y,EAAI2B,GACjB3B,EAAI2B,GAAOgX,IACTD,IACA/W,CACJ,CACF,CAOO,SAAS,GAAO3B,EAAK2H,GAC1B,MAAMiR,EAAY1L,MAAM2L,QAAQlR,GAAQA,EAAO,CAACA,GAC1CpK,EAASqb,EAAUrb,OACzB,IAAK,IAAIzB,EAAI,EAAGA,EAAIyB,EAAQzB,IAC1BkE,EAAIA,EAAIzC,QAAUqb,EAAU9c,EAEhC,CAsBO,SAAS,GAAOgd,EAAMC,GAC3B,MAAMC,EAAOF,EAAKvb,OAClB,GAAIyb,IAASD,EAAKxb,OAChB,OAAO,EAET,IAAK,IAAIzB,EAAI,EAAGA,EAAIkd,EAAMld,IACxB,GAAIgd,EAAKhd,KAAOid,EAAKjd,GACnB,OAAO,EAGX,OAAO,CACT,CCpKO,SAAS,KAAQ,CCnBjB,SAAS,GAAMmd,GACpB,IAAK,MAAMC,KAAYD,SACdA,EAAOC,EAElB,CAOO,SAAS,GAAQD,GACtB,IAAIC,EACJ,IAAKA,KAAYD,EACf,OAAO,EAET,OAAQC,CACV,CCkKA,OAhKA,cAAqB,GAInBrP,YAAYkO,GACVvL,QAMA/O,KAAK0b,aAAepB,EAMpBta,KAAK2b,iBAAmB,KAMxB3b,KAAK4b,aAAe,KAMpB5b,KAAK6b,WAAa,IACpB,CAMAC,iBAAiB7a,EAAM8a,GACrB,IAAK9a,IAAS8a,EACZ,OAEF,MAAMC,EAAYhc,KAAK6b,aAAe7b,KAAK6b,WAAa,CAAC,GACnDI,EAAmBD,EAAU/a,KAAU+a,EAAU/a,GAAQ,IAC1Dgb,EAAiBC,SAASH,IAC7BE,EAAiB/b,KAAK6b,EAE1B,CAYAI,cAAcC,GACZ,MAAMC,EAA4B,iBAAVD,EAClBnb,EAAOob,EAAWD,EAAQA,EAAMnb,KAChC+a,EAAYhc,KAAK6b,YAAc7b,KAAK6b,WAAW5a,GACrD,IAAK+a,EACH,OAGF,MAAMM,EAAMD,EAAW,IAAIE,GAAMH,GAA8B,EAC1DE,EAAIhC,SACPgC,EAAIhC,OAASta,KAAK0b,cAAgB1b,MAEpC,MAAMwc,EAAcxc,KAAK4b,eAAiB5b,KAAK4b,aAAe,CAAC,GACzDa,EACJzc,KAAK2b,mBAAqB3b,KAAK2b,iBAAmB,CAAC,GAMrD,IAAIe,EALEzb,KAAQub,IACZA,EAAYvb,GAAQ,EACpBwb,EAAgBxb,GAAQ,KAExBub,EAAYvb,GAEd,IAAK,IAAI5C,EAAI,EAAG0S,EAAKiL,EAAUlc,OAAQzB,EAAI0S,IAAM1S,EAU/C,GAREqe,EADE,gBAAiBV,EAAU3d,GAE3B2d,EAAU3d,GACVse,YAAYL,GAGZN,EAAU3d,GACV8B,KAAKH,KAAMsc,IAEG,IAAdI,GAAuBJ,EAAIlC,mBAAoB,CACjDsC,GAAY,EACZ,KACF,CAEF,GAA4B,KAAtBF,EAAYvb,GAAa,CAC7B,IAAI2b,EAAKH,EAAgBxb,GAEzB,WADOwb,EAAgBxb,GAChB2b,KACL5c,KAAK6c,oBAAoB5b,EAAM,WAE1Bub,EAAYvb,EACrB,CACA,OAAOyb,CACT,CAKA/B,kBACE3a,KAAK6b,YAAc,GAAM7b,KAAK6b,WAChC,CASAiB,aAAa7b,GACX,OAAQjB,KAAK6b,YAAc7b,KAAK6b,WAAW5a,SAAU8K,CACvD,CAOAgR,YAAY9b,GACV,QAAKjB,KAAK6b,aAGH5a,EACHA,KAAQjB,KAAK6b,WACbzC,OAAO3Z,KAAKO,KAAK6b,YAAY/b,OAAS,EAC5C,CAMA+c,oBAAoB5b,EAAM8a,GACxB,MAAMC,EAAYhc,KAAK6b,YAAc7b,KAAK6b,WAAW5a,GACrD,GAAI+a,EAAW,CACb,MAAMgB,EAAQhB,EAAUpc,QAAQmc,IACjB,IAAXiB,IACEhd,KAAK2b,kBAAoB1a,KAAQjB,KAAK2b,kBAExCK,EAAUgB,GAAS,KACjBhd,KAAK2b,iBAAiB1a,KAExB+a,EAAU/b,OAAO+c,EAAO,GACC,IAArBhB,EAAUlc,eACLE,KAAK6b,WAAW5a,IAI/B,CACF,GChLF,GAMU,SANV,GAaS,QAbT,GA0BQ,OCYD,SAASgc,GAAO3C,EAAQrZ,EAAM8a,EAAUmB,EAASC,GAItD,GAHID,GAAWA,IAAY5C,IACzByB,EAAWA,EAASqB,KAAKF,IAEvBC,EAAM,CACR,MAAME,EAAmBtB,EACzBA,EAAW,WACTzB,EAAOuC,oBAAoB5b,EAAM8a,GACjCsB,EAAiBpS,MAAMjL,KAAMsd,UAC/B,CACF,CACA,MAAMC,EAAY,CAChBjD,OAAQA,EACRrZ,KAAMA,EACN8a,SAAUA,GAGZ,OADAzB,EAAOwB,iBAAiB7a,EAAM8a,GACvBwB,CACT,CAsBO,SAASC,GAAWlD,EAAQrZ,EAAM8a,EAAUmB,GACjD,OAAOD,GAAO3C,EAAQrZ,EAAM8a,EAAUmB,GAAS,EACjD,CAWO,SAASO,GAAc/d,GACxBA,GAAOA,EAAI4a,SACb5a,EAAI4a,OAAOuC,oBAAoBnd,EAAIuB,KAAMvB,EAAIqc,UAC7C,GAAMrc,GAEV,CChEA,MAAMge,WAAmB,GACvBtR,cACE2C,QAEA/O,KAAK2d,GAED3d,KACF,WAEFA,KAAKmd,KAEDnd,KACF,aAEFA,KAAK4d,GAAiD5d,KAAe,WAMrEA,KAAK6d,UAAY,CACnB,CAMAC,YACI9d,KAAK6d,UACP7d,KAAKmc,cAAc4B,GACrB,CAQAC,cACE,OAAOhe,KAAK6d,SACd,CAQAI,WAAWhd,EAAM8a,GACf,GAAItM,MAAM2L,QAAQna,GAAO,CACvB,MAAMkB,EAAMlB,EAAKnB,OACXL,EAAO,IAAIgQ,MAAMtN,GACvB,IAAK,IAAI9D,EAAI,EAAGA,EAAI8D,IAAO9D,EACzBoB,EAAKpB,GAAK4e,GAAOjd,KAAMiB,EAAK5C,GAAI0d,GAElC,OAAOtc,CACT,CACA,OAAOwd,GAAOjd,KAA4B,EAAQ+b,EACpD,CAQAmC,aAAajd,EAAM8a,GACjB,IAAIrc,EACJ,GAAI+P,MAAM2L,QAAQna,GAAO,CACvB,MAAMkB,EAAMlB,EAAKnB,OACjBJ,EAAM,IAAI+P,MAAMtN,GAChB,IAAK,IAAI9D,EAAI,EAAGA,EAAI8D,IAAO9D,EACzBqB,EAAIrB,GAAKmf,GAAWxd,KAAMiB,EAAK5C,GAAI0d,EAEvC,MACErc,EAAM8d,GAAWxd,KAA4B,EAAQ+b,GAGvD,OADsB,EAAWoC,OAASze,EACnCA,CACT,CAQA0e,WAAWnd,EAAM8a,GACf,MAAMrc,EAA4B,EAAWye,OAC7C,GAAIze,GAmDD,SAAiBA,GACtB,GAAI+P,MAAM2L,QAAQ1b,GAChB,IAAK,IAAIrB,EAAI,EAAG0S,EAAKrR,EAAII,OAAQzB,EAAI0S,IAAM1S,EACzCof,GAAc/d,EAAIrB,SAGpBof,GAA6D,EAEjE,CA1DMY,CAAQ3e,QACH,GAAI+P,MAAM2L,QAAQna,GACvB,IAAK,IAAI5C,EAAI,EAAG0S,EAAK9P,EAAKnB,OAAQzB,EAAI0S,IAAM1S,EAC1C2B,KAAK6c,oBAAoB5b,EAAK5C,GAAI0d,QAGpC/b,KAAK6c,oBAAoB5b,EAAM8a,EAEnC,EAaF2B,GAAW7Z,UAAU8Z,GAYrBD,GAAW7Z,UAAUsZ,KASrBO,GAAW7Z,UAAU+Z,GAkBrB,UCjLO,MAAMU,WAAoB/B,GAM/BnQ,YAAYnL,EAAMvB,EAAK6e,GACrBxP,MAAM9N,GAONjB,KAAKN,IAAMA,EAQXM,KAAKue,SAAWA,CAClB,EAoOF,OA/KA,cAAyB,GAIvBnS,YAAYoS,GACVzP,QAKA/O,KAAK2d,GAKL3d,KAAKmd,KAKLnd,KAAK4d,GAML,EAAO5d,MAMPA,KAAKye,QAAU,UAEA1S,IAAXyS,GACFxe,KAAK0e,cAAcF,EAEvB,CAQAG,IAAIjf,GACF,IAAIb,EAIJ,OAHImB,KAAKye,SAAWze,KAAKye,QAAQG,eAAelf,KAC9Cb,EAAQmB,KAAKye,QAAQ/e,IAEhBb,CACT,CAOAggB,UACE,OAAQ7e,KAAKye,SAAWrF,OAAO3Z,KAAKO,KAAKye,UAAa,EACxD,CAOAK,gBACE,OAAQ9e,KAAKye,SAAWrF,OAAOC,OAAO,CAAC,EAAGrZ,KAAKye,UAAa,CAAC,CAC/D,CAKAM,gBACE,QAAS/e,KAAKye,OAChB,CAMAO,OAAOtf,EAAK6e,GACV,IAAIU,EACJA,EAAY,UAAUvf,IAClBM,KAAK+c,YAAYkC,IACnBjf,KAAKmc,cAAc,IAAImC,GAAYW,EAAWvf,EAAK6e,IAErDU,EAAYC,GACRlf,KAAK+c,YAAYkC,IACnBjf,KAAKmc,cAAc,IAAImC,GAAYW,EAAWvf,EAAK6e,GAEvD,CAMAY,kBAAkBzf,EAAKqc,GACrB/b,KAAK8b,iBAAiB,UAAUpc,IAAOqc,EACzC,CAMAqD,qBAAqB1f,EAAKqc,GACxB/b,KAAK6c,oBAAoB,UAAUnd,IAAOqc,EAC5C,CASA/U,IAAItH,EAAKb,EAAOwgB,GACd,MAAMb,EAASxe,KAAKye,UAAYze,KAAKye,QAAU,CAAC,GAChD,GAAIY,EACFb,EAAO9e,GAAOb,MACT,CACL,MAAM0f,EAAWC,EAAO9e,GACxB8e,EAAO9e,GAAOb,EACV0f,IAAa1f,GACfmB,KAAKgf,OAAOtf,EAAK6e,EAErB,CACF,CASAG,cAAcF,EAAQa,GACpB,IAAK,MAAM3f,KAAO8e,EAChBxe,KAAKgH,IAAItH,EAAK8e,EAAO9e,GAAM2f,EAE/B,CAOAC,gBAAgBtP,GACTA,EAAOyO,SAGZrF,OAAOC,OAAOrZ,KAAKye,UAAYze,KAAKye,QAAU,CAAC,GAAIzO,EAAOyO,QAC5D,CAQAc,MAAM7f,EAAK2f,GACT,GAAIrf,KAAKye,SAAW/e,KAAOM,KAAKye,QAAS,CACvC,MAAMF,EAAWve,KAAKye,QAAQ/e,UACvBM,KAAKye,QAAQ/e,GAChB,GAAQM,KAAKye,WACfze,KAAKye,QAAU,MAEZY,GACHrf,KAAKgf,OAAOtf,EAAK6e,EAErB,CACF,GCjQF,MAAMiB,GACiB,oBAAdC,gBAA4D,IAAxBA,UAAUC,UACjDD,UAAUC,UAAUC,cACpB,GAkDOC,IA5CUJ,GAAGtD,SAAS,WAMbsD,GAAGtD,SAAS,YAAcsD,GAAGtD,SAAS,WAQzDsD,GAAGtD,SAAS,iBACX,wCAAwC2D,KAAKL,KAM3BA,GAAGtD,SAAS,WAAcsD,GAAGtD,SAAS,QAMzCsD,GAAGtD,SAAS,aAUD,oBAArB4D,kBAAmCA,iBAQb,oBAAtBC,mBACoB,oBAApBC,iBACPC,gBAAgBF,mBAMLG,GACM,oBAAVC,OAAyBA,MAAMtc,UAAU2B,OCtC5C4a,ID2CiC,WACrC,IAAIC,GAAU,EACd,IACE,MAAMhU,EAAU+M,OAAOkH,eAAe,CAAC,EAAG,UAAW,CACnD3B,IAAK,WACH0B,GAAU,CACZ,IAGFE,OAAOzE,iBAAiB,IAAK,KAAMzP,GACnCkU,OAAO1D,oBAAoB,IAAK,KAAMxQ,EAGxC,CAFE,MAAO+J,GAET,CAED,CAfsC,GC3C1B,IAAI3G,MAAM,IAehB,SAAS,GAAMwI,GACpB,OAAOjR,GAAIiR,EAAW,EAAG,EAAG,EAAG,EAAG,EAAG,EACvC,CASO,SAASuI,GAASC,EAAYC,GACnC,MAAMC,EAAKF,EAAW,GAChB7a,EAAK6a,EAAW,GAChBhL,EAAKgL,EAAW,GAChBG,EAAKH,EAAW,GAChBI,EAAKJ,EAAW,GAChBK,EAAKL,EAAW,GAChBM,EAAKL,EAAW,GAChB7a,EAAK6a,EAAW,GAChBhL,EAAKgL,EAAW,GAChBM,EAAKN,EAAW,GAChBO,EAAKP,EAAW,GAChBQ,EAAKR,EAAW,GAStB,OAPAD,EAAW,GAAKE,EAAKI,EAAKtL,EAAK5P,EAC/B4a,EAAW,GAAK7a,EAAKmb,EAAKH,EAAK/a,EAC/B4a,EAAW,GAAKE,EAAKjL,EAAKD,EAAKuL,EAC/BP,EAAW,GAAK7a,EAAK8P,EAAKkL,EAAKI,EAC/BP,EAAW,GAAKE,EAAKM,EAAKxL,EAAKyL,EAAKL,EACpCJ,EAAW,GAAK7a,EAAKqb,EAAKL,EAAKM,EAAKJ,EAE7BL,CACT,CAaO,SAASzZ,GAAIiR,EAAWtP,EAAG/D,EAAG9F,EAAGR,EAAGP,EAAG+K,GAO5C,OANAmP,EAAU,GAAKtP,EACfsP,EAAU,GAAKrT,EACfqT,EAAU,GAAKnZ,EACfmZ,EAAU,GAAK3Z,EACf2Z,EAAU,GAAKla,EACfka,EAAU,GAAKnP,EACRmP,CACT,CA2BO,SAAShN,GAAMgN,EAAW3G,GAC/B,MAAMnI,EAAImI,EAAW,GACf5B,EAAI4B,EAAW,GAGrB,OAFAA,EAAW,GAAK2G,EAAU,GAAK9O,EAAI8O,EAAU,GAAKvI,EAAIuI,EAAU,GAChE3G,EAAW,GAAK2G,EAAU,GAAK9O,EAAI8O,EAAU,GAAKvI,EAAIuI,EAAU,GACzD3G,CACT,CAqBO,SAAS,GAAM2G,EAAW9O,EAAGuG,GAClC,OAAO8Q,GAASvI,EAAWjR,GAAIoZ,GAAMjX,EAAG,EAAG,EAAGuG,EAAG,EAAG,GACtD,CAqCO,SAASyR,GAAQlJ,EAAWmJ,EAAKC,EAAKC,EAAIC,EAAIC,EAAOC,EAAKC,GAC/D,MAAMlO,EAAM9U,KAAK8U,IAAIgO,GACflO,EAAM5U,KAAK4U,IAAIkO,GAOrB,OANAvJ,EAAU,GAAKqJ,EAAKhO,EACpB2E,EAAU,GAAKsJ,EAAK/N,EACpByE,EAAU,IAAMqJ,EAAK9N,EACrByE,EAAU,GAAKsJ,EAAKjO,EACpB2E,EAAU,GAAKwJ,EAAMH,EAAKhO,EAAMoO,EAAMJ,EAAK9N,EAAM4N,EACjDnJ,EAAU,GAAKwJ,EAAMF,EAAK/N,EAAMkO,EAAMH,EAAKjO,EAAM+N,EAC1CpJ,CACT,CAoCO,SAAS0J,GAAYrH,EAAQtK,GAClC,MAAM4R,GAyBoBC,EAzBF7R,GA0Bb,GAAK6R,EAAI,GAAKA,EAAI,GAAKA,EAAI,GADjC,IAAqBA,EAxB1BpR,EAAe,IAARmR,EAAW,IAElB,MAAMjZ,EAAIqH,EAAO,GACXpL,EAAIoL,EAAO,GACXlR,EAAIkR,EAAO,GACX1R,EAAI0R,EAAO,GACXjS,EAAIiS,EAAO,GACXlH,EAAIkH,EAAO,GASjB,OAPAsK,EAAO,GAAKhc,EAAIsjB,EAChBtH,EAAO,IAAM1V,EAAIgd,EACjBtH,EAAO,IAAMxb,EAAI8iB,EACjBtH,EAAO,GAAK3R,EAAIiZ,EAChBtH,EAAO,IAAMxb,EAAIgK,EAAIxK,EAAIP,GAAK6jB,EAC9BtH,EAAO,KAAO3R,EAAIG,EAAIlE,EAAI7G,GAAK6jB,EAExBtH,CACT,CAeA,IAAIwH,GAQG,SAAS,GAASD,GACvB,MAAME,EAAkB,UAAYF,EAAIhiB,KAAK,MAAQ,IACrD,GAAI+f,GACF,OAAOmC,EAET,MAAMC,EACJF,KAAuBA,GAAqBG,SAASC,cAAc,QAErE,OADAF,EAAKG,MAAMlK,UAAY8J,EAChBC,EAAKG,MAAMlK,SACpB,CCnRO,SAASmK,GACdlQ,EACAvU,EACAuG,EACAiO,EACA8F,EACAhH,GAEAA,EAAOA,GAAc,GACrB,IAAI5S,EAAI,EACR,IAAK,IAAIgkB,EAAI1kB,EAAQ0kB,EAAIne,EAAKme,GAAKlQ,EAAQ,CACzC,MAAMhJ,EAAI+I,EAAgBmQ,GACpB3S,EAAIwC,EAAgBmQ,EAAI,GAC9BpR,EAAK5S,KAAO4Z,EAAU,GAAK9O,EAAI8O,EAAU,GAAKvI,EAAIuI,EAAU,GAC5DhH,EAAK5S,KAAO4Z,EAAU,GAAK9O,EAAI8O,EAAU,GAAKvI,EAAIuI,EAAU,EAC9D,CAIA,OAHIhH,GAAQA,EAAKnR,QAAUzB,IACzB4S,EAAKnR,OAASzB,GAET4S,CACT,CAYO,SAAS,GACdiB,EACAvU,EACAuG,EACAiO,EACAqP,EACAc,EACArR,GAEAA,EAAOA,GAAc,GACrB,MAAMqC,EAAM5U,KAAK4U,IAAIkO,GACfhO,EAAM9U,KAAK8U,IAAIgO,GACfe,EAAUD,EAAO,GACjBE,EAAUF,EAAO,GACvB,IAAIjkB,EAAI,EACR,IAAK,IAAIgkB,EAAI1kB,EAAQ0kB,EAAIne,EAAKme,GAAKlQ,EAAQ,CACzC,MAAMsQ,EAASvQ,EAAgBmQ,GAAKE,EAC9BG,EAASxQ,EAAgBmQ,EAAI,GAAKG,EACxCvR,EAAK5S,KAAOkkB,EAAUE,EAASnP,EAAMoP,EAASlP,EAC9CvC,EAAK5S,KAAOmkB,EAAUC,EAASjP,EAAMkP,EAASpP,EAC9C,IAAK,IAAIqP,EAAIN,EAAI,EAAGM,EAAIN,EAAIlQ,IAAUwQ,EACpC1R,EAAK5S,KAAO6T,EAAgByQ,EAEhC,CAIA,OAHI1R,GAAQA,EAAKnR,QAAUzB,IACzB4S,EAAKnR,OAASzB,GAET4S,CACT,CCtCA,MAAM2R,GFCG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GEsTzB,OAzSA,cAAuB,GACrBxW,cACE2C,QAMA/O,KAAKyM,QrB4IA,CAAChO,IAAUA,KAAU,KAAW,KqBtIrCuB,KAAK6iB,iBAAmB,EAMxB7iB,KAAK8iB,yCAA2C,EAMhD9iB,KAAK+iB,2BAA6B,EAUlC/iB,KAAKgjB,4BV/CF,SAAoBpb,GACzB,IAGIqb,EAGAC,EAEAC,EARAC,GAAS,EAUb,OAAO,WACL,MAAMC,EAAW5T,MAAM5L,UAAUlE,MAAMQ,KAAKmd,WAO5C,OANK8F,GAAUpjB,OAASmjB,GAAa,GAAYE,EAAUH,KACzDE,GAAS,EACTD,EAAWnjB,KACXkjB,EAAWG,EACXJ,EAAarb,EAAGqD,MAAMjL,KAAMsd,YAEvB2F,CACT,CACF,CU0BuCK,EAAW,SAC5CC,EACAC,EACAvL,GAEA,IAAKA,EACH,OAAOjY,KAAKyjB,sBAAsBD,GAEpC,MAAMtJ,EAAQla,KAAKka,QAEnB,OADAA,EAAMlG,eAAeiE,GACdiC,EAAMuJ,sBAAsBD,EACrC,GACF,CASAE,oBAAoBF,EAAkBvL,GACpC,OAAOjY,KAAKgjB,4BACVhjB,KAAKge,cACLwF,EACAvL,EAEJ,CAOAiC,QACE,OAAO,GACT,CAUAyJ,eAAexa,EAAGuG,EAAGkU,EAAcC,GACjC,OAAO,GACT,CAOAtS,WAAWpI,EAAGuG,GACZ,MAAMoU,EAAQ9jB,KAAK+jB,gBAAgB,CAAC5a,EAAGuG,IACvC,OAAOoU,EAAM,KAAO3a,GAAK2a,EAAM,KAAOpU,CACxC,CAUAqU,gBAAgB7U,EAAO0U,GAGrB,OAFAA,EAAeA,GAA8B,CAACplB,IAAKA,KACnDwB,KAAK2jB,eAAezU,EAAM,GAAIA,EAAM,GAAI0U,EAAcnlB,KAC/CmlB,CACT,CASAI,qBAAqB1S,GACnB,OAAOtR,KAAKuR,WAAWD,EAAW,GAAIA,EAAW,GACnD,CAQA2S,cAAcvX,GACZ,OAAO,GACT,CAQAe,UAAUf,GACR,GAAI1M,KAAK6iB,iBAAmB7iB,KAAKge,cAAe,CAC9C,MAAMtR,EAAS1M,KAAKikB,cAAcjkB,KAAKyM,UACnCxN,MAAMyN,EAAO,KAAOzN,MAAMyN,EAAO,MACnCqF,EAAoBrF,GAEtB1M,KAAK6iB,gBAAkB7iB,KAAKge,aAC9B,CACA,OrBqgBG,SAAwBtR,EAAQuE,GACrC,OAAIA,GACFA,EAAK,GAAKvE,EAAO,GACjBuE,EAAK,GAAKvE,EAAO,GACjBuE,EAAK,GAAKvE,EAAO,GACjBuE,EAAK,GAAKvE,EAAO,GACVuE,GAEFvE,CACT,CqB9gBWwX,CAAelkB,KAAKyM,QAASC,EACtC,CAUAyX,OAAO3C,EAAOc,GACZ,GACF,CAYA8B,MAAM9C,EAAIC,EAAIe,GACZ,GACF,CAWA+B,SAASC,GACP,OAAOtkB,KAAKyjB,sBAAsBa,EAAYA,EAChD,CAUAb,sBAAsBD,GACpB,OAAO,GACT,CAOAlK,UACE,OAAO,GACT,CAWAtF,eAAe9D,GACb,GACF,CAQAqU,iBAAiB7X,GACf,OAAO,GACT,CAUA8X,UAAU/B,EAAQC,GAChB,GACF,CAiBAzK,UAAUjI,EAAQC,GAEhB,MAAMwU,EAAa,GAAczU,GAC3BE,EACqB,eAAzBuU,EAAW/W,WACP,SAAUgX,EAAeC,EAAgBxS,GACvC,MAAMyS,EAAcH,EAAWhX,YACzBoX,EAAkBJ,EAAW7W,iBAC7BwW,EAAQ,GAAUS,GAAmB,GAAUD,GAmBrD,OAlBAzD,GACEyB,GACAiC,EAAgB,GAChBA,EAAgB,GAChBT,GACCA,EACD,EACA,EACA,GAEFhC,GACEsC,EACA,EACAA,EAAc5kB,OACdqS,EACAyQ,GACA+B,GAEKzM,GAAauM,EAAYxU,EAAzBiI,CACLwM,EACAC,EACAxS,EAEJ,EACA+F,GAAauM,EAAYxU,GAE/B,OADAjQ,KAAKgU,eAAe9D,GACblQ,IACT,GC7BK,SAAS8kB,GAAmBC,GACjC,IAAI5S,EAQJ,MAPc,MAAV4S,EACF5S,EAAS,EACU,OAAV4S,GAA6B,OAAVA,EAC5B5S,EAAS,EACU,QAAV4S,IACT5S,EAAS,GAEkB,CAC/B,CAwBA,OA5UA,cAA6B,GAC3B/F,cACE2C,QAMA/O,KAAK+kB,OAAS,KAMd/kB,KAAKmS,OAAS,EAMdnS,KAAKkS,gBAAkB,IACzB,CAOA+R,cAAcvX,GACZ,OAAOuF,EACLjS,KAAKkS,gBACL,EACAlS,KAAKkS,gBAAgBpS,OACrBE,KAAKmS,OACLzF,EAEJ,CAMAsY,iBACE,OAAO,GACT,CAOAC,qBACE,OAAOjlB,KAAKkS,gBAAgBvS,MAAM,EAAGK,KAAKmS,OAC5C,CAKA+S,qBACE,OAAOllB,KAAKkS,eACd,CAOAiT,oBACE,OAAOnlB,KAAKkS,gBAAgBvS,MAC1BK,KAAKkS,gBAAgBpS,OAASE,KAAKmS,OAEvC,CAOAiT,YACE,OAAOplB,KAAK+kB,MACd,CAOAtB,sBAAsBD,GAOpB,GANIxjB,KAAK+iB,6BAA+B/iB,KAAKge,gBAC3Che,KAAK8iB,yCAA2C,EAChD9iB,KAAK+iB,2BAA6B/iB,KAAKge,eAKvCwF,EAAmB,GACgC,IAAlDxjB,KAAK8iB,0CACJU,GAAoBxjB,KAAK8iB,yCAE3B,OAAO9iB,KAGT,MAAMqlB,EACJrlB,KAAKslB,8BAA8B9B,GAErC,OADkC6B,EAAmBH,qBACvBplB,OAASE,KAAKkS,gBAAgBpS,OACnDulB,GAQTrlB,KAAK8iB,yCAA2CU,EACzCxjB,KACT,CAOAslB,8BAA8B9B,GAC5B,OAAOxjB,IACT,CAKAulB,YACE,OAAOvlB,KAAKmS,MACd,CAMAqT,mBAAmBT,EAAQ7S,GACzBlS,KAAKmS,OAAS2S,GAAmBC,GACjC/kB,KAAK+kB,OAASA,EACd/kB,KAAKkS,gBAAkBA,CACzB,CAOAuT,eAAe5U,EAAakU,GAC1B,GACF,CAQAW,UAAUX,EAAQlU,EAAa8U,GAE7B,IAAIxT,EACJ,GAAI4S,EACF5S,EAAS2S,GAAmBC,OACvB,CACL,IAAK,IAAI1mB,EAAI,EAAGA,EAAIsnB,IAAWtnB,EAAG,CAChC,GAA2B,IAAvBwS,EAAY/Q,OAGd,OAFAE,KAAK+kB,OAAS,UACd/kB,KAAKmS,OAAS,GAGhBtB,EAAoCA,EAAY,EAClD,CACAsB,EAAStB,EAAY/Q,OACrBilB,EA4GN,SAA4B5S,GAC1B,IAAI4S,EACU,GAAV5S,EACF4S,EAAS,KACU,GAAV5S,EACT4S,EAAS,MACU,GAAV5S,IACT4S,EAAS,QAEX,OAA6D,CAC/D,CAtHea,CAAmBzT,EAC9B,CACAnS,KAAK+kB,OAASA,EACd/kB,KAAKmS,OAASA,CAChB,CAWA6B,eAAe9D,GACTlQ,KAAKkS,kBACPhC,EAAYlQ,KAAKkS,gBAAiBlS,KAAKkS,gBAAiBlS,KAAKmS,QAC7DnS,KAAK8d,UAET,CASAqG,OAAO3C,EAAOc,GACZ,MAAMpQ,EAAkBlS,KAAKklB,qBAC7B,GAAIhT,EAAiB,CACnB,MAAMC,EAASnS,KAAKulB,YACpB,GACErT,EACA,EACAA,EAAgBpS,OAChBqS,EACAqP,EACAc,EACApQ,GAEFlS,KAAK8d,SACP,CACF,CAWAsG,MAAM9C,EAAIC,EAAIe,QACDvW,IAAPwV,IACFA,EAAKD,GAEFgB,IACHA,EAASxP,EAAU9S,KAAKyN,cAE1B,MAAMyE,EAAkBlS,KAAKklB,qBAC7B,GAAIhT,EAAiB,CACnB,MAAMC,EAASnS,KAAKulB,aFvKnB,SACLrT,EACAvU,EACAuG,EACAiO,EACAmP,EACAC,EACAe,EACArR,GAEAA,EAAOA,GAAc,GACrB,MAAMsR,EAAUD,EAAO,GACjBE,EAAUF,EAAO,GACvB,IAAIjkB,EAAI,EACR,IAAK,IAAIgkB,EAAI1kB,EAAQ0kB,EAAIne,EAAKme,GAAKlQ,EAAQ,CACzC,MAAMsQ,EAASvQ,EAAgBmQ,GAAKE,EAC9BG,EAASxQ,EAAgBmQ,EAAI,GAAKG,EACxCvR,EAAK5S,KAAOkkB,EAAUjB,EAAKmB,EAC3BxR,EAAK5S,KAAOmkB,EAAUjB,EAAKmB,EAC3B,IAAK,IAAIC,EAAIN,EAAI,EAAGM,EAAIN,EAAIlQ,IAAUwQ,EACpC1R,EAAK5S,KAAO6T,EAAgByQ,EAEhC,CACI1R,GAAQA,EAAKnR,QAAUzB,IACzB4S,EAAKnR,OAASzB,EAGlB,CE6IM,CACE6T,EACA,EACAA,EAAgBpS,OAChBqS,EACAmP,EACAC,EACAe,EACApQ,GAEFlS,KAAK8d,SACP,CACF,CASA0G,UAAU/B,EAAQC,GAChB,MAAMxQ,EAAkBlS,KAAKklB,qBAC7B,GAAIhT,EAAiB,CACnB,MAAMC,EAASnS,KAAKulB,aFzJnB,SACLrT,EACAvU,EACAuG,EACAiO,EACAsQ,EACAC,EACAzR,GAEAA,EAAOA,GAAc,GACrB,IAAI5S,EAAI,EACR,IAAK,IAAIgkB,EAAI1kB,EAAQ0kB,EAAIne,EAAKme,GAAKlQ,EAAQ,CACzClB,EAAK5S,KAAO6T,EAAgBmQ,GAAKI,EACjCxR,EAAK5S,KAAO6T,EAAgBmQ,EAAI,GAAKK,EACrC,IAAK,IAAIC,EAAIN,EAAI,EAAGM,EAAIN,EAAIlQ,IAAUwQ,EACpC1R,EAAK5S,KAAO6T,EAAgByQ,EAEhC,CACI1R,GAAQA,EAAKnR,QAAUzB,IACzB4S,EAAKnR,OAASzB,EAGlB,CEoIM,CACE6T,EACA,EACAA,EAAgBpS,OAChBqS,EACAsQ,EACAC,EACAxQ,GAEFlS,KAAK8d,SACP,CACF,GClRF,SAAS+H,GACP3T,EACA4T,EACAC,EACA5T,EACAhJ,EACAuG,EACAkU,GAEA,MAAM9O,EAAK5C,EAAgB4T,GACrB/Q,EAAK7C,EAAgB4T,EAAU,GAC/B3U,EAAKe,EAAgB6T,GAAWjR,EAChC1D,EAAKc,EAAgB6T,EAAU,GAAKhR,EAC1C,IAAIpX,EACJ,GAAW,IAAPwT,GAAmB,IAAPC,EACdzT,EAASmoB,MACJ,CACL,MAAMrd,IAAMU,EAAI2L,GAAM3D,GAAMzB,EAAIqF,GAAM3D,IAAOD,EAAKA,EAAKC,EAAKA,GAC5D,GAAI3I,EAAI,EACN9K,EAASooB,MACJ,IAAItd,EAAI,EAAG,CAChB,IAAK,IAAIpK,EAAI,EAAGA,EAAI8T,IAAU9T,EAC5BulB,EAAavlB,GAAK8W,GAChBjD,EAAgB4T,EAAUznB,GAC1B6T,EAAgB6T,EAAU1nB,GAC1BoK,GAIJ,YADAmb,EAAa9jB,OAASqS,EAExB,CACExU,EAASmoB,CACX,CACF,CACA,IAAK,IAAIznB,EAAI,EAAGA,EAAI8T,IAAU9T,EAC5BulB,EAAavlB,GAAK6T,EAAgBvU,EAASU,GAE7CulB,EAAa9jB,OAASqS,CACxB,CAYO,SAAS6T,GAAgB9T,EAAiBvU,EAAQuG,EAAKiO,EAAQjJ,GACpE,IAAI4L,EAAK5C,EAAgBvU,GACrBoX,EAAK7C,EAAgBvU,EAAS,GAClC,IAAKA,GAAUwU,EAAQxU,EAASuG,EAAKvG,GAAUwU,EAAQ,CACrD,MAAM6C,EAAK9C,EAAgBvU,GACrBsX,EAAK/C,EAAgBvU,EAAS,GAC9BsoB,EAAe,GAAUnR,EAAIC,EAAIC,EAAIC,GACvCgR,EAAe/c,IACjBA,EAAM+c,GAERnR,EAAKE,EACLD,EAAKE,CACP,CACA,OAAO/L,CACT,CAUO,SAASgd,GACdhU,EACAvU,EACAwoB,EACAhU,EACAjJ,GAEA,IAAK,IAAI7K,EAAI,EAAG0S,EAAKoV,EAAKrmB,OAAQzB,EAAI0S,IAAM1S,EAAG,CAC7C,MAAM6F,EAAMiiB,EAAK9nB,GACjB6K,EAAM8c,GAAgB9T,EAAiBvU,EAAQuG,EAAKiO,EAAQjJ,GAC5DvL,EAASuG,CACX,CACA,OAAOgF,CACT,CAuCO,SAASkd,GACdlU,EACAvU,EACAuG,EACAiO,EACAkU,EACAC,EACAnd,EACAuG,EACAkU,EACAC,EACA0C,GAEA,GAAI5oB,GAAUuG,EACZ,OAAO2f,EAET,IAAIxlB,EAAGmoB,EACP,GAAiB,IAAbH,EAAgB,CAQlB,GANAG,EAAkB,GAChBrd,EACAuG,EACAwC,EAAgBvU,GAChBuU,EAAgBvU,EAAS,IAEvB6oB,EAAkB3C,EAAoB,CACxC,IAAKxlB,EAAI,EAAGA,EAAI8T,IAAU9T,EACxBulB,EAAavlB,GAAK6T,EAAgBvU,EAASU,GAG7C,OADAulB,EAAa9jB,OAASqS,EACfqU,CACT,CACA,OAAO3C,CACT,CACA0C,EAAWA,GAAsB,CAAC/nB,IAAKA,KACvC,IAAIwe,EAAQrf,EAASwU,EACrB,KAAO6K,EAAQ9Y,GAWb,GAVA2hB,GACE3T,EACA8K,EAAQ7K,EACR6K,EACA7K,EACAhJ,EACAuG,EACA6W,GAEFC,EAAkB,GAAUrd,EAAGuG,EAAG6W,EAAS,GAAIA,EAAS,IACpDC,EAAkB3C,EAAoB,CAExC,IADAA,EAAqB2C,EAChBnoB,EAAI,EAAGA,EAAI8T,IAAU9T,EACxBulB,EAAavlB,GAAKkoB,EAASloB,GAE7BulB,EAAa9jB,OAASqS,EACtB6K,GAAS7K,CACX,MAWE6K,GACE7K,EACAzT,KAAKwK,KACDxK,KAAKuK,KAAKud,GAAmB9nB,KAAKuK,KAAK4a,IACvCwC,EACA,EACF,GAIR,GAAIC,IAEFT,GACE3T,EACAhO,EAAMiO,EACNxU,EACAwU,EACAhJ,EACAuG,EACA6W,GAEFC,EAAkB,GAAUrd,EAAGuG,EAAG6W,EAAS,GAAIA,EAAS,IACpDC,EAAkB3C,GAAoB,CAExC,IADAA,EAAqB2C,EAChBnoB,EAAI,EAAGA,EAAI8T,IAAU9T,EACxBulB,EAAavlB,GAAKkoB,EAASloB,GAE7BulB,EAAa9jB,OAASqS,CACxB,CAEF,OAAO0R,CACT,CAgBO,SAAS4C,GACdvU,EACAvU,EACAwoB,EACAhU,EACAkU,EACAC,EACAnd,EACAuG,EACAkU,EACAC,EACA0C,GAEAA,EAAWA,GAAsB,CAAC/nB,IAAKA,KACvC,IAAK,IAAIH,EAAI,EAAG0S,EAAKoV,EAAKrmB,OAAQzB,EAAI0S,IAAM1S,EAAG,CAC7C,MAAM6F,EAAMiiB,EAAK9nB,GACjBwlB,EAAqBuC,GACnBlU,EACAvU,EACAuG,EACAiO,EACAkU,EACAC,EACAnd,EACAuG,EACAkU,EACAC,EACA0C,GAEF5oB,EAASuG,CACX,CACA,OAAO2f,CACT,CCtQO,SAAS6C,GACdxU,EACAvU,EACAkT,EACAsB,GAEA,IAAK,IAAI9T,EAAI,EAAG0S,EAAKF,EAAY/Q,OAAQzB,EAAI0S,IAAM1S,EAAG,CACpD,MAAMiT,EAAaT,EAAYxS,GAC/B,IAAK,IAAIgkB,EAAI,EAAGA,EAAIlQ,IAAUkQ,EAC5BnQ,EAAgBvU,KAAY2T,EAAW+Q,EAE3C,CACA,OAAO1kB,CACT,CAUO,SAASgpB,GACdzU,EACAvU,EACAipB,EACAzU,EACAgU,GAEAA,EAAOA,GAAc,GACrB,IAAI9nB,EAAI,EACR,IAAK,IAAIgkB,EAAI,EAAGwE,EAAKD,EAAa9mB,OAAQuiB,EAAIwE,IAAMxE,EAAG,CACrD,MAAMne,EAAMwiB,GACVxU,EACAvU,EACAipB,EAAavE,GACblQ,GAEFgU,EAAK9nB,KAAO6F,EACZvG,EAASuG,CACX,CAEA,OADAiiB,EAAKrmB,OAASzB,EACP8nB,CACT,CCqBO,SAASW,GACd5U,EACAvU,EACAuG,EACAiO,EACAqR,EACAuD,EACAC,GAEA,MAAMpe,GAAK1E,EAAMvG,GAAUwU,EAC3B,GAAIvJ,EAAI,EAAG,CACT,KAAOjL,EAASuG,EAAKvG,GAAUwU,EAC7B4U,EAA0BC,KAAsB9U,EAAgBvU,GAChEopB,EAA0BC,KACxB9U,EAAgBvU,EAAS,GAE7B,OAAOqpB,CACT,CAEA,MAAMC,EAAU,IAAIxX,MAAM7G,GAC1Bqe,EAAQ,GAAK,EACbA,EAAQre,EAAI,GAAK,EAEjB,MAAMpJ,EAAQ,CAAC7B,EAAQuG,EAAMiO,GAC7B,IAAI6K,EAAQ,EACZ,KAAOxd,EAAMM,OAAS,GAAG,CACvB,MAAMonB,EAAO1nB,EAAMuK,MACbod,EAAQ3nB,EAAMuK,MACpB,IAAIqd,EAAqB,EACzB,MAAMtS,EAAK5C,EAAgBiV,GACrBpS,EAAK7C,EAAgBiV,EAAQ,GAC7BnS,EAAK9C,EAAgBgV,GACrBjS,EAAK/C,EAAgBgV,EAAO,GAClC,IAAK,IAAI7oB,EAAI8oB,EAAQhV,EAAQ9T,EAAI6oB,EAAM7oB,GAAK8T,EAAQ,CAClD,MAEMqU,EAAkB3R,GAFd3C,EAAgB7T,GAChB6T,EAAgB7T,EAAI,GACuByW,EAAIC,EAAIC,EAAIC,GAC7DuR,EAAkBY,IACpBpK,EAAQ3e,EACR+oB,EAAqBZ,EAEzB,CACIY,EAAqB5D,IACvByD,GAASjK,EAAQrf,GAAUwU,GAAU,EACjCgV,EAAQhV,EAAS6K,GACnBxd,EAAMU,KAAKinB,EAAOnK,GAEhBA,EAAQ7K,EAAS+U,GACnB1nB,EAAMU,KAAK8c,EAAOkK,GAGxB,CACA,IAAK,IAAI7oB,EAAI,EAAGA,EAAIuK,IAAKvK,EACnB4oB,EAAQ5oB,KACV0oB,EAA0BC,KACxB9U,EAAgBvU,EAASU,EAAI8T,GAC/B4U,EAA0BC,KACxB9U,EAAgBvU,EAASU,EAAI8T,EAAS,IAG5C,OAAO6U,CACT,CAcO,SAASK,GACdnV,EACAvU,EACAwoB,EACAhU,EACAqR,EACAuD,EACAC,EACAM,GAEA,IAAK,IAAIjpB,EAAI,EAAG0S,EAAKoV,EAAKrmB,OAAQzB,EAAI0S,IAAM1S,EAAG,CAC7C,MAAM6F,EAAMiiB,EAAK9nB,GACjB2oB,EAAmBF,GACjB5U,EACAvU,EACAuG,EACAiO,EACAqR,EACAuD,EACAC,GAEFM,EAAepnB,KAAK8mB,GACpBrpB,EAASuG,CACX,CACA,OAAO8iB,CACT,CAuGO,SAASO,GAAK1oB,EAAOylB,GAC1B,OAAOA,EAAY5lB,KAAK4W,MAAMzW,EAAQylB,EACxC,CAqBO,SAASkD,GACdtV,EACAvU,EACAuG,EACAiO,EACAmS,EACAyC,EACAC,GAGA,GAAIrpB,GAAUuG,EACZ,OAAO8iB,EAGT,IAQIhS,EAAIC,EARJH,EAAKyS,GAAKrV,EAAgBvU,GAAS2mB,GACnCvP,EAAKwS,GAAKrV,EAAgBvU,EAAS,GAAI2mB,GAC3C3mB,GAAUwU,EAEV4U,EAA0BC,KAAsBlS,EAChDiS,EAA0BC,KAAsBjS,EAIhD,GAIE,GAHAC,EAAKuS,GAAKrV,EAAgBvU,GAAS2mB,GACnCrP,EAAKsS,GAAKrV,EAAgBvU,EAAS,GAAI2mB,IACvC3mB,GAAUwU,IACIjO,EAOZ,OAFA6iB,EAA0BC,KAAsBhS,EAChD+R,EAA0BC,KAAsB/R,EACzC+R,QAEFhS,GAAMF,GAAMG,GAAMF,GAC3B,KAAOpX,EAASuG,GAAK,CAEnB,MAAMujB,EAAKF,GAAKrV,EAAgBvU,GAAS2mB,GACnCoD,EAAKH,GAAKrV,EAAgBvU,EAAS,GAAI2mB,GAG7C,GAFA3mB,GAAUwU,EAENsV,GAAMzS,GAAM0S,GAAMzS,EACpB,SAGF,MAAMmM,EAAMpM,EAAKF,EACXuM,EAAMpM,EAAKF,EAEX0M,EAAMgG,EAAK3S,EACX4M,EAAMgG,EAAK3S,EAKfqM,EAAMM,GAAOL,EAAMI,IACjBL,EAAM,GAAKK,EAAML,GAAQA,GAAOK,GAAQL,EAAM,GAAKK,EAAML,KACzDC,EAAM,GAAKK,EAAML,GAAQA,GAAOK,GAAQL,EAAM,GAAKK,EAAML,IAG3DrM,EAAKyS,EACLxS,EAAKyS,IAMPX,EAA0BC,KAAsBhS,EAChD+R,EAA0BC,KAAsB/R,EAChDH,EAAKE,EACLD,EAAKE,EACLD,EAAKyS,EACLxS,EAAKyS,EACP,CAIA,OAFAX,EAA0BC,KAAsBhS,EAChD+R,EAA0BC,KAAsB/R,EACzC+R,CACT,CAcO,SAASW,GACdzV,EACAvU,EACAwoB,EACAhU,EACAmS,EACAyC,EACAC,EACAM,GAEA,IAAK,IAAIjpB,EAAI,EAAG0S,EAAKoV,EAAKrmB,OAAQzB,EAAI0S,IAAM1S,EAAG,CAC7C,MAAM6F,EAAMiiB,EAAK9nB,GACjB2oB,EAAmBQ,GACjBtV,EACAvU,EACAuG,EACAiO,EACAmS,EACAyC,EACAC,GAEFM,EAAepnB,KAAK8mB,GACpBrpB,EAASuG,CACX,CACA,OAAO8iB,CACT,CCjaO,SAASzP,GAAQrF,EAAiBvU,EAAQuG,EAAKiO,EAAQK,GAC5D,IAAIoV,EAEJ,IADAjqB,GAAUwU,EACHxU,EAASuG,EAAKvG,GAAUwU,EAK7B,GAJAyV,EAAMpV,EACJN,EAAgBvS,MAAMhC,EAASwU,EAAQxU,GACvCuU,EAAgBvS,MAAMhC,EAAQA,EAASwU,IAErCyV,EACF,OAAOA,EAGX,OAAO,CACT,CClBO,SAASC,GACd3V,EACAvU,EACAuG,EACAiO,EACAtB,GAEAA,OAA8B9E,IAAhB8E,EAA4BA,EAAc,GACxD,IAAIxS,EAAI,EACR,IAAK,IAAIgkB,EAAI1kB,EAAQ0kB,EAAIne,EAAKme,GAAKlQ,EACjCtB,EAAYxS,KAAO6T,EAAgBvS,MAAM0iB,EAAGA,EAAIlQ,GAGlD,OADAtB,EAAY/Q,OAASzB,EACdwS,CACT,CAUO,SAASiX,GACd5V,EACAvU,EACAwoB,EACAhU,EACAyU,GAEAA,OAAgC7a,IAAjB6a,EAA6BA,EAAe,GAC3D,IAAIvoB,EAAI,EACR,IAAK,IAAIgkB,EAAI,EAAGwE,EAAKV,EAAKrmB,OAAQuiB,EAAIwE,IAAMxE,EAAG,CAC7C,MAAMne,EAAMiiB,EAAK9D,GACjBuE,EAAavoB,KAAOwpB,GAClB3V,EACAvU,EACAuG,EACAiO,EACAyU,EAAavoB,IAEfV,EAASuG,CACX,CAEA,OADA0iB,EAAa9mB,OAASzB,EACfuoB,CACT,CAWO,SAASmB,GACd7V,EACAvU,EACAqqB,EACA7V,EACA8V,GAEAA,OAAkClc,IAAlBkc,EAA8BA,EAAgB,GAC9D,IAAI5pB,EAAI,EACR,IAAK,IAAIgkB,EAAI,EAAGwE,EAAKmB,EAAMloB,OAAQuiB,EAAIwE,IAAMxE,EAAG,CAC9C,MAAM8D,EAAO6B,EAAM3F,GACnB4F,EAAc5pB,KACI,IAAhB8nB,EAAKrmB,QAAgBqmB,EAAK,KAAOxoB,EAC7B,GACAmqB,GACE5V,EACAvU,EACAwoB,EACAhU,EACA8V,EAAc5pB,IAEtBV,EAASwoB,EAAKA,EAAKrmB,OAAS,EAC9B,CAEA,OADAmoB,EAAcnoB,OAASzB,EAChB4pB,CACT,CC9EO,SAASC,GACdhW,EACAvU,EACAuG,EACAiO,EACAgW,EACAlX,EACAzB,GAEA,IAAI3G,EAAGJ,EACP,MAAMG,GAAK1E,EAAMvG,GAAUwU,EAC3B,GAAU,IAANvJ,EACFC,EAAIlL,OACC,GAAU,IAANiL,EACTC,EAAIlL,EACJ8K,EAAI0f,OACC,GAAU,IAANvf,EAAS,CAClB,IAAIkM,EAAK5C,EAAgBvU,GACrBoX,EAAK7C,EAAgBvU,EAAS,GAC9BmC,EAAS,EACb,MAAMsoB,EAAoB,CAAC,GAC3B,IAAK,IAAI/pB,EAAIV,EAASwU,EAAQ9T,EAAI6F,EAAK7F,GAAK8T,EAAQ,CAClD,MAAM6C,EAAK9C,EAAgB7T,GACrB4W,EAAK/C,EAAgB7T,EAAI,GAC/ByB,GAAUpB,KAAKuK,MAAM+L,EAAKF,IAAOE,EAAKF,IAAOG,EAAKF,IAAOE,EAAKF,IAC9DqT,EAAkBloB,KAAKJ,GACvBgV,EAAKE,EACLD,EAAKE,CACP,CACA,MAAMqF,EAAS6N,EAAWroB,EACpBkd,ElBjCH,SAAsBqL,EAAUC,EAAQC,GAC7C,IAAIC,EAAKC,EACTF,EAAaA,GAAc3N,GAC3B,IAAI9Y,EAAM,EACNC,EAAOsmB,EAASvoB,OAChB4oB,GAAQ,EAEZ,KAAO5mB,EAAMC,GAGXymB,EAAM1mB,GAAQC,EAAOD,GAAQ,GAC7B2mB,GAAOF,EAAWF,EAASG,GAAMF,GAE7BG,EAAM,EAER3mB,EAAM0mB,EAAM,GAGZzmB,EAAOymB,EACPE,GAASD,GAKb,OAAOC,EAAQ5mB,GAAOA,CACxB,CkBQkB6mB,CAAaP,EAAmB9N,GAC1C0C,EAAQ,GACVvU,GACG6R,EAAS8N,GAAmBpL,EAAQ,KACpCoL,GAAmBpL,EAAQ,GAAKoL,GAAmBpL,EAAQ,IAC9DnU,EAAIlL,IAAWqf,EAAQ,GAAK7K,GAE5BtJ,EAAIlL,EAASqf,EAAQ7K,CAEzB,CACA3C,EAAYA,EAAY,EAAIA,EAAY,EACxCyB,EAAOA,GAAc,IAAIxB,MAAMD,GAC/B,IAAK,IAAInR,EAAI,EAAGA,EAAImR,IAAanR,EAC/B4S,EAAK5S,QACG0N,IAANlD,EACIrK,SACMuN,IAANtD,EACAyJ,EAAgBrJ,EAAIxK,GACpB8W,GAAKjD,EAAgBrJ,EAAIxK,GAAI6T,EAAgBrJ,EAAIsJ,EAAS9T,GAAIoK,GAEtE,OAAOwI,CACT,CAWO,SAAS2X,GACd1W,EACAvU,EACAuG,EACAiO,EACAnU,EACA6qB,GAEA,GAAI3kB,GAAOvG,EACT,OAAO,KAET,IAAI2T,EACJ,GAAItT,EAAIkU,EAAgBvU,EAASwU,EAAS,GACxC,OAAI0W,GACFvX,EAAaY,EAAgBvS,MAAMhC,EAAQA,EAASwU,GACpDb,EAAWa,EAAS,GAAKnU,EAClBsT,GAEF,KAET,GAAIY,EAAgBhO,EAAM,GAAKlG,EAC7B,OAAI6qB,GACFvX,EAAaY,EAAgBvS,MAAMuE,EAAMiO,EAAQjO,GACjDoN,EAAWa,EAAS,GAAKnU,EAClBsT,GAEF,KAGT,GAAItT,GAAKkU,EAAgBvU,EAASwU,EAAS,GACzC,OAAOD,EAAgBvS,MAAMhC,EAAQA,EAASwU,GAEhD,IAAI2W,EAAKnrB,EAASwU,EACd4W,EAAK7kB,EAAMiO,EACf,KAAO2W,EAAKC,GAAI,CACd,MAAMP,EAAOM,EAAKC,GAAO,EACrB/qB,EAAIkU,GAAiBsW,EAAM,GAAKrW,EAAS,GAC3C4W,EAAKP,EAELM,EAAKN,EAAM,CAEf,CACA,MAAMQ,EAAK9W,EAAgB4W,EAAK3W,EAAS,GACzC,GAAInU,GAAKgrB,EACP,OAAO9W,EAAgBvS,OAAOmpB,EAAK,GAAK3W,GAAS2W,EAAK,GAAK3W,EAASA,GAEtE,MACM1J,GAAKzK,EAAIgrB,IADJ9W,GAAiB4W,EAAK,GAAK3W,EAAS,GACpB6W,GAC3B1X,EAAa,GACb,IAAK,IAAIjT,EAAI,EAAGA,EAAI8T,EAAS,IAAK9T,EAChCiT,EAAWpR,KACTiV,GACEjD,GAAiB4W,EAAK,GAAK3W,EAAS9T,GACpC6T,EAAgB4W,EAAK3W,EAAS9T,GAC9BoK,IAKN,OADA6I,EAAWpR,KAAKlC,GACTsT,CACT,CC7HO,SAAS2X,GACd/W,EACAvU,EACAuG,EACAiO,EACAzF,GAmBA,OAjBgB6F,EACd7F,GAKA,SAAU4E,GACR,OAAQ4X,GACNhX,EACAvU,EACAuG,EACAiO,EACAb,EAAW,GACXA,EAAW,GAEf,GAGJ,CAWO,SAAS4X,GACdhX,EACAvU,EACAuG,EACAiO,EACAhJ,EACAuG,GASA,IAAIyZ,EAAK,EACLrU,EAAK5C,EAAgBhO,EAAMiO,GAC3B4C,EAAK7C,EAAgBhO,EAAMiO,EAAS,GACxC,KAAOxU,EAASuG,EAAKvG,GAAUwU,EAAQ,CACrC,MAAM6C,EAAK9C,EAAgBvU,GACrBsX,EAAK/C,EAAgBvU,EAAS,GAChCoX,GAAMrF,EACJuF,EAAKvF,IAAMsF,EAAKF,IAAOpF,EAAIqF,IAAO5L,EAAI2L,IAAOG,EAAKF,GAAM,GAC1DoU,IAEOlU,GAAMvF,IAAMsF,EAAKF,IAAOpF,EAAIqF,IAAO5L,EAAI2L,IAAOG,EAAKF,GAAM,GAClEoU,IAEFrU,EAAKE,EACLD,EAAKE,CACP,CACA,OAAc,IAAPkU,CACT,CAWO,SAASC,GACdlX,EACAvU,EACAwoB,EACAhU,EACAhJ,EACAuG,GAEA,GAAoB,IAAhByW,EAAKrmB,OACP,OAAO,EAET,IAAKopB,GAAqBhX,EAAiBvU,EAAQwoB,EAAK,GAAIhU,EAAQhJ,EAAGuG,GACrE,OAAO,EAET,IAAK,IAAIrR,EAAI,EAAG0S,EAAKoV,EAAKrmB,OAAQzB,EAAI0S,IAAM1S,EAC1C,GACE6qB,GAAqBhX,EAAiBiU,EAAK9nB,EAAI,GAAI8nB,EAAK9nB,GAAI8T,EAAQhJ,EAAGuG,GAEvE,OAAO,EAGX,OAAO,CACT,CC7FO,SAAS2Z,GACdnX,EACAvU,EACAuG,EACAiO,EACAzF,GAEA,MAAM4c,EAAoBlX,E9ByKnB,CAAC3T,IAAUA,KAAU,KAAW,K8BvKrCyT,EACAvU,EACAuG,EACAiO,GAEF,QAAK4B,GAAWrH,EAAQ4c,OAGpB9X,EAAe9E,EAAQ4c,KAGvBA,EAAkB,IAAM5c,EAAO,IAAM4c,EAAkB,IAAM5c,EAAO,KAGpE4c,EAAkB,IAAM5c,EAAO,IAAM4c,EAAkB,IAAM5c,EAAO,IAGjE6K,GACLrF,EACAvU,EACAuG,EACAiO,GAOA,SAAUoX,EAAQC,GAChB,O9B4qBC,SAA2B9c,EAAQ+c,EAAOvlB,GAC/C,IAAI6P,GAAa,EACjB,MAAM2V,EAAW/X,EAAuBjF,EAAQ+c,GAC1CE,EAAShY,EAAuBjF,EAAQxI,GAC9C,GACEwlB,IAAa7X,GACb8X,IAAW9X,EAEXkC,GAAa,MACR,CACL,MAAMtK,EAAOiD,EAAO,GACdhD,EAAOgD,EAAO,GACd/C,EAAO+C,EAAO,GACd9C,EAAO8C,EAAO,GACdkd,EAASH,EAAM,GACfI,EAASJ,EAAM,GACfK,EAAO5lB,EAAI,GACX6lB,EAAO7lB,EAAI,GACX8lB,GAASD,EAAOF,IAAWC,EAAOF,GACxC,IAAIzgB,EAAGuG,EACAia,EAAS9X,KAAyB6X,EAAW7X,KAElD1I,EAAI2gB,GAAQC,EAAOngB,GAAQogB,EAC3BjW,EAAa5K,GAAKM,GAAQN,GAAKQ,GAG9BoK,KACE4V,EAAS9X,IACV6X,EAAW7X,IAGbnC,EAAIqa,GAAQD,EAAOngB,GAAQqgB,EAC3BjW,EAAarE,GAAKhG,GAAQgG,GAAK9F,GAG9BmK,KACE4V,EAAS9X,IACV6X,EAAW7X,IAGb1I,EAAI2gB,GAAQC,EAAOrgB,GAAQsgB,EAC3BjW,EAAa5K,GAAKM,GAAQN,GAAKQ,GAG9BoK,KACE4V,EAAS9X,IACV6X,EAAW7X,IAGbnC,EAAIqa,GAAQD,EAAOrgB,GAAQugB,EAC3BjW,EAAarE,GAAKhG,GAAQgG,GAAK9F,EAEnC,CACA,OAAOmK,CACT,C8BluBakW,CAAkBvd,EAAQ6c,EAAQC,EAC3C,MAEJ,CAoCO,SAASU,GACdhY,EACAvU,EACAuG,EACAiO,EACAzF,GAEA,QAAI2c,GAAqBnX,EAAiBvU,EAAQuG,EAAKiO,EAAQzF,OAI7Dwc,GACEhX,EACAvU,EACAuG,EACAiO,EACAzF,EAAO,GACPA,EAAO,QAMTwc,GACEhX,EACAvU,EACAuG,EACAiO,EACAzF,EAAO,GACPA,EAAO,QAMTwc,GACEhX,EACAvU,EACAuG,EACAiO,EACAzF,EAAO,GACPA,EAAO,OAMTwc,GACEhX,EACAvU,EACAuG,EACAiO,EACAzF,EAAO,GACPA,EAAO,MAMb,CAUO,SAASyd,GACdjY,EACAvU,EACAwoB,EACAhU,EACAzF,GAEA,IAAKwd,GAAqBhY,EAAiBvU,EAAQwoB,EAAK,GAAIhU,EAAQzF,GAClE,OAAO,EAET,GAAoB,IAAhByZ,EAAKrmB,OACP,OAAO,EAET,IAAK,IAAIzB,EAAI,EAAG0S,EAAKoV,EAAKrmB,OAAQzB,EAAI0S,IAAM1S,EAC1C,GACE4qB,GACE/W,EACAiU,EAAK9nB,EAAI,GACT8nB,EAAK9nB,GACL8T,EACAzF,KAIC2c,GACCnX,EACAiU,EAAK9nB,EAAI,GACT8nB,EAAK9nB,GACL8T,EACAzF,GAGF,OAAO,EAIb,OAAO,CACT,CCjMO,SAAS0d,GAAiBlY,EAAiBvU,EAAQuG,EAAKiO,GAC7D,IAAI2C,EAAK5C,EAAgBvU,GACrBoX,EAAK7C,EAAgBvU,EAAS,GAC9BmC,EAAS,EACb,IAAK,IAAIzB,EAAIV,EAASwU,EAAQ9T,EAAI6F,EAAK7F,GAAK8T,EAAQ,CAClD,MAAM6C,EAAK9C,EAAgB7T,GACrB4W,EAAK/C,EAAgB7T,EAAI,GAC/ByB,GAAUpB,KAAKuK,MAAM+L,EAAKF,IAAOE,EAAKF,IAAOG,EAAKF,IAAOE,EAAKF,IAC9DD,EAAKE,EACLD,EAAKE,CACP,CACA,OAAOnV,CACT,CCFA,MAAM,WAAmB,GAMvBsM,YAAYyE,EAAakU,GACvBhW,QAMA/O,KAAKqqB,cAAgB,KAMrBrqB,KAAKsqB,uBAAyB,EAM9BtqB,KAAKuqB,WAAa,EAMlBvqB,KAAKwqB,mBAAqB,OAEXze,IAAXgZ,GAAyBtV,MAAM2L,QAAQvK,EAAY,IAMrD7Q,KAAKylB,eACyD,EAG5DV,GATF/kB,KAAKwlB,mBACHT,EAC6B,EAUnC,CAOA0F,iBAAiBnZ,GACVtR,KAAKkS,gBAGR,GAAOlS,KAAKkS,gBAAiBZ,GAF7BtR,KAAKkS,gBAAkBZ,EAAW3R,QAIpCK,KAAK8d,SACP,CAOA5D,QACE,MAAMwQ,EAAa,IAAI,GACrB1qB,KAAKkS,gBAAgBvS,QACrBK,KAAK+kB,QAGP,OADA2F,EAAWpL,gBAAgBtf,MACpB0qB,CACT,CASA/G,eAAexa,EAAGuG,EAAGkU,EAAcC,GACjC,OAAIA,EAAqB3S,EAAyBlR,KAAKyN,YAAatE,EAAGuG,GAC9DmU,GAEL7jB,KAAKwqB,mBAAqBxqB,KAAKge,gBACjChe,KAAKuqB,UAAY7rB,KAAKuK,KACpB+c,GACEhmB,KAAKkS,gBACL,EACAlS,KAAKkS,gBAAgBpS,OACrBE,KAAKmS,OACL,IAGJnS,KAAKwqB,kBAAoBxqB,KAAKge,eAEzBoI,GACLpmB,KAAKkS,gBACL,EACAlS,KAAKkS,gBAAgBpS,OACrBE,KAAKmS,OACLnS,KAAKuqB,WACL,EACAphB,EACAuG,EACAkU,EACAC,GAEJ,CAaA8G,eAAenY,GACb,OAAO+E,GACLvX,KAAKkS,gBACL,EACAlS,KAAKkS,gBAAgBpS,OACrBE,KAAKmS,OACLK,EAEJ,CAgBAoY,iBAAiB5sB,EAAG6qB,GAClB,MAAmB,OAAf7oB,KAAK+kB,QAAkC,QAAf/kB,KAAK+kB,OACxB,MAET8D,OAA8B9c,IAAhB8c,GAA4BA,EACnCD,GACL5oB,KAAKkS,gBACL,EACAlS,KAAKkS,gBAAgBpS,OACrBE,KAAKmS,OACLnU,EACA6qB,GAEJ,CAOA7D,iBACE,OAAO6C,GACL7nB,KAAKkS,gBACL,EACAlS,KAAKkS,gBAAgBpS,OACrBE,KAAKmS,OAET,CAYA0Y,gBAAgB1C,EAAUlX,GACxB,OAAOiX,GACLloB,KAAKkS,gBACL,EACAlS,KAAKkS,gBAAgBpS,OACrBE,KAAKmS,OACLgW,EACAlX,EACAjR,KAAKmS,OAET,CAOA2Y,YACE,OAAOV,GACLpqB,KAAKkS,gBACL,EACAlS,KAAKkS,gBAAgBpS,OACrBE,KAAKmS,OAET,CAKA4Y,kBAKE,OAJI/qB,KAAKsqB,uBAAyBtqB,KAAKge,gBACrChe,KAAKqqB,cAAgBrqB,KAAK6qB,gBAAgB,GAAK7qB,KAAKqqB,eACpDrqB,KAAKsqB,sBAAwBtqB,KAAKge,eAE7Bhe,KAAKqqB,aACd,CAOA/E,8BAA8B9B,GAC5B,MAAMuD,EAA4B,GAUlC,OATAA,EAA0BjnB,OAASgnB,GACjC9mB,KAAKkS,gBACL,EACAlS,KAAKkS,gBAAgBpS,OACrBE,KAAKmS,OACLqR,EACAuD,EACA,GAEK,IAAI,GAAWA,EAA2B,KACnD,CAOAzN,UACE,MAAO,YACT,CAQAiL,iBAAiB7X,GACf,OAAO2c,GACLrpB,KAAKkS,gBACL,EACAlS,KAAKkS,gBAAgBpS,OACrBE,KAAKmS,OACLzF,EAEJ,CAQA+Y,eAAe5U,EAAakU,GAC1B/kB,KAAK0lB,UAAUX,EAAQlU,EAAa,GAC/B7Q,KAAKkS,kBACRlS,KAAKkS,gBAAkB,IAEzBlS,KAAKkS,gBAAgBpS,OAAS4mB,GAC5B1mB,KAAKkS,gBACL,EACArB,EACA7Q,KAAKmS,QAEPnS,KAAK8d,SACP,EAGF,UC/RA,MAAM,WAAwB,GAQ5B1R,YAAYyE,EAAakU,EAAQoB,GAqB/B,GApBApX,QAMA/O,KAAKgrB,MAAQ,GAMbhrB,KAAKuqB,WAAa,EAMlBvqB,KAAKwqB,mBAAqB,EAEtB/a,MAAM2L,QAAQvK,EAAY,IAC5B7Q,KAAKylB,eACgE,EAGnEV,QAEG,QAAehZ,IAAXgZ,GAAwBoB,EACjCnmB,KAAKwlB,mBACHT,EAC6B,GAE/B/kB,KAAKgrB,MAAQ7E,MACR,CACL,IAAIpB,EAAS/kB,KAAKolB,YAClB,MAAM6F,EAA+C,EAC/C/Y,EAAkB,GAClBiU,EAAO,GACb,IAAK,IAAI9nB,EAAI,EAAG0S,EAAKka,EAAYnrB,OAAQzB,EAAI0S,IAAM1S,EAAG,CACpD,MAAMqsB,EAAaO,EAAY5sB,GACrB,IAANA,IACF0mB,EAAS2F,EAAWtF,aAEtB,GAAOlT,EAAiBwY,EAAWxF,sBACnCiB,EAAKjmB,KAAKgS,EAAgBpS,OAC5B,CACAE,KAAKwlB,mBAAmBT,EAAQ7S,GAChClS,KAAKgrB,MAAQ7E,CACf,CACF,CAOA+E,iBAAiBR,GACV1qB,KAAKkS,gBAGR,GAAOlS,KAAKkS,gBAAiBwY,EAAWxF,qBAAqBvlB,SAF7DK,KAAKkS,gBAAkBwY,EAAWxF,qBAAqBvlB,QAIzDK,KAAKgrB,MAAM9qB,KAAKF,KAAKkS,gBAAgBpS,QACrCE,KAAK8d,SACP,CAOA5D,QACE,MAAMiR,EAAkB,IAAI,GAC1BnrB,KAAKkS,gBAAgBvS,QACrBK,KAAK+kB,OACL/kB,KAAKgrB,MAAMrrB,SAGb,OADAwrB,EAAgB7L,gBAAgBtf,MACzBmrB,CACT,CASAxH,eAAexa,EAAGuG,EAAGkU,EAAcC,GACjC,OAAIA,EAAqB3S,EAAyBlR,KAAKyN,YAAatE,EAAGuG,GAC9DmU,GAEL7jB,KAAKwqB,mBAAqBxqB,KAAKge,gBACjChe,KAAKuqB,UAAY7rB,KAAKuK,KACpBid,GACElmB,KAAKkS,gBACL,EACAlS,KAAKgrB,MACLhrB,KAAKmS,OACL,IAGJnS,KAAKwqB,kBAAoBxqB,KAAKge,eAEzByI,GACLzmB,KAAKkS,gBACL,EACAlS,KAAKgrB,MACLhrB,KAAKmS,OACLnS,KAAKuqB,WACL,EACAphB,EACAuG,EACAkU,EACAC,GAEJ,CAwBA+G,iBAAiB5sB,EAAG6qB,EAAauC,GAC/B,MACkB,OAAfprB,KAAK+kB,QAAkC,QAAf/kB,KAAK+kB,QACE,IAAhC/kB,KAAKkS,gBAAgBpS,OAEd,MAET+oB,OAA8B9c,IAAhB8c,GAA4BA,EAC1CuC,OAA8Brf,IAAhBqf,GAA4BA,EL9BvC,SACLlZ,EACAvU,EACAwoB,EACAhU,EACAnU,EACA6qB,EACAuC,GAEA,GAAIA,EACF,OAAOxC,GACL1W,EACAvU,EACAwoB,EAAKA,EAAKrmB,OAAS,GACnBqS,EACAnU,EACA6qB,GAGJ,IAAIvX,EACJ,GAAItT,EAAIkU,EAAgBC,EAAS,GAC/B,OAAI0W,GACFvX,EAAaY,EAAgBvS,MAAM,EAAGwS,GACtCb,EAAWa,EAAS,GAAKnU,EAClBsT,GAEF,KAET,GAAIY,EAAgBA,EAAgBpS,OAAS,GAAK9B,EAChD,OAAI6qB,GACFvX,EAAaY,EAAgBvS,MAAMuS,EAAgBpS,OAASqS,GAC5Db,EAAWa,EAAS,GAAKnU,EAClBsT,GAEF,KAET,IAAK,IAAIjT,EAAI,EAAG0S,EAAKoV,EAAKrmB,OAAQzB,EAAI0S,IAAM1S,EAAG,CAC7C,MAAM6F,EAAMiiB,EAAK9nB,GACjB,GAAIV,GAAUuG,EAAd,CAGA,GAAIlG,EAAIkU,EAAgBvU,EAASwU,EAAS,GACxC,OAAO,KAET,GAAInU,GAAKkU,EAAgBhO,EAAM,GAC7B,OAAO0kB,GACL1W,EACAvU,EACAuG,EACAiO,EACAnU,GACA,GAGJL,EAASuG,CAdT,CAeF,CACA,OAAO,IACT,CK1BWmnB,CACLrrB,KAAKkS,gBACL,EACAlS,KAAKgrB,MACLhrB,KAAKmS,OACLnU,EACA6qB,EACAuC,GAEJ,CAOApG,iBACE,OAAO8C,GACL9nB,KAAKkS,gBACL,EACAlS,KAAKgrB,MACLhrB,KAAKmS,OAET,CAKAmZ,UACE,OAAOtrB,KAAKgrB,KACd,CAQAO,cAAcvO,GACZ,OAAIA,EAAQ,GAAKhd,KAAKgrB,MAAMlrB,QAAUkd,EAC7B,KAEF,IAAI,GACThd,KAAKkS,gBAAgBvS,MACT,IAAVqd,EAAc,EAAIhd,KAAKgrB,MAAMhO,EAAQ,GACrChd,KAAKgrB,MAAMhO,IAEbhd,KAAK+kB,OAET,CAOAyG,iBACE,MAAMtZ,EAAkBlS,KAAKkS,gBACvBiU,EAAOnmB,KAAKgrB,MACZjG,EAAS/kB,KAAK+kB,OAEdkG,EAAc,GACpB,IAAIttB,EAAS,EACb,IAAK,IAAIU,EAAI,EAAG0S,EAAKoV,EAAKrmB,OAAQzB,EAAI0S,IAAM1S,EAAG,CAC7C,MAAM6F,EAAMiiB,EAAK9nB,GACXqsB,EAAa,IAAI,GACrBxY,EAAgBvS,MAAMhC,EAAQuG,GAC9B6gB,GAEFkG,EAAY/qB,KAAKwqB,GACjB/sB,EAASuG,CACX,CACA,OAAO+mB,CACT,CAKAQ,mBACE,MAAMC,EAAY,GACZxZ,EAAkBlS,KAAKkS,gBAC7B,IAAIvU,EAAS,EACb,MAAMwoB,EAAOnmB,KAAKgrB,MACZ7Y,EAASnS,KAAKmS,OACpB,IAAK,IAAI9T,EAAI,EAAG0S,EAAKoV,EAAKrmB,OAAQzB,EAAI0S,IAAM1S,EAAG,CAC7C,MAAM6F,EAAMiiB,EAAK9nB,GAQjB,GAAOqtB,EAPUxD,GACfhW,EACAvU,EACAuG,EACAiO,EACA,KAGFxU,EAASuG,CACX,CACA,OAAOwnB,CACT,CAOApG,8BAA8B9B,GAC5B,MAAMuD,EAA4B,GAC5BO,EAAiB,GAWvB,OAVAP,EAA0BjnB,OAASunB,GACjCrnB,KAAKkS,gBACL,EACAlS,KAAKgrB,MACLhrB,KAAKmS,OACLqR,EACAuD,EACA,EACAO,GAEK,IAAI,GAAgBP,EAA2B,KAAMO,EAC9D,CAOAhO,UACE,MAAO,iBACT,CAQAiL,iBAAiB7X,GACf,OHrPG,SACLwF,EACAvU,EACAwoB,EACAhU,EACAzF,GAEA,IAAK,IAAIrO,EAAI,EAAG0S,EAAKoV,EAAKrmB,OAAQzB,EAAI0S,IAAM1S,EAAG,CAC7C,GACEgrB,GAAqBnX,EAAiBvU,EAAQwoB,EAAK9nB,GAAI8T,EAAQzF,GAE/D,OAAO,EAET/O,EAASwoB,EAAK9nB,EAChB,CACA,OAAO,CACT,CGqOWstB,CACL3rB,KAAKkS,gBACL,EACAlS,KAAKgrB,MACLhrB,KAAKmS,OACLzF,EAEJ,CAQA+Y,eAAe5U,EAAakU,GAC1B/kB,KAAK0lB,UAAUX,EAAQlU,EAAa,GAC/B7Q,KAAKkS,kBACRlS,KAAKkS,gBAAkB,IAEzB,MAAMiU,EAAOQ,GACX3mB,KAAKkS,gBACL,EACArB,EACA7Q,KAAKmS,OACLnS,KAAKgrB,OAEPhrB,KAAKkS,gBAAgBpS,OAAyB,IAAhBqmB,EAAKrmB,OAAe,EAAIqmB,EAAKA,EAAKrmB,OAAS,GACzEE,KAAK8d,SACP,EAGF,UC/UA,MAAM,WAAc,GAKlB1R,YAAYyE,EAAakU,GACvBhW,QACA/O,KAAKylB,eAAe5U,EAAakU,EACnC,CAOA7K,QACE,MAAMhL,EAAQ,IAAI,GAAMlP,KAAKkS,gBAAgBvS,QAASK,KAAK+kB,QAE3D,OADA7V,EAAMoQ,gBAAgBtf,MACfkP,CACT,CASAyU,eAAexa,EAAGuG,EAAGkU,EAAcC,GACjC,MAAM3R,EAAkBlS,KAAKkS,gBACvBsU,EAAkB,GACtBrd,EACAuG,EACAwC,EAAgB,GAChBA,EAAgB,IAElB,GAAIsU,EAAkB3C,EAAoB,CACxC,MAAM1R,EAASnS,KAAKmS,OACpB,IAAK,IAAI9T,EAAI,EAAGA,EAAI8T,IAAU9T,EAC5BulB,EAAavlB,GAAK6T,EAAgB7T,GAGpC,OADAulB,EAAa9jB,OAASqS,EACfqU,CACT,CACA,OAAO3C,CACT,CAOAmB,iBACE,OAAQhlB,KAAKkS,gBAAuBlS,KAAKkS,gBAAgBvS,QAA1B,EACjC,CAOAskB,cAAcvX,GACZ,OAAOsF,EAA6BhS,KAAKkS,gBAAiBxF,EAC5D,CAOA4M,UACE,MAAO,OACT,CAQAiL,iBAAiB7X,GACf,OAAO6E,EAAW7E,EAAQ1M,KAAKkS,gBAAgB,GAAIlS,KAAKkS,gBAAgB,GAC1E,CAOAuT,eAAe5U,EAAakU,GAC1B/kB,KAAK0lB,UAAUX,EAAQlU,EAAa,GAC/B7Q,KAAKkS,kBACRlS,KAAKkS,gBAAkB,IAEzBlS,KAAKkS,gBAAgBpS,OVjGlB,SAA2BoS,EAAiBvU,EAAQ2T,EAAYa,GACrE,IAAK,IAAI9T,EAAI,EAAG0S,EAAKO,EAAWxR,OAAQzB,EAAI0S,IAAM1S,EAChD6T,EAAgBvU,KAAY2T,EAAWjT,GAEzC,OAAOV,CACT,CU4FkCiuB,CAC5B5rB,KAAKkS,gBACL,EACArB,EACA7Q,KAAKmS,QAEPnS,KAAK8d,SACP,EAGF,UCrGA,MAAM,WAAmB,GAMvB1R,YAAYyE,EAAakU,GACvBhW,QACIgW,IAAWtV,MAAM2L,QAAQvK,EAAY,IACvC7Q,KAAKwlB,mBACHT,EAC6B,GAG/B/kB,KAAKylB,eACyD,EAG5DV,EAGN,CAOA8G,YAAY3c,GACLlP,KAAKkS,gBAGR,GAAOlS,KAAKkS,gBAAiBhD,EAAMgW,sBAFnCllB,KAAKkS,gBAAkBhD,EAAMgW,qBAAqBvlB,QAIpDK,KAAK8d,SACP,CAOA5D,QACE,MAAM4R,EAAa,IAAI,GACrB9rB,KAAKkS,gBAAgBvS,QACrBK,KAAK+kB,QAGP,OADA+G,EAAWxM,gBAAgBtf,MACpB8rB,CACT,CASAnI,eAAexa,EAAGuG,EAAGkU,EAAcC,GACjC,GAAIA,EAAqB3S,EAAyBlR,KAAKyN,YAAatE,EAAGuG,GACrE,OAAOmU,EAET,MAAM3R,EAAkBlS,KAAKkS,gBACvBC,EAASnS,KAAKmS,OACpB,IAAK,IAAI9T,EAAI,EAAG0S,EAAKmB,EAAgBpS,OAAQzB,EAAI0S,EAAI1S,GAAK8T,EAAQ,CAChE,MAAMqU,EAAkB,GACtBrd,EACAuG,EACAwC,EAAgB7T,GAChB6T,EAAgB7T,EAAI,IAEtB,GAAImoB,EAAkB3C,EAAoB,CACxCA,EAAqB2C,EACrB,IAAK,IAAInE,EAAI,EAAGA,EAAIlQ,IAAUkQ,EAC5BuB,EAAavB,GAAKnQ,EAAgB7T,EAAIgkB,GAExCuB,EAAa9jB,OAASqS,CACxB,CACF,CACA,OAAO0R,CACT,CAOAmB,iBACE,OAAO6C,GACL7nB,KAAKkS,gBACL,EACAlS,KAAKkS,gBAAgBpS,OACrBE,KAAKmS,OAET,CAQA4Z,SAAS/O,GACP,MAAMpU,EAAK5I,KAAKkS,gBAEZlS,KAAKkS,gBAAgBpS,OAASE,KAAKmS,OADnC,EAEJ,OAAI6K,EAAQ,GAAKpU,GAAKoU,EACb,KAEF,IAAI,GACThd,KAAKkS,gBAAgBvS,MACnBqd,EAAQhd,KAAKmS,QACZ6K,EAAQ,GAAKhd,KAAKmS,QAErBnS,KAAK+kB,OAET,CAOAiH,YACE,MAAM9Z,EAAkBlS,KAAKkS,gBACvB6S,EAAS/kB,KAAK+kB,OACd5S,EAASnS,KAAKmS,OAEd8Z,EAAS,GACf,IAAK,IAAI5tB,EAAI,EAAG0S,EAAKmB,EAAgBpS,OAAQzB,EAAI0S,EAAI1S,GAAK8T,EAAQ,CAChE,MAAMjD,EAAQ,IAAI,GAAMgD,EAAgBvS,MAAMtB,EAAGA,EAAI8T,GAAS4S,GAC9DkH,EAAO/rB,KAAKgP,EACd,CACA,OAAO+c,CACT,CAOA3S,UACE,MAAO,YACT,CAQAiL,iBAAiB7X,GACf,MAAMwF,EAAkBlS,KAAKkS,gBACvBC,EAASnS,KAAKmS,OACpB,IAAK,IAAI9T,EAAI,EAAG0S,EAAKmB,EAAgBpS,OAAQzB,EAAI0S,EAAI1S,GAAK8T,EAAQ,CAGhE,GAAIZ,EAAW7E,EAFLwF,EAAgB7T,GAChB6T,EAAgB7T,EAAI,IAE5B,OAAO,CAEX,CACA,OAAO,CACT,CAQAonB,eAAe5U,EAAakU,GAC1B/kB,KAAK0lB,UAAUX,EAAQlU,EAAa,GAC/B7Q,KAAKkS,kBACRlS,KAAKkS,gBAAkB,IAEzBlS,KAAKkS,gBAAgBpS,OAAS4mB,GAC5B1mB,KAAKkS,gBACL,EACArB,EACA7Q,KAAKmS,QAEPnS,KAAK8d,SACP,EAGF,UC/LO,SAASoO,GAAWha,EAAiBvU,EAAQuG,EAAKiO,GACvD,IAAIga,EAAY,EACZrX,EAAK5C,EAAgBhO,EAAMiO,GAC3B4C,EAAK7C,EAAgBhO,EAAMiO,EAAS,GACxC,KAAOxU,EAASuG,EAAKvG,GAAUwU,EAAQ,CACrC,MAAM6C,EAAK9C,EAAgBvU,GACrBsX,EAAK/C,EAAgBvU,EAAS,GACpCwuB,GAAapX,EAAKC,EAAKF,EAAKG,EAC5BH,EAAKE,EACLD,EAAKE,CACP,CACA,OAAOkX,EAAY,CACrB,CASO,SAASC,GAAYla,EAAiBvU,EAAQwoB,EAAMhU,GACzD,IAAIU,EAAO,EACX,IAAK,IAAIxU,EAAI,EAAG0S,EAAKoV,EAAKrmB,OAAQzB,EAAI0S,IAAM1S,EAAG,CAC7C,MAAM6F,EAAMiiB,EAAK9nB,GACjBwU,GAAQqZ,GAAWha,EAAiBvU,EAAQuG,EAAKiO,GACjDxU,EAASuG,CACX,CACA,OAAO2O,CACT,CCtBA,MAAMwZ,WAAmB,GAMvBjgB,YAAYyE,EAAakU,GACvBhW,QAMA/O,KAAKuqB,WAAa,EAMlBvqB,KAAKwqB,mBAAqB,OAEXze,IAAXgZ,GAAyBtV,MAAM2L,QAAQvK,EAAY,IAMrD7Q,KAAKylB,eACyD,EAG5DV,GATF/kB,KAAKwlB,mBACHT,EAC6B,EAUnC,CAOA7K,QACE,OAAO,IAAImS,GAAWrsB,KAAKkS,gBAAgBvS,QAASK,KAAK+kB,OAC3D,CASApB,eAAexa,EAAGuG,EAAGkU,EAAcC,GACjC,OAAIA,EAAqB3S,EAAyBlR,KAAKyN,YAAatE,EAAGuG,GAC9DmU,GAEL7jB,KAAKwqB,mBAAqBxqB,KAAKge,gBACjChe,KAAKuqB,UAAY7rB,KAAKuK,KACpB+c,GACEhmB,KAAKkS,gBACL,EACAlS,KAAKkS,gBAAgBpS,OACrBE,KAAKmS,OACL,IAGJnS,KAAKwqB,kBAAoBxqB,KAAKge,eAEzBoI,GACLpmB,KAAKkS,gBACL,EACAlS,KAAKkS,gBAAgBpS,OACrBE,KAAKmS,OACLnS,KAAKuqB,WACL,EACAphB,EACAuG,EACAkU,EACAC,GAEJ,CAOAjR,UACE,OAAOsZ,GACLlsB,KAAKkS,gBACL,EACAlS,KAAKkS,gBAAgBpS,OACrBE,KAAKmS,OAET,CAOA6S,iBACE,OAAO6C,GACL7nB,KAAKkS,gBACL,EACAlS,KAAKkS,gBAAgBpS,OACrBE,KAAKmS,OAET,CAOAmT,8BAA8B9B,GAC5B,MAAMuD,EAA4B,GAUlC,OATAA,EAA0BjnB,OAASgnB,GACjC9mB,KAAKkS,gBACL,EACAlS,KAAKkS,gBAAgBpS,OACrBE,KAAKmS,OACLqR,EACAuD,EACA,GAEK,IAAIsF,GAAWtF,EAA2B,KACnD,CAOAzN,UACE,MAAO,YACT,CAQAiL,iBAAiB7X,GACf,OAAO,CACT,CAQA+Y,eAAe5U,EAAakU,GAC1B/kB,KAAK0lB,UAAUX,EAAQlU,EAAa,GAC/B7Q,KAAKkS,kBACRlS,KAAKkS,gBAAkB,IAEzBlS,KAAKkS,gBAAgBpS,OAAS4mB,GAC5B1mB,KAAKkS,gBACL,EACArB,EACA7Q,KAAKmS,QAEPnS,KAAK8d,SACP,EAGF,UCxKO,SAASwO,GACdpa,EACAvU,EACAwoB,EACAhU,EACAoa,EACAC,EACAvb,GAEA,IAAI5S,EAAG0S,EAAI5H,EAAG2L,EAAIE,EAAID,EAAIE,EAC1B,MAAMvF,EAAI6c,EAAYC,EAAoB,GAEpCC,EAAgB,GAEtB,IAAK,IAAI/jB,EAAI,EAAGgkB,EAAKvG,EAAKrmB,OAAQ4I,EAAIgkB,IAAMhkB,EAAG,CAC7C,MAAMxE,EAAMiiB,EAAKzd,GAGjB,IAFAoM,EAAK5C,EAAgBhO,EAAMiO,GAC3B4C,EAAK7C,EAAgBhO,EAAMiO,EAAS,GAC/B9T,EAAIV,EAAQU,EAAI6F,EAAK7F,GAAK8T,EAC7B6C,EAAK9C,EAAgB7T,GACrB4W,EAAK/C,EAAgB7T,EAAI,IACpBqR,GAAKqF,GAAME,GAAMvF,GAAOqF,GAAMrF,GAAKA,GAAKuF,KAC3C9L,GAAMuG,EAAIqF,IAAOE,EAAKF,IAAQC,EAAKF,GAAMA,EACzC2X,EAAcvsB,KAAKiJ,IAErB2L,EAAKE,EACLD,EAAKE,CAET,CAGA,IAAI0X,EAASnuB,IACTouB,GAAoBnuB,IAGxB,IAFAguB,EAAc/gB,KAAKkP,IACnB9F,EAAK2X,EAAc,GACdpuB,EAAI,EAAG0S,EAAK0b,EAAc3sB,OAAQzB,EAAI0S,IAAM1S,EAAG,CAClD2W,EAAKyX,EAAcpuB,GACnB,MAAMwuB,EAAgBnuB,KAAKM,IAAIgW,EAAKF,GAChC+X,EAAgBD,IAClBzjB,GAAK2L,EAAKE,GAAM,EACZoU,GAAsBlX,EAAiBvU,EAAQwoB,EAAMhU,EAAQhJ,EAAGuG,KAClEid,EAASxjB,EACTyjB,EAAmBC,IAGvB/X,EAAKE,CACP,CAMA,OALI/V,MAAM0tB,KAGRA,EAASJ,EAAYC,IAEnBvb,GACFA,EAAK/Q,KAAKysB,EAAQjd,EAAGkd,GACd3b,GAEF,CAAC0b,EAAQjd,EAAGkd,EACrB,CAWO,SAASE,GACd5a,EACAvU,EACAqqB,EACA7V,EACAoa,GAEA,IAAIQ,EAAiB,GACrB,IAAK,IAAI1uB,EAAI,EAAG0S,EAAKiX,EAAMloB,OAAQzB,EAAI0S,IAAM1S,EAAG,CAC9C,MAAM8nB,EAAO6B,EAAM3pB,GACnB0uB,EAAiBT,GACfpa,EACAvU,EACAwoB,EACAhU,EACAoa,EACA,EAAIluB,EACJ0uB,GAEFpvB,EAASwoB,EAAKA,EAAKrmB,OAAS,EAC9B,CACA,OAAOitB,CACT,CCnGO,SAASlc,GAAYqB,EAAiBvU,EAAQuG,EAAKiO,GACxD,KAAOxU,EAASuG,EAAMiO,GAAQ,CAC5B,IAAK,IAAI9T,EAAI,EAAGA,EAAI8T,IAAU9T,EAAG,CAC/B,MAAM6c,EAAMhJ,EAAgBvU,EAASU,GACrC6T,EAAgBvU,EAASU,GAAK6T,EAAgBhO,EAAMiO,EAAS9T,GAC7D6T,EAAgBhO,EAAMiO,EAAS9T,GAAK6c,CACtC,CACAvd,GAAUwU,EACVjO,GAAOiO,CACT,CACF,CCLO,SAAS6a,GAAsB9a,EAAiBvU,EAAQuG,EAAKiO,GAGlE,IAAI8a,EAAO,EACPnY,EAAK5C,EAAgBhO,EAAMiO,GAC3B4C,EAAK7C,EAAgBhO,EAAMiO,EAAS,GACxC,KAAOxU,EAASuG,EAAKvG,GAAUwU,EAAQ,CACrC,MAAM6C,EAAK9C,EAAgBvU,GACrBsX,EAAK/C,EAAgBvU,EAAS,GACpCsvB,IAASjY,EAAKF,IAAOG,EAAKF,GAC1BD,EAAKE,EACLD,EAAKE,CACP,CACA,OAAgB,IAATgY,OAAalhB,EAAYkhB,EAAO,CACzC,CAeO,SAASC,GACdhb,EACAvU,EACAwoB,EACAhU,EACAgb,GAEAA,OAAkBphB,IAAVohB,GAAsBA,EAC9B,IAAK,IAAI9uB,EAAI,EAAG0S,EAAKoV,EAAKrmB,OAAQzB,EAAI0S,IAAM1S,EAAG,CAC7C,MAAM6F,EAAMiiB,EAAK9nB,GACX+uB,EAAcJ,GAClB9a,EACAvU,EACAuG,EACAiO,GAEF,GAAU,IAAN9T,GACF,GAAK8uB,GAASC,IAAkBD,IAAUC,EACxC,OAAO,OAGT,GAAKD,IAAUC,IAAkBD,GAASC,EACxC,OAAO,EAGXzvB,EAASuG,CACX,CACA,OAAO,CACT,CA+CO,SAASmpB,GACdnb,EACAvU,EACAwoB,EACAhU,EACAgb,GAEAA,OAAkBphB,IAAVohB,GAAsBA,EAC9B,IAAK,IAAI9uB,EAAI,EAAG0S,EAAKoV,EAAKrmB,OAAQzB,EAAI0S,IAAM1S,EAAG,CAC7C,MAAM6F,EAAMiiB,EAAK9nB,GACX+uB,EAAcJ,GAClB9a,EACAvU,EACAuG,EACAiO,IAGM,IAAN9T,EACK8uB,GAASC,IAAkBD,IAAUC,EACrCD,IAAUC,IAAkBD,GAASC,IAE1C,GAAmBlb,EAAiBvU,EAAQuG,EAAKiO,GAEnDxU,EAASuG,CACX,CACA,OAAOvG,CACT,CAeO,SAAS2vB,GACdpb,EACAvU,EACAqqB,EACA7V,EACAgb,GAEA,IAAK,IAAI9uB,EAAI,EAAG0S,EAAKiX,EAAMloB,OAAQzB,EAAI0S,IAAM1S,EAC3CV,EAAS0vB,GACPnb,EACAvU,EACAqqB,EAAM3pB,GACN8T,EACAgb,GAGJ,OAAOxvB,CACT,CCvJA,MAAM,WAAgB,GAYpByO,YAAYyE,EAAakU,EAAQoB,GAC/BpX,QAMA/O,KAAKgrB,MAAQ,GAMbhrB,KAAKutB,4BAA8B,EAMnCvtB,KAAKwtB,mBAAqB,KAM1BxtB,KAAKuqB,WAAa,EAMlBvqB,KAAKwqB,mBAAqB,EAM1BxqB,KAAKytB,mBAAqB,EAM1BztB,KAAK0tB,yBAA2B,UAEjB3hB,IAAXgZ,GAAwBoB,GAC1BnmB,KAAKwlB,mBACHT,EAC6B,GAE/B/kB,KAAKgrB,MAAQ7E,GAEbnmB,KAAKylB,eACgE,EAGnEV,EAGN,CAOA4I,iBAAiBzB,GACVlsB,KAAKkS,gBAGR,GAAOlS,KAAKkS,gBAAiBga,EAAWhH,sBAFxCllB,KAAKkS,gBAAkBga,EAAWhH,qBAAqBvlB,QAIzDK,KAAKgrB,MAAM9qB,KAAKF,KAAKkS,gBAAgBpS,QACrCE,KAAK8d,SACP,CAOA5D,QACE,MAAM0T,EAAU,IAAI,GAClB5tB,KAAKkS,gBAAgBvS,QACrBK,KAAK+kB,OACL/kB,KAAKgrB,MAAMrrB,SAGb,OADAiuB,EAAQtO,gBAAgBtf,MACjB4tB,CACT,CASAjK,eAAexa,EAAGuG,EAAGkU,EAAcC,GACjC,OAAIA,EAAqB3S,EAAyBlR,KAAKyN,YAAatE,EAAGuG,GAC9DmU,GAEL7jB,KAAKwqB,mBAAqBxqB,KAAKge,gBACjChe,KAAKuqB,UAAY7rB,KAAKuK,KACpBid,GACElmB,KAAKkS,gBACL,EACAlS,KAAKgrB,MACLhrB,KAAKmS,OACL,IAGJnS,KAAKwqB,kBAAoBxqB,KAAKge,eAEzByI,GACLzmB,KAAKkS,gBACL,EACAlS,KAAKgrB,MACLhrB,KAAKmS,OACLnS,KAAKuqB,WACL,EACAphB,EACAuG,EACAkU,EACAC,GAEJ,CAOAtS,WAAWpI,EAAGuG,GACZ,OAAO0Z,GACLppB,KAAK6tB,6BACL,EACA7tB,KAAKgrB,MACLhrB,KAAKmS,OACLhJ,EACAuG,EAEJ,CAOAkD,UACE,OAAOwZ,GACLpsB,KAAK6tB,6BACL,EACA7tB,KAAKgrB,MACLhrB,KAAKmS,OAET,CAeA6S,eAAemI,GACb,IAAIjb,EAQJ,YAPcnG,IAAVohB,GACFjb,EAAkBlS,KAAK6tB,6BAA6BluB,QACpD0tB,GAAkBnb,EAAiB,EAAGlS,KAAKgrB,MAAOhrB,KAAKmS,OAAQgb,IAE/Djb,EAAkBlS,KAAKkS,gBAGlB4V,GAAwB5V,EAAiB,EAAGlS,KAAKgrB,MAAOhrB,KAAKmS,OACtE,CAKAmZ,UACE,OAAOtrB,KAAKgrB,KACd,CAKA8C,uBACE,GAAI9tB,KAAKutB,4BAA8BvtB,KAAKge,cAAe,CACzD,MAAM+P,EAAajb,EAAU9S,KAAKyN,aAClCzN,KAAKwtB,mBAAqBlB,GACxBtsB,KAAK6tB,6BACL,EACA7tB,KAAKgrB,MACLhrB,KAAKmS,OACL4b,EACA,GAEF/tB,KAAKutB,2BAA6BvtB,KAAKge,aACzC,CACA,OAAOhe,KAAKwtB,kBACd,CAQAQ,mBACE,OAAO,IAAI,GAAMhuB,KAAK8tB,uBAAwB,MAChD,CASAG,qBACE,OAAOjuB,KAAKgrB,MAAMlrB,MACpB,CAYAouB,cAAclR,GACZ,OAAIA,EAAQ,GAAKhd,KAAKgrB,MAAMlrB,QAAUkd,EAC7B,KAEF,IAAI,GACThd,KAAKkS,gBAAgBvS,MACT,IAAVqd,EAAc,EAAIhd,KAAKgrB,MAAMhO,EAAQ,GACrChd,KAAKgrB,MAAMhO,IAEbhd,KAAK+kB,OAET,CAOAoJ,iBACE,MAAMpJ,EAAS/kB,KAAK+kB,OACd7S,EAAkBlS,KAAKkS,gBACvBiU,EAAOnmB,KAAKgrB,MACZoB,EAAc,GACpB,IAAIzuB,EAAS,EACb,IAAK,IAAIU,EAAI,EAAG0S,EAAKoV,EAAKrmB,OAAQzB,EAAI0S,IAAM1S,EAAG,CAC7C,MAAM6F,EAAMiiB,EAAK9nB,GACX6tB,EAAa,IAAI,GACrBha,EAAgBvS,MAAMhC,EAAQuG,GAC9B6gB,GAEFqH,EAAYlsB,KAAKgsB,GACjBvuB,EAASuG,CACX,CACA,OAAOkoB,CACT,CAKAyB,6BACE,GAAI7tB,KAAKytB,mBAAqBztB,KAAKge,cAAe,CAChD,MAAM9L,EAAkBlS,KAAKkS,gBACzBgb,GAAuBhb,EAAiB,EAAGlS,KAAKgrB,MAAOhrB,KAAKmS,QAC9DnS,KAAK0tB,yBAA2Bxb,GAEhClS,KAAK0tB,yBAA2Bxb,EAAgBvS,QAChDK,KAAK0tB,yBAAyB5tB,OAASutB,GACrCrtB,KAAK0tB,yBACL,EACA1tB,KAAKgrB,MACLhrB,KAAKmS,SAGTnS,KAAKytB,kBAAoBztB,KAAKge,aAChC,CACA,OAAOhe,KAAK0tB,wBACd,CAOApI,8BAA8B9B,GAC5B,MAAMuD,EAA4B,GAC5BO,EAAiB,GAWvB,OAVAP,EAA0BjnB,OAAS6nB,GACjC3nB,KAAKkS,gBACL,EACAlS,KAAKgrB,MACLhrB,KAAKmS,OACLzT,KAAKuK,KAAKua,GACVuD,EACA,EACAO,GAEK,IAAI,GAAQP,EAA2B,KAAMO,EACtD,CAOAhO,UACE,MAAO,SACT,CAQAiL,iBAAiB7X,GACf,OAAOyd,GACLnqB,KAAK6tB,6BACL,EACA7tB,KAAKgrB,MACLhrB,KAAKmS,OACLzF,EAEJ,CAQA+Y,eAAe5U,EAAakU,GAC1B/kB,KAAK0lB,UAAUX,EAAQlU,EAAa,GAC/B7Q,KAAKkS,kBACRlS,KAAKkS,gBAAkB,IAEzB,MAAMiU,EAAOQ,GACX3mB,KAAKkS,gBACL,EACArB,EACA7Q,KAAKmS,OACLnS,KAAKgrB,OAEPhrB,KAAKkS,gBAAgBpS,OAAyB,IAAhBqmB,EAAKrmB,OAAe,EAAIqmB,EAAKA,EAAKrmB,OAAS,GACzEE,KAAK8d,SACP,EAGF,UAkCO,SAASsQ,GAAW1hB,GACzB,MAAMjD,EAAOiD,EAAO,GACdhD,EAAOgD,EAAO,GACd/C,EAAO+C,EAAO,GACd9C,EAAO8C,EAAO,GACdwF,EAAkB,CACtBzI,EACAC,EACAD,EACAG,EACAD,EACAC,EACAD,EACAD,EACAD,EACAC,GAEF,OAAO,IAAI,GAAQwI,EAAiB,KAAM,CAACA,EAAgBpS,QAC7D,CC7bO,SAAS,GAAaoS,EAAiBvU,EAAQqqB,EAAO7V,GAC3D,MAAMoa,EAAc,GACpB,IAAI7f,E1CuLG,CAACjO,IAAUA,KAAU,KAAW,K0CtLvC,IAAK,IAAIJ,EAAI,EAAG0S,EAAKiX,EAAMloB,OAAQzB,EAAI0S,IAAM1S,EAAG,CAC9C,MAAM8nB,EAAO6B,EAAM3pB,GACnBqO,EAASuF,EACPC,EACAvU,EACAwoB,EAAK,GACLhU,GAEFoa,EAAYrsB,MAAMwM,EAAO,GAAKA,EAAO,IAAM,GAAIA,EAAO,GAAKA,EAAO,IAAM,GACxE/O,EAASwoB,EAAKA,EAAKrmB,OAAS,EAC9B,CACA,OAAOysB,CACT,CCIA,MAAM,WAAqB,GAOzBngB,YAAYyE,EAAakU,EAAQiD,GA6C/B,GA5CAjZ,QAMA/O,KAAKquB,OAAS,GAMdruB,KAAKsuB,6BAA+B,EAMpCtuB,KAAKuuB,oBAAsB,KAM3BvuB,KAAKuqB,WAAa,EAMlBvqB,KAAKwqB,mBAAqB,EAM1BxqB,KAAKytB,mBAAqB,EAM1BztB,KAAK0tB,yBAA2B,MAE3B1F,IAAUvY,MAAM2L,QAAQvK,EAAY,IAAK,CAC5C,IAAI2d,EAAaxuB,KAAKolB,YACtB,MAAMqJ,EAAyC,EACzCvc,EAAkB,GAClBwc,EAAY,GAClB,IAAK,IAAIrwB,EAAI,EAAG0S,EAAK0d,EAAS3uB,OAAQzB,EAAI0S,IAAM1S,EAAG,CACjD,MAAMuvB,EAAUa,EAASpwB,GACf,IAANA,IACFmwB,EAAaZ,EAAQxI,aAEvB,MAAMznB,EAASuU,EAAgBpS,OACzBqmB,EAAOyH,EAAQtC,UACrB,IAAK,IAAIjJ,EAAI,EAAGwE,EAAKV,EAAKrmB,OAAQuiB,EAAIwE,IAAMxE,EAC1C8D,EAAK9D,IAAM1kB,EAEb,GAAOuU,EAAiB0b,EAAQ1I,sBAChCwJ,EAAUxuB,KAAKimB,EACjB,CACApB,EAASyJ,EACT3d,EAAcqB,EACd8V,EAAQ0G,CACV,MACe3iB,IAAXgZ,GAAwBiD,GAC1BhoB,KAAKwlB,mBACHT,EAC6B,GAE/B/kB,KAAKquB,OAASrG,GAEdhoB,KAAKylB,eACuE,EAG1EV,EAGN,CAOA4J,cAAcf,GAEZ,IAAIzH,EACJ,GAAKnmB,KAAKkS,gBAIH,CACL,MAAMvU,EAASqC,KAAKkS,gBAAgBpS,OACpC,GAAOE,KAAKkS,gBAAiB0b,EAAQ1I,sBACrCiB,EAAOyH,EAAQtC,UAAU3rB,QACzB,IAAK,IAAItB,EAAI,EAAG0S,EAAKoV,EAAKrmB,OAAQzB,EAAI0S,IAAM1S,EAC1C8nB,EAAK9nB,IAAMV,CAEf,MAVEqC,KAAKkS,gBAAkB0b,EAAQ1I,qBAAqBvlB,QACpDwmB,EAAOyH,EAAQtC,UAAU3rB,QACzBK,KAAKquB,OAAOnuB,OASdF,KAAKquB,OAAOnuB,KAAKimB,GACjBnmB,KAAK8d,SACP,CAOA5D,QACE,MAAM/X,EAAMnC,KAAKquB,OAAOvuB,OAClB8uB,EAAW,IAAInf,MAAMtN,GAC3B,IAAK,IAAI9D,EAAI,EAAGA,EAAI8D,IAAO9D,EACzBuwB,EAASvwB,GAAK2B,KAAKquB,OAAOhwB,GAAGsB,QAG/B,MAAMkvB,EAAe,IAAI,GACvB7uB,KAAKkS,gBAAgBvS,QACrBK,KAAK+kB,OACL6J,GAIF,OAFAC,EAAavP,gBAAgBtf,MAEtB6uB,CACT,CASAlL,eAAexa,EAAGuG,EAAGkU,EAAcC,GACjC,OAAIA,EAAqB3S,EAAyBlR,KAAKyN,YAAatE,EAAGuG,GAC9DmU,GAEL7jB,KAAKwqB,mBAAqBxqB,KAAKge,gBACjChe,KAAKuqB,UAAY7rB,KAAKuK,KpBjErB,SACLiJ,EACAvU,EACAqqB,EACA7V,EACAjJ,GAEA,IAAK,IAAI7K,EAAI,EAAG0S,EAAKiX,EAAMloB,OAAQzB,EAAI0S,IAAM1S,EAAG,CAC9C,MAAM8nB,EAAO6B,EAAM3pB,GACnB6K,EAAMgd,GAAqBhU,EAAiBvU,EAAQwoB,EAAMhU,EAAQjJ,GAClEvL,EAASwoB,EAAKA,EAAKrmB,OAAS,EAC9B,CACA,OAAOoJ,CACT,CoBqDQ4lB,CACE9uB,KAAKkS,gBACL,EACAlS,KAAKquB,OACLruB,KAAKmS,OACL,IAGJnS,KAAKwqB,kBAAoBxqB,KAAKge,epBmH7B,SACL9L,EACAvU,EACAqqB,EACA7V,EACAkU,EACAC,EACAnd,EACAuG,EACAkU,EACAC,EACA0C,GAEAA,EAAWA,GAAsB,CAAC/nB,IAAKA,KACvC,IAAK,IAAIH,EAAI,EAAG0S,EAAKiX,EAAMloB,OAAQzB,EAAI0S,IAAM1S,EAAG,CAC9C,MAAM8nB,EAAO6B,EAAM3pB,GACnBwlB,EAAqB4C,GACnBvU,EACAvU,EACAwoB,EACAhU,EACAkU,EACAC,EACAnd,EACAuG,EACAkU,EACAC,EACA0C,GAEF5oB,EAASwoB,EAAKA,EAAKrmB,OAAS,EAC9B,CACA,OAAO+jB,CACT,CoBjJWkL,CACL/uB,KAAK6tB,6BACL,EACA7tB,KAAKquB,OACLruB,KAAKmS,OACLnS,KAAKuqB,WACL,EACAphB,EACAuG,EACAkU,EACAC,GAEJ,CAOAtS,WAAWpI,EAAGuG,GACZ,OdrFG,SACLwC,EACAvU,EACAqqB,EACA7V,EACAhJ,EACAuG,GAEA,GAAqB,IAAjBsY,EAAMloB,OACR,OAAO,EAET,IAAK,IAAIzB,EAAI,EAAG0S,EAAKiX,EAAMloB,OAAQzB,EAAI0S,IAAM1S,EAAG,CAC9C,MAAM8nB,EAAO6B,EAAM3pB,GACnB,GAAI+qB,GAAsBlX,EAAiBvU,EAAQwoB,EAAMhU,EAAQhJ,EAAGuG,GAClE,OAAO,EAET/R,EAASwoB,EAAKA,EAAKrmB,OAAS,EAC9B,CACA,OAAO,CACT,CckEWkvB,CACLhvB,KAAK6tB,6BACL,EACA7tB,KAAKquB,OACLruB,KAAKmS,OACLhJ,EACAuG,EAEJ,CAOAkD,UACE,OPjLG,SAAsBV,EAAiBvU,EAAQqqB,EAAO7V,GAC3D,IAAIU,EAAO,EACX,IAAK,IAAIxU,EAAI,EAAG0S,EAAKiX,EAAMloB,OAAQzB,EAAI0S,IAAM1S,EAAG,CAC9C,MAAM8nB,EAAO6B,EAAM3pB,GACnBwU,GAAQuZ,GAAYla,EAAiBvU,EAAQwoB,EAAMhU,GACnDxU,EAASwoB,EAAKA,EAAKrmB,OAAS,EAC9B,CACA,OAAO+S,CACT,COyKWoc,CACLjvB,KAAK6tB,6BACL,EACA7tB,KAAKquB,OACLruB,KAAKmS,OAET,CAeA6S,eAAemI,GACb,IAAIjb,EAcJ,YAbcnG,IAAVohB,GACFjb,EAAkBlS,KAAK6tB,6BAA6BluB,QACpD2tB,GACEpb,EACA,EACAlS,KAAKquB,OACLruB,KAAKmS,OACLgb,IAGFjb,EAAkBlS,KAAKkS,gBAGlB6V,GACL7V,EACA,EACAlS,KAAKquB,OACLruB,KAAKmS,OAET,CAKA+c,WACE,OAAOlvB,KAAKquB,MACd,CAKAc,wBACE,GAAInvB,KAAKsuB,6BAA+BtuB,KAAKge,cAAe,CAC1D,MAAMuO,EAAc,GAClBvsB,KAAKkS,gBACL,EACAlS,KAAKquB,OACLruB,KAAKmS,QAEPnS,KAAKuuB,oBAAsBzB,GACzB9sB,KAAK6tB,6BACL,EACA7tB,KAAKquB,OACLruB,KAAKmS,OACLoa,GAEFvsB,KAAKsuB,4BAA8BtuB,KAAKge,aAC1C,CACA,OAAOhe,KAAKuuB,mBACd,CAQAa,oBACE,OAAO,IAAI,GAAWpvB,KAAKmvB,wBAAwBxvB,QAAS,MAC9D,CAKAkuB,6BACE,GAAI7tB,KAAKytB,mBAAqBztB,KAAKge,cAAe,CAChD,MAAM9L,EAAkBlS,KAAKkS,iBHpO5B,SACLA,EACAvU,EACAqqB,EACA7V,EACAgb,GAEA,IAAK,IAAI9uB,EAAI,EAAG0S,EAAKiX,EAAMloB,OAAQzB,EAAI0S,IAAM1S,EAAG,CAC9C,MAAM8nB,EAAO6B,EAAM3pB,GACnB,IAAK6uB,GAAuBhb,EAAiBvU,EAAQwoB,EAAMhU,EAAQgb,GACjE,OAAO,EAELhH,EAAKrmB,SACPnC,EAASwoB,EAAKA,EAAKrmB,OAAS,GAEhC,CACA,OAAO,CACT,CGqNQuvB,CAAwBnd,EAAiB,EAAGlS,KAAKquB,OAAQruB,KAAKmS,SAI9DnS,KAAK0tB,yBAA2Bxb,EAAgBvS,QAChDK,KAAK0tB,yBAAyB5tB,OAASwtB,GACrCttB,KAAK0tB,yBACL,EACA1tB,KAAKquB,OACLruB,KAAKmS,SAPPnS,KAAK0tB,yBAA2Bxb,EAUlClS,KAAKytB,kBAAoBztB,KAAKge,aAChC,CACA,OAAOhe,KAAK0tB,wBACd,CAOApI,8BAA8B9B,GAC5B,MAAMuD,EAA4B,GAC5BuI,EAAkB,GAWxB,OAVAvI,EAA0BjnB,OlB0GvB,SACLoS,EACAvU,EACAqqB,EACA7V,EACAmS,EACAyC,EACAC,EACAsI,GAEA,IAAK,IAAIjxB,EAAI,EAAG0S,EAAKiX,EAAMloB,OAAQzB,EAAI0S,IAAM1S,EAAG,CAC9C,MAAM8nB,EAAO6B,EAAM3pB,GACbipB,EAAiB,GACvBN,EAAmBW,GACjBzV,EACAvU,EACAwoB,EACAhU,EACAmS,EACAyC,EACAC,EACAM,GAEFgI,EAAgBpvB,KAAKonB,GACrB3pB,EAASwoB,EAAKA,EAAKrmB,OAAS,EAC9B,CACA,OAAOknB,CACT,CkBrIuCuI,CACjCvvB,KAAKkS,gBACL,EACAlS,KAAKquB,OACLruB,KAAKmS,OACLzT,KAAKuK,KAAKua,GACVuD,EACA,EACAuI,GAEK,IAAI,GAAavI,EAA2B,KAAMuI,EAC3D,CAQAE,WAAWxS,GACT,GAAIA,EAAQ,GAAKhd,KAAKquB,OAAOvuB,QAAUkd,EACrC,OAAO,KAET,IAAIrf,EACJ,GAAc,IAAVqf,EACFrf,EAAS,MACJ,CACL,MAAM8xB,EAAWzvB,KAAKquB,OAAOrR,EAAQ,GACrCrf,EAAS8xB,EAASA,EAAS3vB,OAAS,EACtC,CACA,MAAMqmB,EAAOnmB,KAAKquB,OAAOrR,GAAOrd,QAC1BuE,EAAMiiB,EAAKA,EAAKrmB,OAAS,GAC/B,GAAe,IAAXnC,EACF,IAAK,IAAIU,EAAI,EAAG0S,EAAKoV,EAAKrmB,OAAQzB,EAAI0S,IAAM1S,EAC1C8nB,EAAK9nB,IAAMV,EAGf,OAAO,IAAI,GACTqC,KAAKkS,gBAAgBvS,MAAMhC,EAAQuG,GACnClE,KAAK+kB,OACLoB,EAEJ,CAOAuJ,cACE,MAAM3K,EAAS/kB,KAAK+kB,OACd7S,EAAkBlS,KAAKkS,gBACvB8V,EAAQhoB,KAAKquB,OACbI,EAAW,GACjB,IAAI9wB,EAAS,EACb,IAAK,IAAIU,EAAI,EAAG0S,EAAKiX,EAAMloB,OAAQzB,EAAI0S,IAAM1S,EAAG,CAC9C,MAAM8nB,EAAO6B,EAAM3pB,GAAGsB,QAChBuE,EAAMiiB,EAAKA,EAAKrmB,OAAS,GAC/B,GAAe,IAAXnC,EACF,IAAK,IAAI0kB,EAAI,EAAGwE,EAAKV,EAAKrmB,OAAQuiB,EAAIwE,IAAMxE,EAC1C8D,EAAK9D,IAAM1kB,EAGf,MAAMiwB,EAAU,IAAI,GAClB1b,EAAgBvS,MAAMhC,EAAQuG,GAC9B6gB,EACAoB,GAEFsI,EAASvuB,KAAK0tB,GACdjwB,EAASuG,CACX,CACA,OAAOuqB,CACT,CAOAnV,UACE,MAAO,cACT,CAQAiL,iBAAiB7X,GACf,Ob1NG,SACLwF,EACAvU,EACAqqB,EACA7V,EACAzF,GAEA,IAAK,IAAIrO,EAAI,EAAG0S,EAAKiX,EAAMloB,OAAQzB,EAAI0S,IAAM1S,EAAG,CAC9C,MAAM8nB,EAAO6B,EAAM3pB,GACnB,GACE8rB,GAA0BjY,EAAiBvU,EAAQwoB,EAAMhU,EAAQzF,GAEjE,OAAO,EAET/O,EAASwoB,EAAKA,EAAKrmB,OAAS,EAC9B,CACA,OAAO,CACT,CayMW6vB,CACL3vB,KAAK6tB,6BACL,EACA7tB,KAAKquB,OACLruB,KAAKmS,OACLzF,EAEJ,CAQA+Y,eAAe5U,EAAakU,GAC1B/kB,KAAK0lB,UAAUX,EAAQlU,EAAa,GAC/B7Q,KAAKkS,kBACRlS,KAAKkS,gBAAkB,IAEzB,MAAM8V,EnBrXH,SACL9V,EACAvU,EACAsqB,EACA9V,EACA6V,GAEAA,EAAQA,GAAgB,GACxB,IAAI3pB,EAAI,EACR,IAAK,IAAIgkB,EAAI,EAAGwE,EAAKoB,EAAcnoB,OAAQuiB,EAAIwE,IAAMxE,EAAG,CACtD,MAAM8D,EAAOQ,GACXzU,EACAvU,EACAsqB,EAAc5F,GACdlQ,EACA6V,EAAM3pB,IAEY,IAAhB8nB,EAAKrmB,SACPqmB,EAAK,GAAKxoB,GAEZqqB,EAAM3pB,KAAO8nB,EACbxoB,EAASwoB,EAAKA,EAAKrmB,OAAS,EAC9B,CAEA,OADAkoB,EAAMloB,OAASzB,EACR2pB,CACT,CmB4VkB4H,CACZ5vB,KAAKkS,gBACL,EACArB,EACA7Q,KAAKmS,OACLnS,KAAKquB,QAEP,GAAqB,IAAjBrG,EAAMloB,OACRE,KAAKkS,gBAAgBpS,OAAS,MACzB,CACL,MAAM+vB,EAAW7H,EAAMA,EAAMloB,OAAS,GACtCE,KAAKkS,gBAAgBpS,OACC,IAApB+vB,EAAS/vB,OAAe,EAAI+vB,EAASA,EAAS/vB,OAAS,EAC3D,CACAE,KAAK8d,SACP,EAGF,U,UClbA,MAAM,GzBAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GyBOzB,MAAMgS,GASJ1jB,YAAYnL,EAAMiR,EAAiBiU,EAAM4J,EAAYC,GAInDhwB,KAAKiwB,cAMLjwB,KAAKyM,QAMLzM,KAAKkwB,IAAMF,EAMXhwB,KAAKmwB,MAAQlvB,EAMbjB,KAAKowB,iBAAmBle,EAMxBlS,KAAKuuB,oBAAsB,KAM3BvuB,KAAKqwB,eAAiB,KAMtBrwB,KAAKgrB,MAAQ7E,EAMbnmB,KAAKswB,YAAcP,CACrB,CAQApR,IAAIjf,GACF,OAAOM,KAAKswB,YAAY5wB,EAC1B,CAOA+N,YAYE,OAXKzN,KAAKyM,UACRzM,KAAKyM,QACY,UAAfzM,KAAKmwB,MACDne,EAA6BhS,KAAKowB,kBAClCne,EACEjS,KAAKowB,iBACL,EACApwB,KAAKowB,iBAAiBtwB,OACtB,IAGHE,KAAKyM,OACd,CAKAqhB,uBACE,IAAK9tB,KAAKuuB,oBAAqB,CAC7B,MAAMR,EAAajb,EAAU9S,KAAKyN,aAClCzN,KAAKuuB,oBAAsBjC,GACzBtsB,KAAKowB,iBACL,EAC8BpwB,KAAU,MACxC,EACA+tB,EACA,EAEJ,CACA,OAAO/tB,KAAKuuB,mBACd,CAKAY,wBACE,IAAKnvB,KAAKuuB,oBAAqB,CAC7B,MAAMhC,EAAc,GAClBvsB,KAAKowB,iBACL,EACqCpwB,KAAU,MAC/C,GAEFA,KAAKuuB,oBAAsBzB,GACzB9sB,KAAKowB,iBACL,EACqCpwB,KAAU,MAC/C,EACAusB,EAEJ,CACA,OAAOvsB,KAAKuuB,mBACd,CAKAxD,kBAUE,OATK/qB,KAAKqwB,iBACRrwB,KAAKqwB,eAAiBnI,GACpBloB,KAAKowB,iBACL,EACApwB,KAAKowB,iBAAiBtwB,OACtB,EACA,KAGGE,KAAKqwB,cACd,CAKA5E,mBACE,IAAKzrB,KAAKqwB,eAAgB,CACxBrwB,KAAKqwB,eAAiB,GACtB,MAAMne,EAAkBlS,KAAKowB,iBAC7B,IAAIzyB,EAAS,EACb,MAAMwoB,EAAqCnmB,KAAU,MACrD,IAAK,IAAI3B,EAAI,EAAG0S,EAAKoV,EAAKrmB,OAAQzB,EAAI0S,IAAM1S,EAAG,CAC7C,MAAM6F,EAAMiiB,EAAK9nB,GACXkyB,EAAWrI,GAAiBhW,EAAiBvU,EAAQuG,EAAK,EAAG,IACnE,GAAOlE,KAAKqwB,eAAgBE,GAC5B5yB,EAASuG,CACX,CACF,CACA,OAAOlE,KAAKqwB,cACd,CAQAG,QACE,OAAOxwB,KAAKkwB,GACd,CAKArC,6BACE,OAAO7tB,KAAKowB,gBACd,CAQAK,cACE,OAAOzwB,IACT,CAMAyjB,sBAAsBD,GACpB,OAAOxjB,IACT,CASA0jB,oBAAoBF,EAAkBvL,GACpC,OAAOjY,IACT,CAOA8e,gBACE,OAAO9e,KAAKswB,WACd,CAKA/K,YACE,OAAO,CACT,CAKAmL,mBACE,OAAO1wB,KAAKiwB,aACd,CAOA3W,UACE,OAAOtZ,KAAKmwB,KACd,CAOAlY,UAAUzD,GAER,MAAMoQ,GADNpQ,EAAa,GAAcA,IACI/G,YACzBoX,EAAkBrQ,EAAW5G,iBACnC,GAAIgX,GAAeC,EAAiB,CAClC,MAAMT,EAAQ,GAAUS,GAAmB,GAAUD,GACrDzD,GACE,GACA0D,EAAgB,GAChBA,EAAgB,GAChBT,GACCA,EACD,EACA,EACA,GAEFhC,GACEpiB,KAAKowB,iBACL,EACApwB,KAAKowB,iBAAiBtwB,OACtB,EACA,GACAE,KAAKowB,iBAET,CACF,CAIA9E,UACE,OAAOtrB,KAAKgrB,KACd,EAGF8E,GAAcjsB,UAAUqrB,SAAWY,GAAcjsB,UAAUynB,QAK3DwE,GAAcjsB,UAAUqhB,mBACtB4K,GAAcjsB,UAAUgqB,2BA8D1B,UCxFA,SAAS8C,GAAgBxsB,EAAKysB,EAAQjvB,GACpC,GAAY,IAARwC,EAAW,CACb,MAAM0sB,EAAQ,CACZpxB,KAAM,GACN+e,OAAQ,GACR3E,SAAU,IAEN3V,EAAMvC,EAAIC,aAAeD,EAAIX,IACnCW,EAAIoC,WAAW+sB,GAAgBD,EAAO3sB,GACtC2sB,EAAM/wB,OAAS+wB,EAAMhX,SAAS/Z,OAC1B+wB,EAAM/wB,SACR8wB,EAAOC,EAAMrgB,MAAQqgB,EAEzB,CACF,CAQA,SAASC,GAAe3sB,EAAK0sB,EAAOlvB,GAClC,GAAY,KAARwC,EACF0sB,EAAME,QAAUpvB,EAAIC,kBACf,GAAY,IAARuC,EACT0sB,EAAMrgB,KAAO7O,EAAI4D,kBACZ,GAAY,IAARpB,EACT0sB,EAAMnkB,OAAS/K,EAAIC,kBACd,GAAY,IAARuC,EACT0sB,EAAMhX,SAAS3Z,KAAKyB,EAAIX,UACnB,GAAY,IAARmD,EACT0sB,EAAMpxB,KAAKS,KAAKyB,EAAI4D,mBACf,GAAY,IAARpB,EAAW,CACpB,IAAItF,EAAQ,KACZ,MAAMqF,EAAMvC,EAAIC,aAAeD,EAAIX,IACnC,KAAOW,EAAIX,IAAMkD,GAEfrF,EACU,KAFVsF,EAAMxC,EAAIC,cAAgB,GAGpBD,EAAI4D,aACI,IAARpB,EACAxC,EAAI+C,YACI,IAARP,EACAxC,EAAIgD,aACI,IAARR,EACAxC,EAAIuD,eACI,IAARf,EACAxC,EAAIC,aACI,IAARuC,EACAxC,EAAIwD,cACI,IAARhB,EACAxC,EAAI0D,cACJ,KAERwrB,EAAMrS,OAAOte,KAAKrB,EACpB,CACF,CAQA,SAASmyB,GAAiB7sB,EAAKwV,EAAShY,GACtC,GAAW,GAAPwC,EACFwV,EAAQqW,GAAKruB,EAAIC,kBACZ,GAAW,GAAPuC,EAAU,CACnB,MAAMD,EAAMvC,EAAIC,aAAeD,EAAIX,IACnC,KAAOW,EAAIX,IAAMkD,GAAK,CACpB,MAAMxE,EAAMia,EAAQkX,MAAMpxB,KAAKkC,EAAIC,cAC7B/C,EAAQ8a,EAAQkX,MAAMrS,OAAO7c,EAAIC,cACvC+X,EAAQoW,WAAWrwB,GAAOb,CAC5B,CACF,MAAkB,GAAPsF,EACTwV,EAAQ1Y,KAAOU,EAAIC,aACH,GAAPuC,IACTwV,EAAQI,SAAWpY,EAAIX,IAE3B,CASA,SAASiwB,GAAetvB,EAAKkvB,EAAOxyB,GAClCsD,EAAIX,IAAM6vB,EAAMhX,SAASxb,GACzB,MAAM6F,EAAMvC,EAAIC,aAAeD,EAAIX,IAE7B2Y,EAAU,CACdkX,MAAOA,EACP5vB,KAAM,EACN8uB,WAAY,CAAC,GAGf,OADApuB,EAAIoC,WAAWitB,GAAkBrX,EAASzV,GACnCyV,CACT,CAuBA,OAzYA,cAAkB,GAIhBvN,YAAYC,GACV0C,QAEA1C,EAAUA,GAAoB,CAAC,EAK/BrM,KAAK6Y,eAAiB,IAAI,EAAW,CACnCtM,KAAM,GACNyC,MAAO,gBAOThP,KAAKkxB,cAAgB7kB,EAAQ8kB,aACzB9kB,EAAQ8kB,aACR,GAMJnxB,KAAKoxB,cAAgB/kB,EAAQglB,aAM7BrxB,KAAKsxB,WAAajlB,EAAQklB,UAAYllB,EAAQklB,UAAY,QAM1DvxB,KAAKwxB,QAAUnlB,EAAQukB,OAASvkB,EAAQukB,OAAS,KAMjD5wB,KAAKyxB,YAAcplB,EAAQqlB,WAE3B1xB,KAAK+Y,oBAAsB,CACzB,qCACA,yBAEJ,CAWA4Y,iBAAiBhwB,EAAKgY,EAASzH,EAAiBiU,GAC9CxkB,EAAIX,IAAM2Y,EAAQI,SAElB,MAAM7V,EAAMvC,EAAIC,aAAeD,EAAIX,IACnC,IAAI4wB,EAAM,EACN9xB,EAAS,EACTqJ,EAAI,EACJuG,EAAI,EACJmiB,EAAY,EACZC,EAAa,EAEjB,KAAOnwB,EAAIX,IAAMkD,GAAK,CACpB,IAAKpE,EAAQ,CACX,MAAMiyB,EAASpwB,EAAIC,aACnBgwB,EAAe,EAATG,EACNjyB,EAASiyB,GAAU,CACrB,CAEAjyB,IAEY,IAAR8xB,GAAqB,IAARA,GACfzoB,GAAKxH,EAAIwD,cACTuK,GAAK/N,EAAIwD,cAEG,IAARysB,GAEEC,EAAYC,IACd3L,EAAKjmB,KAAK2xB,GACVC,EAAaD,GAIjB3f,EAAgBhS,KAAKiJ,EAAGuG,GACxBmiB,GAAa,GACI,IAARD,EACLC,EAAYC,IAEd5f,EAAgBhS,KACdgS,EAAgB4f,GAChB5f,EAAgB4f,EAAa,IAE/BD,GAAa,GAGfphB,GAAO,EAAO,GAElB,CAEIohB,EAAYC,IACd3L,EAAKjmB,KAAK2xB,GACVC,EAAaD,EAEjB,CASAG,eAAerwB,EAAKswB,EAAY5lB,GAC9B,MAAMpL,EAAOgxB,EAAWhxB,KACxB,GAAa,IAATA,EACF,OAAO,KAGT,IAAI0Y,EACJ,MAAM6E,EAASyT,EAAWlC,WAE1B,IAAIC,EACChwB,KAAKyxB,aAGRzB,EAAKxR,EAAOxe,KAAKyxB,oBACVjT,EAAOxe,KAAKyxB,cAHnBzB,EAAKiC,EAAWjC,GAMlBxR,EAAOxe,KAAKsxB,YAAcW,EAAWpB,MAAMrgB,KAE3C,MAAM0B,EAA+C,GAC/CiU,EAAoC,GAC1CnmB,KAAK2xB,iBAAiBhwB,EAAKswB,EAAY/f,EAAiBiU,GAExD,MAAM+L,EAsOV,SAAyBjxB,EAAMkxB,GAE7B,IAAID,EACS,IAATjxB,EACFixB,EAA2B,IAAZC,EAAgB,QAAU,aACvB,IAATlxB,EACTixB,EAA2B,IAAZC,EAAgB,aAAe,kBAC5B,IAATlxB,IACTixB,EAAe,WAIjB,OAAOA,CACT,CAnPyBE,CAAgBnxB,EAAMklB,EAAKrmB,QAEhD,GAAIE,KAAKkxB,gBAAkB,GACzBvX,EAAU,IAAI3Z,KAAKkxB,cACjBgB,EACAhgB,EACAiU,EACA3H,EACAwR,GAEFrW,EAAQ1B,UAAU5L,EAAQwM,oBACrB,CACL,IAAIwZ,EACJ,GAAoB,WAAhBH,EAA2B,CAC7B,MAAMlK,ELfP,SAAqB9V,EAAiBiU,GAC3C,MAAM6B,EAAQ,GACd,IAAIrqB,EAAS,EACT20B,EAAe,EACnB,IAAK,IAAIj0B,EAAI,EAAG0S,EAAKoV,EAAKrmB,OAAQzB,EAAI0S,IAAM1S,EAAG,CAC7C,MAAM6F,EAAMiiB,EAAK9nB,GAEjB,GAAK2uB,GAAsB9a,EAAiBvU,EAAQuG,EAAK,GAElD,CACL,GAAqB,IAAjB8jB,EAAMloB,OACR,SAEFkoB,EAAMA,EAAMloB,OAAS,GAAGI,KAAKimB,EAAKmM,GACpC,MANEtK,EAAM9nB,KAAKimB,EAAKxmB,MAAM2yB,EAAcj0B,EAAI,IAO1Ci0B,EAAej0B,EAAI,EACnBV,EAASuG,CACX,CACA,OAAO8jB,CACT,CKJsB,CAAY9V,EAAiBiU,GAC3CkM,EACErK,EAAMloB,OAAS,EACX,IAAI,GAAaoS,EAAiB,KAAM8V,GACxC,IAAI,GAAQ9V,EAAiB,KAAMiU,EAC3C,MACEkM,EACmB,UAAjBH,EACI,IAAI,GAAMhgB,EAAiB,MACV,eAAjBggB,EACA,IAAI,GAAWhgB,EAAiB,MACf,eAAjBggB,EACA,IAAI,GAAWhgB,EAAiB,MACf,oBAAjBggB,EACA,IAAI,GAAgBhgB,EAAiB,KAAMiU,GAC3C,KAKRxM,EAAU,IAAI4Y,EAFZvyB,KACF,eAEIA,KAAKoxB,eACPzX,EAAQ6Y,gBAAgBxyB,KAAKoxB,eAE/B,MAAMrX,EAAWC,GAA6BqY,GAAM,EAAOhmB,GAC3DsN,EAAQ8Y,YAAY1Y,QACThO,IAAPikB,GACFrW,EAAQ+Y,MAAM1C,GAEhBrW,EAAQ+E,cAAcF,GAAQ,EAChC,CAEA,OAAO7E,CACT,CAKAL,UACE,MAAO,aACT,CAUAE,aAAaxJ,EAAQ3D,GACnB,MAAMukB,EAAS5wB,KAAKwxB,QAEd3Y,EAAiB,IADvBxM,EAAUrM,KAAKmZ,aAAa9M,IACOwM,gBACnCA,EAAezK,eAAe/B,EAAQK,QACtCL,EAAQwM,eAAiBA,EAEzB,MAAMlX,EAAM,IAAI,GAA+B,GACzCgxB,EAAYhxB,EAAIoC,WAAW4sB,GAAiB,CAAC,GAC7C9W,EAAW,GACjB,IAAK,MAAMrJ,KAAQmiB,EAAW,CAC5B,GAAI/B,IAAWA,EAAO1U,SAAS1L,GAC7B,SAEF,MAAMoiB,EAAWD,EAAUniB,GAErB9D,EAASkmB,EAAW,CAAC,EAAG,EAAGA,EAASlmB,OAAQkmB,EAASlmB,QAAU,KACrEmM,EAAe1K,UAAUzB,GAEzB,IAAK,IAAIrO,EAAI,EAAG0S,EAAK6hB,EAAS9yB,OAAQzB,EAAI0S,IAAM1S,EAAG,CACjD,MAAM4zB,EAAahB,GAAetvB,EAAKixB,EAAUv0B,GAC3Csb,EAAU3Z,KAAKgyB,eAAerwB,EAAKswB,EAAY5lB,GACrC,OAAZsN,GACFE,EAAS3Z,KAAKyZ,EAElB,CACF,CAEA,OAAOE,CACT,CASAZ,eAAejJ,GACb,OAAOhQ,KAAK6Y,cACd,CAOAga,UAAUjC,GACR5wB,KAAKwxB,QAAUZ,CACjB,GCnSK,MAAMkC,GAAOr0B,IA4PpB,OA9OA,MAKE2N,YAAY2mB,EAAkBC,GAK5BhzB,KAAKizB,kBAAoBF,EAMzB/yB,KAAKkzB,aAAeF,EAMpBhzB,KAAKmzB,UAAY,GAMjBnzB,KAAKozB,YAAc,GAMnBpzB,KAAKqzB,gBAAkB,CAAC,CAC1B,CAKA9pB,QACEvJ,KAAKmzB,UAAUrzB,OAAS,EACxBE,KAAKozB,YAAYtzB,OAAS,EAC1B,GAAME,KAAKqzB,gBACb,CAMAC,UACE,MAAMC,EAAWvzB,KAAKmzB,UAChBK,EAAaxzB,KAAKozB,YAClBK,EAAUF,EAAS,GACF,GAAnBA,EAASzzB,QACXyzB,EAASzzB,OAAS,EAClB0zB,EAAW1zB,OAAS,IAEpByzB,EAAS,GAAKA,EAASxpB,MACvBypB,EAAW,GAAKA,EAAWzpB,MAC3B/J,KAAK0zB,QAAQ,IAEf,MAAMC,EAAa3zB,KAAKkzB,aAAaO,GAErC,cADOzzB,KAAKqzB,gBAAgBM,GACrBF,CACT,CAOAG,QAAQH,GACNhjB,IAASzQ,KAAKkzB,aAAaO,KAAYzzB,KAAKqzB,iBAAkB,IAC9D,MAAMQ,EAAW7zB,KAAKizB,kBAAkBQ,GACxC,OAAII,GAAYf,KACd9yB,KAAKmzB,UAAUjzB,KAAKuzB,GACpBzzB,KAAKozB,YAAYlzB,KAAK2zB,GACtB7zB,KAAKqzB,gBAAgBrzB,KAAKkzB,aAAaO,KAAY,EACnDzzB,KAAK8zB,UAAU,EAAG9zB,KAAKmzB,UAAUrzB,OAAS,IACnC,EAGX,CAKAi0B,WACE,OAAO/zB,KAAKmzB,UAAUrzB,MACxB,CAQAk0B,mBAAmBhX,GACjB,OAAe,EAARA,EAAY,CACrB,CAQAiX,oBAAoBjX,GAClB,OAAe,EAARA,EAAY,CACrB,CAQAkX,gBAAgBlX,GACd,OAAQA,EAAQ,GAAM,CACxB,CAMAmX,WACE,IAAI91B,EACJ,IAAKA,GAAK2B,KAAKmzB,UAAUrzB,QAAU,GAAK,EAAGzB,GAAK,EAAGA,IACjD2B,KAAK0zB,QAAQr1B,EAEjB,CAKA+1B,UACE,OAAiC,IAA1Bp0B,KAAKmzB,UAAUrzB,MACxB,CAMAu0B,YAAY30B,GACV,OAAOA,KAAOM,KAAKqzB,eACrB,CAMAiB,SAASb,GACP,OAAOzzB,KAAKq0B,YAAYr0B,KAAKkzB,aAAaO,GAC5C,CAMAC,QAAQ1W,GACN,MAAMuW,EAAWvzB,KAAKmzB,UAChBK,EAAaxzB,KAAKozB,YAClBmB,EAAQhB,EAASzzB,OACjB2zB,EAAUF,EAASvW,GACnB6W,EAAWL,EAAWxW,GACtBwX,EAAaxX,EAEnB,KAAOA,EAAQuX,GAAS,GAAG,CACzB,MAAME,EAASz0B,KAAKg0B,mBAAmBhX,GACjC0X,EAAS10B,KAAKi0B,oBAAoBjX,GAElC2X,EACJD,EAASH,GAASf,EAAWkB,GAAUlB,EAAWiB,GAC9CC,EACAD,EAENlB,EAASvW,GAASuW,EAASoB,GAC3BnB,EAAWxW,GAASwW,EAAWmB,GAC/B3X,EAAQ2X,CACV,CAEApB,EAASvW,GAASyW,EAClBD,EAAWxW,GAAS6W,EACpB7zB,KAAK8zB,UAAUU,EAAYxX,EAC7B,CAOA8W,UAAUU,EAAYxX,GACpB,MAAMuW,EAAWvzB,KAAKmzB,UAChBK,EAAaxzB,KAAKozB,YAClBK,EAAUF,EAASvW,GACnB6W,EAAWL,EAAWxW,GAE5B,KAAOA,EAAQwX,GAAY,CACzB,MAAMI,EAAc50B,KAAKk0B,gBAAgBlX,GACzC,KAAIwW,EAAWoB,GAAef,GAK5B,MAJAN,EAASvW,GAASuW,EAASqB,GAC3BpB,EAAWxW,GAASwW,EAAWoB,GAC/B5X,EAAQ4X,CAIZ,CACArB,EAASvW,GAASyW,EAClBD,EAAWxW,GAAS6W,CACtB,CAKAgB,eACE,MAAM9B,EAAmB/yB,KAAKizB,kBACxBM,EAAWvzB,KAAKmzB,UAChBK,EAAaxzB,KAAKozB,YACxB,IAAIpW,EAAQ,EACZ,MAAMpU,EAAI2qB,EAASzzB,OACnB,IAAI2zB,EAASp1B,EAAGw1B,EAChB,IAAKx1B,EAAI,EAAGA,EAAIuK,IAAKvK,EACnBo1B,EAAUF,EAASl1B,GACnBw1B,EAAWd,EAAiBU,GACxBI,GAAYf,UACP9yB,KAAKqzB,gBAAgBrzB,KAAKkzB,aAAaO,KAE9CD,EAAWxW,GAAS6W,EACpBN,EAASvW,KAAWyW,GAGxBF,EAASzzB,OAASkd,EAClBwW,EAAW1zB,OAASkd,EACpBhd,KAAKm0B,UACP,GC3PF,GACQ,EADR,GAEW,EAFX,GAGU,EAHV,GAQS,EART,GASS,EC6GT,OAlHA,cAAwB,GAKtB/nB,YAAY0oB,EAAsBC,GAChChmB,OAKE,SAAU0kB,GACR,OAAOqB,EAAqB7pB,MAAM,KAAMwoB,EAC1C,IAKA,SAAUA,GACR,OAAmDA,EAAQ,GAAIuB,QACjE,IAIFh1B,KAAKi1B,uBAAyBj1B,KAAKk1B,iBAAiB9X,KAAKpd,MAMzDA,KAAKm1B,oBAAsBJ,EAM3B/0B,KAAKo1B,cAAgB,EAMrBp1B,KAAKq1B,kBAAoB,CAAC,CAC5B,CAMAzB,QAAQH,GACN,MAAM6B,EAAQvmB,MAAM6kB,QAAQH,GAC5B,GAAI6B,EAAO,CACI7B,EAAQ,GAChB3X,iBAAiBiC,GAAkB/d,KAAKi1B,uBAC/C,CACA,OAAOK,CACT,CAKAC,kBACE,OAAOv1B,KAAKo1B,aACd,CAMAF,iBAAiB9Y,GACf,MAAMoZ,EAAmDpZ,EAAY,OAC/DqZ,EAAQD,EAAKE,WACnB,GACED,IAAUE,IACVF,IAAUE,IACVF,IAAUE,GACV,CACIF,IAAUE,IACZH,EAAK3Y,oBAAoBkB,GAAkB/d,KAAKi1B,wBAElD,MAAMW,EAAUJ,EAAKR,SACjBY,KAAW51B,KAAKq1B,2BACXr1B,KAAKq1B,kBAAkBO,KAC5B51B,KAAKo1B,eAETp1B,KAAKm1B,qBACP,CACF,CAMAU,cAAcC,EAAiBC,GAC7B,IACIN,EAAOD,EAAMI,EADbI,EAAW,EAEf,KACEh2B,KAAKo1B,cAAgBU,GACrBE,EAAWD,GACX/1B,KAAK+zB,WAAa,GAElByB,EAAmDx1B,KAAKszB,UAAU,GAClEsC,EAAUJ,EAAKR,SACfS,EAAQD,EAAKE,WACTD,IAAUE,IAAoBC,KAAW51B,KAAKq1B,oBAChDr1B,KAAKq1B,kBAAkBO,IAAW,IAChC51B,KAAKo1B,gBACLY,EACFR,EAAKlrB,OAGX,GCnHF,OACW,UADX,GAEW,UAFX,GAGU,SAHV,GAIW,SAJX,GAKkB,gBALlB,GAMkB,gBANlB,GAOY,UAPZ,GAQY,UARZ,GASU,SATV,GAUO,MC4XP,OA/UA,cAAwB,GAItB8B,YAAYC,GACV0C,QAKA/O,KAAK2d,GAKL3d,KAAKmd,KAKLnd,KAAK4d,GAML5d,KAAKi2B,YAAc5pB,EAAQ6pB,WAK3B,MAAMnG,EAAa3W,OAAOC,OAAO,CAAC,EAAGhN,GACH,iBAAvBA,EAAQ0jB,oBACVA,EAAWA,WAClB3W,OAAOC,OAAO0W,EAAY1jB,EAAQ0jB,aAGpCA,EAAW,SACWhkB,IAApBM,EAAQ8pB,QAAwB9pB,EAAQ8pB,QAAU,EACpD1lB,EAAoD,iBAAtCsf,EAAW,IAAqC,IAE9DA,EAAW,SACWhkB,IAApBM,EAAQ+pB,SAAwB/pB,EAAQ+pB,QAC1CrG,EAAW,IAAyB1jB,EAAQgqB,OAC5CtG,EAAW,SACiBhkB,IAA1BM,EAAQiqB,cAA8BjqB,EAAQiqB,cAAgB73B,IAChEsxB,EAAW,SACiBhkB,IAA1BM,EAAQkqB,cAA8BlqB,EAAQkqB,cAAgB,EAChExG,EAAW,SACWhkB,IAApBM,EAAQmqB,QAAwBnqB,EAAQmqB,SAAW/3B,IACrDsxB,EAAW,SACWhkB,IAApBM,EAAQoqB,QAAwBpqB,EAAQoqB,QAAUh4B,IAMpDuB,KAAK02B,gBACsB3qB,IAAzBgkB,EAAW4G,UAA0B5G,EAAW4G,UAAY,kBACvD5G,EAAW4G,UAElB32B,KAAK0e,cAAcqR,GAMnB/vB,KAAK42B,OAAS,IAChB,CAMAC,gBACE,OAAO72B,KAAKi2B,WACd,CAKAa,eACE,OAAO92B,KAAK02B,UACd,CASAK,cAAcC,GAEZ,MAAMvB,EACJz1B,KAAK42B,QACY,CACf/F,MAAO7wB,KACPg3B,aAAqBjrB,IAAZirB,GAA+BA,GAEtCX,EAASr2B,KAAKi3B,YAWpB,OAVAxB,EAAMU,QAAU,GAAMz3B,KAAK4W,MAA0B,IAApBtV,KAAKk3B,cAAsB,IAAK,EAAG,GACpEzB,EAAMW,QAAUp2B,KAAKm3B,aACrB1B,EAAM/oB,OAAS1M,KAAKyN,YACpBgoB,EAAMY,YAAoBtqB,IAAXsqB,GAAyBZ,EAAMuB,QAAqBX,EAAX53B,IACxDg3B,EAAMa,cAAgBt2B,KAAKo3B,mBAC3B3B,EAAMc,cAAgB73B,KAAKwK,IAAIlJ,KAAKq3B,mBAAoB,GACxD5B,EAAMe,QAAUx2B,KAAKs3B,aACrB7B,EAAMgB,QAAUz2B,KAAKu3B,aACrBv3B,KAAK42B,OAASnB,EAEPA,CACT,CAQA+B,eAAeC,GACb,OAAO,GACT,CAQAC,oBAAoBC,GAClB,OAAO,GACT,CASAlqB,YACE,OACEzN,KAAK2e,IAAI,GAEb,CAQAyY,mBACE,OAA8Bp3B,KAAK2e,IAAI,GACzC,CAQA0Y,mBACE,OAA8Br3B,KAAK2e,IAAI,GACzC,CAQA2Y,aACE,OAA8Bt3B,KAAK2e,IAAI,GACzC,CAQA4Y,aACE,OAA8Bv3B,KAAK2e,IAAI,GACzC,CAQAuY,aACE,OAA8Bl3B,KAAK2e,IAAI,GACzC,CAMAiZ,iBACE,OAAO,GACT,CASAT,aACE,OAA+Bn3B,KAAK2e,IAAI,GAC1C,CASAsY,YACE,OAA8Bj3B,KAAK2e,IAAI,GACzC,CAMAkZ,cAAc3B,GACZl2B,KAAKi2B,YAAcC,EACnBl2B,KAAK8d,SACP,CASA3P,UAAUzB,GACR1M,KAAKgH,IAAI,GAAsB0F,EACjC,CAQAorB,iBAAiBxB,GACft2B,KAAKgH,IAAI,GAA8BsvB,EACzC,CAQAyB,iBAAiBxB,GACfv2B,KAAKgH,IAAI,GAA8BuvB,EACzC,CAUAyB,WAAWvB,GACTz2B,KAAKgH,IAAI,GAAwByvB,EACnC,CAUAwB,WAAWzB,GACTx2B,KAAKgH,IAAI,GAAwBwvB,EACnC,CAQA0B,WAAW/B,GACT1lB,EAA0B,iBAAZ0lB,EAAsB,IACpCn2B,KAAKgH,IAAI,GAAuBmvB,EAClC,CAQAgC,WAAW/B,GACTp2B,KAAKgH,IAAI,GAAuBovB,EAClC,CASAgC,UAAUC,GACRr4B,KAAKgH,IAAI,GAAuBqxB,EAClC,CAKA1d,kBACM3a,KAAK42B,SACP52B,KAAK42B,OAAO/F,MAAQ,KACpB7wB,KAAK42B,OAAS,MAEhB7nB,MAAM4L,iBACR,GCnYF,GAMa,YANb,GAac,aAbd,GAsBc,aCtBd,GACa,EADb,GAEe,ECFf,IACE2d,OAAQ,SACRC,WAAY,aACZC,SAAU,YCFL,MAMMC,GAAoB,ICE1B,SAASC,GAAahsB,EAAQisB,EAAYC,GAC/C,OAAO,SASK1lB,EAAQjE,EAAYmE,EAAMylB,EAAUC,GAC5C,IAAK5lB,EACH,OAEF,IAAKjE,IAAe0pB,EAClB,OAAOzlB,EAET,MAAM6lB,EAAYJ,EAAa,EAAIvlB,EAAK,GAAKnE,EACvC+pB,EAAaL,EAAa,EAAIvlB,EAAK,GAAKnE,EACxCgqB,EAASH,EAAcA,EAAY,GAAK,EACxCI,EAASJ,EAAcA,EAAY,GAAK,EAC9C,IAAIrvB,EAAOiD,EAAO,GAAKqsB,EAAY,EAAIE,EACnCtvB,EAAO+C,EAAO,GAAKqsB,EAAY,EAAIE,EACnCvvB,EAAOgD,EAAO,GAAKssB,EAAa,EAAIE,EACpCtvB,EAAO8C,EAAO,GAAKssB,EAAa,EAAIE,EAIpCzvB,EAAOE,IACTF,GAAQE,EAAOF,GAAQ,EACvBE,EAAOF,GAELC,EAAOE,IACTF,GAAQE,EAAOF,GAAQ,EACvBE,EAAOF,GAGT,IAAIP,EAAI,GAAM+J,EAAO,GAAIzJ,EAAME,GAC3B+F,EAAI,GAAMwD,EAAO,GAAIxJ,EAAME,GAG/B,GAAIivB,GAAYD,GAAU3pB,EAAY,CACpC,MAAMkqB,EAAQ,GAAKlqB,EACnB9F,IACGgwB,EAAQz6B,KAAKS,IAAI,EAAIT,KAAKwK,IAAI,EAAGO,EAAOyJ,EAAO,IAAMimB,GACtDA,EAAQz6B,KAAKS,IAAI,EAAIT,KAAKwK,IAAI,EAAGgK,EAAO,GAAKvJ,GAAQwvB,GACvDzpB,IACGypB,EAAQz6B,KAAKS,IAAI,EAAIT,KAAKwK,IAAI,EAAGQ,EAAOwJ,EAAO,IAAMimB,GACtDA,EAAQz6B,KAAKS,IAAI,EAAIT,KAAKwK,IAAI,EAAGgK,EAAO,GAAKtJ,GAAQuvB,EACzD,CAEA,MAAO,CAAChwB,EAAGuG,EAEf,CACF,CAMO,SAAS2G,GAAKnD,GACnB,OAAOA,CACT,CC1DA,SAASkmB,GACPnqB,EACAoqB,EACAC,EACAC,GAEA,MAAMC,EAAc,GAASH,GAAaC,EAAa,GACjDG,EAAc,GAAUJ,GAAaC,EAAa,GAExD,OAAIC,EACK76B,KAAKqI,IAAIkI,EAAYvQ,KAAKwK,IAAIswB,EAAaC,IAE7C/6B,KAAKqI,IAAIkI,EAAYvQ,KAAKqI,IAAIyyB,EAAaC,GACpD,CAcA,SAASC,GAA2BzqB,EAAYqnB,EAAeC,GAC7D,IAAItyB,EAASvF,KAAKqI,IAAIkI,EAAYqnB,GAalC,OAVAryB,GACEvF,KAAKS,IAAI,EAHG,GAGST,KAAKwK,IAAI,EAAG+F,EAAaqnB,EAAgB,IAHlD,GAIZ,EACEC,IACFtyB,EAASvF,KAAKwK,IAAIjF,EAAQsyB,GAC1BtyB,GACEvF,KAAKS,IAAI,EARC,GAQWT,KAAKwK,IAAI,EAAGqtB,EAAgBtnB,EAAa,IARpD,GAUV,GAEG,GAAMhL,EAAQsyB,EAAgB,EAAmB,EAAhBD,EAC1C,CA0IO,SAASqD,GACdrD,EACAC,EACAqC,EACAS,EACAE,GAIA,OAFAX,OAAoB7sB,IAAX6sB,GAAuBA,EAEzB,SAQK3pB,EAAY6L,EAAW1H,EAAMylB,GACrC,QAAmB9sB,IAAfkD,EAA0B,CAC5B,MAAM2qB,EAAeP,EACjBD,GACE9C,EACA+C,EACAjmB,EACAmmB,GAEFjD,EAEJ,OAAKsC,GAAWC,EAGTa,GACLzqB,EACA2qB,EACArD,GALO,GAAMtnB,EAAYsnB,EAAeqD,EAO5C,CAGJ,CACF,CCnOO,SAASnjB,GAAQtD,GACtB,QAAiBpH,IAAboH,EACF,OAAO,CAGX,CAMO,SAAS,GAAKA,GACnB,QAAiBpH,IAAboH,EACF,OAAOA,CAGX,CCnBO,SAAS0mB,GAAOpxB,GACrB,OAAO/J,KAAKC,IAAI8J,EAAG,EACrB,CAQO,SAASqxB,GAAQrxB,GACtB,OAAO,EAAIoxB,GAAO,EAAIpxB,EACxB,CAQO,SAASsxB,GAAStxB,GACvB,OAAO,EAAIA,EAAIA,EAAI,EAAIA,EAAIA,EAAIA,CACjC,CC61DA,SAASuxB,GAAkBxnB,EAAUynB,GACnCC,YAAW,WACT1nB,EAASynB,EACX,GAAG,EACL,CAkMO,SAASE,GAAgBC,GAC9B,QAAIA,EAAUC,cAAgBD,EAAUE,eACjC,GAAiBF,EAAUC,aAAcD,EAAUE,iBAItDF,EAAUG,mBAAqBH,EAAUI,kBAGzCJ,EAAUK,iBAAmBL,EAAUM,eAI7C,CAUA,SAASC,GAAkBrpB,EAAY8B,EAAMwnB,EAAU3rB,EAAYkE,GAEjE,MAAM0nB,EAAWn8B,KAAK4U,KAAKH,GAC3B,IAAI2nB,EAAWp8B,KAAK8U,KAAKL,GACrB4nB,EAAOzpB,EAAW,GAAKupB,EAAWvpB,EAAW,GAAKwpB,EAClDE,EAAO1pB,EAAW,GAAKupB,EAAWvpB,EAAW,GAAKwpB,EACtDC,IAAS3nB,EAAK,GAAK,EAAIwnB,EAAS,IAAM3rB,EACtC+rB,IAASJ,EAAS,GAAKxnB,EAAK,GAAK,GAAKnE,EAGtC6rB,GAAYA,EAIZ,MAAO,CAHSC,EAAOF,EAAWG,EAAOF,EACzBE,EAAOH,EAAWE,EAAOD,EAG3C,CAEA,OApzDA,cAAmB,GAIjB1uB,YAAYC,GACV0C,QAKA/O,KAAK2d,GAKL3d,KAAKmd,KAKLnd,KAAK4d,GAELvR,EAAU+M,OAAOC,OAAO,CAAC,EAAGhN,GAM5BrM,KAAKi7B,OAAS,CAAC,EAAG,GAMlBj7B,KAAKk7B,YAAc,GAMnBl7B,KAAKm7B,oBAOLn7B,KAAKo7B,YAAc3jB,GAAiBpL,EAAQmI,WAAY,aAMxDxU,KAAKq7B,cAAgB,CAAC,IAAK,KAM3Br7B,KAAKs7B,cAAgB,KAMrBt7B,KAAKu7B,kBAMLv7B,KAAKw7B,gBAMLx7B,KAAKy7B,YAAc,KAMnBz7B,KAAK07B,gBAML17B,KAAK27B,cAML37B,KAAK47B,mBAAgB7vB,EAEjBM,EAAQmI,YACVgC,KAEEnK,EAAQ6G,SACV7G,EAAQ6G,OAASmF,GAAmBhM,EAAQ6G,OAAQlT,KAAKo7B,cAEvD/uB,EAAQK,SACVL,EAAQK,OAAS+L,GAAepM,EAAQK,OAAQ1M,KAAKo7B,cAGvDp7B,KAAK67B,cAAcxvB,EACrB,CAMAwvB,cAAcxvB,GACZ,MAAM0jB,EAAa3W,OAAOC,OAAO,CAAC,EAAGhN,GACrC,IAAK,MAAM3M,KAAOo8B,UACT/L,EAAWrwB,GAEpBM,KAAK0e,cAAcqR,GAAY,GAE/B,MAAMgM,EAg/CH,SAAoC1vB,GACzC,IAAI2vB,EACA1F,EACAC,EAIJ,MAAM0F,EAAiB,GACjBC,EAAoB,EAE1B,IAAI1F,OACkBzqB,IAApBM,EAAQmqB,QAAwBnqB,EAAQmqB,QAzsDnB,EA2sDnBC,OACkB1qB,IAApBM,EAAQoqB,QAAwBpqB,EAAQoqB,QAAUwF,EAEpD,MAAME,OACmBpwB,IAAvBM,EAAQ8vB,WAA2B9vB,EAAQ8vB,WAAaD,EAEpDE,OACmBrwB,IAAvBM,EAAQ+vB,YAA2B/vB,EAAQ+vB,WAEvCxD,OACmC7sB,IAAvCM,EAAQgwB,4BACJhwB,EAAQgwB,2BAGR9C,OACuBxtB,IAA3BM,EAAQktB,gBAA+BltB,EAAQktB,eAE3C/kB,EAAaiD,GAAiBpL,EAAQmI,WAAY,aAClD8nB,EAAa9nB,EAAW/G,YAC9B,IAAI8uB,EAAsBlwB,EAAQkwB,oBAC9B7vB,EAASL,EAAQK,OAChB0vB,GAAe1vB,IAAU8H,EAAW1G,aACvCyuB,GAAsB,EACtB7vB,EAAS4vB,GAGX,QAA4BvwB,IAAxBM,EAAQmwB,YAA2B,CACrC,MAAMA,EAAcnwB,EAAQmwB,YAC5BlG,EAAgBkG,EAAYhG,GAC5BD,OAC2BxqB,IAAzBywB,EAAY/F,GACR+F,EAAY/F,GACZ+F,EAAYA,EAAY18B,OAAS,GAGrCk8B,EADE3vB,EAAQowB,oBHx4DT,SACLD,EACA5D,EACAS,EACAE,GAGA,OADAX,OAAoB7sB,IAAX6sB,GAAuBA,EACzB,SAQK3pB,EAAY6L,EAAW1H,EAAMylB,GACrC,QAAmB9sB,IAAfkD,EAA0B,CAC5B,MAAMqnB,EAAgBkG,EAAY,GAC5BjG,EAAgBiG,EAAYA,EAAY18B,OAAS,GACjD85B,EAAeP,EACjBD,GACE9C,EACA+C,EACAjmB,EACAmmB,GAEFjD,EAGJ,GAAIuC,EACF,OAAKD,EAGEc,GACLzqB,EACA2qB,EACArD,GALO,GAAMtnB,EAAYsnB,EAAeqD,GAS5C,MAAM8C,EAASh+B,KAAKqI,IAAI6yB,EAAc3qB,GAChC0tB,EAAIj+B,KAAKQ,MAAM2b,GAAkB2hB,EAAaE,EAAQ5hB,IAC5D,OAAI0hB,EAAYG,GAAK/C,GAAgB+C,EAAIH,EAAY18B,OAAS,EACrD08B,EAAYG,EAAI,GAElBH,EAAYG,EACrB,CAGJ,CACF,CGu1D6BC,CACrBJ,EACA5D,GACC2D,GAAuB7vB,EACxB6sB,GAGqBI,GACrBrD,EACAC,EACAqC,GACC2D,GAAuB7vB,EACxB6sB,EAGN,KAAO,CAEL,MAKMsD,GALQP,EAGV59B,KAAKwK,IAAI,GAASozB,GAAa,GAAUA,IADxC,IAAM,UAA2B9nB,EAAW7G,oBAIxC8qB,GAAoB/5B,KAAKC,IAAIu9B,EArwDjB,GAuwDfY,EACJD,EACAn+B,KAAKC,IAAIu9B,EAAmBD,EAzwDT,GA4wDrB3F,EAAgBjqB,EAAQiqB,mBACFvqB,IAAlBuqB,EACFE,EAAU,EAEVF,EAAgBuG,EAAuBn+B,KAAKC,IAAIw9B,EAAY3F,GAI9DD,EAAgBlqB,EAAQkqB,mBACFxqB,IAAlBwqB,IAGEA,OAFoBxqB,IAApBM,EAAQoqB,aACoB1qB,IAA1BM,EAAQiqB,cACMA,EAAgB53B,KAAKC,IAAIw9B,EAAY1F,GAErCoG,EAAuBn+B,KAAKC,IAAIw9B,EAAY1F,GAG9CqG,GAKpBrG,EACED,EACA93B,KAAKQ,MACHR,KAAKS,IAAIm3B,EAAgBC,GAAiB73B,KAAKS,IAAIg9B,IAEvD5F,EAAgBD,EAAgB53B,KAAKC,IAAIw9B,EAAY1F,EAAUD,GAG7DwF,EADE3vB,EAAQowB,oBHv4DT,SACLtiB,EACAmc,EACAC,EACAqC,EACAS,EACAE,GAKA,OAHAX,OAAoB7sB,IAAX6sB,GAAuBA,EAChCrC,OAAkCxqB,IAAlBwqB,EAA8BA,EAAgB,EAEvD,SAQKtnB,EAAY6L,EAAW1H,EAAMylB,GACrC,QAAmB9sB,IAAfkD,EAA0B,CAC5B,MAAM2qB,EAAeP,EACjBD,GACE9C,EACA+C,EACAjmB,EACAmmB,GAEFjD,EAGJ,GAAIuC,EACF,OAAKD,EAGEc,GACLzqB,EACA2qB,EACArD,GALO,GAAMtnB,EAAYsnB,EAAeqD,GAS5C,MAAMtV,EAAY,KACZyY,EAAer+B,KAAK4K,KACxB5K,KAAKS,IAAIm3B,EAAgBsD,GAAgBl7B,KAAKS,IAAIgb,GAASmK,GAEvD3mB,GAAUmd,GAAa,GAAMwJ,GAAa,GAC1CoY,EAASh+B,KAAKqI,IAAI6yB,EAAc3qB,GAChC+tB,EAAkBt+B,KAAKQ,MAC3BR,KAAKS,IAAIm3B,EAAgBoG,GAAUh+B,KAAKS,IAAIgb,GAASxc,GAEjDs/B,EAAYv+B,KAAKwK,IAAI6zB,EAAcC,GAEzC,OAAO,GADe1G,EAAgB53B,KAAKC,IAAIwb,EAAO8iB,GAC1B1G,EAAeqD,EAC7C,CAGJ,CACF,CG80D6BsD,CACrBf,EACA7F,EACAC,EACAqC,GACC2D,GAAuB7vB,EACxB6sB,GAGqBI,GACrBrD,EACAC,EACAqC,GACC2D,GAAuB7vB,EACxB6sB,EAGN,CACA,MAAO,CACL4D,WAAYnB,EACZ1F,cAAeA,EACfC,cAAeA,EACfC,QAASA,EACT2F,WAAYA,EAEhB,CArnDqCiB,CAA2B/wB,GAM5DrM,KAAKq9B,eAAiBtB,EAAyBzF,cAM/Ct2B,KAAKs9B,eAAiBvB,EAAyBxF,cAM/Cv2B,KAAKu9B,YAAcxB,EAAyBI,WAM5Cn8B,KAAKw9B,aAAenxB,EAAQmwB,YAM5Bx8B,KAAKy9B,SAAWpxB,EAAQqxB,QAMxB19B,KAAK29B,SAAW5B,EAAyBvF,QAEzC,MAAMoH,EAi7CH,SAAgCvxB,GACrC,QAAuBN,IAAnBM,EAAQK,OAAsB,CAChC,MAAMksB,OAC+B7sB,IAAnCM,EAAQwxB,wBACJxxB,EAAQwxB,uBAEd,OAAOnF,GAAarsB,EAAQK,OAAQL,EAAQkwB,oBAAqB3D,EACnE,CAEA,MAAMpkB,EAAaiD,GAAiBpL,EAAQmI,WAAY,aACxD,IAA2B,IAAvBnI,EAAQ+vB,YAAuB5nB,EAAW1G,WAAY,CACxD,MAAMpB,EAAS8H,EAAW/G,YAAY9N,QAGtC,OAFA+M,EAAO,IAAMjO,IACbiO,EAAO,GAAKjO,IACLi6B,GAAahsB,GAAQ,GAAO,EACrC,CAEA,OAAO,EACT,CAn8C6BoxB,CAAuBzxB,GAC1C2vB,EAAuBD,EAAyBoB,WAChDY,EAmlDH,SAAkC1xB,GAGvC,QAD6BN,IAA3BM,EAAQ2xB,gBAA+B3xB,EAAQ2xB,eAC7B,CAClB,MAAMC,EAAoB5xB,EAAQ4xB,kBAClC,YAA0BlyB,IAAtBkyB,IAAyD,IAAtBA,GFl/DzC3Z,EAAYA,GAAa,GAAU,GAC5B,SAMKnR,EAAU0lB,GAClB,OAAIA,EACK1lB,OAGQpH,IAAboH,EACEzU,KAAKM,IAAImU,IAAamR,EACjB,EAEFnR,OAJT,CAQJ,IEi+D4B,IAAtB8qB,EACK,GAEwB,iBAAtBA,EFnhER,SAAuBr1B,GAC5B,MAAMs1B,EAAS,EAAIx/B,KAAKyN,GAAMvD,EAC9B,OAAO,SAMKuK,EAAU0lB,GAClB,OAAIA,EACK1lB,OAGQpH,IAAboH,EACFA,EAAWzU,KAAKQ,MAAMiU,EAAW+qB,EAAQ,IAAOA,OADlD,CAMJ,CACF,CEggEaC,CAAcF,GAEhB,EACT,CF7/DK,IAA0B3Z,EE8/D/B,OAAO7N,EACT,CApmD+B2nB,CAAyB/xB,GAMpDrM,KAAKq+B,aAAe,CAClBnrB,OAAQ0qB,EACR3uB,WAAY+sB,EACZ7oB,SAAU4qB,GAGZ/9B,KAAKs+B,iBAAiCvyB,IAArBM,EAAQ8G,SAAyB9G,EAAQ8G,SAAW,GACrEnT,KAAKu+B,uBACgBxyB,IAAnBM,EAAQ6G,OAAuB7G,EAAQ6G,OAAS,WAEvBnH,IAAvBM,EAAQ4C,WACVjP,KAAKw+B,cAAcnyB,EAAQ4C,iBACDlD,IAAjBM,EAAQoyB,MACjBz+B,KAAK0+B,QAAQryB,EAAQoyB,KAEzB,CAWIf,cACF,OAAO19B,KAAKy9B,QACd,CACIC,YAAQA,GACV,IAAIiB,EAAa3+B,KAAKy9B,SACtBz9B,KAAKy9B,SAAWC,EAChB,MAAMxqB,EAASlT,KAAK4+B,oBACpB,GAAI1rB,EAAQ,CACV,MAAM2rB,EAAanB,GAAW,CAAC,EAAG,EAAG,EAAG,GACxCiB,EAAaA,GAAc,CAAC,EAAG,EAAG,EAAG,GACrC,MAAM1vB,EAAajP,KAAK8+B,gBAClBC,EACH9vB,EAAa,GACb4vB,EAAW,GAAKF,EAAW,GAAKA,EAAW,GAAKE,EAAW,IACxDG,EACH/vB,EAAa,GACb4vB,EAAW,GAAKF,EAAW,GAAKA,EAAW,GAAKE,EAAW,IAC9D7+B,KAAKu+B,kBAAkB,CAACrrB,EAAO,GAAK6rB,EAAS7rB,EAAO,GAAK8rB,GAC3D,CACF,CAUAC,mBAAmBC,GACjB,MAAM7yB,EAAUrM,KAAK8e,gBAerB,YAZ2B/S,IAAvBM,EAAQ4C,WACV5C,EAAQ4C,WAAajP,KAAK8+B,gBAE1BzyB,EAAQoyB,KAAOz+B,KAAKm/B,UAItB9yB,EAAQ6G,OAASlT,KAAK4+B,oBAGtBvyB,EAAQ8G,SAAWnT,KAAKo/B,cAEjBhmB,OAAOC,OAAO,CAAC,EAAGhN,EAAS6yB,EACpC,CAmCAG,QAAQC,GACFt/B,KAAKu/B,UAAYv/B,KAAKw/B,gBACxBx/B,KAAKy/B,mBAAmB,GAE1B,MAAMlnB,EAAO,IAAI9I,MAAM6N,UAAUxd,QACjC,IAAK,IAAIzB,EAAI,EAAGA,EAAIka,EAAKzY,SAAUzB,EAAG,CACpC,IAAIgO,EAAUiR,UAAUjf,GACpBgO,EAAQ6G,SACV7G,EAAU+M,OAAOC,OAAO,CAAC,EAAGhN,GAC5BA,EAAQ6G,OAASmF,GACfhM,EAAQ6G,OACRlT,KAAK0/B,kBAGLrzB,EAAQiW,SACVjW,EAAU+M,OAAOC,OAAO,CAAC,EAAGhN,GAC5BA,EAAQiW,OAASjK,GACfhM,EAAQiW,OACRtiB,KAAK0/B,kBAGTnnB,EAAKla,GAAKgO,CACZ,CACArM,KAAK2/B,gBAAgB10B,MAAMjL,KAAMuY,EACnC,CAKAonB,gBAAgBL,GACd,IACI9sB,EADAotB,EAAiBtiB,UAAUxd,OAG7B8/B,EAAiB,GACwB,mBAAlCtiB,UAAUsiB,EAAiB,KAElCptB,EAAW8K,UAAUsiB,EAAiB,KACpCA,GAGJ,IAAIvhC,EAAI,EACR,KAAOA,EAAIuhC,IAAmB5/B,KAAKu/B,UAAWlhC,EAAG,CAE/C,MAAMo3B,EAAQnY,UAAUjf,GACpBo3B,EAAMviB,QACRlT,KAAKu+B,kBAAkB9I,EAAMviB,aAEZnH,IAAf0pB,EAAMgJ,KACRz+B,KAAK0+B,QAAQjJ,EAAMgJ,MACVhJ,EAAMxmB,YACfjP,KAAKw+B,cAAc/I,EAAMxmB,iBAEJlD,IAAnB0pB,EAAMtiB,UACRnT,KAAKs+B,YAAY7I,EAAMtiB,SAE3B,CACA,GAAI9U,IAAMuhC,EAIR,YAHIptB,GACFwnB,GAAkBxnB,GAAU,IAKhC,IAAIiX,EAAQoW,KAAKC,MACb5sB,EAASlT,KAAKs7B,cAAc37B,QAC5BsP,EAAajP,KAAKu7B,kBAClBpoB,EAAWnT,KAAKw7B,gBACpB,MAAMuE,EAAS,GACf,KAAO1hC,EAAIuhC,IAAkBvhC,EAAG,CAC9B,MAAMgO,EAA2CiR,UAAUjf,GAErD+7B,EAAY,CAChB3Q,MAAOA,EACPuW,UAAU,EACV1d,OAAQjW,EAAQiW,OAChB2d,cAA+Bl0B,IAArBM,EAAQ4zB,SAAyB5zB,EAAQ4zB,SAAW,IAC9DC,OAAQ7zB,EAAQ6zB,QAAUnG,GAC1BvnB,SAAUA,GAmBZ,GAhBInG,EAAQ6G,SACVknB,EAAUC,aAAennB,EACzBknB,EAAUE,aAAejuB,EAAQ6G,OAAOvT,QACxCuT,EAASknB,EAAUE,mBAGAvuB,IAAjBM,EAAQoyB,MACVrE,EAAUG,iBAAmBtrB,EAC7BmrB,EAAUI,iBAAmBx6B,KAAKmgC,qBAAqB9zB,EAAQoyB,MAC/DxvB,EAAamrB,EAAUI,kBACdnuB,EAAQ4C,aACjBmrB,EAAUG,iBAAmBtrB,EAC7BmrB,EAAUI,iBAAmBnuB,EAAQ4C,WACrCA,EAAamrB,EAAUI,uBAGAzuB,IAArBM,EAAQ8G,SAAwB,CAClCinB,EAAUK,eAAiBtnB,EAC3B,MAAMitB,EACJ,GAAO/zB,EAAQ8G,SAAWA,EAAWzU,KAAKyN,GAAI,EAAIzN,KAAKyN,IAAMzN,KAAKyN,GACpEiuB,EAAUM,eAAiBvnB,EAAWitB,EACtCjtB,EAAWinB,EAAUM,cACvB,CAGIP,GAAgBC,GAClBA,EAAU4F,UAAW,EAGrBvW,GAAS2Q,EAAU6F,SAErBF,EAAO7/B,KAAKk6B,EACd,CACAp6B,KAAKk7B,YAAYh7B,KAAK6/B,GACtB//B,KAAKqgC,QAAQC,GAAoB,GACjCtgC,KAAKugC,mBACP,CAOAf,eACE,OAAOx/B,KAAKi7B,OAAOqF,IAAsB,CAC3C,CAOAE,iBACE,OAAOxgC,KAAKi7B,OAAOqF,IAAwB,CAC7C,CAMAG,mBAEE,IAAIne,EADJtiB,KAAKqgC,QAAQC,IAAqBtgC,KAAKi7B,OAAOqF,KAE9C,IAAK,IAAIjiC,EAAI,EAAG0S,EAAK/Q,KAAKk7B,YAAYp7B,OAAQzB,EAAI0S,IAAM1S,EAAG,CACzD,MAAM0hC,EAAS//B,KAAKk7B,YAAY78B,GAIhC,GAHI0hC,EAAO,GAAGvtB,UACZwnB,GAAkB+F,EAAO,GAAGvtB,UAAU,IAEnC8P,EACH,IAAK,IAAID,EAAI,EAAGwE,EAAKkZ,EAAOjgC,OAAQuiB,EAAIwE,IAAMxE,EAAG,CAC/C,MAAM+X,EAAY2F,EAAO1d,GACzB,IAAK+X,EAAU4F,SAAU,CACvB1d,EAAS8X,EAAU9X,OACnB,KACF,CACF,CAEJ,CACAtiB,KAAKk7B,YAAYp7B,OAAS,EAC1BE,KAAK47B,cAAgBtZ,EACrBtiB,KAAKy7B,YAAc,KACnBz7B,KAAK07B,gBAAkBl9B,IACvBwB,KAAK27B,cAAgBn9B,GACvB,CAKA+hC,oBAKE,QAJiCx0B,IAA7B/L,KAAKm7B,sBACPuF,qBAAqB1gC,KAAKm7B,qBAC1Bn7B,KAAKm7B,yBAAsBpvB,IAExB/L,KAAKw/B,eACR,OAEF,MAAMM,EAAMD,KAAKC,MACjB,IAAIa,GAAO,EACX,IAAK,IAAItiC,EAAI2B,KAAKk7B,YAAYp7B,OAAS,EAAGzB,GAAK,IAAKA,EAAG,CACrD,MAAM0hC,EAAS//B,KAAKk7B,YAAY78B,GAChC,IAAIuiC,GAAiB,EACrB,IAAK,IAAIve,EAAI,EAAGwE,EAAKkZ,EAAOjgC,OAAQuiB,EAAIwE,IAAMxE,EAAG,CAC/C,MAAM+X,EAAY2F,EAAO1d,GACzB,GAAI+X,EAAU4F,SACZ,SAEF,MAAMa,EAAUf,EAAM1F,EAAU3Q,MAChC,IAAItB,EACFiS,EAAU6F,SAAW,EAAIY,EAAUzG,EAAU6F,SAAW,EACtD9X,GAAY,GACdiS,EAAU4F,UAAW,EACrB7X,EAAW,GAEXyY,GAAiB,EAEnB,MAAME,EAAW1G,EAAU8F,OAAO/X,GAClC,GAAIiS,EAAUC,aAAc,CAC1B,MAAM0G,EAAK3G,EAAUC,aAAa,GAC5B2G,EAAK5G,EAAUC,aAAa,GAC5BvlB,EAAKslB,EAAUE,aAAa,GAC5BvlB,EAAKqlB,EAAUE,aAAa,GAClCt6B,KAAKy7B,YAAcrB,EAAUE,aAC7B,MAAMnxB,EAAI43B,EAAKD,GAAYhsB,EAAKisB,GAC1BrxB,EAAIsxB,EAAKF,GAAY/rB,EAAKisB,GAChChhC,KAAKs7B,cAAgB,CAACnyB,EAAGuG,EAC3B,CACA,GAAI0qB,EAAUG,kBAAoBH,EAAUI,iBAAkB,CAC5D,MAAMvrB,EACS,IAAb6xB,EACI1G,EAAUI,iBACVJ,EAAUG,iBACVuG,GACG1G,EAAUI,iBAAmBJ,EAAUG,kBAChD,GAAIH,EAAU9X,OAAQ,CACpB,MAAMlP,EAAOpT,KAAKihC,iBAAiBjhC,KAAKo/B,eAClC8B,EAAwBlhC,KAAKq+B,aAAapvB,WAC9CA,EACA,EACAmE,GACA,GAEFpT,KAAKs7B,cAAgBt7B,KAAKmhC,oBACxBD,EACA9G,EAAU9X,OAEd,CACAtiB,KAAK07B,gBAAkBtB,EAAUI,iBACjCx6B,KAAKu7B,kBAAoBtsB,EACzBjP,KAAKohC,mBAAkB,EACzB,CACA,QAC+Br1B,IAA7BquB,EAAUK,qBACmB1uB,IAA7BquB,EAAUM,eACV,CACA,MAAMvnB,EACS,IAAb2tB,EACI,GAAO1G,EAAUM,eAAiBh8B,KAAKyN,GAAI,EAAIzN,KAAKyN,IACpDzN,KAAKyN,GACLiuB,EAAUK,eACVqG,GACG1G,EAAUM,eAAiBN,EAAUK,gBAC9C,GAAIL,EAAU9X,OAAQ,CACpB,MAAM+e,EAAsBrhC,KAAKq+B,aAAalrB,SAC5CA,GACA,GAEFnT,KAAKs7B,cAAgBt7B,KAAKshC,sBACxBD,EACAjH,EAAU9X,OAEd,CACAtiB,KAAK27B,cAAgBvB,EAAUM,eAC/B16B,KAAKw7B,gBAAkBroB,CACzB,CAGA,GAFAnT,KAAKohC,mBAAkB,GACvBT,GAAO,GACFvG,EAAU4F,SACb,KAEJ,CACA,GAAIY,EAAgB,CAClB5gC,KAAKk7B,YAAY78B,GAAK,KACtB2B,KAAKqgC,QAAQC,IAAqB,GAClCtgC,KAAKy7B,YAAc,KACnBz7B,KAAK07B,gBAAkBl9B,IACvBwB,KAAK27B,cAAgBn9B,IACrB,MAAMgU,EAAWutB,EAAO,GAAGvtB,SACvBA,GACFwnB,GAAkBxnB,GAAU,EAEhC,CACF,CAEAxS,KAAKk7B,YAAcl7B,KAAKk7B,YAAYqG,OAAOj8B,SACvCq7B,QAAqC50B,IAA7B/L,KAAKm7B,sBACfn7B,KAAKm7B,oBAAsBqG,sBACzBxhC,KAAKugC,kBAAkBnjB,KAAKpd,OAGlC,CAOAshC,sBAAsBnuB,EAAUmP,GAC9B,IAAIpP,EACJ,MAAMuuB,EAAgBzhC,KAAK4+B,oB1Dl0BxB,IAAattB,EAAY8uB,E0Dw0B5B,YALsBr0B,IAAlB01B,IACFvuB,EAAS,CAACuuB,EAAc,GAAKnf,EAAO,GAAImf,EAAc,GAAKnf,EAAO,I1D/lBjE,SAAgBhR,EAAYkQ,GACjC,MAAMqZ,EAAWn8B,KAAK4U,IAAIkO,GACpBsZ,EAAWp8B,KAAK8U,IAAIgO,GACpBrY,EAAImI,EAAW,GAAKupB,EAAWvpB,EAAW,GAAKwpB,EAC/CprB,EAAI4B,EAAW,GAAKupB,EAAWvpB,EAAW,GAAKwpB,EACrDxpB,EAAW,GAAKnI,EAChBmI,EAAW,GAAK5B,CAElB,C0DwlBMyU,CAAiBjR,EAAQC,EAAWnT,KAAKo/B,e1Dr0BfgB,E0Ds0BJ9d,G1Dt0BRhR,E0Ds0BA4B,G1Dr0BP,KAAOktB,EAAM,GACxB9uB,EAAW,KAAO8uB,EAAM,I0Ds0BfltB,CACT,CAOAiuB,oBAAoBlyB,EAAYqT,GAC9B,IAAIpP,EACJ,MAAMuuB,EAAgBzhC,KAAK4+B,oBACrB8C,EAAoB1hC,KAAK8+B,gBAC/B,QAAsB/yB,IAAlB01B,QAAqD11B,IAAtB21B,EAAiC,CAOlExuB,EAAS,CALPoP,EAAO,GACNrT,GAAcqT,EAAO,GAAKmf,EAAc,IAAOC,EAEhDpf,EAAO,GACNrT,GAAcqT,EAAO,GAAKmf,EAAc,IAAOC,EAEpD,CACA,OAAOxuB,CACT,CAQA+tB,iBAAiB9tB,GACf,MAAMC,EAAOpT,KAAKq7B,cAClB,GAAIloB,EAAU,CACZ,MAAMwuB,EAAIvuB,EAAK,GACTrO,EAAIqO,EAAK,GACf,MAAO,CACL1U,KAAKM,IAAI2iC,EAAIjjC,KAAK4U,IAAIH,IAAazU,KAAKM,IAAI+F,EAAIrG,KAAK8U,IAAIL,IACzDzU,KAAKM,IAAI2iC,EAAIjjC,KAAK8U,IAAIL,IAAazU,KAAKM,IAAI+F,EAAIrG,KAAK4U,IAAIH,IAE7D,CACA,OAAOC,CACT,CASAwuB,gBAAgBxuB,GACdpT,KAAKq7B,cAAgB5rB,MAAM2L,QAAQhI,GAAQA,EAAKzT,QAAU,CAAC,IAAK,KAC3DK,KAAKw/B,gBACRx/B,KAAKy/B,mBAAmB,EAE5B,CAQA3sB,YACE,MAAMI,EAASlT,KAAK4+B,oBACpB,OAAK1rB,EAGEkF,GAAiBlF,EAAQlT,KAAK0/B,iBAF5BxsB,CAGX,CAMA0rB,oBACE,OACE5+B,KAAK2e,IAAImd,GAAaxD,OAE1B,CAKAuJ,iBACE,OAAO7hC,KAAKq+B,YACd,CAKAyD,yBACE,OAAO9hC,KAAK2e,IAAI,sBAClB,CAMAojB,SAASC,GACP,YAAcj2B,IAAVi2B,GACFA,EAAM,GAAKhiC,KAAKi7B,OAAO,GACvB+G,EAAM,GAAKhiC,KAAKi7B,OAAO,GAChB+G,GAEFhiC,KAAKi7B,OAAOt7B,OACrB,CAYAsiC,gBAAgB7uB,GAEd,OtD5WG,SAAsB1G,EAAQoL,GACnC,OAAKK,GAGE,GAAgBzL,EAAQoL,EAAkBK,IAFxCzL,CAGX,CsDuWWw1B,CADQliC,KAAKmiC,wBAAwB/uB,GAChBpT,KAAK0/B,gBACnC,CAOAyC,wBAAwB/uB,GACtBA,EAAOA,GAAQpT,KAAKoiC,+BACpB,MAAMlvB,EACJlT,KAAK4+B,oBAEPnuB,EAAOyC,EAAQ,GACf,MAAMjE,EAAqCjP,KAAK8+B,gBAChDruB,OAAsB1E,IAAfkD,EAA0B,GACjC,MAAMkE,EAAmCnT,KAAKo/B,cAG9C,OAFA3uB,OAAoB1E,IAAboH,EAAwB,G3Dze5B,SAA2BD,EAAQjE,EAAYkE,EAAUC,EAAMnC,GACpE,MAAO8vB,EAAIC,EAAIlsB,EAAIC,EAAIC,EAAIC,EAAIwS,EAAIC,GAAMzU,GACvCC,EACAjE,EACAkE,EACAC,GAEF,OAAOtB,EACLpT,KAAKqI,IAAIg6B,EAAIjsB,EAAIE,EAAIyS,GACrB/oB,KAAKqI,IAAIi6B,EAAIjsB,EAAIE,EAAIyS,GACrBhpB,KAAKwK,IAAI63B,EAAIjsB,EAAIE,EAAIyS,GACrB/oB,KAAKwK,IAAI83B,EAAIjsB,EAAIE,EAAIyS,GACrBzW,EAEJ,C2D6dWoxB,CAAkBnvB,EAAQjE,EAAYkE,EAAUC,EACzD,CAOAgkB,mBACE,OAAOp3B,KAAKq9B,cACd,CAOAhG,mBACE,OAAOr3B,KAAKs9B,cACd,CAOA/F,aACE,OACEv3B,KAAKsiC,qBAAqBtiC,KAAKs9B,eAEnC,CAOAtF,WAAWyG,GACTz+B,KAAK67B,cAAc77B,KAAKi/B,mBAAmB,CAACxI,QAASgI,IACvD,CAOAnH,aACE,OACEt3B,KAAKsiC,qBAAqBtiC,KAAKq9B,eAEnC,CAOApF,WAAWwG,GACTz+B,KAAK67B,cAAc77B,KAAKi/B,mBAAmB,CAACzI,QAASiI,IACvD,CAOA8D,uBAAuBC,GACrBxiC,KAAK67B,cAAc77B,KAAKi/B,mBAAmB,CAACxC,oBAAqB+F,IACnE,CAOA9C,gBACE,OAAO1/B,KAAKo7B,WACd,CAQA0D,gBACE,OAAwC9+B,KAAK2e,IAAImd,GAAavD,WAChE,CAQAkK,iBACE,OAAOziC,KAAKw9B,YACd,CAUAkF,uBAAuBh2B,EAAQ0G,GAC7B,OAAOpT,KAAK2iC,+BACVlqB,GAAe/L,EAAQ1M,KAAK0/B,iBAC5BtsB,EAEJ,CASAuvB,+BAA+Bj2B,EAAQ0G,GACrCA,EAAOA,GAAQpT,KAAKoiC,+BACpB,MAAM5I,EAAc,GAAS9sB,GAAU0G,EAAK,GACtCqmB,EAAc,GAAU/sB,GAAU0G,EAAK,GAC7C,OAAO1U,KAAKwK,IAAIswB,EAAaC,EAC/B,CAQAmJ,8BAA8BzoB,GAC5BA,EAAQA,GAAS,EACjB,MAAMmc,EAAgBt2B,KAAK6iC,yBAAyB7iC,KAAKq9B,gBACnD9G,EAAgBv2B,KAAKs9B,eACrBp0B,EAAMxK,KAAKS,IAAIm3B,EAAgBC,GAAiB73B,KAAKS,IAAIgb,GAC/D,OAAO,SAKKtb,GAER,OADmBy3B,EAAgB53B,KAAKC,IAAIwb,EAAOtb,EAAQqK,EAG/D,CACF,CAQAk2B,cACE,OAA8Bp/B,KAAK2e,IAAImd,GAAatD,SACtD,CAQAsK,8BAA8B3oB,GAC5B,MAAM4oB,EAAWrkC,KAAKS,IAAIgb,GAAS,GAC7Bmc,EAAgBt2B,KAAK6iC,yBAAyB7iC,KAAKq9B,gBACnD9G,EAAgBv2B,KAAKs9B,eACrBp0B,EAAMxK,KAAKS,IAAIm3B,EAAgBC,GAAiBwM,EACtD,OAAO,SAKK9zB,GAER,OADcvQ,KAAKS,IAAIm3B,EAAgBrnB,GAAc8zB,EAAW75B,CAGpE,CACF,CAQAk5B,6BAA6BjvB,GAC3B,IAAIC,EAAOpT,KAAKihC,iBAAiB9tB,GACjC,MAAMuqB,EAAU19B,KAAKy9B,SAOrB,OANIC,IACFtqB,EAAO,CACLA,EAAK,GAAKsqB,EAAQ,GAAKA,EAAQ,GAC/BtqB,EAAK,GAAKsqB,EAAQ,GAAKA,EAAQ,KAG5BtqB,CACT,CAKAsiB,WACE,MAAMlhB,EAAaxU,KAAK0/B,gBAClBzwB,EAAajP,KAAK8+B,gBAClB3rB,EAAWnT,KAAKo/B,cACtB,IAAIlsB,EACFlT,KAAK4+B,oBAEP,MAAMlB,EAAU19B,KAAKy9B,SACrB,GAAIC,EAAS,CACX,MAAMsF,EAAchjC,KAAKoiC,+BACzBlvB,EAASynB,GACPznB,EACAlT,KAAKihC,mBACL,CAAC+B,EAAY,GAAK,EAAItF,EAAQ,GAAIsF,EAAY,GAAK,EAAItF,EAAQ,IAC/DzuB,EACAkE,EAEJ,CACA,MAAO,CACLD,OAAQA,EAAOvT,MAAM,GACrB6U,gBAA2BzI,IAAfyI,EAA2BA,EAAa,KACpDvF,WAAYA,EACZg0B,WAAYjjC,KAAKy7B,YACjByH,eAAgBljC,KAAK07B,gBACrByH,aAAcnjC,KAAK27B,cACnBxoB,SAAUA,EACVsrB,KAAMz+B,KAAKm/B,UAEf,CAKAiE,wBACE,MAAO,CACLC,UAAWrjC,KAAK01B,WAChBhpB,OAAQ1M,KAAKiiC,kBAEjB,CASA9C,UACE,IAAIV,EACJ,MAAMxvB,EAAajP,KAAK8+B,gBAIxB,YAHmB/yB,IAAfkD,IACFwvB,EAAOz+B,KAAKsiC,qBAAqBrzB,IAE5BwvB,CACT,CAQA6D,qBAAqBrzB,GACnB,IACI/F,EAAKizB,EADLx+B,EAASqC,KAAK29B,UAAY,EAE9B,GAAI39B,KAAKw9B,aAAc,CACrB,MAAM8F,EAAUzoB,GAAkB7a,KAAKw9B,aAAcvuB,EAAY,GACjEtR,EAAS2lC,EACTp6B,EAAMlJ,KAAKw9B,aAAa8F,GAEtBnH,EADEmH,GAAWtjC,KAAKw9B,aAAa19B,OAAS,EAC3B,EAEAoJ,EAAMlJ,KAAKw9B,aAAa8F,EAAU,EAEnD,MACEp6B,EAAMlJ,KAAKq9B,eACXlB,EAAan8B,KAAKu9B,YAEpB,OAAO5/B,EAASe,KAAKS,IAAI+J,EAAM+F,GAAcvQ,KAAKS,IAAIg9B,EACxD,CAQAgE,qBAAqB1B,GACnB,GAAIz+B,KAAKw9B,aAAc,CACrB,GAAIx9B,KAAKw9B,aAAa19B,QAAU,EAC9B,OAAO,EAET,MAAMyjC,EAAY,GAChB7kC,KAAKQ,MAAMu/B,GACX,EACAz+B,KAAKw9B,aAAa19B,OAAS,GAEvBq8B,EACJn8B,KAAKw9B,aAAa+F,GAAavjC,KAAKw9B,aAAa+F,EAAY,GAC/D,OACEvjC,KAAKw9B,aAAa+F,GAClB7kC,KAAKC,IAAIw9B,EAAY,GAAMsC,EAAO8E,EAAW,EAAG,GAEpD,CACA,OACEvjC,KAAKq9B,eAAiB3+B,KAAKC,IAAIqB,KAAKu9B,YAAakB,EAAOz+B,KAAK29B,SAEjE,CAYA6F,IAAIC,EAAkBp3B,GAEpB,IAAI0N,EAOJ,GANAtJ,EACEhB,MAAM2L,QAAQqoB,IAEV,mBADuB,EAAwC,sBAEnE,IAEEh0B,MAAM2L,QAAQqoB,GAAmB,CACnChzB,GAAQ,GAAQgzB,GAAmB,IAEnC1pB,EAAW,GADItB,GAAegrB,EAAkBzjC,KAAK0/B,iBAEvD,MAAO,GAAmC,WAA/B+D,EAAiBnqB,UAAwB,CAClD,MAAM5M,EAAS+L,GACbgrB,EAAiBh2B,YACjBzN,KAAK0/B,iBAEP3lB,EAAW,GAAkBrN,GAC7BqN,EAASoK,OAAOnkB,KAAKo/B,cAAetsB,EAAUpG,GAChD,KAAO,CACL,MAAMyL,EAAiB,KAErB4B,EADE5B,EAEAsrB,EACGvpB,QACAjC,UAAUE,EAAgBnY,KAAK0/B,iBAGzB+D,CAEf,CAEAzjC,KAAK0jC,YAAY3pB,EAAU1N,EAC7B,CAOAs3B,yBAAyB5pB,GACvB,MAAM5G,EAAWnT,KAAKo/B,cAChBvE,EAAWn8B,KAAK4U,IAAIH,GACpB2nB,EAAWp8B,KAAK8U,KAAKL,GACrBywB,EAAS7pB,EAASmL,qBAClB/S,EAAS4H,EAASwL,YACxB,IAAIse,EAAWplC,IACXqlC,EAAWrlC,IACXslC,GAAWtlC,IACXulC,GAAWvlC,IACf,IAAK,IAAIJ,EAAI,EAAG0S,EAAK6yB,EAAO9jC,OAAQzB,EAAI0S,EAAI1S,GAAK8T,EAAQ,CACvD,MAAM4oB,EAAO6I,EAAOvlC,GAAKw8B,EAAW+I,EAAOvlC,EAAI,GAAKy8B,EAC9CE,EAAO4I,EAAOvlC,GAAKy8B,EAAW8I,EAAOvlC,EAAI,GAAKw8B,EACpDgJ,EAAUnlC,KAAKqI,IAAI88B,EAAS9I,GAC5B+I,EAAUplC,KAAKqI,IAAI+8B,EAAS9I,GAC5B+I,EAAUrlC,KAAKwK,IAAI66B,EAAShJ,GAC5BiJ,EAAUtlC,KAAKwK,IAAI86B,EAAShJ,EAC9B,CACA,MAAO,CAAC6I,EAASC,EAASC,EAASC,EACrC,CAMAN,YAAY3pB,EAAU1N,GAEpB,IAAI+G,GADJ/G,EAAUA,GAAW,CAAC,GACH+G,KACdA,IACHA,EAAOpT,KAAKoiC,gCAEd,MAAM1E,OACgB3xB,IAApBM,EAAQqxB,QAAwBrxB,EAAQqxB,QAAU,CAAC,EAAG,EAAG,EAAG,GACxD4F,OAA8Bv3B,IAApBM,EAAQi3B,SAAwBj3B,EAAQi3B,QACxD,IAAI/M,EAEFA,OAD4BxqB,IAA1BM,EAAQkqB,cACMlqB,EAAQkqB,mBACKxqB,IAApBM,EAAQoqB,QACDz2B,KAAKmgC,qBAAqB9zB,EAAQoqB,SAElC,EAGlB,MAAMwN,EAAgBjkC,KAAK2jC,yBAAyB5pB,GAGpD,IAAI9K,EAAajP,KAAK2iC,+BAA+BsB,EAAe,CAClE7wB,EAAK,GAAKsqB,EAAQ,GAAKA,EAAQ,GAC/BtqB,EAAK,GAAKsqB,EAAQ,GAAKA,EAAQ,KAEjCzuB,EAAahQ,MAAMgQ,GACfsnB,EACA73B,KAAKwK,IAAI+F,EAAYsnB,GACzBtnB,EAAajP,KAAK6iC,yBAAyB5zB,EAAYq0B,EAAU,EAAI,GAGrE,MAAMnwB,EAAWnT,KAAKo/B,cAChBtE,EAAWp8B,KAAK8U,IAAIL,GACpB0nB,EAAWn8B,KAAK4U,IAAIH,GACpB+wB,EAAYpxB,EAAUmxB,GAC5BC,EAAU,KAAQxG,EAAQ,GAAKA,EAAQ,IAAM,EAAKzuB,EAClDi1B,EAAU,KAAQxG,EAAQ,GAAKA,EAAQ,IAAM,EAAKzuB,EAClD,MAAMk1B,EAAUD,EAAU,GAAKrJ,EAAWqJ,EAAU,GAAKpJ,EACnDsJ,EAAUF,EAAU,GAAKrJ,EAAWqJ,EAAU,GAAKpJ,EACnD5nB,EAASlT,KAAKqkC,qBAAqB,CAACF,EAASC,GAAUn1B,GACvDuD,EAAWnG,EAAQmG,SAAWnG,EAAQmG,SAAW,QAE9BzG,IAArBM,EAAQ4zB,SACVjgC,KAAK2/B,gBACH,CACE1wB,WAAYA,EACZiE,OAAQA,EACR+sB,SAAU5zB,EAAQ4zB,SAClBC,OAAQ7zB,EAAQ6zB,QAElB1tB,IAGFxS,KAAKu7B,kBAAoBtsB,EACzBjP,KAAKs7B,cAAgBpoB,EACrBlT,KAAKohC,mBAAkB,GAAO,GAC9BpH,GAAkBxnB,GAAU,GAEhC,CASA8xB,SAAShzB,EAAY8B,EAAMwnB,GACzB56B,KAAKukC,iBACHlsB,GAAmB/G,EAAYtR,KAAK0/B,iBACpCtsB,EACAwnB,EAEJ,CAOA2J,iBAAiBjzB,EAAY8B,EAAMwnB,GACjC56B,KAAKu+B,kBACH5D,GACErpB,EACA8B,EACAwnB,EACA56B,KAAK8+B,gBACL9+B,KAAKo/B,eAGX,CAUAoF,qBAAqBtxB,EAAQjE,EAAYkE,EAAUC,GACjD,IAAI0lB,EACJ,MAAM4E,EAAU19B,KAAKy9B,SACrB,GAAIC,GAAWxqB,EAAQ,CACrB,MAAM8vB,EAAchjC,KAAKoiC,8BAA8BjvB,GACjDsxB,EAAgB9J,GACpBznB,EACAE,EACA,CAAC4vB,EAAY,GAAK,EAAItF,EAAQ,GAAIsF,EAAY,GAAK,EAAItF,EAAQ,IAC/DzuB,EACAkE,GAEF2lB,EAAc,CACZ5lB,EAAO,GAAKuxB,EAAc,GAC1BvxB,EAAO,GAAKuxB,EAAc,GAE9B,CACA,OAAO3L,CACT,CAKAyG,QACE,QAASv/B,KAAK4+B,0BAAgD7yB,IAAzB/L,KAAK8+B,eAC5C,CAOA4F,aAAaC,GACX,MAAMzxB,EAASkF,GAAiBpY,KAAKs7B,cAAet7B,KAAK0/B,iBACzD1/B,KAAK4kC,UAAU,CACb1xB,EAAO,GAAKyxB,EAAiB,GAC7BzxB,EAAO,GAAKyxB,EAAiB,IAEjC,CAMAE,qBAAqBF,GACnB,MAAMzxB,EAASlT,KAAKs7B,cACpBt7B,KAAKu+B,kBAAkB,CACrBrrB,EAAO,GAAKyxB,EAAiB,GAC7BzxB,EAAO,GAAKyxB,EAAiB,IAEjC,CASAG,iBAAiB3L,EAAO7W,GACtBA,EAASA,GAAUjK,GAAmBiK,EAAQtiB,KAAK0/B,iBACnD1/B,KAAK+kC,yBAAyB5L,EAAO7W,EACvC,CAQAyiB,yBAAyB5L,EAAO7W,GAC9B,MAAMuW,EAAW74B,KAAKw/B,gBAAkBx/B,KAAKwgC,iBACvCptB,EAAOpT,KAAKihC,iBAAiBjhC,KAAKo/B,eAClC4F,EAAgBhlC,KAAKq+B,aAAapvB,WACtCjP,KAAKu7B,kBAAoBpC,EACzB,EACA/lB,EACAylB,GAGEvW,IACFtiB,KAAKs7B,cAAgBt7B,KAAKmhC,oBAAoB6D,EAAe1iB,IAG/DtiB,KAAKu7B,mBAAqBpC,EAC1Bn5B,KAAKohC,mBACP,CASA6D,WAAW7E,EAAO9d,GAChBtiB,KAAK8kC,iBAAiBpmC,KAAKC,IAAIqB,KAAKu9B,aAAc6C,GAAQ9d,EAC5D,CASA4iB,eAAe9E,EAAO9d,GAChBA,IACFA,EAASjK,GAAmBiK,EAAQtiB,KAAK0/B,kBAE3C1/B,KAAKmlC,uBAAuB/E,EAAO9d,EACrC,CAMA6iB,uBAAuB/E,EAAO9d,GAC5B,MAAMuW,EAAW74B,KAAKw/B,gBAAkBx/B,KAAKwgC,iBACvC4E,EAAcplC,KAAKq+B,aAAalrB,SACpCnT,KAAKw7B,gBAAkB4E,EACvBvH,GAEEvW,IACFtiB,KAAKs7B,cAAgBt7B,KAAKshC,sBAAsB8D,EAAa9iB,IAE/DtiB,KAAKw7B,iBAAmB4E,EACxBpgC,KAAKohC,mBACP,CAQAwD,UAAU1xB,GACRlT,KAAKu+B,kBACHrrB,EAASmF,GAAmBnF,EAAQlT,KAAK0/B,iBAAmBxsB,EAEhE,CAMAqrB,kBAAkBrrB,GAChBlT,KAAKs7B,cAAgBpoB,EACrBlT,KAAKohC,mBACP,CAOAf,QAAQgF,EAAMjF,GAGZ,OAFApgC,KAAKi7B,OAAOoK,IAASjF,EACrBpgC,KAAK8d,UACE9d,KAAKi7B,OAAOoK,EACrB,CAQA7G,cAAcvvB,GACZjP,KAAKu7B,kBAAoBtsB,EACzBjP,KAAKohC,mBACP,CAQA9C,YAAYnrB,GACVnT,KAAKw7B,gBAAkBroB,EACvBnT,KAAKohC,mBACP,CAOA1C,QAAQD,GACNz+B,KAAKw+B,cAAcx+B,KAAKmgC,qBAAqB1B,GAC/C,CAUA2C,kBAAkBkE,EAAkBC,GAClC,MAAM1M,EACJ74B,KAAKw/B,gBAAkBx/B,KAAKwgC,kBAAoB+E,EAG5CH,EAAcplC,KAAKq+B,aAAalrB,SACpCnT,KAAKw7B,gBACL3C,GAEIzlB,EAAOpT,KAAKihC,iBAAiBmE,GAC7BJ,EAAgBhlC,KAAKq+B,aAAapvB,WACtCjP,KAAKu7B,kBACL,EACAnoB,EACAylB,GAEI2M,EAAYxlC,KAAKq+B,aAAanrB,OAClClT,KAAKs7B,cACL0J,EACA5xB,EACAylB,EACA74B,KAAKwkC,qBACHxkC,KAAKs7B,cACL0J,EACAI,EACAhyB,IAIApT,KAAK2e,IAAImd,GAAatD,YAAc4M,GACtCplC,KAAKgH,IAAI80B,GAAatD,SAAU4M,GAE9BplC,KAAK2e,IAAImd,GAAavD,cAAgByM,IACxChlC,KAAKgH,IAAI80B,GAAavD,WAAYyM,GAClChlC,KAAKgH,IAAI,OAAQhH,KAAKm/B,WAAW,IAGhCqG,GACAxlC,KAAK2e,IAAImd,GAAaxD,SACtB,GAAOt4B,KAAK2e,IAAImd,GAAaxD,QAASkN,IAEvCxlC,KAAKgH,IAAI80B,GAAaxD,OAAQkN,GAG5BxlC,KAAKw/B,iBAAmB8F,GAC1BtlC,KAAKygC,mBAEPzgC,KAAK47B,mBAAgB7vB,CACvB,CAWA0zB,mBAAmBQ,EAAUwF,EAAqBnjB,GAChD2d,OAAwBl0B,IAAbk0B,EAAyBA,EAAW,IAC/C,MAAMnlB,EAAY2qB,GAAuB,EAEnCL,EAAcplC,KAAKq+B,aAAalrB,SAASnT,KAAKw7B,iBAC9CpoB,EAAOpT,KAAKihC,iBAAiBmE,GAC7BJ,EAAgBhlC,KAAKq+B,aAAapvB,WACtCjP,KAAKu7B,kBACLzgB,EACA1H,GAEIoyB,EAAYxlC,KAAKq+B,aAAanrB,OAClClT,KAAKs7B,cACL0J,EACA5xB,GACA,EACApT,KAAKwkC,qBACHxkC,KAAKs7B,cACL0J,EACAI,EACAhyB,IAIJ,GAAiB,IAAb6sB,IAAmBjgC,KAAK47B,cAK1B,OAJA57B,KAAKu7B,kBAAoByJ,EACzBhlC,KAAKw7B,gBAAkB4J,EACvBplC,KAAKs7B,cAAgBkK,OACrBxlC,KAAKohC,oBAIP9e,EAASA,IAAwB,IAAb2d,EAAiBjgC,KAAK47B,mBAAgB7vB,GAC1D/L,KAAK47B,mBAAgB7vB,EAGnB/L,KAAK8+B,kBAAoBkG,GACzBhlC,KAAKo/B,gBAAkBgG,GACtBplC,KAAK4+B,qBACL,GAAO5+B,KAAK4+B,oBAAqB4G,KAE9BxlC,KAAKw/B,gBACPx/B,KAAKygC,mBAGPzgC,KAAK2/B,gBAAgB,CACnBxsB,SAAUiyB,EACVlyB,OAAQsyB,EACRv2B,WAAY+1B,EACZ/E,SAAUA,EACVC,OAAQpG,GACRxX,OAAQA,IAGd,CAQAojB,mBACE1lC,KAAKy/B,mBAAmB,GAExBz/B,KAAKqgC,QAAQC,GAAsB,EACrC,CAUAqF,eAAe1F,EAAUwF,EAAqBnjB,GAC5CA,EAASA,GAAUjK,GAAmBiK,EAAQtiB,KAAK0/B,iBACnD1/B,KAAK4lC,uBAAuB3F,EAAUwF,EAAqBnjB,EAC7D,CASAsjB,uBAAuB3F,EAAUwF,EAAqBnjB,GAC/CtiB,KAAKwgC,mBAGVxgC,KAAKqgC,QAAQC,IAAuB,GACpCtgC,KAAKy/B,mBAAmBQ,EAAUwF,EAAqBnjB,GACzD,CASA+hB,qBAAqB/J,EAAcE,GACjC,MAAMpnB,EAAOpT,KAAKihC,iBAAiBjhC,KAAKo/B,eACxC,OAAOp/B,KAAKq+B,aAAanrB,OACvBonB,EACAE,GAAoBx6B,KAAK8+B,gBACzB1rB,EAEJ,CAWAyyB,mBAAmBC,EAAYhrB,GAC7B,MAAMirB,EAAY/lC,KAAKmgC,qBAAqB2F,GAC5C,OAAO9lC,KAAKsiC,qBACVtiC,KAAK6iC,yBAAyBkD,EAAWjrB,GAE7C,CAWA+nB,yBAAyBrI,EAAkB1f,GACzCA,EAAYA,GAAa,EACzB,MAAM1H,EAAOpT,KAAKihC,iBAAiBjhC,KAAKo/B,eAExC,OAAOp/B,KAAKq+B,aAAapvB,WAAWurB,EAAkB1f,EAAW1H,EACnE,GC13CK,SAAS4yB,GAAOC,EAAY5C,GACjC,IAAK4C,EAAW7P,QACd,OAAO,EAET,MAAMnnB,EAAao0B,EAAUp0B,WAC7B,GACEA,EAAag3B,EAAW1P,eACxBtnB,GAAcg3B,EAAW3P,cAEzB,OAAO,EAET,MAAMmI,EAAO4E,EAAU5E,KACvB,OAAOA,EAAOwH,EAAWzP,SAAWiI,GAAQwH,EAAWxP,OACzD,CAEA,OAxaA,cAAoByP,GAIlB95B,YAAYC,GACV,MAAM85B,EAAc/sB,OAAOC,OAAO,CAAC,EAAGhN,UAC/B85B,EAAYn2B,OAEnBjB,MAAMo3B,GAKNnmC,KAAK2d,GAKL3d,KAAKmd,KAKLnd,KAAK4d,GAML5d,KAAKomC,kBAAoB,KAMzBpmC,KAAKqmC,cAAgB,KAMrBrmC,KAAKsmC,iBAAmB,KAMxBtmC,KAAKumC,UAAY,KAMjBvmC,KAAKwmC,cAAe,EAMpBxmC,KAAKymC,UAAW,EAGZp6B,EAAQq6B,SACV1mC,KAAK0mC,OAASr6B,EAAQq6B,QAGpBr6B,EAAQs6B,KACV3mC,KAAK4mC,OAAOv6B,EAAQs6B,KAGtB3mC,KAAKmf,kBACH,GACAnf,KAAK6mC,6BAGP,MAAM72B,EAAS3D,EAAQ2D,OACQ3D,EAAc,OACzC,KACJrM,KAAK8mC,UAAU92B,EACjB,CAMAwnB,eAAeC,GAGb,OAFAA,EAAQA,GAAgB,IAClBv3B,KAAKF,MACJy3B,CACT,CAMAC,oBAAoBC,GAGlB,OAFAA,EAASA,GAAkB,IACpBz3B,KAAKF,KAAK+2B,iBACVY,CACT,CAQAoP,YACE,OAAkC/mC,KAAK2e,IAAI,KAA0B,IACvE,CAKAqoB,kBACE,OAAOhnC,KAAK+mC,WACd,CAKAnP,iBACE,MAAM5nB,EAAShQ,KAAK+mC,YACpB,OAAQ/2B,EAAuBA,EAAO0lB,WAArB,WACnB,CAKAuR,sBACEjnC,KAAK8d,UACD9d,KAAKwmC,cAAgD,UAAhCxmC,KAAK+mC,YAAYrR,aAG1C11B,KAAKwmC,cAAe,EACpBxmC,KAAKmc,cAAc,eACrB,CAKA0qB,8BACM7mC,KAAKsmC,mBACP7oB,GAAczd,KAAKsmC,kBACnBtmC,KAAKsmC,iBAAmB,MAE1BtmC,KAAKwmC,cAAe,EACpB,MAAMx2B,EAAShQ,KAAK+mC,YAChB/2B,IACFhQ,KAAKsmC,iBAAmBrpB,GACtBjN,EACA+N,GACA/d,KAAKinC,oBACLjnC,MAEwB,UAAtBgQ,EAAO0lB,aACT11B,KAAKwmC,cAAe,EACpBtM,YAAW,KACTl6B,KAAKmc,cAAc,cAAc,GAChC,KAGPnc,KAAK8d,SACP,CAOAopB,YAAYC,GACV,OAAKnnC,KAAKumC,UAGHvmC,KAAKumC,UAAUW,YAAYC,GAFzBC,QAAQC,QAAQ,GAG3B,CAMAC,QAAQH,GACN,OAAKnnC,KAAKumC,WAAcvmC,KAAKymC,SAGtBzmC,KAAKumC,UAAUe,QAAQH,GAFrB,IAGX,CAWAI,UAAUC,GACR,IAAIC,EACJ,MAAMd,EAAM3mC,KAAK0nC,iBAejB,IAAIzB,GAdCuB,GAAQb,IACXa,EAAOb,EAAIgB,WAGXF,EADED,aAAgB,GACL,CACXnE,UAAWmE,EAAK9R,WAChBhpB,OAAQ86B,EAAKvF,mBAGFuF,GAEVC,EAAWG,kBAAoBjB,IAClCc,EAAWG,iBAAmBjB,EAAIkB,gBAAgBnQ,uBAIlDuO,EADEwB,EAAWG,iBACAH,EAAWG,iBAAiBE,MACtC7B,GAAeA,EAAWpV,QAAU7wB,OAG1BA,KAAK+2B,gBAGpB,MAAMgR,EAAc/nC,KAAKyN,YAEzB,OACEu4B,GAAOC,EAAYwB,EAAWpE,cAC5B0E,GAAeh0B,GAAWg0B,EAAaN,EAAW/6B,QAExD,CASAs7B,gBAAgBR,GACd,IAAKxnC,KAAKunC,UAAUC,GAClB,MAAO,GAET,IAAIQ,EACJ,MAAMh4B,EAAShQ,KAAK+mC,YAIpB,GAHI/2B,IACFg4B,EAAkBh4B,EAAOg4B,oBAEtBA,EACH,MAAO,GAIT,IAAIC,EAAeD,EADjBR,aAAgB,GAAOA,EAAKpE,wBAA0BoE,GAKxD,OAHK/3B,MAAM2L,QAAQ6sB,KACjBA,EAAe,CAACA,IAEXA,CACT,CAUAvB,OAAOe,EAAYntB,GACjB,MAAM4tB,EAAgBloC,KAAKmoC,cAE3B,OAAID,EAAcE,aAAaX,IAC7BznC,KAAKymC,UAAW,EACTyB,EAAcG,YAAYZ,EAAYntB,IAExC,IACT,CAKAguB,WACEtoC,KAAKymC,UAAW,CAClB,CAMA8B,eAAe5B,GACRA,GACH3mC,KAAKsoC,WAEPtoC,KAAKgH,IAAI,GAAmB2/B,EAC9B,CAMAe,iBACE,OAAO1nC,KAAK2e,IAAI,GAClB,CAaAioB,OAAOD,GACD3mC,KAAKomC,oBACP3oB,GAAczd,KAAKomC,mBACnBpmC,KAAKomC,kBAAoB,MAEtBO,GACH3mC,KAAK8d,UAEH9d,KAAKqmC,gBACP5oB,GAAczd,KAAKqmC,eACnBrmC,KAAKqmC,cAAgB,MAEnBM,IACF3mC,KAAKomC,kBAAoBnpB,GACvB0pB,EACA,IACA,SAAUrqB,GACR,MAEMsrB,EADgD,EACjBH,WAAWG,iBAC1C3B,EAAajmC,KAAK+2B,eAAc,GAEtCtmB,GACGm3B,EAAiBY,MAAK,SAAUC,GAC/B,OAAOA,EAAgB5X,QAAUoV,EAAWpV,KAC9C,IACA,IAEF+W,EAAiB1nC,KAAK+lC,EACxB,GACAjmC,MAEFA,KAAKqmC,cAAgBppB,GAAOjd,KAAM+d,GAAkB4oB,EAAID,OAAQC,GAChE3mC,KAAK8d,UAET,CAQAgpB,UAAU92B,GACRhQ,KAAKgH,IAAI,GAAsBgJ,EACjC,CAMAm4B,cAIE,OAHKnoC,KAAKumC,YACRvmC,KAAKumC,UAAYvmC,KAAK0oC,kBAEjB1oC,KAAKumC,SACd,CAKAoC,cACE,QAAS3oC,KAAKumC,SAChB,CAOAmC,iBACE,OAAO,IACT,CAKA/tB,kBACM3a,KAAKumC,YACPvmC,KAAKumC,UAAU7rB,iBACR1a,KAAKumC,WAGdvmC,KAAK8mC,UAAU,MACf/3B,MAAM4L,iBACR,G,UC3eF,GACQ,EADR,GAEW,EAFX,GAGU,EAHV,GAIS,ECiDF,SAASiuB,GAAOx1B,EAAMnC,GAC3B,OAAIxB,MAAM2L,QAAQhI,GACTA,QAEIrH,IAATkF,EACFA,EAAO,CAACmC,EAAMA,IAEdnC,EAAK,GAAKmC,EACVnC,EAAK,GAAKmC,GAELnC,EACT,CChDA,MAAM43B,GAIJz8B,YAAYC,GAKVrM,KAAK8oC,SAAWz8B,EAAQ8pB,QAMxBn2B,KAAK+oC,gBAAkB18B,EAAQ28B,eAM/BhpC,KAAKipC,UAAY58B,EAAQ8G,SAMzBnT,KAAKkpC,OAAS78B,EAAQ+X,MAMtBpkB,KAAKmpC,YAAcP,GAAOv8B,EAAQ+X,OAMlCpkB,KAAKopC,cAAgB/8B,EAAQg9B,aAM7BrpC,KAAKspC,eAAiBj9B,EAAQk9B,aAChC,CAOArvB,QACE,MAAMkK,EAAQpkB,KAAKwpC,WACnB,OAAO,IAAIX,GAAW,CACpB1S,QAASn2B,KAAKk3B,aACd9S,MAAO3U,MAAM2L,QAAQgJ,GAASA,EAAMzkB,QAAUykB,EAC9CjR,SAAUnT,KAAKo/B,cACf4J,eAAgBhpC,KAAKypC,oBACrBJ,aAAcrpC,KAAK0pC,kBAAkB/pC,QACrC4pC,cAAevpC,KAAK2pC,oBAExB,CAOAzS,aACE,OAAOl3B,KAAK8oC,QACd,CAOAW,oBACE,OAAOzpC,KAAK+oC,eACd,CAOA3J,cACE,OAAOp/B,KAAKipC,SACd,CAOAO,WACE,OAAOxpC,KAAKkpC,MACd,CAMAU,gBACE,OAAO5pC,KAAKmpC,WACd,CAOAO,kBACE,OAAO1pC,KAAKopC,aACd,CAOAO,mBACE,OAAO3pC,KAAKspC,cACd,CAQAO,YACE,OAAO,GACT,CAQAC,SAASC,GACP,OAAO,GACT,CAMAC,uBACE,OAAO,GACT,CAOAC,cAAcF,GACZ,OAAO,CACT,CAMAG,gBACE,OAAO,GACT,CAMAC,eACE,OAAO,GACT,CAOAC,YACE,OAAO,GACT,CAOAC,UACE,OAAO,GACT,CAQAC,gBAAgBjB,GACdrpC,KAAKopC,cAAgBC,CACvB,CAQAnR,WAAW/B,GACTn2B,KAAK8oC,SAAW3S,CAClB,CAQAoU,kBAAkBvB,GAChBhpC,KAAK+oC,gBAAkBC,CACzB,CAQA1K,YAAYnrB,GACVnT,KAAKipC,UAAY91B,CACnB,CAQAq3B,SAASpmB,GACPpkB,KAAKkpC,OAAS9kB,EACdpkB,KAAKmpC,YAAcP,GAAOxkB,EAC5B,CAMAqmB,kBAAkB1uB,GAChB,GACF,CAMAzR,OACE,GACF,CAMAogC,oBAAoB3uB,GAClB,GACF,EAGF,UCpRA,MAAM4uB,GAAgB,oDAQhBC,GAAkB,4BAQjB,SAASC,GAASC,GACvB,MAAqB,iBAAVA,EACFA,EAEF,GAASA,EAClB,CAOA,SAASC,GAAUD,GACjB,MAAME,EAAK/oB,SAASC,cAAc,OAElC,GADA8oB,EAAG7oB,MAAM2oB,MAAQA,EACM,KAAnBE,EAAG7oB,MAAM2oB,MAAc,CACzB7oB,SAASgpB,KAAKC,YAAYF,GAC1B,MAAMG,EAAMC,iBAAiBJ,GAAIF,MAEjC,OADA7oB,SAASgpB,KAAKI,YAAYL,GACnBG,CACT,CACA,MAAO,EACT,CAMO,MAAMG,GAAa,WASxB,MAKMx7B,EAAQ,CAAC,EAKf,IAAIy7B,EAAY,EAEhB,OAAO,SAKKhtC,GACR,IAAIusC,EACJ,GAAIh7B,EAAM8O,eAAergB,GACvBusC,EAAQh7B,EAAMvR,OACT,CACL,GAAIgtC,GAtBa,KAsBgB,CAC/B,IAAIltC,EAAI,EACR,IAAK,MAAMqB,KAAOoQ,EACE,IAAP,EAANzR,cACIyR,EAAMpQ,KACX6rC,EAGR,CACAT,EA4BR,SAA6BvsC,GAC3B,IAAImK,EAAG8iC,EAAG5mC,EAAG+D,EAAGmiC,EAEZF,GAAgBa,KAAKltC,KACvBA,EAAIwsC,GAAUxsC,IAGhB,GAAIosC,GAAcc,KAAKltC,GAAI,CAEzB,MAAMqK,EAAIrK,EAAEuB,OAAS,EACrB,IAAIxB,EAEFA,EADEsK,GAAK,EACH,EAEA,EAEN,MAAM8iC,EAAiB,IAAN9iC,GAAiB,IAANA,EAC5BF,EAAIijC,SAASptC,EAAEqtC,OAAO,EAAI,EAAIttC,EAAGA,GAAI,IACrCktC,EAAIG,SAASptC,EAAEqtC,OAAO,EAAI,EAAIttC,EAAGA,GAAI,IACrCsG,EAAI+mC,SAASptC,EAAEqtC,OAAO,EAAI,EAAIttC,EAAGA,GAAI,IAEnCqK,EADE+iC,EACEC,SAASptC,EAAEqtC,OAAO,EAAI,EAAIttC,EAAGA,GAAI,IAEjC,IAEG,GAALA,IACFoK,GAAKA,GAAK,GAAKA,EACf8iC,GAAKA,GAAK,GAAKA,EACf5mC,GAAKA,GAAK,GAAKA,EACX8mC,IACF/iC,GAAKA,GAAK,GAAKA,IAGnBmiC,EAAQ,CAACpiC,EAAG8iC,EAAG5mC,EAAG+D,EAAI,IACxB,MAAWpK,EAAEstC,WAAW,UAEtBf,EAAQvsC,EAAEoB,MAAM,GAAI,GAAGmsC,MAAM,KAAKnF,IAAIoF,QACtCC,GAAUlB,IACDvsC,EAAEstC,WAAW,SAEtBf,EAAQvsC,EAAEoB,MAAM,GAAI,GAAGmsC,MAAM,KAAKnF,IAAIoF,QACtCjB,EAAM5qC,KAAK,GACX8rC,GAAUlB,IAEVr6B,GAAO,EAAO,IAEhB,OAAOq6B,CACT,CA3EgBmB,CAAoB1tC,GAC5BuR,EAAMvR,GAAKusC,IACTS,CACJ,CACA,OAAOT,CAEX,CACD,CA/CyB,GAwDnB,SAASoB,GAAQpB,GACtB,OAAIr7B,MAAM2L,QAAQ0vB,GACTA,EAEFQ,GAAWR,EACpB,CA6DO,SAASkB,GAAUlB,GAKxB,OAJAA,EAAM,GAAK,GAAOA,EAAM,GAAK,GAAO,EAAG,EAAG,KAC1CA,EAAM,GAAK,GAAOA,EAAM,GAAK,GAAO,EAAG,EAAG,KAC1CA,EAAM,GAAK,GAAOA,EAAM,GAAK,GAAO,EAAG,EAAG,KAC1CA,EAAM,GAAK,GAAMA,EAAM,GAAI,EAAG,GACvBA,CACT,CAMO,SAAS,GAASA,GACvB,IAAIpiC,EAAIoiC,EAAM,GACVpiC,IAAU,EAAJA,KACRA,EAAKA,EAAI,GAAO,GAElB,IAAI8iC,EAAIV,EAAM,GACVU,IAAU,EAAJA,KACRA,EAAKA,EAAI,GAAO,GAElB,IAAI5mC,EAAIkmC,EAAM,GACVlmC,IAAU,EAAJA,KACRA,EAAKA,EAAI,GAAO,GAGlB,MAAO,QAAU8D,EAAI,IAAM8iC,EAAI,IAAM5mC,EAAI,UADlBmH,IAAb++B,EAAM,GAAmB,EAAIpsC,KAAK4W,MAAiB,IAAXw1B,EAAM,IAAY,KACjB,GACrD,CChMO,SAASqB,GAAYrB,GAC1B,OAAIr7B,MAAM2L,QAAQ0vB,GACT,GAASA,GAEXA,CACT,CCZO,SAASsB,GAAsBl4B,EAAOpK,EAAQuiC,EAAYC,GAE/D,IAAIC,EAeJ,OAbEA,EADEF,GAAcA,EAAWvsC,OAClBusC,EAAWG,QACX5sB,GACA,IAAII,gBAAgB9L,GAAS,IAAKpK,GAAU,KAE5CmY,SAASC,cAAc,UAE9BhO,IACFq4B,EAAOr4B,MAAQA,GAEbpK,IACFyiC,EAAOziC,OAASA,GAIhByiC,EAAOE,WAAW,KAAMH,EAE5B,CAOO,SAASI,GAAcC,GAC5B,MAAMJ,EAASI,EAAQJ,OACvBA,EAAOr4B,MAAQ,EACfq4B,EAAOziC,OAAS,EAChB6iC,EAAQC,UAAU,EAAG,EAAG,EAAG,EAC7B,CC1BO,MA+CDC,GAAY,IAAIC,OACpB,CACE,qDACA,4CACA,8DACA,gDACA,8EACA,gEACA,mCACAjtC,KAAK,IACP,KAEIktC,GAAsB,CAC1B,QACA,UACA,SACA,OACA,aACA,UASWC,GAAoB,SAAUC,GACzC,MAAMC,EAAQD,EAASC,MAAML,IAC7B,IAAKK,EACH,OAAO,KAET,MAAM/qB,EAAsC,CAC1CgrB,WAAY,SACZ/5B,KAAM,QACN+O,MAAO,SACPirB,OAAQ,SACRC,QAAS,UAEX,IAAK,IAAIhvC,EAAI,EAAG0S,EAAKg8B,GAAoBjtC,OAAQzB,EAAI0S,IAAM1S,EAAG,CAC5D,MAAMQ,EAAQquC,EAAM7uC,EAAI,QACV0N,IAAVlN,IACFsjB,EAAM4qB,GAAoB1uC,IAAMQ,EAEpC,CAEA,OADAsjB,EAAMmrB,SAAWnrB,EAAMorB,OAAOzB,MAAM,QAC7B3pB,CACT,ECxBaqrB,GAAc,kBAMdC,GAAmB,OAMnBC,GAAiB,QAMjBC,GAAkB,GAYlBC,GAAkB,QAYlBC,GAAqB,OAMrBC,GAAmB,SAMnBC,GAAsB,SAMtBC,GAAiB,CAAC,EAAG,EAAG,EAAG,GAW3B,GAAe,IAAI,GAKhC,IAKIC,GALAC,GAAiB,KAUd,MAAMC,GAAc,CAAC,EAMf,GAAe,WAC1B,MACM/6B,EAAO,QACPg7B,EAAiB,CAAC,YAAa,SAC/BjsC,EAAMisC,EAAetuC,OACrBuuC,EAAO,2BACb,IAAIC,EAAUC,EAQd,SAASC,EAAYC,EAAWC,EAAYC,GAC1C,IAAIC,GAAY,EAChB,IAAK,IAAIvwC,EAAI,EAAGA,EAAI8D,IAAO9D,EAAG,CAC5B,MAAMwwC,EAAgBT,EAAe/vC,GAKrC,GAJAkwC,EAAiBO,GACfL,EAAY,IAAMC,EAAa,IAAMt7B,EAAOy7B,EAC5CR,GAEEM,GAAcE,EAAe,CAC/B,MAAM36B,EAAQ46B,GACZL,EACE,IACAC,EACA,IACAt7B,EACAu7B,EACA,IACAE,EACFR,GAIFO,EAAYA,GAAa16B,GAASq6B,CACpC,CACF,CACA,QAAIK,CAIN,CAEA,SAASG,IACP,IAAIC,GAAO,EACX,MAAMC,EAAQ,GAAapwB,UAC3B,IAAK,IAAIxgB,EAAI,EAAG0S,EAAKk+B,EAAMnvC,OAAQzB,EAAI0S,IAAM1S,EAAG,CAC9C,MAAM6wC,EAAOD,EAAM5wC,GACf,GAAasgB,IAAIuwB,GAjDT,MAkDNV,EAAYvjC,MAAMjL,KAAMkvC,EAAKpD,MAAM,QACrC,GAAMqC,IAEND,GAAiB,KACjBD,QAAcliC,EACd,GAAa/E,IAAIkoC,EAvDT,OAyDR,GAAaloC,IAAIkoC,EAAM,GAAavwB,IAAIuwB,GAAQ,GAAG,GACnDF,GAAO,GAGb,CACIA,IACFG,cAAcb,GACdA,OAAWviC,EAEf,CAEA,OAAO,SAAUkhC,GACf,MAAMiC,EAAOlC,GAAkBC,GAC/B,IAAKiC,EACH,OAEF,MAAM5B,EAAW4B,EAAK5B,SACtB,IAAK,IAAIjvC,EAAI,EAAG0S,EAAKu8B,EAASxtC,OAAQzB,EAAI0S,IAAM1S,EAAG,CACjD,MAAMkvC,EAASD,EAASjvC,GAClBqB,EAAMwvC,EAAK/sB,MAAQ,KAAO+sB,EAAK9B,OAAS,KAAOG,OACvBxhC,IAA1B,GAAa4S,IAAIjf,KACnB,GAAasH,IAAItH,EA9EP,KA8EqB,GAC1B8uC,EAAYU,EAAK/sB,MAAO+sB,EAAK9B,OAAQG,KACxC,GAAavmC,IAAItH,EAAK,GAAG,QACRqM,IAAbuiC,IACFA,EAAWc,YAAYL,EAAO,MAItC,CACF,CACD,CAzF2B,GA+FfM,GAAoB,WAI/B,IAAIC,EACJ,OAAO,SAAUrC,GACf,IAAInjC,EAASqkC,GAAYlB,GACzB,GAAclhC,MAAVjC,EAAqB,CACvB,GAAI8V,GAAyB,CAC3B,MAAMsvB,EAAOlC,GAAkBC,GACzBsC,EAAUC,GAAYvC,EAAU,MAItCnjC,GAHmB7K,MAAM8sC,OAAOmD,EAAK/B,aACjC,IACApB,OAAOmD,EAAK/B,cAGboC,EAAQE,wBAA0BF,EAAQG,yBAC/C,MACOJ,IACHA,EAAiBrtB,SAASC,cAAc,OACxCotB,EAAeK,UAAY,IAC3BL,EAAentB,MAAMytB,UAAY,IACjCN,EAAentB,MAAM0tB,UAAY,OACjCP,EAAentB,MAAMrY,OAAS,OAC9BwlC,EAAentB,MAAMub,QAAU,IAC/B4R,EAAentB,MAAM2tB,OAAS,OAC9BR,EAAentB,MAAMyY,SAAW,WAChC0U,EAAentB,MAAM4tB,QAAU,QAC/BT,EAAentB,MAAM6tB,KAAO,YAE9BV,EAAentB,MAAM+sB,KAAOjC,EAC5BhrB,SAASgpB,KAAKC,YAAYoE,GAC1BxlC,EAASwlC,EAAeW,aACxBhuB,SAASgpB,KAAKI,YAAYiE,GAE5BnB,GAAYlB,GAAYnjC,CAC1B,CACA,OAAOA,CACT,CACD,CAvCgC,GA8CjC,SAAS0lC,GAAYN,EAAMb,GAQzB,OAPKH,KACHA,GAAiB9B,GAAsB,EAAG,IAExC8C,GAAQjB,KACVC,GAAegB,KAAOA,EACtBjB,GAAcC,GAAegB,MAExBhB,GAAesB,YAAYnB,EACpC,CAOO,SAASS,GAAiBI,EAAMb,GACrC,OAAOmB,GAAYN,EAAMb,GAAMn6B,KACjC,CASO,SAASg8B,GAAyBhB,EAAMb,EAAMv+B,GACnD,GAAIu+B,KAAQv+B,EACV,OAAOA,EAAMu+B,GAEf,MAAMn6B,EAAQm6B,EACXvC,MAAM,MACNqE,QAAO,CAACC,EAAMC,IAAS3xC,KAAKwK,IAAIknC,EAAMtB,GAAiBI,EAAMmB,KAAQ,GAExE,OADAvgC,EAAMu+B,GAAQn6B,EACPA,CACT,CA8DO,SAASo8B,GACd3D,EACA10B,EACAke,EACAoa,EACAC,EACAC,EACA9O,EACA58B,EACAoE,EACAuG,EACA0U,GAEAuoB,EAAQ+D,OAEQ,IAAZva,IACFwW,EAAQgE,aAAexa,GAErBle,GACF00B,EAAQiE,aAAa3lC,MAAM0hC,EAAS10B,GAGjB,EAAe44B,qBAElClE,EAAQnoB,UAAUrb,EAAGuG,GACrBi9B,EAAQvoB,MAAMA,EAAM,GAAIA,EAAM,IA2ClC,SAAkC0sB,EAAOnE,GACvC,MAAMkE,EAAsBC,EAAMD,oBAClC,IAAK,IAAIxyC,EAAI,EAAG0S,EAAK8/B,EAAoB/wC,OAAQzB,EAAI0S,EAAI1S,GAAK,EACxDoR,MAAM2L,QAAQy1B,EAAoBxyC,EAAI,IACxCsuC,EAAQkE,EAAoBxyC,IAAI4M,MAC9B0hC,EACAkE,EAAoBxyC,EAAI,IAG1BsuC,EAAQkE,EAAoBxyC,IAAMwyC,EAAoBxyC,EAAI,EAGhE,CAtDI0yC,CAA8C,EAAgBpE,IACrDvoB,EAAM,GAAK,GAAKA,EAAM,GAAK,GAEpCuoB,EAAQnoB,UAAUrb,EAAGuG,GACrBi9B,EAAQvoB,MAAMA,EAAM,GAAIA,EAAM,IAC9BuoB,EAAQqE,UAC6D,EAGnER,EACAC,EACA9O,EACA58B,EACA,EACA,EACA48B,EACA58B,IAIF4nC,EAAQqE,UAC6D,EAGnER,EACAC,EACA9O,EACA58B,EACAoE,EACAuG,EACAiyB,EAAIvd,EAAM,GACVrf,EAAIqf,EAAM,IAIduoB,EAAQsE,SACV,CC7aA,MAAMC,WAAqB,GAIzB9kC,YAAYC,GAOV0C,MAAM,CACJonB,QAAS,EACT6S,oBAJ2Bj9B,IAA3BM,EAAQ28B,gBAA+B38B,EAAQ28B,eAK/C71B,cAA+BpH,IAArBM,EAAQ8G,SAAyB9G,EAAQ8G,SAAW,EAC9DiR,WAAyBrY,IAAlBM,EAAQ+X,MAAsB/X,EAAQ+X,MAAQ,EACrDilB,kBAC2Bt9B,IAAzBM,EAAQg9B,aAA6Bh9B,EAAQg9B,aAAe,CAAC,EAAG,GAClEE,cAAel9B,EAAQk9B,gBAOzBvpC,KAAKmxC,aAAUplC,EAMf/L,KAAKoxC,oBAAsB,KAM3BpxC,KAAKqxC,WAAyBtlC,IAAjBM,EAAQilC,KAAqBjlC,EAAQilC,KAAO,KAMzDtxC,KAAKuxC,QAAU,CAAC,EAAG,GAMnBvxC,KAAKwxC,QAAUnlC,EAAQ4f,OAMvBjsB,KAAKyxC,aACgB1lC,IAAnBM,EAAQsJ,OAAuBtJ,EAAQsJ,OAAStJ,EAAQqlC,QAM1D1xC,KAAK2xC,SAAWtlC,EAAQulC,QAMxB5xC,KAAK6xC,YAA2B9lC,IAAlBM,EAAQmV,MAAsBnV,EAAQmV,MAAQ,EAM5DxhB,KAAK8xC,aAA6B/lC,IAAnBM,EAAQ0lC,OAAuB1lC,EAAQ0lC,OAAS,KAM/D/xC,KAAKgyC,MAAQ,KAMbhyC,KAAKiyC,eAAiB,KAEtBjyC,KAAK0mC,QACP,CAOAxsB,QACE,MAAMkK,EAAQpkB,KAAKwpC,WACbrnB,EAAQ,IAAI+uB,GAAa,CAC7BI,KAAMtxC,KAAKkyC,UAAYlyC,KAAKkyC,UAAUh4B,aAAUnO,EAChDkgB,OAAQjsB,KAAKgsB,YACbrW,OAAQ3V,KAAKmyC,YACbP,QAAS5xC,KAAKoyC,aACd5wB,MAAOxhB,KAAKqyC,WACZN,OAAQ/xC,KAAKsyC,YAActyC,KAAKsyC,YAAYp4B,aAAUnO,EACtDoH,SAAUnT,KAAKo/B,cACf4J,eAAgBhpC,KAAKypC,oBACrBrlB,MAAO3U,MAAM2L,QAAQgJ,GAASA,EAAMzkB,QAAUykB,EAC9CilB,aAAcrpC,KAAK0pC,kBAAkB/pC,QACrC4pC,cAAevpC,KAAK2pC,qBAGtB,OADAxnB,EAAM+V,WAAWl4B,KAAKk3B,cACf/U,CACT,CAQA0nB,YACE,MAAMz2B,EAAOpT,KAAKgyC,MAClB,IAAK5+B,EACH,OAAO,KAET,MAAMi2B,EAAerpC,KAAK0pC,kBACpBtlB,EAAQpkB,KAAK4pC,gBAGnB,MAAO,CACLx2B,EAAK,GAAK,EAAIi2B,EAAa,GAAKjlB,EAAM,GACtChR,EAAK,GAAK,EAAIi2B,EAAa,GAAKjlB,EAAM,GAE1C,CAOAiuB,WACE,OAAOryC,KAAK6xC,MACd,CAOAK,UACE,OAAOlyC,KAAKqxC,KACd,CAOAkB,QAAQjB,GACNtxC,KAAKqxC,MAAQC,EACbtxC,KAAK0mC,QACP,CAKAsD,uBAIE,OAHKhqC,KAAKoxC,qBACRpxC,KAAKwyC,0BAA0BxyC,KAAKiyC,gBAE/BjyC,KAAKoxC,mBACd,CAQAtH,SAASC,GACP,IAAI0I,EAAQzyC,KAAKmxC,QAAQpH,GACzB,IAAK0I,EAAO,CACV,MAAMC,EAAgB1yC,KAAKiyC,eACrBtF,EAAUP,GACdsG,EAAct/B,KAAO22B,EACrB2I,EAAct/B,KAAO22B,GAEvB/pC,KAAK2yC,MAAMD,EAAe/F,EAAS5C,GAEnC0I,EAAQ9F,EAAQJ,OAChBvsC,KAAKmxC,QAAQpH,GAAc0I,CAC7B,CACA,OAAOA,CACT,CAOAxI,cAAcF,GACZ,OAAOA,CACT,CAKAI,eACE,OAAOnqC,KAAKgyC,KACd,CAKA9H,gBACE,OAAO,EACT,CAOAE,YACE,OAAOpqC,KAAKuxC,OACd,CAOAvlB,YACE,OAAOhsB,KAAKwxC,OACd,CAOAW,YACE,OAAOnyC,KAAKyxC,OACd,CAOAW,aACE,OAAOpyC,KAAK2xC,QACd,CAOAtH,UACE,OAAOrqC,KAAKgyC,KACd,CAOAM,YACE,OAAOtyC,KAAK8xC,OACd,CAOAc,UAAUb,GACR/xC,KAAK8xC,QAAUC,EACf/xC,KAAK0mC,QACP,CAKA+D,kBAAkB1uB,GAAW,CAK7BzR,OAAQ,CAKRogC,oBAAoB3uB,GAAW,CAU/B82B,uBAAuBC,EAAUC,EAAaC,GAC5C,GACkB,IAAhBD,GACA/yC,KAAKwxC,UAAY/yC,KACH,UAAbq0C,GAAqC,UAAbA,EAEzB,OAAOC,EAwBT,IAAIE,EAAKjzC,KAAKyxC,QACVyB,OAAuBnnC,IAAlB/L,KAAK2xC,SAAyBsB,EAAKjzC,KAAK2xC,SACjD,GAAIsB,EAAKC,EAAI,CACX,MAAMh4B,EAAM+3B,EACZA,EAAKC,EACLA,EAAKh4B,CACP,CACA,MAAM+Q,OACclgB,IAAlB/L,KAAK2xC,SAAyB3xC,KAAKwxC,QAAyB,EAAfxxC,KAAKwxC,QAC9C2B,EAAS,EAAIz0C,KAAKyN,GAAM8f,EACxBtjB,EAAIuqC,EAAKx0C,KAAK8U,IAAI2/B,GAElB70C,EAAI20C,EADAv0C,KAAKuK,KAAKiqC,EAAKA,EAAKvqC,EAAIA,GAE5B5K,EAAIW,KAAKuK,KAAKN,EAAIA,EAAIrK,EAAIA,GAC1B80C,EAAar1C,EAAI4K,EACvB,GAAiB,UAAbmqC,GAAwBM,GAAcJ,EACxC,OAAOI,EAAaL,EAetB,MAAMpwB,EAAIowB,EAAc,EAAIK,EACtBvuC,EAAKkuC,EAAc,GAAMz0C,EAAIP,GAE7Bs1C,EADO30C,KAAKuK,MAAMgqC,EAAKtwB,IAAMswB,EAAKtwB,GAAK9d,EAAIA,GACzBouC,EACxB,QAAsBlnC,IAAlB/L,KAAK2xC,UAAuC,UAAbmB,EACjC,OAAkB,EAAXO,EAIT,MAAMC,EAAKL,EAAKv0C,KAAK8U,IAAI2/B,GAEnBI,EAAKL,EADAx0C,KAAKuK,KAAKgqC,EAAKA,EAAKK,EAAKA,GAG9BE,EADK90C,KAAKuK,KAAKqqC,EAAKA,EAAKC,EAAKA,GACPD,EAC7B,GAAIE,GAAmBR,EAAY,CACjC,MAAMS,EAAeD,EAAkBT,EAAe,EAAIG,EAAKD,EAC/D,OAAO,EAAIv0C,KAAKwK,IAAImqC,EAAUI,EAChC,CACA,OAAkB,EAAXJ,CACT,CAMAK,sBACE,IAIIC,EAJAb,EAAWlF,GACXoF,EAAa,EACbY,EAAW,KACXC,EAAiB,EAEjBd,EAAc,EAEd/yC,KAAK8xC,UACP6B,EAAc3zC,KAAK8xC,QAAQgC,WACP,OAAhBH,IACFA,EAAc9F,IAEhB8F,EAAcxH,GAAYwH,GAC1BZ,EAAc/yC,KAAK8xC,QAAQiC,gBACPhoC,IAAhBgnC,IACFA,EDlTwB,GCoT1Ba,EAAW5zC,KAAK8xC,QAAQkC,cACxBH,EAAiB7zC,KAAK8xC,QAAQmC,oBAC9BnB,EAAW9yC,KAAK8xC,QAAQoC,mBACPnoC,IAAb+mC,IACFA,EAAWlF,IAEboF,EAAahzC,KAAK8xC,QAAQqC,qBACPpoC,IAAfinC,IACFA,ED1VyB,KC8V7B,MAAMn8B,EAAM7W,KAAK6yC,uBAAuBC,EAAUC,EAAaC,GACzDoB,EAAY11C,KAAKwK,IAAIlJ,KAAKyxC,QAASzxC,KAAK2xC,UAAY,GAG1D,MAAO,CACLgC,YAAaA,EACbZ,YAAaA,EACb3/B,KALW1U,KAAK4K,KAAK,EAAI8qC,EAAYv9B,GAMrC+8B,SAAUA,EACVC,eAAgBA,EAChBf,SAAUA,EACVE,WAAYA,EAEhB,CAKAtM,SACE1mC,KAAKiyC,eAAiBjyC,KAAK0zC,sBAC3B,MAAMtgC,EAAOpT,KAAKiyC,eAAe7+B,KACjCpT,KAAKmxC,QAAU,CAAC,EAChBnxC,KAAKgyC,MAAQ,CAAC5+B,EAAMA,EACtB,CAQAu/B,MAAMD,EAAe/F,EAAS5C,GAO5B,GANA4C,EAAQvoB,MAAM2lB,EAAYA,GAE1B4C,EAAQnoB,UAAUkuB,EAAct/B,KAAO,EAAGs/B,EAAct/B,KAAO,GAE/DpT,KAAKq0C,YAAY1H,GAEb3sC,KAAKqxC,MAAO,CACd,IAAIvG,EAAQ9qC,KAAKqxC,MAAMyC,WACT,OAAVhJ,IACFA,EAAQ2C,IAEVd,EAAQ2H,UAAYnI,GAAYrB,GAChC6B,EAAQ2E,MACV,CACItxC,KAAK8xC,UACPnF,EAAQgH,YAAcjB,EAAciB,YACpChH,EAAQ4H,UAAY7B,EAAcK,YAC9BL,EAAckB,WAChBjH,EAAQ6H,YAAY9B,EAAckB,UAClCjH,EAAQkH,eAAiBnB,EAAcmB,gBAEzClH,EAAQmG,SAAWJ,EAAcI,SACjCnG,EAAQqG,WAAaN,EAAcM,WACnCrG,EAAQoF,SAEZ,CAMAS,0BAA0BE,GACxB,GAAI1yC,KAAKqxC,MAAO,CACd,IAAIvG,EAAQ9qC,KAAKqxC,MAAMyC,WAGnB3d,EAAU,EASd,GARqB,iBAAV2U,IACTA,EAAQoB,GAAQpB,IAEJ,OAAVA,EACF3U,EAAU,EACD1mB,MAAM2L,QAAQ0vB,KACvB3U,EAA2B,IAAjB2U,EAAMhrC,OAAegrC,EAAM,GAAK,GAE5B,IAAZ3U,EAAe,CAGjB,MAAMwW,EAAUP,GACdsG,EAAct/B,KACds/B,EAAct/B,MAEhBpT,KAAKoxC,oBAAsBzE,EAAQJ,OAEnCvsC,KAAKy0C,wBAAwB/B,EAAe/F,EAC9C,CACF,CACK3sC,KAAKoxC,sBACRpxC,KAAKoxC,oBAAsBpxC,KAAK8pC,SAAS,GAE7C,CAMAuK,YAAY1H,GACV,IAAI1gB,EAASjsB,KAAKwxC,QAClB,MAAM77B,EAAS3V,KAAKyxC,QACpB,GAAIxlB,IAAWxtB,IACbkuC,EAAQ+H,IAAI,EAAG,EAAG/+B,EAAQ,EAAG,EAAIjX,KAAKyN,QACjC,CACL,MAAMylC,OAA4B7lC,IAAlB/L,KAAK2xC,SAAyBh8B,EAAS3V,KAAK2xC,cACtC5lC,IAAlB/L,KAAK2xC,WACP1lB,GAAU,GAEZ,MAAM0oB,EAAa30C,KAAK6xC,OAASnzC,KAAKyN,GAAK,EACrCyoC,EAAQ,EAAIl2C,KAAKyN,GAAM8f,EAC7B,IAAK,IAAI5tB,EAAI,EAAGA,EAAI4tB,EAAQ5tB,IAAK,CAC/B,MAAMw2C,EAASF,EAAat2C,EAAIu2C,EAC1BE,EAAUz2C,EAAI,GAAM,EAAIsX,EAASi8B,EACvCjF,EAAQoI,OAAOD,EAAUp2C,KAAK4U,IAAIuhC,GAASC,EAAUp2C,KAAK8U,IAAIqhC,GAChE,CACAlI,EAAQqI,WACV,CACF,CAOAP,wBAAwB/B,EAAe/F,GAErCA,EAAQnoB,UAAUkuB,EAAct/B,KAAO,EAAGs/B,EAAct/B,KAAO,GAE/DpT,KAAKq0C,YAAY1H,GAEjBA,EAAQ2H,UAAY7G,GACpBd,EAAQ2E,OACJtxC,KAAK8xC,UACPnF,EAAQgH,YAAcjB,EAAciB,YACpChH,EAAQ4H,UAAY7B,EAAcK,YAC9BL,EAAckB,WAChBjH,EAAQ6H,YAAY9B,EAAckB,UAClCjH,EAAQkH,eAAiBnB,EAAcmB,gBAEzClH,EAAQmG,SAAWJ,EAAcI,SACjCnG,EAAQqG,WAAaN,EAAcM,WACnCrG,EAAQoF,SAEZ,EAGF,UCrlBA,MAAM,WAAoB,GAIxB3lC,YAAYC,GAGV0C,MAAM,CACJkd,OAAQxtB,IACR6yC,MAJFjlC,EAAUA,GAAoB,CAACsJ,OAAQ,IAIvB27B,KACd37B,OAAQtJ,EAAQsJ,OAChBo8B,OAAQ1lC,EAAQ0lC,OAChB3tB,WAAyBrY,IAAlBM,EAAQ+X,MAAsB/X,EAAQ+X,MAAQ,EACrDjR,cAA+BpH,IAArBM,EAAQ8G,SAAyB9G,EAAQ8G,SAAW,EAC9D61B,oBAC6Bj9B,IAA3BM,EAAQ28B,gBAA+B38B,EAAQ28B,eACjDK,kBAC2Bt9B,IAAzBM,EAAQg9B,aAA6Bh9B,EAAQg9B,aAAe,CAAC,EAAG,GAClEE,cAAel9B,EAAQk9B,eAE3B,CAOArvB,QACE,MAAMkK,EAAQpkB,KAAKwpC,WACbrnB,EAAQ,IAAI,GAAY,CAC5BmvB,KAAMtxC,KAAKkyC,UAAYlyC,KAAKkyC,UAAUh4B,aAAUnO,EAChDgmC,OAAQ/xC,KAAKsyC,YAActyC,KAAKsyC,YAAYp4B,aAAUnO,EACtD4J,OAAQ3V,KAAKmyC,YACb/tB,MAAO3U,MAAM2L,QAAQgJ,GAASA,EAAMzkB,QAAUykB,EAC9CjR,SAAUnT,KAAKo/B,cACf4J,eAAgBhpC,KAAKypC,oBACrBJ,aAAcrpC,KAAK0pC,kBAAkB/pC,QACrC4pC,cAAevpC,KAAK2pC,qBAGtB,OADAxnB,EAAM+V,WAAWl4B,KAAKk3B,cACf/U,CACT,CAQA8yB,UAAUt/B,GACR3V,KAAKyxC,QAAU97B,EACf3V,KAAK0mC,QACP,EAGF,UCjEA,MAAM,GAIJt6B,YAAYC,GACVA,EAAUA,GAAW,CAAC,EAMtBrM,KAAKk1C,YAA2BnpC,IAAlBM,EAAQy+B,MAAsBz+B,EAAQy+B,MAAQ,IAC9D,CAOA5wB,QACE,MAAM4wB,EAAQ9qC,KAAK8zC,WACnB,OAAO,IAAI,GAAK,CACdhJ,MAAOr7B,MAAM2L,QAAQ0vB,GAASA,EAAMnrC,QAAUmrC,QAAS/+B,GAE3D,CAOA+nC,WACE,OAAO9zC,KAAKk1C,MACd,CAQAC,SAASrK,GACP9qC,KAAKk1C,OAASpK,CAChB,EAGF,UCrCA,MAAM,GAIJ1+B,YAAYC,GACVA,EAAUA,GAAW,CAAC,EAMtBrM,KAAKk1C,YAA2BnpC,IAAlBM,EAAQy+B,MAAsBz+B,EAAQy+B,MAAQ,KAM5D9qC,KAAKo1C,SAAW/oC,EAAQgpC,QAMxBr1C,KAAKs1C,eAAiCvpC,IAArBM,EAAQunC,SAAyBvnC,EAAQunC,SAAW,KAMrE5zC,KAAKu1C,gBAAkBlpC,EAAQwnC,eAM/B7zC,KAAKw1C,UAAYnpC,EAAQymC,SAMzB9yC,KAAKy1C,YAAcppC,EAAQ2mC,WAM3BhzC,KAAK01C,OAASrpC,EAAQ6H,KACxB,CAOAgG,QACE,MAAM4wB,EAAQ9qC,KAAK8zC,WACnB,OAAO,IAAI,GAAO,CAChBhJ,MAAOr7B,MAAM2L,QAAQ0vB,GAASA,EAAMnrC,QAAUmrC,QAAS/+B,EACvDspC,QAASr1C,KAAK21C,aACd/B,SAAU5zC,KAAKg0C,cAAgBh0C,KAAKg0C,cAAcr0C,aAAUoM,EAC5D8nC,eAAgB7zC,KAAKi0C,oBACrBnB,SAAU9yC,KAAKk0C,cACflB,WAAYhzC,KAAKm0C,gBACjBjgC,MAAOlU,KAAK+zC,YAEhB,CAOAD,WACE,OAAO9zC,KAAKk1C,MACd,CAOAS,aACE,OAAO31C,KAAKo1C,QACd,CAOApB,cACE,OAAOh0C,KAAKs1C,SACd,CAOArB,oBACE,OAAOj0C,KAAKu1C,eACd,CAOArB,cACE,OAAOl0C,KAAKw1C,SACd,CAOArB,gBACE,OAAOn0C,KAAKy1C,WACd,CAOA1B,WACE,OAAO/zC,KAAK01C,MACd,CAQAP,SAASrK,GACP9qC,KAAKk1C,OAASpK,CAChB,CAQA8K,WAAWP,GACTr1C,KAAKo1C,SAAWC,CAClB,CAQAb,YAAYZ,GACV5zC,KAAKs1C,UAAY1B,CACnB,CAQAiC,kBAAkBhC,GAChB7zC,KAAKu1C,gBAAkB1B,CACzB,CAQAiC,YAAYhD,GACV9yC,KAAKw1C,UAAY1C,CACnB,CAQAiD,cAAc/C,GACZhzC,KAAKy1C,YAAczC,CACrB,CAQAgD,SAAS9hC,GACPlU,KAAK01C,OAASxhC,CAChB,EAGF,UC5EA,MAAM+hC,GAIJ7pC,YAAYC,GACVA,EAAUA,GAAW,CAAC,EAMtBrM,KAAKk2C,UAAY,KAMjBl2C,KAAKm2C,kBAAoBC,QAEArqC,IAArBM,EAAQ0N,UACV/Z,KAAKyyB,YAAYpmB,EAAQ0N,UAO3B/Z,KAAKqxC,WAAyBtlC,IAAjBM,EAAQilC,KAAqBjlC,EAAQilC,KAAO,KAMzDtxC,KAAKq2C,YAA2BtqC,IAAlBM,EAAQomC,MAAsBpmC,EAAQomC,MAAQ,KAM5DzyC,KAAKumC,eAAiCx6B,IAArBM,EAAQiqC,SAAyBjqC,EAAQiqC,SAAW,KAMrEt2C,KAAKu2C,2BAC8BxqC,IAAjCM,EAAQmqC,qBACJnqC,EAAQmqC,qBACR,KAMNx2C,KAAK8xC,aAA6B/lC,IAAnBM,EAAQ0lC,OAAuB1lC,EAAQ0lC,OAAS,KAM/D/xC,KAAKy2C,WAAyB1qC,IAAjBM,EAAQgiC,KAAqBhiC,EAAQgiC,KAAO,KAMzDruC,KAAK02C,QAAUrqC,EAAQgqB,MACzB,CAOAnc,QACE,IAAIH,EAAW/Z,KAAKywB,cAMpB,OALI1W,GAAgC,iBAAbA,IACrBA,EAAgE,EAE9DG,SAEG,IAAI+7B,GAAM,CACfl8B,SAAUA,EACVu3B,KAAMtxC,KAAKkyC,UAAYlyC,KAAKkyC,UAAUh4B,aAAUnO,EAChD0mC,MAAOzyC,KAAK8pC,WAAa9pC,KAAK8pC,WAAW5vB,aAAUnO,EACnDuqC,SAAUt2C,KAAKmoC,cACf4J,OAAQ/xC,KAAKsyC,YAActyC,KAAKsyC,YAAYp4B,aAAUnO,EACtDsiC,KAAMruC,KAAK22C,UAAY32C,KAAK22C,UAAUz8B,aAAUnO,EAChDsqB,OAAQr2B,KAAKi3B,aAEjB,CAQAkR,cACE,OAAOnoC,KAAKumC,SACd,CAQAqQ,YAAYN,GACVt2C,KAAKumC,UAAY+P,CACnB,CAQAO,wBAAwBP,GACtBt2C,KAAKu2C,sBAAwBD,CAC/B,CAQAQ,0BACE,OAAO92C,KAAKu2C,qBACd,CASA9lB,cACE,OAAOzwB,KAAKk2C,SACd,CAQAa,sBACE,OAAO/2C,KAAKm2C,iBACd,CAOAjE,UACE,OAAOlyC,KAAKqxC,KACd,CAOAkB,QAAQjB,GACNtxC,KAAKqxC,MAAQC,CACf,CAOAxH,WACE,OAAO9pC,KAAKq2C,MACd,CAOAW,SAASvE,GACPzyC,KAAKq2C,OAAS5D,CAChB,CAOAH,YACE,OAAOtyC,KAAK8xC,OACd,CAOAc,UAAUb,GACR/xC,KAAK8xC,QAAUC,CACjB,CAOA4E,UACE,OAAO32C,KAAKy2C,KACd,CAOAQ,QAAQ5I,GACNruC,KAAKy2C,MAAQpI,CACf,CAOApX,YACE,OAAOj3B,KAAK02C,OACd,CAUAjkB,YAAY1Y,GACc,mBAAbA,EACT/Z,KAAKm2C,kBAAoBp8B,EACI,iBAAbA,EAChB/Z,KAAKm2C,kBAAoB,SAAUx8B,GACjC,OACEA,EAAQgF,IAAI5E,EAEhB,EACUA,OAEYhO,IAAbgO,IACT/Z,KAAKm2C,kBAAoB,WACvB,OAA4D,CAC9D,GAJAn2C,KAAKm2C,kBAAoBC,GAM3Bp2C,KAAKk2C,UAAYn8B,CACnB,CAQAqe,UAAU/B,GACRr2B,KAAK02C,QAAUrgB,CACjB,EAsCF,IAAI6gB,GAAgB,KAOb,SAASC,GAAmBx9B,EAAS1K,GAM1C,IAAKioC,GAAe,CAClB,MAAM5F,EAAO,IAAI,GAAK,CACpBxG,MAAO,0BAEHiH,EAAS,IAAI,GAAO,CACxBjH,MAAO,UACP52B,MAAO,OAETgjC,GAAgB,CACd,IAAIjB,GAAM,CACRxD,MAAO,IAAI2E,GAAY,CACrB9F,KAAMA,EACNS,OAAQA,EACRp8B,OAAQ,IAEV27B,KAAMA,EACNS,OAAQA,IAGd,CACA,OAAOmF,EACT,CAqEA,SAASd,GAAwBz8B,GAC/B,OAAOA,EAAQ8W,aACjB,CAEA,UC5iBA,MAAM4mB,GACJjrC,cAKEpM,KAAKs3C,OAAS,CAAC,EAMft3C,KAAKu3C,WAAa,EAMlBv3C,KAAKw3C,cAAgB,EACvB,CAKAjuC,QACEvJ,KAAKs3C,OAAS,CAAC,EACft3C,KAAKu3C,WAAa,CACpB,CAKAE,iBACE,OAAOz3C,KAAKu3C,WAAav3C,KAAKw3C,aAChC,CAKAE,SACE,GAAI13C,KAAKy3C,iBAAkB,CACzB,IAAIp5C,EAAI,EACR,IAAK,MAAMqB,KAAOM,KAAKs3C,OAAQ,CAC7B,MAAMK,EAAY33C,KAAKs3C,OAAO53C,GACZ,IAAP,EAANrB,MAAmBs5C,EAAU56B,uBACzB/c,KAAKs3C,OAAO53C,KACjBM,KAAKu3C,WAEX,CACF,CACF,CAQA54B,IAAIi5B,EAAKC,EAAa/M,GACpB,MAAMprC,EAAMs1B,GAAO4iB,EAAKC,EAAa/M,GACrC,OAAOprC,KAAOM,KAAKs3C,OAASt3C,KAAKs3C,OAAO53C,GAAO,IACjD,CAQAsH,IAAI4wC,EAAKC,EAAa/M,EAAO6M,GAC3B,MAAMj4C,EAAMs1B,GAAO4iB,EAAKC,EAAa/M,GACrC9qC,KAAKs3C,OAAO53C,GAAOi4C,IACjB33C,KAAKu3C,UACT,CASAO,QAAQC,GACN/3C,KAAKw3C,cAAgBO,EACrB/3C,KAAK03C,QACP,EASF,SAAS1iB,GAAO4iB,EAAKC,EAAa/M,GAEhC,OAAO+M,EAAc,IAAMD,EAAM,KADb9M,EAAQD,GAASC,GAAS,OAEhD,CASO,MAAMkN,GAAS,IAAIX,GCkEnB,SAASY,GAAYxF,EAAOyF,EAAaC,GAC9C,MAAMC,EAAsC,EAC5C,IAAIC,GAAY,EACZC,GAAW,EACXC,GAAS,EAEb,MAAMC,EAAe,CACnBh7B,GAAW46B,EAAKr6B,IAAgB,WAC9Bw6B,GAAS,EACJD,GACHJ,GAEJ,KAyBF,OAtBIE,EAAIR,KAAO13B,IACbo4B,GAAW,EACXF,EACG5yC,SACAizC,MAAK,WACAJ,GACFH,GAEJ,IACCQ,OAAM,SAAUtiC,GACXiiC,IACEE,EACFL,IAEAC,IAGN,KAEFK,EAAat4C,KAAKsd,GAAW46B,EAAKr6B,GAAiBo6B,IAG9C,WACLE,GAAY,EACZG,EAAajhC,QAAQkG,GACvB,CACF,CC/MA,IAAIk7B,GAAqB,KAEzB,MAAMC,WAAkB,GAStBxsC,YAAYqmC,EAAOmF,EAAKxkC,EAAMykC,EAAagB,EAAY/N,GACrD/7B,QAMA/O,KAAK84C,mBAAqB,KAM1B94C,KAAKq2C,OAAS5D,EAMdzyC,KAAK+4C,aAAelB,EAMpB73C,KAAKmxC,QAAU,CAAC,EAMhBnxC,KAAKk1C,OAASpK,EAMd9qC,KAAKg5C,UAAY,KAMjBh5C,KAAKi5C,YAAcJ,EAMnB74C,KAAKgyC,MAAQ5+B,EAMbpT,KAAKk5C,KAAOtB,EAKZ53C,KAAKm5C,QACP,CAKAC,mBACEp5C,KAAKq2C,OAAS,IAAIl2B,MACQ,OAAtBngB,KAAK+4C,eACP/4C,KAAKq2C,OAAOwB,YAAc73C,KAAK+4C,aAEnC,CAMAM,aACE,QAAsBttC,IAAlB/L,KAAKm5C,UAA0Bn5C,KAAKi5C,cAAgB,GAAmB,CACpEN,KACHA,GAAqBvM,GAAsB,EAAG,OAAGrgC,EAAW,CAC1DutC,oBAAoB,KAGxBX,GAAmB3H,UAAUhxC,KAAKq2C,OAAQ,EAAG,GAC7C,IACEsC,GAAmBY,aAAa,EAAG,EAAG,EAAG,GACzCv5C,KAAKm5C,UAAW,CAIlB,CAHE,MAAOp7C,GACP46C,GAAqB,KACrB34C,KAAKm5C,UAAW,CAClB,CACF,CACA,OAAyB,IAAlBn5C,KAAKm5C,QACd,CAKAK,uBACEx5C,KAAKmc,cAAc4B,GACrB,CAKA07B,oBACEz5C,KAAKi5C,YAAc,GACnBj5C,KAAK05C,iBACL15C,KAAKw5C,sBACP,CAKAG,mBACE35C,KAAKi5C,YAAc,GACfj5C,KAAKgyC,OACPhyC,KAAKq2C,OAAOniC,MAAQlU,KAAKgyC,MAAM,GAC/BhyC,KAAKq2C,OAAOvsC,OAAS9J,KAAKgyC,MAAM,IAEhChyC,KAAKgyC,MAAQ,CAAChyC,KAAKq2C,OAAOniC,MAAOlU,KAAKq2C,OAAOvsC,QAE/C9J,KAAK05C,iBACL15C,KAAKw5C,sBACP,CAMA1P,SAASC,GAKP,OAJK/pC,KAAKq2C,QACRr2C,KAAKo5C,mBAEPp5C,KAAK45C,cAAc7P,GACZ/pC,KAAKmxC,QAAQpH,GAAc/pC,KAAKmxC,QAAQpH,GAAc/pC,KAAKq2C,MACpE,CAMApM,cAAcF,GAEZ,OADA/pC,KAAK45C,cAAc7P,GACZ/pC,KAAKmxC,QAAQpH,GAAcA,EAAa,CACjD,CAKAG,gBACE,OAAOlqC,KAAKi5C,WACd,CAKAjP,uBAIE,GAHKhqC,KAAKq2C,QACRr2C,KAAKo5C,oBAEFp5C,KAAK84C,mBACR,GAAI94C,KAAKq5C,aAAc,CACrB,MAAMnlC,EAAQlU,KAAKgyC,MAAM,GACnBloC,EAAS9J,KAAKgyC,MAAM,GACpBrF,EAAUP,GAAsBl4B,EAAOpK,GAC7C6iC,EAAQkN,SAAS,EAAG,EAAG3lC,EAAOpK,GAC9B9J,KAAK84C,mBAAqBnM,EAAQJ,MACpC,MACEvsC,KAAK84C,mBAAqB94C,KAAKq2C,OAGnC,OAAOr2C,KAAK84C,kBACd,CAMAzO,UACE,OAAOrqC,KAAKgyC,KACd,CAKA8H,SACE,OAAO95C,KAAKk5C,IACd,CAKA5uC,OACE,GAAItK,KAAKi5C,cAAgB,GAAzB,CAGKj5C,KAAKq2C,QACRr2C,KAAKo5C,mBAGPp5C,KAAKi5C,YAAc,GACnB,IACmCj5C,KAAW,OAAE43C,IAAM53C,KAAKk5C,IAG3D,CAFE,MAAOn7C,GACPiC,KAAKy5C,mBACP,CACAz5C,KAAKg5C,UAAYf,GACfj4C,KAAKq2C,OACLr2C,KAAK25C,iBAAiBv8B,KAAKpd,MAC3BA,KAAKy5C,kBAAkBr8B,KAAKpd,MAd9B,CAgBF,CAMA45C,cAAc7P,GACZ,IACG/pC,KAAKk1C,QACNl1C,KAAKmxC,QAAQpH,IACb/pC,KAAKi5C,cAAgB,GAErB,OAGF,MAAMxG,EAAQzyC,KAAKq2C,OACb9J,EAAStqB,SAASC,cAAc,UACtCqqB,EAAOr4B,MAAQxV,KAAK4K,KAAKmpC,EAAMv+B,MAAQ61B,GACvCwC,EAAOziC,OAASpL,KAAK4K,KAAKmpC,EAAM3oC,OAASigC,GAEzC,MAAMgQ,EAAMxN,EAAOE,WAAW,MAC9BsN,EAAI31B,MAAM2lB,EAAYA,GACtBgQ,EAAI/I,UAAUyB,EAAO,EAAG,GAExBsH,EAAIC,yBAA2B,WAC/BD,EAAIzF,UAAYzJ,GAAS7qC,KAAKk1C,QAC9B6E,EAAIF,SAAS,EAAG,EAAGtN,EAAOr4B,MAAQ61B,EAAYwC,EAAOziC,OAASigC,GAE9DgQ,EAAIC,yBAA2B,iBAC/BD,EAAI/I,UAAUyB,EAAO,EAAG,GAExBzyC,KAAKmxC,QAAQpH,GAAcwC,CAC7B,CAOAmN,iBACM15C,KAAKg5C,YACPh5C,KAAKg5C,YACLh5C,KAAKg5C,UAAY,KAErB,EC1NF,MAAMiB,WAAa,GAIjB7tC,YAAYC,GAMV,MAAM8pB,OAA8BpqB,KALpCM,EAAUA,GAAW,CAAC,GAKE8pB,QAAwB9pB,EAAQ8pB,QAAU,EAK5DhjB,OAAgCpH,IAArBM,EAAQ8G,SAAyB9G,EAAQ8G,SAAW,EAK/DiR,OAA0BrY,IAAlBM,EAAQ+X,MAAsB/X,EAAQ+X,MAAQ,EAKtD4kB,OACuBj9B,IAA3BM,EAAQ28B,gBAA+B38B,EAAQ28B,eAEjDj6B,MAAM,CACJonB,QAASA,EACThjB,SAAUA,EACViR,MAAOA,EACPilB,kBAC2Bt9B,IAAzBM,EAAQg9B,aAA6Bh9B,EAAQg9B,aAAe,CAAC,EAAG,GAClEL,eAAgBA,EAChBO,cAAel9B,EAAQk9B,gBAOzBvpC,KAAKk6C,aAA6BnuC,IAAnBM,EAAQiW,OAAuBjW,EAAQiW,OAAS,CAAC,GAAK,IAMrEtiB,KAAKm6C,kBAAoB,KAMzBn6C,KAAKo6C,mBACsBruC,IAAzBM,EAAQguC,aAA6BhuC,EAAQguC,aAAe,WAM9Dr6C,KAAKs6C,mBACsBvuC,IAAzBM,EAAQkuC,aAA6BluC,EAAQkuC,aAAe,WAM9Dv6C,KAAKw6C,mBACsBzuC,IAAzBM,EAAQouC,aAA6BpuC,EAAQouC,aAAe,WAM9Dz6C,KAAK+4C,kBACqBhtC,IAAxBM,EAAQwrC,YAA4BxrC,EAAQwrC,YAAc,KAK5D,MAAMpF,OAAwB1mC,IAAhBM,EAAQ+rC,IAAoB/rC,EAAQ+rC,IAAM,KAMxDp4C,KAAK06C,SAAWruC,EAAQsuC,QAKxB,IAAI/C,EAAMvrC,EAAQurC,IAElBnnC,SAAiB1E,IAAR6rC,GAAqBnF,GAAQ,GACtChiC,GAAQgiC,GAAUA,GAASzyC,KAAK06C,SAAW,QAE9B3uC,IAAR6rC,GAAoC,IAAfA,EAAI93C,SAAiB2yC,IAC7CmF,EAAsC,EAAQA,KAAO,EAAOnF,IAE9DhiC,OAAe1E,IAAR6rC,GAAqBA,EAAI93C,OAAS,EAAG,GAG5C2Q,UAEuB1E,IAAlBM,EAAQ6H,YAA0CnI,IAAnBM,EAAQvC,cACtBiC,IAAlBM,EAAQ+X,OAEV,IAMF,MAAMy0B,OACY9sC,IAAhBM,EAAQurC,IAAoB,GAAkB,GA0DhD,GApDA53C,KAAKk1C,YAA2BnpC,IAAlBM,EAAQy+B,MAAsBoB,GAAQ7/B,EAAQy+B,OAAS,KAMrE9qC,KAAK46C,WDuGF,SAAanI,EAAOmF,EAAKxkC,EAAMykC,EAAagB,EAAY/N,GAC7D,IAAI6M,EAAY,OAAmBC,EAAKC,EAAa/M,GAKrD,OAJK6M,IACHA,EAAY,IAAIiB,GAAUnG,EAAOmF,EAAKxkC,EAAMykC,EAAagB,EAAY/N,GACrE,OAAmB8M,EAAKC,EAAa/M,EAAO6M,IAEvCA,CACT,CC9GsB,CAChBlF,EACsB,OACJ1mC,IAAlB/L,KAAK06C,SAAyB16C,KAAK06C,SAAW,KAC9C16C,KAAK+4C,aACLF,EACA74C,KAAKk1C,QAOPl1C,KAAK66C,aAA6B9uC,IAAnBM,EAAQ1O,OAAuB0O,EAAQ1O,OAAS,CAAC,EAAG,GAKnEqC,KAAK86C,mBACsB/uC,IAAzBM,EAAQ0uC,aAA6B1uC,EAAQ0uC,aAAe,WAM9D/6C,KAAKuxC,QAAU,KAMfvxC,KAAKgyC,WAAyBjmC,IAAjBM,EAAQ+G,KAAqB/G,EAAQ+G,KAAO,KAKzDpT,KAAK01C,OAASrpC,EAAQ6H,MAKtBlU,KAAKg7C,QAAU3uC,EAAQvC,YAKHiC,IAAhB/L,KAAK01C,aAAyC3pC,IAAjB/L,KAAKg7C,QAAuB,CAC3D,MAAMvI,EAAQzyC,KAAK8pC,SAAS,GACtBU,EAAW,KACfxqC,KAAKi7C,8BAA8Bj7C,KAAK01C,OAAQ11C,KAAKg7C,QAAQ,EAE3DvI,EAAMv+B,MAAQ,EAChBlU,KAAKi7C,8BAA8Bj7C,KAAK01C,OAAQ11C,KAAKg7C,SAErDvI,EAAM32B,iBAAiB,OAAQ0uB,EAEnC,CACF,CAOAtwB,QACE,IAAIkK,EAAQpkB,KAAKwpC,WAMjB,OALAplB,EAAQ3U,MAAM2L,QAAQgJ,GAASA,EAAMzkB,QAAUykB,OAE3BrY,IAAhB/L,KAAK01C,aAAyC3pC,IAAjB/L,KAAKg7C,UACpC52B,OAAQrY,GAEH,IAAIkuC,GAAK,CACd33B,OAAQtiB,KAAKk6C,QAAQv6C,QACrB06C,aAAcr6C,KAAKo6C,cACnBG,aAAcv6C,KAAKs6C,cACnBG,aAAcz6C,KAAKw6C,cACnB1P,MACE9qC,KAAKk1C,QAAUl1C,KAAKk1C,OAAOv1C,MACvBK,KAAKk1C,OAAOv1C,QACZK,KAAKk1C,aAAUnpC,EACrB8rC,YAAa73C,KAAK+4C,aAClB4B,QAAS36C,KAAK06C,SACd/8C,OAAQqC,KAAK66C,QAAQl7C,QACrBo7C,aAAc/6C,KAAK86C,cACnB3kB,QAASn2B,KAAKk3B,aACd8R,eAAgBhpC,KAAKypC,oBACrBt2B,SAAUnT,KAAKo/B,cACfhb,MAAOA,EACPhR,KAAqB,OAAfpT,KAAKgyC,MAAiBhyC,KAAKgyC,MAAMryC,aAAUoM,EACjD6rC,IAAK53C,KAAK85C,SACVzQ,aAAcrpC,KAAK0pC,kBAAkB/pC,QACrC4pC,cAAevpC,KAAK2pC,mBACpBz1B,MAAOlU,KAAK01C,OACZ5rC,OAAQ9J,KAAKg7C,SAEjB,CAUAC,8BAA8B/mC,EAAOpK,GACnC,MAAM2oC,EAAQzyC,KAAK8pC,SAAS,QACd/9B,IAAVmI,QAAkCnI,IAAXjC,EACzBiF,MAAMy7B,SAAS,CAACt2B,EAAQu+B,EAAMv+B,MAAOpK,EAAS2oC,EAAM3oC,cACjCiC,IAAVmI,EACTnF,MAAMy7B,SAAS,CAACt2B,EAAQu+B,EAAMv+B,MAAOA,EAAQu+B,EAAMv+B,aAC/BnI,IAAXjC,EACTiF,MAAMy7B,SAAS,CAAC1gC,EAAS2oC,EAAM3oC,OAAQA,EAAS2oC,EAAM3oC,SAEtDiF,MAAMy7B,SAAS,CAAC,EAAG,GAEvB,CAQAX,YACE,IAAIvnB,EAAStiB,KAAKm6C,kBAClB,IAAK73B,EAAQ,CACXA,EAAStiB,KAAKk6C,QACd,MAAM9mC,EAAOpT,KAAKqqC,UAClB,GACwB,YAAtBrqC,KAAKs6C,eACiB,YAAtBt6C,KAAKw6C,cACL,CACA,IAAKpnC,EACH,OAAO,KAETkP,EAAStiB,KAAKk6C,QAAQv6C,QACI,YAAtBK,KAAKs6C,gBACPh4B,EAAO,IAAMlP,EAAK,IAEM,YAAtBpT,KAAKw6C,gBACPl4B,EAAO,IAAMlP,EAAK,GAEtB,CAEA,GAA0B,YAAtBpT,KAAKo6C,cAA6B,CACpC,IAAKhnC,EACH,OAAO,KAELkP,IAAWtiB,KAAKk6C,UAClB53B,EAAStiB,KAAKk6C,QAAQv6C,SAGA,aAAtBK,KAAKo6C,eACiB,gBAAtBp6C,KAAKo6C,gBAEL93B,EAAO,IAAMA,EAAO,GAAKlP,EAAK,IAGR,eAAtBpT,KAAKo6C,eACiB,gBAAtBp6C,KAAKo6C,gBAEL93B,EAAO,IAAMA,EAAO,GAAKlP,EAAK,GAElC,CACApT,KAAKm6C,kBAAoB73B,CAC3B,CACA,MAAM+mB,EAAerpC,KAAK0pC,kBACpBtlB,EAAQpkB,KAAK4pC,gBAGnB,MAAO,CACLtnB,EAAO,GAAK+mB,EAAa,GAAKjlB,EAAM,GACpC9B,EAAO,GAAK+mB,EAAa,GAAKjlB,EAAM,GAExC,CASA82B,UAAU54B,GACRtiB,KAAKk6C,QAAU53B,EACftiB,KAAKm6C,kBAAoB,IAC3B,CAOArG,WACE,OAAO9zC,KAAKk1C,MACd,CAQApL,SAASC,GACP,OAAO/pC,KAAK46C,WAAW9Q,SAASC,EAClC,CAQAE,cAAcF,GACZ,OAAO/pC,KAAK46C,WAAW3Q,cAAcF,EACvC,CAKAI,eACE,OAAOnqC,KAAK46C,WAAWvQ,SACzB,CAKAH,gBACE,OAAOlqC,KAAK46C,WAAW1Q,eACzB,CAKAF,uBACE,OAAOhqC,KAAK46C,WAAW5Q,sBACzB,CAOAI,YACE,GAAIpqC,KAAKuxC,QACP,OAAOvxC,KAAKuxC,QAEd,IAAI5zC,EAASqC,KAAK66C,QAElB,GAA0B,YAAtB76C,KAAK86C,cAA6B,CACpC,MAAM1nC,EAAOpT,KAAKqqC,UACZ8Q,EAAgBn7C,KAAK46C,WAAWvQ,UACtC,IAAKj3B,IAAS+nC,EACZ,OAAO,KAETx9C,EAASA,EAAOgC,QAEQ,aAAtBK,KAAK86C,eACiB,gBAAtB96C,KAAK86C,gBAELn9C,EAAO,GAAKw9C,EAAc,GAAK/nC,EAAK,GAAKzV,EAAO,IAG1B,eAAtBqC,KAAK86C,eACiB,gBAAtB96C,KAAK86C,gBAELn9C,EAAO,GAAKw9C,EAAc,GAAK/nC,EAAK,GAAKzV,EAAO,GAEpD,CAEA,OADAqC,KAAKuxC,QAAU5zC,EACRqC,KAAKuxC,OACd,CAOAuI,SACE,OAAO95C,KAAK46C,WAAWd,QACzB,CAOAzP,UACE,OAAQrqC,KAAKgyC,MAAoChyC,KAAKgyC,MAAjChyC,KAAK46C,WAAWvQ,SACvC,CAOA0J,WACE,OAAO/zC,KAAK01C,MACd,CAOA0F,YACE,OAAOp7C,KAAKg7C,OACd,CAOAhF,SAAS9hC,GACPlU,KAAK01C,OAASxhC,EACdlU,KAAKi7C,8BAA8B/mC,EAAOlU,KAAKg7C,QACjD,CAOAK,UAAUvxC,GACR9J,KAAKg7C,QAAUlxC,EACf9J,KAAKi7C,8BAA8Bj7C,KAAK01C,OAAQ5rC,EAClD,CASA0gC,SAASpmB,GACPrV,MAAMy7B,SAASpmB,GACf,MAAMquB,EAAQzyC,KAAK8pC,SAAS,GAC5B,GAAI2I,EAAO,CACT,MAAM6I,EAAa7rC,MAAM2L,QAAQgJ,GAASA,EAAM,GAAKA,OAClCrY,IAAfuvC,IACFt7C,KAAK01C,OAAS4F,EAAa7I,EAAMv+B,OAEnC,MAAMqnC,EAAc9rC,MAAM2L,QAAQgJ,GAASA,EAAM,GAAKA,OAClCrY,IAAhBwvC,IACFv7C,KAAKg7C,QAAUO,EAAc9I,EAAM3oC,OAEvC,CACF,CAKA2gC,kBAAkB1uB,GAChB/b,KAAK46C,WAAW9+B,iBAAiBiC,GAAkBhC,EACrD,CASAzR,OACEtK,KAAK46C,WAAWtwC,MAClB,CAKAogC,oBAAoB3uB,GAClB/b,KAAK46C,WAAW/9B,oBAAoBkB,GAAkBhC,EACxD,EAGF,UCnfA,MAAMy/B,GAIJpvC,YAAYC,GACVA,EAAUA,GAAW,CAAC,EAMtBrM,KAAKy7C,MAAQpvC,EAAQ6iC,KAMrBlvC,KAAKipC,UAAY58B,EAAQ8G,SAMzBnT,KAAK+oC,gBAAkB18B,EAAQ28B,eAM/BhpC,KAAKkpC,OAAS78B,EAAQ+X,MAMtBpkB,KAAKmpC,YAAcP,QAAyB78B,IAAlBM,EAAQ+X,MAAsB/X,EAAQ+X,MAAQ,GAMxEpkB,KAAKy2C,MAAQpqC,EAAQgiC,KAMrBruC,KAAK07C,WAAarvC,EAAQsvC,UAM1B37C,KAAK47C,SAAWvvC,EAAQwvC,QAMxB77C,KAAK87C,QAAUzvC,EAAQ0vC,OAMvB/7C,KAAKg8C,cAAgB3vC,EAAQ4vC,aAM7Bj8C,KAAKqxC,WACctlC,IAAjBM,EAAQilC,KACJjlC,EAAQilC,KACR,IAAI,GAAK,CAACxG,MAzHO,SA+HvB9qC,KAAKk8C,eACkBnwC,IAArBM,EAAQ8vC,SAAyB9vC,EAAQ8vC,SAAWz9C,KAAKyN,GAAK,EAMhEnM,KAAKo8C,gBACmBrwC,IAAtBM,EAAQgwC,UAA0BhwC,EAAQgwC,UAAY,QAMxDr8C,KAAKs8C,YAAcjwC,EAAQkwC,SAM3Bv8C,KAAK8xC,aAA6B/lC,IAAnBM,EAAQ0lC,OAAuB1lC,EAAQ0lC,OAAS,KAM/D/xC,KAAKw8C,cAA+BzwC,IAApBM,EAAQ0yB,QAAwB1yB,EAAQ0yB,QAAU,EAMlE/+B,KAAKy8C,cAA+B1wC,IAApBM,EAAQ2yB,QAAwB3yB,EAAQ2yB,QAAU,EAMlEh/B,KAAK08C,gBAAkBrwC,EAAQswC,eAC3BtwC,EAAQswC,eACR,KAMJ38C,KAAK48C,kBAAoBvwC,EAAQwwC,iBAC7BxwC,EAAQwwC,iBACR,KAMJ78C,KAAKy9B,cAA+B1xB,IAApBM,EAAQqxB,QAAwB,KAAOrxB,EAAQqxB,OACjE,CAOAxjB,QACE,MAAMkK,EAAQpkB,KAAKwpC,WACnB,OAAO,IAAIgS,GAAK,CACdtM,KAAMlvC,KAAK88C,UACXT,UAAWr8C,KAAK+8C,eAChBhB,OAAQ/7C,KAAKg9C,YACbb,SAAUn8C,KAAKi9C,cACfV,SAAUv8C,KAAKk9C,cACf/pC,SAAUnT,KAAKo/B,cACf4J,eAAgBhpC,KAAKypC,oBACrBrlB,MAAO3U,MAAM2L,QAAQgJ,GAASA,EAAMzkB,QAAUykB,EAC9CiqB,KAAMruC,KAAK22C,UACXgF,UAAW37C,KAAKm9C,eAChBtB,QAAS77C,KAAKo9C,aACdnB,aAAcj8C,KAAKq9C,kBACnB/L,KAAMtxC,KAAKkyC,UAAYlyC,KAAKkyC,UAAUh4B,aAAUnO,EAChDgmC,OAAQ/xC,KAAKsyC,YAActyC,KAAKsyC,YAAYp4B,aAAUnO,EACtDgzB,QAAS/+B,KAAKs9C,aACdte,QAASh/B,KAAKu9C,aACdZ,eAAgB38C,KAAKw9C,oBACjBx9C,KAAKw9C,oBAAoBtjC,aACzBnO,EACJ8wC,iBAAkB78C,KAAKy9C,sBACnBz9C,KAAKy9C,sBAAsBvjC,aAC3BnO,EACJ2xB,QAAS19B,KAAK09C,mBAAgB3xC,GAElC,CAOAmxC,cACE,OAAOl9C,KAAKs8C,SACd,CAOAQ,UACE,OAAO98C,KAAKy7C,KACd,CAOAwB,cACE,OAAOj9C,KAAKk8C,SACd,CAOAa,eACE,OAAO/8C,KAAKo8C,UACd,CAOAY,YACE,OAAOh9C,KAAK87C,OACd,CAOAwB,aACE,OAAOt9C,KAAKw8C,QACd,CAOAe,aACE,OAAOv9C,KAAKy8C,QACd,CAOAvK,UACE,OAAOlyC,KAAKqxC,KACd,CAOA5H,oBACE,OAAOzpC,KAAK+oC,eACd,CAOA3J,cACE,OAAOp/B,KAAKipC,SACd,CAOAO,WACE,OAAOxpC,KAAKkpC,MACd,CAMAU,gBACE,OAAO5pC,KAAKmpC,WACd,CAOAmJ,YACE,OAAOtyC,KAAK8xC,OACd,CAOA6E,UACE,OAAO32C,KAAKy2C,KACd,CAOA0G,eACE,OAAOn9C,KAAK07C,UACd,CAOA0B,aACE,OAAOp9C,KAAK47C,QACd,CAOAyB,kBACE,OAAOr9C,KAAKg8C,aACd,CAOAwB,oBACE,OAAOx9C,KAAK08C,eACd,CAOAe,sBACE,OAAOz9C,KAAK48C,iBACd,CAOAc,aACE,OAAO19C,KAAKy9B,QACd,CAQAkgB,YAAYpB,GACVv8C,KAAKs8C,UAAYC,CACnB,CAQAqB,QAAQ1O,GACNlvC,KAAKy7C,MAAQvM,CACf,CAQA2O,YAAY1B,GACVn8C,KAAKk8C,UAAYC,CACnB,CAQA2B,WAAW/e,GACT/+B,KAAKw8C,SAAWzd,CAClB,CAQAgf,WAAW/e,GACTh/B,KAAKy8C,SAAWzd,CAClB,CAQAgf,aAAa3B,GACXr8C,KAAKo8C,WAAaC,CACpB,CAOA4B,UAAUlC,GACR/7C,KAAK87C,QAAUC,CACjB,CAQAxR,kBAAkBvB,GAChBhpC,KAAK+oC,gBAAkBC,CACzB,CAQAuJ,QAAQjB,GACNtxC,KAAKqxC,MAAQC,CACf,CAQAhT,YAAYnrB,GACVnT,KAAKipC,UAAY91B,CACnB,CAQAq3B,SAASpmB,GACPpkB,KAAKkpC,OAAS9kB,EACdpkB,KAAKmpC,YAAcP,QAAiB78B,IAAVqY,EAAsBA,EAAQ,EAC1D,CAQAwuB,UAAUb,GACR/xC,KAAK8xC,QAAUC,CACjB,CAQAkF,QAAQ5I,GACNruC,KAAKy2C,MAAQpI,CACf,CAQA6P,aAAavC,GACX37C,KAAK07C,WAAaC,CACpB,CAQAwC,WAAWtC,GACT77C,KAAK47C,SAAWC,CAClB,CAQAuC,gBAAgBnC,GACdj8C,KAAKg8C,cAAgBC,CACvB,CAQAoC,kBAAkB/M,GAChBtxC,KAAK08C,gBAAkBpL,CACzB,CAQAgN,oBAAoBvM,GAClB/xC,KAAK48C,kBAAoB7K,CAC3B,CAQAwM,WAAW7gB,GACT19B,KAAKy9B,SAAWC,CAClB,EAGF,UCraO,SAAS8gB,GAAQC,GAQtB,OAPc,IAAI,GAAM,CACtBnN,KAAMY,GAAQuM,EAAW,IACzB1M,OAAQO,GAAUmM,EAAW,IAC7BpQ,KAAMsI,GAAQ8H,GACdhM,MAAO3I,GAAS2U,IAIpB,CAOA,SAASvM,GAAQuM,EAAWC,GAC1B,MAAM5T,EAAQ2T,EAAUC,EAAS,cACjC,GAAK5T,EAIL,OAAO,IAAI,GAAK,CAACA,MAAOA,GAC1B,CAOA,SAASwH,GAAUmM,EAAWC,GAC5B,MAAMxqC,EAAQuqC,EAAUC,EAAS,gBAC3B5T,EAAQ2T,EAAUC,EAAS,gBACjC,GAAKxqC,GAAU42B,EAIf,OAAO,IAAI,GAAO,CAChB52B,MAAOA,EACP42B,MAAOA,EACPuK,QAASoJ,EAAUC,EAAS,mBAC5B5L,SAAU2L,EAAUC,EAAS,oBAC7B9K,SAAU6K,EAAUC,EAAS,oBAC7B7K,eAAgB4K,EAAUC,EAAS,2BACnC1L,WAAYyL,EAAUC,EAAS,uBAEnC,CAMA,SAAS/H,GAAQ8H,GACf,MAAM5/C,EAAQ4/C,EAAU,cACxB,IAAK5/C,EACH,OAyBF,OAtBa,IAAI,GAAK,CACpBwvC,KAAMxvC,EACNqwC,KAAMuP,EAAU,aAChBtC,SAAUsC,EAAU,kBACpB1f,QAAS0f,EAAU,iBACnBzf,QAASyf,EAAU,iBACnBlC,SAAUkC,EAAU,iBACpBpC,UAAWoC,EAAU,kBACrB1C,OAAQ0C,EAAU,eAClBr6B,MAAOq6B,EAAU,cACjBzV,eAAgByV,EAAU,yBAC1BtrC,SAAUsrC,EAAU,iBACpB9C,UAAW8C,EAAU,cACrB5C,QAAS4C,EAAU,gBACnBxC,aAAcwC,EAAU,iBACxB/gB,QAAS+gB,EAAU,gBACnBnN,KAAMY,GAAQuM,EAAW,SACzB9B,eAAgBzK,GAAQuM,EAAW,oBACnC1M,OAAQO,GAAUmM,EAAW,SAC7B5B,iBAAkBvK,GAAUmM,EAAW,qBAI3C,CAMA,SAAS3U,GAAS2U,GAChB,MAAME,EAAUF,EAAU,YACpBG,EAAUH,EAAU,YAC1B,GAAIE,GAAWC,EAAS,CAoBtB,OAnBa,IAAI,GAAK,CACpBhH,IAAK+G,EACLvG,IAAKwG,EACLjE,QAAS8D,EAAU,iBACnBn8B,OAAQm8B,EAAU,eAClBpE,aAAcoE,EAAU,sBACxBlE,aAAckE,EAAU,uBACxBhE,aAAcgE,EAAU,uBACxB3T,MAAO2T,EAAU,cACjB5G,YAAa4G,EAAU,qBACvB9gD,OAAQ8gD,EAAU,eAClBpV,aAAcoV,EAAU,qBACxBtoB,QAASsoB,EAAU,gBACnBr6B,MAAOq6B,EAAU,cACjBtrC,SAAUsrC,EAAU,iBACpBzV,eAAgByV,EAAU,yBAC1BrrC,KAAMqrC,EAAU,aAChBlV,cAAekV,EAAU,wBAG7B,CAEA,MAAMI,EAAcJ,EAAU,gBAC9B,GAAII,EAAa,CACf,MAAMH,EAAS,SAgBf,OAfc,IAAI,GAAa,CAC7BzyB,OAAQ4yB,EACRvN,KAAMY,GAAQuM,EAAWC,GACzB3M,OAAQO,GAAUmM,EAAWC,GAC7B/oC,OAAQ8oC,EAAU,gBAClB/M,QAAS+M,EAAU,iBACnB7M,QAAS6M,EAAU,iBACnBj9B,MAAOi9B,EAAU,eACjBpV,aAAcoV,EAAU,sBACxBtrC,SAAUsrC,EAAU,kBACpBzV,eAAgByV,EAAU,0BAC1Br6B,MAAOq6B,EAAU,eACjBlV,cAAekV,EAAU,yBAI7B,CAEA,MAAMK,EAAeL,EAAU,iBAC/B,GAAIK,EAAc,CAChB,MAAMJ,EAAS,UAYf,OAXe,IAAItH,GAAO,CACxBzhC,OAAQmpC,EACRxN,KAAMY,GAAQuM,EAAWC,GACzB3M,OAAQO,GAAUmM,EAAWC,GAC7BrV,aAAcoV,EAAU,uBACxBr6B,MAAOq6B,EAAU,gBACjBtrC,SAAUsrC,EAAU,mBACpBzV,eAAgByV,EAAU,2BAC1BlV,cAAekV,EAAU,0BAI7B,CAGF,CCjRA,MAAM,GACU,cAwOhB,OAzNA,cAA8B,GAI5BryC,YAAYC,GACVA,EAAUA,GAAoB,CAAC,EAE/B,MAAM85B,EAAc/sB,OAAOC,OAAO,CAAC,EAAGhN,UAE/B85B,EAAYhkB,aACZgkB,EAAY4Y,oBACZ5Y,EAAY6Y,4BACZ7Y,EAAY8Y,uBACnBlwC,MAAMo3B,GAMNnmC,KAAKk/C,gBACmBnzC,IAAtBM,EAAQ8yC,WAA0B9yC,EAAQ8yC,UAM5Cn/C,KAAKo/C,mBACsBrzC,IAAzBM,EAAQ0yC,aAA6B1yC,EAAQ0yC,aAAe,IAO9D/+C,KAAKq/C,OAAS,KAOdr/C,KAAKs/C,oBAAiBvzC,EAEtB/L,KAAKu/C,SAASlzC,EAAQ8V,OAMtBniB,KAAKw/C,2BAC8BzzC,IAAjCM,EAAQ2yC,sBACJ3yC,EAAQ2yC,qBAOdh/C,KAAKy/C,6BACgC1zC,IAAnCM,EAAQ4yC,wBACJ5yC,EAAQ4yC,sBAEhB,CAKAS,eACE,OAAO1/C,KAAKk/C,UACd,CAgBAhY,YAAYC,GACV,OAAOp4B,MAAMm4B,YAAYC,EAC3B,CAKAwY,kBACE,OAAO3/C,KAAKo/C,aACd,CAMAQ,iBACE,OACE5/C,KAAK2e,IAAI,GAEb,CAQAkhC,WACE,OAAO7/C,KAAKq/C,MACd,CAOA3uB,mBACE,OAAO1wB,KAAKs/C,cACd,CAMAQ,0BACE,OAAO9/C,KAAKw/C,qBACd,CAMAO,4BACE,OAAO//C,KAAKy/C,uBACd,CAMAO,gBAAgBvY,GACTA,EAAWwY,gBACdxY,EAAWwY,cAAgB,IAAI,GAAM,IAErBjgD,KAAKmoC,cAAe6X,gBAAgBvY,EACxD,CAMAyY,eAAeC,GACbngD,KAAKgH,IAAI,GAAuBm5C,EAClC,CAiBAZ,SAASp9B,GAIP,IAAIi+B,EAEJ,QAAcr0C,IAAVoW,EACFi+B,EAAYjJ,QACP,GAAc,OAAVh1B,EACTi+B,EAAY,UACP,GAAqB,mBAAVj+B,EAChBi+B,EAAYj+B,OACP,GAAIA,aAAiB,GAC1Bi+B,EAAYj+B,OACP,GAAI1S,MAAM2L,QAAQ+G,GAAQ,CAC/B,MAAMhgB,EAAMggB,EAAMriB,OAKZugD,EAAS,IAAI5wC,MAAMtN,GAEzB,IAAK,IAAI9D,EAAI,EAAGA,EAAI8D,IAAO9D,EAAG,CAC5B,MAAME,EAAI4jB,EAAM9jB,GAEdgiD,EAAOhiD,GADLE,aAAa,GACHA,EAEAigD,GAAQjgD,EAExB,CACA6hD,EAAYC,CACd,MACED,EAAY5B,GAAQr8B,GAGtBniB,KAAKq/C,OAASe,EACdpgD,KAAKs/C,eACO,OAAVn9B,OAAiBpW,EPqIhB,SAAoB1L,GACzB,IAAI4vB,EAEJ,GAAmB,mBAAR5vB,EACT4vB,EAAgB5vB,MACX,CAIL,IAAIggD,EACA5wC,MAAM2L,QAAQ/a,GAChBggD,EAAShgD,GAEToQ,EAAqD,mBAArB,EAAe,UAAkB,IAEjE4vC,EAAS,CAD0B,IAGrCpwB,EAAgB,WACd,OAAOowB,CACT,CACF,CACA,OAAOpwB,CACT,CO3JmC,CAAgBjwB,KAAKq/C,QACpDr/C,KAAK8d,SACP,GCrSF,MAAMwiC,GAAc,CAClBC,eAAgB,EAChBC,WAAY,EACZC,OAAQ,EACRC,WAAY,EACZC,OAAQ,EACRC,WAAY,EACZC,WAAY,EACZC,aAAc,EACdC,KAAM,EACNC,gBAAiB,EACjBC,eAAgB,GAChBC,iBAAkB,GAClBC,OAAQ,IAMGC,GAAkB,CAACd,GAAYS,MAK/BM,GAAoB,CAACf,GAAYa,QAKjCG,GAAuB,CAAChB,GAAYE,YAKpCe,GAAuB,CAACjB,GAAYI,YAEjD,UCuEA,OAxGA,MASEc,WAAWznC,EAAUJ,EAAS28B,EAAUE,GAAuB,CAO/DiL,aAAa1nC,GAAW,CAOxBwlC,SAASp9B,GAAQ,CAMjBu/B,WAAWC,EAAgBhoC,GAAU,CAMrCioC,YAAYjoC,EAASwI,GAAQ,CAM7B0/B,uBAAuBC,EAA4BnoC,GAAU,CAM7DooC,eAAeC,EAAoBroC,GAAU,CAM7CsoC,oBAAoBC,EAAyBvoC,GAAU,CAMvDwoC,eAAeC,EAAoBzoC,GAAU,CAM7C0oC,iBAAiBC,EAAsB3oC,GAAU,CAMjD4oC,UAAUC,EAAe7oC,GAAU,CAMnC8oC,YAAYC,EAAiB/oC,GAAU,CAMvCgpC,SAAS5oC,EAAUJ,GAAU,CAM7BipC,mBAAmBtO,EAAWX,GAAc,CAM5CkP,cAAcC,EAAYC,GAAyB,CAMnDC,aAAaC,EAAWF,GAAyB,GC2hBnD,OA5mBA,cAA4B,GAO1B32C,YAAYkY,EAAW+U,EAAWpqB,EAAY86B,GAC5Ch7B,QAMA/O,KAAKskB,UAAYA,EAOjBtkB,KAAKq5B,UAAYA,EAMjBr5B,KAAK+pC,WAAaA,EAMlB/pC,KAAKkjD,aAAe,EAOpBljD,KAAKiP,WAAaA,EAMlBjP,KAAKmjD,2BAA6B,KAMlCnjD,KAAKojD,2BAA6B,KAMlCpjD,KAAKqjD,mBAAqB,KAM1BrjD,KAAKsjD,aAAe,GAMpBtjD,KAAK6Q,YAAc,GAMnB7Q,KAAKujD,eAAiB,GAMtBvjD,KAAKwjD,yBAA2B,GAMhCxjD,KAAKy1B,MAA8D,CAAG,CACxE,CAOAguB,gBAAgBC,GACd,MAAM3Z,EAAa/pC,KAAK+pC,WACxB,OAAqB,GAAdA,EACH2Z,EACAA,EAAU/c,KAAI,SAAUgd,GACtB,OAAOA,EAAO5Z,CAChB,GACN,CAQA6Z,2BAA2B1xC,EAAiBC,GAC1C,MAAMzF,EAAS1M,KAAK6jD,uBACdC,EAAW9jD,KAAKujD,eAChB1yC,EAAc7Q,KAAK6Q,YACzB,IAAIkzC,EAAQlzC,EAAY/Q,OACxB,IAAK,IAAIzB,EAAI,EAAG0S,EAAKmB,EAAgBpS,OAAQzB,EAAI0S,EAAI1S,GAAK8T,EACxD2xC,EAAS,GAAK5xC,EAAgB7T,GAC9BylD,EAAS,GAAK5xC,EAAgB7T,EAAI,GAC9BgT,EAAmB3E,EAAQo3C,KAC7BjzC,EAAYkzC,KAAWD,EAAS,GAChCjzC,EAAYkzC,KAAWD,EAAS,IAGpC,OAAOC,CACT,CAYAC,0BACE9xC,EACAvU,EACAuG,EACAiO,EACA8xC,EACAC,GAEA,MAAMrzC,EAAc7Q,KAAK6Q,YACzB,IAAIkzC,EAAQlzC,EAAY/Q,OACxB,MAAM4M,EAAS1M,KAAK6jD,uBAChBK,IACFvmD,GAAUwU,GAEZ,IAAIgyC,EAAajyC,EAAgBvU,GAC7BymD,EAAalyC,EAAgBvU,EAAS,GAC1C,MAAM0mD,EAAYrkD,KAAKujD,eACvB,IAEIllD,EAAGimD,EAASC,EAFZC,GAAU,EAGd,IAAKnmD,EAAIV,EAASwU,EAAQ9T,EAAI6F,EAAK7F,GAAK8T,EACtCkyC,EAAU,GAAKnyC,EAAgB7T,GAC/BgmD,EAAU,GAAKnyC,EAAgB7T,EAAI,GACnCkmD,EAAU5yC,EAAuBjF,EAAQ23C,GACrCE,IAAYD,GACVE,IACF3zC,EAAYkzC,KAAWI,EACvBtzC,EAAYkzC,KAAWK,EACvBI,GAAU,GAEZ3zC,EAAYkzC,KAAWM,EAAU,GACjCxzC,EAAYkzC,KAAWM,EAAU,IACxBE,IAAY1yC,GACrBhB,EAAYkzC,KAAWM,EAAU,GACjCxzC,EAAYkzC,KAAWM,EAAU,GACjCG,GAAU,GAEVA,GAAU,EAEZL,EAAaE,EAAU,GACvBD,EAAaC,EAAU,GACvBC,EAAUC,EAQZ,OAJKN,GAAUO,GAAYnmD,IAAMV,EAASwU,KACxCtB,EAAYkzC,KAAWI,EACvBtzC,EAAYkzC,KAAWK,GAElBL,CACT,CAUAU,uBAAuBvyC,EAAiBvU,EAAQwoB,EAAMhU,EAAQuyC,GAC5D,IAAK,IAAIrmD,EAAI,EAAG0S,EAAKoV,EAAKrmB,OAAQzB,EAAI0S,IAAM1S,EAAG,CAC7C,MAAM6F,EAAMiiB,EAAK9nB,GACXsmD,EAAa3kD,KAAKgkD,0BACtB9xC,EACAvU,EACAuG,EACAiO,GACA,GACA,GAEFuyC,EAAYxkD,KAAKykD,GACjBhnD,EAASuG,CACX,CACA,OAAOvG,CACT,CAQA6jD,WAAWznC,EAAUJ,EAAS28B,EAAUE,GACtCx2C,KAAK4kD,cAAc7qC,EAAUJ,GAE7B,MAAM1Y,EAAO8Y,EAAST,UAChBnH,EAAS4H,EAASwL,YAClBs/B,EAAe7kD,KAAK6Q,YAAY/Q,OAEtC,IAAIoS,EAAiByyC,EAAYD,EAAaI,EAC1CnnD,EAEJ,OAAQsD,GACN,IAAK,eACHiR,EAC8D,EAE1D2b,6BACJi3B,EAAe,GACf,MAAM98B,EACwD,EAE1DkH,WACJvxB,EAAS,EACT,IAAK,IAAIU,EAAI,EAAG0S,EAAKiX,EAAMloB,OAAQzB,EAAI0S,IAAM1S,EAAG,CAC9C,MAAM0mD,EAAS,GACfpnD,EAASqC,KAAKykD,uBACZvyC,EACAvU,EACAqqB,EAAM3pB,GACN8T,EACA4yC,GAEFD,EAAa5kD,KAAK6kD,EACpB,CACA/kD,KAAKsjD,aAAapjD,KAAK,CACrB,UACA2kD,EACAC,EACA/qC,EACAu8B,EACAvuB,KAEF/nB,KAAKwjD,yBAAyBtjD,KAAK,CACjC,UACA2kD,EACAC,EACA/qC,EACAy8B,GAAwBF,EACxBvuB,KAEF,MACF,IAAK,UACL,IAAK,kBACH28B,EAAc,GACdxyC,EACU,WAARjR,EAC2D,EAErD4sB,6BACF9T,EAASmL,qBACfvnB,EAASqC,KAAKykD,uBACZvyC,EACA,EACuG,EAErGoZ,UACFnZ,EACAuyC,GAEF1kD,KAAKsjD,aAAapjD,KAAK,CACrB,UACA2kD,EACAH,EACA3qC,EACAu8B,EACAxuB,KAEF9nB,KAAKwjD,yBAAyBtjD,KAAK,CACjC,UACA2kD,EACAH,EACA3qC,EACAy8B,GAAwBF,EACxBxuB,KAEF,MACF,IAAK,aACL,IAAK,SACH5V,EAAkB6H,EAASmL,qBAC3By/B,EAAa3kD,KAAKgkD,0BAChB9xC,EACA,EACAA,EAAgBpS,OAChBqS,GACA,GACA,GAEFnS,KAAKsjD,aAAapjD,KAAK,CACrB,UACA2kD,EACAF,EACA5qC,EACAu8B,EACAzuB,KAEF7nB,KAAKwjD,yBAAyBtjD,KAAK,CACjC,UACA2kD,EACAF,EACA5qC,EACAy8B,GAAwBF,EACxBzuB,KAEF,MACF,IAAK,aACH3V,EAAkB6H,EAASmL,qBAC3By/B,EAAa3kD,KAAK4jD,2BAA2B1xC,EAAiBC,GAE1DwyC,EAAaE,IACf7kD,KAAKsjD,aAAapjD,KAAK,CACrB,UACA2kD,EACAF,EACA5qC,EACAu8B,EACAzuB,KAEF7nB,KAAKwjD,yBAAyBtjD,KAAK,CACjC,UACA2kD,EACAF,EACA5qC,EACAy8B,GAAwBF,EACxBzuB,MAGJ,MACF,IAAK,QACH3V,EAAkB6H,EAASmL,qBAC3BllB,KAAK6Q,YAAY3Q,KAAKgS,EAAgB,GAAIA,EAAgB,IAC1DyyC,EAAa3kD,KAAK6Q,YAAY/Q,OAE9BE,KAAKsjD,aAAapjD,KAAK,CACrB,UACA2kD,EACAF,EACA5qC,EACAu8B,IAEFt2C,KAAKwjD,yBAAyBtjD,KAAK,CACjC,UACA2kD,EACAF,EACA5qC,EACAy8B,GAAwBF,IAK9Bt2C,KAAKglD,YAAYrrC,EACnB,CAOAirC,cAAc7qC,EAAUJ,GACtB3Z,KAAKmjD,2BAA6B,CAChC,kBACAxpC,EACA,EACAI,GAEF/Z,KAAKsjD,aAAapjD,KAAKF,KAAKmjD,4BAC5BnjD,KAAKojD,2BAA6B,CAChC,kBACAzpC,EACA,EACAI,GAEF/Z,KAAKwjD,yBAAyBtjD,KAAKF,KAAKojD,2BAC1C,CAKAn8C,SACE,MAAO,CACLq8C,aAActjD,KAAKsjD,aACnBE,yBAA0BxjD,KAAKwjD,yBAC/B3yC,YAAa7Q,KAAK6Q,YAEtB,CAKAo0C,kCACE,MAAMzB,EAA2BxjD,KAAKwjD,yBAItC,IAAInlD,EAFJmlD,EAAyB0B,UAGzB,MAAMt8C,EAAI46C,EAAyB1jD,OACnC,IAAIqlD,EACAlkD,EACAga,GAAS,EACb,IAAK5c,EAAI,EAAGA,EAAIuK,IAAKvK,EACnB8mD,EAAc3B,EAAyBnlD,GACvC4C,EAA0DkkD,EAAY,GAClElkD,GAAQ,gBACVga,EAAQ5c,EACC4C,GAAQ,oBACjBkkD,EAAY,GAAK9mD,EACjB2c,GAAgBhb,KAAKwjD,yBAA0BvoC,EAAO5c,GACtD4c,GAAS,EAGf,CAMA2nC,mBAAmBtO,EAAWX,GAC5B,MAAMle,EAAQz1B,KAAKy1B,MACnB,GAAI6e,EAAW,CACb,MAAM8Q,EAAiB9Q,EAAUR,WACjCre,EAAM6e,UAAYnI,GAChBiZ,GAAkC3X,GAEtC,MACEhY,EAAM6e,eAAYvoC,EAEpB,GAAI4nC,EAAa,CACf,MAAM0R,EAAmB1R,EAAYG,WACrCre,EAAMke,YAAcxH,GAClBkZ,GAAsCxX,IAExC,MAAMyX,EAAqB3R,EAAYgC,aACvClgB,EAAM4f,aACmBtpC,IAAvBu5C,EAAmCA,EAAqB5X,GAC1D,MAAM6X,EAAsB5R,EAAYK,cACxCve,EAAMme,SAAW2R,EACbA,EAAoB5lD,QACpBguC,GACJ,MAAM6X,EAA4B7R,EAAYM,oBAC9Cxe,EAAMoe,eAAiB2R,Gf9XQ,EeiY/B,MAAMC,EAAsB9R,EAAYO,cACxCze,EAAMqd,cACoB/mC,IAAxB05C,EACIA,EACA7X,GACN,MAAM8X,EAAmB/R,EAAYI,WACrCte,EAAM8e,eACiBxoC,IAArB25C,EAAiCA,Ef9VT,Ee+V1B,MAAMC,EAAwBhS,EAAYQ,gBAC1C1e,EAAMud,gBACsBjnC,IAA1B45C,EACIA,EfhYqB,GemYvBlwB,EAAM8e,UAAYv0C,KAAKkjD,eACzBljD,KAAKkjD,aAAeztB,EAAM8e,UAE1Bv0C,KAAKqjD,mBAAqB,KAE9B,MACE5tB,EAAMke,iBAAc5nC,EACpB0pB,EAAM4f,aAAUtpC,EAChB0pB,EAAMme,SAAW,KACjBne,EAAMoe,oBAAiB9nC,EACvB0pB,EAAMqd,cAAW/mC,EACjB0pB,EAAM8e,eAAYxoC,EAClB0pB,EAAMud,gBAAajnC,CAEvB,CAMA65C,WAAWnwB,GACT,MAAM6e,EAAY7e,EAAM6e,UAElB8M,EAAkB,CAAC,kBAAkC9M,GAK3D,MAJyB,iBAAdA,GAET8M,EAAgBlhD,MAAK,GAEhBkhD,CACT,CAKAyE,YAAYpwB,GACVz1B,KAAKsjD,aAAapjD,KAAKF,KAAK8lD,aAAarwB,GAC3C,CAMAqwB,aAAarwB,GACX,MAAO,CACL,oBACAA,EAAMke,YACNle,EAAM8e,UAAYv0C,KAAK+pC,WACvBtU,EAAM4f,QACN5f,EAAMqd,SACNrd,EAAMud,WACNhzC,KAAKyjD,gBAAgBhuB,EAAMme,UAC3Bne,EAAMoe,eAAiB7zC,KAAK+pC,WAEhC,CAMAgc,gBAAgBtwB,EAAOmwB,GACrB,MAAMtR,EAAY7e,EAAM6e,UACC,iBAAdA,GAA0B7e,EAAMuwB,kBAAoB1R,SAC3CvoC,IAAduoC,GACFt0C,KAAKsjD,aAAapjD,KAAK0lD,EAAWzlD,KAAKH,KAAMy1B,IAE/CA,EAAMuwB,iBAAmB1R,EAE7B,CAMA2R,kBAAkBxwB,EAAOowB,GACvB,MAAMlS,EAAcle,EAAMke,YACpB0B,EAAU5f,EAAM4f,QAChBzB,EAAWne,EAAMme,SACjBC,EAAiBpe,EAAMoe,eACvBf,EAAWrd,EAAMqd,SACjByB,EAAY9e,EAAM8e,UAClBvB,EAAavd,EAAMud,YAEvBvd,EAAMywB,oBAAsBvS,GAC5Ble,EAAM0wB,gBAAkB9Q,GACvBzB,GAAYne,EAAM2wB,kBAChB,GAAO3wB,EAAM2wB,gBAAiBxS,IACjCne,EAAM4wB,uBAAyBxS,GAC/Bpe,EAAM6wB,iBAAmBxT,GACzBrd,EAAM8wB,kBAAoBhS,GAC1B9e,EAAM+wB,mBAAqBxT,UAEPjnC,IAAhB4nC,GACFkS,EAAY1lD,KAAKH,KAAMy1B,GAEzBA,EAAMywB,mBAAqBvS,EAC3Ble,EAAM0wB,eAAiB9Q,EACvB5f,EAAM2wB,gBAAkBxS,EACxBne,EAAM4wB,sBAAwBxS,EAC9Bpe,EAAM6wB,gBAAkBxT,EACxBrd,EAAM8wB,iBAAmBhS,EACzB9e,EAAM+wB,kBAAoBxT,EAE9B,CAKAgS,YAAYrrC,GACV3Z,KAAKmjD,2BAA2B,GAAKnjD,KAAKsjD,aAAaxjD,OACvDE,KAAKmjD,2BAA6B,KAClCnjD,KAAKojD,2BAA2B,GAAKpjD,KAAKwjD,yBAAyB1jD,OACnEE,KAAKojD,2BAA6B,KAClC,MAAMqD,EAAyB,CAAC,gBAAgC9sC,GAChE3Z,KAAKsjD,aAAapjD,KAAKumD,GACvBzmD,KAAKwjD,yBAAyBtjD,KAAKumD,EACrC,CASA5C,uBACE,IAAK7jD,KAAKqjD,qBACRrjD,KAAKqjD,oBnFljBW32C,EmFkjBgB1M,KAAKq5B,UnFjjBrCpoB,GACFA,EAAK,GAAKvE,EAAO,GACjBuE,EAAK,GAAKvE,EAAO,GACjBuE,EAAK,GAAKvE,EAAO,GACjBuE,EAAK,GAAKvE,EAAO,GACVuE,GAEFvE,EAAO/M,SmF2iBNK,KAAKkjD,aAAe,GAAG,CACzB,MAAMhvC,EAASlU,KAAKiP,YAAcjP,KAAKkjD,aAAe,GAAM,EAC5DxlD,EAAOsC,KAAKqjD,mBAAoBnvC,EAAOlU,KAAKqjD,mBAC9C,CnFtjBC,IAAe32C,EAAQuE,EmFwjB1B,OAAOjR,KAAKqjD,kBACd,GCzXF,OAxQA,cAAiC,GAO/Bj3C,YAAYkY,EAAW+U,EAAWpqB,EAAY86B,GAC5Ch7B,MAAMuV,EAAW+U,EAAWpqB,EAAY86B,GAMxC/pC,KAAK84C,mBAAqB,KAM1B94C,KAAKq2C,OAAS,KAMdr2C,KAAK0mD,sBAAmB36C,EAMxB/L,KAAK2mD,cAAW56C,EAMhB/L,KAAK4mD,cAAW76C,EAMhB/L,KAAKg7C,aAAUjvC,EAMf/L,KAAK8oC,cAAW/8B,EAMhB/L,KAAK6mD,cAAW96C,EAMhB/L,KAAK8mD,cAAW/6C,EAMhB/L,KAAK+oC,qBAAkBh9B,EAMvB/L,KAAKipC,eAAYl9B,EAMjB/L,KAAKkpC,YAASn9B,EAMd/L,KAAK01C,YAAS3pC,EAMd/L,KAAKspC,oBAAiBv9B,EAOtB/L,KAAK+mD,6BAA0Bh7C,CACjC,CAMAw2C,UAAUC,EAAe7oC,GACvB,IAAK3Z,KAAKq2C,OACR,OAEFr2C,KAAK4kD,cAAcpC,EAAe7oC,GAClC,MAAMzH,EAAkBswC,EAAct9B,qBAChC/S,EAASqwC,EAAcj9B,YACvByhC,EAAUhnD,KAAK6Q,YAAY/Q,OAC3BikD,EAAQ/jD,KAAK4jD,2BAA2B1xC,EAAiBC,GAC/DnS,KAAKsjD,aAAapjD,KAAK,CACrB,cACA8mD,EACAjD,EACA/jD,KAAKq2C,OAELr2C,KAAK2mD,SAAW3mD,KAAK0mD,iBACrB1mD,KAAK4mD,SAAW5mD,KAAK0mD,iBACrBhoD,KAAK4K,KAAKtJ,KAAKg7C,QAAUh7C,KAAK0mD,kBAC9B1mD,KAAK8oC,SACL9oC,KAAK6mD,SAAW7mD,KAAK0mD,iBACrB1mD,KAAK8mD,SAAW9mD,KAAK0mD,iBACrB1mD,KAAK+oC,gBACL/oC,KAAKipC,UACL,CACGjpC,KAAKkpC,OAAO,GAAKlpC,KAAK+pC,WAAc/pC,KAAK0mD,iBACzC1mD,KAAKkpC,OAAO,GAAKlpC,KAAK+pC,WAAc/pC,KAAK0mD,kBAE5ChoD,KAAK4K,KAAKtJ,KAAK01C,OAAS11C,KAAK0mD,kBAC7B1mD,KAAKspC,eACLtpC,KAAK+mD,0BAEP/mD,KAAKwjD,yBAAyBtjD,KAAK,CACjC,cACA8mD,EACAjD,EACA/jD,KAAK84C,mBAEL94C,KAAK2mD,SACL3mD,KAAK4mD,SACL5mD,KAAKg7C,QACLh7C,KAAK8oC,SACL9oC,KAAK6mD,SACL7mD,KAAK8mD,SACL9mD,KAAK+oC,gBACL/oC,KAAKipC,UACLjpC,KAAKkpC,OACLlpC,KAAK01C,OACL11C,KAAKspC,eACLtpC,KAAK+mD,0BAEP/mD,KAAKglD,YAAYrrC,EACnB,CAMAwoC,eAAeC,EAAoBzoC,GACjC,IAAK3Z,KAAKq2C,OACR,OAEFr2C,KAAK4kD,cAAcxC,EAAoBzoC,GACvC,MAAMzH,EAAkBkwC,EAAmBl9B,qBACrC/S,EAASiwC,EAAmB78B,YAC5ByhC,EAAUhnD,KAAK6Q,YAAY/Q,OAC3BikD,EAAQ/jD,KAAK4jD,2BAA2B1xC,EAAiBC,GAC/DnS,KAAKsjD,aAAapjD,KAAK,CACrB,cACA8mD,EACAjD,EACA/jD,KAAKq2C,OAELr2C,KAAK2mD,SAAW3mD,KAAK0mD,iBACrB1mD,KAAK4mD,SAAW5mD,KAAK0mD,iBACrBhoD,KAAK4K,KAAKtJ,KAAKg7C,QAAUh7C,KAAK0mD,kBAC9B1mD,KAAK8oC,SACL9oC,KAAK6mD,SAAW7mD,KAAK0mD,iBACrB1mD,KAAK8mD,SAAW9mD,KAAK0mD,iBACrB1mD,KAAK+oC,gBACL/oC,KAAKipC,UACL,CACGjpC,KAAKkpC,OAAO,GAAKlpC,KAAK+pC,WAAc/pC,KAAK0mD,iBACzC1mD,KAAKkpC,OAAO,GAAKlpC,KAAK+pC,WAAc/pC,KAAK0mD,kBAE5ChoD,KAAK4K,KAAKtJ,KAAK01C,OAAS11C,KAAK0mD,kBAC7B1mD,KAAKspC,eACLtpC,KAAK+mD,0BAEP/mD,KAAKwjD,yBAAyBtjD,KAAK,CACjC,cACA8mD,EACAjD,EACA/jD,KAAK84C,mBAEL94C,KAAK2mD,SACL3mD,KAAK4mD,SACL5mD,KAAKg7C,QACLh7C,KAAK8oC,SACL9oC,KAAK6mD,SACL7mD,KAAK8mD,SACL9mD,KAAK+oC,gBACL/oC,KAAKipC,UACLjpC,KAAKkpC,OACLlpC,KAAK01C,OACL11C,KAAKspC,eACLtpC,KAAK+mD,0BAEP/mD,KAAKglD,YAAYrrC,EACnB,CAKA1S,SAgBE,OAfAjH,KAAKilD,kCAELjlD,KAAK2mD,cAAW56C,EAChB/L,KAAK4mD,cAAW76C,EAChB/L,KAAK84C,mBAAqB,KAC1B94C,KAAKq2C,OAAS,KACdr2C,KAAK0mD,sBAAmB36C,EACxB/L,KAAKg7C,aAAUjvC,EACf/L,KAAKkpC,YAASn9B,EACd/L,KAAK8oC,cAAW/8B,EAChB/L,KAAK6mD,cAAW96C,EAChB/L,KAAK8mD,cAAW/6C,EAChB/L,KAAK+oC,qBAAkBh9B,EACvB/L,KAAKipC,eAAYl9B,EACjB/L,KAAK01C,YAAS3pC,EACPgD,MAAM9H,QACf,CAMA47C,cAAcC,EAAYmE,GACxB,MAAM3kC,EAASwgC,EAAWjZ,YACpBz2B,EAAO0vC,EAAWzY,UAClB6c,EAASpE,EAAW1Y,YAC1BpqC,KAAK0mD,iBAAmB5D,EAAW7Y,cAAcjqC,KAAK+pC,YACtD/pC,KAAK2mD,SAAWrkC,EAAO,GACvBtiB,KAAK4mD,SAAWtkC,EAAO,GACvBtiB,KAAK84C,mBAAqBgK,EAAW9Y,uBACrChqC,KAAKq2C,OAASyM,EAAWhZ,SAAS9pC,KAAK+pC,YACvC/pC,KAAKg7C,QAAU5nC,EAAK,GACpBpT,KAAK8oC,SAAWga,EAAW5rB,aAC3Bl3B,KAAK6mD,SAAWK,EAAO,GACvBlnD,KAAK8mD,SAAWI,EAAO,GACvBlnD,KAAK+oC,gBAAkB+Z,EAAWrZ,oBAClCzpC,KAAKipC,UAAY6Z,EAAW1jB,cAC5Bp/B,KAAKkpC,OAAS4Z,EAAWlZ,gBACzB5pC,KAAK01C,OAAStiC,EAAK,GACnBpT,KAAKspC,eAAiBwZ,EAAWnZ,mBACjC3pC,KAAK+mD,wBAA0BE,CACjC,GCzGF,OAxJA,cAAsC,GAOpC76C,YAAYkY,EAAW+U,EAAWpqB,EAAY86B,GAC5Ch7B,MAAMuV,EAAW+U,EAAWpqB,EAAY86B,EAC1C,CAUAod,qBAAqBj1C,EAAiBvU,EAAQuG,EAAKiO,GACjD,MAAM60C,EAAUhnD,KAAK6Q,YAAY/Q,OAC3BikD,EAAQ/jD,KAAKgkD,0BACjB9xC,EACAvU,EACAuG,EACAiO,GACA,GACA,GAEIi1C,EAA0B,CAC9B,mBACAJ,EACAjD,GAIF,OAFA/jD,KAAKsjD,aAAapjD,KAAKknD,GACvBpnD,KAAKwjD,yBAAyBtjD,KAAKknD,GAC5BljD,CACT,CAMA69C,eAAeC,EAAoBroC,GACjC,MAAM8b,EAAQz1B,KAAKy1B,MACbke,EAAcle,EAAMke,YACpBY,EAAY9e,EAAM8e,UACxB,QAAoBxoC,IAAhB4nC,QAA2C5nC,IAAdwoC,EAC/B,OAEFv0C,KAAKimD,kBAAkBxwB,EAAOz1B,KAAK6lD,aACnC7lD,KAAK4kD,cAAc5C,EAAoBroC,GACvC3Z,KAAKwjD,yBAAyBtjD,KAC5B,CACE,oBACAu1B,EAAMke,YACNle,EAAM8e,UACN9e,EAAM4f,QACN5f,EAAMqd,SACNrd,EAAMud,WACNrF,GjB6C6B,GiB1C/B2T,IAEF,MAAMpvC,EAAkB8vC,EAAmB98B,qBACrC/S,EAAS6vC,EAAmBz8B,YAClCvlB,KAAKmnD,qBACHj1C,EACA,EACAA,EAAgBpS,OAChBqS,GAEFnS,KAAKwjD,yBAAyBtjD,KAAKmhD,IACnCrhD,KAAKglD,YAAYrrC,EACnB,CAMAsoC,oBAAoBC,EAAyBvoC,GAC3C,MAAM8b,EAAQz1B,KAAKy1B,MACbke,EAAcle,EAAMke,YACpBY,EAAY9e,EAAM8e,UACxB,QAAoBxoC,IAAhB4nC,QAA2C5nC,IAAdwoC,EAC/B,OAEFv0C,KAAKimD,kBAAkBxwB,EAAOz1B,KAAK6lD,aACnC7lD,KAAK4kD,cAAc1C,EAAyBvoC,GAC5C3Z,KAAKwjD,yBAAyBtjD,KAC5B,CACE,oBACAu1B,EAAMke,YACNle,EAAM8e,UACN9e,EAAM4f,QACN5f,EAAMqd,SACNrd,EAAMud,WACNvd,EAAMme,SACNne,EAAMoe,gBAERyN,IAEF,MAAMn7B,EAAO+7B,EAAwB52B,UAC/BpZ,EAAkBgwC,EAAwBh9B,qBAC1C/S,EAAS+vC,EAAwB38B,YACvC,IAAI5nB,EAAS,EACb,IAAK,IAAIU,EAAI,EAAG0S,EAAKoV,EAAKrmB,OAAQzB,EAAI0S,IAAM1S,EAC1CV,EAASqC,KAAKmnD,qBACZj1C,EACAvU,EACuBwoB,EAAK9nB,GAC5B8T,GAGJnS,KAAKwjD,yBAAyBtjD,KAAKmhD,IACnCrhD,KAAKglD,YAAYrrC,EACnB,CAKA1S,SACE,MAAMwuB,EAAQz1B,KAAKy1B,MASnB,OAPsB1pB,MAApB0pB,EAAM4xB,YACN5xB,EAAM4xB,YAAcrnD,KAAK6Q,YAAY/Q,QAErCE,KAAKsjD,aAAapjD,KAAKmhD,IAEzBrhD,KAAKilD,kCACLjlD,KAAKy1B,MAAQ,KACN1mB,MAAM9H,QACf,CAKA4+C,YAAYpwB,GAEY1pB,MAApB0pB,EAAM4xB,YACN5xB,EAAM4xB,YAAcrnD,KAAK6Q,YAAY/Q,SAErCE,KAAKsjD,aAAapjD,KAAKmhD,IACvB5rB,EAAM4xB,WAAarnD,KAAK6Q,YAAY/Q,QAEtC21B,EAAM4xB,WAAa,EACnBt4C,MAAM82C,YAAYpwB,GAClBz1B,KAAKsjD,aAAapjD,KAAKohD,GACzB,GCiGF,OAnPA,cAAmC,GAOjCl1C,YAAYkY,EAAW+U,EAAWpqB,EAAY86B,GAC5Ch7B,MAAMuV,EAAW+U,EAAWpqB,EAAY86B,EAC1C,CAUAud,sBAAsBp1C,EAAiBvU,EAAQwoB,EAAMhU,GACnD,MAAMsjB,EAAQz1B,KAAKy1B,MACb6b,OAA2BvlC,IAApB0pB,EAAM6e,UACbvC,OAA+BhmC,IAAtB0pB,EAAMke,YACfxhB,EAAUhM,EAAKrmB,OACrBE,KAAKsjD,aAAapjD,KAAKohD,IACvBthD,KAAKwjD,yBAAyBtjD,KAAKohD,IACnC,IAAK,IAAIjjD,EAAI,EAAGA,EAAI8zB,IAAW9zB,EAAG,CAChC,MAAM6F,EAAMiiB,EAAK9nB,GACX2oD,EAAUhnD,KAAK6Q,YAAY/Q,OAC3BikD,EAAQ/jD,KAAKgkD,0BACjB9xC,EACAvU,EACAuG,EACAiO,GACA,GACC4/B,GAEGqV,EAA0B,CAC9B,mBACAJ,EACAjD,GAEF/jD,KAAKsjD,aAAapjD,KAAKknD,GACvBpnD,KAAKwjD,yBAAyBtjD,KAAKknD,GAC/BrV,IAGF/xC,KAAKsjD,aAAapjD,KAAKqhD,IACvBvhD,KAAKwjD,yBAAyBtjD,KAAKqhD,KAErC5jD,EAASuG,CACX,CASA,OARIotC,IACFtxC,KAAKsjD,aAAapjD,KAAKkhD,IACvBphD,KAAKwjD,yBAAyBtjD,KAAKkhD,KAEjCrP,IACF/xC,KAAKsjD,aAAapjD,KAAKmhD,IACvBrhD,KAAKwjD,yBAAyBtjD,KAAKmhD,KAE9B1jD,CACT,CAMA+jD,WAAWC,EAAgBhoC,GACzB,MAAM8b,EAAQz1B,KAAKy1B,MACb6e,EAAY7e,EAAM6e,UAClBX,EAAcle,EAAMke,YAC1B,QAAkB5nC,IAAduoC,QAA2CvoC,IAAhB4nC,EAC7B,OAEF3zC,KAAKunD,uBACLvnD,KAAK4kD,cAAcjD,EAAgBhoC,QACX5N,IAApB0pB,EAAM6e,WACRt0C,KAAKwjD,yBAAyBtjD,KAAK,CACjC,kBACAutC,UAGsB1hC,IAAtB0pB,EAAMke,aACR3zC,KAAKwjD,yBAAyBtjD,KAAK,CACjC,oBACAu1B,EAAMke,YACNle,EAAM8e,UACN9e,EAAM4f,QACN5f,EAAMqd,SACNrd,EAAMud,WACNvd,EAAMme,SACNne,EAAMoe,iBAGV,MAAM3hC,EAAkByvC,EAAez8B,qBACjC/S,EAASwvC,EAAep8B,YACxByhC,EAAUhnD,KAAK6Q,YAAY/Q,OACjCE,KAAKgkD,0BACH9xC,EACA,EACAA,EAAgBpS,OAChBqS,GACA,GACA,GAEF,MAAMq1C,EAAoB,CAAC,UAA0BR,GACrDhnD,KAAKsjD,aAAapjD,KAAKohD,GAAsBkG,GAC7CxnD,KAAKwjD,yBAAyBtjD,KAAKohD,GAAsBkG,QACjCz7C,IAApB0pB,EAAM6e,YACRt0C,KAAKsjD,aAAapjD,KAAKkhD,IACvBphD,KAAKwjD,yBAAyBtjD,KAAKkhD,UAEXr1C,IAAtB0pB,EAAMke,cACR3zC,KAAKsjD,aAAapjD,KAAKmhD,IACvBrhD,KAAKwjD,yBAAyBtjD,KAAKmhD,KAErCrhD,KAAKglD,YAAYrrC,EACnB,CAMA8oC,YAAYC,EAAiB/oC,GAC3B,MAAM8b,EAAQz1B,KAAKy1B,MACb6e,EAAY7e,EAAM6e,UAClBX,EAAcle,EAAMke,YAC1B,QAAkB5nC,IAAduoC,QAA2CvoC,IAAhB4nC,EAC7B,OAEF3zC,KAAKunD,uBACLvnD,KAAK4kD,cAAclC,EAAiB/oC,QACZ5N,IAApB0pB,EAAM6e,WACRt0C,KAAKwjD,yBAAyBtjD,KAAK,CACjC,kBACAutC,UAGsB1hC,IAAtB0pB,EAAMke,aACR3zC,KAAKwjD,yBAAyBtjD,KAAK,CACjC,oBACAu1B,EAAMke,YACNle,EAAM8e,UACN9e,EAAM4f,QACN5f,EAAMqd,SACNrd,EAAMud,WACNvd,EAAMme,SACNne,EAAMoe,iBAGV,MAAM1tB,EAAOu8B,EAAgBp3B,UACvBpZ,EAAkBwwC,EAAgB70B,6BAClC1b,EAASuwC,EAAgBn9B,YAC/BvlB,KAAKsnD,sBACHp1C,EACA,EAC6B,EAC7BC,GAEFnS,KAAKglD,YAAYrrC,EACnB,CAMA0oC,iBAAiBC,EAAsB3oC,GACrC,MAAM8b,EAAQz1B,KAAKy1B,MACb6e,EAAY7e,EAAM6e,UAClBX,EAAcle,EAAMke,YAC1B,QAAkB5nC,IAAduoC,QAA2CvoC,IAAhB4nC,EAC7B,OAEF3zC,KAAKunD,uBACLvnD,KAAK4kD,cAActC,EAAsB3oC,QACjB5N,IAApB0pB,EAAM6e,WACRt0C,KAAKwjD,yBAAyBtjD,KAAK,CACjC,kBACAutC,UAGsB1hC,IAAtB0pB,EAAMke,aACR3zC,KAAKwjD,yBAAyBtjD,KAAK,CACjC,oBACAu1B,EAAMke,YACNle,EAAM8e,UACN9e,EAAM4f,QACN5f,EAAMqd,SACNrd,EAAMud,WACNvd,EAAMme,SACNne,EAAMoe,iBAGV,MAAM7rB,EAAQs6B,EAAqBpzB,WAC7Bhd,EAAkBowC,EAAqBz0B,6BACvC1b,EAASmwC,EAAqB/8B,YACpC,IAAI5nB,EAAS,EACb,IAAK,IAAIU,EAAI,EAAG0S,EAAKiX,EAAMloB,OAAQzB,EAAI0S,IAAM1S,EAC3CV,EAASqC,KAAKsnD,sBACZp1C,EACAvU,EACAqqB,EAAM3pB,GACN8T,GAGJnS,KAAKglD,YAAYrrC,EACnB,CAKA1S,SACEjH,KAAKilD,kCACLjlD,KAAKy1B,MAAQ,KAKb,MAAMnR,EAAYtkB,KAAKskB,UACvB,GAAkB,IAAdA,EAAiB,CACnB,MAAMzT,EAAc7Q,KAAK6Q,YACzB,IAAK,IAAIxS,EAAI,EAAG0S,EAAKF,EAAY/Q,OAAQzB,EAAI0S,IAAM1S,EACjDwS,EAAYxS,GAAKkpB,GAAK1W,EAAYxS,GAAIimB,EAE1C,CACA,OAAOvV,MAAM9H,QACf,CAKAsgD,uBACE,MAAM9xB,EAAQz1B,KAAKy1B,WAED1pB,IADA0pB,EAAM6e,WAEtBt0C,KAAK+lD,gBAAgBtwB,EAAOz1B,KAAK4lD,iBAET75C,IAAtB0pB,EAAMke,aACR3zC,KAAKimD,kBAAkBxwB,EAAOz1B,KAAK6lD,YAEvC,GClPK,SAAS4B,GAAUC,EAAax1C,EAAiBvU,EAAQuG,EAAKiO,GACnE,MAAMw1C,EAAS,GACf,IAAIC,EAASjqD,EACTkqD,EAAS,EACTC,EAAe51C,EAAgBvS,MAAMhC,EAAQ,GACjD,KAAOkqD,EAASH,GAAeE,EAASz1C,EAASjO,GAAK,CACpD,MAAO4Q,EAAIC,GAAM+yC,EAAanoD,OAAO,GAC/BqV,EAAK9C,EAAgB01C,EAASz1C,GAC9B8C,EAAK/C,EAAgB01C,EAASz1C,EAAS,GACvC0a,EAAgBnuB,KAAKuK,MACxB+L,EAAKF,IAAOE,EAAKF,IAAOG,EAAKF,IAAOE,EAAKF,IAG5C,GADA8yC,GAAUh7B,EACNg7B,GAAUH,EAAa,CACzB,MAAM1pD,GAAK0pD,EAAcG,EAASh7B,GAAiBA,EAC7C1jB,EAAIgM,GAAKL,EAAIE,EAAIhX,GACjB0R,EAAIyF,GAAKJ,EAAIE,EAAIjX,GACvB8pD,EAAa5nD,KAAKiJ,EAAGuG,GACrBi4C,EAAOznD,KAAK4nD,GACZA,EAAe,CAAC3+C,EAAGuG,GACfm4C,GAAUH,IACZE,GAAUz1C,GAEZ01C,EAAS,CACX,MAAO,GAAIA,EAASH,EAClBI,EAAa5nD,KACXgS,EAAgB01C,EAASz1C,GACzBD,EAAgB01C,EAASz1C,EAAS,IAEpCy1C,GAAUz1C,MACL,CACL,MAAM41C,EAAUl7B,EAAgBg7B,EAC1B1+C,EAAIgM,GAAKL,EAAIE,EAAI+yC,EAAUl7B,GAC3Bnd,EAAIyF,GAAKJ,EAAIE,EAAI8yC,EAAUl7B,GACjCi7B,EAAa5nD,KAAKiJ,EAAGuG,GACrBi4C,EAAOznD,KAAK4nD,GACZA,EAAe,CAAC3+C,EAAGuG,GACnBm4C,EAAS,EACTD,GAAUz1C,CACZ,CACF,CAIA,OAHI01C,EAAS,GACXF,EAAOznD,KAAK4nD,GAEPH,CACT,CC3CO,SAASK,GAAc7L,EAAUjqC,EAAiBvU,EAAQuG,EAAKiO,GACpE,IAKI81C,EAAM5pD,EAAG6pD,EAAKC,EAAKrzC,EAAIC,EAAIqzC,EAAKC,EAAKC,EAAKC,EAL1CC,EAAa7qD,EACb8qD,EAAW9qD,EACXkqD,EAAS,EACT7pD,EAAI,EACJyrB,EAAQ9rB,EAEZ,IAAKU,EAAIV,EAAQU,EAAI6F,EAAK7F,GAAK8T,EAAQ,CACrC,MAAM6C,EAAK9C,EAAgB7T,GACrB4W,EAAK/C,EAAgB7T,EAAI,QACpB0N,IAAP+I,IACFwzC,EAAMtzC,EAAKF,EACXyzC,EAAMtzC,EAAKF,EACXozC,EAAMzpD,KAAKuK,KAAKq/C,EAAMA,EAAMC,EAAMA,QACtBx8C,IAARq8C,IACFpqD,GAAKkqD,EACLD,EAAOvpD,KAAKupD,MAAMG,EAAME,EAAMD,EAAME,IAAQL,EAAMC,IAC9CF,EAAO9L,IACLn+C,EAAI6pD,IACNA,EAAS7pD,EACTwqD,EAAa/+B,EACbg/B,EAAWpqD,GAEbL,EAAI,EACJyrB,EAAQprB,EAAI8T,IAGhB+1C,EAAMC,EACNC,EAAME,EACND,EAAME,GAERzzC,EAAKE,EACLD,EAAKE,CACP,CAEA,OADAjX,GAAKmqD,EACEnqD,EAAI6pD,EAAS,CAACp+B,EAAOprB,GAAK,CAACmqD,EAAYC,EAChD,CCpBO,MAAMC,GAAa,CACxB,KAAQ,EACR,IAAO,EACP,OAAU,GACV,MAAS,EACT,MAAS,EACT,IAAO,EACP,OAAU,GACV,QAAW,GACX,WAAc,GACd,YAAe,GACf,OAAU,GAomBZ,OAjmBA,cAAgC,GAO9Bt8C,YAAYkY,EAAW+U,EAAWpqB,EAAY86B,GAC5Ch7B,MAAMuV,EAAW+U,EAAWpqB,EAAY86B,GAMxC/pC,KAAK2oD,QAAU,KAMf3oD,KAAKy2C,MAAQ,GAMbz2C,KAAK4oD,aAAe,EAMpB5oD,KAAK6oD,aAAe,EAMpB7oD,KAAK8oD,yBAAsB/8C,EAM3B/L,KAAK+oD,cAAgB,EAMrB/oD,KAAKgpD,eAAiB,KAKtBhpD,KAAKipD,WAAa,CAAC,EAMnBjpD,KAAKkpD,iBAAmB,KAKxBlpD,KAAKmpD,aAAe,CAAC,EAMrBnpD,KAAKopD,WAA6D,CAAG,EAKrEppD,KAAKqpD,WAAa,CAAC,EAMnBrpD,KAAKspD,SAAW,GAMhBtpD,KAAKupD,SAAW,GAMhBvpD,KAAKwpD,WAAa,GAOlBxpD,KAAK+mD,6BAA0Bh7C,CACjC,CAKA9E,SACE,MAAMq8C,EAAev0C,MAAM9H,SAI3B,OAHAq8C,EAAa+F,WAAarpD,KAAKqpD,WAC/B/F,EAAa2F,WAAajpD,KAAKipD,WAC/B3F,EAAa6F,aAAenpD,KAAKmpD,aAC1B7F,CACT,CAMAX,SAAS5oC,EAAUJ,GACjB,MAAM8vC,EAAYzpD,KAAKgpD,eACjBU,EAAc1pD,KAAKkpD,iBACnBS,EAAY3pD,KAAKopD,WACvB,GAAmB,KAAfppD,KAAKy2C,QAAiBkT,IAAeF,IAAcC,EACrD,OAGF,MAAM74C,EAAc7Q,KAAK6Q,YACzB,IAAIoK,EAAQpK,EAAY/Q,OAExB,MAAMoyB,EAAenY,EAAST,UAC9B,IAAIpH,EAAkB,KAClBC,EAAS4H,EAASwL,YAEtB,GAC0B,SAAxBokC,EAAUtN,WACO,cAAhBnqB,GACiB,mBAAhBA,GACgB,WAAhBA,GACgB,gBAAhBA,EAsEG,CACL,IAAI03B,EAAiBD,EAAUpN,SAAW,KAAO,GACjD,OAAQrqB,GACN,IAAK,QACL,IAAK,aACHhgB,EAC4D,EAExDgT,qBACJ,MACF,IAAK,aACHhT,EAC4D,EAExD6Y,kBACJ,MACF,IAAK,SACH7Y,EACwD,EAEpDY,YACJ,MACF,IAAK,kBACHZ,EACiE,EAE7DuZ,mBACJtZ,EAAS,EACT,MACF,IAAK,UACHD,EACyD,EAErD4b,uBACC67B,EAAUpN,UACbqN,EAAe1pD,KAAKgS,EAAgB,GAAKlS,KAAKiP,YAEhDkD,EAAS,EACT,MACF,IAAK,eACH,MAAM4a,EACwD,EAE1DoC,wBACJjd,EAAkB,GAClB,IAAK,IAAI7T,EAAI,EAAG0S,EAAKgc,EAAejtB,OAAQzB,EAAI0S,EAAI1S,GAAK,EAClDsrD,EAAUpN,UACbqN,EAAe1pD,KAAK6sB,EAAe1uB,EAAI,GAAK2B,KAAKiP,YAEnDiD,EAAgBhS,KAAK6sB,EAAe1uB,GAAI0uB,EAAe1uB,EAAI,IAE7D,GAA+B,IAA3B6T,EAAgBpS,OAClB,OAEFqS,EAAS,EAIb,MAAMjO,EAAMlE,KAAK4jD,2BAA2B1xC,EAAiBC,GAC7D,GAAIjO,IAAQ+W,EACV,OAEF,GACE2uC,IACC1lD,EAAM+W,GAAS,GAAM/I,EAAgBpS,OAASqS,EAC/C,CACA,IAAI03C,EAAM5uC,EAAQ,EAClB2uC,EAAiBA,EAAeroB,QAAO,CAACI,EAAGtjC,KACzC,MAAMyrD,EACJj5C,EAAwB,GAAXg5C,EAAMxrD,MAAY6T,EAAgB7T,EAAI8T,IACnDtB,EAAwB,GAAXg5C,EAAMxrD,GAAS,KAAO6T,EAAgB7T,EAAI8T,EAAS,GAIlE,OAHK23C,KACDD,EAEGC,CAAI,GAEf,CAEA9pD,KAAK+pD,mBAEDJ,EAAUhN,gBAAkBgN,EAAU9M,oBACxC78C,KAAK4iD,mBACH+G,EAAUhN,eACVgN,EAAU9M,kBAER8M,EAAUhN,iBACZ38C,KAAK+lD,gBAAgB/lD,KAAKy1B,MAAOz1B,KAAK4lD,YACtC5lD,KAAKwjD,yBAAyBtjD,KAAKF,KAAK4lD,WAAW5lD,KAAKy1B,SAEtDk0B,EAAU9M,mBACZ78C,KAAKimD,kBAAkBjmD,KAAKy1B,MAAOz1B,KAAK6lD,aACxC7lD,KAAKwjD,yBAAyBtjD,KAAKF,KAAK8lD,aAAa9lD,KAAKy1B,UAI9Dz1B,KAAK4kD,cAAc7qC,EAAUJ,GAG7B,IAAI+jB,EAAUisB,EAAUjsB,QACxB,GACEA,GAAWsQ,KACV2b,EAAUvlC,MAAM,GAAK,GAAKulC,EAAUvlC,MAAM,GAAK,GAChD,CACA,IAAI4lC,EAAKL,EAAUjsB,QAAQ,GACvBusB,EAAKN,EAAUjsB,QAAQ,GACvBwsB,EAAKP,EAAUjsB,QAAQ,GACvBysB,EAAKR,EAAUjsB,QAAQ,GACvBisB,EAAUvlC,MAAM,GAAK,IACvB6lC,GAAMA,EACNE,GAAMA,GAEJR,EAAUvlC,MAAM,GAAK,IACvB4lC,GAAMA,EACNE,GAAMA,GAERxsB,EAAU,CAACssB,EAAIC,EAAIC,EAAIC,EACzB,CAKA,MAAMpgB,EAAa/pC,KAAK+pC,WACxB/pC,KAAKsjD,aAAapjD,KAAK,CACrB,cACA+a,EACA/W,EACA,KACA1F,IACAA,IACAA,IACA,EACA,EACA,EACAwB,KAAK8oD,oBACL9oD,KAAK+oD,cACL,CAAC,EAAG,GACJvqD,SACAuN,EACA/L,KAAK+mD,wBACLrpB,GAAWsQ,GACPA,GACAtQ,EAAQiJ,KAAI,SAAU7hC,GACpB,OAAOA,EAAIilC,CACb,MACF4f,EAAUhN,iBACVgN,EAAU9M,iBACZ78C,KAAKy2C,MACLz2C,KAAKspD,SACLtpD,KAAKwpD,WACLxpD,KAAKupD,SACLvpD,KAAK4oD,aACL5oD,KAAK6oD,aACLe,IAEF,MAAMxlC,EAAQ,EAAI2lB,EAClB/pC,KAAKwjD,yBAAyBtjD,KAAK,CACjC,cACA+a,EACA/W,EACA,KACA1F,IACAA,IACAA,IACA,EACA,EACA,EACAwB,KAAK8oD,oBACL9oD,KAAK+oD,cACL,CAAC3kC,EAAOA,GACR5lB,SACAuN,EACA/L,KAAK+mD,wBACLrpB,IACEisB,EAAUhN,iBACVgN,EAAU9M,iBACZ78C,KAAKy2C,MACLz2C,KAAKspD,SACLtpD,KAAKwpD,WACLxpD,KAAKupD,SACLvpD,KAAK4oD,aACL5oD,KAAK6oD,aACLe,IAGF5pD,KAAKglD,YAAYrrC,EACnB,KA9PE,CACA,IAAK5F,GAAW/T,KAAK6jD,uBAAwB9pC,EAAStM,aACpD,OAEF,IAAI0Y,EAEJ,GADAjU,EAAkB6H,EAASmL,qBACP,cAAhBgN,EACF/L,EAAO,CAACjU,EAAgBpS,aACnB,GAAoB,mBAAhBoyB,EACT/L,EAAsE,EAEpEmF,eACG,GAAoB,WAAhB4G,EACT/L,EAA8D,EAC3DmF,UACA3rB,MAAM,EAAG,QACP,GAAoB,gBAAhBuyB,EAAgC,CACzC,MAAMlK,EACwD,EAE1DkH,WACJ/I,EAAO,GACP,IAAK,IAAI9nB,EAAI,EAAG0S,EAAKiX,EAAMloB,OAAQzB,EAAI0S,IAAM1S,EAC3C8nB,EAAKjmB,KAAK8nB,EAAM3pB,GAAG,GAEvB,CACA2B,KAAK4kD,cAAc7qC,EAAUJ,GAC7B,MAAMoiC,EAAS4N,EAAU5N,OACnBJ,EAAYI,OAAShwC,EAAY49C,EAAUhO,UAEjD,IAAIyO,EAAa,EACjB,IAAK,IAAIvhD,EAAI,EAAGwhD,EAAKlkC,EAAKrmB,OAAQ+I,EAAIwhD,IAAMxhD,EAAG,CAC7C,IAAI8+C,EAEFA,EADE5L,EACO0L,GACP1L,EAAS/7C,KAAKiP,WACdiD,EACAk4C,EACAjkC,EAAKtd,GACLsJ,GAGO,CAACD,EAAgBvS,MAAMyqD,EAAYjkC,EAAKtd,KAEnD,IAAK,IAAI/J,EAAI,EAAGwrD,EAAK3C,EAAO7nD,OAAQhB,EAAIwrD,IAAMxrD,EAAG,CAC/C,MAAMyrD,EAAQ5C,EAAO7oD,GACrB,IAAI0rD,EAAa,EACb/B,EAAW8B,EAAMzqD,OACrB,GAAiBiM,MAAb4vC,EAAwB,CAC1B,MAAM8O,EAAQzC,GACZ2B,EAAUxN,SACVoO,EACA,EACAA,EAAMzqD,OACN,GAEF0qD,EAAaC,EAAM,GACnBhC,EAAWgC,EAAM,EACnB,CACA,IAAK,IAAIpsD,EAAImsD,EAAYnsD,EAAIoqD,EAAUpqD,GAAK8T,EAC1CtB,EAAY3Q,KAAKqqD,EAAMlsD,GAAIksD,EAAMlsD,EAAI,IAEvC,MAAM6F,EAAM2M,EAAY/Q,OACxBsqD,EAAajkC,EAAKtd,GAClB7I,KAAK0qD,WAAWzvC,EAAO/W,GACvB+W,EAAQ/W,CACV,CACF,CACAlE,KAAKglD,YAAYrrC,EACnB,CA0LF,CAKAowC,kBACE,MAAML,EAAc1pD,KAAKkpD,iBACnBS,EAAY3pD,KAAKopD,WACjBK,EAAYzpD,KAAKgpD,eAEjB2B,EAAY3qD,KAAKwpD,WACnBE,IACIiB,KAAa3qD,KAAKmpD,eACtBnpD,KAAKmpD,aAAawB,GAAa,CAC7BhX,YAAa+V,EAAY/V,YACzB0B,QAASqU,EAAYrU,QACrBxB,eAAgB6V,EAAY7V,eAC5BU,UAAWmV,EAAYnV,UACvBzB,SAAU4W,EAAY5W,SACtBE,WAAY0W,EAAY1W,WACxBY,SAAU8V,EAAY9V,YAI5B,MAAMgX,EAAU5qD,KAAKspD,SACfsB,KAAW5qD,KAAKqpD,aACpBrpD,KAAKqpD,WAAWuB,GAAW,CACzB1b,KAAMya,EAAUza,KAChByM,UAAWgO,EAAUhO,WAAa7N,GAClC+N,QAAS8N,EAAU9N,QACnBI,aAAc0N,EAAU1N,cAAgBlO,GACxC3pB,MAAOulC,EAAUvlC,QAGrB,MAAMymC,EAAU7qD,KAAKupD,SACjBE,IACIoB,KAAW7qD,KAAKipD,aACpBjpD,KAAKipD,WAAW4B,GAAW,CACzBvW,UAAWmV,EAAUnV,YAI7B,CAOAoW,WAAWzvC,EAAO/W,GAChB,MAAMwlD,EAAc1pD,KAAKkpD,iBACnBS,EAAY3pD,KAAKopD,WAEjBuB,EAAY3qD,KAAKwpD,WACjBoB,EAAU5qD,KAAKspD,SACfuB,EAAU7qD,KAAKupD,SACrBvpD,KAAK+pD,kBAEL,MAAMhgB,EAAa/pC,KAAK+pC,WAClB+gB,EAAWpC,GAAWiB,EAAU1N,cAEhCjd,EAAUh/B,KAAK6oD,aAAe9e,EAC9BsE,EAAOruC,KAAKy2C,MACZ1D,EAAc2W,EACfA,EAAYnV,UAAY71C,KAAKM,IAAI2qD,EAAUvlC,MAAM,IAAO,EACzD,EAEJpkB,KAAKsjD,aAAapjD,KAAK,CACrB,cACA+a,EACA/W,EACA4mD,EACAnB,EAAUpN,SACVsO,EACAlB,EAAUxN,SACVpS,EACA/K,EACA2rB,EACA5X,EAAchJ,EACdsE,EACAuc,EACA,IAEF5qD,KAAKwjD,yBAAyBtjD,KAAK,CACjC,cACA+a,EACA/W,EACA4mD,EACAnB,EAAUpN,SACVsO,EACAlB,EAAUxN,SACV,EACAnd,EACA2rB,EACA5X,EACA1E,EACAuc,EACA,EAAI7gB,GAER,CAMAiZ,aAAaC,EAAWgE,GACtB,IAAI0C,EAAWF,EAAWC,EAC1B,GAAKzG,EAEE,CACL,MAAM8H,EAAgB9H,EAAU/Q,UAC3B6Y,GAIHtB,EAAYzpD,KAAKgpD,eACZS,IACHA,EAA4D,CAAG,EAC/DzpD,KAAKgpD,eAAiBS,GAExBA,EAAUnV,UAAYnI,GACpB4e,EAAcjX,YAAcrG,MAT9Bgc,EAAY,KACZzpD,KAAKgpD,eAAiBS,GAYxB,MAAMuB,EAAkB/H,EAAU3Q,YAClC,GAAK0Y,EAGE,CACLtB,EAAc1pD,KAAKkpD,iBACdQ,IACHA,EAAgE,CAAG,EACnE1pD,KAAKkpD,iBAAmBQ,GAE1B,MAAM9V,EAAWoX,EAAgBhX,cAC3BH,EAAiBmX,EAAgB/W,oBACjCM,EAAYyW,EAAgBjX,WAC5Bf,EAAagY,EAAgB7W,gBACnCuV,EAAYrU,QAAU2V,EAAgBrV,cAAgBjI,GACtDgc,EAAY9V,SAAWA,EAAWA,EAASj0C,QAAUguC,GACrD+b,EAAY7V,oBACS9nC,IAAnB8nC,ErBld2B,EqBkd4BA,EACzD6V,EAAY5W,SAAWkY,EAAgB9W,eAAiBtG,GACxD8b,EAAYnV,eACIxoC,IAAdwoC,ErB3asB,EqB2auBA,EAC/CmV,EAAY1W,gBACKjnC,IAAfinC,ErB3cuB,GqB2cwBA,EACjD0W,EAAY/V,YAAcxH,GACxB6e,EAAgBlX,YAAcjG,GAElC,MAxBE6b,EAAc,KACd1pD,KAAKkpD,iBAAmBQ,EAyB1BC,EAAY3pD,KAAKopD,WACjB,MAAMla,EAAO+T,EAAUnG,WAAatP,GACpC,GAAa0B,GACb,MAAM+b,EAAYhI,EAAUrZ,gBAC5B+f,EAAUpN,SAAW0G,EAAU/F,cAC/ByM,EAAUza,KAAOA,EACjBya,EAAUxN,SAAW8G,EAAUhG,cAC/B0M,EAAUtN,UAAY4G,EAAUlG,eAChC4M,EAAUhO,UAAYsH,EAAU9F,eAChCwM,EAAU5N,OAASkH,EAAUjG,YAC7B2M,EAAU9N,QAAUoH,EAAU7F,aAC9BuM,EAAU1N,aACRgH,EAAU5F,mBAAqBtP,GACjC4b,EAAUhN,eAAiBsG,EAAUzF,oBACrCmM,EAAU9M,iBAAmBoG,EAAUxF,sBACvCkM,EAAUjsB,QAAUulB,EAAUvF,cAAgB1P,GAC9C2b,EAAUvlC,WAAsBrY,IAAdk/C,EAA0B,CAAC,EAAG,GAAKA,EAErD,MAAMC,EAAcjI,EAAU3F,aACxB6N,EAAclI,EAAU1F,aACxB6N,EAAqBnI,EAAUxZ,oBAC/B4hB,EAAepI,EAAU7jB,cAC/Bp/B,KAAKy2C,MAAQwM,EAAUtM,WAAa,GACpC32C,KAAK4oD,kBAA+B78C,IAAhBm/C,EAA4B,EAAIA,EACpDlrD,KAAK6oD,kBAA+B98C,IAAhBo/C,EAA4B,EAAIA,EACpDnrD,KAAK8oD,yBACoB/8C,IAAvBq/C,GAA2CA,EAC7CprD,KAAK+oD,mBAAiCh9C,IAAjBs/C,EAA6B,EAAIA,EAEtDrrD,KAAKwpD,WAAaE,GACqB,iBAA3BA,EAAY/V,YAChB+V,EAAY/V,YACZ,EAAO+V,EAAY/V,cACvB+V,EAAYrU,QACZqU,EAAY7V,eACZ,IACA6V,EAAYnV,UACZmV,EAAY5W,SACZ4W,EAAY1W,WACZ,IACA0W,EAAY9V,SAAS/zC,OACrB,IACA,GACJG,KAAKspD,SACHK,EAAUza,KACVya,EAAUvlC,OACTulC,EAAUhO,WAAa,MACvBgO,EAAU5N,QAAU,MACpB4N,EAAU9N,SAAW,MACrB8N,EAAU1N,cAAgB,KAC7Bj8C,KAAKupD,SAAWE,EACkB,iBAAvBA,EAAUnV,UACfmV,EAAUnV,UACV,IAAM,EAAOmV,EAAUnV,WACzB,EACN,MApGEt0C,KAAKy2C,MAAQ,GAqGfz2C,KAAK+mD,wBAA0BE,CACjC,GC5nBF,MAAMqE,GAAqB,CACzB,OAAUC,GACV,QAAWC,GACX,MAASC,GACT,WAAcC,GACd,QAAWH,GACX,KAAQI,IAqFV,OAlFA,MAOEv/C,YAAYkY,EAAW+U,EAAWpqB,EAAY86B,GAK5C/pC,KAAK4rD,WAAatnC,EAMlBtkB,KAAK6rD,WAAaxyB,EAMlBr5B,KAAK8rD,YAAc/hB,EAMnB/pC,KAAK+rD,YAAc98C,EAMnBjP,KAAKgsD,kBAAoB,CAAC,CAC5B,CAKA/kD,SACE,MAAMglD,EAAsB,CAAC,EAC7B,IAAK,MAAMC,KAAQlsD,KAAKgsD,kBAAmB,CACzCC,EAAoBC,GAAQD,EAAoBC,IAAS,CAAC,EAC1D,MAAMC,EAAWnsD,KAAKgsD,kBAAkBE,GACxC,IAAK,MAAME,KAAcD,EAAU,CACjC,MAAME,EAAqBF,EAASC,GAAYnlD,SAChDglD,EAAoBC,GAAME,GAAcC,CAC1C,CACF,CACA,OAAOJ,CACT,CAOAK,WAAWj2B,EAAQk2B,GACjB,MAAMC,OAAuBzgD,IAAXsqB,EAAuBA,EAAOo2B,WAAa,IAC7D,IAAIC,EAAU1sD,KAAKgsD,kBAAkBQ,QACrBzgD,IAAZ2gD,IACFA,EAAU,CAAC,EACX1sD,KAAKgsD,kBAAkBQ,GAAaE,GAEtC,IAAIC,EAASD,EAAQH,GACrB,QAAexgD,IAAX4gD,EAAsB,CAExBA,EAAS,IAAIC,EADOtB,GAAmBiB,IAErCvsD,KAAK4rD,WACL5rD,KAAK6rD,WACL7rD,KAAK+rD,YACL/rD,KAAK8rD,aAEPY,EAAQH,GAAeI,CACzB,CACA,OAAOA,CACT,GC/EK,SAASE,GACd36C,EACAvU,EACAuG,EACAiO,EACAk8B,EACAye,EACA3Q,EACA/3B,EACA8rB,EACAhB,EACAp/B,EACAqD,GAEA,IAAI6B,EAAK9C,EAAgBvU,GACrBsX,EAAK/C,EAAgBvU,EAAS,GAC9BmX,EAAK,EACLC,EAAK,EACL8X,EAAgB,EAChBkgC,EAAW,EAEf,SAASC,IACPl4C,EAAKE,EACLD,EAAKE,EAELD,EAAK9C,EADLvU,GAAUwU,GAEV8C,EAAK/C,EAAgBvU,EAAS,GAC9BovD,GAAYlgC,EACZA,EAAgBnuB,KAAKuK,MAAM+L,EAAKF,IAAOE,EAAKF,IAAOG,EAAKF,IAAOE,EAAKF,GACtE,CACA,GACEi4C,UACOrvD,EAASuG,EAAMiO,GAAU46C,EAAWlgC,EAAgBigC,GAE7D,IAAI1hC,EACgB,IAAlByB,EAAsB,GAAKigC,EAASC,GAAYlgC,EAClD,MAAMogC,EAAS93C,GAAKL,EAAIE,EAAIoW,GACtB8hC,EAAS/3C,GAAKJ,EAAIE,EAAImW,GAEtB+hC,EAAcxvD,EAASwU,EACvBi7C,EAAcL,EACdM,EAAOP,EAAS1oC,EAAQ8rB,EAAyBhB,EAAMb,EAAMv+B,GACnE,KAAOnS,EAASuG,EAAMiO,GAAU46C,EAAWlgC,EAAgBwgC,GACzDL,IAEF5hC,EAAgC,IAAlByB,EAAsB,GAAKwgC,EAAON,GAAYlgC,EAC5D,MAAM/C,EAAO3U,GAAKL,EAAIE,EAAIoW,GACpBrB,EAAO5U,GAAKJ,EAAIE,EAAImW,GAG1B,IAAI85B,EACJ,GAAI/xC,EAAU,CACZ,MAAMm6C,EAAO,CAACL,EAAQC,EAAQpjC,EAAMC,GACpC,GAAOujC,EAAM,EAAG,EAAG,EAAGn6C,EAAUm6C,EAAMA,GACtCpI,EAAUoI,EAAK,GAAKA,EAAK,EAC3B,MACEpI,EAAU+H,EAASnjC,EAGrB,MAAM3d,EAAKzN,KAAKyN,GACVlI,EAAS,GACTspD,EAAgBJ,EAAch7C,IAAWxU,EAQ/C,IAAI6vD,EAEJ,GAPA3gC,EAAgB,EAChBkgC,EAAWK,EACXp4C,EAAK9C,EAHLvU,EAASwvD,GAITl4C,EAAK/C,EAAgBvU,EAAS,GAI1B4vD,EAAe,CACjBP,IAEAQ,EAAgB9uD,KAAKsX,MAAMf,EAAKF,EAAIC,EAAKF,GACrCowC,IACFsI,GAAiBA,EAAgB,GAAKrhD,EAAKA,GAE7C,MAAMhD,GAAK2gB,EAAOmjC,GAAU,EACtBv9C,GAAKqa,EAAOmjC,GAAU,EAE5B,OADAjpD,EAAO,GAAK,CAACkF,EAAGuG,GAAI29C,EAAOP,GAAU,EAAGU,EAAenf,GAChDpqC,CACT,CAKA,IAAK,IAAI5F,EAAI,EAAG0S,GAFhBs9B,EAAOA,EAAKt3B,QAAQ,MAAO,MAEDjX,OAAQzB,EAAI0S,GAAM,CAC1Ci8C,IACA,IAAIxrC,EAAQ9iB,KAAKsX,MAAMf,EAAKF,EAAIC,EAAKF,GAIrC,GAHIowC,IACF1jC,GAASA,EAAQ,GAAKrV,EAAKA,QAEPJ,IAAlByhD,EAA6B,CAC/B,IAAIptB,EAAQ5e,EAAQgsC,EAEpB,GADAptB,GAASA,EAAQj0B,GAAM,EAAIA,EAAKi0B,GAASj0B,EAAK,EAAIA,EAAK,EACnDzN,KAAKM,IAAIohC,GAAS+b,EACpB,OAAO,IAEX,CACAqR,EAAgBhsC,EAEhB,MAAMisC,EAASpvD,EACf,IAAIqvD,EAAa,EACjB,KAAOrvD,EAAI0S,IAAM1S,EAAG,CAClB,MACM8D,EAAMiiB,EAAQ8rB,EAAyBhB,EAAMb,EADrC6W,EAAUn0C,EAAK1S,EAAI,EAAIA,GAC2ByR,GAChE,GACEnS,EAASwU,EAASjO,GAClB6oD,EAAWlgC,EAAgBigC,EAASY,EAAavrD,EAAM,EAEvD,MAEFurD,GAAcvrD,CAChB,CACA,GAAI9D,IAAMovD,EACR,SAEF,MAAME,EAAQzI,EACV7W,EAAKuf,UAAU78C,EAAK08C,EAAQ18C,EAAK1S,GACjCgwC,EAAKuf,UAAUH,EAAQpvD,GAC3B+sB,EACoB,IAAlByB,EACI,GACCigC,EAASY,EAAa,EAAIX,GAAYlgC,EAC7C,MAAM1jB,EAAIgM,GAAKL,EAAIE,EAAIoW,GACjB1b,EAAIyF,GAAKJ,EAAIE,EAAImW,GACvBnnB,EAAO/D,KAAK,CAACiJ,EAAGuG,EAAGg+C,EAAa,EAAGlsC,EAAOmsC,IAC1Cb,GAAUY,CACZ,CACA,OAAOzpD,CACT,CC9FA,MAAM4pD,G5F0IG,CAACpvD,IAAUA,KAAU,KAAW,K4FvInCwrD,GAAK,GAELC,GAAK,GAELC,GAAK,GAEL2D,GAAK,GAMX,SAASC,GAAgBC,GACvB,OAAOA,EAAuB,GAAGC,YACnC,CAEA,MAAMC,GAAW,IAAIphB,OAEnB,IACE7mC,OAAOC,aAAa,MAAW,IAAMD,OAAOC,aAAa,MACzDD,OAAOC,aAAa,OAAW,IAAMD,OAAOC,aAAa,OACzDD,OAAOC,aAAa,OAAW,IAAMD,OAAOC,aAAa,OACzDD,OAAOC,aAAa,OAAW,IAAMD,OAAOC,aAAa,OACzDD,OAAOC,aAAa,QAAW,IAAMD,OAAOC,aAAa,QAC3D,KASF,SAASioD,GAAoB9f,EAAM+f,GAIjC,MAHe,UAAVA,GAA+B,QAAVA,GAAqBF,GAASruC,KAAKwuB,KAC3D+f,EAAkB,UAAVA,EAAoB,OAAS,SAEhC1F,GAAW0F,EACpB,CAQA,SAASC,GAAiBC,EAAKC,EAAMlwD,GAKnC,OAJIA,EAAI,GACNiwD,EAAIpuD,KAAK,KAAM,IAEjBouD,EAAIpuD,KAAKquD,EAAM,IACRD,CACT,CAqnCA,OAnnCA,MAOEliD,YAAY6C,EAAY86B,EAAYykB,EAAUlL,GAK5CtjD,KAAKwuD,SAAWA,EAMhBxuD,KAAK+pC,WAAaA,EAOlB/pC,KAAKiP,WAAaA,EAMlBjP,KAAKyuD,WAMLzuD,KAAKsjD,aAAeA,EAAaA,aAMjCtjD,KAAK6Q,YAAcyyC,EAAazyC,YAMhC7Q,KAAK0uD,iBAAmB,CAAC,EAMzB1uD,KAAK2uD,mBzEvIA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GyE6IrB3uD,KAAKwjD,yBAA2BF,EAAaE,yBAM7CxjD,KAAK4uD,kBAAoB,KAMzB5uD,KAAK6uD,cAAgB,EAKrB7uD,KAAKipD,WAAa3F,EAAa2F,YAAc,CAAC,EAK9CjpD,KAAKmpD,aAAe7F,EAAa6F,cAAgB,CAAC,EAKlDnpD,KAAKqpD,WAAa/F,EAAa+F,YAAc,CAAC,EAM9CrpD,KAAK8uD,QAAU,CAAC,EAMhB9uD,KAAK2oD,QAAU,CAAC,CAClB,CASAoG,YAAY1gB,EAAMuc,EAASC,EAASF,GAClC,MAAMjrD,EAAM2uC,EAAOuc,EAAUC,EAAUF,EACvC,GAAI3qD,KAAK2oD,QAAQjpD,GACf,OAAOM,KAAK2oD,QAAQjpD,GAEtB,MAAMgqD,EAAciB,EAAY3qD,KAAKmpD,aAAawB,GAAa,KACzDlB,EAAYoB,EAAU7qD,KAAKipD,WAAW4B,GAAW,KACjDlB,EAAY3pD,KAAKqpD,WAAWuB,GAC5B7gB,EAAa/pC,KAAK+pC,WAClB3lB,EAAQ,CACZulC,EAAUvlC,MAAM,GAAK2lB,EACrB4f,EAAUvlC,MAAM,GAAK2lB,GAEjBilB,EAAcv/C,MAAM2L,QAAQizB,GAC5B+f,EAAQzE,EAAU9N,QACpB6M,GAAWiB,EAAU9N,SACrBsS,GACE1+C,MAAM2L,QAAQizB,GAAQA,EAAK,GAAKA,EAChCsb,EAAUhO,WAAa7N,IAEvBiF,EACJ4X,GAAajB,EAAYnV,UAAYmV,EAAYnV,UAAY,EAEzDoT,EAASqH,EACX3gB,EACAA,EAAKvC,MAAM,MAAMqE,OAAOke,GAAkB,KAExC,MAACn6C,EAAK,OAAEpK,EAAM,OAAEmlD,EAAM,QAAEC,EAAO,WAAEC,GxBkHpC,SAA2BC,EAAWzH,GAC3C,MAAMsH,EAAS,GACTC,EAAU,GACVC,EAAa,GACnB,IAAIj7C,EAAQ,EACRqgC,EAAY,EACZzqC,EAAS,EACTqjC,EAAa,EACjB,IAAK,IAAI9uC,EAAI,EAAG0S,EAAK42C,EAAO7nD,OAAQzB,GAAK0S,EAAI1S,GAAK,EAAG,CACnD,MAAMgwC,EAAOsZ,EAAOtpD,GACpB,GAAa,OAATgwC,GAAiBhwC,IAAM0S,EAAI,CAC7BmD,EAAQxV,KAAKwK,IAAIgL,EAAOqgC,GACxB4a,EAAWjvD,KAAKq0C,GAChBA,EAAY,EACZzqC,GAAUqjC,EACV,QACF,CACA,MAAM+B,EAAOyY,EAAOtpD,EAAI,IAAM+wD,EAAUlgB,KAClCmgB,EAAevgB,GAAiBI,EAAMb,GAC5C4gB,EAAO/uD,KAAKmvD,GACZ9a,GAAa8a,EACb,MAAMC,EAAgBjgB,GAAkBH,GACxCggB,EAAQhvD,KAAKovD,GACbniB,EAAazuC,KAAKwK,IAAIikC,EAAYmiB,EACpC,CACA,MAAO,CAACp7C,QAAOpK,SAAQmlD,SAAQC,UAASC,aAC1C,CwB5IyDI,CACnD5F,EACAhC,GAEI6H,EAAct7C,EAAQ6+B,EACtBlC,EAAsB,GAEtBlP,GAAK6tB,EAAc,GAAKprC,EAAM,GAC9Brf,GAAK+E,EAASipC,GAAe3uB,EAAM,GAEnC0sB,EAAQ,CACZ58B,MAAOytB,EAAI,EAAIjjC,KAAKQ,MAAMyiC,GAAKjjC,KAAK4K,KAAKq4B,GACzC73B,OAAQ/E,EAAI,EAAIrG,KAAKQ,MAAM6F,GAAKrG,KAAK4K,KAAKvE,GAC1C8rC,oBAAqBA,GAEP,GAAZzsB,EAAM,IAAuB,GAAZA,EAAM,IACzBysB,EAAoB3wC,KAAK,QAASkkB,GAEhCumC,IACF9Z,EAAoB3wC,KAAK,cAAewpD,EAAY/V,aACpD9C,EAAoB3wC,KAAK,YAAa6yC,GACtClC,EAAoB3wC,KAAK,UAAWwpD,EAAYrU,SAChDxE,EAAoB3wC,KAAK,WAAYwpD,EAAY5W,UACjDjC,EAAoB3wC,KAAK,aAAcwpD,EAAY1W,YACnDnC,EAAoB3wC,KAAK,cAAe,CAACwpD,EAAY9V,WACrD/C,EAAoB3wC,KAAK,iBAAkBwpD,EAAY7V,iBAErDgX,GACFha,EAAoB3wC,KAAK,YAAaupD,EAAUnV,WAElDzD,EAAoB3wC,KAAK,eAAgB,UACzC2wC,EAAoB3wC,KAAK,YAAa,UACtC,MAAMuvD,EAAY,GAAMrB,EACxB,IAAIjlD,EAAIilD,EAAQoB,EAAcC,EAAY1c,EAC1C,MAAM2c,EAAqB,GACrBC,EAAmB,GACzB,IAIIC,EAJAziB,EAAa,EACb0iB,EAAa,EACbC,EAAmB,EACnBC,EAAiB,EAErB,IAAK,IAAI1xD,EAAI,EAAG0S,EAAK42C,EAAO7nD,OAAQzB,EAAI0S,EAAI1S,GAAK,EAAG,CAClD,MAAMgwC,EAAOsZ,EAAOtpD,GACpB,GAAa,OAATgwC,EAAe,CACjBwhB,GAAc1iB,EACdA,EAAa,EACbhkC,EAAIilD,EAAQoB,EAAcC,EAAY1c,IACpCgd,EACF,QACF,CACA,MAAM7gB,EAAOyY,EAAOtpD,EAAI,IAAMsrD,EAAUza,KACpCA,IAAS0gB,IACPjF,GACF+E,EAAmBxvD,KAAK,OAAQgvC,GAE9B2b,GACF8E,EAAiBzvD,KAAK,OAAQgvC,GAEhC0gB,EAAe1gB,GAEjB/B,EAAazuC,KAAKwK,IAAIikC,EAAY+hB,EAAQY,IAC1C,MAAME,EAAiB,CACrB3hB,EACAllC,EACEsmD,EAAYR,EAAOa,GACnB1B,GAASa,EAAOa,GAAoBX,EAAWY,IACjD,IAAOhd,EAAc5F,GAAc0iB,GAErC1mD,GAAK8lD,EAAOa,GACRnF,GACF+E,EAAmBxvD,KAAK,aAAc8vD,GAEpCnF,GACF8E,EAAiBzvD,KAAK,WAAY8vD,KAElCF,CACJ,CAIA,OAHArgD,MAAM5L,UAAU3D,KAAK+K,MAAM4lC,EAAqB6e,GAChDjgD,MAAM5L,UAAU3D,KAAK+K,MAAM4lC,EAAqB8e,GAChD3vD,KAAK2oD,QAAQjpD,GAAOoxC,EACbA,CACT,CAWAmf,sBACEtjB,EACAsd,EACAC,EACAC,EACA2D,EACA1M,EACAC,GAEA1U,EAAQujB,YACRvjB,EAAQwjB,OAAOllD,MAAM0hC,EAASsd,GAC9Btd,EAAQoI,OAAO9pC,MAAM0hC,EAASud,GAC9Bvd,EAAQoI,OAAO9pC,MAAM0hC,EAASwd,GAC9Bxd,EAAQoI,OAAO9pC,MAAM0hC,EAASmhB,GAC9BnhB,EAAQoI,OAAO9pC,MAAM0hC,EAASsd,GAC1B7I,IACFphD,KAAKyuD,WAAqCrN,EAAgB,GAC1DphD,KAAKqxC,MAAM1E,IAET0U,IACFrhD,KAAKowD,gBACHzjB,EACwB,GAE1BA,EAAQoF,SAEZ,CAsBAse,iCACEC,EACAC,EACApsB,EACAC,EACAlwB,EACApK,EACAyY,EACAC,EACAguB,EACAC,EACAt9B,EACAiR,EACAosC,EACA9yB,EACA+yB,EACA92C,GAIA,IAAIxQ,EAAIg7B,GAFR5hB,GAAW6B,EAAM,IAGb1U,EAAI00B,GAFR5hB,GAAW4B,EAAM,IAIjB,MAAMud,EAAIztB,EAAQs8B,EAAU8f,EAAaA,EAAa9f,EAAUt8B,EAC1DnP,EAAI+E,EAAS2mC,EAAU8f,EAAcA,EAAc9f,EAAU3mC,EAC7D4mD,EAAOhzB,EAAQ,GAAKiE,EAAIvd,EAAM,GAAKsZ,EAAQ,GAC3CizB,EAAOjzB,EAAQ,GAAK34B,EAAIqf,EAAM,GAAKsZ,EAAQ,GAC3CkzB,EAAOznD,EAAIu0B,EAAQ,GACnBmzB,EAAOnhD,EAAIguB,EAAQ,GAazB,IAAIzlB,EAqCJ,OAhDIw4C,GAA2B,IAAbt9C,KAChB82C,GAAG,GAAK2G,EACR9C,GAAG,GAAK8C,EACR3G,GAAG,GAAK4G,EACR3G,GAAG,GAAK2G,EACR3G,GAAG,GAAK0G,EAAOF,EACfvG,GAAG,GAAKD,GAAG,GACXC,GAAG,GAAK0G,EAAOF,EACf7C,GAAG,GAAK3D,GAAG,IAII,IAAbh3C,GACF8E,EAAYkJ,GzEhZT,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GyEkZjBgjB,EACAC,EACA,EACA,EACAjxB,GACCgxB,GACAC,GAGHn5B,GAAegN,EAAWgyC,IAC1Bh/C,GAAegN,EAAWiyC,IAC1Bj/C,GAAegN,EAAWkyC,IAC1Bl/C,GAAegN,EAAW61C,IAC1Bh8C,EACEpT,KAAKqI,IAAIkjD,GAAG,GAAIC,GAAG,GAAIC,GAAG,GAAI2D,GAAG,IACjCpvD,KAAKqI,IAAIkjD,GAAG,GAAIC,GAAG,GAAIC,GAAG,GAAI2D,GAAG,IACjCpvD,KAAKwK,IAAI+gD,GAAG,GAAIC,GAAG,GAAIC,GAAG,GAAI2D,GAAG,IACjCpvD,KAAKwK,IAAI+gD,GAAG,GAAIC,GAAG,GAAIC,GAAG,GAAI2D,GAAG,IACjCD,KAGF/7C,EACEpT,KAAKqI,IAAI6pD,EAAMA,EAAOF,GACtBhyD,KAAKqI,IAAI8pD,EAAMA,EAAOF,GACtBjyD,KAAKwK,IAAI0nD,EAAMA,EAAOF,GACtBhyD,KAAKwK,IAAI2nD,EAAMA,EAAOF,GACtB9C,IAGA2C,IACFrnD,EAAIzK,KAAK4W,MAAMnM,GACfuG,EAAIhR,KAAK4W,MAAM5F,IAEV,CACLohD,WAAY3nD,EACZ4nD,WAAYrhD,EACZshD,WAAYrvB,EACZsvB,WAAYlsD,EACZyrC,QAASA,EACTC,QAASA,EACTwd,aAAc,CACZxkD,KAAMokD,GAAU,GAChBnkD,KAAMmkD,GAAU,GAChBlkD,KAAMkkD,GAAU,GAChBjkD,KAAMikD,GAAU,GAChBhvD,MAAO8a,GAETu3C,gBAAiBj5C,EACjBmM,MAAOA,EAEX,CAaA+sC,oBACExkB,EACAykB,EACAC,EACAC,EACAn7B,EACAirB,EACAC,GAEA,MAAMoP,KAAgBrP,IAAmBC,GAEnCkQ,EAAMD,EAAWrD,aACjB1hB,EAASI,EAAQJ,OACjBilB,EAAgBnQ,EACjBA,EAAkB,GAAKiQ,EAAWltC,MAAM,GAAM,EAC/C,EAiCJ,OA/BEmtC,EAAI9nD,KAAO+nD,GAAiBjlB,EAAOr4B,MAAQk9C,GAC3CG,EAAI5nD,KAAO6nD,GAAiB,GAC5BD,EAAI7nD,KAAO8nD,GAAiBjlB,EAAOziC,OAASsnD,GAC5CG,EAAI3nD,KAAO4nD,GAAiB,IAGxBf,GACFzwD,KAAKiwD,sBACHtjB,EACAsd,GACAC,GACAC,GACA2D,GACwB,EACA,GAG5Bxd,GACE3D,EACA2kB,EAAWJ,gBACX/6B,EACAk7B,EACAC,EAAW9gB,QACX8gB,EAAW7gB,QACX6gB,EAAWN,WACXM,EAAWL,WACXK,EAAWR,WACXQ,EAAWP,WACXO,EAAWltC,SAGR,CACT,CAMAitB,MAAM1E,GACJ,GAAI3sC,KAAKyuD,WAAY,CACnB,MAAMvH,EAASj8C,GAAejL,KAAK2uD,mBAAoB,CAAC,EAAG,IACrD8C,EAAa,IAAMzxD,KAAK+pC,WAC9B4C,EAAQ+D,OACR/D,EAAQnoB,UAAU0iC,EAAO,GAAKuK,EAAYvK,EAAO,GAAKuK,GACtD9kB,EAAQxoB,OAAOnkB,KAAK6uD,cACtB,CACAliB,EAAQ2E,OACJtxC,KAAKyuD,YACP9hB,EAAQsE,SAEZ,CAOAmf,gBAAgBzjB,EAASwY,GACvBxY,EAAqB,YACoCwY,EAAY,GACrExY,EAAQ4H,UAAmC4Q,EAAY,GACvDxY,EAAQ0I,QAAwC8P,EAAY,GAC5DxY,EAAQmG,SAA0CqS,EAAY,GAC9DxY,EAAQqG,WAAoCmS,EAAY,GACxDxY,EAAQkH,eAAwCsR,EAAY,GAC5DxY,EAAQ6H,YAA0C2Q,EAAY,GAChE,CAUAuM,6BAA6BrjB,EAAMuc,EAASD,EAAWE,GACrD,MAAMlB,EAAY3pD,KAAKqpD,WAAWuB,GAE5B9Z,EAAQ9wC,KAAK+uD,YAAY1gB,EAAMuc,EAASC,EAASF,GAEjDjB,EAAc1pD,KAAKmpD,aAAawB,GAChC5gB,EAAa/pC,KAAK+pC,WAClBqkB,EAAQD,GACZ1+C,MAAM2L,QAAQizB,GAAQA,EAAK,GAAKA,EAChCsb,EAAUhO,WAAa7N,IAEnBgd,EAAWpC,GAAWiB,EAAU1N,cAAgBlO,IAChDgF,EACJ2W,GAAeA,EAAYnV,UAAYmV,EAAYnV,UAAY,EASjE,MAAO,CACLzD,MAAOA,EACPvuB,QAPc6rC,GADFtd,EAAM58B,MAAQ61B,EAAa,EAAI4f,EAAUvlC,MAAM,IAC7B,GAAK,GAAMgqC,GAASrb,EAQlDvwB,QANCsoC,EAAWha,EAAMhnC,OAAUigC,EAC5B,GAAK,GAAM+gB,GAAY/X,EAO3B,CAgBA4e,SACEhlB,EACAykB,EACAn5C,EACAqrC,EACAkN,EACAoB,EACAC,EACA5R,GAGA,IAAI6R,EzE9hBD,IAAsBrxC,EAAYC,EyE+hBjC1gB,KAAK4uD,mBAAqB,GAAO32C,EAAWjY,KAAK2uD,oBACnDmD,EAAmB9xD,KAAK4uD,mBAEnB5uD,KAAK4uD,oBACR5uD,KAAK4uD,kBAAoB,IAE3BkD,EAAmB1vC,GACjBpiB,KAAK6Q,YACL,EACA7Q,KAAK6Q,YAAY/Q,OACjB,EACAmY,EACAjY,KAAK4uD,mBzE3iBgBnuC,EyE6iBDzgB,KAAK2uD,mBzE7iBQjuC,EyE6iBYzI,EzE5iBnDwI,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,GAC3BD,EAAW,GAAKC,EAAW,IyEyiBzB,IAAIriB,EAAI,EACR,MAAM0S,EAAKuyC,EAAaxjD,OACxB,IACIyzC,EACAhxB,EACFC,EACAuvC,EACAC,EACAC,EACAC,EACAzf,EACApE,EACAuc,EACAD,EACAE,EAZEvsD,EAAI,EAaJ6zD,EAAc,EACdC,EAAgB,EAChBC,EAAsB,KACtBC,EAAwB,KAC5B,MAAMC,EAAkBvyD,KAAK0uD,iBACvB8D,EAAexyD,KAAK6uD,cACpB4D,EACJ/zD,KAAK4W,MAAgD,KAA1C5W,KAAKsX,OAAOiC,EAAU,GAAIA,EAAU,KAAc,KAEzDwd,EAAuD,CAC3DkX,QAASA,EACT5C,WAAY/pC,KAAK+pC,WACjB96B,WAAYjP,KAAKiP,WACjBkE,SAAUq/C,GAKNE,EACJ1yD,KAAKsjD,cAAgBA,GAAgBtjD,KAAKwuD,SAAW,EAAI,IAC3D,IAA0D70C,EACtDxQ,EAAGuG,EAAGijD,EACV,KAAOt0D,EAAI0S,GAAI,CACb,MAAMo0C,EAAc7B,EAAajlD,GAIjC,OAFE8mD,EAAY,IAGZ,KAAK,kBACHxrC,EACEwrC,EAAY,GAEdwN,EAAkBxN,EAAY,GACzBxrC,EAAQ8W,mBAGG1kB,IAAd8lD,GACC99C,GAAW89C,EAAWc,EAAgBllD,eAIrCpP,EAFFA,EAA2B8mD,EAAY,GAAM,EAL7C9mD,EAA2B8mD,EAAY,GASzC,MACF,KAAK,cACCgN,EAAcO,IAChB1yD,KAAKqxC,MAAM1E,GACXwlB,EAAc,GAEZC,EAAgBM,IAClB/lB,EAAQoF,SACRqgB,EAAgB,GAEbD,GAAgBC,IACnBzlB,EAAQujB,YACR6B,EAAQvzD,IACRwzD,EAAQxzD,OAERH,EACF,MACF,KAAK,UACHC,EAA2B6mD,EAAY,GACvC,MAAMrwC,EAAKg9C,EAAiBxzD,GACtByW,EAAK+8C,EAAiBxzD,EAAI,GAG1B6S,EAFK2gD,EAAiBxzD,EAAI,GAEhBwW,EACV1D,EAFK0gD,EAAiBxzD,EAAI,GAEhByW,EACVrM,EAAIhK,KAAKuK,KAAKkI,EAAKA,EAAKC,EAAKA,GACnCu7B,EAAQwjB,OAAOr7C,EAAKpM,EAAGqM,GACvB43B,EAAQ+H,IAAI5/B,EAAIC,EAAIrM,EAAG,EAAG,EAAIhK,KAAKyN,IAAI,KACrC9N,EACF,MACF,KAAK,cACHsuC,EAAQqI,cACN32C,EACF,MACF,KAAK,UACHC,EAA2B6mD,EAAY,GACvC5R,EAAK4R,EAAY,GACjB,MAAMprC,EAEForC,EAAY,GAEV7O,EAAW6O,EAAY,GACvBv9C,EAA2B,GAAtBu9C,EAAYrlD,OAAcqlD,EAAY,QAAKp5C,EACtD0pB,EAAM1b,SAAWA,EACjB0b,EAAM9b,QAAUA,EACVtb,KAAKk0D,IACTA,EAAgBl0D,GAAK,IAEvB,MAAMulC,EAAS2uB,EAAgBl0D,GAC3BuJ,EACFA,EAAGkqD,EAAkBxzD,EAAGi1C,EAAI,EAAG3P,IAE/BA,EAAO,GAAKkuB,EAAiBxzD,GAC7BslC,EAAO,GAAKkuB,EAAiBxzD,EAAI,GACjCslC,EAAO9jC,OAAS,GAElBw2C,EAAS1S,EAAQnO,KACfp3B,EACF,MACF,KAAK,cACHC,EAA2B6mD,EAAY,GACvC5R,EAA4B4R,EAAY,GACxC1S,EAEI0S,EAAY,GAIhB5iC,EAAiC4iC,EAAY,GAC7C3iC,EAAiC2iC,EAAY,GAC7C,IAAIr7C,EAAgCq7C,EAAY,GAChD,MAAMhvB,EAAiCgvB,EAAY,GAC7C3U,EAAiC2U,EAAY,GAC7C1U,EAAiC0U,EAAY,GAC7Cnc,EAAyCmc,EAAY,IAC3D,IAAIhyC,EAAkCgyC,EAAY,IAClD,MAAM/gC,EACJ+gC,EAAY,IAEd,IAAIjxC,EAA+BixC,EAAY,IAC/C,MAAM5b,EAEF4b,EAAY,IAEVpC,EAEFoC,EAAY,IAGhB,IAAK1S,GAAS0S,EAAYrlD,QAAU,GAAI,CAEtCuuC,EAA8B8W,EAAY,IAC1CyF,EAAiCzF,EAAY,IAC7CwF,EAAmCxF,EAAY,IAC/C0F,EAAiC1F,EAAY,IAC7C,MAAMyN,EAAkB5yD,KAAK0xD,6BAC3BrjB,EACAuc,EACAD,EACAE,GAEFpY,EAAQmgB,EAAgB9hB,MACxBqU,EAAY,GAAK1S,EACjB,MAAMyY,EAAqC/F,EAAY,IACvD5iC,GAAWqwC,EAAgBrwC,QAAU2oC,GAAelrD,KAAK+pC,WACzDob,EAAY,GAAK5iC,EACjB,MAAM4oC,EAAqChG,EAAY,IACvD3iC,GAAWowC,EAAgBpwC,QAAU2oC,GAAenrD,KAAK+pC,WACzDob,EAAY,GAAK3iC,EACjB1Y,EAAS2oC,EAAM3oC,OACfq7C,EAAY,GAAKr7C,EACjBoK,EAAQu+B,EAAMv+B,MACdixC,EAAY,IAAMjxC,CACpB,CAEA,IAAI01C,GAKAlsB,GAASif,GAAgBE,GAJzBsI,EAAYrlD,OAAS,KACvB8pD,GAAwCzE,EAAY,KAIlDA,EAAYrlD,OAAS,IACvB49B,GAAwCynB,EAAY,IACpDxI,GAAyCwI,EAAY,IACrDtI,GAA2CsI,EAAY,MAEvDznB,GAAUsQ,GACV2O,IAAiB,EACjBE,IAAmB,GAGjB7T,GAAkBypB,EAEpBt/C,GAAYq/C,EACFxpB,GAAmBypB,IAE7Bt/C,GAAYq/C,GAEd,IAAIK,GAAa,EACjB,KAAOv0D,EAAIi1C,EAAIj1C,GAAK,EAAG,CACrB,GACEsrD,IACAA,GAAeiJ,MAAgB3+C,EAAQlU,KAAK+pC,WAE5C,SAEF,MAAMunB,EAAatxD,KAAKqwD,iCACtB5d,EAAMv+B,MACNu+B,EAAM3oC,OACNgoD,EAAiBxzD,GACjBwzD,EAAiBxzD,EAAI,GACrB4V,EACApK,EACAyY,EACAC,EACAguB,EACAC,EACAt9B,EACAiR,EACAosC,EACA9yB,GACAif,IAAkBE,GAClBljC,GAGIpB,EAAO,CACXo0B,EACAykB,EACA3e,EACA6e,EACAn7B,EACAwmB,GAC4B,EACxB,KACJE,GAC4B,EACxB,MAEN,GAAIoD,EAAe,CACjB,GAAsB,SAAlB1W,EAEF,SACK,GAAsB,aAAlBA,EAA8B,CAEvC0W,EAAc11C,OAAO+mD,EAAWrD,cAChC,QACF,CAAO,CACL,IAAI6E,EACAC,EACJ,GAAIhQ,EAAwB,CAC1B,MAAM/lC,EAAQu2B,EAAKj1C,EACnB,IAAKykD,EAAuB/lC,GAAQ,CAElC+lC,EAAuB/lC,GAASzE,EAEhC,QACF,CAIA,GAHAu6C,EAAY/P,EAAuB/lC,UAC5B+lC,EAAuB/lC,GAC9B+1C,EAAoBhF,GAAgB+E,GAChC7S,EAAc51C,SAAS0oD,GACzB,QAEJ,CACA,GAAI9S,EAAc51C,SAASinD,EAAWrD,cACpC,SAEE6E,IAEF7S,EAAc11C,OAAOwoD,GAErB/yD,KAAKmxD,oBAAoBlmD,MAAMjL,KAAM8yD,IAEvC7S,EAAc11C,OAAO+mD,EAAWrD,aAClC,CACF,CACAjuD,KAAKmxD,oBAAoBlmD,MAAMjL,KAAMuY,EACvC,GACEla,EACF,MACF,KAAK,cACH,MAAM4c,GAA+BkqC,EAAY,GAC3CjhD,GAA6BihD,EAAY,GACzC2F,GAAkC3F,EAAY,GAC9C5I,GAAkC4I,EAAY,GACpD0F,EAAiC1F,EAAY,GAC7C,MAAMhJ,GAAkCgJ,EAAY,GAC9C6N,GAA2C7N,EAAY,GACvDnmB,GAAiCmmB,EAAY,GACnDwF,EAAmCxF,EAAY,GAC/C,MAAMpS,GAAqCoS,EAAY,IACvD9W,EAA8B8W,EAAY,IAC1CyF,EAAiCzF,EAAY,IAC7C,MAAM8N,GAAkB,CACC9N,EAAY,IACZA,EAAY,KAG/BwE,GAAY3pD,KAAKqpD,WAAWuB,GAC5B1b,GAAOya,GAAUza,KACjB+b,GAAY,CAChBtB,GAAUvlC,MAAM,GAAK4uC,GACrBrJ,GAAUvlC,MAAM,GAAK4uC,IAGvB,IAAIE,GACAhkB,MAAQlvC,KAAK8uD,QACfoE,GAAelzD,KAAK8uD,QAAQ5f,KAE5BgkB,GAAe,CAAC,EAChBlzD,KAAK8uD,QAAQ5f,IAAQgkB,IAGvB,MAAMC,GAAa/oC,GAAiB0nC,EAAkB72C,GAAO/W,GAAK,GAC5DkvD,GACJ10D,KAAKM,IAAIisD,GAAU,IACnB/a,GAAyBhB,GAAMb,EAAM6kB,IACvC,GAAI3W,IAAY6W,IAAcD,GAAY,CACxC,MAAMxX,EAAY37C,KAAKqpD,WAAWuB,GAASjP,UAErC0X,EAAQxG,GACZiF,EACA72C,GACA/W,GACA,EACAmqC,GANc8kB,GAAaC,IAAc1K,GAAW/M,GAQpDQ,GACAz9C,KAAKM,IAAIisD,GAAU,IACnB/a,GACAhB,GACAgkB,GACAT,EAA4B,EAAIzyD,KAAK6uD,eAEvCyE,EAAW,GAAID,EAAO,CAEpB,MAAMrF,EAAyB,GAC/B,IAAIlvD,EAAGwrD,EAAIqD,EAAO7c,EAAOyiB,EACzB,GAAI5I,EACF,IAAK7rD,EAAI,EAAGwrD,EAAK+I,EAAMvzD,OAAQhB,EAAIwrD,IAAMxrD,EAAG,CAC1Cy0D,EAAOF,EAAMv0D,GACb6uD,EAA+B4F,EAAK,GACpCziB,EAAQ9wC,KAAK+uD,YAAYpB,EAAO/C,EAAS,GAAID,GAC7CpoC,EACyBgxC,EAAK,IAC3BtI,GAAU,GAAK,GAAKlY,GAAcA,IACrCvwB,EACEsoC,GAAWha,EAAMhnC,OACG,GAAlB,GAAMghD,IAAgB/X,GAAckY,GAAU,GAC9CA,GAAU,GACZjsB,GACF,MAAMsyB,EAAatxD,KAAKqwD,iCACtBvf,EAAM58B,MACN48B,EAAMhnC,OACNypD,EAAK,GACLA,EAAK,GACLziB,EAAM58B,MACN48B,EAAMhnC,OACNyY,EACAC,EACA,EACA,EACA+wC,EAAK,GACLN,IACA,EACAjlB,IACA,EACAr0B,GAEF,GACEsmC,GACAA,EAAc51C,SAASinD,EAAWrD,cAElC,MAAMqF,EAERtF,EAAuB9tD,KAAK,CAC1BysC,EACAykB,EACAtgB,EACAwgB,EACA,EACA,KACA,MAEJ,CAEF,GAAIzG,EACF,IAAK/rD,EAAI,EAAGwrD,EAAK+I,EAAMvzD,OAAQhB,EAAIwrD,IAAMxrD,EAAG,CAC1Cy0D,EAAOF,EAAMv0D,GACb6uD,EAA+B4F,EAAK,GACpCziB,EAAQ9wC,KAAK+uD,YAAYpB,EAAO/C,EAASC,EAAS,IAClDtoC,EAAiCgxC,EAAK,GACtC/wC,EAAUsoC,GAAWha,EAAMhnC,OAASk1B,GACpC,MAAMsyB,EAAatxD,KAAKqwD,iCACtBvf,EAAM58B,MACN48B,EAAMhnC,OACNypD,EAAK,GACLA,EAAK,GACLziB,EAAM58B,MACN48B,EAAMhnC,OACNyY,EACAC,EACA,EACA,EACA+wC,EAAK,GACLN,IACA,EACAjlB,IACA,EACAr0B,GAEF,GACEsmC,GACAA,EAAc51C,SAASinD,EAAWrD,cAElC,MAAMqF,EAERtF,EAAuB9tD,KAAK,CAC1BysC,EACAykB,EACAtgB,EACAwgB,EACA,EACA,KACA,MAEJ,CAEErR,GACFA,EAAc31C,KAAK0jD,EAAuBrnB,IAAIonB,KAEhD,IAAK,IAAI1vD,EAAI,EAAG0S,EAAKi9C,EAAuBluD,OAAQzB,EAAI0S,IAAM1S,EAC5D2B,KAAKmxD,oBAAoBlmD,MAAMjL,KAAMguD,EAAuB3vD,GAEhE,CACF,GACEA,EACF,MACF,KAAK,gBACH,QAAwB0N,IAApB6lD,EAA+B,CACjCj4C,EACEwrC,EAAY,GAEd,MAAMlhD,EAAS2tD,EAAgBj4C,EAASg5C,GACxC,GAAI1uD,EACF,OAAOA,CAEX,GACE5F,EACF,MACF,KAAK,QACCq0D,EACFP,IAEAnyD,KAAKqxC,MAAM1E,KAEXtuC,EACF,MACF,KAAK,mBAYH,IAXAC,EAA2B6mD,EAAY,GACvC5R,EAA4B4R,EAAY,GACxCh8C,EAAI2oD,EAAiBxzD,GACrBoR,EAAIoiD,EAAiBxzD,EAAI,GACzB2zD,EAAU9oD,EAAI,GAAO,EACrB+oD,EAAUxiD,EAAI,GAAO,EACjBuiD,IAAWF,GAASG,IAAWF,IACjCrlB,EAAQwjB,OAAOhnD,EAAGuG,GAClBqiD,EAAQE,EACRD,EAAQE,GAEL5zD,GAAK,EAAGA,EAAIi1C,EAAIj1C,GAAK,EACxB6K,EAAI2oD,EAAiBxzD,GACrBoR,EAAIoiD,EAAiBxzD,EAAI,GACzB2zD,EAAU9oD,EAAI,GAAO,EACrB+oD,EAAUxiD,EAAI,GAAO,EACjBpR,GAAKi1C,EAAK,GAAK0e,IAAWF,GAASG,IAAWF,IAChDrlB,EAAQoI,OAAO5rC,EAAGuG,GAClBqiD,EAAQE,EACRD,EAAQE,KAGV7zD,EACF,MACF,KAAK,kBACHg0D,EAAsBlN,EACtBnlD,KAAKyuD,WAAatJ,EAAY,GAE1BgN,IACFnyD,KAAKqxC,MAAM1E,GACXwlB,EAAc,EACVC,IACFzlB,EAAQoF,SACRqgB,EAAgB,IAIpBzlB,EAAQ2H,UAEJ6Q,EAAY,KAEd9mD,EACF,MACF,KAAK,oBACHi0D,EAAwBnN,EACpBiN,IACFzlB,EAAQoF,SACRqgB,EAAgB,GAElBpyD,KAAKowD,gBAAgBzjB,EAAiC,KACpDtuC,EACF,MACF,KAAK,UACCq0D,EACFN,IAEAzlB,EAAQoF,WAER1zC,EACF,MACF,UACIA,EAGR,CACI8zD,GACFnyD,KAAKqxC,MAAM1E,GAETylB,GACFzlB,EAAQoF,QAGZ,CAUAyhB,QACE7mB,EACAykB,EACAn5C,EACAu6C,EACAhC,EACAvQ,GAEAjgD,KAAK6uD,cAAgB2D,EACrBxyD,KAAK2xD,SACHhlB,EACAykB,EACAn5C,EACAjY,KAAKsjD,aACLkN,OACAzkD,OACAA,EACAk0C,EAEJ,CAYAwT,oBACE9mB,EACA10B,EACAu6C,EACAZ,EACAC,GAGA,OADA7xD,KAAK6uD,cAAgB2D,EACdxyD,KAAK2xD,SACVhlB,EACA,EACA10B,EACAjY,KAAKwjD,0BACL,EACAoO,EACAC,EAEJ,GCjtCF,MAAM6B,GAAQ,CAAC,UAAW,SAAU,aAAc,QAAS,OAAQ,WAgWnE,MAAMC,GAA6B,CAAC,EAoDpC,OAlZA,MAaEvnD,YACEitB,EACApqB,EACA86B,EACAykB,EACAoF,EACA7U,GAMA/+C,KAAK6rD,WAAaxyB,EAMlBr5B,KAAK6zD,UAAYrF,EAMjBxuD,KAAK8rD,YAAc/hB,EAMnB/pC,KAAK+rD,YAAc98C,EAMnBjP,KAAKo/C,cAAgBL,EAMrB/+C,KAAK8zD,mBAAqB,CAAC,EAM3B9zD,KAAK+zD,qBAAuB,KAM5B/zD,KAAKg0D,uB1EpDA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,G0EsDrBh0D,KAAKi0D,iBAAiBL,EACxB,CAMAM,KAAKvnB,EAAS10B,GACZ,MAAMk8C,EAAiBn0D,KAAKo0D,cAAcn8C,GAC1C00B,EAAQujB,YACRvjB,EAAQwjB,OAAOgE,EAAe,GAAIA,EAAe,IACjDxnB,EAAQoI,OAAOof,EAAe,GAAIA,EAAe,IACjDxnB,EAAQoI,OAAOof,EAAe,GAAIA,EAAe,IACjDxnB,EAAQoI,OAAOof,EAAe,GAAIA,EAAe,IACjDxnB,EAAQunB,MACV,CAOAD,iBAAiBL,GACf,IAAK,MAAMv9B,KAAUu9B,EAAiB,CACpC,IAAIS,EAAYr0D,KAAK8zD,mBAAmBz9B,QACtBtqB,IAAdsoD,IACFA,EAAY,CAAC,EACbr0D,KAAK8zD,mBAAmBz9B,GAAUg+B,GAEpC,MAAMC,EAAsBV,EAAgBv9B,GAC5C,IAAK,MAAMk2B,KAAe+H,EAAqB,CAC7C,MAAMhR,EAAegR,EAAoB/H,GACzC8H,EAAU9H,GAAe,IAAI,GAC3BvsD,KAAK+rD,YACL/rD,KAAK8rD,YACL9rD,KAAK6zD,UACLvQ,EAEJ,CACF,CACF,CAMAiR,aAAaF,GACX,IAAK,MAAMh+B,KAAUr2B,KAAK8zD,mBAAoB,CAC5C,MAAMU,EAAax0D,KAAK8zD,mBAAmBz9B,GAC3C,IAAK,IAAIh4B,EAAI,EAAG0S,EAAKsjD,EAAUv0D,OAAQzB,EAAI0S,IAAM1S,EAC/C,GAAIg2D,EAAUh2D,KAAMm2D,EAClB,OAAO,CAGb,CACA,OAAO,CACT,CAYAC,2BACEnjD,EACArC,EACAkE,EACAuhD,EACAliD,EACAmiD,GAGA,MAAMC,EAA6B,GADnCF,EAAeh2D,KAAK4W,MAAMo/C,IACa,EACjCz8C,EAAYkJ,GAChBnhB,KAAKg0D,uBACLU,EAAe,GACfA,EAAe,GACf,EAAIzlD,GACH,EAAIA,GACJkE,GACA7B,EAAW,IACXA,EAAW,IAGRujD,GAAc70D,KAAK+zD,qBACrBc,IACF70D,KAAK+zD,qBAAuB3nB,GAC1BwoB,EACAA,OACA7oD,EACA,CAACutC,oBAAoB,KAGzB,MAAM3M,EAAU3sC,KAAK+zD,qBAerB,IAAIlC,EAZFllB,EAAQJ,OAAOr4B,QAAU0gD,GACzBjoB,EAAQJ,OAAOziC,SAAW8qD,GAE1BjoB,EAAQJ,OAAOr4B,MAAQ0gD,EACvBjoB,EAAQJ,OAAOziC,OAAS8qD,GACdC,GACVloB,EAAQC,UAAU,EAAG,EAAGgoB,EAAaA,QAOZ7oD,IAAvB/L,KAAKo/C,gBACPyS,E7FRG,CAACpzD,IAAUA,KAAU,KAAW,K6FSnCuS,EAAiB6gD,EAAWvgD,GAC5B5T,EACEm0D,EACA5iD,GAAcjP,KAAKo/C,cAAgBsV,GACnC7C,IAIJ,MAAMiD,EAsKH,SAA4Bn/C,GACjC,QAA2C5J,IAAvC4nD,GAA2Bh+C,GAC7B,OAAOg+C,GAA2Bh+C,GAGpC,MAAMvC,EAAgB,EAATuC,EAAa,EACpBo/C,EAAgBp/C,EAASA,EACzBq/C,EAAY,IAAIvlD,MAAMslD,EAAgB,GAC5C,IAAK,IAAI12D,EAAI,EAAGA,GAAKsX,IAAUtX,EAC7B,IAAK,IAAIgkB,EAAI,EAAGA,GAAK1M,IAAU0M,EAAG,CAChC,MAAM4yC,EAAa52D,EAAIA,EAAIgkB,EAAIA,EAC/B,GAAI4yC,EAAaF,EACf,MAEF,IAAIG,EAAWF,EAAUC,GACpBC,IACHA,EAAW,GACXF,EAAUC,GAAcC,GAE1BA,EAASh1D,KAA4C,IAArCyV,EAAStX,GAAK+U,GAAQuC,EAAS0M,IAAU,GACrDhkB,EAAI,GACN62D,EAASh1D,KAA4C,IAArCyV,EAAStX,GAAK+U,GAAQuC,EAAS0M,IAAU,GAEvDA,EAAI,IACN6yC,EAASh1D,KAA4C,IAArCyV,EAAStX,GAAK+U,GAAQuC,EAAS0M,IAAU,GACrDhkB,EAAI,GACN62D,EAASh1D,KAA4C,IAArCyV,EAAStX,GAAK+U,GAAQuC,EAAS0M,IAAU,GAG/D,CAGF,MAAM8yC,EAAa,GACnB,IAAK,IAAI92D,EAAI,EAAG0S,EAAKikD,EAAUl1D,OAAQzB,EAAI0S,IAAM1S,EAC3C22D,EAAU32D,IACZ82D,EAAWj1D,QAAQ80D,EAAU32D,IAKjC,OADAs1D,GAA2Bh+C,GAAUw/C,EAC9BA,CACT,CA/MoBC,CAAmBV,GAEnC,IAAInI,EAOJ,SAASqF,EAAgBj4C,EAASI,GAChC,MAAMs7C,EAAY1oB,EAAQ4M,aACxB,EACA,EACAqb,EACAA,GACA1qD,KACF,IAAK,IAAI7L,EAAI,EAAG0S,EAAK+jD,EAAQh1D,OAAQzB,EAAI0S,EAAI1S,IAC3C,GAAIg3D,EAAUP,EAAQz2D,IAAM,EAAG,CAC7B,IACGs2D,GACgB,UAAhBpI,GAA2C,SAAhBA,GAC5BoI,EAAoBz4C,SAASvC,GAC7B,CACA,MAAM27C,GAAOR,EAAQz2D,GAAK,GAAK,EACzB8K,EAAIurD,EAAgBY,EAAMV,EAC1BllD,EAAIglD,GAAiBY,EAAMV,EAAe,GAC1C3wD,EAASuO,EAASmH,EAASI,EAAU5Q,EAAIA,EAAIuG,EAAIA,GACvD,GAAIzL,EACF,OAAOA,CAEX,CACA0oC,EAAQC,UAAU,EAAG,EAAGgoB,EAAaA,GACrC,KACF,CAGJ,CAGA,MAAMW,EAAKn8C,OAAO3Z,KAAKO,KAAK8zD,oBAAoBntB,IAAIoF,QAGpD,IAAI1tC,EAAGgkB,EAAGgyC,EAAWmB,EAAUvxD,EAC/B,IAHAsxD,EAAG7pD,KAAKkP,IAGHvc,EAAIk3D,EAAGz1D,OAAS,EAAGzB,GAAK,IAAKA,EAAG,CACnC,MAAMmuD,EAAY+I,EAAGl3D,GAAGouD,WAExB,IADA4H,EAAYr0D,KAAK8zD,mBAAmBtH,GAC/BnqC,EAAIqxC,GAAM5zD,OAAS,EAAGuiB,GAAK,IAAKA,EAGnC,GAFAkqC,EAAcmH,GAAMrxC,GACpBmzC,EAAWnB,EAAU9H,QACJxgD,IAAbypD,IACFvxD,EAASuxD,EAAS/B,oBAChB9mB,EACA10B,EACA9E,EACAy+C,EACAC,GAEE5tD,GACF,OAAOA,CAIf,CAEF,CAMAmwD,cAAcn8C,GACZ,MAAMohB,EAAYr5B,KAAK6rD,WACvB,IAAKxyB,EACH,OAAO,KAET,MAAM5vB,EAAO4vB,EAAU,GACjB3vB,EAAO2vB,EAAU,GACjB1vB,EAAO0vB,EAAU,GACjBzvB,EAAOyvB,EAAU,GACjB86B,EAAiB,CAAC1qD,EAAMC,EAAMD,EAAMG,EAAMD,EAAMC,EAAMD,EAAMD,GAElE,OADA0Y,GAAY+xC,EAAgB,EAAG,EAAG,EAAGl8C,EAAWk8C,GACzCA,CACT,CAKA//B,UACE,OAAO,GAAQp0B,KAAK8zD,mBACtB,CAYAN,QACE7mB,EACAykB,EACAn5C,EACAu6C,EACAhC,EACAiF,EACAxV,GAGA,MAAMsV,EAAKn8C,OAAO3Z,KAAKO,KAAK8zD,oBAAoBntB,IAAIoF,QAWpD,IAAI1tC,EAAG0S,EAAIsR,EAAGwE,EAAI6lC,EAASC,EAI3B,IAdA4I,EAAG7pD,KAAKkP,IAIJ5a,KAAK6rD,aACPlf,EAAQ+D,OACR1wC,KAAKk0D,KAAKvnB,EAAS10B,IAGrBw9C,EAAeA,GAA8B/B,GAEzCzT,GACFsV,EAAGrQ,UAEA7mD,EAAI,EAAG0S,EAAKwkD,EAAGz1D,OAAQzB,EAAI0S,IAAM1S,EAAG,CACvC,MAAMmuD,EAAY+I,EAAGl3D,GAAGouD,WAExB,IADAC,EAAU1sD,KAAK8zD,mBAAmBtH,GAC7BnqC,EAAI,EAAGwE,EAAK4uC,EAAa31D,OAAQuiB,EAAIwE,IAAMxE,EAAG,CAEjDsqC,EAASD,EADW+I,EAAapzC,SAElBtW,IAAX4gD,GACFA,EAAO6G,QACL7mB,EACAykB,EACAn5C,EACAu6C,EACAhC,EACAvQ,EAGN,CACF,CAEIjgD,KAAK6rD,YACPlf,EAAQsE,SAEZ,GCrKF,OA1LA,cAA4B,GAI1B7kC,YAAYykB,GACV9hB,QAMA/O,KAAK01D,OAAQ,EAGb11D,KAAK21D,wBAA0B31D,KAAK41D,mBAAmBx4C,KAAKpd,MAM5DA,KAAK61D,OAAShlC,EAKd7wB,KAAK81D,uBAAyB,IAChC,CAQA5uB,YAAYC,GACV,OAAO,GACT,CAMAG,QAAQH,GACN,OAAO,IACT,CAQAiB,aAAaX,GACX,OAAO,GACT,CASAY,YAAYZ,EAAYntB,GACtB,OAAO,GACT,CAQAy7C,mBAAmBC,EAAOv3B,EAAMjJ,GACzBwgC,EAAMv3B,KACTu3B,EAAMv3B,GAAQ,CAAC,GAEjBu3B,EAAMv3B,GAAMjJ,EAAKygC,UAAUxJ,YAAcj3B,CAE3C,CAWA0gC,uBAAuBlmD,EAAQwE,EAAYwhD,GACzC,MAAO,CAMJv3B,EAAM03B,KACL,MAAM3jD,EAAWxS,KAAK+1D,mBAAmB34C,KAAKpd,KAAMg2D,EAAOv3B,GAC3D,OAAOzuB,EAAOomD,kBAAkB5hD,EAAYiqB,EAAM03B,EAAW3jD,EAEjE,CACF,CAWAiiD,2BACEnjD,EACAm2B,EACAitB,EACAliD,EACA6jD,GAGF,CAKAC,WACE,OAAOt2D,KAAK61D,MACd,CAMAU,qBAAsB,CAOtBX,mBAAmBx5C,GAC2CA,EAAY,OAC9DsZ,aAAe,IACvB11B,KAAKw2D,yBAET,CASAC,UAAUhkB,GACR,IAAIoG,EAAapG,EAAM/c,WAQvB,OAPImjB,GAAc,IAAqBA,GAAc,IACnDpG,EAAM32B,iBAAiBiC,GAAkB/d,KAAK21D,yBAE5C9c,GAAc,KAChBpG,EAAMnoC,OACNuuC,EAAapG,EAAM/c,YAEdmjB,GAAc,EACvB,CAKA2d,0BACE,MAAM3lC,EAAQ7wB,KAAKs2D,WACfzlC,GAASA,EAAMsG,cAA2C,UAA3BtG,EAAM+G,kBACvC/G,EAAM/S,SAEV,CAKAnD,yBACS3a,KAAK61D,OACZ9mD,MAAM4L,iBACR,GCvJF,OArCA,cAA0B4B,GAQxBnQ,YAAYnL,EAAMy1D,EAAuBjvB,EAAYkF,GACnD59B,MAAM9N,GAQNjB,KAAK02D,sBAAwBA,EAO7B12D,KAAKynC,WAAaA,EASlBznC,KAAK2sC,QAAUA,CACjB,GCXF,IAAIgqB,GAAe,KAuSnB,OA1RA,cAAkC,GAIhCvqD,YAAYykB,GACV9hB,MAAM8hB,GAMN7wB,KAAK42D,UAAY,KAMjB52D,KAAK62D,mBAQL72D,KAAK82D,c7E/BA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,G6EuCrB92D,KAAK+2D,e7EvCA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,G6E+CrB/2D,KAAK02D,sB7E/CA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,G6EoDrB12D,KAAK2sC,QAAU,KAKf3sC,KAAKg3D,iBAAkB,EAMvBh3D,KAAKi3D,cAAgB,KAMrBj3D,KAAKynC,WAAa,IACpB,CAQA8R,aAAa9G,EAAOykB,EAAKC,GAMvB,IAAIjtD,EALCysD,KAnFPA,GAAevqB,GAAsB,EAAG,OAAGrgC,EAAW,CACpDutC,oBAAoB,KAqFpBqd,GAAa/pB,UAAU,EAAG,EAAG,EAAG,GAGhC,IACE+pB,GAAa3lB,UAAUyB,EAAOykB,EAAKC,EAAK,EAAG,EAAG,EAAG,EAAG,EAAG,GACvDjtD,EAAOysD,GAAapd,aAAa,EAAG,EAAG,EAAG,GAAGrvC,IAI/C,CAHE,MAAOktD,GAEP,OADAT,GAAe,KACR,IACT,CACA,OAAOzsD,CACT,CAMA2sB,cAAc4Q,GAEZ,IAAIvR,EADUl2B,KAAKs2D,WACIz/B,gBAIvB,MAH0B,mBAAfX,IACTA,EAAaA,EAAWuR,EAAWpE,UAAUp0B,aAExCinB,QAAcnqB,CACvB,CAQAsrD,aAAa/8C,EAAQrC,EAAWq/C,GAC9B,MAAMC,EAAiBv3D,KAAKs2D,WAAWx/B,eACvC,IAAI8/B,EAAWjqB,EACf,GACEryB,GACAA,EAAOqc,YAAc4gC,KACnBD,GACCh9C,GACCA,EAAO6H,MAAMm1C,iBACb,GACEprB,GAAQ5xB,EAAO6H,MAAMm1C,iBACrBprB,GAAQorB,KAEd,CACA,MAAM/qB,EAASjyB,EAAOk9C,kBAClBjrB,aAAkBkrB,oBACpB9qB,EAAUJ,EAAOE,WAAW,MAEhC,CAYA,GAXIE,GAAWA,EAAQJ,OAAOpqB,MAAMlK,YAAcA,GAEhDjY,KAAK42D,UAAYt8C,EACjBta,KAAK2sC,QAAUA,EACf3sC,KAAKg3D,iBAAkB,GACdh3D,KAAKg3D,kBAEdh3D,KAAK42D,UAAY,KACjB52D,KAAK2sC,QAAU,KACf3sC,KAAKg3D,iBAAkB,IAEpBh3D,KAAK42D,UAAW,CACnBA,EAAY30C,SAASC,cAAc,OACnC00C,EAAUjgC,UAAY4gC,EACtB,IAAIp1C,EAAQy0C,EAAUz0C,MACtBA,EAAMyY,SAAW,WACjBzY,EAAMjO,MAAQ,OACdiO,EAAMrY,OAAS,OACf6iC,EAAUP,KACV,MAAMG,EAASI,EAAQJ,OACvBqqB,EAAU1rB,YAAYqB,GACtBpqB,EAAQoqB,EAAOpqB,MACfA,EAAMyY,SAAW,WACjBzY,EAAM6tB,KAAO,IACb7tB,EAAMu1C,gBAAkB,WACxB13D,KAAK42D,UAAYA,EACjB52D,KAAK2sC,QAAUA,CACjB,CAEG3sC,KAAKg3D,kBACNM,GACCt3D,KAAK42D,UAAUz0C,MAAMm1C,kBAEtBt3D,KAAK42D,UAAUz0C,MAAMm1C,gBAAkBA,EAE3C,CAQAK,cAAchrB,EAASlF,EAAY/6B,GACjC,MAAMkrD,EAAU,GAAWlrD,GACrBmrD,EAAWllD,GAAYjG,GACvBorD,EAAcplD,EAAehG,GAC7BqrD,EAAatlD,EAAc/F,GAEjCzB,GAAew8B,EAAWuwB,2BAA4BJ,GACtD3sD,GAAew8B,EAAWuwB,2BAA4BH,GACtD5sD,GAAew8B,EAAWuwB,2BAA4BF,GACtD7sD,GAAew8B,EAAWuwB,2BAA4BD,GAEtD,MAAME,EAAWj4D,KAAK02D,sBACtBzrD,GAAegtD,EAAUL,GACzB3sD,GAAegtD,EAAUJ,GACzB5sD,GAAegtD,EAAUH,GACzB7sD,GAAegtD,EAAUF,GAEzBprB,EAAQ+D,OACR/D,EAAQujB,YACRvjB,EAAQwjB,OAAOzxD,KAAK4W,MAAMsiD,EAAQ,IAAKl5D,KAAK4W,MAAMsiD,EAAQ,KAC1DjrB,EAAQoI,OAAOr2C,KAAK4W,MAAMuiD,EAAS,IAAKn5D,KAAK4W,MAAMuiD,EAAS,KAC5DlrB,EAAQoI,OAAOr2C,KAAK4W,MAAMwiD,EAAY,IAAKp5D,KAAK4W,MAAMwiD,EAAY,KAClEnrB,EAAQoI,OAAOr2C,KAAK4W,MAAMyiD,EAAW,IAAKr5D,KAAK4W,MAAMyiD,EAAW,KAChEprB,EAAQunB,MACV,CAQAgE,qBAAqBj3D,EAAM0rC,EAASlF,GAClC,MAAM5W,EAAQ7wB,KAAKs2D,WACnB,GAAIzlC,EAAM9T,YAAY9b,GAAO,CAC3B,MAAMmb,EAAQ,IAAI,GAChBnb,EACAjB,KAAK02D,sBACLjvB,EACAkF,GAEF9b,EAAM1U,cAAcC,EACtB,CACF,CAOA+7C,UAAUxrB,EAASlF,GACjBznC,KAAKynC,WAAaA,EAClBznC,KAAKk4D,qBAAqB,GAA2BvrB,EAASlF,EAChE,CAOA2wB,WAAWzrB,EAASlF,GAClBznC,KAAKk4D,qBAAqB,GAA4BvrB,EAASlF,EACjE,CAcA4wB,mBACEnlD,EACAjE,EACAkE,EACA42B,EACA71B,EACApK,EACAi1B,GAEA,MAAM3d,EAAMlN,EAAQ,EACdmN,EAAMvX,EAAS,EACfwX,EAAKyoB,EAAa96B,EAClBsS,GAAMD,EACNG,GAAOvO,EAAO,GAAK6rB,EACnBrd,GAAOxO,EAAO,GACpB,OAAOiO,GACLnhB,KAAK82D,cACL11C,EACAC,EACAC,EACAC,GACCpO,EACDsO,EACAC,EAEJ,CAKA/G,yBACS3a,KAAKynC,WACZ14B,MAAM4L,iBACR,GCAF,OArPA,cAAmB,GAMjBvO,YAAY6pD,EAAWxgC,EAAOppB,GAC5B0C,QAEA1C,EAAUA,GAAoB,CAAC,EAK/BrM,KAAKi2D,UAAYA,EAMjBj2D,KAAKy1B,MAAQA,EAQbz1B,KAAKs4D,YAAc,KAQnBt4D,KAAKN,IAAM,GAMXM,KAAKu4D,iBACoBxsD,IAAvBM,EAAQmsD,WAA2B,IAAMnsD,EAAQmsD,WAOnDx4D,KAAKy4D,kBAAoB,CAAC,EAK1Bz4D,KAAKorB,cAAgB/e,EAAQ+e,WAC/B,CAKAtN,UACE9d,KAAKmc,cAAc4B,GACrB,CAKA26C,UACM14D,KAAKy1B,QAAUE,IAEjB31B,KAAK24D,SAAShjC,GAElB,CAKAX,SACE,OAAOh1B,KAAKN,IAAM,IAAMM,KAAKi2D,SAC/B,CAQA2C,iBACE,IAAK54D,KAAKs4D,YAER,OAAOt4D,KAET,IAAIw1B,EAAOx1B,KAAKs4D,YAMhB,EAAG,CACD,GAAI9iC,EAAKE,YAAcC,GAIrB,OADA31B,KAAKu4D,YAAc,EACZ/iC,EAETA,EAAOA,EAAK8iC,WACd,OAAS9iC,GAGT,OAAOx1B,IACT,CAMA64D,sBACE,IAAK74D,KAAKs4D,YACR,OAGF,IAAI9iC,EAAOx1B,KAAKs4D,YAKZloB,EAAOpwC,KAEX,EAAG,CACD,GAAIw1B,EAAKE,YAAcC,GAAkB,CAIvCH,EAAK8iC,YAAc,KACnB,KACF,CAAW9iC,EAAKE,YAAcC,GAG5Bya,EAAO5a,EACEA,EAAKE,YAAcC,GAG5Bya,EAAKkoB,YAAc9iC,EAAK8iC,YAExBloB,EAAO5a,EAETA,EAAO4a,EAAKkoB,WACd,OAAS9iC,EACX,CAOAsjC,eACE,OAAO94D,KAAKi2D,SACd,CAKAvgC,WACE,OAAO11B,KAAKy1B,KACd,CAUAkjC,SAASljC,GACP,GAAIz1B,KAAKy1B,QAAUE,IAAmB31B,KAAKy1B,MAAQA,EACjD,MAAM,IAAIzwB,MAAM,gCAElBhF,KAAKy1B,MAAQA,EACbz1B,KAAK8d,SACP,CASAxT,OACE,GACF,CAQAyuD,SAAS/oC,EAAIgpC,GACX,IAAKh5D,KAAKu4D,YACR,OAAO,EAGT,IAAI9uC,EAAQzpB,KAAKy4D,kBAAkBzoC,GACnC,GAAKvG,GAGE,IAAe,IAAXA,EACT,OAAO,OAHPA,EAAQuvC,EACRh5D,KAAKy4D,kBAAkBzoC,GAAMvG,EAK/B,MAAM2W,EAAQ44B,EAAOvvC,EAAQ,IAAO,GACpC,OAAI2W,GAASpgC,KAAKu4D,YACT,EAEF1+B,GAAOuG,EAAQpgC,KAAKu4D,YAC7B,CASAU,aAAajpC,GACX,QAAKhwB,KAAKu4D,cAG6B,IAAhCv4D,KAAKy4D,kBAAkBzoC,EAChC,CAMAkpC,cAAclpC,GACRhwB,KAAKu4D,cACPv4D,KAAKy4D,kBAAkBzoC,IAAO,EAElC,GCnIF,OAnLA,cAAwB,GAStB5jB,YAAY6pD,EAAWxgC,EAAOmiB,EAAKC,EAAashB,EAAkB9sD,GAChE0C,MAAMknD,EAAWxgC,EAAOppB,GAMxBrM,KAAK+4C,aAAelB,EAQpB73C,KAAKk5C,KAAOtB,EAEZ53C,KAAKN,IAAMk4C,EAMX53C,KAAKq2C,OAAS,IAAIl2B,MACE,OAAhB03B,IACF73C,KAAKq2C,OAAOwB,YAAcA,GAO5B73C,KAAKg5C,UAAY,KAMjBh5C,KAAKo5D,kBAAoBD,CAC3B,CAOArvB,WACE,OAAO9pC,KAAKq2C,MACd,CAMAW,SAASvjB,GACPzzB,KAAKq2C,OAAS5iB,EACdzzB,KAAKy1B,MAAQE,GACb31B,KAAK05C,iBACL15C,KAAK8d,SACP,CAOA27B,oBACEz5C,KAAKy1B,MAAQE,GACb31B,KAAK05C,iBACL15C,KAAKq2C,OA8FT,WACE,MAAM0D,EAAM3N,GAAsB,EAAG,GAGrC,OAFA2N,EAAIzF,UAAY,gBAChByF,EAAIF,SAAS,EAAG,EAAG,EAAG,GACfE,EAAIxN,MACb,CAnGkB8sB,GACdr5D,KAAK8d,SACP,CAOA67B,mBACE,MAAMlH,EAAyCzyC,KAAW,OACtDyyC,EAAM6mB,cAAgB7mB,EAAM8mB,cAC9Bv5D,KAAKy1B,MAAQE,GAEb31B,KAAKy1B,MAAQE,GAEf31B,KAAK05C,iBACL15C,KAAK8d,SACP,CAuCAxT,OACMtK,KAAKy1B,OAASE,KAChB31B,KAAKy1B,MAAQE,GACb31B,KAAKq2C,OAAS,IAAIl2B,MACQ,OAAtBngB,KAAK+4C,eACP/4C,KAAKq2C,OAAOwB,YAAc73C,KAAK+4C,eAG/B/4C,KAAKy1B,OAASE,KAChB31B,KAAKy1B,MAAQE,GACb31B,KAAK8d,UACL9d,KAAKo5D,kBAAkBp5D,KAAMA,KAAKk5C,MAClCl5C,KAAKg5C,UAAYf,GACfj4C,KAAKq2C,OACLr2C,KAAK25C,iBAAiBv8B,KAAKpd,MAC3BA,KAAKy5C,kBAAkBr8B,KAAKpd,OAGlC,CAOA05C,iBACM15C,KAAKg5C,YACPh5C,KAAKg5C,YACLh5C,KAAKg5C,UAAY,KAErB,GCwUF,OApcA,MASE5sC,YACEqY,EACA+0C,EACAC,EACAC,EACAC,EACAC,GAMA55D,KAAK65D,YAAcp1C,EAMnBzkB,KAAK85D,YAAcN,EAGnB,IAAIO,EAAoB,CAAC,EACzB,MAAMC,EAAe9hD,GAAalY,KAAK85D,YAAa95D,KAAK65D,aAOzD75D,KAAKi6D,cAAgB,SAAUn7D,GAC7B,MAAMY,EAAMZ,EAAE,GAAK,IAAMA,EAAE,GAI3B,OAHKi7D,EAAkBr6D,KACrBq6D,EAAkBr6D,GAAOs6D,EAAal7D,IAEjCi7D,EAAkBr6D,EAC3B,EAMAM,KAAKk6D,iBAAmBR,EAMxB15D,KAAKm6D,uBAAyBR,EAAiBA,EAM/C35D,KAAKo6D,WAAa,GAOlBp6D,KAAKq6D,iBAAkB,EAMvBr6D,KAAKs6D,kBACHt6D,KAAK65D,YAAYtsD,cACfmsD,KACA15D,KAAK65D,YAAYpsD,aACnB,GAASisD,IAAoB,GAAS15D,KAAK65D,YAAYpsD,aAMzDzN,KAAKu6D,kBAAoBv6D,KAAK65D,YAAYpsD,YACtC,GAASzN,KAAK65D,YAAYpsD,aAC1B,KAMJzN,KAAKw6D,kBAAoBx6D,KAAK85D,YAAYrsD,YACtC,GAASzN,KAAK85D,YAAYrsD,aAC1B,KAEJ,MAAMgtD,EAAqB,GAAWhB,GAChCiB,EAAsB/nD,GAAY8mD,GAClCkB,EAAyBjoD,EAAe+mD,GACxCmB,EAAwBnoD,EAAcgnD,GACtCoB,EAAgB76D,KAAKi6D,cAAcQ,GACnCK,EAAiB96D,KAAKi6D,cAAcS,GACpCK,EAAoB/6D,KAAKi6D,cAAcU,GACvCK,EAAmBh7D,KAAKi6D,cAAcW,GAYtCK,EArIc,IAuIjBrB,EACGl7D,KAAKwK,IACH,EACAxK,KAAK4K,KACH5K,KAAKw8D,KACHtoD,EAAQ6mD,IACLG,EAAwBA,EAAwB,IAAM,QAI/D,GAcN,GAZA55D,KAAKm7D,SACHV,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAGEj7D,KAAKq6D,gBAAiB,CACxB,IAAIe,EAAY38D,IAChBuB,KAAKo6D,WAAW7iD,SAAQ,SAAU8jD,EAAUh9D,EAAGkE,GAC7C64D,EAAY18D,KAAKqI,IACfq0D,EACAC,EAASrrD,OAAO,GAAG,GACnBqrD,EAASrrD,OAAO,GAAG,GACnBqrD,EAASrrD,OAAO,GAAG,GAEvB,IAIAhQ,KAAKo6D,WAAW7iD,SAAS8jD,IACvB,GACE38D,KAAKwK,IACHmyD,EAASrrD,OAAO,GAAG,GACnBqrD,EAASrrD,OAAO,GAAG,GACnBqrD,EAASrrD,OAAO,GAAG,IAEnBorD,EACFp7D,KAAKu6D,kBAAoB,EACzB,CACA,MAAMe,EAAc,CAClB,CAACD,EAASrrD,OAAO,GAAG,GAAIqrD,EAASrrD,OAAO,GAAG,IAC3C,CAACqrD,EAASrrD,OAAO,GAAG,GAAIqrD,EAASrrD,OAAO,GAAG,IAC3C,CAACqrD,EAASrrD,OAAO,GAAG,GAAIqrD,EAASrrD,OAAO,GAAG,KAEzCsrD,EAAY,GAAG,GAAKF,EAAYp7D,KAAKu6D,kBAAoB,IAC3De,EAAY,GAAG,IAAMt7D,KAAKu6D,mBAExBe,EAAY,GAAG,GAAKF,EAAYp7D,KAAKu6D,kBAAoB,IAC3De,EAAY,GAAG,IAAMt7D,KAAKu6D,mBAExBe,EAAY,GAAG,GAAKF,EAAYp7D,KAAKu6D,kBAAoB,IAC3De,EAAY,GAAG,IAAMt7D,KAAKu6D,mBAM5B,MAAM9wD,EAAO/K,KAAKqI,IAChBu0D,EAAY,GAAG,GACfA,EAAY,GAAG,GACfA,EAAY,GAAG,IAEJ58D,KAAKwK,IAChBoyD,EAAY,GAAG,GACfA,EAAY,GAAG,GACfA,EAAY,GAAG,IAEN7xD,EAAOzJ,KAAKu6D,kBAAoB,IACzCc,EAASrrD,OAASsrD,EAEtB,IAEJ,CAEAvB,EAAoB,CAAC,CACvB,CAYAwB,aAAa5yD,EAAG/D,EAAG9F,EAAG08D,EAAMC,EAAMC,GAChC17D,KAAKo6D,WAAWl6D,KAAK,CACnB8P,OAAQ,CAACwrD,EAAMC,EAAMC,GACrBphD,OAAQ,CAAC3R,EAAG/D,EAAG9F,IAEnB,CAkBAq8D,SAASxyD,EAAG/D,EAAG9F,EAAGR,EAAGk9D,EAAMC,EAAMC,EAAMC,EAAMV,GAC3C,MAAMW,EAAmBhrD,EAAe,CAAC4qD,EAAMC,EAAMC,EAAMC,IACrDE,EAAkB77D,KAAKu6D,kBACzB,GAASqB,GAAoB57D,KAAKu6D,kBAClC,KACEuB,EAA0C97D,KAAsB,kBAIhE+7D,EACJ/7D,KAAK65D,YAAYtsD,YACjBsuD,EAAkB,IAClBA,EAAkB,EAEpB,IAAIG,GAAmB,EAEvB,GAAIf,EAAiB,EAAG,CACtB,GAAIj7D,KAAK85D,YAAYhsD,YAAc9N,KAAKw6D,kBAAmB,CAIzDwB,EADE,GAFuBprD,EAAe,CAACjI,EAAG/D,EAAG9F,EAAGR,KAEnB0B,KAAKw6D,kBAvQjB,KAyQuBwB,CAC5C,EACKD,GAAU/7D,KAAK65D,YAAY/rD,YAAc+tD,IAC5CG,EACEH,EA7QiB,KA6QuBG,EAE9C,CAEA,IAAKA,GAAoBh8D,KAAKk6D,kBAE1B+B,SAASL,EAAiB,KAC1BK,SAASL,EAAiB,KAC1BK,SAASL,EAAiB,KAC1BK,SAASL,EAAiB,MAErB7nD,GAAW6nD,EAAkB57D,KAAKk6D,kBAErC,OAKN,IAAIgC,EAAc,EAElB,KAAKF,GAEAC,SAAST,EAAK,KACdS,SAAST,EAAK,KACdS,SAASR,EAAK,KACdQ,SAASR,EAAK,KACdQ,SAASP,EAAK,KACdO,SAASP,EAAK,KACdO,SAASN,EAAK,KACdM,SAASN,EAAK,KAEf,GAAIV,EAAiB,EACnBe,GAAmB,OASnB,GALAE,GACID,SAAST,EAAK,KAAQS,SAAST,EAAK,IAAU,EAAJ,IAC1CS,SAASR,EAAK,KAAQQ,SAASR,EAAK,IAAU,EAAJ,IAC1CQ,SAASP,EAAK,KAAQO,SAASP,EAAK,IAAU,EAAJ,IAC1CO,SAASN,EAAK,KAAQM,SAASN,EAAK,IAAU,EAAJ,GAE7B,GAAfO,GACe,GAAfA,GACe,GAAfA,GACe,GAAfA,EAEA,OAMR,GAAIjB,EAAiB,EAAG,CACtB,IAAKe,EAAkB,CACrB,MAAM9oD,EAAS,EAAEvK,EAAE,GAAK7J,EAAE,IAAM,GAAI6J,EAAE,GAAK7J,EAAE,IAAM,GAC7Cq9D,EAAYn8D,KAAKi6D,cAAc/mD,GAErC,IAAI/B,EACJ,GAAI4qD,EAAQ,CAKV5qD,GAHG,GAAOqqD,EAAK,GAAIM,GACf,GAAOJ,EAAK,GAAII,IAClB,EACqB,GAAOK,EAAU,GAAIL,EAC9C,MACE3qD,GAAMqqD,EAAK,GAAKE,EAAK,IAAM,EAAIS,EAAU,GAE3C,MAAM/qD,GAAMoqD,EAAK,GAAKE,EAAK,IAAM,EAAIS,EAAU,GAE/CH,EAD8B7qD,EAAKA,EAAKC,EAAKA,EACFpR,KAAKm6D,sBAClD,CACA,GAAI6B,EAAkB,CACpB,GAAIt9D,KAAKM,IAAI2J,EAAE,GAAK7J,EAAE,KAAOJ,KAAKM,IAAI2J,EAAE,GAAK7J,EAAE,IAAK,CAElD,MAAMs9D,EAAK,EAAEx3D,EAAE,GAAK9F,EAAE,IAAM,GAAI8F,EAAE,GAAK9F,EAAE,IAAM,GACzCu9D,EAAQr8D,KAAKi6D,cAAcmC,GAC3BE,EAAK,EAAEh+D,EAAE,GAAKqK,EAAE,IAAM,GAAIrK,EAAE,GAAKqK,EAAE,IAAM,GACzC4zD,EAAQv8D,KAAKi6D,cAAcqC,GAEjCt8D,KAAKm7D,SACHxyD,EACA/D,EACAw3D,EACAE,EACAd,EACAC,EACAY,EACAE,EACAtB,EAAiB,GAEnBj7D,KAAKm7D,SACHmB,EACAF,EACAt9D,EACAR,EACAi+D,EACAF,EACAX,EACAC,EACAV,EAAiB,EAErB,KAAO,CAEL,MAAMuB,EAAK,EAAE7zD,EAAE,GAAK/D,EAAE,IAAM,GAAI+D,EAAE,GAAK/D,EAAE,IAAM,GACzC63D,EAAQz8D,KAAKi6D,cAAcuC,GAC3BE,EAAK,EAAE59D,EAAE,GAAKR,EAAE,IAAM,GAAIQ,EAAE,GAAKR,EAAE,IAAM,GACzCq+D,EAAQ38D,KAAKi6D,cAAcyC,GAEjC18D,KAAKm7D,SACHxyD,EACA6zD,EACAE,EACAp+D,EACAk9D,EACAiB,EACAE,EACAhB,EACAV,EAAiB,GAEnBj7D,KAAKm7D,SACHqB,EACA53D,EACA9F,EACA49D,EACAD,EACAhB,EACAC,EACAiB,EACA1B,EAAiB,EAErB,CACA,MACF,CACF,CAEA,GAAIc,EAAQ,CACV,IAAK/7D,KAAKs6D,kBACR,OAEFt6D,KAAKq6D,iBAAkB,CACzB,CAM2B,IAAR,GAAd6B,IACHl8D,KAAKu7D,aAAa5yD,EAAG7J,EAAGR,EAAGk9D,EAAME,EAAMC,GAEd,IAAR,GAAdO,IACHl8D,KAAKu7D,aAAa5yD,EAAG7J,EAAG8F,EAAG42D,EAAME,EAAMD,GAErCS,IAEyB,IAAR,GAAdA,IACHl8D,KAAKu7D,aAAa32D,EAAGtG,EAAGqK,EAAG8yD,EAAME,EAAMH,GAEd,IAAR,EAAdU,IACHl8D,KAAKu7D,aAAa32D,EAAGtG,EAAGQ,EAAG28D,EAAME,EAAMD,GAG7C,CAOAkB,wBACE,MAAMlwD,EnG5RD,CAACjO,IAAUA,KAAU,KAAW,KmGqSrC,OAPAuB,KAAKo6D,WAAW7iD,SAAQ,SAAU8jD,EAAUh9D,EAAGkE,GAC7C,MAAMq1C,EAAMyjB,EAASrrD,OACrBgB,EAAiBtE,EAAQkrC,EAAI,IAC7B5mC,EAAiBtE,EAAQkrC,EAAI,IAC7B5mC,EAAiBtE,EAAQkrC,EAAI,GAC/B,IAEOlrC,CACT,CAKAmwD,eACE,OAAO78D,KAAKo6D,UACd,GCjeF,IAAI0C,GAKG,MAAM,GAAa,GAY1B,SAASC,GAAiBhjB,EAAKijB,EAAIC,EAAIC,EAAIC,GACzCpjB,EAAImW,YACJnW,EAAIoW,OAAO,EAAG,GACdpW,EAAIhF,OAAOioB,EAAIC,GACfljB,EAAIhF,OAAOmoB,EAAIC,GACfpjB,EAAI/E,YACJ+E,EAAIrJ,OACJqJ,EAAIma,OACJna,EAAIF,SAAS,EAAG,EAAGn7C,KAAKwK,IAAI8zD,EAAIE,GAAM,EAAGx+D,KAAKwK,IAAI+zD,EAAIE,IACtDpjB,EAAI9I,SACN,CAUA,SAASmsB,GAA8BlzD,EAAMvM,GAE3C,OACEe,KAAKM,IAAIkL,EAAc,EAATvM,GAAc,KAAO,GACnCe,KAAKM,IAAIkL,EAAc,EAATvM,EAAa,GAAK,QAAc,CAElD,CA2CO,SAAS0/D,GACd54C,EACA+0C,EACAl/B,EACAE,GAEA,MAAMH,EAAepiB,GAAUqiB,EAAck/B,EAAY/0C,GAGzD,IAAI8V,EAAmBptB,GACrBqsD,EACAh/B,EACAF,GAGF,MAAMgjC,EAAsB9D,EAAW7rD,wBACX5B,IAAxBuxD,IACF/iC,GAAoB+iC,GAEtB,MAAMC,EAAsB94C,EAAW9W,wBACX5B,IAAxBwxD,IACFhjC,GAAoBgjC,GAOtB,MAAMC,EAAe/4C,EAAWhX,YAChC,IAAK+vD,GAAgBnsD,EAAmBmsD,EAAcnjC,GAAe,CACnE,MAAMojC,EACJtwD,GAAmBsX,EAAY8V,EAAkBF,GACjDE,EACE0hC,SAASwB,IAAuBA,EAAqB,IACvDljC,GAAoBkjC,EAExB,CAEA,OAAOljC,CACT,CAkEO,SAASmM,GACdxyB,EACApK,EACAigC,EACAxP,EACAijC,EACAhjC,EACAi/B,EACAiE,EACAC,EACAC,EACAC,EACAzyC,GAEA,MAAMuhB,EAAUP,GACd1tC,KAAK4W,MAAMy0B,EAAa71B,GACxBxV,KAAK4W,MAAMy0B,EAAajgC,GACxB,IAOF,GAJKshB,IACHuhB,EAAQmxB,uBAAwB,GAGX,IAAnBH,EAAQ79D,OACV,OAAO6sC,EAAQJ,OAKjB,SAASwxB,EAAWl/D,GAClB,OAAOH,KAAK4W,MAAMzW,EAAQkrC,GAAcA,CAC1C,CAJA4C,EAAQvoB,MAAM2lB,EAAYA,GAM1B4C,EAAQqN,yBAA2B,UAEnC,MAAMgkB,EpG/CC,CAACv/D,IAAUA,KAAU,KAAW,KoGgDvCk/D,EAAQpmD,SAAQ,SAAUqgC,EAAKv5C,EAAGkE,GAChC,EAAOy7D,EAAkBpmB,EAAIlrC,OAC/B,IAEA,MAAMuxD,EAAqB,GAASD,GAC9BE,EAAsB,GAAUF,GAChCG,EAAgB/xB,GACpB1tC,KAAK4W,MAAOy0B,EAAak0B,EAAsB1jC,GAC/C77B,KAAK4W,MAAOy0B,EAAam0B,EAAuB3jC,GAChD,IAGGnP,IACH+yC,EAAcL,uBAAwB,GAGxC,MAAMM,EAAcr0B,EAAaxP,EAEjCojC,EAAQpmD,SAAQ,SAAUqgC,EAAKv5C,EAAGkE,GAChC,MAAM87D,EAAOzmB,EAAIlrC,OAAO,GAAKsxD,EAAiB,GACxCM,IAAS1mB,EAAIlrC,OAAO,GAAKsxD,EAAiB,IAC1CO,EAAW,GAAS3mB,EAAIlrC,QACxB8xD,EAAY,GAAU5mB,EAAIlrC,QAG5BkrC,EAAInF,MAAMv+B,MAAQ,GAAK0jC,EAAInF,MAAM3oC,OAAS,GAC5Cq0D,EAAcntB,UACZ4G,EAAInF,MACJmrB,EACAA,EACAhmB,EAAInF,MAAMv+B,MAAQ,EAAI0pD,EACtBhmB,EAAInF,MAAM3oC,OAAS,EAAI8zD,EACvBS,EAAOD,EACPE,EAAOF,EACPG,EAAWH,EACXI,EAAYJ,EAGlB,IAEA,MAAMK,EAAgB,GAAWhF,GA0JjC,OAxJAiE,EAAcb,eAAetlD,SAAQ,SAAU8jD,EAAUh9D,EAAGkE,GAqB1D,MAAMyN,EAASqrD,EAASrrD,OAClBsK,EAAS+gD,EAAS/gD,OACxB,IAAIymB,EAAK/wB,EAAO,GAAG,GACjBgxB,EAAKhxB,EAAO,GAAG,GACb8E,EAAK9E,EAAO,GAAG,GACjB+E,EAAK/E,EAAO,GAAG,GACbgF,EAAKhF,EAAO,GAAG,GACjBiF,EAAKjF,EAAO,GAAG,GAEjB,MAAM0uD,EAAKX,GAAYzjD,EAAO,GAAG,GAAKmkD,EAAc,IAAMjkC,GACpDmkC,EAAKZ,IACPzjD,EAAO,GAAG,GAAKmkD,EAAc,IAAMjkC,GAEjCwiC,EAAKe,GAAYzjD,EAAO,GAAG,GAAKmkD,EAAc,IAAMjkC,GACpDyiC,EAAKc,IACPzjD,EAAO,GAAG,GAAKmkD,EAAc,IAAMjkC,GAEjC0iC,EAAKa,GAAYzjD,EAAO,GAAG,GAAKmkD,EAAc,IAAMjkC,GACpD2iC,EAAKY,IACPzjD,EAAO,GAAG,GAAKmkD,EAAc,IAAMjkC,GAMjCokC,EAAwB79B,EACxB89B,EAAwB79B,EAC9BD,EAAK,EACLC,EAAK,EACLlsB,GAAM8pD,EACN7pD,GAAM8pD,EACN7pD,GAAM4pD,EACN3pD,GAAM4pD,EAEN,MAMMC,ElG5RH,SAA2Bj9C,GAChC,MAAMjZ,EAAIiZ,EAAI/hB,OAEd,IAAK,IAAIzB,EAAI,EAAGA,EAAIuK,EAAGvK,IAAK,CAE1B,IAAI0gE,EAAS1gE,EACT2gE,EAAQtgE,KAAKM,IAAI6iB,EAAIxjB,GAAGA,IAC5B,IAAK,IAAIqK,EAAIrK,EAAI,EAAGqK,EAAIE,EAAGF,IAAK,CAC9B,MAAMu2D,EAAWvgE,KAAKM,IAAI6iB,EAAInZ,GAAGrK,IAC7B4gE,EAAWD,IACbA,EAAQC,EACRF,EAASr2D,EAEb,CAEA,GAAc,IAAVs2D,EACF,OAAO,KAIT,MAAM9jD,EAAM2G,EAAIk9C,GAChBl9C,EAAIk9C,GAAUl9C,EAAIxjB,GAClBwjB,EAAIxjB,GAAK6c,EAGT,IAAK,IAAImH,EAAIhkB,EAAI,EAAGgkB,EAAIzZ,EAAGyZ,IAAK,CAC9B,MAAM68C,GAAQr9C,EAAIQ,GAAGhkB,GAAKwjB,EAAIxjB,GAAGA,GACjC,IAAK,IAAIskB,EAAItkB,EAAGskB,EAAI/Z,EAAI,EAAG+Z,IACrBtkB,GAAKskB,EACPd,EAAIQ,GAAGM,GAAK,EAEZd,EAAIQ,GAAGM,IAAMu8C,EAAOr9C,EAAIxjB,GAAGskB,EAGjC,CACF,CAGA,MAAMxZ,EAAI,IAAIsG,MAAM7G,GACpB,IAAK,IAAI/D,EAAI+D,EAAI,EAAG/D,GAAK,EAAGA,IAAK,CAC/BsE,EAAEtE,GAAKgd,EAAIhd,GAAG+D,GAAKiZ,EAAIhd,GAAGA,GAC1B,IAAK,IAAI7G,EAAI6G,EAAI,EAAG7G,GAAK,EAAGA,IAC1B6jB,EAAI7jB,GAAG4K,IAAMiZ,EAAI7jB,GAAG6G,GAAKsE,EAAEtE,EAE/B,CACA,OAAOsE,CACT,CkG8OwBg2D,CANI,CACtB,CAACrqD,EAAIC,EAAI,EAAG,EAAGioD,EAAK0B,GACpB,CAAC1pD,EAAIC,EAAI,EAAG,EAAGioD,EAAKwB,GACpB,CAAC,EAAG,EAAG5pD,EAAIC,EAAIkoD,EAAK0B,GACpB,CAAC,EAAG,EAAG3pD,EAAIC,EAAIkoD,EAAKwB,KAGtB,GAAKG,EAAL,CAOA,GAHAnyB,EAAQ+D,OACR/D,EAAQujB,YA1RZ,WACE,QAAiCnkD,IAA7B+wD,GAAwC,CAC1C,MAAM/iB,EAAM3N,GAAsB,EAAG,EAAG,IACxC2N,EAAIC,yBAA2B,UAC/BD,EAAIzF,UAAY,wBAChByoB,GAAiBhjB,EAAK,EAAG,EAAG,EAAG,GAC/BgjB,GAAiBhjB,EAAK,EAAG,EAAG,EAAG,GAC/B,MAAM7vC,EAAO6vC,EAAIR,aAAa,EAAG,EAAG,EAAG,GAAGrvC,KAC1C4yD,GACEM,GAA8BlzD,EAAM,IACpCkzD,GAA8BlzD,EAAM,IACpCkzD,GAA8BlzD,EAAM,GACtCwiC,GAAcqN,GACd,GAAW75C,KAAK65C,EAAIxN,OACtB,CAEA,OAAOuwB,EACT,CA2QQsC,KAAgCh0C,EAAa,CAE/CuhB,EAAQwjB,OAAO6M,EAAIC,GAEnB,MAAMoC,EAAQ,EACRC,EAAKZ,EAAK1B,EACVuC,EAAKZ,EAAK1B,EAChB,IAAK,IAAIroB,EAAO,EAAGA,EAAOyqB,EAAOzqB,IAE/BjI,EAAQoI,OACNioB,EAAKe,GAAanpB,EAAO,GAAK0qB,EAAMD,GACpCpC,EAAKc,EAAYnpB,EAAO2qB,GAAOF,EAAQ,KAGrCzqB,GAAQyqB,EAAQ,GAClB1yB,EAAQoI,OACNioB,EAAKe,GAAanpB,EAAO,GAAK0qB,EAAMD,GACpCpC,EAAKc,GAAanpB,EAAO,GAAK2qB,GAAOF,EAAQ,KAKnD1yB,EAAQoI,OAAOmoB,EAAIC,EACrB,MACExwB,EAAQwjB,OAAO6M,EAAIC,GACnBtwB,EAAQoI,OAAO2pB,EAAIC,GACnBhyB,EAAQoI,OAAOmoB,EAAIC,GAGrBxwB,EAAQunB,OAERvnB,EAAQ10B,UACN6mD,EAAY,GACZA,EAAY,GACZA,EAAY,GACZA,EAAY,GACZJ,EACAC,GAGFhyB,EAAQnoB,UACNw5C,EAAiB,GAAKY,EACtBZ,EAAiB,GAAKa,GAGxBlyB,EAAQvoB,MACNmW,EAAmBwP,GAClBxP,EAAmBwP,GAGtB4C,EAAQqE,UAAUmtB,EAAc5xB,OAAQ,EAAG,GAC3CI,EAAQsE,SAxDR,CAyDF,IAEAvE,GAAcyxB,GACd,GAAWj+D,KAAKi+D,EAAc5xB,QAE1BsxB,IACFlxB,EAAQ+D,OAER/D,EAAQqN,yBAA2B,cACnCrN,EAAQgH,YAAc,QACtBhH,EAAQ4H,UAAY,EAEpBmpB,EAAcb,eAAetlD,SAAQ,SAAU8jD,EAAUh9D,EAAGkE,GAC1D,MAAM+X,EAAS+gD,EAAS/gD,OAClBokD,GAAMpkD,EAAO,GAAG,GAAKmkD,EAAc,IAAMjkC,EACzCmkC,IAAOrkD,EAAO,GAAG,GAAKmkD,EAAc,IAAMjkC,EAC1CwiC,GAAM1iD,EAAO,GAAG,GAAKmkD,EAAc,IAAMjkC,EACzCyiC,IAAO3iD,EAAO,GAAG,GAAKmkD,EAAc,IAAMjkC,EAC1C0iC,GAAM5iD,EAAO,GAAG,GAAKmkD,EAAc,IAAMjkC,EACzC2iC,IAAO7iD,EAAO,GAAG,GAAKmkD,EAAc,IAAMjkC,EAEhDmS,EAAQujB,YACRvjB,EAAQwjB,OAAO6M,EAAIC,GACnBtwB,EAAQoI,OAAO2pB,EAAIC,GACnBhyB,EAAQoI,OAAOmoB,EAAIC,GACnBxwB,EAAQqI,YACRrI,EAAQoF,QACV,IAEApF,EAAQsE,WAEHtE,EAAQJ,MACjB,CC7EA,OA9UA,cAAyB,GAgBvBngC,YACEqY,EACA+6C,EACAhG,EACAiG,EACAxJ,EACAyJ,EACA31B,EACA6zB,EACA+B,EACAhG,EACAkE,EACAzyC,GAEArc,MAAMknD,EAAWtgC,GAAgB,CAACvK,cAAeA,IAMjDprB,KAAK4/D,kBAA+B7zD,IAAhB8xD,GAA4BA,EAMhD79D,KAAK8rD,YAAc/hB,EAMnB/pC,KAAK6/D,QAAUjC,EAMf59D,KAAKmxC,QAAU,KAMfnxC,KAAK8/D,gBAAkBN,EAMvBx/D,KAAK+/D,gBAAkBN,EAMvBz/D,KAAKggE,kBAAoBN,GAAsCzJ,EAM/Dj2D,KAAKigE,aAAe,GAMpBjgE,KAAKkgE,qBAAuB,KAM5BlgE,KAAKmgE,SAAW,EAEhB,MAAM1G,EAAegG,EAAeW,mBAClCpgE,KAAKggE,mBAEDK,EAAkBrgE,KAAK+/D,gBAAgBtyD,YAC7C,IAAIisD,EAAkB15D,KAAK8/D,gBAAgBryD,YAE3C,MAAM6yD,EAAsBD,EACxBxsD,GAAgB4lD,EAAc4G,GAC9B5G,EAEJ,GAAqC,IAAjC7mD,EAAQ0tD,GAIV,YADAtgE,KAAKy1B,MAAQE,IAIf,MAAM4qC,EAAmB97C,EAAWhX,YAChC8yD,IAIA7G,EAHGA,EAGe7lD,GAAgB6lD,EAAiB6G,GAFjCA,GAMtB,MAAM/lC,EAAmBilC,EAAe3gC,cACtC9+B,KAAKggE,kBAAkB,IAGnBzlC,EDKH,SACL9V,EACA+0C,EACAC,EACAj/B,GAEA,MAAMF,EAAexnB,EAAU2mD,GAC/B,IAAIl/B,EAAmB8iC,GACrB54C,EACA+0C,EACAl/B,EACAE,GAeF,QAZKyhC,SAAS1hC,IAAqBA,GAAoB,IACrDhoB,EAAcknD,GAAc,SAAUzmD,GAOpC,OANAunB,EAAmB8iC,GACjB54C,EACA+0C,EACAxmD,EACAwnB,GAEKyhC,SAAS1hC,IAAqBA,EAAmB,CAC1D,IAGKA,CACT,CChC6BimC,CACvB/7C,EACA+0C,EACA8G,EACA9lC,GAGF,IAAKyhC,SAAS1hC,IAAqBA,GAAoB,EAIrD,YADAv6B,KAAKy1B,MAAQE,IAIf,MAAM8qC,OACe10D,IAAnB4tD,EAA+BA,EC7JN,GD4K3B,GATA35D,KAAK0gE,eAAiB,IAAI,GACxBj8C,EACA+0C,EACA8G,EACA5G,EACAn/B,EAAmBkmC,EACnBjmC,GAGgD,IAA9Cx6B,KAAK0gE,eAAe7D,eAAe/8D,OAGrC,YADAE,KAAKy1B,MAAQE,IAIf31B,KAAKmgE,SAAWX,EAAemB,kBAAkBpmC,GACjD,IAAIijC,EAAex9D,KAAK0gE,eAAe9D,wBAmBvC,GAjBIlD,IACEj1C,EAAWlX,YACbiwD,EAAa,GAAK,GAChBA,EAAa,GACb9D,EAAgB,GAChBA,EAAgB,IAElB8D,EAAa,GAAK,GAChBA,EAAa,GACb9D,EAAgB,GAChBA,EAAgB,KAGlB8D,EAAe3pD,GAAgB2pD,EAAc9D,IAI5C9mD,EAAQ4qD,GAEN,CACL,MAAMoD,EAAcpB,EAAeqB,0BACjCrD,EACAx9D,KAAKmgE,UAGP,IAAK,IAAIW,EAAOF,EAAYn3D,KAAMq3D,GAAQF,EAAYj3D,KAAMm3D,IAC1D,IAAK,IAAIC,EAAOH,EAAYl3D,KAAMq3D,GAAQH,EAAYh3D,KAAMm3D,IAAQ,CAClE,MAAMvrC,EAAOmqC,EAAgB3/D,KAAKmgE,SAAUW,EAAMC,EAAMh3B,GACpDvU,GACFx1B,KAAKigE,aAAa//D,KAAKs1B,EAE3B,CAG+B,IAA7Bx1B,KAAKigE,aAAangE,SACpBE,KAAKy1B,MAAQE,GAEjB,MAnBE31B,KAAKy1B,MAAQE,EAoBjB,CAMAmU,WACE,OAAO9pC,KAAKmxC,OACd,CAKA6vB,aACE,MAAMrD,EAAU,GAWhB,GAVA39D,KAAKigE,aAAa1oD,SAASie,IACrBA,GAAQA,EAAKE,YAAcC,IAC7BgoC,EAAQz9D,KAAK,CACXwM,OAAQ1M,KAAK8/D,gBAAgBM,mBAAmB5qC,EAAKygC,WACrDxjB,MAAOjd,EAAKsU,YAEhB,IAEF9pC,KAAKigE,aAAangE,OAAS,EAEJ,IAAnB69D,EAAQ79D,OACVE,KAAKy1B,MAAQE,OACR,CACL,MAAMgH,EAAI38B,KAAKggE,kBAAkB,GAC3B5sD,EAAOpT,KAAK+/D,gBAAgBkB,YAAYtkC,GACxCzoB,EAAwB,iBAATd,EAAoBA,EAAOA,EAAK,GAC/CtJ,EAAyB,iBAATsJ,EAAoBA,EAAOA,EAAK,GAChDonB,EAAmBx6B,KAAK+/D,gBAAgBjhC,cAAcnC,GACtDpC,EAAmBv6B,KAAK8/D,gBAAgBhhC,cAC5C9+B,KAAKmgE,UAGD1G,EAAez5D,KAAK+/D,gBAAgBK,mBACxCpgE,KAAKggE,mBAGPhgE,KAAKmxC,QAAUzK,GACbxyB,EACApK,EACA9J,KAAK8rD,YACLvxB,EACAv6B,KAAK8/D,gBAAgBryD,YACrB+sB,EACAi/B,EACAz5D,KAAK0gE,eACL/C,EACA39D,KAAK6/D,QACL7/D,KAAK4/D,aACL5/D,KAAKorB,aAGPprB,KAAKy1B,MAAQE,EACf,CACA31B,KAAK8d,SACP,CAKAxT,OACE,GAAItK,KAAKy1B,OAASE,GAAgB,CAChC31B,KAAKy1B,MAAQE,GACb31B,KAAK8d,UAEL,IAAIojD,EAAa,EAEjBlhE,KAAKkgE,qBAAuB,GAC5BlgE,KAAKigE,aAAa1oD,SAASie,IACzB,MAAMC,EAAQD,EAAKE,WACnB,GAAID,GAASE,IAAkBF,GAASE,GAAmB,CACzDurC,IAEA,MAAMC,EAAkBlkD,GACtBuY,EACAzX,IACA,SAAUhgB,GACR,MAAM03B,EAAQD,EAAKE,WAEjBD,GAASE,IACTF,GAASE,IACTF,GAASE,KAETlY,GAAc0jD,GACdD,IACmB,IAAfA,IACFlhE,KAAKohE,mBACLphE,KAAKghE,cAGX,GACAhhE,MAEFA,KAAKkgE,qBAAqBhgE,KAAKihE,EACjC,KAGiB,IAAfD,EACFhnC,WAAWl6B,KAAKghE,WAAW5jD,KAAKpd,MAAO,GAEvCA,KAAKigE,aAAa1oD,SAAQ,SAAUie,EAAMn3B,EAAGkE,GAC7BizB,EAAKE,YACNC,IACXH,EAAKlrB,MAET,GAEJ,CACF,CAKA82D,mBACEphE,KAAKkgE,qBAAqB3oD,QAAQkG,IAClCzd,KAAKkgE,qBAAuB,IAC9B,CAKAxH,UACM14D,KAAKmxC,UACPzE,GAAc1sC,KAAKmxC,QAAQ1E,WAAW,OACtC,QAAgBzsC,KAAKmxC,SACrBnxC,KAAKmxC,QAAU,MAEjBpiC,MAAM2pD,SACR,GEhWF,MAAM2I,GAOJj1D,YAAY3C,EAAME,EAAMD,EAAME,GAI5B5J,KAAKyJ,KAAOA,EAKZzJ,KAAK2J,KAAOA,EAKZ3J,KAAK0J,KAAOA,EAKZ1J,KAAK4J,KAAOA,CACd,CAMA03D,SAASrL,GACP,OAAOj2D,KAAKuR,WAAW0kD,EAAU,GAAIA,EAAU,GACjD,CAMAsL,kBAAkBpL,GAChB,OACEn2D,KAAKyJ,MAAQ0sD,EAAU1sD,MACvB0sD,EAAUxsD,MAAQ3J,KAAK2J,MACvB3J,KAAK0J,MAAQysD,EAAUzsD,MACvBysD,EAAUvsD,MAAQ5J,KAAK4J,IAE3B,CAOA2H,WAAWpI,EAAGuG,GACZ,OAAO1P,KAAKyJ,MAAQN,GAAKA,GAAKnJ,KAAK2J,MAAQ3J,KAAK0J,MAAQgG,GAAKA,GAAK1P,KAAK4J,IACzE,CAMAyI,OAAO8jD,GACL,OACEn2D,KAAKyJ,MAAQ0sD,EAAU1sD,MACvBzJ,KAAK0J,MAAQysD,EAAUzsD,MACvB1J,KAAK2J,MAAQwsD,EAAUxsD,MACvB3J,KAAK4J,MAAQusD,EAAUvsD,IAE3B,CAKA43D,OAAOrL,GACDA,EAAU1sD,KAAOzJ,KAAKyJ,OACxBzJ,KAAKyJ,KAAO0sD,EAAU1sD,MAEpB0sD,EAAUxsD,KAAO3J,KAAK2J,OACxB3J,KAAK2J,KAAOwsD,EAAUxsD,MAEpBwsD,EAAUzsD,KAAO1J,KAAK0J,OACxB1J,KAAK0J,KAAOysD,EAAUzsD,MAEpBysD,EAAUvsD,KAAO5J,KAAK4J,OACxB5J,KAAK4J,KAAOusD,EAAUvsD,KAE1B,CAKAwxC,YACE,OAAOp7C,KAAK4J,KAAO5J,KAAK0J,KAAO,CACjC,CAKA2gC,UACE,MAAO,CAACrqC,KAAK+zC,WAAY/zC,KAAKo7C,YAChC,CAKArH,WACE,OAAO/zC,KAAK2J,KAAO3J,KAAKyJ,KAAO,CACjC,CAMAsK,WAAWoiD,GACT,OACEn2D,KAAKyJ,MAAQ0sD,EAAUxsD,MACvB3J,KAAK2J,MAAQwsD,EAAU1sD,MACvBzJ,KAAK0J,MAAQysD,EAAUvsD,MACvB5J,KAAK4J,MAAQusD,EAAUzsD,IAE3B,EAWK,SAAS,GAAeD,EAAME,EAAMD,EAAME,EAAMusD,GACrD,YAAkBpqD,IAAdoqD,GACFA,EAAU1sD,KAAOA,EACjB0sD,EAAUxsD,KAAOA,EACjBwsD,EAAUzsD,KAAOA,EACjBysD,EAAUvsD,KAAOA,EACVusD,GAEF,IAAIkL,GAAU53D,EAAME,EAAMD,EAAME,EACzC,CAEA,UCymBA,OA5tBA,cAAsC,GAIpCwC,YAAYq1D,GACV1yD,MAAM0yD,GAMNzhE,KAAK0hE,eAAgB,EAMrB1hE,KAAK2hE,gBAAkB,KAMvB3hE,KAAK4hE,mBAML5hE,KAAK6hE,mBAAqB,KAM1B7hE,KAAK8hE,iBAML9hE,KAAK+hE,cAAgB,GAMrB/hE,KAAKgiE,WAAY,EAMjBhiE,KAAK6tD,UxG2GA,CAACpvD,IAAUA,KAAU,KAAW,KwGrGrCuB,KAAKiiE,cAAgB,IAAI,GAAU,EAAG,EAAG,EAAG,EAC9C,CAOAC,eAAe1sC,GACb,MAAMisC,EAAYzhE,KAAKs2D,WACjB6L,EAAY3sC,EAAKE,WACjB0sC,EAAyBX,EAAUY,4BACzC,OACEF,GAAaxsC,IACbwsC,GAAaxsC,IACZwsC,GAAaxsC,KAAoBysC,CAEtC,CASAE,QAAQ3lC,EAAGxzB,EAAGuG,EAAG+3B,GACf,MAAMsC,EAAatC,EAAWsC,WACxBv1B,EAAaizB,EAAWpE,UAAU7uB,WAClCitD,EAAYzhE,KAAKs2D,WAEvB,IAAI9gC,EADeisC,EAAU16B,YACPu7B,QAAQ3lC,EAAGxzB,EAAGuG,EAAGq6B,EAAYv1B,GAUnD,OATIghB,EAAKE,YAAcC,IACjB8rC,EAAUY,6BAA+BZ,EAAUc,aAAe,IAEpEviE,KAAKgiE,WAAY,GAGhBhiE,KAAKkiE,eAAe1sC,KACvBA,EAAOA,EAAKojC,kBAEPpjC,CACT,CAMA8R,QAAQH,GACN,MAAMM,EAAaznC,KAAKynC,WACxB,IAAKA,EACH,OAAO,KAGT,MAAM5W,EAAQ7wB,KAAKs2D,WACbhlD,EAAarG,GACjBw8B,EAAW+6B,2BACXr7B,EAAMxnC,SAGFooC,EAAclX,EAAMpjB,YAC1B,GAAIs6B,IACG12B,EAAmB02B,EAAaz2B,GACnC,OAAO,KAIX,MAAMy4B,EAAatC,EAAWsC,WACxBv1B,EAAaizB,EAAWpE,UAAU7uB,WAClC6uB,EAAYoE,EAAWpE,UACvBrzB,EAAS6gB,EAAMmW,kBACf94B,EAAW8B,EAAOyyD,yBAAyBp/B,EAAU7uB,YACrDkuD,EAAiB1yD,EAAO2yD,kBAAkBl7B,EAAWsC,YAE3D,IACE,IAAIpN,EAAIzuB,EAASyyD,kBAAkBt9B,EAAUp0B,YAC7C0tB,GAAKzuB,EAASopB,eACZqF,EACF,CACA,MAAMs5B,EAAY/nD,EAAS00D,yBAAyBtxD,EAAYqrB,GAC1DnH,EAAOxlB,EAAOsyD,QAClB3lC,EACAs5B,EAAU,GACVA,EAAU,GACVlsB,EACAv1B,GAEF,KACIghB,aAAgB,IAAaA,aAAgB,KAC9CA,aAAgB,IAAcA,EAAKE,aAAeC,GAEnD,OAAO,KAGT,GAAIH,EAAKE,aAAeC,GACtB,SAGF,MAAMktC,EAAa30D,EAASk8B,UAAUzN,GAChCmmC,EAAWl6B,GAAO16B,EAAS+yD,YAAYtkC,IACvComC,EAAiB70D,EAAS4wB,cAAcnC,GAExCu6B,EAAMx4D,KAAKQ,MACfwjE,IACIpxD,EAAW,GAAKuxD,EAAW,IAAME,EACjC9M,EAAU,GAAK6M,EAAS,KAGxB3L,EAAMz4D,KAAKQ,MACfwjE,IACIG,EAAW,GAAKvxD,EAAW,IAAMyxD,EACjC9M,EAAU,GAAK6M,EAAS,KAGxBlF,EAASl/D,KAAK4W,MAClBotD,EAAiB1yD,EAAOgzD,uBAAuB3/B,EAAU7uB,aAG3D,OAAOxU,KAAKu5C,aAAa/jB,EAAKsU,WAAYotB,EAAM0G,EAAQzG,EAAMyG,EAChE,CAEA,OAAO,IACT,CAQA7H,mBAAmBC,EAAOv3B,EAAMjJ,GAC9B,QAAIx1B,KAAKkiE,eAAe1sC,IACfzmB,MAAMgnD,mBAAmBC,EAAOv3B,EAAMjJ,EAGjD,CAOA4S,aAAaX,GACX,QAASznC,KAAKs2D,WAAWvvB,WAC3B,CAQAsB,YAAYZ,EAAYntB,GACtB,MAAM2rB,EAAawB,EAAWG,iBAAiBH,EAAWw7B,YACpD5/B,EAAYoE,EAAWpE,UACvB7uB,EAAa6uB,EAAU7uB,WACvB0uD,EAAiB7/B,EAAUp0B,WAC3Bk0D,EAAa9/B,EAAUnwB,OACvBC,EAAWkwB,EAAUlwB,SACrB42B,EAAatC,EAAWsC,WAExB03B,EAAYzhE,KAAKs2D,WACjB8M,EAAa3B,EAAU16B,YACvBs8B,EAAiBD,EAAWplD,cAC5B9P,EAAWk1D,EAAWX,yBAAyBjuD,GAC/CmoB,EAAIzuB,EAASyyD,kBAAkBuC,EAAgBE,EAAWE,YAC1DP,EAAiB70D,EAAS4wB,cAAcnC,GAE9C,IAAIjwB,EAAS+6B,EAAW/6B,OACxB,MAAMuC,EAAaw4B,EAAWpE,UAAUp0B,WAClCyzD,EAAiBU,EAAWT,kBAAkB54B,GAE9C71B,EAAQxV,KAAK4W,MAAO,GAAS5I,GAAUuC,EAAc86B,GACrDjgC,EAASpL,KAAK4W,MAAO,GAAU5I,GAAUuC,EAAc86B,GAEvDhC,EACJ9B,EAAWv5B,QAAU+L,GAAewtB,EAAWv5B,OAAQ8H,GACrDuzB,IACFr7B,EAASmH,GACPnH,EACA+L,GAAewtB,EAAWv5B,OAAQ8H,KAItC,MAAMrD,EAAM4xD,EAAiB7uD,EAAS,EAAIwuD,EACpCtxD,EAAM2xD,EAAiBj5D,EAAU,EAAI44D,EACrCa,EAAe,CACnBJ,EAAW,GAAKhyD,EAChBgyD,EAAW,GAAK/xD,EAChB+xD,EAAW,GAAKhyD,EAChBgyD,EAAW,GAAK/xD,GAGZ+kD,EAAYjoD,EAAS2yD,0BAA0Bn0D,EAAQiwB,GAKvD6mC,EAAiB,CAAC,EACxBA,EAAe7mC,GAAK,CAAC,EAErB,MAAM8mC,EAAkBzjE,KAAKk2D,uBAC3BkN,EACA5uD,EACAgvD,GAGI3V,EAAY7tD,KAAK6tD,UACjB6V,EAAe1jE,KAAKiiE,cAC1BjiE,KAAKgiE,WAAY,EACjB,MAAM2B,EAAWxwD,EACbF,GACEowB,EAAUnwB,OACVjE,EACAkE,EACAs0B,EAAWr0B,WAEbrH,EACJ,IAAK,IAAI5C,EAAIgtD,EAAU1sD,KAAMN,GAAKgtD,EAAUxsD,OAAQR,EAClD,IAAK,IAAIuG,EAAIymD,EAAUzsD,KAAMgG,GAAKymD,EAAUvsD,OAAQ8F,EAAG,CACrD,GACEyD,IACCjF,EAAS01D,4BAA4B,CAACjnC,EAAGxzB,EAAGuG,GAAIi0D,GAEjD,SAEF,MAAMnuC,EAAOx1B,KAAKsiE,QAAQ3lC,EAAGxzB,EAAGuG,EAAG+3B,GACnC,GAAIznC,KAAKkiE,eAAe1sC,GAAO,CAC7B,MAAMquC,EAAM,EAAO7jE,MACnB,GAAIw1B,EAAKE,YAAcC,GAAkB,CACvC6tC,EAAe7mC,GAAGnH,EAAKygC,UAAUxJ,YAAcj3B,EAC/C,IAAIyjC,EAAezjC,EAAKyjC,aAAa4K,GACjC5K,GAAuC,IAAvBhzB,EAAW9P,UAE7BX,EAAK0jC,cAAc2K,GACnB5K,GAAe,GAGdj5D,KAAKgiE,YACL/I,GAAiBj5D,KAAK+hE,cAAc7lD,SAASsZ,KAE9Cx1B,KAAKgiE,WAAY,EAErB,CACA,GAA4C,IAAxCxsC,EAAKujC,SAAS8K,EAAKp8B,EAAWuxB,MAEhC,QAEJ,CAEA,MAAM8K,EAAiB51D,EAAS61D,2BAC9BvuC,EAAKygC,UACLyN,EACA7V,GAGF,IAAImW,GAAU,EACVF,IACFE,EAAUP,EAAgB9mC,EAAI,EAAGmnC,IAE9BE,GACH91D,EAAS+1D,gCACPzuC,EAAKygC,UACLwN,EACAC,EACA7V,EAGN,CAGF,MAAMqW,EACFnB,EAAiBG,EAAkBn5B,EAAc24B,EAGrDvhD,GACEnhB,KAAK+2D,eACLtvB,EAAWr0B,KAAK,GAAK,EACrBq0B,EAAWr0B,KAAK,GAAK,EACrB,EAAI22B,EACJ,EAAIA,EACJ52B,GACCe,EAAQ,GACRpK,EAAS,GAGZ,MAAMonD,EAAkB,GAAkBlxD,KAAK+2D,gBAE/C/2D,KAAKq3D,aAAa/8C,EAAQ42C,EAAiBlxD,KAAK62B,cAAc4Q,IAC9D,MAAMkF,EAAU3sC,KAAK2sC,QACfJ,EAASI,EAAQJ,OAEvB5qB,GAAY3hB,KAAK02D,sBAAuB12D,KAAK+2D,gBAG7C51C,GACEnhB,KAAK82D,cACL5iD,EAAQ,EACRpK,EAAS,EACTo6D,EACAA,EACA,GACChwD,EAAQ,GACRpK,EAAS,GAGRyiC,EAAOr4B,OAASA,GAASq4B,EAAOziC,QAAUA,GAC5CyiC,EAAOr4B,MAAQA,EACfq4B,EAAOziC,OAASA,GACN9J,KAAKg3D,iBACfrqB,EAAQC,UAAU,EAAG,EAAG14B,EAAOpK,GAG7Bi+B,GACF/nC,KAAK23D,cAAchrB,EAASlF,EAAYM,GAGrCq7B,EAAWe,mBACdx3B,EAAQmxB,uBAAwB,GAGlC99D,KAAKm4D,UAAUxrB,EAASlF,GAExBznC,KAAK+hE,cAAcjiE,OAAS,EAE5B,IAGIskE,EAAOC,EAAQC,EAHf/O,EAAKn8C,OAAO3Z,KAAK+jE,GAAgB78B,IAAIoF,QACzCwpB,EAAG7pD,KAAKkP,IAIiB,IAAvBqrB,EAAW9P,SACTn2B,KAAKg3D,kBACLoM,EAAWmB,UAAU98B,EAAWpE,UAAU7uB,aAI5C4vD,EAAQ,GACRC,EAAS,IAHT9O,EAAKA,EAAGrQ,UAKV,IAAK,IAAI7mD,EAAIk3D,EAAGz1D,OAAS,EAAGzB,GAAK,IAAKA,EAAG,CACvC,MAAMmmE,EAAWjP,EAAGl3D,GACdomE,EAAuBrB,EAAWsB,iBACtCF,EACAz6B,EACAv1B,GAGImwD,EADoBz2D,EAAS4wB,cAAc0lC,GACRzB,EACnC5xD,EAAKszD,EAAqB,GAAKE,EAAeT,EAC9C9yD,EAAKqzD,EAAqB,GAAKE,EAAeT,EAC9CU,EAAkB12D,EAAS00D,yBAC/B,GAAWW,GACXiB,GAEIK,EAAmB32D,EAASkyD,mBAAmBwE,GAC/C1d,EAASj8C,GAAejL,KAAK82D,cAAe,CAC/C4L,GAAkBmC,EAAiB,GAAKtB,EAAa,IACpDR,EACDL,GAAkBa,EAAa,GAAKsB,EAAiB,IACpD9B,IAEE+B,EACJpC,EAAiBU,EAAWJ,uBAAuBxuD,GAC/CuwD,EAAcvB,EAAegB,GACnC,IAAK,MAAMQ,KAAgBD,EAAa,CACtC,MAAMvvC,EACJuvC,EAAYC,GAER/O,EAAYzgC,EAAKygC,UAGjBgP,EAASL,EAAgB,GAAK3O,EAAU,GACxCiP,EAAQxmE,KAAK4W,MAAM4xC,EAAO,IAAM+d,EAAS,GAAK9zD,GAC9Cg0D,EAASP,EAAgB,GAAK3O,EAAU,GACxCmP,EAAQ1mE,KAAK4W,MAAM4xC,EAAO,IAAMie,EAAS,GAAK/zD,GAC9CjI,EAAIzK,KAAK4W,MAAM4xC,EAAO,GAAK+d,EAAS9zD,GACpCzB,EAAIhR,KAAK4W,MAAM4xC,EAAO,GAAKie,EAAS/zD,GACpCuwB,EAAIujC,EAAQ/7D,EACZpE,EAAIqgE,EAAQ11D,EACZ8oD,EAAa77B,IAAM6nC,EAEnBvL,EACJT,GAA+D,IAAjDhjC,EAAKujC,SAAS,EAAO/4D,MAAOynC,EAAWuxB,MACvD,IAAIqM,GAAe,EACnB,IAAKpM,EACH,GAAImL,EAAO,CAETE,EAAc,CAACn7D,EAAGuG,EAAGvG,EAAIw4B,EAAGjyB,EAAGvG,EAAIw4B,EAAGjyB,EAAI3K,EAAGoE,EAAGuG,EAAI3K,GACpD,IAAK,IAAI1G,EAAI,EAAG0S,EAAKqzD,EAAMtkE,OAAQzB,EAAI0S,IAAM1S,EAC3C,GAAIs+B,IAAM6nC,GAAYA,EAAWH,EAAOhmE,GAAI,CAC1C,MAAM61D,EAAOkQ,EAAM/lE,GAEjB0V,GACE,CAAC5K,EAAGuG,EAAGvG,EAAIw4B,EAAGjyB,EAAI3K,GAClB,CAACmvD,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,OAG9BmR,IACH14B,EAAQ+D,OACR20B,GAAe,GAEjB14B,EAAQujB,YAERvjB,EAAQwjB,OAAOmU,EAAY,GAAIA,EAAY,IAC3C33B,EAAQoI,OAAOuvB,EAAY,GAAIA,EAAY,IAC3C33B,EAAQoI,OAAOuvB,EAAY,GAAIA,EAAY,IAC3C33B,EAAQoI,OAAOuvB,EAAY,GAAIA,EAAY,IAE3C33B,EAAQwjB,OAAO+D,EAAK,GAAIA,EAAK,IAC7BvnB,EAAQoI,OAAOmf,EAAK,GAAIA,EAAK,IAC7BvnB,EAAQoI,OAAOmf,EAAK,GAAIA,EAAK,IAC7BvnB,EAAQoI,OAAOmf,EAAK,GAAIA,EAAK,IAC7BvnB,EAAQunB,OAEZ,CAEFkQ,EAAMlkE,KAAKokE,GACXD,EAAOnkE,KAAKskE,EACd,MACE73B,EAAQC,UAAUzjC,EAAGuG,EAAGiyB,EAAG58B,GAG/B/E,KAAKslE,cACH9vC,EACAiS,EACAt+B,EACAuG,EACAiyB,EACA58B,EACA+/D,EACAtM,GAEE4L,IAAUnL,GACRoM,GACF14B,EAAQsE,UAEVjxC,KAAK+hE,cAAcwD,QAAQ/vC,IAE3Bx1B,KAAK+hE,cAAc7hE,KAAKs1B,GAE1Bx1B,KAAKwlE,gBAAgB/9B,EAAWg+B,UAAWrC,EAAY5tC,EACzD,CACF,CAiCA,OA/BAx1B,KAAK8hE,iBAAmBuB,EACxBrjE,KAAK62D,mBAAqBkM,EAC1B/iE,KAAK0hE,eACF1hE,KAAK2hE,kBAAoBtvD,EAAOrS,KAAK2hE,gBAAiB4B,GACzDvjE,KAAK2hE,gBAAkB4B,EACvBvjE,KAAK4hE,mBAAqB73B,EAC1B/pC,KAAK6hE,mBAAqBrtD,EAE1BxU,KAAK0lE,kBACHj+B,EACA27B,EACAl1D,EACA67B,EACAv1B,EACA9H,EACAiwB,EACA8kC,EAAUc,cAEZviE,KAAK2lE,oBAAoBl+B,EAAY27B,GAErCpjE,KAAKo4D,WAAWzrB,EAASlF,GAErBxB,EAAWv5B,QACbigC,EAAQsE,UAEVtE,EAAQmxB,uBAAwB,EAE5B5M,IAAoB3kB,EAAOpqB,MAAMlK,YACnCs0B,EAAOpqB,MAAMlK,UAAYi5C,GAGpBlxD,KAAK42D,SACd,CAYA0O,cAAc9vC,EAAMiS,EAAYt+B,EAAGuG,EAAGiyB,EAAG58B,EAAG64D,EAAQpF,GAClD,MAAM/lB,EAAQzyC,KAAK4lE,aAAapwC,GAChC,IAAKid,EACH,OAEF,MAAMoxB,EAAM,EAAO7jE,MACbimC,EAAawB,EAAWG,iBAAiBH,EAAWw7B,YACpD9vB,EACJlN,EAAW9P,SACVqiC,EAAahjC,EAAKujC,SAAS8K,EAAKp8B,EAAWuxB,MAAQ,GAChD6M,EAAe1yB,IAAUnzC,KAAK2sC,QAAQgE,YACxCk1B,IACF7lE,KAAK2sC,QAAQ+D,OACb1wC,KAAK2sC,QAAQgE,YAAcwC,GAE7BnzC,KAAK2sC,QAAQqE,UACXyB,EACAmrB,EACAA,EACAnrB,EAAMv+B,MAAQ,EAAI0pD,EAClBnrB,EAAM3oC,OAAS,EAAI8zD,EACnBz0D,EACAuG,EACAiyB,EACA58B,GAGE8gE,GACF7lE,KAAK2sC,QAAQsE,UAEXkC,IAAUlN,EAAW9P,QACvBsR,EAAWpI,SAAU,EACZm5B,GACThjC,EAAK0jC,cAAc2K,EAEvB,CAKA/5B,WACE,MAAM6C,EAAU3sC,KAAK2sC,QACrB,OAAOA,EAAUA,EAAQJ,OAAS,IACpC,CAQAq5B,aAAapwC,GACX,OAAOA,EAAKsU,UACd,CAOA67B,oBAAoBl+B,EAAY27B,GAC9B,GAAIA,EAAW3rB,iBAAkB,CAM/B,MAAMquB,EAAqB,SAAU1C,EAAYz8B,EAAKc,GACpD,MAAMs+B,EAAgB,EAAO3C,GACzB2C,KAAiBt+B,EAAWg+B,WAC9BrC,EAAW4C,YACTv+B,EAAWpE,UAAU7uB,WACrBizB,EAAWg+B,UAAUM,GAG3B,EAAE3oD,KAAK,KAAMgmD,GAEb37B,EAAWw+B,oBAAoB/lE,KAC4B,EAI7D,CACF,CAQAslE,gBAAgBC,EAAWrC,EAAY5tC,GAErC,MAAMuwC,EAAgB,EAAO3C,GACvB2C,KAAiBN,IACrBA,EAAUM,GAAiB,CAAC,GAE9BN,EAAUM,GAAevwC,EAAKR,WAAY,CAC5C,CAoBA0wC,kBACEj+B,EACA27B,EACAl1D,EACA67B,EACAv1B,EACA9H,EACA83D,EACA0B,EACAC,GAEA,MAAMJ,EAAgB,EAAO3C,GACvB2C,KAAiBt+B,EAAW2+B,cAChC3+B,EAAW2+B,YAAYL,GAAiB,CAAC,GAE3C,MAAMK,EAAc3+B,EAAW2+B,YAAYL,GACrCM,EAAY5+B,EAAW4+B,UACvB7vC,EAAUtoB,EAASopB,aACnBnkB,EAAWs0B,EAAWpE,UAAUlwB,SAChCwwD,EAAWxwD,EACbF,GACEw0B,EAAWpE,UAAUnwB,OACrBu0B,EAAWpE,UAAUp0B,WACrBkE,EACAs0B,EAAWr0B,WAEbrH,EACJ,IACIypB,EAAM2gC,EAAW4M,EAAgB55D,EAAGuG,EAAGitB,EADvC2pC,EAAY,EAEhB,IAAK3pC,EAAInG,EAASmG,GAAK6nC,IAAY7nC,EAGjC,IAFAw5B,EAAYjoD,EAAS2yD,0BAA0Bn0D,EAAQiwB,EAAGw5B,GAC1D4M,EAAiB70D,EAAS4wB,cAAcnC,GACnCxzB,EAAIgtD,EAAU1sD,KAAMN,GAAKgtD,EAAUxsD,OAAQR,EAC9C,IAAKuG,EAAIymD,EAAUzsD,KAAMgG,GAAKymD,EAAUvsD,OAAQ8F,EAE5CyD,IACCjF,EAAS01D,4BAA4B,CAACjnC,EAAGxzB,EAAGuG,GAAIi0D,KAI/Ca,EAAW7nC,GAAKupC,KAChBI,EACF9wC,EAAO4tC,EAAWd,QAAQ3lC,EAAGxzB,EAAGuG,EAAGq6B,EAAYv1B,GAC3CghB,EAAKE,YAAcC,KACrBywC,EAAY5wC,EAAKR,WAAY,EACxBqxC,EAAUhyC,YAAYmB,EAAKR,WAC9BqxC,EAAUzyC,QAAQ,CAChB4B,EACAuwC,EACA73D,EAASq4D,mBAAmB/wC,EAAKygC,WACjC8M,UAIeh3D,IAAjBo6D,GACFA,EAAa3wC,IAGf4tC,EAAWoD,QAAQ7pC,EAAGxzB,EAAGuG,EAAG8E,IAKpC4uD,EAAWqD,gBAAgBH,EAAW9xD,EACxC,GCmZF,OAxmCA,cAAsC,GAUpCpI,YACEugC,EACA5C,EACAr9B,EACAuL,EACAu6C,EACAhvC,EACAkjD,GAEA33D,QAMA/O,KAAK2mE,SAAWh6B,EAMhB3sC,KAAK8rD,YAAc/hB,EAMnB/pC,KAAKyM,QAAUC,EAMf1M,KAAK4mE,WAAa3uD,EAMlBjY,KAAK6mE,mBAAqB5uD,EACtB,GAAQvZ,KAAKsX,MAAMiC,EAAU,GAAIA,EAAU,IAAK,IAChD,EAMJjY,KAAK6uD,cAAgB2D,EAMrBxyD,KAAK8mE,kBAAoBtjD,EAMzBxjB,KAAK+mE,eAAiBL,EAMtB1mE,KAAKgnE,kBAAoB,KAMzBhnE,KAAKinE,oBAAsB,KAM3BjnE,KAAKknE,kBAAoB,KAMzBlnE,KAAKmnE,WAAa,KAMlBnnE,KAAKonE,aAAe,KAMpBpnE,KAAKq2C,OAAS,KAMdr2C,KAAKqnE,cAAgB,EAMrBrnE,KAAKsnE,cAAgB,EAMrBtnE,KAAKunE,aAAe,EAMpBvnE,KAAKwnE,cAAgB,EAMrBxnE,KAAKynE,cAAgB,EAMrBznE,KAAK0nE,cAAgB,EAMrB1nE,KAAK2nE,sBAAuB,EAM5B3nE,KAAK4nE,eAAiB,EAMtB5nE,KAAK6nE,YAAc,CAAC,EAAG,GAMvB7nE,KAAK8nE,YAAc,EAMnB9nE,KAAKy2C,MAAQ,GAMbz2C,KAAK4oD,aAAe,EAMpB5oD,KAAK6oD,aAAe,EAMpB7oD,KAAK8oD,qBAAsB,EAM3B9oD,KAAK+oD,cAAgB,EAMrB/oD,KAAK+nE,WAAa,CAAC,EAAG,GAMtB/nE,KAAKgpD,eAAiB,KAMtBhpD,KAAKkpD,iBAAmB,KAMxBlpD,KAAKopD,WAAa,KAMlBppD,KAAK4uD,kBAAoB,GAMzB5uD,KAAKgoE,mBtF5OA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EsF6OvB,CASAC,YAAY/1D,EAAiBvU,EAAQuG,EAAKiO,GACxC,IAAKnS,KAAKq2C,OACR,OAEF,MAAMyb,EAAmB1vC,GACvBlQ,EACAvU,EACAuG,EACAiO,EACAnS,KAAK4mE,WACL5mE,KAAK4uD,mBAEDjiB,EAAU3sC,KAAK2mE,SACfuB,EAAiBloE,KAAKgoE,mBACtB70B,EAAQxG,EAAQgE,YACI,GAAtB3wC,KAAKwnE,gBACP76B,EAAQgE,YAAcwC,EAAQnzC,KAAKwnE,eAErC,IAAIr0D,EAAWnT,KAAK4nE,eACY,IAA5B5nE,KAAK6mE,qBACP1zD,GAAYnT,KAAK6uD,eAEf7uD,KAAK2nE,uBACPx0D,GAAYnT,KAAK6uD,eAEnB,IAAK,IAAIxwD,EAAI,EAAG0S,EAAK+gD,EAAiBhyD,OAAQzB,EAAI0S,EAAI1S,GAAK,EAAG,CAC5D,MAAM8K,EAAI2oD,EAAiBzzD,GAAK2B,KAAKqnE,cAC/B33D,EAAIoiD,EAAiBzzD,EAAI,GAAK2B,KAAKsnE,cACzC,GACe,IAAbn0D,GACuB,GAAvBnT,KAAK6nE,YAAY,IACM,GAAvB7nE,KAAK6nE,YAAY,GACjB,CACA,MAAM1jC,EAAUh7B,EAAInJ,KAAKqnE,cACnBjjC,EAAU10B,EAAI1P,KAAKsnE,cACzBnmD,GACE+mD,EACA/jC,EACAC,EACA,EACA,EACAjxB,GACCgxB,GACAC,GAEHuI,EAAQiE,aAAa3lC,MAAM0hC,EAASu7B,GACpCv7B,EAAQnoB,UAAU2f,EAASC,GAC3BuI,EAAQvoB,MAAMpkB,KAAK6nE,YAAY,GAAI7nE,KAAK6nE,YAAY,IACpDl7B,EAAQqE,UACNhxC,KAAKq2C,OACLr2C,KAAKynE,cACLznE,KAAK0nE,cACL1nE,KAAK8nE,YACL9nE,KAAKunE,cACJvnE,KAAKqnE,eACLrnE,KAAKsnE,cACNtnE,KAAK8nE,YACL9nE,KAAKunE,cAEP56B,EAAQiE,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,EACtC,MACEjE,EAAQqE,UACNhxC,KAAKq2C,OACLr2C,KAAKynE,cACLznE,KAAK0nE,cACL1nE,KAAK8nE,YACL9nE,KAAKunE,aACLp+D,EACAuG,EACA1P,KAAK8nE,YACL9nE,KAAKunE,aAGX,CAC0B,GAAtBvnE,KAAKwnE,gBACP76B,EAAQgE,YAAcwC,EAE1B,CASAg1B,UAAUj2D,EAAiBvU,EAAQuG,EAAKiO,GACtC,IAAKnS,KAAKopD,YAA6B,KAAfppD,KAAKy2C,MAC3B,OAEEz2C,KAAKgpD,gBACPhpD,KAAKooE,qBAAqBpoE,KAAKgpD,gBAE7BhpD,KAAKkpD,kBACPlpD,KAAKqoE,uBAAuBroE,KAAKkpD,kBAEnClpD,KAAKsoE,qBAAqBtoE,KAAKopD,YAC/B,MAAM0I,EAAmB1vC,GACvBlQ,EACAvU,EACAuG,EACAiO,EACAnS,KAAK4mE,WACL5mE,KAAK4uD,mBAEDjiB,EAAU3sC,KAAK2mE,SACrB,IAAIxzD,EAAWnT,KAAK+oD,cAOpB,IANgC,IAA5B/oD,KAAK6mE,qBACP1zD,GAAYnT,KAAK6uD,eAEf7uD,KAAK8oD,sBACP31C,GAAYnT,KAAK6uD,eAEZlxD,EAASuG,EAAKvG,GAAUwU,EAAQ,CACrC,MAAMhJ,EAAI2oD,EAAiBn0D,GAAUqC,KAAK4oD,aACpCl5C,EAAIoiD,EAAiBn0D,EAAS,GAAKqC,KAAK6oD,aAE/B,IAAb11C,GACsB,GAAtBnT,KAAK+nE,WAAW,IACM,GAAtB/nE,KAAK+nE,WAAW,IAEhBp7B,EAAQnoB,UAAUrb,EAAInJ,KAAK4oD,aAAcl5C,EAAI1P,KAAK6oD,cAClDlc,EAAQxoB,OAAOhR,GACfw5B,EAAQnoB,UAAUxkB,KAAK4oD,aAAc5oD,KAAK6oD,cAC1Clc,EAAQvoB,MAAMpkB,KAAK+nE,WAAW,GAAI/nE,KAAK+nE,WAAW,IAC9C/nE,KAAKkpD,kBACPvc,EAAQ47B,WAAWvoE,KAAKy2C,MAAO,EAAG,GAEhCz2C,KAAKgpD,gBACPrc,EAAQ67B,SAASxoE,KAAKy2C,MAAO,EAAG,GAElC9J,EAAQiE,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,KAEhC5wC,KAAKkpD,kBACPvc,EAAQ47B,WAAWvoE,KAAKy2C,MAAOttC,EAAGuG,GAEhC1P,KAAKgpD,gBACPrc,EAAQ67B,SAASxoE,KAAKy2C,MAAOttC,EAAGuG,GAGtC,CACF,CAWA+4D,cAAcv2D,EAAiBvU,EAAQuG,EAAKiO,EAAQu2D,GAClD,MAAM/7B,EAAU3sC,KAAK2mE,SACf7U,EAAmB1vC,GACvBlQ,EACAvU,EACAuG,EACAiO,EACAnS,KAAK4mE,WACL5mE,KAAK4uD,mBAEPjiB,EAAQwjB,OAAO2B,EAAiB,GAAIA,EAAiB,IACrD,IAAIhyD,EAASgyD,EAAiBhyD,OAC1B4oE,IACF5oE,GAAU,GAEZ,IAAK,IAAIzB,EAAI,EAAGA,EAAIyB,EAAQzB,GAAK,EAC/BsuC,EAAQoI,OAAO+c,EAAiBzzD,GAAIyzD,EAAiBzzD,EAAI,IAK3D,OAHIqqE,GACF/7B,EAAQqI,YAEH9wC,CACT,CAUAykE,WAAWz2D,EAAiBvU,EAAQwoB,EAAMhU,GACxC,IAAK,IAAI9T,EAAI,EAAG0S,EAAKoV,EAAKrmB,OAAQzB,EAAI0S,IAAM1S,EAC1CV,EAASqC,KAAKyoE,cACZv2D,EACAvU,EACAwoB,EAAK9nB,GACL8T,GACA,GAGJ,OAAOxU,CACT,CASA+jD,WAAW3nC,GACT,GAAKhG,GAAW/T,KAAKyM,QAASsN,EAAStM,aAAvC,CAGA,GAAIzN,KAAKmnE,YAAcnnE,KAAKonE,aAAc,CACpCpnE,KAAKmnE,YACPnnE,KAAKooE,qBAAqBpoE,KAAKmnE,YAE7BnnE,KAAKonE,cACPpnE,KAAKqoE,uBAAuBroE,KAAKonE,cAEnC,MAAMtV,EnFrKL,SAAyB8W,EAAgB3wD,EAAWhH,GACzD,MAAMiB,EAAkB02D,EAAe1jD,qBACvC,IAAKhT,EACH,OAAO,KAET,MAAMC,EAASy2D,EAAerjD,YAC9B,OAAOnD,GACLlQ,EACA,EACAA,EAAgBpS,OAChBqS,EACA8F,EACAhH,EAEJ,CmFuJ+B43D,CACvB9uD,EACA/Z,KAAK4mE,WACL5mE,KAAK4uD,mBAEDz9C,EAAK2gD,EAAiB,GAAKA,EAAiB,GAC5C1gD,EAAK0gD,EAAiB,GAAKA,EAAiB,GAC5Cn8C,EAASjX,KAAKuK,KAAKkI,EAAKA,EAAKC,EAAKA,GAClCu7B,EAAU3sC,KAAK2mE,SACrBh6B,EAAQujB,YACRvjB,EAAQ+H,IACNod,EAAiB,GACjBA,EAAiB,GACjBn8C,EACA,EACA,EAAIjX,KAAKyN,IAEPnM,KAAKmnE,YACPx6B,EAAQ2E,OAENtxC,KAAKonE,cACPz6B,EAAQoF,QAEZ,CACmB,KAAf/xC,KAAKy2C,OACPz2C,KAAKmoE,UAAUpuD,EAASjH,YAAa,EAAG,EAAG,EAjC7C,CAmCF,CASAysC,SAASp9B,GACPniB,KAAK4iD,mBAAmBzgC,EAAM+vB,UAAW/vB,EAAMmwB,aAC/CtyC,KAAK6iD,cAAc1gC,EAAM2nB,YACzB9pC,KAAKgjD,aAAa7gC,EAAMw0B,UAC1B,CAKA/F,aAAa34B,GACXjY,KAAK4mE,WAAa3uD,CACpB,CASAwpC,aAAa1nC,GAEX,OADaA,EAAST,WAEpB,IAAK,QACHtZ,KAAKuiD,UACkD,GAEvD,MACF,IAAK,aACHviD,KAAK+hD,eACuD,GAE5D,MACF,IAAK,UACH/hD,KAAKyiD,YACoD,GAEzD,MACF,IAAK,aACHziD,KAAKmiD,eACuD,GAE5D,MACF,IAAK,kBACHniD,KAAKiiD,oBAC4D,GAIjE,MACF,IAAK,eACHjiD,KAAKqiD,iBACyD,GAE9D,MACF,IAAK,qBACHriD,KAAK6hD,uBAC+D,GAIpE,MACF,IAAK,SACH7hD,KAAK0hD,WACmD,GAK9D,CAYAE,YAAYjoC,EAASwI,GACnB,MAAMpI,EAAWoI,EAAM40B,qBAAN50B,CAA4BxI,GACxCI,GAAahG,GAAW/T,KAAKyM,QAASsN,EAAStM,eAGpDzN,KAAKu/C,SAASp9B,GACdniB,KAAKyhD,aAAa1nC,GACpB,CAQA8nC,uBAAuB9nC,GACrB,MAAM+uD,EAAa/uD,EAASgvD,qBAC5B,IAAK,IAAI1qE,EAAI,EAAG0S,EAAK+3D,EAAWhpE,OAAQzB,EAAI0S,IAAM1S,EAChD2B,KAAKyhD,aAAaqnB,EAAWzqE,GAEjC,CAQAkkD,UAAUxoC,GACJ/Z,KAAK8mE,oBACP/sD,EACEA,EAAS2J,oBACP1jB,KAAK8mE,kBACL9mE,KAAK+mE,iBAIX,MAAM70D,EAAkB6H,EAASmL,qBAC3B/S,EAAS4H,EAASwL,YACpBvlB,KAAKq2C,QACPr2C,KAAKioE,YAAY/1D,EAAiB,EAAGA,EAAgBpS,OAAQqS,GAE5C,KAAfnS,KAAKy2C,OACPz2C,KAAKmoE,UAAUj2D,EAAiB,EAAGA,EAAgBpS,OAAQqS,EAE/D,CAQAgwC,eAAepoC,GACT/Z,KAAK8mE,oBACP/sD,EACEA,EAAS2J,oBACP1jB,KAAK8mE,kBACL9mE,KAAK+mE,iBAIX,MAAM70D,EAAkB6H,EAASmL,qBAC3B/S,EAAS4H,EAASwL,YACpBvlB,KAAKq2C,QACPr2C,KAAKioE,YAAY/1D,EAAiB,EAAGA,EAAgBpS,OAAQqS,GAE5C,KAAfnS,KAAKy2C,OACPz2C,KAAKmoE,UAAUj2D,EAAiB,EAAGA,EAAgBpS,OAAQqS,EAE/D,CAQA4vC,eAAehoC,GASb,GARI/Z,KAAK8mE,oBACP/sD,EACEA,EAAS2J,oBACP1jB,KAAK8mE,kBACL9mE,KAAK+mE,iBAINhzD,GAAW/T,KAAKyM,QAASsN,EAAStM,aAAvC,CAGA,GAAIzN,KAAKonE,aAAc,CACrBpnE,KAAKqoE,uBAAuBroE,KAAKonE,cACjC,MAAMz6B,EAAU3sC,KAAK2mE,SACfz0D,EAAkB6H,EAASmL,qBACjCynB,EAAQujB,YACRlwD,KAAKyoE,cACHv2D,EACA,EACAA,EAAgBpS,OAChBia,EAASwL,aACT,GAEFonB,EAAQoF,QACV,CACA,GAAmB,KAAf/xC,KAAKy2C,MAAc,CACrB,MAAMuyB,EAAejvD,EAASgR,kBAC9B/qB,KAAKmoE,UAAUa,EAAc,EAAG,EAAG,EACrC,CAlBA,CAmBF,CAQA/mB,oBAAoBloC,GACd/Z,KAAK8mE,oBACP/sD,EAEIA,EAAS2J,oBACP1jB,KAAK8mE,kBACL9mE,KAAK+mE,iBAIb,MAAMkC,EAAiBlvD,EAAStM,YAChC,GAAKsG,GAAW/T,KAAKyM,QAASw8D,GAA9B,CAGA,GAAIjpE,KAAKonE,aAAc,CACrBpnE,KAAKqoE,uBAAuBroE,KAAKonE,cACjC,MAAMz6B,EAAU3sC,KAAK2mE,SACfz0D,EAAkB6H,EAASmL,qBACjC,IAAIvnB,EAAS,EACb,MAAMwoB,EAAqCpM,EAASuR,UAC9CnZ,EAAS4H,EAASwL,YACxBonB,EAAQujB,YACR,IAAK,IAAI7xD,EAAI,EAAG0S,EAAKoV,EAAKrmB,OAAQzB,EAAI0S,IAAM1S,EAC1CV,EAASqC,KAAKyoE,cACZv2D,EACAvU,EACAwoB,EAAK9nB,GACL8T,GACA,GAGJw6B,EAAQoF,QACV,CACA,GAAmB,KAAf/xC,KAAKy2C,MAAc,CACrB,MAAMyyB,EAAgBnvD,EAAS0R,mBAC/BzrB,KAAKmoE,UAAUe,EAAe,EAAGA,EAAcppE,OAAQ,EACzD,CAvBA,CAwBF,CAQA2iD,YAAY1oC,GASV,GARI/Z,KAAK8mE,oBACP/sD,EACEA,EAAS2J,oBACP1jB,KAAK8mE,kBACL9mE,KAAK+mE,iBAINhzD,GAAW/T,KAAKyM,QAASsN,EAAStM,aAAvC,CAGA,GAAIzN,KAAKonE,cAAgBpnE,KAAKmnE,WAAY,CACpCnnE,KAAKmnE,YACPnnE,KAAKooE,qBAAqBpoE,KAAKmnE,YAE7BnnE,KAAKonE,cACPpnE,KAAKqoE,uBAAuBroE,KAAKonE,cAEnC,MAAMz6B,EAAU3sC,KAAK2mE,SACrBh6B,EAAQujB,YACRlwD,KAAK2oE,WACH5uD,EAAS8T,6BACT,EAC8B9T,EAASuR,UACvCvR,EAASwL,aAEPvlB,KAAKmnE,YACPx6B,EAAQ2E,OAENtxC,KAAKonE,cACPz6B,EAAQoF,QAEZ,CACA,GAAmB,KAAf/xC,KAAKy2C,MAAc,CACrB,MAAM0yB,EAAoBpvD,EAAS+T,uBACnC9tB,KAAKmoE,UAAUgB,EAAmB,EAAG,EAAG,EAC1C,CA1BA,CA2BF,CAOA9mB,iBAAiBtoC,GASf,GARI/Z,KAAK8mE,oBACP/sD,EACEA,EAAS2J,oBACP1jB,KAAK8mE,kBACL9mE,KAAK+mE,iBAINhzD,GAAW/T,KAAKyM,QAASsN,EAAStM,aAAvC,CAGA,GAAIzN,KAAKonE,cAAgBpnE,KAAKmnE,WAAY,CACpCnnE,KAAKmnE,YACPnnE,KAAKooE,qBAAqBpoE,KAAKmnE,YAE7BnnE,KAAKonE,cACPpnE,KAAKqoE,uBAAuBroE,KAAKonE,cAEnC,MAAMz6B,EAAU3sC,KAAK2mE,SACfz0D,EAAkB6H,EAAS8T,6BACjC,IAAIlwB,EAAS,EACb,MAAMqqB,EAAQjO,EAASmV,WACjB/c,EAAS4H,EAASwL,YACxBonB,EAAQujB,YACR,IAAK,IAAI7xD,EAAI,EAAG0S,EAAKiX,EAAMloB,OAAQzB,EAAI0S,IAAM1S,EAAG,CAC9C,MAAM8nB,EAAO6B,EAAM3pB,GACnBV,EAASqC,KAAK2oE,WAAWz2D,EAAiBvU,EAAQwoB,EAAMhU,EAC1D,CACInS,KAAKmnE,YACPx6B,EAAQ2E,OAENtxC,KAAKonE,cACPz6B,EAAQoF,QAEZ,CACA,GAAmB,KAAf/xC,KAAKy2C,MAAc,CACrB,MAAM2yB,EAAqBrvD,EAASoV,wBACpCnvB,KAAKmoE,UAAUiB,EAAoB,EAAGA,EAAmBtpE,OAAQ,EACnE,CA5BA,CA6BF,CAMAsoE,qBAAqB3e,GACnB,MAAM9c,EAAU3sC,KAAK2mE,SACf0C,EAAmBrpE,KAAKgnE,kBACzBqC,EAMCA,EAAiB/0B,WAAamV,EAAUnV,YAC1C+0B,EAAiB/0B,UAAYmV,EAAUnV,UACvC3H,EAAQ2H,UAAYmV,EAAUnV,YAPhC3H,EAAQ2H,UAAYmV,EAAUnV,UAC9Bt0C,KAAKgnE,kBAAoB,CACvB1yB,UAAWmV,EAAUnV,WAQ3B,CAMA+zB,uBAAuB3e,GACrB,MAAM/c,EAAU3sC,KAAK2mE,SACf2C,EAAqBtpE,KAAKinE,oBAC3BqC,GAkBCA,EAAmBj0B,SAAWqU,EAAYrU,UAC5Ci0B,EAAmBj0B,QAAUqU,EAAYrU,QACzC1I,EAAQ0I,QAAUqU,EAAYrU,SAE3B,GAAOi0B,EAAmB11B,SAAU8V,EAAY9V,WACnDjH,EAAQ6H,YACL80B,EAAmB11B,SAAW8V,EAAY9V,UAG3C01B,EAAmBz1B,gBAAkB6V,EAAY7V,iBACnDy1B,EAAmBz1B,eAAiB6V,EAAY7V,eAChDlH,EAAQkH,eAAiB6V,EAAY7V,gBAEnCy1B,EAAmBx2B,UAAY4W,EAAY5W,WAC7Cw2B,EAAmBx2B,SAAW4W,EAAY5W,SAC1CnG,EAAQmG,SAAW4W,EAAY5W,UAE7Bw2B,EAAmB/0B,WAAamV,EAAYnV,YAC9C+0B,EAAmB/0B,UAAYmV,EAAYnV,UAC3C5H,EAAQ4H,UAAYmV,EAAYnV,WAE9B+0B,EAAmBt2B,YAAc0W,EAAY1W,aAC/Cs2B,EAAmBt2B,WAAa0W,EAAY1W,WAC5CrG,EAAQqG,WAAa0W,EAAY1W,YAE/Bs2B,EAAmB31B,aAAe+V,EAAY/V,cAChD21B,EAAmB31B,YAAc+V,EAAY/V,YAC7ChH,EAAQgH,YAAc+V,EAAY/V,eA5CpChH,EAAQ0I,QAAUqU,EAAYrU,QAC9B1I,EAAQ6H,YAAYkV,EAAY9V,UAChCjH,EAAQkH,eAAiB6V,EAAY7V,eACrClH,EAAQmG,SAAW4W,EAAY5W,SAC/BnG,EAAQ4H,UAAYmV,EAAYnV,UAChC5H,EAAQqG,WAAa0W,EAAY1W,WACjCrG,EAAQgH,YAAc+V,EAAY/V,YAClC3zC,KAAKinE,oBAAsB,CACzB5xB,QAASqU,EAAYrU,QACrBzB,SAAU8V,EAAY9V,SACtBC,eAAgB6V,EAAY7V,eAC5Bf,SAAU4W,EAAY5W,SACtByB,UAAWmV,EAAYnV,UACvBvB,WAAY0W,EAAY1W,WACxBW,YAAa+V,EAAY/V,aAiC/B,CAMA20B,qBAAqB3e,GACnB,MAAMhd,EAAU3sC,KAAK2mE,SACf4C,EAAmBvpE,KAAKknE,kBACxBvrB,EAAYgO,EAAUhO,UACxBgO,EAAUhO,UACV7N,GACCy7B,GAUCA,EAAiBr6B,MAAQya,EAAUza,OACrCq6B,EAAiBr6B,KAAOya,EAAUza,KAClCvC,EAAQuC,KAAOya,EAAUza,MAEvBq6B,EAAiB5tB,WAAaA,IAChC4tB,EAAiB5tB,UAAYA,EAC7BhP,EAAQgP,UAAYA,GAElB4tB,EAAiBttB,cAAgB0N,EAAU1N,eAC7CstB,EAAiBttB,aAAe0N,EAAU1N,aAC1CtP,EAAQsP,aAAe0N,EAAU1N,gBAnBnCtP,EAAQuC,KAAOya,EAAUza,KACzBvC,EAAQgP,UAAYA,EACpBhP,EAAQsP,aAAe0N,EAAU1N,aACjCj8C,KAAKknE,kBAAoB,CACvBh4B,KAAMya,EAAUza,KAChByM,UAAWA,EACXM,aAAc0N,EAAU1N,cAgB9B,CASA2G,mBAAmBtO,EAAWX,GAC5B,GAAKW,EAEE,CACL,MAAM8Q,EAAiB9Q,EAAUR,WACjC9zC,KAAKmnE,WAAa,CAChB7yB,UAAWnI,GACTiZ,GAAkC3X,IAGxC,MAREztC,KAAKmnE,WAAa,KASpB,GAAKxzB,EAEE,CACL,MAAM0R,EAAmB1R,EAAYG,WAC/BwR,EAAqB3R,EAAYgC,aACjC4P,EAAsB5R,EAAYK,cAClCwR,EAA4B7R,EAAYM,oBACxCwR,EAAsB9R,EAAYO,cAClCwR,EAAmB/R,EAAYI,WAC/B4R,EAAwBhS,EAAYQ,gBACpCP,EAAW2R,GAEb5X,GACJ3tC,KAAKonE,aAAe,CAClB/xB,aACyBtpC,IAAvBu5C,EACIA,EACA5X,GACNkG,SACuB,IAArB5zC,KAAK8rD,YACDlY,EACAA,EAASjN,KAAK/9B,GAAMA,EAAI5I,KAAK8rD,cACnCjY,gBACG2R,GrCp4B0B,GqCs4BExlD,KAAK8rD,YACpChZ,cAC0B/mC,IAAxB05C,EACIA,EACA7X,GACN2G,gBACwBxoC,IAArB25C,EACGA,ErCn2BkB,GqCo2BE1lD,KAAK8rD,YAC/B9Y,gBAC4BjnC,IAA1B45C,EACIA,ErCr4BmB,GqCu4BzBhS,YAAaxH,GACXkZ,GAAsCxX,IAG5C,MAzCE7tC,KAAKonE,aAAe,IA0CxB,CAQAvkB,cAAcC,GACZ,IAAI0mB,EACJ,IAAK1mB,KAAgB0mB,EAAY1mB,EAAWzY,WAE1C,YADArqC,KAAKq2C,OAAS,MAGhB,MAAMozB,EAAkB3mB,EAAW7Y,cAAcjqC,KAAK8rD,aAChD4d,EAAc5mB,EAAWjZ,YACzB8/B,EAAc7mB,EAAW1Y,YAC/BpqC,KAAKq2C,OAASyM,EAAWhZ,SAAS9pC,KAAK8rD,aACvC9rD,KAAKqnE,cAAgBqC,EAAY,GAAKD,EACtCzpE,KAAKsnE,cAAgBoC,EAAY,GAAKD,EACtCzpE,KAAKunE,aAAeiC,EAAU,GAAKC,EACnCzpE,KAAKwnE,cAAgB1kB,EAAW5rB,aAChCl3B,KAAKynE,cAAgBkC,EAAY,GACjC3pE,KAAK0nE,cAAgBiC,EAAY,GACjC3pE,KAAK2nE,qBAAuB7kB,EAAWrZ,oBACvCzpC,KAAK4nE,eAAiB9kB,EAAW1jB,cACjC,MAAMwqC,EAAa9mB,EAAWlZ,gBAC9B5pC,KAAK6nE,YAAc,CAChB+B,EAAW,GAAK5pE,KAAK8rD,YAAe2d,EACpCG,EAAW,GAAK5pE,KAAK8rD,YAAe2d,GAEvCzpE,KAAK8nE,YAAc0B,EAAU,GAAKC,CACpC,CAQAzmB,aAAaC,GACX,GAAKA,EAEE,CACL,MAAM8H,EAAgB9H,EAAU/Q,UAChC,GAAK6Y,EAEE,CACL,MAAM8e,EAAqB9e,EAAcjX,WACzC9zC,KAAKgpD,eAAiB,CACpB1U,UAAWnI,GACT09B,GAA0Cp8B,IAGhD,MAREztC,KAAKgpD,eAAiB,KASxB,MAAMgC,EAAkB/H,EAAU3Q,YAClC,GAAK0Y,EAEE,CACL,MAAM8e,EAAuB9e,EAAgBlX,WACvCi2B,EAAyB/e,EAAgBrV,aACzCq0B,EAA0Bhf,EAAgBhX,cAC1Ci2B,EACJjf,EAAgB/W,oBACZi2B,EAA0Blf,EAAgB9W,cAC1Ci2B,EAAuBnf,EAAgBjX,WACvCq2B,EAA4Bpf,EAAgB7W,gBAClDn0C,KAAKkpD,iBAAmB,CACtB7T,aAC6BtpC,IAA3Bg+D,EACIA,EACAr8B,GACNkG,SAAUo2B,GAENr8B,GACJkG,eAAgBo2B,GrCn+BW,EqCs+B3Bn3B,cAC8B/mC,IAA5Bm+D,EACIA,EACAt8B,GACN2G,eAC2BxoC,IAAzBo+D,EACIA,ErCl8BgB,EqCo8BtBn3B,gBACgCjnC,IAA9Bq+D,EACIA,ErCp+BiB,GqCs+BvBz2B,YAAaxH,GACX29B,GAA8Cj8B,IAGpD,MArCE7tC,KAAKkpD,iBAAmB,KAsC1B,MAAMmhB,EAAWpnB,EAAUnG,UACrBoO,EAAcjI,EAAU3F,aACxB6N,EAAclI,EAAU1F,aACxB6N,EAAqBnI,EAAUxZ,oBAC/B4hB,EAAepI,EAAU7jB,cACzB6rB,EAAYhI,EAAUrZ,gBACtB0gC,EAAWrnB,EAAUtM,UACrB4zB,EAAgBtnB,EAAU9F,eAC1BqtB,EAAmBvnB,EAAU5F,kBACnCr9C,KAAKopD,WAAa,CAChBla,UAAmBnjC,IAAbs+D,EAAyBA,EAAW78B,GAC1CmO,eACoB5vC,IAAlBw+D,EAA8BA,EAAgBz8B,GAChDmO,kBACuBlwC,IAArBy+D,EACIA,EACAz8B,IAER/tC,KAAKy2C,WACU1qC,IAAbu+D,EACI76D,MAAM2L,QAAQkvD,GACZA,EAASn6B,QAAO,CAACme,EAAK7lD,EAAGpK,IAAOiwD,GAAOjwD,EAAI,EAAI,IAAMoK,IAAI,IACzD6hE,EACF,GACNtqE,KAAK4oD,kBACa78C,IAAhBm/C,EAA4BlrD,KAAK8rD,YAAcZ,EAAc,EAC/DlrD,KAAK6oD,kBACa98C,IAAhBo/C,EAA4BnrD,KAAK8rD,YAAcX,EAAc,EAC/DnrD,KAAK8oD,yBACoB/8C,IAAvBq/C,GAAmCA,EACrCprD,KAAK+oD,mBAAiCh9C,IAAjBs/C,EAA6BA,EAAe,EACjErrD,KAAK+nE,WAAa,CAChB/nE,KAAK8rD,YAAcb,EAAU,GAC7BjrD,KAAK8rD,YAAcb,EAAU,GAEjC,MAxFEjrD,KAAKy2C,MAAQ,EAyFjB,GCnoCK,MAAMg0B,GAAwB,GCSrC,MAQMC,GAAqB,CACzB,MA2TF,SACEC,EACA5wD,EACAoI,EACAxI,EACAixD,GAEA,MAAM9nB,EAAa3gC,EAAM2nB,WACnBmZ,EAAY9gC,EAAMw0B,UAExB,IAAIoM,EACJ,GAAID,EAAY,CACd,GAAIA,EAAW5Y,iBAAmB,GAChC,OAEF,IAAI2gC,EAAoBF,EACxB,GAAIC,EAAuB,CACzB,MAAMrhC,EAAgBuZ,EAAWnZ,mBACjC,GAAsB,SAAlBJ,EAEF,GADAshC,EAAoBD,EACE,aAAlBrhC,EAA8B,CAEhC,MAAMuhC,EAAcH,EAAare,WAC/BnqC,EAAM8U,YACN,SAEF6zC,EAAYjoB,cAAcC,EAAYC,GACtC+nB,EAAYvoB,UAAUxoC,EAAUJ,EAClC,MAAWspC,GAAaA,EAAUtM,YAChCoM,EAAyB,CAAC,EAGhC,CACA,MAAM+nB,EAAcD,EAAkBve,WACpCnqC,EAAM8U,YACN,SAEF6zC,EAAYjoB,cAAcC,EAAYC,GACtC+nB,EAAYvoB,UAAUxoC,EAAUJ,EAClC,CACA,GAAIspC,GAAaA,EAAUtM,UAAW,CACpC,IAAIo0B,EAAmBJ,EACnBC,IACFG,EAAmBH,GAErB,MAAMI,EAAaD,EAAiBze,WAAWnqC,EAAM8U,YAAa,QAClE+zC,EAAWhoB,aAAaC,EAAWF,GACnCioB,EAAWroB,SAAS5oC,EAAUJ,EAChC,CACF,EA3WE,WAsNF,SACEgxD,EACA5wD,EACAoI,EACAxI,EACAixD,GAEA,MAAMj3B,EAAcxxB,EAAMmwB,YAC1B,GAAIqB,EAAa,CACf,MAAMs3B,EAAmBN,EAAare,WACpCnqC,EAAM8U,YACN,cAEFg0C,EAAiBroB,mBAAmB,KAAMjP,GAC1Cs3B,EAAiBlpB,eAAehoC,EAAUJ,EAC5C,CACA,MAAMspC,EAAY9gC,EAAMw0B,UACxB,GAAIsM,GAAaA,EAAUtM,UAAW,CACpC,MAAMq0B,GAAcJ,GAAyBD,GAAcre,WACzDnqC,EAAM8U,YACN,QAEF+zC,EAAWhoB,aAAaC,GACxB+nB,EAAWroB,SAAS5oC,EAAUJ,EAChC,CACF,EA9OE,QA6aF,SACEgxD,EACA5wD,EACAoI,EACAxI,EACAixD,GAEA,MAAMt2B,EAAYnyB,EAAM+vB,UAClByB,EAAcxxB,EAAMmwB,YAC1B,GAAIgC,GAAaX,EAAa,CAC5B,MAAMu3B,EAAgBP,EAAare,WAAWnqC,EAAM8U,YAAa,WACjEi0C,EAActoB,mBAAmBtO,EAAWX,GAC5Cu3B,EAAczoB,YAAY1oC,EAAUJ,EACtC,CACA,MAAMspC,EAAY9gC,EAAMw0B,UACxB,GAAIsM,GAAaA,EAAUtM,UAAW,CACpC,MAAMq0B,GAAcJ,GAAyBD,GAAcre,WACzDnqC,EAAM8U,YACN,QAEF+zC,EAAWhoB,aAAaC,GACxB+nB,EAAWroB,SAAS5oC,EAAUJ,EAChC,CACF,EAncE,WAkXF,SACEgxD,EACA5wD,EACAoI,EACAxI,EACAixD,GAEA,MAAM9nB,EAAa3gC,EAAM2nB,WACnBmZ,EAAY9gC,EAAMw0B,UAExB,IAAIoM,EACJ,GAAID,EAAY,CACd,GAAIA,EAAW5Y,iBAAmB,GAChC,OAEF,IAAI2gC,EAAoBF,EACxB,GAAIC,EAAuB,CACzB,MAAMrhC,EAAgBuZ,EAAWnZ,mBACjC,GAAsB,SAAlBJ,EAEF,GADAshC,EAAoBD,EACE,aAAlBrhC,EAA8B,CAEhC,MAAMuhC,EAAcH,EAAare,WAC/BnqC,EAAM8U,YACN,SAEF6zC,EAAYjoB,cAAcC,EAAYC,GACtC+nB,EAAY3oB,eAAepoC,EAAUJ,EACvC,MAAWspC,GAAaA,EAAUtM,YAChCoM,EAAyB,CAAC,EAGhC,CACA,MAAM+nB,EAAcD,EAAkBve,WACpCnqC,EAAM8U,YACN,SAEF6zC,EAAYjoB,cAAcC,EAAYC,GACtC+nB,EAAY3oB,eAAepoC,EAAUJ,EACvC,CACA,GAAIspC,GAAaA,EAAUtM,UAAW,CACpC,IAAIo0B,EAAmBJ,EACnBC,IACFG,EAAmBH,GAErB,MAAMI,EAAaD,EAAiBze,WAAWnqC,EAAM8U,YAAa,QAClE+zC,EAAWhoB,aAAaC,EAAWF,GACnCioB,EAAWroB,SAAS5oC,EAAUJ,EAChC,CACF,EAlaE,gBAqPF,SACEgxD,EACA5wD,EACAoI,EACAxI,EACAixD,GAEA,MAAMj3B,EAAcxxB,EAAMmwB,YAC1B,GAAIqB,EAAa,CACf,MAAMs3B,EAAmBN,EAAare,WACpCnqC,EAAM8U,YACN,cAEFg0C,EAAiBroB,mBAAmB,KAAMjP,GAC1Cs3B,EAAiBhpB,oBAAoBloC,EAAUJ,EACjD,CACA,MAAMspC,EAAY9gC,EAAMw0B,UACxB,GAAIsM,GAAaA,EAAUtM,UAAW,CACpC,MAAMq0B,GAAcJ,GAAyBD,GAAcre,WACzDnqC,EAAM8U,YACN,QAEF+zC,EAAWhoB,aAAaC,GACxB+nB,EAAWroB,SAAS5oC,EAAUJ,EAChC,CACF,EA7QE,aAsRF,SACEgxD,EACA5wD,EACAoI,EACAxI,EACAixD,GAEA,MAAMt2B,EAAYnyB,EAAM+vB,UAClByB,EAAcxxB,EAAMmwB,YAC1B,GAAIqB,GAAeW,EAAW,CAC5B,MAAM42B,EAAgBP,EAAare,WAAWnqC,EAAM8U,YAAa,WACjEi0C,EAActoB,mBAAmBtO,EAAWX,GAC5Cu3B,EAAc7oB,iBAAiBtoC,EAAUJ,EAC3C,CACA,MAAMspC,EAAY9gC,EAAMw0B,UACxB,GAAIsM,GAAaA,EAAUtM,UAAW,CACpC,MAAMq0B,GAAcJ,GAAyBD,GAAcre,WACzDnqC,EAAM8U,YACN,QAEF+zC,EAAWhoB,aAAaC,GACxB+nB,EAAWroB,SAAS5oC,EAAUJ,EAChC,CACF,EA5SE,mBAqLF,SACEwxD,EACApxD,EACAoI,EACAxI,EACAixD,GAEA,MAAM9B,EAAa/uD,EAASgvD,qBAC5B,IAAI1qE,EAAG0S,EACP,IAAK1S,EAAI,EAAG0S,EAAK+3D,EAAWhpE,OAAQzB,EAAI0S,IAAM1S,EAAG,EAE/C+sE,EADyBV,GAAmB5B,EAAWzqE,GAAGib,YAExD6xD,EACArC,EAAWzqE,GACX8jB,EACAxI,EACAixD,EAEJ,CACF,EAvME,OAsCF,SACED,EACA5wD,EACAoI,EACAxI,EACAixD,GAEA,MAAMt2B,EAAYnyB,EAAM+vB,UAClByB,EAAcxxB,EAAMmwB,YAC1B,GAAIgC,GAAaX,EAAa,CAC5B,MAAM03B,EAAeV,EAAare,WAAWnqC,EAAM8U,YAAa,UAChEo0C,EAAazoB,mBAAmBtO,EAAWX,GAC3C03B,EAAa3pB,WAAW3nC,EAAUJ,EACpC,CACA,MAAMspC,EAAY9gC,EAAMw0B,UACxB,GAAIsM,GAAaA,EAAUtM,UAAW,CACpC,MAAMq0B,GAAcJ,GAAyBD,GAAcre,WACzDnqC,EAAM8U,YACN,QAEF+zC,EAAWhoB,aAAaC,GACxB+nB,EAAWroB,SAAS5oC,EAAUJ,EAChC,CACF,GA5CO,SAAS2xD,GAAoBr8D,EAAY86B,GAC9C,MAAMzlB,EASD,SAAsBrV,EAAY86B,GACvC,MA5CyB,GA4CI96B,EAAc86B,CAC7C,CAXoBwhC,CAAat8D,EAAY86B,GAC3C,OAAOzlB,EAAYA,CACrB,CAqDO,SAASknD,GACdL,EACAxxD,EACAwI,EACAqB,EACAzH,EACA9D,EACA2yD,GAEA,IAAIa,GAAU,EACd,MAAM3oB,EAAa3gC,EAAM2nB,WACzB,GAAIgZ,EAAY,CACd,MAAMjK,EAAaiK,EAAW5Y,gBAC1B2O,GAAc,IAAqBA,GAAc,GACnDiK,EAAWpY,oBAAoB3uB,IAE3B88B,GAAc,IAChBiK,EAAWx4C,OAEbw4C,EAAWrY,kBAAkB1uB,GAC7B0vD,GAAU,EAEd,CAUA,OAWF,SACEN,EACAxxD,EACAwI,EACAqB,EACAvL,EACA2yD,GAEA,MAAM7wD,EAAWoI,EAAM40B,qBAAN50B,CAA4BxI,GAC7C,IAAKI,EACH,OAEF,MAAMsL,EAAqBtL,EAAS2J,oBAClCF,EACAvL,GAGF,GADiBkK,EAAMgmB,cAErBujC,GAAeP,EAAa9lD,EAAoBlD,EAAOxI,OAClD,EAELyxD,EADyBV,GAAmBrlD,EAAmB/L,YAE7D6xD,EACA9lD,EACAlD,EACAxI,EACAixD,EAEJ,CACF,CAjDEe,CACER,EACAxxD,EACAwI,EACAqB,EACAvL,EACA2yD,GAGKa,CACT,CA+CA,SAASC,GAAeP,EAAapxD,EAAUoI,EAAOxI,GACpD,GAA0B,sBAAtBI,EAAST,UAAmC,CAC9C,MAAMwvD,EAC2D,EAE7D8C,gBACJ,IAAK,IAAIvtE,EAAI,EAAG0S,EAAK+3D,EAAWhpE,OAAQzB,EAAI0S,IAAM1S,EAChDqtE,GAAeP,EAAarC,EAAWzqE,GAAI8jB,EAAOxI,GAEpD,MACF,CACewxD,EAAY7e,WAAWnqC,EAAM8U,YAAa,WAClDuqB,WACsD,EAC3D7nC,EACAwI,EAAMgmB,cACNhmB,EAAM20B,0BAEV,CCrKA,MAAM+0B,GAAgB,CACpB,MAAS,CAAC,UAAW,SAAU,aAAc,QAAS,QACtD,OAAU,CAAC,UAAW,cACtB,OAAU,IAMNC,GAAiB,CACrB,OAAU,CAAC,QAAS,OAAQ,WAC5B,OAAU,CAAC,UAAW,SAAU,aAAc,QAAS,OAAQ,YAiyBjE,OAxxBA,cAA4C,GAI1C1/D,YAAYykB,GACV9hB,MAAM8hB,GAGN7wB,KAAK+rE,6BAA+B/rE,KAAKgsE,wBAAwB5uD,KAAKpd,MAMtEA,KAAKisE,uBAMLjsE,KAAKksE,oCAAsC,KAM3ClsE,KAAKmsE,kBAMLnsE,KAAKosE,czF1DA,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EyF2DvB,CAQAC,YAAY72C,EAAMuU,EAAYv1B,GAC5B,IAAIkyB,EACJ,MAAMjR,EAAQD,EAAKE,WAOnB,OANID,IAAUE,IAAoBF,IAAUE,KAC1C31B,KAAKssE,qBAAqB92C,EAAMuU,EAAYv1B,GACxCxU,KAAKusE,sBAAsB/2C,KAC7BkR,GAAS,IAGNA,CACT,CASA47B,QAAQ3lC,EAAGxzB,EAAGuG,EAAG+3B,GACf,MAAMsC,EAAatC,EAAWsC,WACxB1G,EAAYoE,EAAWpE,UACvBp0B,EAAao0B,EAAUp0B,WACvBuF,EAAa6uB,EAAU7uB,WACvBqc,EAAQ7wB,KAAKs2D,WACb9gC,EAAO3E,EAAMkW,YAAYu7B,QAAQ3lC,EAAGxzB,EAAGuG,EAAGq6B,EAAYv1B,GACtDg4D,EAAY/kC,EAAW+kC,UACvBC,IACJD,EAAUlsC,KAAuBksC,EAAUlsC,MAEzCmsC,GAASj3C,EAAKk3C,mBAChBl3C,EAAKk3C,iBAAmBz9D,GAU1B,OARejP,KAAKqsE,YAAY72C,EAAMuU,EAAYv1B,KAG/Ci4D,GAAQ5sC,KAAKC,MAAQ2H,EAAWuxB,KAAO,IACd,WAA1BnoC,EAAM87C,iBAEN3sE,KAAK4sE,iBAAiBp3C,EAAMiS,GAEvB14B,MAAMuzD,QAAQ3lC,EAAGxzB,EAAGuG,EAAG+3B,EAChC,CAMAy6B,eAAe1sC,GACb,MAAM3E,EAAQ7wB,KAAKs2D,WACnB,OACEvnD,MAAMmzD,eAAe1sC,KACM,WAA1B3E,EAAM87C,gBACH,EAAO97C,KAAU2E,EAAKq3C,eACtBr3C,EAAKs3C,WAAWj8C,GAExB,CAKA+0C,aAAapwC,GACX,OAAOA,EAAKsU,SAAS9pC,KAAKs2D,WAC5B,CAOAluB,aAAaX,GACX,MAAMslC,EAAgB/sE,KAAKs2D,WAAWt4C,cAKtC,OAJIhe,KAAKisE,yBAA2Bc,IAClC/sE,KAAKisE,uBAAyBc,EAC9B/sE,KAAK+hE,cAAcjiE,OAAS,GAEvBiP,MAAMq5B,aAAaX,EAC5B,CAQA6kC,qBAAqB92C,EAAMuU,EAAYv1B,GACrC,MAAMqc,EACJ7wB,KAAKs2D,WAED/yC,EAAWsN,EAAM7S,cACjBmiC,EAActvB,EAAM+uB,kBAAoB,KAExC3wC,EAAaumB,EAAKk3C,iBAClBM,EAAex3C,EAAKy3C,eAAep8C,GACzC,IACGm8C,EAAaE,OACdF,EAAanW,qBAAuB5nD,GACpC+9D,EAAalL,kBAAoBv+C,GACjCypD,EAAaG,qBAAuBhtB,EAEpC,OAGF,MAAMnwC,EAAS6gB,EAAMkW,YACfoY,EAAYtuB,EAAM6uB,eAClB8f,EAAiBxvD,EAAOo9D,cAExBC,EADWr9D,EAAOyyD,yBAAyBjuD,GACrB4rD,mBAAmB5qC,EAAKkqC,kBAE9C4N,EAAct9D,EAAOu9D,eAAexjC,EAAYv1B,EAAYghB,GAC5Dg4C,EAAW,EAAO38C,UACjB2E,EAAKi4C,sBAAsBD,GAClCh4C,EAAKq3C,eAAeW,GAAY,GAC5BruB,IACF3pB,EAAKk4C,wBAAwBF,GAAY,IAE3CR,EAAaE,OAAQ,EACrB,IAAK,IAAIzkE,EAAI,EAAGklE,EAAKL,EAAYxtE,OAAQ2I,EAAIklE,IAAMllE,EAAG,CACpD,MAAMmlE,EAAaN,EAAY7kE,GAC/B,GAAImlE,EAAWl4C,YAAcC,GAC3B,SAEF,MAAMk4C,EAAkBD,EAAW3X,UAC7B6X,EACJtO,EAAeY,mBAAmByN,GAC9BE,EAAel6D,GAAgBw5D,EAAYS,GAC3CE,EAAgBtwE,EACpBqwE,EACAl9C,EAAM8uB,kBAAoB1wC,EAC1BjP,KAAK6tD,WAEDogB,EAAiB57D,EAAOy7D,EAAkBC,GAC5C,KACAC,EACErD,EAAe,IAAI,GACvB,EACAqD,EACA/+D,EACA86B,GAEI6gC,EAAwBzrB,EAC1B,IAAI,GAAmB,EAAG4uB,EAAc9+D,EAAY86B,QACpDh+B,EACEyX,EAAmB,GACvBvU,EACA86B,GAOIrD,EAAS,SAAU/sB,GACvB,IAAI0mC,EACJ,MAAMpwB,EACJtW,EAAQ+W,oBAAsBG,EAAMH,mBAItC,GAHIT,IACFowB,EAASpwB,EAActW,EAAS1K,IAE9BoxC,EAAQ,CACV,MAAM6sB,EAAQltE,KAAKwrE,cACjB7xD,EACA6J,EACA68B,EACAsqB,EACAC,GAEFoC,EAAaE,MAAQF,EAAaE,OAASA,CAC7C,CACF,EAEMrzD,EAAW+zD,EAAW1mC,cACxBiZ,GAAeA,IAAgB6sB,EAAaG,qBAC9CtzD,EAASnO,KAAKy0C,GAEhB,IAAK,IAAI9hD,EAAI,EAAG0S,EAAK8I,EAAS/Z,OAAQzB,EAAI0S,IAAM1S,EAAG,CACjD,MAAMsb,EAAUE,EAASxb,GAEtB4vE,IACDl6D,GAAWk6D,EAAgBt0D,EAAQ8W,cAAchjB,cAEjDi5B,EAAOvmC,KAAKH,KAAM2Z,EAEtB,CACA,MAAMu0D,EAA4BvD,EAAa1jE,SAEzCknE,EACsB,WAA1Bt9C,EAAM87C,iBACNxtB,GACuB,IAAvBmuB,EAAYxtE,OACR,KACAiuE,EACAK,EAAuB,IAAI,GAC/BD,EACAl/D,EACA86B,EACA/5B,EAAOq+D,cACPH,EACAr9C,EAAM8uB,mBAGR,GADAnqB,EAAKq3C,eAAeW,GAAUttE,KAAKkuE,GAC/BxD,EAAuB,CACzB,MAAM9U,EAAyB,IAAI,GACjC,KACA7mD,EACA86B,EACA/5B,EAAOq+D,cACPzD,EAAsB3jE,SACtB4pB,EAAM8uB,mBAERnqB,EAAKk4C,wBAAwBF,GAAUttE,KAAK41D,EAC9C,CACF,CACAkX,EAAalL,iBAAmBv+C,EAChCypD,EAAaG,oBAAsBhtB,EACnC6sB,EAAanW,mBAAqB5nD,CACpC,CAWAwlD,2BACEnjD,EACAm2B,EACAitB,EACAliD,EACA6jD,GAEA,MAAMpnD,EAAaw4B,EAAWpE,UAAUp0B,WAClCkE,EAAWs0B,EAAWpE,UAAUlwB,SACtCuhD,EAA+B3oD,MAAhB2oD,EAA4B,EAAIA,EAC/C,MAAM7jC,EAAQ7wB,KAAKs2D,WAEbpoD,EADS2iB,EAAMkW,YACG07B,yBACtBh7B,EAAWpE,UAAU7uB,YAGjBq9C,EAAYjhD,EAAe,CAACU,IAClC5T,EAAOm0D,EAAW5iD,EAAaylD,EAAc7C,GAG7C,MAAMh4C,EAAW,CAAC,EAQZ+3C,EAAkB,SAAUj4C,EAASI,EAAUk7C,GACnD,IAAIv1D,EAAMia,EAAQ6W,aACNzkB,IAARrM,IACFA,EAAM,EAAOia,IAEf,MAAMuzB,EAAQrzB,EAASna,GACvB,GAAKwtC,GAcE,IAAc,IAAVA,GAAkB+nB,EAAa/nB,EAAM+nB,WAAY,CAC1D,GAAmB,IAAfA,EAGF,OAFAp7C,EAASna,IAAO,EAChB22D,EAAQp2D,OAAOo2D,EAAQiY,YAAYphC,GAAQ,GACpC16B,EAASmH,EAASkX,EAAO9W,GAElCmzB,EAAMnzB,SAAWA,EACjBmzB,EAAM+nB,WAAaA,CACrB,MAtBY,CACV,GAAmB,IAAfA,EAEF,OADAp7C,EAASna,IAAO,EACT8S,EAASmH,EAASkX,EAAO9W,GAElCs8C,EAAQn2D,KACL2Z,EAASna,GAAO,CACfia,QAASA,EACTkX,MAAOA,EACP9W,SAAUA,EACVk7C,WAAYA,EACZziD,SAAUA,GAGhB,CAUF,EAEMuvD,EAEF/hE,KACF,cAEF,IAAI0oB,EACJ,IAAK,IAAIrqB,EAAI,EAAG0S,EAAKgxD,EAAcjiE,QAAS4oB,GAASrqB,EAAI0S,IAAM1S,EAAG,CAChE,MAAMm3B,EAAOusC,EAAc1jE,GAE3B,IAAK0V,GADc7F,EAASkyD,mBAAmB5qC,EAAKkqC,kBACxB7N,GAC1B,SAGF,MAAM2b,EAAW,EAAO38C,GAClBg8C,EAAiB,CAACr3C,EAAKq3C,eAAeW,IACtCE,EAA0Bl4C,EAAKk4C,wBAAwBF,GACzDE,GACFb,EAAe3sE,KAAKwtE,GAEtBb,EAAerkC,MAAMqkC,IACnB,MAAMlY,EACJkY,IAAmBa,EACfjmC,EAAWwY,cAAcj2C,MAAM28B,KAAK4nC,GAASA,EAAK1vE,QAClD,KACN,IAAK,IAAI4J,EAAI,EAAGklE,EAAKd,EAAe/sE,OAAQ2I,EAAIklE,IAAMllE,EAAG,CACvD,MAAM+lE,EAAgB3B,EAAepkE,GASrC,GARAigB,EAAQ8lD,EAAc/Z,2BACpBnjD,EACArC,EACAkE,EACAuhD,EACA9C,EACA+C,GAEEjsC,EACF,OAAO,CAEX,IAEJ,CACA,OAAOA,CACT,CAOAwe,YAAYC,GACV,OAAO,IAAIC,SAAQ,CAACC,EAASonC,KAC3B,MAAM59C,EAAQ7wB,KAAKs2D,WACbkX,EAAW,EAAO38C,GAClB7gB,EAAS6gB,EAAMkW,YACfvyB,EAAaxU,KAAK6hE,mBAClBjtD,EAAmBJ,EAAW/G,YAC9BwB,EAAajP,KAAK62D,mBAClB3oD,EAAW8B,EAAOyyD,yBAAyBjuD,GAC3ClD,EAAarG,GACjBjL,KAAKksE,oCACL/kC,EAAMxnC,SAEFs2D,EAAY/nD,EAASwgE,kCACzBp9D,EACArC,GAGF,IAAIumB,EACJ,IAAK,IAAIn3B,EAAI,EAAG0S,EAAK/Q,KAAK+hE,cAAcjiE,OAAQzB,EAAI0S,IAAM1S,EACxD,GACE43D,EAAUxJ,aAAezsD,KAAK+hE,cAAc1jE,GAAG43D,UAAUxJ,WACzD,CAIA,GAHAj3B,EACEx1B,KAAK+hE,cAAc1jE,GAEjBm3B,EAAKE,aAAeC,GAAkB,CACxC,MAAMjpB,EAASwB,EAASkyD,mBAAmB5qC,EAAKygC,WAE9CjmD,EAAO2+D,YACPn6D,EAAWjH,aACViE,EAAeoD,EAAkBlI,IAElC,GAAM4E,EAAYkD,GAEpB,KACF,CACAghB,OAAOzpB,CACT,CAEF,IAAKypB,GAAQA,EAAKo5C,mBAAqB,EAErC,YADAvnC,EAAQ,IAGV,MACMr0B,EAAS,GADA9E,EAASkyD,mBAAmB5qC,EAAKkqC,mBAE1CmP,EAAY,EACfv9D,EAAW,GAAK0B,EAAO,IAAM/D,GAC7B+D,EAAO,GAAK1B,EAAW,IAAMrC,GAG1B4K,EAAW2b,EACd+3C,iBACAp9B,QAAO,SAAU2+B,EAAalB,GAC7B,OAAOkB,EAAYC,OAAOnB,EAAW1mC,cACvC,GAAG,IAEL,IAAIumC,EAAwBj4C,EAAKi4C,sBAAsBD,GACvD,IAAKC,EAAuB,CAC1B,MAAM3K,EAAWl6B,GACf16B,EAAS+yD,YACP/yD,EAASyyD,kBAAkB1xD,EAAYe,EAAOszD,cAG5CnwD,EAAWnT,KAAKmsE,kBAYtBsB,EFveD,SACLr6D,EACArD,EACA8J,EACAoW,EACAvjB,EACAuC,EACAkE,GAEA,MAEMw5B,EAAUP,GAFFh5B,EAAK,GAAKq3D,GACTr3D,EAAK,GAAKq3D,IAEzB99B,EAAQmxB,uBAAwB,EAChC,MAAMvxB,EAASI,EAAQJ,OACjB+J,EAAW,IAAI,GACnB3J,EACA89B,GACA/9D,EACA,KACAyG,GAEI67D,EAAen1D,EAAS/Z,OAExBmvE,EAAcvwE,KAAKQ,MAAM,SAAwB8vE,GACjDE,EAAmB,CAAC,EAC1B,IAAK,IAAI7wE,EAAI,EAAGA,GAAK2wE,IAAgB3wE,EAAG,CACtC,MAAMsb,EAAUE,EAASxb,EAAI,GACvB8wE,EAAuBx1D,EAAQ+W,oBAAsBT,EAC3D,IAAKA,EACH,SAEF,IAAIowB,EAAS8uB,EAAqBx1D,EAAS1K,GAC3C,IAAKoxC,EACH,SAEG5wC,MAAM2L,QAAQilC,KACjBA,EAAS,CAACA,IAEZ,MACMvV,GADQzsC,EAAI4wE,GACExiB,SAAS,IAAI2iB,SAAS,EAAG,UAC7C,IAAK,IAAI/sD,EAAI,EAAGwE,EAAKw5B,EAAOvgD,OAAQuiB,EAAIwE,IAAMxE,EAAG,CAC/C,MAAMgtD,EAAgBhvB,EAAOh+B,GACvBtI,EAAWs1D,EAAct4B,qBAAds4B,CAAoC11D,GACrD,IAAKI,IAAahG,GAAWrH,EAAQqN,EAAStM,aAC5C,SAEF,MAAM0U,EAAQktD,EAAcn1D,QACtBo3B,EAAOnvB,EAAM+vB,UACfZ,GACFA,EAAK6D,SAASrK,GAEhB,MAAMiH,EAAS5vB,EAAMmwB,YACjBP,IACFA,EAAOoD,SAASrK,GAChBiH,EAAOyC,YAAY,OAErBryB,EAAM80B,aAAQlrC,GACd,MAAM0mC,EAAQ48B,EAAcvlC,WAC5B,GAAI2I,GAAgC,IAAvBA,EAAMvb,aAAoB,CACrC,MAAMyjB,EAAUlI,EAAMtI,eACtB,IAAKwQ,EACH,SAGF,MAAM20B,EAAaljC,GACjBuO,EAAQ,GACRA,EAAQ,QACR5uC,EACA,CAAConC,OAAO,IAEJiF,EAAMk3B,EAAW/iC,OACvB+iC,EAAWh7B,UAAYxJ,EACvBwkC,EAAWz1B,SAAS,EAAG,EAAGzB,EAAIlkC,MAAOkkC,EAAItuC,QACzCqY,EAAM60B,SACJ,IAAI,GAAK,CACPoB,IAAKA,EACLuC,QAASA,EACTr4B,OAAQmwB,EAAM5I,YACd0Q,aAAc,SACdE,aAAc,SACd98C,OAAQ80C,EAAMrI,YACdjU,QAAS,EACT/iB,KAAMq/B,EAAMpI,UACZjmB,MAAOquB,EAAMjJ,WACbr2B,SAAUs/B,EAAMrT,cAChB4J,eAAgByJ,EAAMhJ,sBAG5B,CACA,MAAMpT,EAASlU,EAAM8U,aAAe,EACpC,IAAIs4C,EAAiBL,EAAiB74C,GACjCk5C,IACHA,EAAiB,CAAC,EAClBL,EAAiB74C,GAAUk5C,EAC3BA,EAAwB,QAAI,GAC5BA,EAAuB,OAAI,GAC3BA,EAA2B,WAAI,GAC/BA,EAAsB,MAAI,IAE5B,MAAMtuE,EAAO8Y,EAAST,UACtB,GAAa,uBAATrY,EAA+B,CACjC,MAAM6nE,EAC8D,EAEhE0G,8BACJ,IAAK,IAAInxE,EAAI,EAAG0S,EAAK+3D,EAAWhpE,OAAQzB,EAAI0S,IAAM1S,EAAG,CACnD,MAAM0b,EAAW+uD,EAAWzqE,GAC5BkxE,EAAex1D,EAAST,UAAUvC,QAAQ,QAAS,KAAK7W,KACtD6Z,EACAoI,EAEJ,CACF,MACEotD,EAAetuE,EAAK8V,QAAQ,QAAS,KAAK7W,KAAK6Z,EAAUoI,EAE7D,CACF,CAEA,MAAMstD,EAAar2D,OAAO3Z,KAAKyvE,GAAkBvoC,IAAIoF,QAAQrgC,KAAKkP,IAClE,IAAK,IAAIvc,EAAI,EAAG0S,EAAK0+D,EAAW3vE,OAAQzB,EAAI0S,IAAM1S,EAAG,CACnD,MAAMkxE,EAAiBL,EAAiBO,EAAWpxE,IACnD,IAAK,MAAM4C,KAAQsuE,EAAgB,CACjC,MAAMG,EAAeH,EAAetuE,GACpC,IAAK,IAAIohB,EAAI,EAAGwE,EAAK6oD,EAAa5vE,OAAQuiB,EAAIwE,EAAIxE,GAAK,EAAG,CACxDi0B,EAASiJ,SAASmwB,EAAartD,EAAI,IACnC,IAAK,IAAIM,EAAI,EAAGgtD,EAAK5/D,EAAWjQ,OAAQ6iB,EAAIgtD,IAAMhtD,EAChD2zB,EAAS1F,aAAa7gC,EAAW4S,IACjC2zB,EAASmL,aAAaiuB,EAAartD,GAEvC,CACF,CACF,CACA,OAAOsqB,EAAQ4M,aAAa,EAAG,EAAGhN,EAAOr4B,MAAOq4B,EAAOziC,OACzD,CEkWgC8lE,CACtB9M,EAZiB,CACjB9iE,KAAKq4D,mBACHnqD,EAASq4D,mBAAmB/wC,EAAKkqC,kBACjCzwD,EACA,EACAw7D,GACA3H,EAAS,GAAK2H,GACd3H,EAAS,GAAK2H,GACd,IAMF5wD,EACAgX,EAAMH,mBACNxiB,EAASkyD,mBAAmB5qC,EAAKkqC,kBACjClqC,EAAKy3C,eAAep8C,GAAOgmC,mBAC3B1jD,GAEFqiB,EAAKi4C,sBAAsBD,GAAYC,CACzC,CACApmC,EFjWC,SAAmBF,EAAOttB,EAAUw7C,GACzC,MAAMwa,EAAiB,GACvB,GAAIxa,EAAW,CACb,MAAMlsD,EAAIzK,KAAKQ,MAAMR,KAAK4W,MAAM6xB,EAAM,IAAMsjC,IACtC/6D,EAAIhR,KAAKQ,MAAMR,KAAK4W,MAAM6xB,EAAM,IAAMsjC,IAItCztD,EAGJ,GAFC,GAAM7T,EAAG,EAAGksD,EAAUnhD,MAAQ,GAC7B,GAAMxE,EAAG,EAAG2lD,EAAUvrD,OAAS,GAAKurD,EAAUnhD,OAE5CxL,EAAI2sD,EAAUnrD,KAAK8S,GACnBwuB,EAAI6pB,EAAUnrD,KAAK8S,EAAQ,GAE3B3e,EADIg3D,EAAUnrD,KAAK8S,EAAQ,GACnB,KAAOwuB,EAAI,IAAM9iC,GACzBumE,EAAcvwE,KAAKQ,MAAM,SAAwB2a,EAAS/Z,QAC5DzB,GAAKA,EAAI4wE,GAAgB,GAC3BY,EAAe3vE,KAAK2Z,EAASxb,EAAI4wE,EAAc,GAEnD,CAEA,OAAOY,CACT,CE0UcC,CAAUjB,EAAWh1D,EAAU4zD,GAAuB,GAElE,CAKAlX,qBACE,MAAM1lC,EAAQ7wB,KAAKs2D,WACfzlC,EAAMsG,mBAAgDprB,IAAhC/L,KAAKisE,wBAC7Bp7C,EAAM/S,SAEV,CAOAkuD,wBAAwB5vD,GACtBpc,KAAKw2D,yBACP,CAMAxW,gBAAgBvY,GACd,MAAMkF,EAAU3sC,KAAK2sC,QACfwG,EAAQxG,EAAQgE,YACtBhE,EAAQgE,YAAc3wC,KAAKs2D,WAAWp/B,aACtC,MAAMs1C,EAAY/kC,EAAW+kC,UACvBC,IACJD,EAAUlsC,KAAuBksC,EAAUlsC,KAEvC01B,EAEFh2D,KACF,cACF,IAAK,IAAI3B,EAAI,EAAG0S,EAAKilD,EAAMl2D,OAAQzB,EAAI0S,IAAM1S,EAAG,CAC9C,MAAMm3B,EAAOwgC,EAAM33D,GACbqvE,EACJl4C,EAAKk4C,wBAAwB,EAAO1tE,KAAKs2D,aAC3C,GAAIoX,EACF,IAAK,IAAIrrD,EAAIqrD,EAAwB5tE,OAAS,EAAGuiB,GAAK,IAAKA,EACzDqrD,EAAwBrrD,GAAGmxC,QACzBxzD,KAAK2sC,QACL,EACA3sC,KAAK+vE,uBAAuBv6C,EAAMiS,GAClCA,EAAWpE,UAAUlwB,SACrBs5D,OACA1gE,EACA07B,EAAWwY,cAInB,CACAtT,EAAQgE,YAAcwC,CACxB,CAEA48B,uBAAuBv6C,EAAMiS,GAC3B,MAAMsC,EAAatC,EAAWsC,WACxB1G,EAAYoE,EAAWpE,UACvBnwB,EAASmwB,EAAUnwB,OACnBjE,EAAao0B,EAAUp0B,WACvBkE,EAAWkwB,EAAUlwB,SACrBC,EAAOq0B,EAAWr0B,KAClBc,EAAQxV,KAAK4W,MAAMlC,EAAK,GAAK22B,GAC7BjgC,EAASpL,KAAK4W,MAAMlC,EAAK,GAAK22B,GAG9B77B,EADSlO,KAAKs2D,WAAWvvB,YACP07B,yBACtBh7B,EAAWpE,UAAU7uB,YAEjByhD,EAAYzgC,EAAKygC,UACjBoX,EAAan/D,EAASkyD,mBAAmB5qC,EAAKkqC,kBAC9CsQ,EACJ9hE,EAASkyD,mBAAmBnK,EAAWj2D,KAAK6tD,WAAW,GAAKwf,EAAW,GAazE,OAZkB7sD,GAChB,GAAMxgB,KAAK02D,sBAAsB/2D,QAAS,EAAIoqC,EAAY,EAAIA,GAC9D/pC,KAAKq4D,mBACHnlD,EACAjE,EACAkE,EACA42B,EACA71B,EACApK,EACAkmE,GAIN,CAOA5X,WAAWzrB,EAASlF,GAClB,MAAM+kC,EAAY/kC,EAAW+kC,UACvBC,IACJD,EAAUlsC,KAAuBksC,EAAUlsC,KAG7CtgC,KAAKksE,oCACHzkC,EAAW+6B,2BAA2B7iE,QACxCK,KAAKmsE,kBAAoB1kC,EAAWpE,UAAUlwB,SAE9C,MAAM0d,EACJ7wB,KAAKs2D,WAED2Z,EAAap/C,EAAM87C,gBACnBx5B,EAAQxG,EAAQgE,YACtBhE,EAAQgE,YAAc9f,EAAMqG,aAC5B,MAAMg5C,EAAcpE,GAAemE,GAC7B5sC,EAAYoE,EAAWpE,UACvBlwB,EAAWkwB,EAAUlwB,SACrBiwD,EAAavyC,EAAMkW,YAEnBpK,EADWymC,EAAWX,yBAAyBp/B,EAAU7uB,YAC5CmsD,kBACjBt9B,EAAUp0B,WACVm0D,EAAWE,YAGPtN,EAAQh2D,KAAK+hE,cACbqC,EAAQ,GACRC,EAAS,GACf,IAAI3O,GAAQ,EACZ,IAAK,IAAIr3D,EAAI23D,EAAMl2D,OAAS,EAAGzB,GAAK,IAAKA,EAAG,CAC1C,MAAMm3B,EACJwgC,EAAM33D,GAERq3D,EAAQA,IAAUlgC,EAAKy3C,eAAep8C,GAAOq8C,MAC7C,MAAML,EAAiBr3C,EAAKq3C,eAAe,EAAOh8C,IAAQ0Q,QACvD4uC,GAAUA,EAAM5b,aAAa2b,KAEhC,GAA8B,IAA1BrD,EAAe/sE,OACjB,SAEF,MAAMmY,EAAYjY,KAAK+vE,uBAAuBv6C,EAAMiS,GAC9C+8B,EAAWhvC,EAAKygC,UAAU,GAChC,IAAIoP,GAAe,EAEnB,MAAMf,EAAcuI,EAAe,GAAGzY,cAAcn8C,GACpD,GAAIqsD,EAAa,CACf,IAAK,IAAIjiD,EAAI,EAAGwE,EAAKu9C,EAAMtkE,OAAQuiB,EAAIwE,IAAMxE,EAC3C,GAAIsa,IAAM6nC,GAAYA,EAAWH,EAAOhiD,GAAI,CAC1C,MAAM6xC,EAAOkQ,EAAM/hD,GAEjBtO,GACE,CACEuwD,EAAY,GACZA,EAAY,GACZA,EAAY,GACZA,EAAY,IAEd,CAACpQ,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,OAG9BmR,IACH14B,EAAQ+D,OACR20B,GAAe,GAEjB14B,EAAQujB,YAERvjB,EAAQwjB,OAAOmU,EAAY,GAAIA,EAAY,IAC3C33B,EAAQoI,OAAOuvB,EAAY,GAAIA,EAAY,IAC3C33B,EAAQoI,OAAOuvB,EAAY,GAAIA,EAAY,IAC3C33B,EAAQoI,OAAOuvB,EAAY,GAAIA,EAAY,IAE3C33B,EAAQwjB,OAAO+D,EAAK,GAAIA,EAAK,IAC7BvnB,EAAQoI,OAAOmf,EAAK,GAAIA,EAAK,IAC7BvnB,EAAQoI,OAAOmf,EAAK,GAAIA,EAAK,IAC7BvnB,EAAQoI,OAAOmf,EAAK,GAAIA,EAAK,IAC7BvnB,EAAQunB,OAEZ,CAEFkQ,EAAMlkE,KAAKokE,GACXD,EAAOnkE,KAAKskE,EACd,CACA,IAAK,IAAI/7D,EAAI,EAAGklE,EAAKd,EAAe/sE,OAAQ2I,EAAIklE,IAAMllE,EAAG,CACjCokE,EAAepkE,GACvB+qD,QACZ7mB,EACA,EACA10B,EACA9E,EACAs5D,EACAyD,EAEJ,CACI7K,GACF14B,EAAQsE,SAEZ,CACAtE,EAAQgE,YAAcwC,EACtBnzC,KAAK01D,MAAQA,EAEb3mD,MAAMqpD,WAAWzrB,EAASlF,EAC5B,CAUA+jC,cACE7xD,EACA6J,EACA68B,EACAsqB,EACAC,GAEA,IAAKvqB,EACH,OAAO,EAET,IAAIorB,GAAU,EACd,GAAIh8D,MAAM2L,QAAQilC,GAChB,IAAK,IAAIhiD,EAAI,EAAG0S,EAAKsvC,EAAOvgD,OAAQzB,EAAI0S,IAAM1S,EAC5CotE,EACED,GACEb,EACAhxD,EACA0mC,EAAOhiD,GACPmlB,EACAxjB,KAAK+rE,kCACLhgE,EACA6+D,IACGa,OAGTA,EAAUD,GACRb,EACAhxD,EACA0mC,EACA78B,EACAxjB,KAAK+rE,kCACLhgE,EACA6+D,GAGJ,OAAOa,CACT,CAOAc,sBAAsB/2C,GACpB,MAAM3E,EACJ7wB,KAAKs2D,WAEP,GAA8B,WAA1BzlC,EAAM87C,gBACR,OAAO,EAET,MAAMyD,EAAc56C,EAAKy3C,eAAep8C,GAClCtN,EAAWsN,EAAM7S,cACjB/O,EAAaumB,EAAKk3C,iBACxB,OACE0D,EAAYC,yBAA2BphE,GACvCmhE,EAAYE,uBAAyB/sD,CAEzC,CAOAqpD,iBAAiBp3C,EAAMiS,GACrB,MAAM5W,EACJ7wB,KAAKs2D,WAED8Z,EAAc56C,EAAKy3C,eAAep8C,GAClCtN,EAAWsN,EAAM7S,cACjB6uD,EAAiBr3C,EAAKq3C,eAAe,EAAOh8C,IAClDu/C,EAAYE,qBAAuB/sD,EAEnC,MAAM0yC,EAAYzgC,EAAKkqC,iBACjB/iC,EAAIs5B,EAAU,GACdjmD,EAAS6gB,EAAMkW,YACrB,IAAIgD,EAAatC,EAAWsC,WAC5B,MACMv1B,EADYizB,EAAWpE,UACA7uB,WACvBtG,EAAW8B,EAAOyyD,yBAAyBjuD,GAC3CuuD,EAAiB70D,EAAS4wB,cAActJ,EAAKygC,UAAU,IACvDsa,EACH9oC,EAAWsC,WAAavU,EAAKk3C,iBAAoB3J,EAC9C9zD,EAAaf,EAAS4wB,cAAcnC,GACpCgQ,EAAUnX,EAAKiX,WAAW5b,GAGhCkZ,EAAarrC,KAAK4W,MAChB5W,KAAKwK,IAAI6gC,EAAYwmC,EAAmBxmC,IAE1C,MAAM32B,EAAOpD,EAAO00D,iBAAiB/nC,EAAGoN,EAAYv1B,GACpDm4B,EAAQJ,OAAOr4B,MAAQd,EAAK,GAC5Bu5B,EAAQJ,OAAOziC,OAASsJ,EAAK,GAC7B,MAAMo9D,EAAczmC,EAAawmC,EACjC,GAAoB,IAAhBC,EAAmB,CACrB,MAAMtf,EAAkB,GAAelxD,KAAKosE,eAC5C,GAAelb,EAAiBsf,EAAaA,GAC7C7jC,EAAQiE,aAAa3lC,MAAM0hC,EAASukB,EACtC,CACA,MAAMmc,EAAan/D,EAASkyD,mBAAmBnK,EAAWj2D,KAAK6tD,WACzD4iB,EAAaF,EAAmBthE,EAChCgJ,EAAY,GAAejY,KAAKosE,eACtC,GAAen0D,EAAWw4D,GAAaA,GzFvpBpC,SAAmBx4D,EAAW9G,EAAIC,GAChCoP,GAASvI,EAAWjR,GAAIoZ,GAAM,EAAG,EAAG,EAAG,EAAGjP,EAAIC,GACvD,CyFspBIoT,CAAmBvM,GAAYo1D,EAAW,IAAKA,EAAW,IAC1D,IAAK,IAAIhvE,EAAI,EAAG0S,EAAK87D,EAAe/sE,OAAQzB,EAAI0S,IAAM1S,EAAG,CACjCwuE,EAAexuE,GACvBm1D,QACZ7mB,EACA6jC,EACAv4D,EACA,GACA,EACA4zD,GAAch7C,EAAM87C,iBAExB,CACAyD,EAAYC,uBAAyB76C,EAAKk3C,gBAC5C,GC50BF,GACW,UADX,GAE8B,yBCkO9B,OAxIA,cAA8BgE,GAI5BtkE,YAAYC,GACVA,EAAUA,GAAoB,CAAC,EAE/B,MAAM85B,EAAqC/sB,OAAOC,OAAO,CAAC,EAAGhN,UACtD85B,EAAY+/B,eACZ//B,EAAYi8B,uBAEnBrzD,MAC8F,GAQ9F/O,KAAK2d,GAKL3d,KAAKmd,KAKLnd,KAAK4d,GAEL,MAAMqyD,EAAa5jE,EAAQ4jE,YAAc,SAEzCx/D,EAAqB,UAAdw/D,GAAwC,UAAdA,EAAwB,IAMzDjwE,KAAK2wE,YAAcV,EAEnBjwE,KAAK4wE,WAAWvkE,EAAQ65D,QAAU75D,EAAQ65D,QAAU,GACpDlmE,KAAK6wE,+BACgC9kE,IAAnCM,EAAQ+1D,wBACJ/1D,EAAQ+1D,wBASdpiE,KAAK62B,cAOL72B,KAAK63B,aACP,CAEA6Q,iBACE,OAAO,IAAI,GAA8B1oC,KAC3C,CAgBAknC,YAAYC,GACV,OAAOp4B,MAAMm4B,YAAYC,EAC3B,CAKAwlC,gBACE,OAAO3sE,KAAK2wE,WACd,CAQApO,aACE,OAA8BviE,KAAK2e,IAAImyD,GACzC,CAQAzO,4BACE,OACEriE,KAAK2e,IAAImyD,GAEb,CAQAF,WAAW1K,GACTlmE,KAAKgH,IAAI8pE,GAAsB5K,EACjC,CAQA2K,0BAA0BzO,GACxBpiE,KAAKgH,IAAI8pE,GAAyC1O,EACpD,GC/FF,OAnIA,cAAyB,GASvBh2D,YAAY6pD,EAAWxgC,EAAOmiB,EAAKm5B,EAAQ5X,EAAkB9sD,GAC3D0C,MAAMknD,EAAWxgC,EAAOppB,GAMxBrM,KAAK0M,OAAS,KAMd1M,KAAKgxE,QAAUD,EAMf/wE,KAAKixE,UAAY,KAMjBjxE,KAAKkxE,QAMLlxE,KAAKwU,WAAa,KAMlBxU,KAAKiP,WAMLjP,KAAKo5D,kBAAoBD,EAMzBn5D,KAAKmxE,KAAOv5B,EAEZ53C,KAAKN,IAAMk4C,CACb,CAOAw5B,YACE,OAAOpxE,KAAKgxE,OACd,CAOA9pC,cACE,OAAOlnC,KAAKixE,SACd,CAKA3mE,OACMtK,KAAKy1B,OAASE,KAChB31B,KAAK24D,SAAShjC,IACd31B,KAAKo5D,kBAAkBp5D,KAAMA,KAAKmxE,MAC9BnxE,KAAKkxE,SACPlxE,KAAKkxE,QAAQlxE,KAAK0M,OAAQ1M,KAAKiP,WAAYjP,KAAKwU,YAGtD,CAOA68D,OAAOx3D,EAAUhB,GACf7Y,KAAKsxE,YAAYz3D,EACnB,CAKA03D,UACEvxE,KAAK24D,SAAShjC,GAChB,CAQA27C,YAAYz3D,GACV7Z,KAAKixE,UAAYp3D,EACjB7Z,KAAK24D,SAAShjC,GAChB,CAOA67C,UAAUC,GACRzxE,KAAKkxE,QAAUO,CACjB,GCwJF,OAvQA,MAIErlE,YAAYslE,GAMV1xE,KAAK0xE,mBAAkC3lE,IAAlB2lE,EAA8BA,EAAgB,KAMnE1xE,KAAK2xE,OAAS,EAMd3xE,KAAK4xE,SAAW,CAAC,EAMjB5xE,KAAK6xE,QAAU,KAMf7xE,KAAK8xE,QAAU,IACjB,CAKAr6B,iBACE,OAAOz3C,KAAK0xE,cAAgB,GAAK1xE,KAAK+zB,WAAa/zB,KAAK0xE,aAC1D,CAMA1L,YAAYlc,GACV,KAAO9pD,KAAKy3C,kBACVz3C,KAAK+J,KAET,CAKAR,QACEvJ,KAAK2xE,OAAS,EACd3xE,KAAK4xE,SAAW,CAAC,EACjB5xE,KAAK6xE,QAAU,KACf7xE,KAAK8xE,QAAU,IACjB,CAMAC,YAAYryE,GACV,OAAOM,KAAK4xE,SAAShzD,eAAelf,EACtC,CAQA6X,QAAQzO,GACN,IAAIkpE,EAAQhyE,KAAK6xE,QACjB,KAAOG,GACLlpE,EAAEkpE,EAAMC,OAAQD,EAAME,KAAMlyE,MAC5BgyE,EAAQA,EAAMG,KAElB,CAOAxzD,IAAIjf,EAAK2M,GACP,MAAM2lE,EAAQhyE,KAAK4xE,SAASlyE,GAE5B,OADA+Q,OAAiB1E,IAAVimE,EAAqB,IACxBA,IAAUhyE,KAAK8xE,UAGfE,IAAUhyE,KAAK6xE,SACjB7xE,KAAK6xE,QAAgC7xE,KAAK6xE,QAAa,MACvD7xE,KAAK6xE,QAAQO,MAAQ,OAErBJ,EAAMG,MAAMC,MAAQJ,EAAMI,MAC1BJ,EAAMI,MAAMD,MAAQH,EAAMG,OAE5BH,EAAMG,MAAQ,KACdH,EAAMI,MAAQpyE,KAAK8xE,QACnB9xE,KAAK8xE,QAAQK,MAAQH,EACrBhyE,KAAK8xE,QAAUE,GAZNA,EAAMC,MAcjB,CAOAtnE,OAAOjL,GACL,MAAMsyE,EAAQhyE,KAAK4xE,SAASlyE,GAkB5B,OAjBA+Q,OAAiB1E,IAAVimE,EAAqB,IACxBA,IAAUhyE,KAAK8xE,SACjB9xE,KAAK8xE,QAAgCE,EAAW,MAC5ChyE,KAAK8xE,UACP9xE,KAAK8xE,QAAQK,MAAQ,OAEdH,IAAUhyE,KAAK6xE,SACxB7xE,KAAK6xE,QAAgCG,EAAW,MAC5ChyE,KAAK6xE,UACP7xE,KAAK6xE,QAAQO,MAAQ,QAGvBJ,EAAMG,MAAMC,MAAQJ,EAAMI,MAC1BJ,EAAMI,MAAMD,MAAQH,EAAMG,cAErBnyE,KAAK4xE,SAASlyE,KACnBM,KAAK2xE,OACAK,EAAMC,MACf,CAKAl+C,WACE,OAAO/zB,KAAK2xE,MACd,CAKA9yD,UACE,MAAMpf,EAAO,IAAIgQ,MAAMzP,KAAK2xE,QAC5B,IACIK,EADA3zE,EAAI,EAER,IAAK2zE,EAAQhyE,KAAK8xE,QAASE,EAAOA,EAAQA,EAAMI,MAC9C3yE,EAAKpB,KAAO2zE,EAAME,KAEpB,OAAOzyE,CACT,CAKA4yE,YACE,MAAM7zD,EAAS,IAAI/O,MAAMzP,KAAK2xE,QAC9B,IACIK,EADA3zE,EAAI,EAER,IAAK2zE,EAAQhyE,KAAK8xE,QAASE,EAAOA,EAAQA,EAAMI,MAC9C5zD,EAAOngB,KAAO2zE,EAAMC,OAEtB,OAAOzzD,CACT,CAKA8zD,WACE,OAAOtyE,KAAK6xE,QAAQI,MACtB,CAKAM,cACE,OAAOvyE,KAAK6xE,QAAQK,IACtB,CAMAM,eACE,OAAOxyE,KAAK8xE,QAAQI,IACtB,CAOAO,KAAK/yE,GACH,GAAKM,KAAK+xE,YAAYryE,GAGtB,OAAOM,KAAK4xE,SAASlyE,GAAKuyE,MAC5B,CAKAloE,MACE,MAAMioE,EAAQhyE,KAAK6xE,QAUnB,cATO7xE,KAAK4xE,SAASI,EAAME,MACvBF,EAAMG,QACRH,EAAMG,MAAMC,MAAQ,MAEtBpyE,KAAK6xE,QAAgCG,EAAW,MAC3ChyE,KAAK6xE,UACR7xE,KAAK8xE,QAAU,QAEf9xE,KAAK2xE,OACAK,EAAMC,MACf,CAMAl7D,QAAQrX,EAAKb,GACXmB,KAAK2e,IAAIjf,GACTM,KAAK4xE,SAASlyE,GAAKuyE,OAASpzE,CAC9B,CAMAmI,IAAItH,EAAKb,GACP4R,IAAS/Q,KAAOM,KAAK4xE,UAAW,IAChC,MAAMI,EAAQ,CACZE,KAAMxyE,EACNyyE,MAAO,KACPC,MAAOpyE,KAAK8xE,QACZG,OAAQpzE,GAELmB,KAAK8xE,QAGR9xE,KAAK8xE,QAAQK,MAAQH,EAFrBhyE,KAAK6xE,QAAUG,EAIjBhyE,KAAK8xE,QAAUE,EACfhyE,KAAK4xE,SAASlyE,GAAOsyE,IACnBhyE,KAAK2xE,MACT,CAOA75B,QAAQ1kC,GACNpT,KAAK0xE,cAAgBt+D,CACvB,GCzQK,SAAS,GAAeupB,EAAGxzB,EAAGuG,EAAGumD,GACtC,YAAkBlqD,IAAdkqD,GACFA,EAAU,GAAKt5B,EACfs5B,EAAU,GAAK9sD,EACf8sD,EAAU,GAAKvmD,EACRumD,GAEF,CAACt5B,EAAGxzB,EAAGuG,EAChB,CAQO,SAASgjE,GAAU/1C,EAAGxzB,EAAGuG,GAC9B,OAAOitB,EAAI,IAAMxzB,EAAI,IAAMuG,CAC7B,CA6BO,SAASijE,GAAQjzE,GACtB,OAAOA,EAAIosC,MAAM,KAAKnF,IAAIoF,OAC5B,CCpBA,OAzCA,cAAwB,GACtBxiC,QACE,KAAOvJ,KAAK+zB,WAAa,GACvB/zB,KAAK+J,MAAM2uD,UAEb3pD,MAAMxF,OACR,CAKAy8D,YAAYP,GACV,KAAOzlE,KAAKy3C,kBAAkB,CAE5B,GADaz3C,KAAKsyE,WACTt9C,WAAYywC,EACnB,MAEAzlE,KAAK+J,MAAM2uD,SAEf,CACF,CAKAka,qBACE,GAAwB,IAApB5yE,KAAK+zB,WACP,OAEF,MAEM4I,EADYg2C,GADN3yE,KAAKwyE,gBAEG,GACpBxyE,KAAKuX,SAASie,IACRA,EAAKygC,UAAU,KAAOt5B,IACxB38B,KAAK2K,ODGN,SAAgBsrD,GACrB,OAAOyc,GAAUzc,EAAU,GAAIA,EAAU,GAAIA,EAAU,GACzD,CCLoB,CAAOzgC,EAAKygC,YACxBzgC,EAAKkjC,UACP,GAEJ,GCzBF,MAAMma,GAAe,CAAC,EAAG,EAAG,GAooB5B,OAvlBA,MAIEzmE,YAAYC,GAwBV,IAAI8vB,EACJ,GApBAn8B,KAAKw2B,aAA8BzqB,IAApBM,EAAQmqB,QAAwBnqB,EAAQmqB,QAAU,EAMjEx2B,KAAKw9B,aAAenxB,EAAQmwB,YAC5B/rB,EzG6IG,SAAkBlO,EAAK+L,EAAMwkE,GAClC,MAAMC,EAAUzkE,GAAQsM,GACxB,OAAOrY,EAAIywE,OAAM,SAAUC,EAAYj2D,GACrC,GAAc,IAAVA,EACF,OAAO,EAET,MAAMk2D,EAAMH,EAAQxwE,EAAIya,EAAQ,GAAIi2D,GACpC,QAASC,EAAM,GAAMJ,GAAkB,IAARI,EACjC,GACF,CyGrJMC,CACEnzE,KAAKw9B,cACL,SAAU70B,EAAG/D,GACX,OAAOA,EAAI+D,CACb,IACA,GAEF,KAKG0D,EAAQ+mE,QACX,IAAK,IAAI/0E,EAAI,EAAG0S,EAAK/Q,KAAKw9B,aAAa19B,OAAS,EAAGzB,EAAI0S,IAAM1S,EAC3D,GAAK89B,GAGH,GAAIn8B,KAAKw9B,aAAan/B,GAAK2B,KAAKw9B,aAAan/B,EAAI,KAAO89B,EAAY,CAClEA,OAAapwB,EACb,KACF,OALAowB,EAAan8B,KAAKw9B,aAAan/B,GAAK2B,KAAKw9B,aAAan/B,EAAI,GAchE2B,KAAKu9B,YAAcpB,EAMnBn8B,KAAKy2B,QAAUz2B,KAAKw9B,aAAa19B,OAAS,EAM1CE,KAAKuxC,aAA6BxlC,IAAnBM,EAAQ66C,OAAuB76C,EAAQ66C,OAAS,KAM/DlnD,KAAKqzE,SAAW,UACQtnE,IAApBM,EAAQ+mE,UACVpzE,KAAKqzE,SAAWhnE,EAAQ+mE,QACxB3iE,EAAOzQ,KAAKqzE,SAASvzE,QAAUE,KAAKw9B,aAAa19B,OAAQ,KAG3D,MAAM4M,EAASL,EAAQK,YAERX,IAAXW,GAAyB1M,KAAKuxC,SAAYvxC,KAAKqzE,WACjDrzE,KAAKuxC,QAAU,GAAW7kC,IAG5B+D,GACIzQ,KAAKuxC,SAAWvxC,KAAKqzE,UAAcrzE,KAAKuxC,UAAYvxC,KAAKqzE,SAC3D,IAOFrzE,KAAKszE,WAAa,UACQvnE,IAAtBM,EAAQknE,YACVvzE,KAAKszE,WAAajnE,EAAQknE,UAC1B9iE,EAAOzQ,KAAKszE,WAAWxzE,QAAUE,KAAKw9B,aAAa19B,OAAQ,KAO7DE,KAAKwzE,eACkBznE,IAArBM,EAAQy2D,SACJz2D,EAAQy2D,SACP9iE,KAAKszE,WAEN,KADA76C,GAENhoB,GACIzQ,KAAKwzE,WAAaxzE,KAAKszE,YACtBtzE,KAAKwzE,YAAcxzE,KAAKszE,WAC3B,IAOFtzE,KAAKyM,aAAqBV,IAAXW,EAAuBA,EAAS,KAM/C1M,KAAKyzE,gBAAkB,KAMvBzzE,KAAK0zE,SAAW,CAAC,EAAG,GAMpB1zE,KAAK2zE,WAAa,CAAC,EAAG,EAAG,EAAG,QAEN5nE,IAAlBM,EAAQunE,MACV5zE,KAAKyzE,gBAAkBpnE,EAAQunE,MAAMjtC,KAAI,SAAUvzB,EAAMupB,GACvD,MAAMw5B,EAAY,IAAI,GACpBz3D,KAAKqI,IAAI,EAAGqM,EAAK,IACjB1U,KAAKwK,IAAIkK,EAAK,GAAK,GAAI,GACvB1U,KAAKqI,IAAI,EAAGqM,EAAK,IACjB1U,KAAKwK,IAAIkK,EAAK,GAAK,GAAI,IAEzB,GAAI1G,EAAQ,CACV,MAAMmnE,EAAsB7zE,KAAK6gE,0BAA0Bn0D,EAAQiwB,GACnEw5B,EAAU1sD,KAAO/K,KAAKwK,IAAI2qE,EAAoBpqE,KAAM0sD,EAAU1sD,MAC9D0sD,EAAUxsD,KAAOjL,KAAKqI,IAAI8sE,EAAoBlqE,KAAMwsD,EAAUxsD,MAC9DwsD,EAAUzsD,KAAOhL,KAAKwK,IAAI2qE,EAAoBnqE,KAAMysD,EAAUzsD,MAC9DysD,EAAUvsD,KAAOlL,KAAKqI,IAAI8sE,EAAoBjqE,KAAMusD,EAAUvsD,KAChE,CACA,OAAOusD,CACT,GAAGn2D,MACM0M,GACT1M,KAAK8zE,qBAAqBpnE,EAE9B,CAUAqnE,iBAAiBrnE,EAAQ+xB,EAAMjsB,GAC7B,MAAM2jD,EAAYn2D,KAAK6gE,0BAA0Bn0D,EAAQ+xB,GACzD,IAAK,IAAIpgC,EAAI83D,EAAU1sD,KAAMsH,EAAKolD,EAAUxsD,KAAMtL,GAAK0S,IAAM1S,EAC3D,IAAK,IAAIgkB,EAAI8zC,EAAUzsD,KAAMmd,EAAKsvC,EAAUvsD,KAAMyY,GAAKwE,IAAMxE,EAC3D7P,EAAS,CAACisB,EAAMpgC,EAAGgkB,GAGzB,CASA4hD,gCACEhO,EACAzjD,EACAwhE,EACAC,GAEA,IAAI9d,EAAWhtD,EAAGuG,EACdwkE,EAAkB,KAClBv3C,EAAIs5B,EAAU,GAAK,EAOvB,IANyB,IAArBj2D,KAAKu9B,aACPp0B,EAAI8sD,EAAU,GACdvmD,EAAIumD,EAAU,IAEdie,EAAkBl0E,KAAKogE,mBAAmBnK,EAAWge,GAEhDt3C,GAAK38B,KAAKw2B,SAAS,CAYxB,GAXyB,IAArBx2B,KAAKu9B,aACPp0B,EAAIzK,KAAKQ,MAAMiK,EAAI,GACnBuG,EAAIhR,KAAKQ,MAAMwQ,EAAI,GACnBymD,EAAY,GAAwBhtD,EAAGA,EAAGuG,EAAGA,EAAGskE,IAEhD7d,EAAYn2D,KAAK6gE,0BACfqT,EACAv3C,EACAq3C,GAGAxhE,EAASmqB,EAAGw5B,GACd,OAAO,IAEPx5B,CACJ,CACA,OAAO,CACT,CAOAlvB,YACE,OAAOzN,KAAKyM,OACd,CAOA8qB,aACE,OAAOv3B,KAAKy2B,OACd,CAOAa,aACE,OAAOt3B,KAAKw2B,OACd,CAQA4T,UAAUzN,GACR,OAAI38B,KAAKuxC,QACAvxC,KAAKuxC,QAEPvxC,KAAKqzE,SAAS12C,EACvB,CAQAmC,cAAcnC,GACZ,OAAO38B,KAAKw9B,aAAab,EAC3B,CAOA8F,iBACE,OAAOziC,KAAKw9B,YACd,CAQAumC,2BAA2B9N,EAAW+d,EAAeC,GACnD,GAAIhe,EAAU,GAAKj2D,KAAKy2B,QAAS,CAC/B,GAAyB,IAArBz2B,KAAKu9B,YAAmB,CAC1B,MAAM9zB,EAAsB,EAAfwsD,EAAU,GACjBvsD,EAAsB,EAAfusD,EAAU,GACvB,OAAO,GACLxsD,EACAA,EAAO,EACPC,EACAA,EAAO,EACPsqE,EAEJ,CACA,MAAME,EAAkBl0E,KAAKogE,mBAC3BnK,EACAge,GAAcj0E,KAAK2zE,YAErB,OAAO3zE,KAAK6gE,0BACVqT,EACAje,EAAU,GAAK,EACf+d,EAEJ,CACA,OAAO,IACT,CAQAG,6BAA6Ble,EAAWt5B,EAAGq3C,GACzC,GAAIr3C,EAAI38B,KAAKy2B,SAAWkG,EAAI38B,KAAKw2B,QAC/B,OAAO,KAGT,MAAM49C,EAAane,EAAU,GACvBoe,EAAape,EAAU,GACvBqe,EAAare,EAAU,GAE7B,GAAIt5B,IAAMy3C,EACR,OAAO,GACLC,EACAC,EACAD,EACAC,EACAN,GAIJ,GAAIh0E,KAAKu9B,YAAa,CACpB,MAAMloB,EAAS3W,KAAKC,IAAIqB,KAAKu9B,YAAaZ,EAAIy3C,GACxC3qE,EAAO/K,KAAKQ,MAAMm1E,EAAah/D,GAC/B3L,EAAOhL,KAAKQ,MAAMo1E,EAAaj/D,GACrC,GAAIsnB,EAAIy3C,EACN,OAAO,GAAwB3qE,EAAMA,EAAMC,EAAMA,EAAMsqE,GAKzD,OAAO,GAAwBvqE,EAFlB/K,KAAKQ,MAAMmW,GAAUg/D,EAAa,IAAM,EAEV3qE,EAD9BhL,KAAKQ,MAAMmW,GAAUi/D,EAAa,IAAM,EACEN,EACzD,CAEA,MAAME,EAAkBl0E,KAAKogE,mBAAmBnK,EAAWj2D,KAAK2zE,YAChE,OAAO3zE,KAAK6gE,0BAA0BqT,EAAiBv3C,EAAGq3C,EAC5D,CASAnT,0BAA0Bn0D,EAAQiwB,EAAGq3C,GACnCh0E,KAAKu0E,uBAAuB7nE,EAAO,GAAIA,EAAO,GAAIiwB,GAAG,EAAOk2C,IAC5D,MAAMppE,EAAOopE,GAAa,GACpBnpE,EAAOmpE,GAAa,GAC1B7yE,KAAKu0E,uBAAuB7nE,EAAO,GAAIA,EAAO,GAAIiwB,GAAG,EAAMk2C,IAG3D,OAAO,GAAwBppE,EAFlBopE,GAAa,GAEiBnpE,EAD9BmpE,GAAa,GAC6BmB,EACzD,CAMAzN,mBAAmBtQ,GACjB,MAAM/O,EAASlnD,KAAKoqC,UAAU6rB,EAAU,IAClChnD,EAAajP,KAAK8+B,cAAcm3B,EAAU,IAC1C6M,EAAWl6B,GAAO5oC,KAAKihE,YAAYhL,EAAU,IAAKj2D,KAAK0zE,UAC7D,MAAO,CACLxsB,EAAO,IAAM+O,EAAU,GAAK,IAAO6M,EAAS,GAAK7zD,EACjDi4C,EAAO,IAAM+O,EAAU,GAAK,IAAO6M,EAAS,GAAK7zD,EAErD,CAUAmxD,mBAAmBnK,EAAWge,GAC5B,MAAM/sB,EAASlnD,KAAKoqC,UAAU6rB,EAAU,IAClChnD,EAAajP,KAAK8+B,cAAcm3B,EAAU,IAC1C6M,EAAWl6B,GAAO5oC,KAAKihE,YAAYhL,EAAU,IAAKj2D,KAAK0zE,UACvDjqE,EAAOy9C,EAAO,GAAK+O,EAAU,GAAK6M,EAAS,GAAK7zD,EAChDvF,EAAOw9C,EAAO,IAAM+O,EAAU,GAAK,GAAK6M,EAAS,GAAK7zD,EAG5D,OAAO6C,EAAerI,EAAMC,EAFfD,EAAOq5D,EAAS,GAAK7zD,EACrBvF,EAAOo5D,EAAS,GAAK7zD,EACYglE,EAChD,CAaAvF,kCAAkCp9D,EAAYrC,EAAYulE,GACxD,OAAOx0E,KAAKy0E,gCACVnjE,EAAW,GACXA,EAAW,GACXrC,GACA,EACAulE,EAEJ,CAeAC,gCACEtrE,EACAuG,EACAT,EACAylE,EACAF,GAEA,MAAM73C,EAAI38B,KAAK2gE,kBAAkB1xD,GAC3BmV,EAAQnV,EAAajP,KAAK8+B,cAAcnC,GACxCuqB,EAASlnD,KAAKoqC,UAAUzN,GACxBmmC,EAAWl6B,GAAO5oC,KAAKihE,YAAYtkC,GAAI38B,KAAK0zE,UAElD,IAAIW,EAAcjwD,GAASjb,EAAI+9C,EAAO,IAAOj4C,EAAa6zD,EAAS,GAC/DwR,EAAclwD,GAAS8iC,EAAO,GAAKx3C,GAAMT,EAAa6zD,EAAS,GAUnE,OARI4R,GACFL,EAAa/qE,GAAK+qE,EApeP,GAoe+B,EAC1CC,EAAahrE,GAAKgrE,EAreP,GAqe+B,IAE1CD,EAAan1E,GAAMm1E,EAveR,GAweXC,EAAap1E,GAAMo1E,EAxeR,IA2eN,GAAwB33C,EAAG03C,EAAYC,EAAYE,EAC5D,CAiBAD,uBAAuBprE,EAAGuG,EAAGitB,EAAG+3C,EAA2BF,GACzD,MAAMttB,EAASlnD,KAAKoqC,UAAUzN,GACxB1tB,EAAajP,KAAK8+B,cAAcnC,GAChCmmC,EAAWl6B,GAAO5oC,KAAKihE,YAAYtkC,GAAI38B,KAAK0zE,UAElD,IAAIW,GAAclrE,EAAI+9C,EAAO,IAAMj4C,EAAa6zD,EAAS,GACrDwR,GAAcptB,EAAO,GAAKx3C,GAAKT,EAAa6zD,EAAS,GAUzD,OARI4R,GACFL,EAAa/qE,GAAK+qE,EAtgBP,GAsgB+B,EAC1CC,EAAahrE,GAAKgrE,EAvgBP,GAugB+B,IAE1CD,EAAan1E,GAAMm1E,EAzgBR,GA0gBXC,EAAap1E,GAAMo1E,EA1gBR,IA6gBN,GAAwB33C,EAAG03C,EAAYC,EAAYE,EAC5D,CAUA5R,yBAAyBtxD,EAAYqrB,EAAG63C,GACtC,OAAOx0E,KAAKu0E,uBACVjjE,EAAW,GACXA,EAAW,GACXqrB,GACA,EACA63C,EAEJ,CAMAG,uBAAuB1e,GACrB,OAAOj2D,KAAKw9B,aAAay4B,EAAU,GACrC,CAUAgL,YAAYtkC,GACV,OAAI38B,KAAKwzE,UACAxzE,KAAKwzE,UAEPxzE,KAAKszE,WAAW32C,EACzB,CAMAi4C,iBAAiBj4C,GACf,OAAK38B,KAAKyzE,gBAKHzzE,KAAKyzE,gBAAgB92C,GAJnB38B,KAAKyM,QACRzM,KAAK6gE,0BAA0B7gE,KAAKyM,QAASkwB,GAC7C,IAGR,CAmBAgkC,kBAAkB1xD,EAAY4lE,GAM5B,OAAO,GALGh6D,GACR7a,KAAKw9B,aACLvuB,EACA4lE,GAAiB,GAEH70E,KAAKw2B,QAASx2B,KAAKy2B,QACrC,CAQAmtC,4BAA4B3N,EAAW0N,GACrC,OAAOz5C,GACLy5C,EACA,EACAA,EAAS7jE,OACT,EACAE,KAAKogE,mBAAmBnK,GAE5B,CAMA6d,qBAAqBpnE,GACnB,MAAM5M,EAASE,KAAKw9B,aAAa19B,OAC3Bg1E,EAAiB,IAAIrlE,MAAM3P,GACjC,IAAK,IAAI68B,EAAI38B,KAAKw2B,QAASmG,EAAI78B,IAAU68B,EACvCm4C,EAAen4C,GAAK38B,KAAK6gE,0BAA0Bn0D,EAAQiwB,GAE7D38B,KAAKyzE,gBAAkBqB,CACzB,GC7oBF,GAMiB,gBANjB,GAce,cAdf,GAuBiB,gBCmMjB,SAASC,GAAkBC,GACzB,OAAKA,EAGDvlE,MAAM2L,QAAQ45D,GACT,SAAUvtC,GACf,OAAOutC,CACT,EAG6B,mBAApBA,EACFA,EAGF,SAAUvtC,GACf,MAAO,CAACutC,EACV,EAdS,IAeX,CAEA,OAlMA,cAAqB,GAInB5oE,YAAYC,GACV0C,QAMA/O,KAAKwU,WAAa,GAAcnI,EAAQmI,YAMxCxU,KAAKi1E,cAAgBF,GAAkB1oE,EAAQ47B,cAM/CjoC,KAAKk1E,8BACiCnpE,IAApCM,EAAQ8oE,yBACJ9oE,EAAQ8oE,wBAQdn1E,KAAKyrE,SAAU,EAMfzrE,KAAK42B,YAA2B7qB,IAAlBM,EAAQopB,MAAsBppB,EAAQopB,MAAQ,QAM5Dz1B,KAAKo1E,YAA2BrpE,IAAlBM,EAAQgpE,OAAsBhpE,EAAQgpE,MAMpDr1E,KAAKs1E,eAAiBjpE,EAAQ+e,YAM9BprB,KAAKu1E,aAAe,KAMpBv1E,KAAKw1E,aAAe,KAEpB,MAAMv1D,EAAOjgB,KAKbA,KAAKy1E,aAAe,IAAIruC,SAAQ,SAAUC,EAASonC,GACjDxuD,EAAKs1D,aAAeluC,EACpBpnB,EAAKu1D,aAAe/G,CACtB,GACF,CAOAzmC,kBACE,OAAOhoC,KAAKi1E,aACd,CAMAS,6BACE,OAAO11E,KAAKk1E,wBACd,CAOAx1C,gBACE,OAAO1/B,KAAKwU,UACd,CAMAiuB,eAAejuB,GACb,OAAO,IACT,CAKAmzB,UACE,OAAO3nC,KAAKy1E,YACd,CAOA//C,WACE,OAAO11B,KAAK42B,MACd,CAKA+3C,WACE,OAAO3uE,KAAKo1E,MACd,CAKAjR,iBACE,OAAOnkE,KAAKs1E,YACd,CAMAK,UACE31E,KAAK8d,SACP,CASA83D,gBAAgB3tC,GACdjoC,KAAKi1E,cAAgBF,GAAkB9sC,GACvCjoC,KAAK8d,SACP,CAMA66C,SAASljC,GACPz1B,KAAK42B,OAASnB,EACdz1B,KAAK8d,SACP,GCrMK,SAAS+3D,GAAiBrhE,GAC/B,IAAItG,EAAWsG,EAAWxG,qBAK1B,OAJKE,IACHA,EA6HG,SAA6BsG,EAAYiiB,EAASqsC,EAAU9vD,GAEjE,OA3FK,SAAyBtG,EAAQ+pB,EAASqsC,EAAU9vD,GACzDA,OAAoBjH,IAAXiH,EAAuBA,EAAS,WAEzC,MAAMwpB,EAAcs5C,GAAsBppE,EAAQ+pB,EAASqsC,GAE3D,OAAO,IAAI,GAAS,CAClBp2D,OAAQA,EACRw6C,OAAQn0C,GAAUrG,EAAQsG,GAC1BwpB,YAAaA,EACbsmC,SAAUA,GAEd,CAgFSiT,CADQC,GAAqBxhE,GACLiiB,EAASqsC,EAAU9vD,EACpD,CAhIeijE,CAAoBzhE,GAC/BA,EAAWvG,mBAAmBC,IAEzBA,CACT,CA4FA,SAAS4nE,GAAsBppE,EAAQ+pB,EAASqsC,EAAUxsC,GACxDG,OAAsB1qB,IAAZ0qB,EAAwBA,EhEhHJ,GgEiH9BqsC,EAAWl6B,QAAoB78B,IAAb+2D,EAAyBA,EAAWrqC,IAEtD,MAAM3uB,EAAS,GAAU4C,GACnBwH,EAAQ,GAASxH,GAEvB4pB,EACEA,EAAgB,EACZA,EACA53B,KAAKwK,IAAIgL,EAAQ4uD,EAAS,GAAIh5D,EAASg5D,EAAS,IAEtD,MAAMhjE,EAAS22B,EAAU,EACnB+F,EAAc,IAAI/sB,MAAM3P,GAC9B,IAAK,IAAI68B,EAAI,EAAGA,EAAI78B,IAAU68B,EAC5BH,EAAYG,GAAKrG,EAAgB53B,KAAKC,IAAI,EAAGg+B,GAE/C,OAAOH,CACT,CAsBO,SAASw5C,GAAqBxhE,GAEnC,IAAI9H,GADJ8H,EAAa,GAAcA,IACH/G,YACxB,IAAKf,EAAQ,CACX,MAAMwpE,EACH,IAAM,UAA2B1hE,EAAW7G,mBAC/CjB,EAASoF,GAAgBokE,GAAOA,EAAMA,EAAMA,EAC9C,CACA,OAAOxpE,CACT,CCoNO,MAAMypE,WAAwB55D,GAKnCnQ,YAAYnL,EAAMu0B,GAChBzmB,MAAM9N,GAONjB,KAAKw1B,KAAOA,CACd,EAGF,OAzVA,cAAyB,GAIvBppB,YAAYC,GACV0C,MAAM,CACJk5B,aAAc57B,EAAQ47B,aACtBktC,wBAAyB9oE,EAAQ8oE,wBACjC3gE,WAAYnI,EAAQmI,WACpBihB,MAAOppB,EAAQopB,MACf4/C,MAAOhpE,EAAQgpE,MACfjqD,YAAa/e,EAAQ+e,cAMvBprB,KAAK2d,GAKL3d,KAAKmd,KAKLnd,KAAK4d,GAML5d,KAAKo2E,aAA6BrqE,IAAnBM,EAAQgqE,QAAuBhqE,EAAQgqE,OAMtDr2E,KAAKs2E,qBACwBvqE,IAA3BM,EAAQq2D,eAA+Br2D,EAAQq2D,eAAiB,EAKlE1iE,KAAKkO,cAAgCnC,IAArBM,EAAQ6B,SAAyB7B,EAAQ6B,SAAW,KAEpE,MAAM40D,EAAW,CAAC,IAAK,KACnB9iE,KAAKkO,UACP06B,GAAO5oC,KAAKkO,SAAS+yD,YAAYjhE,KAAKkO,SAASopB,cAAewrC,GAOhE9iE,KAAKu2E,UAAY,IAAI,GAAUlqE,EAAQk/B,WAAa,GAMpDvrC,KAAKw2E,QAAU,CAAC,EAAG,GAMnBx2E,KAAKkyE,KAAO7lE,EAAQ3M,KAAO,GAM3BM,KAAKy2E,YAAc,CACjBje,WAAYnsD,EAAQmsD,WACpBptC,YAAa/e,EAAQ+e,aAUvBprB,KAAKsjE,WAAaj3D,EAAQi3D,WAAaj3D,EAAQi3D,WAAa,CAC9D,CAKA7rB,iBACE,OAAOz3C,KAAKu2E,UAAU9+B,gBACxB,CAMAuuB,YAAYxxD,EAAYixD,GACtB,MAAM8Q,EAAYv2E,KAAK02E,0BAA0BliE,GAC7C+hE,GACFA,EAAUvQ,YAAYP,EAE1B,CAWArP,kBAAkB5hD,EAAYmoB,EAAGw5B,EAAW3jD,GAC1C,MAAM+jE,EAAYv2E,KAAK02E,0BAA0BliE,GACjD,IAAK+hE,EACH,OAAO,EAGT,IACI/gD,EAAMwvC,EAAczsB,EADpByrB,GAAU,EAEd,IAAK,IAAI76D,EAAIgtD,EAAU1sD,KAAMN,GAAKgtD,EAAUxsD,OAAQR,EAClD,IAAK,IAAIuG,EAAIymD,EAAUzsD,KAAMgG,GAAKymD,EAAUvsD,OAAQ8F,EAClDs1D,EAAe0N,GAAU/1C,EAAGxzB,EAAGuG,GAC/B6oC,GAAS,EACLg+B,EAAUxE,YAAY/M,KACxBxvC,EACE+gD,EAAU53D,IAAIqmD,GAEhBzsB,EAAS/iB,EAAKE,aAAeC,GACzB4iB,IACFA,GAA4B,IAAnB/lC,EAASgjB,KAGjB+iB,IACHyrB,GAAU,GAIhB,OAAOA,CACT,CAMAhB,uBAAuBxuD,GACrB,OAAO,CACT,CAMAwgB,SACE,OAAOh1B,KAAKkyE,IACd,CAOAyE,OAAOj3E,GACDM,KAAKkyE,OAASxyE,IAChBM,KAAKkyE,KAAOxyE,EACZM,KAAK8d,UAET,CAMAymD,UAAU/vD,GACR,OAAOxU,KAAKo2E,OACd,CAMA3zC,eAAejuB,GACb,MAAMtG,EAAWsG,EACbxU,KAAKyiE,yBAAyBjuD,GAC9BxU,KAAKkO,SACT,OAAKA,EAGEA,EAASu0B,iBAFP,IAGX,CAWA6/B,QAAQ3lC,EAAGxzB,EAAGuG,EAAGq6B,EAAYv1B,GAC3B,OAAO,GACT,CAOA44D,cACE,OAAOptE,KAAKkO,QACd,CAMAu0D,yBAAyBjuD,GACvB,OAAKxU,KAAKkO,SAGHlO,KAAKkO,SAFH,GAAyBsG,EAGpC,CAOAkiE,0BAA0BliE,GACxB,MAAMsD,EAAmB9X,KAAK0/B,gBAK9B,OAJAjvB,EACuB,OAArBqH,GAA6B,GAAWA,EAAkBtD,GAC1D,IAEKxU,KAAKu2E,SACd,CASA5T,kBAAkB54B,GAChB,OAAO/pC,KAAKs2E,eACd,CAQA5R,iBAAiB/nC,EAAGoN,EAAYv1B,GAC9B,MAAMtG,EAAWlO,KAAKyiE,yBAAyBjuD,GACzCkuD,EAAiB1iE,KAAK2iE,kBAAkB54B,GACxC+4B,EAAWl6B,GAAO16B,EAAS+yD,YAAYtkC,GAAI38B,KAAKw2E,SACtD,OAAsB,GAAlB9T,EACKI,GzDlRS1vD,EyDoRD0vD,EzDpRO3pC,EyDoRGupC,OzDnRhB32D,KADoBkF,EyDoRYjR,KAAKw2E,WzDlRhDvlE,EAAO,CAAC,EAAG,IAEbA,EAAK,GAAMmC,EAAK,GAAK+lB,EAAQ,GAAO,EACpCloB,EAAK,GAAMmC,EAAK,GAAK+lB,EAAQ,GAAO,EAC7BloB,GANF,IAAemC,EAAM+lB,EAAOloB,CyDqRjC,CAWA2lE,+BAA+B3gB,EAAWzhD,GACxCA,OAA4BzI,IAAfyI,EAA2BA,EAAaxU,KAAK0/B,gBAC1D,MAAMxxB,EAAWlO,KAAKyiE,yBAAyBjuD,GAI/C,OAHIxU,KAAK2uE,YAAcn6D,EAAW1G,aAChCmoD,ED3SC,SAAe/nD,EAAU+nD,EAAWzhD,GACzC,MAAMmoB,EAAIs5B,EAAU,GACd/iD,EAAShF,EAASq4D,mBAAmBtQ,GACrCrhD,EAAmBohE,GAAqBxhE,GAC9C,IAAKnD,EAAmBuD,EAAkB1B,GAAS,CACjD,MAAMuB,EAAa,GAASG,GACtBF,EAAahW,KAAK4K,MACrBsL,EAAiB,GAAK1B,EAAO,IAAMuB,GAGtC,OADAvB,EAAO,IAAMuB,EAAaC,EACnBxG,EAAS00D,yBAAyB1vD,EAAQypB,EACnD,CACA,OAAOs5B,CACT,CC8RkB,CAAM/nD,EAAU+nD,EAAWzhD,IN5PtC,SAA0ByhD,EAAW/nD,GAC1C,MAAMyuB,EAAIs5B,EAAU,GACd9sD,EAAI8sD,EAAU,GACdvmD,EAAIumD,EAAU,GAEpB,GAAI/nD,EAASopB,aAAeqF,GAAKA,EAAIzuB,EAASqpB,aAC5C,OAAO,EAET,MAAM4+B,EAAYjoD,EAAS0mE,iBAAiBj4C,GAC5C,OAAKw5B,GAGEA,EAAU5kD,WAAWpI,EAAGuG,EACjC,CMiPWmnE,CAAiB5gB,EAAW/nD,GAAY+nD,EAAY,IAC7D,CAMA1sD,QACEvJ,KAAKu2E,UAAUhtE,OACjB,CAEAosE,UACE31E,KAAKuJ,QACLwF,MAAM4mE,SACR,CAOAlP,gBAAgBH,EAAW9xD,GACzB,MAAM+hE,EAAYv2E,KAAK02E,0BAA0BliE,GAC7C8xD,EAAYiQ,EAAU7E,gBACxB6E,EAAU7E,cAAgBpL,EAE9B,CAUAE,QAAQ7pC,EAAGxzB,EAAGuG,EAAG8E,GAAa,GCxWzB,SAASsiE,GAAmBC,EAAU7oE,GAC3C,MAAM8oE,EAAS,SACTC,EAAS,SACTC,EAAS,SACTC,EAAa,UACnB,OAAO,SAOKlhB,EAAWlsB,EAAYv1B,GAC/B,GAAKyhD,EAGL,OAAO8gB,EACJhgE,QAAQigE,EAAQ/gB,EAAU,GAAGxJ,YAC7B11C,QAAQkgE,EAAQhhB,EAAU,GAAGxJ,YAC7B11C,QAAQmgE,EAAQjhB,EAAU,GAAGxJ,YAC7B11C,QAAQogE,GAAY,WACnB,MAAMx6C,EAAIs5B,EAAU,GACdxL,EAAQv8C,EAAS0mE,iBAAiBj4C,GACxClsB,EAAOg6C,EAAO,IAEd,OADUA,EAAMrP,YAAc6a,EAAU,GAAK,GACpCxJ,UACX,GAEN,CACF,CAOO,SAAS2qB,GAAoBC,EAAWnpE,GAC7C,MAAM/L,EAAMk1E,EAAUv3E,OAChBw3E,EAAmB,IAAI7nE,MAAMtN,GACnC,IAAK,IAAI9D,EAAI,EAAGA,EAAI8D,IAAO9D,EACzBi5E,EAAiBj5E,GAAKy4E,GAAmBO,EAAUh5E,GAAI6P,GAEzD,OAOK,SAAoCopE,GACzC,GAAgC,IAA5BA,EAAiBx3E,OACnB,OAAOw3E,EAAiB,GAE1B,OAAO,SAOKrhB,EAAWlsB,EAAYv1B,GAC/B,IAAKyhD,EACH,OAEF,MAAMlxD,EPHL,SAAckxD,GACnB,OAAQA,EAAU,IAAMA,EAAU,IAAMA,EAAU,EACpD,COCgB,CAAcA,GAClBj5C,EAAQ,GAAOjY,EAAGuyE,EAAiBx3E,QACzC,OAAOw3E,EAAiBt6D,GAAOi5C,EAAWlsB,EAAYv1B,EAE1D,CACF,CA3BS+iE,CAA2BD,EACpC,CCjBA,MAAME,WAAgB,GAIpBprE,YAAYC,GACV0C,MAAM,CACJk5B,aAAc57B,EAAQ47B,aACtBsD,UAAWl/B,EAAQk/B,UACnB8qC,OAAQhqE,EAAQgqE,OAChB7hE,WAAYnI,EAAQmI,WACpBihB,MAAOppB,EAAQopB,MACfvnB,SAAU7B,EAAQ6B,SAClBw0D,eAAgBr2D,EAAQq2D,eACxB2S,MAAOhpE,EAAQgpE,MACf7c,WAAYnsD,EAAQmsD,WACpBptC,YAAa/e,EAAQ+e,YACrB1rB,IAAK2M,EAAQ3M,IACby1E,wBAAyB9oE,EAAQ8oE,wBACjC7R,WAAYj3D,EAAQi3D,aAOtBtjE,KAAKy3E,yBACHz3E,KAAK03E,kBAAoBF,GAAQ3zE,UAAU6zE,gBAM7C13E,KAAKm5D,iBAAmB9sD,EAAQ8sD,iBAE5B9sD,EAAQqrE,kBACV13E,KAAK03E,gBAAkBrrE,EAAQqrE,iBAOjC13E,KAAK23E,KAAO,KAERtrE,EAAQsrE,KACV33E,KAAK43E,QAAQvrE,EAAQsrE,MACZtrE,EAAQwrE,KACjB73E,KAAK83E,OAAOzrE,EAAQwrE,KAOtB73E,KAAK+3E,iBAAmB,CAAC,CAC3B,CAOAC,sBACE,OAAOh4E,KAAKm5D,gBACd,CAOA8e,qBACE,OAAO7+D,OAAO8+D,eAAel4E,MAAM03E,kBAAoB13E,KAAK03E,gBACxD13E,KAAK03E,gBAAgBt6D,KAAKpd,MAC1BA,KAAK03E,eACX,CASAS,UACE,OAAOn4E,KAAK23E,IACd,CAOAziD,iBAAiB9Y,GACf,MAAMoZ,EAAoDpZ,EAAY,OAChEynD,EAAM,EAAOruC,GACb2sC,EAAY3sC,EAAKE,WACvB,IAAIz0B,EACAkhE,GAAaxsC,IACf31B,KAAK+3E,iBAAiBlU,IAAO,EAC7B5iE,EAAOm3E,IACEvU,KAAO7jE,KAAK+3E,0BACd/3E,KAAK+3E,iBAAiBlU,GAC7B5iE,EACEkhE,GAAaxsC,GACTyiD,GACAjW,GAAaxsC,GACbyiD,QACArsE,GAEIA,MAAR9K,GACFjB,KAAKmc,cAAc,IAAIg6D,GAAgBl1E,EAAMu0B,GAEjD,CAOA6iD,oBAAoBlf,GAClBn5D,KAAKu2E,UAAUhtE,QACfvJ,KAAKm5D,iBAAmBA,EACxBn5D,KAAK8d,SACP,CAQAw6D,mBAAmBZ,EAAiBh4E,GAClCM,KAAK03E,gBAAkBA,EACvB13E,KAAKu2E,UAAU3D,0BACI,IAARlzE,EACTM,KAAK22E,OAAOj3E,GAEZM,KAAK8d,SAET,CAOAg6D,OAAOD,GACL,MAAMF,EDzFH,SAAmBE,GACxB,MAAMF,EAAO,GACb,IAAIzqC,EAAQ,sBAAsBzB,KAAKosC,GACvC,GAAI3qC,EAAO,CAET,MAAMqrC,EAAgBrrC,EAAM,GAAG1lC,WAAW,GACpCgxE,EAAetrC,EAAM,GAAG1lC,WAAW,GACzC,IAAIixE,EACJ,IAAKA,EAAWF,EAAeE,GAAYD,IAAgBC,EACzDd,EAAKz3E,KAAK23E,EAAI9gE,QAAQm2B,EAAM,GAAIjnC,OAAOC,aAAauyE,KAEtD,OAAOd,CACT,CAEA,GADAzqC,EAAQ,kBAAkBzB,KAAKosC,GAC3B3qC,EAAO,CAET,MAAMwrC,EAAO/sC,SAASuB,EAAM,GAAI,IAChC,IAAK,IAAI7uC,EAAIstC,SAASuB,EAAM,GAAI,IAAK7uC,GAAKq6E,EAAMr6E,IAC9Cs5E,EAAKz3E,KAAK23E,EAAI9gE,QAAQm2B,EAAM,GAAI7uC,EAAEouD,aAEpC,OAAOkrB,CACT,CAEA,OADAA,EAAKz3E,KAAK23E,GACHF,CACT,CCiEiB,CAAUE,GACvB73E,KAAK23E,KAAOA,EACZ33E,KAAK43E,QAAQD,EACf,CAOAC,QAAQD,GACN33E,KAAK23E,KAAOA,EACZ,MAAMj4E,EAAMi4E,EAAK93E,KAAK,MAClBG,KAAKy3E,yBACPz3E,KAAKs4E,mBAAmBlB,GAAoBO,EAAM33E,KAAKkO,UAAWxO,GAElEM,KAAK22E,OAAOj3E,EAEhB,CAQAg4E,gBAAgBzhB,EAAWlsB,EAAYv1B,GAEvC,CAQAgyD,QAAQ7pC,EAAGxzB,EAAGuG,GACZ,MAAMs1D,EAAe0N,GAAU/1C,EAAGxzB,EAAGuG,GACjC1P,KAAKu2E,UAAUxE,YAAY/M,IAC7BhlE,KAAKu2E,UAAU53D,IAAIqmD,EAEvB,EAGF,UCjNA,MAAM,GAAa,GAgJnB,OA9IA,cAA+B,GAQ7B54D,YAAY6pD,EAAWxgC,EAAOkjD,EAAcpL,GAC1Cx+D,MAAMknD,EAAWxgC,EAAO,CAAC+iC,WAAY,IAMrCx4D,KAAK2mE,SAAW,CAAC,EAMjB3mE,KAAK6sE,eAAiB,CAAC,EAMvB7sE,KAAK0tE,wBAA0B,CAAC,EAMhC1tE,KAAK4uE,mBAAqB,EAK1B5uE,KAAKytE,sBAAwB,CAAC,EAM9BztE,KAAK44E,aAAe,CAAC,EAKrB54E,KAAKstE,YAAc,GAKnBttE,KAAK64E,cAAgB,CAAC,EAKtB74E,KAAK0sE,iBAKL1sE,KAAKutE,eAAiBA,EAAenwD,UAAKrR,EAAW/L,MAKrDA,KAAK0/D,iBAAmBiZ,CAC1B,CAMAlsC,WAAW5b,GACT,MAAMnxB,EAAM,EAAOmxB,GAInB,OAHMnxB,KAAOM,KAAK2mE,WAChB3mE,KAAK2mE,SAASjnE,GAAO0sC,GAAsB,EAAG,EAAG,KAE5CpsC,KAAK2mE,SAASjnE,EACvB,CAMAotE,WAAWj8C,GACT,OAAO,EAAOA,KAAU7wB,KAAK2mE,QAC/B,CAOA78B,SAASjZ,GACP,OAAO7wB,KAAK8sE,WAAWj8C,GAAS7wB,KAAKysC,WAAW5b,GAAO0b,OAAS,IAClE,CAMA0gC,eAAep8C,GACb,MAAMnxB,EAAM,EAAOmxB,GAYnB,OAXMnxB,KAAOM,KAAK44E,eAChB54E,KAAK44E,aAAal5E,GAAO,CACvBwtE,OAAO,EACPC,oBAAqB,KACrBtW,mBAAoBr4D,IACpBsjE,kBAAmB,EACnBuO,uBAAwB7xE,IACxB8xE,sBAAuB,EACvBwI,eAAgB,IAGb94E,KAAK44E,aAAal5E,EAC3B,CAKA4K,OACEtK,KAAKutE,gBACP,CAKA7U,UACE,IAAK,MAAMh5D,KAAOM,KAAK2mE,SAAU,CAC/B,MAAMh6B,EAAU3sC,KAAK2mE,SAASjnE,GAC9BgtC,GAAcC,GACd,GAAWzsC,KAAKysC,EAAQJ,eACjBvsC,KAAK2mE,SAASjnE,EACvB,CACAqP,MAAM2pD,SACR,GCxJF,IAAIqgB,IAAkB,EAgDf,SAASC,GACdnB,EACA9G,EACArkE,EACAuC,EACAuF,EACAykE,EACAC,GAEA,MAAMC,EAAM,IAAIC,eAChBD,EAAIE,KACF,MACe,mBAARxB,EAAqBA,EAAInrE,EAAQuC,EAAYuF,GAAcqjE,GAClE,GAEsB,eAApB9G,EAAOz3D,YACT6/D,EAAIG,aAAe,eAErBH,EAAIJ,gBAAkBA,GAKtBI,EAAII,OAAS,SAAUn9D,GAErB,IAAK+8D,EAAIK,QAAWL,EAAIK,QAAU,KAAOL,EAAIK,OAAS,IAAM,CAC1D,MAAMv4E,EAAO8vE,EAAOz3D,UAEpB,IAAItJ,EACQ,QAAR/O,GAA0B,QAARA,EACpB+O,EAASmpE,EAAIM,aACI,OAARx4E,GACT+O,EAASmpE,EAAIO,YACR1pE,IACHA,GAAS,IAAI2pE,WAAYC,gBACvBT,EAAIM,aACJ,qBAGa,eAARx4E,IACT+O,EAAqCmpE,EAAY,UAE/CnpE,EACFipE,EAGIlI,EAAOv3D,aAAaxJ,EAAQ,CAC1BtD,OAAQA,EACRwM,kBAAmB1E,IAGvBu8D,EAAO93D,eAAejJ,IAGxBkpE,GAEJ,MACEA,GAEJ,EAIAC,EAAIU,QAAUX,EACdC,EAAIW,MACN,CC4WA,OAlYA,cAAyB,GAIvB1tE,YAAYC,GACV,MAAMmI,EAAanI,EAAQmI,YAAc,YAEnC9H,EAASL,EAAQK,QAAUspE,GAAqBxhE,GAEhDtG,EACJ7B,EAAQ6B,UNrBP,SAAmB7B,GACxB,MAAM0tE,EAAa1tE,GAAW,CAAC,EAEzBK,EAASqtE,EAAWrtE,QAAU,GAAc,aAAae,YAEzDusE,EAAc,CAClBttE,OAAQA,EACR8pB,QAASujD,EAAWvjD,QACpBssC,SAAUiX,EAAWjX,SACrBtmC,YAAas5C,GACXppE,EACAqtE,EAAWtjD,QACXsjD,EAAWjX,SACXiX,EAAWzjD,gBAGf,OAAO,IAAI,GAAS0jD,EACtB,CMKM,CAAU,CACRttE,OAAQA,EACR4pB,cAAejqB,EAAQiqB,cACvBG,aAA6B1qB,IAApBM,EAAQoqB,QAAwBpqB,EAAQoqB,QAAU,GAC3DD,QAASnqB,EAAQmqB,QACjBssC,SAAUz2D,EAAQy2D,UAAY,MAGlC/zD,MAAM,CACJk5B,aAAc57B,EAAQ47B,aACtBktC,wBAAyB9oE,EAAQ8oE,wBACjC5pC,UAAWl/B,EAAQk/B,UACnBngB,aAAa,EACbirD,QAAQ,EACR7hE,WAAYA,EACZihB,MAAOppB,EAAQopB,MACfvnB,SAAUA,EACVirD,iBAAkB9sD,EAAQ8sD,iBACtB9sD,EAAQ8sD,iBACR,GACJue,gBAAiBrrE,EAAQqrE,gBACzBG,IAAKxrE,EAAQwrE,IACbF,KAAMtrE,EAAQsrE,KACdtC,WAAyBtpE,IAAlBM,EAAQgpE,OAA6BhpE,EAAQgpE,MACpD7c,WAAYnsD,EAAQmsD,WACpB8K,gBAAmCv3D,IAAvBM,EAAQi3D,WAA2B,EAAIj3D,EAAQi3D,aAO7DtjE,KAAKgxE,QAAU3kE,EAAQ0kE,OAAS1kE,EAAQ0kE,OAAS,KAMjD/wE,KAAKi6E,gBAAkB,IAAI,GAAUj6E,KAAKu2E,UAAU7E,eAMpD1xE,KAAK6zD,UAAgC9nD,MAApBM,EAAQmiD,UAA+BniD,EAAQmiD,SAMhExuD,KAAKk6E,UAAY7tE,EAAQ6tE,UAAY7tE,EAAQ6tE,UAAY,GAMzDl6E,KAAKm6E,WAAa,CAAC,CACrB,CAcAC,oBAAoB1tE,GAClB,MAAMmN,EAAW,GACX08D,EAAYv2E,KAAKu2E,UACvB,GAA6B,IAAzBA,EAAUxiD,WACZ,OAAOla,EAET,MAAM8iB,EAAIg2C,GAAQ4D,EAAU/D,gBAAgB,GACtCtkE,EAAWlO,KAAKkO,SAuBtB,OAtBAqoE,EAAUh/D,SAAQ,SAAUie,GAC1B,GAAIA,EAAKygC,UAAU,KAAOt5B,GAAKnH,EAAKE,aAAeC,GACjD,OAEF,MAAM23C,EAAc93C,EAAK+3C,iBACzB,IAAK,IAAIlvE,EAAI,EAAG0S,EAAKu8D,EAAYxtE,OAAQzB,EAAI0S,IAAM1S,EAAG,CACpD,MAAMuvE,EAAaN,EAAYjvE,GACzB43D,EAAY2X,EAAW3X,UAC7B,GAAIliD,GAAWrH,EAAQwB,EAASkyD,mBAAmBnK,IAAa,CAC9D,MAAMokB,EAAezM,EAAW1mC,cAChC,GAAImzC,EACF,IAAK,IAAIh4D,EAAI,EAAGwE,EAAKwzD,EAAav6E,OAAQuiB,EAAIwE,IAAMxE,EAAG,CACrD,MAAMtH,EAAYs/D,EAAah4D,GACzBtI,EAAWgB,EAAU0V,cACvB1c,GAAWrH,EAAQqN,EAAStM,cAC9BoM,EAAS3Z,KAAK6a,EAElB,CAEJ,CACF,CACF,IACOlB,CACT,CAKAw0D,cACE,OAAOruE,KAAK6zD,SACd,CAMAtqD,QACEvJ,KAAKu2E,UAAUhtE,QACfvJ,KAAKi6E,gBAAgB1wE,OACvB,CAMAy8D,YAAYxxD,EAAYixD,GACtB,MAAM8Q,EAAYv2E,KAAK02E,0BAA0BliE,GAC3C8lE,EAAkBlhE,OAAO3Z,KAAKgmE,GAAWt1B,QAAO,CAACme,EAAK5uD,KAC1D,MAAM66E,EX3LL,SAA+B3kD,GACpC,MAAO+G,EAAGxzB,EAAGuG,GAAKkmB,EACfg4B,UAAUh4B,EAAQ04C,YAAY,KAAO,EAAG14C,EAAQ91B,QAChDgsC,MAAM,KACNnF,IAAIoF,QACP,OAAO2mC,GAAU/1C,EAAGxzB,EAAGuG,EACzB,CWqLuB8qE,CAAsB96E,GACjC81B,EAAO+gD,EAAU9D,KAAK8H,GAC5B,GAAI/kD,EAAM,CACR,MAAM83C,EAAc93C,EAAK83C,YACzB,IAAK,IAAIjvE,EAAI,EAAG0S,EAAKu8D,EAAYxtE,OAAQzB,EAAI0S,IAAM1S,EACjDiwD,EAAIgf,EAAYjvE,GAAG22B,WAAY,CAEnC,CACA,OAAOs5B,CAAG,GACT,CAAC,GACJv/C,MAAMi3D,YAAYxxD,EAAYixD,GAC9BzlE,KAAKi6E,gBAAgBjU,YAAYsU,EACnC,CAQA/M,eAAexjC,EAAYv1B,EAAYghB,GACrC,GAAIA,EAAKE,aAAeC,GAAgB,CACtCH,EAAKmjC,SAAShjC,IACd,MAAMgjD,EAAenjD,EAAKkqC,iBACpBxxD,EAAWlO,KAAKyiE,yBAAyBjuD,GACzC9H,EAASwB,EAASkyD,mBAAmBuY,GACrCh8C,EAAIg8C,EAAa,GACjB1pE,EAAaf,EAAS4wB,cAAcnC,GAE1Cj/B,EAAagP,GAASuC,EAAYvC,GAClC,MAAM8yD,EAAiBx/D,KAAKkO,SACtBsvD,EAAegC,EAAe/xD,YAChC+vD,GACF3pD,GAAgBnH,EAAQ8wD,EAAc9wD,GAExC,MAAM+tE,EAAUjb,EAAemB,kBAC7B1xD,EACAjP,KAAKsjE,YAGP9D,EAAeuU,iBAAiBrnE,EAAQ+tE,GAAU5M,IAChD,MAAM6M,EAAU16E,KAAK03E,gBACnB7J,EACA9jC,EACAv1B,GAEIo5D,EAAa5tE,KAAKi6E,gBAAgBlI,YAAY2I,GAChD16E,KAAKi6E,gBAAgBt7D,IAAI+7D,GACzB,IAAI16E,KAAKk6E,UACPrM,EACA6M,EAAU/kD,GAAiBA,GAC3B+kD,EACA16E,KAAKgxE,QACLhxE,KAAKm5D,kBAEX3jC,EAAK83C,YAAYptE,KAAK0tE,GACtB,MAAM+M,EAAkB/M,EAAWl4C,WACnC,GAAIilD,EAAkBhlD,GAAkB,CACtC,MAAMilD,EAAgBx+D,IACpBpc,KAAKk1B,iBAAiB9Y,GACtB,MAAMqZ,EAAQm4C,EAAWl4C,WACzB,GAAID,IAAUE,IAAoBF,IAAUE,GAAiB,CAC3D,MAAMklD,EAAgBjN,EAAW54C,SAC7B6lD,KAAiBrlD,EAAKqjD,cACpBjL,EAAWl4C,aAAeC,WACrBH,EAAKqjD,cAAcgC,GAG5BrlD,EAAKo5C,qBAEHn5C,IAAUE,GACZH,EAAKqjD,cAAcgC,IAAiB,EAEpCjN,EAAW/wD,oBAAoBkB,GAAkB68D,GAEnB,IAA5BplD,EAAKo5C,oBACPp5C,EAAKmjC,SACH,GAAQnjC,EAAKqjD,eACTljD,GACAA,GAGV,GAEFi4C,EAAW9xD,iBAAiBiC,GAAkB68D,GAC9CplD,EAAKo5C,oBACP,CACI+L,IAAoBhlD,KACtBi4C,EAAWlhE,OACT8yD,EAAeY,mBAAmByN,GACpCD,EAAWp5D,WAAaA,EACxBo5D,EAAW3+D,WAAauwD,EAAe1gC,cACrC+uC,EAAgB,IAElB7tE,KAAKi6E,gBAAgBjzE,IAAI0zE,EAAS9M,GAClCA,EAAWtjE,OACb,IAEGkrB,EAAKo5C,oBACRp5C,EAAKmjC,SACHnjC,EAAK83C,YAAY9kC,MACdolC,GAAeA,EAAWl4C,aAAeC,KAExCA,GACAA,GAGV,CAEA,OAAOH,EAAK83C,WACd,CAUAhL,QAAQ3lC,EAAGxzB,EAAGuG,EAAGq6B,EAAYv1B,GAC3B,MAAMsmE,EAAWpI,GAAU/1C,EAAGxzB,EAAGuG,GAC3BhQ,EAAMM,KAAKg1B,SACjB,IAAIQ,EACJ,GAAIx1B,KAAKu2E,UAAUxE,YAAY+I,KAC7BtlD,EAAOx1B,KAAKu2E,UAAU53D,IAAIm8D,GACtBtlD,EAAK91B,MAAQA,GACf,OAAO81B,EAGX,MAAMygC,EAAY,CAACt5B,EAAGxzB,EAAGuG,GACzB,IAAIipE,EAAe34E,KAAK42E,+BACtB3gB,EACAzhD,GAEF,MAAMgpD,EAAex9D,KAAKotE,cAAc3/D,YAClCS,EAAWlO,KAAKyiE,yBAAyBjuD,GAC/C,GAAImkE,GAAgBnb,EAAc,CAChC,MAAM6P,EAAan/D,EAASkyD,mBAAmBuY,GAE/Cj7E,EAAa2vE,GAAan/D,EAAS4wB,cAAcnC,GAAI0wC,GAChDt5D,GAAWypD,EAAc6P,KAC5BsL,EAAe,KAEnB,CACA,IAAIoC,GAAQ,EACZ,GAAqB,OAAjBpC,EAAuB,CACzB,MAAMnZ,EAAiBx/D,KAAKkO,SACtBe,EAAaf,EAAS4wB,cAAcnC,GACpC89C,EAAUjb,EAAemB,kBAAkB1xD,EAAY,GAEvDvC,EAASwB,EAASkyD,mBAAmBuY,GAC3Cj7E,EAAagP,GAASuC,EAAYvC,GAClC8yD,EAAeuU,iBAAiBrnE,EAAQ+tE,GAAU5M,IAChDkN,EACEA,IACC/6E,KAAK03E,gBAAgB7J,EAAiB9jC,EAAYv1B,EAAW,GAEpE,CACA,MAAMwmE,EAAU,IAAI,GAClB/kB,EACA8kB,EAAQplD,GAAkBA,GAC1BgjD,EACA34E,KAAKutE,eAAenwD,KAAKpd,KAAM+pC,EAAYv1B,IAW7C,OARAwmE,EAAQt7E,IAAMA,EACV81B,GACFwlD,EAAQ1iB,YAAc9iC,EACtBwlD,EAAQniB,sBACR74D,KAAKu2E,UAAUx/D,QAAQ+jE,EAAUE,IAEjCh7E,KAAKu2E,UAAUvvE,IAAI8zE,EAAUE,GAExBA,CACT,CAMAvY,yBAAyBjuD,GACvB,MAAMjI,EAAOiI,EAAWhH,UACxB,IAAIU,EAAWlO,KAAKm6E,WAAW5tE,GAC/B,IAAK2B,EAAU,CAGb,MAAMsxD,EAAiBx/D,KAAKkO,SACtBsuB,EAAcgjC,EAAe/8B,iBAAiB9iC,QAC9CyzE,EAAU52C,EAAYmK,KAAI,SAAU13B,EAAY0tB,GACpD,OAAO6iC,EAAep1B,UAAUzN,EAClC,IACM42C,EAAY/2C,EAAYmK,KAAI,SAAU13B,EAAY0tB,GACtD,OAAO6iC,EAAeyB,YAAYtkC,EACpC,IACM78B,EAASm7E,GACf,IAAK,IAAIt+C,EAAIH,EAAY18B,OAAQ68B,EAAI78B,IAAU68B,EAC7CH,EAAYt8B,KAAKs8B,EAAYG,EAAI,GAAK,GACtCy2C,EAAQlzE,KAAKkzE,EAAQz2C,EAAI,IACzB42C,EAAUrzE,KAAKqzE,EAAU52C,EAAI,IAE/BzuB,EAAW,IAAI,GAAS,CACtBxB,OAAQ8yD,EAAe/xD,YACvB2lE,QAASA,EACT52C,YAAaA,EACb+2C,UAAWA,IAEbvzE,KAAKm6E,WAAW5tE,GAAQ2B,CAC1B,CACA,OAAOA,CACT,CAOAy0D,kBAAkB54B,GAChB,OAAOA,CACT,CAQA26B,iBAAiB/nC,EAAGoN,EAAYv1B,GAC9B,MACMsuD,EAAWl6B,GADA5oC,KAAKyiE,yBAAyBjuD,GACdysD,YAAYtkC,GAAI38B,KAAKw2E,SACtD,MAAO,CACL93E,KAAK4W,MAAMwtD,EAAS,GAAK/4B,GACzBrrC,KAAK4W,MAAMwtD,EAAS,GAAK/4B,GAE7B,CAOA08B,gBAAgBH,EAAW9xD,GACzBzF,MAAM03D,gBAA4B,EAAZH,EAAe9xD,GACrCxU,KAAKi6E,gBAAgBvI,cACnB1xE,KAAK02E,0BAA0BliE,GAAYk9D,aAC/C,GAUK,SAAS,GAAoBl8C,EAAMqiD,GACxCriD,EAAKg8C,WAMH,SAAU9kE,EAAQuC,EAAYuF,GAC5BwkE,GACEnB,EACAriD,EAAK47C,YACL1kE,EACAuC,EACAuF,EACAghB,EAAK67C,OAAOj0D,KAAKoY,GACjBA,EAAK+7C,QAAQn0D,KAAKoY,GAEtB,GAEJ,C,cCvbA,MAAM,WAAgB,GAOpBppB,YAAY8uE,GAmDV,GAlDAnsE,QAKA/O,KAAK2d,GAKL3d,KAAKmd,KAKLnd,KAAK4d,GAML5d,KAAKkwB,SAAMnkB,EAMX/L,KAAKoxB,cAAgB,WAOrBpxB,KAAKq/C,OAAS,KAMdr/C,KAAKs/C,oBAAiBvzC,EAMtB/L,KAAKm7E,mBAAqB,KAE1Bn7E,KAAKmf,kBAAkBnf,KAAKoxB,cAAepxB,KAAKo7E,wBAE5CF,EACF,GAGQ,mBADa,EACnB,sBACA,CACA,MAAMnhE,EAAmC,EACzC/Z,KAAKyyB,YAAY1Y,EACnB,KAAO,CAEL,MAAMgW,EAAamrD,EACnBl7E,KAAK0e,cAAcqR,EACrB,CAEJ,CAQA7V,QACE,MAAMA,EAAyC,IACzC,GAAQla,KAAK+e,gBAAkB/e,KAAK8e,gBAAkB,MAE5D5E,EAAMsY,gBAAgBxyB,KAAKq7E,mBAC3B,MAAMthE,EAAW/Z,KAAKywB,cAClB1W,GACFG,EAAMuY,YAAqC1Y,EAASG,SAEtD,MAAMiI,EAAQniB,KAAK6/C,WAInB,OAHI19B,GACFjI,EAAMqlC,SAASp9B,GAEVjI,CACT,CAUAuW,cACE,OAA0CzwB,KAAK2e,IAAI3e,KAAKoxB,cAC1D,CASAZ,QACE,OAAOxwB,KAAKkwB,GACd,CASAmrD,kBACE,OAAOr7E,KAAKoxB,aACd,CAQAyuB,WACE,OAAO7/C,KAAKq/C,MACd,CAQA3uB,mBACE,OAAO1wB,KAAKs/C,cACd,CAKAg8B,wBACEt7E,KAAK8d,SACP,CAKAs9D,yBACMp7E,KAAKm7E,qBACP19D,GAAczd,KAAKm7E,oBACnBn7E,KAAKm7E,mBAAqB,MAE5B,MAAMphE,EAAW/Z,KAAKywB,cAClB1W,IACF/Z,KAAKm7E,mBAAqBl+D,GACxBlD,EACAgE,GACA/d,KAAKs7E,sBACLt7E,OAGJA,KAAK8d,SACP,CASA2U,YAAY1Y,GACV/Z,KAAKgH,IAAIhH,KAAKoxB,cAAerX,EAC/B,CAWAwlC,SAASp9B,GACPniB,KAAKq/C,OAASl9B,EACdniB,KAAKs/C,eAAkBn9B,EAyCpB,SAA6B9hB,GAClC,GAAmB,mBAARA,EACT,OAAOA,EAKT,IAAIggD,EACJ,GAAI5wC,MAAM2L,QAAQ/a,GAChBggD,EAAShgD,MACJ,CACLoQ,EAAqD,mBAArB,EAAe,UAAkB,IAEjE4vC,EAAS,CADuD,EAElE,CACA,OAAO,WACL,OAAOA,CACT,CACF,CA3D+Ck7B,CAAoBp5D,QAAhCpW,EAC/B/L,KAAK8d,SACP,CAWA4U,MAAM1C,GACJhwB,KAAKkwB,IAAMF,EACXhwB,KAAK8d,SACP,CASA0U,gBAAgBhiB,GACdxQ,KAAKof,qBAAqBpf,KAAKoxB,cAAepxB,KAAKo7E,wBACnDp7E,KAAKoxB,cAAgB5gB,EACrBxQ,KAAKmf,kBAAkBnf,KAAKoxB,cAAepxB,KAAKo7E,wBAChDp7E,KAAKo7E,wBACP,EA8BF,UC1TA,MAAMI,WAA2B,GAI/BpvE,YAAY08D,GACV/5D,QAMA/O,KAAKy7E,YAAc3S,GAA0B,KAK7C9oE,KAAK07E,kBAAoB,GAEzB17E,KAAK27E,yBACP,CAKAC,4BACE57E,KAAK07E,kBAAkBnkE,QAAQkG,IAC/Bzd,KAAK07E,kBAAkB57E,OAAS,CAClC,CAKA67E,0BACE,GAAK37E,KAAKy7E,YAGV,IAAK,IAAIp9E,EAAI,EAAG0S,EAAK/Q,KAAKy7E,YAAY37E,OAAQzB,EAAI0S,IAAM1S,EACtD2B,KAAK07E,kBAAkBx7E,KACrB+c,GAAOjd,KAAKy7E,YAAYp9E,GAAI0f,GAAkB/d,KAAK8d,QAAS9d,MAGlE,CAOAka,QACE,MAAM2hE,EAAqB,IAAIL,GAAmB,MAGlD,OAFAK,EAAmBC,cAAc97E,KAAKy7E,aACtCI,EAAmBv8D,gBAAgBtf,MAC5B67E,CACT,CASAl4D,eAAexa,EAAGuG,EAAGkU,EAAcC,GACjC,GAAIA,EAAqB3S,EAAyBlR,KAAKyN,YAAatE,EAAGuG,GACrE,OAAOmU,EAET,MAAMilD,EAAa9oE,KAAKy7E,YACxB,IAAK,IAAIp9E,EAAI,EAAG0S,EAAK+3D,EAAWhpE,OAAQzB,EAAI0S,IAAM1S,EAChDwlB,EAAqBilD,EAAWzqE,GAAGslB,eACjCxa,EACAuG,EACAkU,EACAC,GAGJ,OAAOA,CACT,CAOAtS,WAAWpI,EAAGuG,GACZ,MAAMo5D,EAAa9oE,KAAKy7E,YACxB,IAAK,IAAIp9E,EAAI,EAAG0S,EAAK+3D,EAAWhpE,OAAQzB,EAAI0S,IAAM1S,EAChD,GAAIyqE,EAAWzqE,GAAGkT,WAAWpI,EAAGuG,GAC9B,OAAO,EAGX,OAAO,CACT,CAOAuU,cAAcvX,GACZqF,EAAoBrF,GACpB,MAAMo8D,EAAa9oE,KAAKy7E,YACxB,IAAK,IAAIp9E,EAAI,EAAG0S,EAAK+3D,EAAWhpE,OAAQzB,EAAI0S,IAAM1S,EAChD,EAAOqO,EAAQo8D,EAAWzqE,GAAGoP,aAE/B,OAAOf,CACT,CAOAk/D,gBACE,OAAOmQ,GAAgB/7E,KAAKy7E,YAC9B,CAKA1S,qBACE,OAAO/oE,KAAKy7E,WACd,CAKAjM,8BAEE,IAAIwM,EAAkB,GACtB,MAAMlT,EAAa9oE,KAAKy7E,YACxB,IAAK,IAAIp9E,EAAI,EAAG0S,EAAK+3D,EAAWhpE,OAAQzB,EAAI0S,IAAM1S,EAC5CyqE,EAAWzqE,GAAGib,YAActZ,KAAKsZ,UACnC0iE,EAAkBA,EAAgBjN,OAE9BjG,EAAWzqE,GACXmxE,+BAGJwM,EAAgB97E,KAAK4oE,EAAWzqE,IAGpC,OAAO29E,CACT,CAOAv4D,sBAAsBD,GAKpB,GAJIxjB,KAAK+iB,6BAA+B/iB,KAAKge,gBAC3Che,KAAK8iB,yCAA2C,EAChD9iB,KAAK+iB,2BAA6B/iB,KAAKge,eAGvCwF,EAAmB,GACgC,IAAlDxjB,KAAK8iB,0CACJU,EAAmBxjB,KAAK8iB,yCAE1B,OAAO9iB,KAGT,MAAMi8E,EAAuB,GACvBnT,EAAa9oE,KAAKy7E,YACxB,IAAIS,GAAa,EACjB,IAAK,IAAI79E,EAAI,EAAG0S,EAAK+3D,EAAWhpE,OAAQzB,EAAI0S,IAAM1S,EAAG,CACnD,MAAM0b,EAAW+uD,EAAWzqE,GACtBgnB,EACJtL,EAAS0J,sBAAsBD,GACjCy4D,EAAqB/7E,KAAKmlB,GACtBA,IAAuBtL,IACzBmiE,GAAa,EAEjB,CACA,GAAIA,EAAY,CACd,MAAMC,EAA+B,IAAIX,GAAmB,MAE5D,OADAW,EAA6BC,mBAAmBH,GACzCE,CACT,CAEA,OADAn8E,KAAK8iB,yCAA2CU,EACzCxjB,IACT,CAOAsZ,UACE,MAAO,oBACT,CAQAiL,iBAAiB7X,GACf,MAAMo8D,EAAa9oE,KAAKy7E,YACxB,IAAK,IAAIp9E,EAAI,EAAG0S,EAAK+3D,EAAWhpE,OAAQzB,EAAI0S,IAAM1S,EAChD,GAAIyqE,EAAWzqE,GAAGkmB,iBAAiB7X,GACjC,OAAO,EAGX,OAAO,CACT,CAKA0nB,UACE,OAAmC,IAA5Bp0B,KAAKy7E,YAAY37E,MAC1B,CASAqkB,OAAO3C,EAAOc,GACZ,MAAMwmD,EAAa9oE,KAAKy7E,YACxB,IAAK,IAAIp9E,EAAI,EAAG0S,EAAK+3D,EAAWhpE,OAAQzB,EAAI0S,IAAM1S,EAChDyqE,EAAWzqE,GAAG8lB,OAAO3C,EAAOc,GAE9BtiB,KAAK8d,SACP,CAYAsG,MAAM9C,EAAIC,EAAIe,GACPA,IACHA,EAASxP,EAAU9S,KAAKyN,cAE1B,MAAMq7D,EAAa9oE,KAAKy7E,YACxB,IAAK,IAAIp9E,EAAI,EAAG0S,EAAK+3D,EAAWhpE,OAAQzB,EAAI0S,IAAM1S,EAChDyqE,EAAWzqE,GAAG+lB,MAAM9C,EAAIC,EAAIe,GAE9BtiB,KAAK8d,SACP,CAOAg+D,cAAchT,GACZ9oE,KAAKo8E,mBAAmBL,GAAgBjT,GAC1C,CAKAsT,mBAAmBtT,GACjB9oE,KAAK47E,4BACL57E,KAAKy7E,YAAc3S,EACnB9oE,KAAK27E,0BACL37E,KAAK8d,SACP,CAWA9J,eAAe9D,GACb,MAAM44D,EAAa9oE,KAAKy7E,YACxB,IAAK,IAAIp9E,EAAI,EAAG0S,EAAK+3D,EAAWhpE,OAAQzB,EAAI0S,IAAM1S,EAChDyqE,EAAWzqE,GAAG2V,eAAe9D,GAE/BlQ,KAAK8d,SACP,CASA0G,UAAU/B,EAAQC,GAChB,MAAMomD,EAAa9oE,KAAKy7E,YACxB,IAAK,IAAIp9E,EAAI,EAAG0S,EAAK+3D,EAAWhpE,OAAQzB,EAAI0S,IAAM1S,EAChDyqE,EAAWzqE,GAAGmmB,UAAU/B,EAAQC,GAElC1iB,KAAK8d,SACP,CAKAnD,kBACE3a,KAAK47E,4BACL7sE,MAAM4L,iBACR,EAOF,SAASohE,GAAgBjT,GACvB,MAAMuT,EAAmB,GACzB,IAAK,IAAIh+E,EAAI,EAAG0S,EAAK+3D,EAAWhpE,OAAQzB,EAAI0S,IAAM1S,EAChDg+E,EAAiBn8E,KAAK4oE,EAAWzqE,GAAG6b,SAEtC,OAAOmiE,CACT,CAEA,UChJA,SAASC,GAAUtsE,GACjB,GAAsB,iBAAXA,EAAqB,CAC9B,MAAMwL,EAASjb,KAAKg8E,MAAMvsE,GAC1B,OAAOwL,GAA0C,IACnD,CACA,OAAe,OAAXxL,EACKA,EAEF,IACT,CAEA,OAnMA,cAA0B,GACxB5D,cACE2C,OACF,CAKAuK,UACE,MAAO,MACT,CAWAC,YAAYvJ,EAAQ3D,GAClB,OAAOrM,KAAKw8E,sBACVF,GAAUtsE,GACVhQ,KAAKgZ,eAAehJ,EAAQ3D,GAEhC,CAWAmN,aAAaxJ,EAAQ3D,GACnB,OAAOrM,KAAKy8E,uBACVH,GAAUtsE,GACVhQ,KAAKgZ,eAAehJ,EAAQ3D,GAEhC,CASAmwE,sBAAsBhhE,EAAQnP,GAC5B,OAAO,GACT,CASAowE,uBAAuBjhE,EAAQnP,GAC7B,OAAO,GACT,CAUAoN,aAAazJ,EAAQ3D,GACnB,OAAOrM,KAAK08E,uBACVJ,GAAUtsE,GACVhQ,KAAKgZ,eAAehJ,EAAQ3D,GAEhC,CASAqwE,uBAAuBlhE,EAAQnP,GAC7B,OAAO,GACT,CASA4M,eAAejJ,GACb,OAAOhQ,KAAK28E,yBAAyBL,GAAUtsE,GACjD,CAQA2sE,yBAAyBnhE,GACvB,OAAO,GACT,CAUA9B,aAAaC,EAAStN,GACpB,OAAO9L,KAAKC,UAAUR,KAAK48E,mBAAmBjjE,EAAStN,GACzD,CAQAuwE,mBAAmBjjE,EAAStN,GAC1B,OAAO,GACT,CAUAuN,cAAcC,EAAUxN,GACtB,OAAO9L,KAAKC,UAAUR,KAAK68E,oBAAoBhjE,EAAUxN,GAC3D,CAQAwwE,oBAAoBhjE,EAAUxN,GAC5B,OAAO,GACT,CAUAyN,cAAcC,EAAU1N,GACtB,OAAO9L,KAAKC,UAAUR,KAAK88E,oBAAoB/iE,EAAU1N,GAC3D,CAQAywE,oBAAoB/iE,EAAU1N,GAC5B,OAAO,GACT,GCkFF,SAASoN,GAAa+B,EAAQnP,GAC5B,IAAKmP,EACH,OAAO,KAMT,IAAIzB,EACJ,OAAQyB,EAAa,MACnB,IAAK,QACHzB,EAkEN,SAA2ByB,GACzB,OAAO,IAAI,GAAMA,EAAoB,YACvC,CApEiBuhE,CAA8C,GACzD,MAEF,IAAK,aACHhjE,EAsEN,SAAgCyB,GAC9B,OAAO,IAAI,GAAWA,EAAoB,YAC5C,CAxEiBwhE,CACwB,GAEnC,MAEF,IAAK,UACHjjE,EAgGN,SAA6ByB,GAC3B,OAAO,IAAI,GAAQA,EAAoB,YACzC,CAlGiByhE,CAAkD,GAC7D,MAEF,IAAK,aACHljE,EA4EN,SAAgCyB,GAC9B,OAAO,IAAI,GAAWA,EAAoB,YAC5C,CA9EiB0hE,CACwB,GAEnC,MAEF,IAAK,kBACHnjE,EA8DN,SAAqCyB,GACnC,OAAO,IAAI,GAAgBA,EAAoB,YACjD,CAhEiB2hE,CAC6B,GAExC,MAEF,IAAK,eACHpjE,EAwEN,SAAkCyB,GAChC,OAAO,IAAI,GAAaA,EAAoB,YAC9C,CA1EiB4hE,CAC0B,GAErC,MAEF,IAAK,qBACHrjE,EAiBN,SAAwCyB,EAAQnP,GAC9C,MAAMy8D,EAAattD,EAAmB,WAAEmrB,KAKtC,SAAU5sB,GACR,OAAON,GAAaM,EAAU1N,EAChC,IAEF,OAAO,IAAI,GAAmBy8D,EAChC,CA5BiBuU,CACgC,GAE3C,MAEF,QACE,MAAM,IAAIr4E,MAAM,6BAA+BwW,EAAa,MAGhE,OAAOxB,GAA6BD,GAAU,EAAO1N,EACvD,CAyEA,SAASyN,GAAcC,EAAU1N,GAE/B,MAAMpL,GADN8Y,EAAWC,GAA6BD,GAAU,EAAM1N,IAClCiN,UAGtB,IAAIgkE,EACJ,OAAQr8E,GACN,IAAK,QACHq8E,EAqIN,SAA4BvjE,EAAU1N,GACpC,MAAO,CACLpL,KAAM,QACN4P,YAAakJ,EAASiL,iBAE1B,CA1IgBu4D,CAAwC,GAClD,MAEF,IAAK,aACHD,EA6EN,SAAiCvjE,EAAU1N,GACzC,MAAO,CACLpL,KAAM,aACN4P,YAAakJ,EAASiL,iBAE1B,CAlFgBw4D,CACkB,GAG5B,MAEF,IAAK,UACHF,EAsIN,SAA8BvjE,EAAU1N,GACtC,IAAI8gB,EACA9gB,IACF8gB,EAAQ9gB,EAAQoxE,aAElB,MAAO,CACLx8E,KAAM,UACN4P,YAAakJ,EAASiL,eAAemI,GAEzC,CA/IgBuwD,CACe,EACvBrxE,GAEF,MAEF,IAAK,aACHixE,EAuFN,SAAiCvjE,EAAU1N,GACzC,MAAO,CACLpL,KAAM,aACN4P,YAAakJ,EAASiL,iBAE1B,CA5FgB24D,CACkB,GAG5B,MAEF,IAAK,kBACHL,EAoEN,SAAsCvjE,EAAU1N,GAC9C,MAAO,CACLpL,KAAM,kBACN4P,YAAakJ,EAASiL,iBAE1B,CAzEgB44D,CACuB,GAGjC,MAEF,IAAK,eACHN,EAqFN,SAAmCvjE,EAAU1N,GAC3C,IAAI8gB,EACA9gB,IACF8gB,EAAQ9gB,EAAQoxE,aAElB,MAAO,CACLx8E,KAAM,eACN4P,YAAakJ,EAASiL,eAAemI,GAEzC,CA9FgB0wD,CACoB,EAC5BxxE,GAEF,MAEF,IAAK,qBACHixE,EAyBN,SAAyCvjE,EAAU1N,UACjDA,EAAU+M,OAAOC,OAAO,CAAC,EAAGhN,IACb6M,kBAIf,MAAO,CACLjY,KAAM,qBACN6nE,WALiB/uD,EAASgvD,qBAAqBpiC,KAAI,SAAU5sB,GAC7D,OAAOD,GAAcC,EAAU1N,EACjC,IAKF,CAnCgByxE,CAC0B,EAClCzxE,GAEF,MAEF,IAAK,SACHixE,EAAU,CACRr8E,KAAM,qBACN6nE,WAAY,IAEd,MAEF,QACE,MAAM,IAAI9jE,MAAM,8BAAgC/D,GAGpD,OAAOq8E,CACT,CAmGA,ICnhBIS,GDmhBJ,GAjgBA,cAAsB,GAIpB3xE,YAAYC,GACVA,EAAUA,GAAoB,CAAC,EAE/B0C,QAKA/O,KAAK6Y,eAAiB,GACpBxM,EAAQwM,eAAiBxM,EAAQwM,eAAiB,aAGhDxM,EAAQ6M,oBAIVlZ,KAAK8Y,yBAA2B,GAAczM,EAAQ6M,oBAQxDlZ,KAAKoxB,cAAgB/kB,EAAQglB,aAO7BrxB,KAAKg+E,qBAAuB3xE,EAAQ4xE,oBAEpCj+E,KAAK+Y,oBAAsB,CACzB,uBACA,2BAEJ,CAQAyjE,sBAAsBhhE,EAAQnP,GAI5B,IAAI6xE,EAAiB,KAEnBA,EADqB,YAAnB1iE,EAAa,KACgC,EAE9B,CACf,KAAQ,UACR,SAA2C,EAC3C,WAAc,MAIlB,MAAMzB,EAAWN,GAAaykE,EAAyB,SAAG7xE,GACpDsN,EAAU,IAAI,GAkBpB,OAjBI3Z,KAAKoxB,cACPzX,EAAQ6Y,gBAAgBxyB,KAAKoxB,eAE7BpxB,KAAKg+E,sBACL,kBAAmBE,SAAmBnyE,GAEtC4N,EAAQ6Y,gBAAgB0rD,EAA8B,eAExDvkE,EAAQ8Y,YAAY1Y,GAEhB,OAAQmkE,GACVvkE,EAAQ+Y,MAAMwrD,EAAmB,IAG/BA,EAA2B,YAC7BvkE,EAAQ+E,cAAcw/D,EAA2B,YAAG,GAE/CvkE,CACT,CAQA8iE,uBAAuBjhE,EAAQnP,GAG7B,IAAIwN,EAAW,KACf,GAA8B,sBAHqB,EAG3B,KAA2B,CAIjDA,EAAW,GACX,MAAMskE,EAJmE,EAId,SAC3D,IAAK,IAAI9/E,EAAI,EAAG0S,EAAKotE,EAAgBr+E,OAAQzB,EAAI0S,IAAM1S,EACrDwb,EAAS3Z,KAAKF,KAAKw8E,sBAAsB2B,EAAgB9/E,GAAIgO,GAEjE,MACEwN,EAAW,CAAC7Z,KAAKw8E,sBAAsBhhE,EAAQnP,IAEjD,OAAOwN,CACT,CAQA6iE,uBAAuBlhE,EAAQnP,GAC7B,OAAOoN,GAAa+B,EAAQnP,EAC9B,CAOAswE,yBAAyBnhE,GACvB,MAAM4iE,EAAM5iE,EAAY,IACxB,IAAIhH,EAYJ,OAXI4pE,EACiB,QAAfA,EAAU,KACZ5pE,EAAa,GAAc4pE,EAAgB,WAAQ,MAC1B,SAAhBA,EAAU,KACnB5pE,EAAa,GAAc,QAAU4pE,EAAgB,WAAQ,MAE7D3tE,GAAO,EAAO,IAGhB+D,EAAaxU,KAAK6Y,eAE0C,CAChE,CAUA+jE,mBAAmBjjE,EAAStN,GAC1BA,EAAUrM,KAAKmZ,aAAa9M,GAG5B,MAAMmP,EAAS,CACb,KAAQ,UACRzB,SAAU,KACVgW,WAAY,MAGRC,EAAKrW,EAAQ6W,QAKnB,QAJWzkB,IAAPikB,IACFxU,EAAOwU,GAAKA,IAGTrW,EAAQoF,gBACX,OAAOvD,EAGT,MAAMuU,EAAapW,EAAQmF,gBACrB/E,EAAWJ,EAAQ8W,cAWzB,OAVI1W,IACFyB,EAAOzB,SAAWD,GAAcC,EAAU1N,UAEnC0jB,EAAWpW,EAAQ0hE,oBAGvB,GAAQtrD,KACXvU,EAAOuU,WAAaA,GAGfvU,CACT,CAUAqhE,oBAAoBhjE,EAAUxN,GAC5BA,EAAUrM,KAAKmZ,aAAa9M,GAC5B,MAAMgyE,EAAU,GAChB,IAAK,IAAIhgF,EAAI,EAAG0S,EAAK8I,EAAS/Z,OAAQzB,EAAI0S,IAAM1S,EAC9CggF,EAAQn+E,KAAKF,KAAK48E,mBAAmB/iE,EAASxb,GAAIgO,IAEpD,MAAO,CACLpL,KAAM,oBACN4Y,SAAUwkE,EAEd,CAUAvB,oBAAoB/iE,EAAU1N,GAC5B,OAAOyN,GAAcC,EAAU/Z,KAAKmZ,aAAa9M,GACnD,GClNEiyE,GAAiB,CACjB,YAAe,CACX,EACA,EACA,EACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,aAAgB,CACZ,IACA,IACA,IACA,GAEJ,KAAQ,CACJ,EACA,IACA,IACA,GAEJ,WAAc,CACV,IACA,IACA,IACA,GAEJ,MAAS,CACL,IACA,IACA,IACA,GAEJ,MAAS,CACL,IACA,IACA,IACA,GAEJ,OAAU,CACN,IACA,IACA,IACA,GAEJ,MAAS,CACL,EACA,EACA,EACA,GAEJ,eAAkB,CACd,IACA,IACA,IACA,GAEJ,KAAQ,CACJ,EACA,EACA,IACA,GAEJ,WAAc,CACV,IACA,GACA,IACA,GAEJ,MAAS,CACL,IACA,GACA,GACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,UAAa,CACT,GACA,IACA,IACA,GAEJ,WAAc,CACV,IACA,IACA,EACA,GAEJ,UAAa,CACT,IACA,IACA,GACA,GAEJ,MAAS,CACL,IACA,IACA,GACA,GAEJ,eAAkB,CACd,IACA,IACA,IACA,GAEJ,SAAY,CACR,IACA,IACA,IACA,GAEJ,QAAW,CACP,IACA,GACA,GACA,GAEJ,KAAQ,CACJ,EACA,IACA,IACA,GAEJ,SAAY,CACR,EACA,EACA,IACA,GAEJ,SAAY,CACR,EACA,IACA,IACA,GAEJ,cAAiB,CACb,IACA,IACA,GACA,GAEJ,SAAY,CACR,IACA,IACA,IACA,GAEJ,UAAa,CACT,EACA,IACA,EACA,GAEJ,SAAY,CACR,IACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,YAAe,CACX,IACA,EACA,IACA,GAEJ,eAAkB,CACd,GACA,IACA,GACA,GAEJ,WAAc,CACV,IACA,IACA,EACA,GAEJ,WAAc,CACV,IACA,GACA,IACA,GAEJ,QAAW,CACP,IACA,EACA,EACA,GAEJ,WAAc,CACV,IACA,IACA,IACA,GAEJ,aAAgB,CACZ,IACA,IACA,IACA,GAEJ,cAAiB,CACb,GACA,GACA,IACA,GAEJ,cAAiB,CACb,GACA,GACA,GACA,GAEJ,cAAiB,CACb,GACA,GACA,GACA,GAEJ,cAAiB,CACb,EACA,IACA,IACA,GAEJ,WAAc,CACV,IACA,EACA,IACA,GAEJ,SAAY,CACR,IACA,GACA,IACA,GAEJ,YAAe,CACX,EACA,IACA,IACA,GAEJ,QAAW,CACP,IACA,IACA,IACA,GAEJ,QAAW,CACP,IACA,IACA,IACA,GAEJ,WAAc,CACV,GACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,GACA,GACA,GAEJ,YAAe,CACX,IACA,IACA,IACA,GAEJ,YAAe,CACX,GACA,IACA,GACA,GAEJ,QAAW,CACP,IACA,EACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,WAAc,CACV,IACA,IACA,IACA,GAEJ,KAAQ,CACJ,IACA,IACA,EACA,GAEJ,UAAa,CACT,IACA,IACA,GACA,GAEJ,KAAQ,CACJ,IACA,IACA,IACA,GAEJ,MAAS,CACL,EACA,IACA,EACA,GAEJ,YAAe,CACX,IACA,IACA,GACA,GAEJ,KAAQ,CACJ,IACA,IACA,IACA,GAEJ,SAAY,CACR,IACA,IACA,IACA,GAEJ,QAAW,CACP,IACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,GACA,GACA,GAEJ,OAAU,CACN,GACA,EACA,IACA,GAEJ,MAAS,CACL,IACA,IACA,IACA,GAEJ,MAAS,CACL,IACA,IACA,IACA,GAEJ,SAAY,CACR,IACA,IACA,IACA,GAEJ,cAAiB,CACb,IACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,EACA,GAEJ,aAAgB,CACZ,IACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,WAAc,CACV,IACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,qBAAwB,CACpB,IACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,WAAc,CACV,IACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,YAAe,CACX,IACA,IACA,IACA,GAEJ,cAAiB,CACb,GACA,IACA,IACA,GAEJ,aAAgB,CACZ,IACA,IACA,IACA,GAEJ,eAAkB,CACd,IACA,IACA,IACA,GAEJ,eAAkB,CACd,IACA,IACA,IACA,GAEJ,eAAkB,CACd,IACA,IACA,IACA,GAEJ,YAAe,CACX,IACA,IACA,IACA,GAEJ,KAAQ,CACJ,EACA,IACA,EACA,GAEJ,UAAa,CACT,GACA,IACA,GACA,GAEJ,MAAS,CACL,IACA,IACA,IACA,GAEJ,QAAW,CACP,IACA,EACA,IACA,GAEJ,OAAU,CACN,IACA,EACA,EACA,GAEJ,iBAAoB,CAChB,IACA,IACA,IACA,GAEJ,WAAc,CACV,EACA,EACA,IACA,GAEJ,aAAgB,CACZ,IACA,GACA,IACA,GAEJ,aAAgB,CACZ,IACA,IACA,IACA,GAEJ,eAAkB,CACd,GACA,IACA,IACA,GAEJ,gBAAmB,CACf,IACA,IACA,IACA,GAEJ,kBAAqB,CACjB,EACA,IACA,IACA,GAEJ,gBAAmB,CACf,GACA,IACA,IACA,GAEJ,gBAAmB,CACf,IACA,GACA,IACA,GAEJ,aAAgB,CACZ,GACA,GACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,UAAa,CACT,IACA,IACA,IACA,GAEJ,SAAY,CACR,IACA,IACA,IACA,GAEJ,YAAe,CACX,IACA,IACA,IACA,GAEJ,KA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","sources":["webpack:///../node_modules/ieee754/index.js","webpack:///../node_modules/json-stringify-safe/stringify.js","webpack:///../node_modules/pbf/index.js","webpack:///../node_modules/rbush/rbush.min.js","webpack:///webpack/bootstrap","webpack:///../src/ol/util.js","webpack:///../src/ol/proj/Units.js","webpack:///../src/ol/proj/Projection.js","webpack:///../src/ol/proj/epsg3857.js","webpack:///../src/ol/proj/epsg4326.js","webpack:///../src/ol/proj/projections.js","webpack:///../src/ol/proj/transforms.js","webpack:///../src/ol/extent/Relationship.js","webpack:///../src/ol/AssertionError.js","webpack:///../src/ol/asserts.js","webpack:///../src/ol/extent.js","webpack:///../src/ol/coordinate.js","webpack:///../src/ol/math.js","webpack:///../src/ol/sphere.js","webpack:///../src/ol/console.js","webpack:///../src/ol/proj.js","webpack:///../src/ol/format/Feature.js","webpack:///../src/ol/events/Event.js","webpack:///../src/ol/ObjectEventType.js","webpack:///../src/ol/Disposable.js","webpack:///../src/ol/array.js","webpack:///../src/ol/functions.js","webpack:///../src/ol/obj.js","webpack:///../src/ol/events/Target.js","webpack:///../src/ol/events/EventType.js","webpack:///../src/ol/events.js","webpack:///../src/ol/Observable.js","webpack:///../src/ol/Object.js","webpack:///../src/ol/has.js","webpack:///../src/ol/transform.js","webpack:///../src/ol/geom/flat/transform.js","webpack:///../src/ol/geom/Geometry.js","webpack:///../src/ol/geom/SimpleGeometry.js","webpack:///../src/ol/geom/flat/closest.js","webpack:///../src/ol/geom/flat/deflate.js","webpack:///../src/ol/geom/flat/simplify.js","webpack:///../src/ol/geom/flat/segments.js","webpack:///../src/ol/geom/flat/inflate.js","webpack:///../src/ol/geom/flat/interpolate.js","webpack:///../src/ol/geom/flat/contains.js","webpack:///../src/ol/geom/flat/intersectsextent.js","webpack:///../src/ol/geom/flat/length.js","webpack:///../src/ol/geom/LineString.js","webpack:///../src/ol/geom/MultiLineString.js","webpack:///../src/ol/geom/Point.js","webpack:///../src/ol/geom/MultiPoint.js","webpack:///../src/ol/geom/flat/area.js","webpack:///../src/ol/geom/LinearRing.js","webpack:///../src/ol/geom/flat/interiorpoint.js","webpack:///../src/ol/geom/flat/reverse.js","webpack:///../src/ol/geom/flat/orient.js","webpack:///../src/ol/geom/Polygon.js","webpack:///../src/ol/geom/flat/center.js","webpack:///../src/ol/geom/MultiPolygon.js","webpack:///../src/ol/render/Feature.js","webpack:///../src/ol/format/MVT.js","webpack:///../src/ol/structs/PriorityQueue.js","webpack:///../src/ol/TileState.js","webpack:///../src/ol/TileQueue.js","webpack:///../src/ol/layer/Property.js","webpack:///../src/ol/layer/Base.js","webpack:///../src/ol/render/EventType.js","webpack:///../src/ol/ViewHint.js","webpack:///../src/ol/ViewProperty.js","webpack:///../src/ol/tilegrid/common.js","webpack:///../src/ol/centerconstraint.js","webpack:///../src/ol/resolutionconstraint.js","webpack:///../src/ol/rotationconstraint.js","webpack:///../src/ol/easing.js","webpack:///../src/ol/View.js","webpack:///../src/ol/layer/Layer.js","webpack:///../src/ol/ImageState.js","webpack:///../src/ol/size.js","webpack:///../src/ol/style/Image.js","webpack:///../src/ol/color.js","webpack:///../src/ol/colorlike.js","webpack:///../src/ol/dom.js","webpack:///../src/ol/css.js","webpack:///../src/ol/render/canvas.js","webpack:///../src/ol/style/RegularShape.js","webpack:///../src/ol/style/Circle.js","webpack:///../src/ol/style/Fill.js","webpack:///../src/ol/style/Stroke.js","webpack:///../src/ol/style/Style.js","webpack:///../src/ol/style/IconImageCache.js","webpack:///../src/ol/Image.js","webpack:///../src/ol/style/IconImage.js","webpack:///../src/ol/style/Icon.js","webpack:///../src/ol/style/Text.js","webpack:///../src/ol/style/flat.js","webpack:///../src/ol/layer/BaseVector.js","webpack:///../src/ol/render/canvas/Instruction.js","webpack:///../src/ol/render/VectorContext.js","webpack:///../src/ol/render/canvas/Builder.js","webpack:///../src/ol/render/canvas/ImageBuilder.js","webpack:///../src/ol/render/canvas/LineStringBuilder.js","webpack:///../src/ol/render/canvas/PolygonBuilder.js","webpack:///../src/ol/geom/flat/linechunk.js","webpack:///../src/ol/geom/flat/straightchunk.js","webpack:///../src/ol/render/canvas/TextBuilder.js","webpack:///../src/ol/render/canvas/BuilderGroup.js","webpack:///../src/ol/geom/flat/textpath.js","webpack:///../src/ol/render/canvas/Executor.js","webpack:///../src/ol/render/canvas/ExecutorGroup.js","webpack:///../src/ol/renderer/Layer.js","webpack:///../src/ol/render/Event.js","webpack:///../src/ol/renderer/canvas/Layer.js","webpack:///../src/ol/Tile.js","webpack:///../src/ol/ImageTile.js","webpack:///../src/ol/reproj/Triangulation.js","webpack:///../src/ol/reproj.js","webpack:///../src/ol/reproj/Tile.js","webpack:///../src/ol/reproj/common.js","webpack:///../src/ol/TileRange.js","webpack:///../src/ol/renderer/canvas/TileLayer.js","webpack:///../src/ol/render/canvas/Immediate.js","webpack:///../src/ol/render/canvas/hitdetect.js","webpack:///../src/ol/renderer/vector.js","webpack:///../src/ol/renderer/canvas/VectorTileLayer.js","webpack:///../src/ol/layer/TileProperty.js","webpack:///../src/ol/layer/VectorTile.js","webpack:///../src/ol/VectorTile.js","webpack:///../src/ol/structs/LRUCache.js","webpack:///../src/ol/tilecoord.js","webpack:///../src/ol/TileCache.js","webpack:///../src/ol/tilegrid/TileGrid.js","webpack:///../src/ol/source/TileEventType.js","webpack:///../src/ol/source/Source.js","webpack:///../src/ol/tilegrid.js","webpack:///../src/ol/source/Tile.js","webpack:///../src/ol/tileurlfunction.js","webpack:///../src/ol/source/UrlTile.js","webpack:///../src/ol/VectorRenderTile.js","webpack:///../src/ol/featureloader.js","webpack:///../src/ol/source/VectorTile.js","webpack:///../src/ol/Feature.js","webpack:///../src/ol/geom/GeometryCollection.js","webpack:///../src/ol/format/JSONFeature.js","webpack:///../src/ol/format/GeoJSON.js","webpack:///../node_modules/ol-mapbox-style/dist/index.js","webpack:///./offscreen-canvas.worker.js"],"sourcesContent":["/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","exports = module.exports = stringify\nexports.getSerialize = serializer\n\nfunction stringify(obj, replacer, spaces, cycleReplacer) {\n  return JSON.stringify(obj, serializer(replacer, cycleReplacer), spaces)\n}\n\nfunction serializer(replacer, cycleReplacer) {\n  var stack = [], keys = []\n\n  if (cycleReplacer == null) cycleReplacer = function(key, value) {\n    if (stack[0] === value) return \"[Circular ~]\"\n    return \"[Circular ~.\" + keys.slice(0, stack.indexOf(value)).join(\".\") + \"]\"\n  }\n\n  return function(key, value) {\n    if (stack.length > 0) {\n      var thisPos = stack.indexOf(this)\n      ~thisPos ? stack.splice(thisPos + 1) : stack.push(this)\n      ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key)\n      if (~stack.indexOf(value)) value = cycleReplacer.call(this, key, value)\n    }\n    else stack.push(value)\n\n    return replacer == null ? value : replacer.call(this, key, value)\n  }\n}\n","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\n// Threshold chosen based on both benchmarking and knowledge about browser string\n// data structures (which currently switch structure types at 12 bytes or more)\nvar TEXT_DECODER_MIN_LENGTH = 12;\nvar utf8TextDecoder = typeof TextDecoder === 'undefined' ? null : new TextDecoder('utf8');\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos;\n        var pos = this.pos;\n        this.pos = end;\n\n        if (end - pos >= TEXT_DECODER_MIN_LENGTH && utf8TextDecoder) {\n            // longer strings are fast with the built-in browser TextDecoder API\n            return readUtf8TextDecoder(this.buf, pos, end);\n        }\n        // short strings are fast with our custom implementation\n        return readUtf8(this.buf, pos, end);\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readVarint(isSigned));\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSVarint());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readBoolean());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFloat());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readDouble());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed32());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        if (this.type !== Pbf.Bytes) return arr.push(this.readSFixed64());\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { if (arr.length) this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.floor(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction readUtf8TextDecoder(buf, pos, end) {\n    return utf8TextDecoder.decode(buf.subarray(pos, end));\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/AssertionError\n */\n\n/** @type {Object<number, string>} */\nconst messages = {\n  1: 'The view center is not defined',\n  2: 'The view resolution is not defined',\n  3: 'The view rotation is not defined',\n  4: '`image` and `src` cannot be provided at the same time',\n  5: '`imgSize` must be set when `image` is provided',\n  7: '`format` must be set when `url` is set',\n  8: 'Unknown `serverType` configured',\n  9: '`url` must be configured or set using `#setUrl()`',\n  10: 'The default `geometryFunction` can only handle `Point` geometries',\n  11: '`options.featureTypes` must be an Array',\n  12: '`options.geometryName` must also be provided when `options.bbox` is set',\n  13: 'Invalid corner',\n  14: 'Invalid color',\n  15: 'Tried to get a value for a key that does not exist in the cache',\n  16: 'Tried to set a value for a key that is used already',\n  17: '`resolutions` must be sorted in descending order',\n  18: 'Either `origin` or `origins` must be configured, never both',\n  19: 'Number of `tileSizes` and `resolutions` must be equal',\n  20: 'Number of `origins` and `resolutions` must be equal',\n  22: 'Either `tileSize` or `tileSizes` must be configured, never both',\n  24: 'Invalid extent or geometry provided as `geometry`',\n  25: 'Cannot fit empty extent provided as `geometry`',\n  26: 'Features must have an id set',\n  27: 'Features must have an id set',\n  28: '`renderMode` must be `\"hybrid\"` or `\"vector\"`',\n  30: 'The passed `feature` was already added to the source',\n  31: 'Tried to enqueue an `element` that was already added to the queue',\n  32: 'Transformation matrix cannot be inverted',\n  33: 'Invalid units',\n  34: 'Invalid geometry layout',\n  36: 'Unknown SRS type',\n  37: 'Unknown geometry type found',\n  38: '`styleMapValue` has an unknown type',\n  39: 'Unknown geometry type',\n  40: 'Expected `feature` to have a geometry',\n  41: 'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n  42: 'Question unknown, the answer is 42',\n  43: 'Expected `layers` to be an array or a `Collection`',\n  47: 'Expected `controls` to be an array or an `ol/Collection`',\n  48: 'Expected `interactions` to be an array or an `ol/Collection`',\n  49: 'Expected `overlays` to be an array or an `ol/Collection`',\n  50: '`options.featureTypes` should be an Array',\n  51: 'Either `url` or `tileJSON` options must be provided',\n  52: 'Unknown `serverType` configured',\n  53: 'Unknown `tierSizeCalculation` configured',\n  55: 'The {-y} placeholder requires a tile grid with extent',\n  56: 'mapBrowserEvent must originate from a pointer event',\n  57: 'At least 2 conditions are required',\n  59: 'Invalid command found in the PBF',\n  60: 'Missing or invalid `size`',\n  61: 'Cannot determine IIIF Image API version from provided image information JSON',\n  62: 'A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`',\n  64: 'Layer opacity must be a number',\n  66: '`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has not been enabled. This is done by providing adequate shaders using the `hitVertexShader` and `hitFragmentShader` properties of `WebGLPointsLayerRenderer`',\n  67: 'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both',\n  68: 'A VectorTile source can only be rendered if it has a projection compatible with the view projection',\n  69: '`width` or `height` cannot be provided together with `scale`',\n};\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const message = messages[code];\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @deprecated ol/AssertionError and error codes will be removed in v8.0\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  This includes all API\n * methods except for those interacting with tile grids.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/format/Feature\n */\nimport {abstract} from '../util.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      transform\n    ) {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to contruct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      let thisLayout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          thisLayout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout = thisLayout;\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {import(\"../geom/Geometry.js\").Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>|Array<Array<number>>} ends Ends or Endss.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {import(\"../geom/Geometry.js\").Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|Array<Array<number>>}\n     */\n    this.ends_ = ends;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<number>} */ (this.ends_),\n        2,\n        flatCenter,\n        0\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<Array<number>>} */ (this.ends_),\n        2\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        /** @type {Array<Array<number>>} */ (this.ends_),\n        2,\n        flatCenters\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return 2;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {import(\"../geom/Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_\n      );\n    }\n  }\n  /**\n   * @return {Array<number>|Array<Array<number>>} Ends or endss.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n}\n\nRenderFeature.prototype.getEndss = RenderFeature.prototype.getEnds;\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds())\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = /** @type {Array<number>} */ (renderFeature.getEnds());\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName='geometry'] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport FeatureFormat, {transformGeometryWithOptions} from './Feature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport PBF from 'pbf';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport Projection from '../proj/Projection.js';\nimport RenderFeature from '../render/Feature.js';\nimport {assert} from '../asserts.js';\nimport {get} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Feature.js\").FeatureClass} [featureClass] Class for features returned by\n * {@link module:ol/format/MVT~MVT#readFeatures}. Set to {@link module:ol/Feature~Feature} to get full editing and geometry\n * support at the cost of decreased rendering performance. The default is\n * {@link module:ol/render/Feature~RenderFeature}, which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating features.\n * @property {string} [layerName='layer'] Name of the feature attribute that holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not provided, features will be read from all\n * @property {string} [idProperty] Optional property that will be assigned as the feature id and removed from the properties.\n * layers.\n */\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @param {Options} [options] Options.\n * @api\n */\nclass MVT extends FeatureFormat {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {Projection}\n     */\n    this.dataProjection = new Projection({\n      code: '',\n      units: 'tile-pixels',\n    });\n\n    /**\n     * @private\n     * @type {import(\"../Feature.js\").FeatureClass}\n     */\n    this.featureClass_ = options.featureClass\n      ? options.featureClass\n      : RenderFeature;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n    /**\n     * @private\n     * @type {Array<string>|null}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.idProperty_ = options.idProperty;\n\n    this.supportedMediaTypes = [\n      'application/vnd.mapbox-vector-tile',\n      'application/x-protobuf',\n    ];\n  }\n\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @param {PBF} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array<number>} ends Array to store ends in.\n   * @private\n   */\n  readRawGeometry_(pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n\n    const end = pbf.readVarint() + pbf.pos;\n    let cmd = 1;\n    let length = 0;\n    let x = 0;\n    let y = 0;\n    let coordsLen = 0;\n    let currentEnd = 0;\n\n    while (pbf.pos < end) {\n      if (!length) {\n        const cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) {\n          // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n      } else if (cmd === 7) {\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(\n            flatCoordinates[currentEnd],\n            flatCoordinates[currentEnd + 1]\n          );\n          coordsLen += 2;\n        }\n      } else {\n        assert(false, 59); // Invalid command found in the PBF\n      }\n    }\n\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n  }\n\n  /**\n   * @private\n   * @param {PBF} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {import(\"./Feature.js\").ReadOptions} options Read options.\n   * @return {import(\"../Feature.js\").FeatureLike|null} Feature.\n   */\n  createFeature_(pbf, rawFeature, options) {\n    const type = rawFeature.type;\n    if (type === 0) {\n      return null;\n    }\n\n    let feature;\n    const values = rawFeature.properties;\n\n    let id;\n    if (!this.idProperty_) {\n      id = rawFeature.id;\n    } else {\n      id = values[this.idProperty_];\n      delete values[this.idProperty_];\n    }\n\n    values[this.layerName_] = rawFeature.layer.name;\n\n    const flatCoordinates = /** @type {Array<number>} */ ([]);\n    const ends = /** @type {Array<number>} */ ([]);\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n    const geometryType = getGeometryType(type, ends.length);\n\n    if (this.featureClass_ === RenderFeature) {\n      feature = new this.featureClass_(\n        geometryType,\n        flatCoordinates,\n        ends,\n        values,\n        id\n      );\n      feature.transform(options.dataProjection);\n    } else {\n      let geom;\n      if (geometryType == 'Polygon') {\n        const endss = inflateEnds(flatCoordinates, ends);\n        geom =\n          endss.length > 1\n            ? new MultiPolygon(flatCoordinates, 'XY', endss)\n            : new Polygon(flatCoordinates, 'XY', ends);\n      } else {\n        geom =\n          geometryType === 'Point'\n            ? new Point(flatCoordinates, 'XY')\n            : geometryType === 'LineString'\n            ? new LineString(flatCoordinates, 'XY')\n            : geometryType === 'MultiPoint'\n            ? new MultiPoint(flatCoordinates, 'XY')\n            : geometryType === 'MultiLineString'\n            ? new MultiLineString(flatCoordinates, 'XY', ends)\n            : null;\n      }\n      const ctor = /** @type {typeof import(\"../Feature.js\").default} */ (\n        this.featureClass_\n      );\n      feature = new ctor();\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n      const geometry = transformGeometryWithOptions(geom, false, options);\n      feature.setGeometry(geometry);\n      if (id !== undefined) {\n        feature.setId(id);\n      }\n      feature.setProperties(values, true);\n    }\n\n    return feature;\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'arraybuffer';\n  }\n\n  /**\n   * Read all features.\n   *\n   * @param {ArrayBuffer} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    const layers = this.layers_;\n    options = this.adaptOptions(options);\n    const dataProjection = get(options.dataProjection);\n    dataProjection.setWorldExtent(options.extent);\n    options.dataProjection = dataProjection;\n\n    const pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n    const pbfLayers = pbf.readFields(layersPBFReader, {});\n    const features = [];\n    for (const name in pbfLayers) {\n      if (layers && !layers.includes(name)) {\n        continue;\n      }\n      const pbfLayer = pbfLayers[name];\n\n      const extent = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n      dataProjection.setExtent(extent);\n\n      for (let i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        const rawFeature = readRawFeature(pbf, pbfLayer, i);\n        const feature = this.createFeature_(pbf, rawFeature, options);\n        if (feature !== null) {\n          features.push(feature);\n        }\n      }\n    }\n\n    return features;\n  }\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.dataProjection;\n  }\n\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array<string>} layers Layers.\n   * @api\n   */\n  setLayers(layers) {\n    this.layers_ = layers;\n  }\n}\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {PBF} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    const layer = {\n      keys: [],\n      values: [],\n      features: [],\n    };\n    const end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {PBF} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    let value = null;\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value =\n        tag === 1\n          ? pbf.readString()\n          : tag === 2\n          ? pbf.readFloat()\n          : tag === 3\n          ? pbf.readDouble()\n          : tag === 4\n          ? pbf.readVarint64()\n          : tag === 5\n          ? pbf.readVarint()\n          : tag === 6\n          ? pbf.readSVarint()\n          : tag === 7\n          ? pbf.readBoolean()\n          : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {PBF} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    const end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      const key = feature.layer.keys[pbf.readVarint()];\n      const value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @param {PBF} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  const end = pbf.readVarint() + pbf.pos;\n\n  const feature = {\n    layer: layer,\n    type: 0,\n    properties: {},\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n/**\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {import(\"../geom/Geometry.js\").Type} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {import(\"../geom/Geometry.js\").Type} */\n  let geometryType;\n  if (type === 1) {\n    geometryType = numEnds === 1 ? 'Point' : 'MultiPoint';\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ? 'LineString' : 'MultiLineString';\n  } else if (type === 3) {\n    geometryType = 'Polygon';\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\nexport default MVT;\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  tolerance = tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        }\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  }\n  return '';\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  return color;\n}\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distnce from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   * @param {CanvasRenderingContext2D} [context] Canvas context. When provided, the image will be\n   *    drawn into the context's canvas, and `getImage()` will return the canvas once the image\n   *    has finished loading.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction,\n    context\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    if (\n      this.state == ImageState.LOADED &&\n      this.context_ &&\n      !(this.image_ instanceof HTMLCanvasElement)\n    ) {\n      const canvas = this.context_.canvas;\n      canvas.width = this.image_.width;\n      canvas.height = this.image_.height;\n      this.context_.drawImage(this.image_, 0, 0);\n      this.image_ = this.context_.canvas;\n    }\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n    } catch (e) {\n      this.handleImageError_();\n    }\n    this.unlisten_ = listenImage(\n      this.image_,\n      this.handleImageLoad_.bind(this),\n      this.handleImageError_.bind(this)\n    );\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not.\n * The provided `imgSize` needs to match the actual size of the image.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|undefined}\n     */\n    this.imgSize_ = options.imgSize;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && this.imgSize_), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    // `width` or `height` cannot be provided together with `scale`\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      69\n    );\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      this.imgSize_ !== undefined ? this.imgSize_ : null,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n\n    /**\n     * @type {number|undefined}\n     */\n    this.height_ = options.height;\n\n    /**\n     * Recalculate the scale if width or height were given.\n     */\n    if (this.width_ !== undefined || this.height_ !== undefined) {\n      const image = this.getImage(1);\n      const setScale = () => {\n        this.updateScaleFromWidthAndHeight(this.width_, this.height_);\n      };\n      if (image.width > 0) {\n        this.updateScaleFromWidthAndHeight(this.width_, this.height_);\n      } else {\n        image.addEventListener('load', setScale);\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale = this.getScale();\n    scale = Array.isArray(scale) ? scale.slice() : scale;\n    // if either width or height are defined, do not pass scale.\n    if (this.width_ !== undefined || this.height_ !== undefined) {\n      scale = undefined;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      imgSize: this.imgSize_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale: scale,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n      width: this.width_,\n      height: this.height_,\n    });\n  }\n\n  /**\n   * Set the scale of the Icon by calculating it from given width and height and the\n   * width and height of the image.\n   *\n   * @private\n   * @param {number} width The width.\n   * @param {number} height The height.\n   */\n  updateScaleFromWidthAndHeight(width, height) {\n    const image = this.getImage(1);\n    if (width !== undefined && height !== undefined) {\n      super.setScale([width / image.width, height / image.height]);\n    } else if (width !== undefined) {\n      super.setScale([width / image.width, width / image.width]);\n    } else if (height !== undefined) {\n      super.setScale([height / image.height, height / image.height]);\n    } else {\n      super.setScale([1, 1]);\n    }\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels).\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Get the height of the icon (in pixels).\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    return this.height_;\n  }\n\n  /**\n   * Set the width of the icon in pixels.\n   *\n   * @param {number} width The width to set.\n   */\n  setWidth(width) {\n    this.width_ = width;\n    this.updateScaleFromWidthAndHeight(width, this.height_);\n  }\n\n  /**\n   * Set the height of the icon in pixels.\n   *\n   * @param {number} height The height to set.\n   */\n  setHeight(height) {\n    this.height_ = height;\n    this.updateScaleFromWidthAndHeight(this.width_, height);\n  }\n\n  /**\n   * Set the scale and updates the width and height correspondingly.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @override\n   * @api\n   */\n  setScale(scale) {\n    super.setScale(scale);\n    const image = this.getImage(1);\n    if (image) {\n      const widthScale = Array.isArray(scale) ? scale[0] : scale;\n      if (widthScale !== undefined) {\n        this.width_ = widthScale * image.width;\n      }\n      const heightScale = Array.isArray(scale) ? scale[1] : scale;\n      if (heightScale !== undefined) {\n        this.height_ = heightScale * image.height;\n      }\n    }\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval in pixels. When set, the text will be repeated at this interval. Only available\n * when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/style/flat\n */\n\nimport Circle from '../style/Circle.js';\nimport Fill from './Fill.js';\nimport Icon from './Icon.js';\nimport RegularShape from './RegularShape.js';\nimport Stroke from './Stroke.js';\nimport Style from './Style.js';\nimport Text from './Text.js';\n\n/**\n * For static styling, the [layer.setStyle()]{@link module:ol/layer/Vector~VectorLayer#setStyle} method\n * can be called with an object literal that has fill, stroke, text, icon, regular shape, and/or circle properties.\n * @api\n *\n * @typedef {FlatFill & FlatStroke & FlatText & FlatIcon & FlatShape & FlatCircle} FlatStyle\n */\n\n/**\n * A flat style literal or an array of the same.\n *\n * @typedef {FlatStyle|Array<FlatStyle>} FlatStyleLike\n */\n\n/**\n * Fill style properties applied to polygon features.\n *\n * @typedef {Object} FlatFill\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [fill-color] The fill color.\n */\n\n/**\n * Stroke style properties applied to line strings and polygon boundaries.  To apply a stroke, at least one of\n * `stroke-color` or `stroke-width` must be provided.\n *\n * @typedef {Object} FlatStroke\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [stroke-color] The stroke color.\n * @property {number} [stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [stroke-line-dash] Line dash pattern.\n * @property {number} [stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [stroke-miter-limit=10] Miter limit.\n */\n\n/**\n * Label style properties applied to all features.  At a minimum, a `text-value` must be provided.\n *\n * @typedef {Object} FlatText\n * @property {string|Array<string>} [text-value] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {string} [text-font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [text-max-angle=Math.PI/4] When `text-placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [text-offset-x=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [text-offset-y=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [text-overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./Text.js\").TextPlacement} [text-placement='point'] Text placement.\n * @property {number} [text-repeat] Repeat interval in pixels. When set, the text will be repeated at this interval. Only available when\n * `text-placement` is set to `'line'`. Overrides `text-align`.\n * @property {number|import(\"../size.js\").Size} [text-scale] Scale.\n * @property {boolean} [text-rotate-with-view=false] Whether to rotate the text with the view.\n * @property {number} [text-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {CanvasTextAlign} [text-align] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `text-placement: 'point'`. For `text-placement: 'line'`, the default is to let the renderer choose a\n * placement where `text-max-angle` is not exceeded.\n * @property {import('./Text.js').TextJustify} [text-justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `text-justify` is ignored for immediate rendering and also for `text-placement: 'line'`.\n * @property {CanvasTextBaseline} [text-baseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {Array<number>} [text-padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-stroke-line-dash] Line dash pattern.\n * @property {number} [text-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-stroke-width] Stroke pixel width.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-background-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-background-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-background-stroke-line-dash] Line dash pattern.\n * @property {number} [text-background-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-background-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-background-stroke-width] Stroke pixel width.\n */\n\n/**\n * Icon style properties applied to point features.  One of `icon-src` or `icon-img` must be provided to render\n * points with an icon.\n *\n * @typedef {Object} FlatIcon\n * @property {string} [icon-src] Image source URI.\n * @property {HTMLImageElement|HTMLCanvasElement} [icon-img] Image object for the icon. If the `icon-src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `icon-img-size` option.\n * @property {import(\"../size.js\").Size} [icon-img-size] Image size in pixels. Only required if `icon-img` is set and `icon-src` is not.\n * The provided size needs to match the actual size of the image.\n * @property {Array<number>} [icon-anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-anchor-origin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-x-units='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-y-units='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [icon-color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [icon-cross-origin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `icon-cross-origin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Array<number>} [icon-offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [icon-displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-offset-origin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [icon-opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [icon-scale=1] Scale.\n * @property {number} [icon-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [icon-rotate-with-view=false] Whether to rotate the icon with the view.\n * @property {import(\"../size.js\").Size} [icon-size] Icon size in pixel. Can be used together with `icon-offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [icon-declutter-mode] Declutter mode\n */\n\n/**\n * Regular shape style properties for rendering point features.  At least `shape-points` must be provided.\n *\n * @typedef {Object} FlatShape\n * @property {number} [shape-points] Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-stroke-color] The stroke color.\n * @property {number} [shape-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [shape-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [shape-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [shape-stroke-line-dash] Line dash pattern.\n * @property {number} [shape-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [shape-stroke-miter-limit=10] Miter limit.\n * @property {number} [shape-radius] Radius of a regular polygon.\n * @property {number} [shape-radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [shape-radius2] Second radius of a star.\n * @property {number} [shape-angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [shape-displacement=[0,0]] Displacement of the shape\n * @property {number} [shape-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [shape-rotate-with-view=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [shape-scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `shape-radius`, `shape-radius1` and `shape-radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [shape-declutter-mode] Declutter mode.\n */\n\n/**\n * Circle style properties for rendering point features.  At least `circle-radius` must be provided.\n *\n * @typedef {Object} FlatCircle\n * @property {number} [circle-radius] Circle radius.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-stroke-color] The stroke color.\n * @property {number} [circle-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [circle-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [circle-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [circle-stroke-line-dash] Line dash pattern.\n * @property {number} [circle-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [circle-stroke-miter-limit=10] Miter limit.\n * @property {Array<number>} [circle-displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [circle-scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `circle-radius`.\n * @property {number} [circle-rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [circle-rotate-with-view=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [circle-declutter-mode] Declutter mode\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @return {import(\"./Style.js\").default} A style instance.\n */\nexport function toStyle(flatStyle) {\n  const style = new Style({\n    fill: getFill(flatStyle, ''),\n    stroke: getStroke(flatStyle, ''),\n    text: getText(flatStyle),\n    image: getImage(flatStyle),\n  });\n\n  return style;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Fill|undefined} The fill (if any).\n */\nfunction getFill(flatStyle, prefix) {\n  const color = flatStyle[prefix + 'fill-color'];\n  if (!color) {\n    return;\n  }\n\n  return new Fill({color: color});\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Stroke|undefined} The stroke (if any).\n */\nfunction getStroke(flatStyle, prefix) {\n  const width = flatStyle[prefix + 'stroke-width'];\n  const color = flatStyle[prefix + 'stroke-color'];\n  if (!width && !color) {\n    return;\n  }\n\n  return new Stroke({\n    width: width,\n    color: color,\n    lineCap: flatStyle[prefix + 'stroke-line-cap'],\n    lineJoin: flatStyle[prefix + 'stroke-line-join'],\n    lineDash: flatStyle[prefix + 'stroke-line-dash'],\n    lineDashOffset: flatStyle[prefix + 'stroke-line-dash-offset'],\n    miterLimit: flatStyle[prefix + 'stroke-miter-limit'],\n  });\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {Text|undefined} The text (if any).\n */\nfunction getText(flatStyle) {\n  const value = flatStyle['text-value'];\n  if (!value) {\n    return;\n  }\n\n  const text = new Text({\n    text: value,\n    font: flatStyle['text-font'],\n    maxAngle: flatStyle['text-max-angle'],\n    offsetX: flatStyle['text-offset-x'],\n    offsetY: flatStyle['text-offset-y'],\n    overflow: flatStyle['text-overflow'],\n    placement: flatStyle['text-placement'],\n    repeat: flatStyle['text-repeat'],\n    scale: flatStyle['text-scale'],\n    rotateWithView: flatStyle['text-rotate-with-view'],\n    rotation: flatStyle['text-rotation'],\n    textAlign: flatStyle['text-align'],\n    justify: flatStyle['text-justify'],\n    textBaseline: flatStyle['text-baseline'],\n    padding: flatStyle['text-padding'],\n    fill: getFill(flatStyle, 'text-'),\n    backgroundFill: getFill(flatStyle, 'text-background-'),\n    stroke: getStroke(flatStyle, 'text-'),\n    backgroundStroke: getStroke(flatStyle, 'text-background-'),\n  });\n\n  return text;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {import(\"./Image.js\").default|undefined} The image (if any).\n */\nfunction getImage(flatStyle) {\n  const iconSrc = flatStyle['icon-src'];\n  const iconImg = flatStyle['icon-img'];\n  if (iconSrc || iconImg) {\n    const icon = new Icon({\n      src: iconSrc,\n      img: iconImg,\n      imgSize: flatStyle['icon-img-size'],\n      anchor: flatStyle['icon-anchor'],\n      anchorOrigin: flatStyle['icon-anchor-origin'],\n      anchorXUnits: flatStyle['icon-anchor-x-units'],\n      anchorYUnits: flatStyle['icon-anchor-y-units'],\n      color: flatStyle['icon-color'],\n      crossOrigin: flatStyle['icon-cross-origin'],\n      offset: flatStyle['icon-offset'],\n      displacement: flatStyle['icon-displacement'],\n      opacity: flatStyle['icon-opacity'],\n      scale: flatStyle['icon-scale'],\n      rotation: flatStyle['icon-rotation'],\n      rotateWithView: flatStyle['icon-rotate-with-view'],\n      size: flatStyle['icon-size'],\n      declutterMode: flatStyle['icon-declutter-mode'],\n    });\n    return icon;\n  }\n\n  const shapePoints = flatStyle['shape-points'];\n  if (shapePoints) {\n    const prefix = 'shape-';\n    const shape = new RegularShape({\n      points: shapePoints,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      radius: flatStyle['shape-radius'],\n      radius1: flatStyle['shape-radius1'],\n      radius2: flatStyle['shape-radius2'],\n      angle: flatStyle['shape-angle'],\n      displacement: flatStyle['shape-displacement'],\n      rotation: flatStyle['shape-rotation'],\n      rotateWithView: flatStyle['shape-rotate-with-view'],\n      scale: flatStyle['shape-scale'],\n      declutterMode: flatStyle['shape-declutter-mode'],\n    });\n\n    return shape;\n  }\n\n  const circleRadius = flatStyle['circle-radius'];\n  if (circleRadius) {\n    const prefix = 'circle-';\n    const circle = new Circle({\n      radius: circleRadius,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      displacement: flatStyle['circle-displacement'],\n      scale: flatStyle['circle-scale'],\n      rotation: flatStyle['circle-rotation'],\n      rotateWithView: flatStyle['circle-rotate-with-view'],\n      declutterMode: flatStyle['circle-declutter-mode'],\n    });\n\n    return circle;\n  }\n\n  return;\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {toStyle} from '../style/flat.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use \"flat\" style object literals instead of\n   * using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.).  See the documentation\n   * for the [flat style types]{@link module:ol/style/flat~FlatStyle} to see what properties are supported.\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleLike|null}\n     */\n    let styleLike;\n\n    if (style === undefined) {\n      styleLike = createDefaultStyle;\n    } else if (style === null) {\n      styleLike = null;\n    } else if (typeof style === 'function') {\n      styleLike = style;\n    } else if (style instanceof Style) {\n      styleLike = style;\n    } else if (Array.isArray(style)) {\n      const len = style.length;\n\n      /**\n       * @type {Array<Style>}\n       */\n      const styles = new Array(len);\n\n      for (let i = 0; i < len; ++i) {\n        const s = style[i];\n        if (s instanceof Style) {\n          styles[i] = s;\n        } else {\n          styles[i] = toStyle(s);\n        }\n      }\n      styleLike = styles;\n    } else {\n      styleLike = toStyle(style);\n    }\n\n    this.style_ = styleLike;\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1]\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true}\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0]\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    stitchContext.imageSmoothingEnabled = false;\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  releaseCanvas(stitchContext);\n  canvasPool.push(stitchContext.canvas);\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {boolean} [interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  // @ts-ignore Features are copied from `features` to `resultFeatures` so the type should be the same\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply,\n  reset as resetTransform,\n  scale,\n  scale as scaleTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {\n  boundingExtent,\n  buffer,\n  containsExtent,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\nimport {wrapX} from '../../coordinate.js';\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst IMAGE_REPLAYS = {\n  'image': ['Polygon', 'Circle', 'LineString', 'Image', 'Text'],\n  'hybrid': ['Polygon', 'LineString'],\n  'vector': [],\n};\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst VECTOR_REPLAYS = {\n  'hybrid': ['Image', 'Text', 'Default'],\n  'vector': ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'],\n};\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n * @extends {CanvasTileLayerRenderer<import(\"../../layer/VectorTile.js\").default>}\n */\nclass CanvasVectorTileLayerRenderer extends CanvasTileLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorTile.js\").default} layer VectorTile layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection\").default} projection Projection.\n   * @return {boolean|undefined} Tile needs to be rendered.\n   */\n  prepareTile(tile, pixelRatio, projection) {\n    let render;\n    const state = tile.getState();\n    if (state === TileState.LOADED || state === TileState.ERROR) {\n      this.updateExecutorGroup_(tile, pixelRatio, projection);\n      if (this.tileImageNeedsRender_(tile)) {\n        render = true;\n      }\n    }\n    return render;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const layer = this.getLayer();\n    const tile = layer.getSource().getTile(z, x, y, pixelRatio, projection);\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    if (hifi || !tile.wantedResolution) {\n      tile.wantedResolution = resolution;\n    }\n    const render = this.prepareTile(tile, pixelRatio, projection);\n    if (\n      render &&\n      (hifi || Date.now() - frameState.time < 8) &&\n      layer.getRenderMode() !== 'vector'\n    ) {\n      this.renderTileImage_(tile, frameState);\n    }\n    return super.getTile(z, x, y, frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const layer = this.getLayer();\n    return (\n      super.isDrawableTile(tile) &&\n      (layer.getRenderMode() === 'vector'\n        ? getUid(layer) in tile.executorGroups\n        : tile.hasContext(layer))\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTileImage(tile) {\n    return tile.getImage(this.getLayer());\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerRevision = this.getLayer().getRevision();\n    if (this.renderedLayerRevision_ !== layerRevision) {\n      this.renderedLayerRevision_ = layerRevision;\n      this.renderedTiles.length = 0;\n    }\n    return super.prepareFrame(frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateExecutorGroup_(tile, pixelRatio, projection) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const revision = layer.getRevision();\n    const renderOrder = layer.getRenderOrder() || null;\n\n    const resolution = tile.wantedResolution;\n    const builderState = tile.getReplayState(layer);\n    if (\n      !builderState.dirty &&\n      builderState.renderedResolution === resolution &&\n      builderState.renderedRevision == revision &&\n      builderState.renderedRenderOrder == renderOrder\n    ) {\n      return;\n    }\n\n    const source = layer.getSource();\n    const declutter = layer.getDeclutter();\n    const sourceTileGrid = source.getTileGrid();\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n\n    const sourceTiles = source.getSourceTiles(pixelRatio, projection, tile);\n    const layerUid = getUid(layer);\n    delete tile.hitDetectionImageData[layerUid];\n    tile.executorGroups[layerUid] = [];\n    if (declutter) {\n      tile.declutterExecutorGroups[layerUid] = [];\n    }\n    builderState.dirty = false;\n    for (let t = 0, tt = sourceTiles.length; t < tt; ++t) {\n      const sourceTile = sourceTiles[t];\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      const sourceTileCoord = sourceTile.tileCoord;\n      const sourceTileExtent =\n        sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      const sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      const builderExtent = buffer(\n        sharedExtent,\n        layer.getRenderBuffer() * resolution,\n        this.tmpExtent\n      );\n      const bufferedExtent = equals(sourceTileExtent, sharedExtent)\n        ? null\n        : builderExtent;\n      const builderGroup = new CanvasBuilderGroup(\n        0,\n        builderExtent,\n        resolution,\n        pixelRatio\n      );\n      const declutterBuilderGroup = declutter\n        ? new CanvasBuilderGroup(0, sharedExtent, resolution, pixelRatio)\n        : undefined;\n      const squaredTolerance = getSquaredRenderTolerance(\n        resolution,\n        pixelRatio\n      );\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      const render = function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            builderGroup,\n            declutterBuilderGroup\n          );\n          builderState.dirty = builderState.dirty || dirty;\n        }\n      };\n\n      const features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== builderState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (let i = 0, ii = features.length; i < ii; ++i) {\n        const feature = features[i];\n        if (\n          !bufferedExtent ||\n          intersects(bufferedExtent, feature.getGeometry().getExtent())\n        ) {\n          render.call(this, feature);\n        }\n      }\n      const executorGroupInstructions = builderGroup.finish();\n      // no need to clip when the render tile is covered by a single source tile\n      const replayExtent =\n        layer.getRenderMode() !== 'vector' &&\n        declutter &&\n        sourceTiles.length === 1\n          ? null\n          : sharedExtent;\n      const renderingReplayGroup = new CanvasExecutorGroup(\n        replayExtent,\n        resolution,\n        pixelRatio,\n        source.getOverlaps(),\n        executorGroupInstructions,\n        layer.getRenderBuffer()\n      );\n      tile.executorGroups[layerUid].push(renderingReplayGroup);\n      if (declutterBuilderGroup) {\n        const declutterExecutorGroup = new CanvasExecutorGroup(\n          null,\n          resolution,\n          pixelRatio,\n          source.getOverlaps(),\n          declutterBuilderGroup.finish(),\n          layer.getRenderBuffer()\n        );\n        tile.declutterExecutorGroups[layerUid].push(declutterExecutorGroup);\n      }\n    }\n    builderState.renderedRevision = revision;\n    builderState.renderedRenderOrder = renderOrder;\n    builderState.renderedResolution = resolution;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    const layer = this.getLayer();\n    const source = layer.getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection\n    );\n\n    const hitExtent = boundingExtent([coordinate]);\n    buffer(hitExtent, resolution * hitTolerance, hitExtent);\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position.\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      let key = feature.getId();\n      if (key === undefined) {\n        key = getUid(feature);\n      }\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    const renderedTiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n\n    let found;\n    for (let i = 0, ii = renderedTiles.length; !found && i < ii; ++i) {\n      const tile = renderedTiles[i];\n      const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      if (!intersects(tileExtent, hitExtent)) {\n        continue;\n      }\n\n      const layerUid = getUid(layer);\n      const executorGroups = [tile.executorGroups[layerUid]];\n      const declutterExecutorGroups = tile.declutterExecutorGroups[layerUid];\n      if (declutterExecutorGroups) {\n        executorGroups.push(declutterExecutorGroups);\n      }\n      executorGroups.some((executorGroups) => {\n        const declutteredFeatures =\n          executorGroups === declutterExecutorGroups\n            ? frameState.declutterTree.all().map((item) => item.value)\n            : null;\n        for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n          const executorGroup = executorGroups[t];\n          found = executorGroup.forEachFeatureAtCoordinate(\n            coordinate,\n            resolution,\n            rotation,\n            hitTolerance,\n            featureCallback,\n            declutteredFeatures\n          );\n          if (found) {\n            return true;\n          }\n        }\n      });\n    }\n    return found;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature.js\").FeatureLike>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve, reject) => {\n      const layer = this.getLayer();\n      const layerUid = getUid(layer);\n      const source = layer.getSource();\n      const projection = this.renderedProjection;\n      const projectionExtent = projection.getExtent();\n      const resolution = this.renderedResolution;\n      const tileGrid = source.getTileGridForProjection(projection);\n      const coordinate = applyTransform(\n        this.renderedPixelToCoordinateTransform_,\n        pixel.slice()\n      );\n      const tileCoord = tileGrid.getTileCoordForCoordAndResolution(\n        coordinate,\n        resolution\n      );\n      /** @type {import(\"../../VectorRenderTile.js\").default|undefined} */\n      let tile;\n      for (let i = 0, ii = this.renderedTiles.length; i < ii; ++i) {\n        if (\n          tileCoord.toString() === this.renderedTiles[i].tileCoord.toString()\n        ) {\n          tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n            this.renderedTiles[i]\n          );\n          if (tile.getState() === TileState.LOADED) {\n            const extent = tileGrid.getTileCoordExtent(tile.tileCoord);\n            if (\n              source.getWrapX() &&\n              projection.canWrapX() &&\n              !containsExtent(projectionExtent, extent)\n            ) {\n              wrapX(coordinate, projection);\n            }\n            break;\n          }\n          tile = undefined;\n        }\n      }\n      if (!tile || tile.loadingSourceTiles > 0) {\n        resolve([]);\n        return;\n      }\n      const extent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      const corner = getTopLeft(extent);\n      const tilePixel = [\n        (coordinate[0] - corner[0]) / resolution,\n        (corner[1] - coordinate[1]) / resolution,\n      ];\n      /** @type {Array<import(\"../../Feature.js\").FeatureLike>} */\n      const features = tile\n        .getSourceTiles()\n        .reduce(function (accumulator, sourceTile) {\n          return accumulator.concat(sourceTile.getFeatures());\n        }, []);\n      /** @type {ImageData|undefined} */\n      let hitDetectionImageData = tile.hitDetectionImageData[layerUid];\n      if (!hitDetectionImageData) {\n        const tileSize = toSize(\n          tileGrid.getTileSize(\n            tileGrid.getZForResolution(resolution, source.zDirection)\n          )\n        );\n        const rotation = this.renderedRotation_;\n        const transforms = [\n          this.getRenderTransform(\n            tileGrid.getTileCoordCenter(tile.wrappedTileCoord),\n            resolution,\n            0,\n            HIT_DETECT_RESOLUTION,\n            tileSize[0] * HIT_DETECT_RESOLUTION,\n            tileSize[1] * HIT_DETECT_RESOLUTION,\n            0\n          ),\n        ];\n        hitDetectionImageData = createHitDetectionImageData(\n          tileSize,\n          transforms,\n          features,\n          layer.getStyleFunction(),\n          tileGrid.getTileCoordExtent(tile.wrappedTileCoord),\n          tile.getReplayState(layer).renderedResolution,\n          rotation\n        );\n        tile.hitDetectionImageData[layerUid] = hitDetectionImageData;\n      }\n      resolve(hitDetect(tilePixel, features, hitDetectionImageData));\n    });\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    const context = this.context;\n    const alpha = context.globalAlpha;\n    context.globalAlpha = this.getLayer().getOpacity();\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const tiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    for (let i = 0, ii = tiles.length; i < ii; ++i) {\n      const tile = tiles[i];\n      const declutterExecutorGroups =\n        tile.declutterExecutorGroups[getUid(this.getLayer())];\n      if (declutterExecutorGroups) {\n        for (let j = declutterExecutorGroups.length - 1; j >= 0; --j) {\n          declutterExecutorGroups[j].execute(\n            this.context,\n            1,\n            this.getTileRenderTransform(tile, frameState),\n            frameState.viewState.rotation,\n            hifi,\n            undefined,\n            frameState.declutterTree\n          );\n        }\n      }\n    }\n    context.globalAlpha = alpha;\n  }\n\n  getTileRenderTransform(tile, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    const size = frameState.size;\n    const width = Math.round(size[0] * pixelRatio);\n    const height = Math.round(size[1] * pixelRatio);\n\n    const source = this.getLayer().getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection\n    );\n    const tileCoord = tile.tileCoord;\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n    const worldOffset =\n      tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tileExtent[0];\n    const transform = multiply(\n      scale(this.inversePixelTransform.slice(), 1 / pixelRatio, 1 / pixelRatio),\n      this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        worldOffset\n      )\n    );\n    return transform;\n  }\n\n  /**\n   * Render the vectors for this layer.\n   * @param {CanvasRenderingContext2D} context Target context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  postRender(context, frameState) {\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n\n    this.renderedPixelToCoordinateTransform_ =\n      frameState.pixelToCoordinateTransform.slice();\n    this.renderedRotation_ = frameState.viewState.rotation;\n\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const renderMode = layer.getRenderMode();\n    const alpha = context.globalAlpha;\n    context.globalAlpha = layer.getOpacity();\n    const replayTypes = VECTOR_REPLAYS[renderMode];\n    const viewState = frameState.viewState;\n    const rotation = viewState.rotation;\n    const tileSource = layer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const z = tileGrid.getZForResolution(\n      viewState.resolution,\n      tileSource.zDirection\n    );\n\n    const tiles = this.renderedTiles;\n    const clips = [];\n    const clipZs = [];\n    let ready = true;\n    for (let i = tiles.length - 1; i >= 0; --i) {\n      const tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n        tiles[i]\n      );\n      ready = ready && !tile.getReplayState(layer).dirty;\n      const executorGroups = tile.executorGroups[getUid(layer)].filter(\n        (group) => group.hasExecutors(replayTypes)\n      );\n      if (executorGroups.length === 0) {\n        continue;\n      }\n      const transform = this.getTileRenderTransform(tile, frameState);\n      const currentZ = tile.tileCoord[0];\n      let contextSaved = false;\n      // Clip mask for regions in this tile that already filled by a higher z tile\n      const currentClip = executorGroups[0].getClipCoords(transform);\n      if (currentClip) {\n        for (let j = 0, jj = clips.length; j < jj; ++j) {\n          if (z !== currentZ && currentZ < clipZs[j]) {\n            const clip = clips[j];\n            if (\n              intersects(\n                [\n                  currentClip[0],\n                  currentClip[3],\n                  currentClip[4],\n                  currentClip[7],\n                ],\n                [clip[0], clip[3], clip[4], clip[7]]\n              )\n            ) {\n              if (!contextSaved) {\n                context.save();\n                contextSaved = true;\n              }\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n      }\n      for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n        const executorGroup = executorGroups[t];\n        executorGroup.execute(\n          context,\n          1,\n          transform,\n          rotation,\n          hifi,\n          replayTypes\n        );\n      }\n      if (contextSaved) {\n        context.restore();\n      }\n    }\n    context.globalAlpha = alpha;\n    this.ready = ready;\n\n    super.postRender(context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder group for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            undefined,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        undefined,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} A new tile image was rendered.\n   * @private\n   */\n  tileImageNeedsRender_(tile) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    if (layer.getRenderMode() === 'vector') {\n      return false;\n    }\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const resolution = tile.wantedResolution;\n    return (\n      replayState.renderedTileResolution !== resolution ||\n      replayState.renderedTileRevision !== revision\n    );\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {import(\"../../Map\").FrameState} frameState Frame state.\n   * @private\n   */\n  renderTileImage_(tile, frameState) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const executorGroups = tile.executorGroups[getUid(layer)];\n    replayState.renderedTileRevision = revision;\n\n    const tileCoord = tile.wrappedTileCoord;\n    const z = tileCoord[0];\n    const source = layer.getSource();\n    let pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileResolution = tileGrid.getResolution(tile.tileCoord[0]);\n    const renderPixelRatio =\n      (frameState.pixelRatio / tile.wantedResolution) * tileResolution;\n    const resolution = tileGrid.getResolution(z);\n    const context = tile.getContext(layer);\n\n    // Increase tile size when overzooming for low pixel ratio, to avoid blurry tiles\n    pixelRatio = Math.round(\n      Math.max(pixelRatio, renderPixelRatio / pixelRatio)\n    );\n    const size = source.getTilePixelSize(z, pixelRatio, projection);\n    context.canvas.width = size[0];\n    context.canvas.height = size[1];\n    const renderScale = pixelRatio / renderPixelRatio;\n    if (renderScale !== 1) {\n      const canvasTransform = resetTransform(this.tmpTransform_);\n      scaleTransform(canvasTransform, renderScale, renderScale);\n      context.setTransform.apply(context, canvasTransform);\n    }\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    const pixelScale = renderPixelRatio / resolution;\n    const transform = resetTransform(this.tmpTransform_);\n    scaleTransform(transform, pixelScale, -pixelScale);\n    translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n    for (let i = 0, ii = executorGroups.length; i < ii; ++i) {\n      const executorGroup = executorGroups[i];\n      executorGroup.execute(\n        context,\n        renderScale,\n        transform,\n        0,\n        true,\n        IMAGE_REPLAYS[layer.getRenderMode()]\n      );\n    }\n    replayState.renderedTileResolution = tile.wantedResolution;\n  }\n}\n\nexport default CanvasVectorTileLayerRenderer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/VectorTile\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorTileLayerRenderer from '../renderer/canvas/VectorTileLayer.js';\nimport TileProperty from './TileProperty.js';\nimport {assert} from '../asserts.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} VectorTileLayerOnSignature\n */\n\n/**\n * @typedef {'hybrid' | 'vector'} VectorTileRenderType\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {VectorTileRenderType} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Everything is rendered as vectors. Use this mode for improved performance on vector\n *    tile layers with only a few rendered features (e.g. for highlighting a subset of features of\n *    another layer with the same source).\n * @property {import(\"../source/VectorTile.js\").default} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor|false} [background] Background color for the layer. If not specified, no\n * background will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @param {Options} [options] Options.\n * @extends {BaseVectorLayer<import(\"../source/VectorTile.js\").default, CanvasVectorTileLayerRenderer>}\n * @api\n */\nclass VectorTileLayer extends BaseVectorLayer {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = /** @type {Object} */ (Object.assign({}, options));\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n\n    super(\n      /** @type {import(\"./BaseVector.js\").Options<import(\"../source/VectorTile.js\").default>} */ (\n        baseOptions\n      )\n    );\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    const renderMode = options.renderMode || 'hybrid';\n    // `renderMode` must be `'hybrid'` or `'vector'`.\n    assert(renderMode == 'hybrid' || renderMode == 'vector', 28);\n\n    /**\n     * @private\n     * @type {VectorTileRenderType}\n     */\n    this.renderMode_ = renderMode;\n\n    this.setPreload(options.preload ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n\n    /**\n     * @return {import(\"./Base.js\").BackgroundColor} Background color.\n     * @function\n     * @api\n     */\n    this.getBackground;\n\n    /**\n     * @param {import(\"./Base.js\").BackgroundColor} background Background color.\n     * @function\n     * @api\n     */\n    this.setBackground;\n  }\n\n  createRenderer() {\n    return new CanvasVectorTileLayerRenderer(this);\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {VectorTileRenderType} The render mode.\n   */\n  getRenderMode() {\n    return this.renderMode_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default VectorTileLayer;\n","/**\n * @module ol/VectorTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\nclass VectorTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Data source url.\n   * @param {import(\"./format/Feature.js\").default} format Feature format.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, format, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * Extent of this tile; set by the source.\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = null;\n\n    /**\n     * @private\n     * @type {import(\"./format/Feature.js\").default}\n     */\n    this.format_ = format;\n\n    /**\n     * @private\n     * @type {Array<import(\"./Feature.js\").default>}\n     */\n    this.features_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./featureloader.js\").FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * Feature projection of this tile; set by the source.\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection = null;\n\n    /**\n     * Resolution of this tile; set by the source.\n     * @type {number}\n     */\n    this.resolution;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = src;\n\n    this.key = src;\n  }\n\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {import(\"./format/Feature.js\").default} Feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Get the features for this tile. Geometries will be in the view projection.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n      if (this.loader_) {\n        this.loader_(this.extent, this.resolution, this.projection);\n      }\n    }\n  }\n\n  /**\n   * Handler for successful tile load.\n   * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n   * @param {import(\"./proj/Projection.js\").default} dataProjection Data projection.\n   */\n  onLoad(features, dataProjection) {\n    this.setFeatures(features);\n  }\n\n  /**\n   * Handler for tile load errors.\n   */\n  onError() {\n    this.setState(TileState.ERROR);\n  }\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array<import(\"./Feature.js\").default>} features Features.\n   * @api\n   */\n  setFeatures(features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  }\n\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {import(\"./featureloader.js\").FeatureLoader} loader Feature loader.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n}\n\nexport default VectorTile;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  peek(key) {\n    if (!this.containsKey(key)) {\n      return undefined;\n    }\n    return this.entries_[key].value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/VectorRenderTile\n */\nimport Tile from './Tile.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getUid} from './util.js';\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty Dirty.\n * @property {null|import(\"./render.js\").OrderFunction} renderedRenderOrder RenderedRenderOrder.\n * @property {number} renderedTileRevision RenderedTileRevision.\n * @property {number} renderedResolution RenderedResolution.\n * @property {number} renderedRevision RenderedRevision.\n * @property {number} renderedTileResolution RenderedTileResolution.\n * @property {number} renderedTileZ RenderedTileZ.\n */\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nconst canvasPool = [];\n\nclass VectorRenderTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {import(\"./tilecoord.js\").TileCoord} urlTileCoord Wrapped tile coordinate for source urls.\n   * @param {function(VectorRenderTile):Array<import(\"./VectorTile\").default>} getSourceTiles Function\n   * to get source tiles for this tile.\n   */\n  constructor(tileCoord, state, urlTileCoord, getSourceTiles) {\n    super(tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {!Object<string, CanvasRenderingContext2D>}\n     */\n    this.context_ = {};\n\n    /**\n     * Executor groups by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.executorGroups = {};\n\n    /**\n     * Executor groups for decluttering, by layer uid. Entries are read/written by the renderer.\n     * @type {Object<string, Array<import(\"./render/canvas/ExecutorGroup.js\").default>>}\n     */\n    this.declutterExecutorGroups = {};\n\n    /**\n     * Number of loading source tiles. Read/written by the source.\n     * @type {number}\n     */\n    this.loadingSourceTiles = 0;\n\n    /**\n     * @type {Object<number, ImageData>}\n     */\n    this.hitDetectionImageData = {};\n\n    /**\n     * @private\n     * @type {!Object<string, ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @type {Array<import(\"./VectorTile.js\").default>}\n     */\n    this.sourceTiles = [];\n\n    /**\n     * @type {Object<string, boolean>}\n     */\n    this.errorTileKeys = {};\n\n    /**\n     * @type {number}\n     */\n    this.wantedResolution;\n\n    /**\n     * @type {!function():Array<import(\"./VectorTile.js\").default>}\n     */\n    this.getSourceTiles = getSourceTiles.bind(undefined, this);\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  getContext(layer) {\n    const key = getUid(layer);\n    if (!(key in this.context_)) {\n      this.context_[key] = createCanvasContext2D(1, 1, canvasPool);\n    }\n    return this.context_[key];\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {boolean} Tile has a rendering context for the given layer.\n   */\n  hasContext(layer) {\n    return getUid(layer) in this.context_;\n  }\n\n  /**\n   * Get the Canvas for this tile.\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage(layer) {\n    return this.hasContext(layer) ? this.getContext(layer).canvas : null;\n  }\n\n  /**\n   * @param {import(\"./layer/Layer.js\").default} layer Layer.\n   * @return {ReplayState} The replay state.\n   */\n  getReplayState(layer) {\n    const key = getUid(layer);\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedResolution: NaN,\n        renderedRevision: -1,\n        renderedTileResolution: NaN,\n        renderedTileRevision: -1,\n        renderedTileZ: -1,\n      };\n    }\n    return this.replayState_[key];\n  }\n\n  /**\n   * Load the tile.\n   */\n  load() {\n    this.getSourceTiles();\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    for (const key in this.context_) {\n      const context = this.context_[key];\n      releaseCanvas(context);\n      canvasPool.push(context.canvas);\n      delete this.context_[key];\n    }\n    super.release();\n  }\n}\n\nexport default VectorRenderTile;\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json' || type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/VectorTile\n */\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../VectorTile.js';\nimport TileCache from '../TileCache.js';\nimport TileGrid from '../tilegrid/TileGrid.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport VectorRenderTile from '../VectorRenderTile.js';\nimport {DEFAULT_MAX_ZOOM} from '../tilegrid/common.js';\nimport {\n  buffer as bufferExtent,\n  getIntersection,\n  intersects,\n} from '../extent.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {fromKey, getCacheKeyForTileKey, getKeyZXY} from '../tilecoord.js';\nimport {isEmpty} from '../obj.js';\nimport {loadFeaturesXhr} from '../featureloader.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least twice the number of tiles in the viewport.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {import(\"../format/Feature.js\").default} [format] Feature format for tiles. Used and required by the default.\n * @property {boolean} [overlaps=true] This source may have overlapping geometries. Setting this\n * to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection of the tile grid.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../VectorTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/VectorTile~VectorTile}.\n * @property {number} [maxZoom=22] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number|import(\"../size.js\").Size} [tileSize=512] Optional tile size. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. Could look like this for pbf tiles:\n * ```js\n * function(tile, url) {\n *   tile.setLoader(function(extent, resolution, projection) {\n *     fetch(url).then(function(response) {\n *       response.arrayBuffer().then(function(data) {\n *         const format = tile.getFormat() // ol/format/MVT configured as source format\n *         const features = format.readFeatures(data, {\n *           extent: extent,\n *           featureProjection: projection\n *         });\n *         tile.setFeatures(features);\n *       });\n *     });\n *   });\n * }\n * ```\n * If you do not need extent, resolution and projection to get the features for a tile (e.g.\n * for GeoJSON tiles), your `tileLoadFunction` does not need a `setLoader()` call. Only make sure\n * to call `setFeatures()` on the tile:\n * ```js\n * const format = new GeoJSON({featureProjection: map.getView().getProjection()});\n * async function tileLoadFunction(tile, url) {\n *   const response = await fetch(url);\n *   const data = await response.json();\n *   tile.setFeatures(format.readFeatures(data));\n * }\n * ```\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {number} [transition] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When set to `true`, tiles will be wrapped horizontally to\n * render multiple worlds.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=1]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Class for layer sources providing vector data divided into a tile grid, to be\n * used with {@link module:ol/layer/VectorTile~VectorTileLayer}. Although this source receives tiles\n * with vector features from the server, it is not meant for feature editing.\n * Features are optimized for rendering, their geometries are clipped at or near\n * tile boundaries and simplified for a view resolution. See\n * {@link module:ol/source/Vector~VectorSource} for vector sources that are suitable for feature\n * editing.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass VectorTile extends UrlTile {\n  /**\n   * @param {!Options} options Vector tile options.\n   */\n  constructor(options) {\n    const projection = options.projection || 'EPSG:3857';\n\n    const extent = options.extent || extentFromProjection(projection);\n\n    const tileGrid =\n      options.tileGrid ||\n      createXYZ({\n        extent: extent,\n        maxResolution: options.maxResolution,\n        maxZoom: options.maxZoom !== undefined ? options.maxZoom : 22,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize || 512,\n      });\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      interpolate: true,\n      opaque: false,\n      projection: projection,\n      state: options.state,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultLoadFunction,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX === undefined ? true : options.wrapX,\n      transition: options.transition,\n      zDirection: options.zDirection === undefined ? 1 : options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|null}\n     */\n    this.format_ = options.format ? options.format : null;\n\n    /**\n     * @private\n     * @type {TileCache}\n     */\n    this.sourceTileCache = new TileCache(this.tileCache.highWaterMark);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @protected\n     * @type {typeof import(\"../VectorTile.js\").default}\n     */\n    this.tileClass = options.tileClass ? options.tileClass : Tile;\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGrids_ = {};\n  }\n\n  /**\n   * Get features whose bounding box intersects the provided extent. Only features for cached\n   * tiles for the last rendered zoom level are available in the source. So this method is only\n   * suitable for requesting tiles for extents that are currently rendered.\n   *\n   * Features are returned in random tile order and as they are included in the tiles. This means\n   * they can be clipped, duplicated across tiles, and simplified to the render resolution.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    const features = [];\n    const tileCache = this.tileCache;\n    if (tileCache.getCount() === 0) {\n      return features;\n    }\n    const z = fromKey(tileCache.peekFirstKey())[0];\n    const tileGrid = this.tileGrid;\n    tileCache.forEach(function (tile) {\n      if (tile.tileCoord[0] !== z || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const sourceTiles = tile.getSourceTiles();\n      for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n        const sourceTile = sourceTiles[i];\n        const tileCoord = sourceTile.tileCoord;\n        if (intersects(extent, tileGrid.getTileCoordExtent(tileCoord))) {\n          const tileFeatures = sourceTile.getFeatures();\n          if (tileFeatures) {\n            for (let j = 0, jj = tileFeatures.length; j < jj; ++j) {\n              const candidate = tileFeatures[j];\n              const geometry = candidate.getGeometry();\n              if (intersects(extent, geometry.getExtent())) {\n                features.push(candidate);\n              }\n            }\n          }\n        }\n      }\n    });\n    return features;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * clear {@link module:ol/TileCache~TileCache} and delete all source tiles\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n    this.sourceTileCache.clear();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    const usedSourceTiles = Object.keys(usedTiles).reduce((acc, key) => {\n      const cacheKey = getCacheKeyForTileKey(key);\n      const tile = tileCache.peek(cacheKey);\n      if (tile) {\n        const sourceTiles = tile.sourceTiles;\n        for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n          acc[sourceTiles[i].getKey()] = true;\n        }\n      }\n      return acc;\n    }, {});\n    super.expireCache(projection, usedTiles);\n    this.sourceTileCache.expireCache(usedSourceTiles);\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection\").default} projection Projection.\n   * @param {VectorRenderTile} tile Vector image tile.\n   * @return {Array<import(\"../VectorTile\").default>} Tile keys.\n   */\n  getSourceTiles(pixelRatio, projection, tile) {\n    if (tile.getState() === TileState.IDLE) {\n      tile.setState(TileState.LOADING);\n      const urlTileCoord = tile.wrappedTileCoord;\n      const tileGrid = this.getTileGridForProjection(projection);\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      const z = urlTileCoord[0];\n      const resolution = tileGrid.getResolution(z);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(extent, -resolution, extent);\n      const sourceTileGrid = this.tileGrid;\n      const sourceExtent = sourceTileGrid.getExtent();\n      if (sourceExtent) {\n        getIntersection(extent, sourceExtent, extent);\n      }\n      const sourceZ = sourceTileGrid.getZForResolution(\n        resolution,\n        this.zDirection\n      );\n\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        const tileUrl = this.tileUrlFunction(\n          sourceTileCoord,\n          pixelRatio,\n          projection\n        );\n        const sourceTile = this.sourceTileCache.containsKey(tileUrl)\n          ? this.sourceTileCache.get(tileUrl)\n          : new this.tileClass(\n              sourceTileCoord,\n              tileUrl ? TileState.IDLE : TileState.EMPTY,\n              tileUrl,\n              this.format_,\n              this.tileLoadFunction\n            );\n        tile.sourceTiles.push(sourceTile);\n        const sourceTileState = sourceTile.getState();\n        if (sourceTileState < TileState.LOADED) {\n          const listenChange = (event) => {\n            this.handleTileChange(event);\n            const state = sourceTile.getState();\n            if (state === TileState.LOADED || state === TileState.ERROR) {\n              const sourceTileKey = sourceTile.getKey();\n              if (sourceTileKey in tile.errorTileKeys) {\n                if (sourceTile.getState() === TileState.LOADED) {\n                  delete tile.errorTileKeys[sourceTileKey];\n                }\n              } else {\n                tile.loadingSourceTiles--;\n              }\n              if (state === TileState.ERROR) {\n                tile.errorTileKeys[sourceTileKey] = true;\n              } else {\n                sourceTile.removeEventListener(EventType.CHANGE, listenChange);\n              }\n              if (tile.loadingSourceTiles === 0) {\n                tile.setState(\n                  isEmpty(tile.errorTileKeys)\n                    ? TileState.LOADED\n                    : TileState.ERROR\n                );\n              }\n            }\n          };\n          sourceTile.addEventListener(EventType.CHANGE, listenChange);\n          tile.loadingSourceTiles++;\n        }\n        if (sourceTileState === TileState.IDLE) {\n          sourceTile.extent =\n            sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n          sourceTile.projection = projection;\n          sourceTile.resolution = sourceTileGrid.getResolution(\n            sourceTileCoord[0]\n          );\n          this.sourceTileCache.set(tileUrl, sourceTile);\n          sourceTile.load();\n        }\n      });\n      if (!tile.loadingSourceTiles) {\n        tile.setState(\n          tile.sourceTiles.some(\n            (sourceTile) => sourceTile.getState() === TileState.ERROR\n          )\n            ? TileState.ERROR\n            : TileState.LOADED\n        );\n      }\n    }\n\n    return tile.sourceTiles;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!VectorRenderTile} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const coordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    let tile;\n    if (this.tileCache.containsKey(coordKey)) {\n      tile = this.tileCache.get(coordKey);\n      if (tile.key === key) {\n        return tile;\n      }\n    }\n    const tileCoord = [z, x, y];\n    let urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const sourceExtent = this.getTileGrid().getExtent();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (urlTileCoord && sourceExtent) {\n      const tileExtent = tileGrid.getTileCoordExtent(urlTileCoord);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      bufferExtent(tileExtent, -tileGrid.getResolution(z), tileExtent);\n      if (!intersects(sourceExtent, tileExtent)) {\n        urlTileCoord = null;\n      }\n    }\n    let empty = true;\n    if (urlTileCoord !== null) {\n      const sourceTileGrid = this.tileGrid;\n      const resolution = tileGrid.getResolution(z);\n      const sourceZ = sourceTileGrid.getZForResolution(resolution, 1);\n      // make extent 1 pixel smaller so we don't load tiles for < 0.5 pixel render space\n      const extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      bufferExtent(extent, -resolution, extent);\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, (sourceTileCoord) => {\n        empty =\n          empty &&\n          !this.tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n      });\n    }\n    const newTile = new VectorRenderTile(\n      tileCoord,\n      empty ? TileState.EMPTY : TileState.IDLE,\n      urlTileCoord,\n      this.getSourceTiles.bind(this, pixelRatio, projection)\n    );\n\n    newTile.key = key;\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      this.tileCache.replace(coordKey, newTile);\n    } else {\n      this.tileCache.set(coordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const code = projection.getCode();\n    let tileGrid = this.tileGrids_[code];\n    if (!tileGrid) {\n      // A tile grid that matches the tile size of the source tile grid is more\n      // likely to have 1:1 relationships between source tiles and rendered tiles.\n      const sourceTileGrid = this.tileGrid;\n      const resolutions = sourceTileGrid.getResolutions().slice();\n      const origins = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getOrigin(z);\n      });\n      const tileSizes = resolutions.map(function (resolution, z) {\n        return sourceTileGrid.getTileSize(z);\n      });\n      const length = DEFAULT_MAX_ZOOM + 1;\n      for (let z = resolutions.length; z < length; ++z) {\n        resolutions.push(resolutions[z - 1] / 2);\n        origins.push(origins[z - 1]);\n        tileSizes.push(tileSizes[z - 1]);\n      }\n      tileGrid = new TileGrid({\n        extent: sourceTileGrid.getExtent(),\n        origins: origins,\n        resolutions: resolutions,\n        tileSizes: tileSizes,\n      });\n      this.tileGrids_[code] = tileGrid;\n    }\n    return tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    return [\n      Math.round(tileSize[0] * pixelRatio),\n      Math.round(tileSize[1] * pixelRatio),\n    ];\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    super.updateCacheSize(tileCount * 2, projection);\n    this.sourceTileCache.highWaterMark =\n      this.getTileCacheForProjection(projection).highWaterMark;\n  }\n}\n\nexport default VectorTile;\n\n/**\n * Sets the loader for a tile.\n * @param {import(\"../VectorTile.js\").default} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n  tile.setLoader(\n    /**\n     * @param {import(\"../extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"../proj/Projection.js\").default} projection Projection.\n     */\n    function (extent, resolution, projection) {\n      loadFeaturesXhr(\n        url,\n        tile.getFormat(),\n        extent,\n        resolution,\n        projection,\n        tile.onLoad.bind(tile),\n        tile.onError.bind(tile)\n      );\n    }\n  );\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [geometries] Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries ? geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'json';\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, options) {\n    return JSON.stringify(this.writeFeatureObject(feature, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, options) {\n    return JSON.stringify(this.writeFeaturesObject(features, options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  writeGeometry(geometry, options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  }\n  if (source !== null) {\n    return source;\n  }\n  return null;\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assert} from '../asserts.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326'\n    );\n\n    if (options.featureProjection) {\n      /**\n       * @type {import(\"../proj/Projection.js\").default}\n       */\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometry(geoJSONFeature['geometry'], options);\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (\n      this.extractGeometryName_ &&\n      'geometry_name' in geoJSONFeature !== undefined\n    ) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(geometry);\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(this.readFeatureFromObject(geoJSONFeatures[i], options));\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, options)];\n    }\n    return features;\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return readGeometry(object, options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        assert(false, 36); // Unknown SRS type\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   */\n  writeFeatureObject(feature, options) {\n    options = this.adaptOptions(options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, options) {\n    options = this.adaptOptions(options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, options) {\n    return writeGeometry(geometry, this.adaptOptions(options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n\n  /**\n   * @type {import(\"../geom/Geometry.js\").default}\n   */\n  let geometry;\n  switch (object['type']) {\n    case 'Point': {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case 'LineString': {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object)\n      );\n      break;\n    }\n    case 'Polygon': {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case 'MultiPoint': {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object)\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object)\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object)\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object)\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object['type']);\n    }\n  }\n  return transformGeometryWithOptions(geometry, false, options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometry(geometry, options);\n    }\n  );\n  return new GeometryCollection(geometries);\n}\n\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object['coordinates']);\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, options) {\n  geometry = transformGeometryWithOptions(geometry, true, options);\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case 'Point': {\n      geoJSON = writePointGeometry(/** @type {Point} */ (geometry), options);\n      break;\n    }\n    case 'LineString': {\n      geoJSON = writeLineStringGeometry(\n        /** @type {LineString} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'Polygon': {\n      geoJSON = writePolygonGeometry(\n        /** @type {Polygon} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPoint': {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {MultiPoint} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {MultiLineString} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {MultiPolygon} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {GeometryCollection} */ (geometry),\n        options\n      );\n      break;\n    }\n    case 'Circle': {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, options) {\n  options = Object.assign({}, options);\n  delete options.featureProjection;\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","import Circle from 'ol/style/Circle.js';\nimport Fill from 'ol/style/Fill.js';\nimport Icon from 'ol/style/Icon.js';\nimport RenderFeature from 'ol/render/Feature.js';\nimport Stroke from 'ol/style/Stroke.js';\nimport Style from 'ol/style/Style.js';\nimport Text from 'ol/style/Text.js';\nimport { registerFont, checkedFonts } from 'ol/render/canvas.js';\nimport { expandUrl } from 'ol/tileurlfunction.js';\nimport GeoJSON from 'ol/format/GeoJSON.js';\nimport ImageLayer from 'ol/layer/Image.js';\nimport Layer from 'ol/layer/Layer.js';\nimport LayerGroup from 'ol/layer/Group.js';\nimport MVT from 'ol/format/MVT.js';\nimport Map from 'ol/Map.js';\nimport Raster from 'ol/source/Raster.js';\nimport Source from 'ol/source/Source.js';\nimport TileGrid from 'ol/tilegrid/TileGrid.js';\nimport TileJSON from 'ol/source/TileJSON.js';\nimport TileLayer from 'ol/layer/Tile.js';\nimport VectorLayer from 'ol/layer/Vector.js';\nimport VectorSource from 'ol/source/Vector.js';\nimport VectorTileLayer from 'ol/layer/VectorTile.js';\nimport VectorTileSource, { defaultLoadFunction } from 'ol/source/VectorTile.js';\nimport View from 'ol/View.js';\nimport { get as get$1, METERS_PER_UNIT, fromLonLat, equivalent, getUserProjection } from 'ol/proj.js';\nimport { bbox } from 'ol/loadingstrategy.js';\nimport { createXYZ } from 'ol/tilegrid.js';\nimport { getTopLeft } from 'ol/extent.js';\n\nvar csscolorparser = {};\n\nvar parseCSSColor_1;\n// (c) Dean McNamee <dean@gmail.com>, 2012.\n//\n// https://github.com/deanm/css-color-parser-js\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n// IN THE SOFTWARE.\n// http://www.w3.org/TR/css3-color/\nvar kCSSColorTable = {\n    'transparent': [\n        0,\n        0,\n        0,\n        0\n    ],\n    'aliceblue': [\n        240,\n        248,\n        255,\n        1\n    ],\n    'antiquewhite': [\n        250,\n        235,\n        215,\n        1\n    ],\n    'aqua': [\n        0,\n        255,\n        255,\n        1\n    ],\n    'aquamarine': [\n        127,\n        255,\n        212,\n        1\n    ],\n    'azure': [\n        240,\n        255,\n        255,\n        1\n    ],\n    'beige': [\n        245,\n        245,\n        220,\n        1\n    ],\n    'bisque': [\n        255,\n        228,\n        196,\n        1\n    ],\n    'black': [\n        0,\n        0,\n        0,\n        1\n    ],\n    'blanchedalmond': [\n        255,\n        235,\n        205,\n        1\n    ],\n    'blue': [\n        0,\n        0,\n        255,\n        1\n    ],\n    'blueviolet': [\n        138,\n        43,\n        226,\n        1\n    ],\n    'brown': [\n        165,\n        42,\n        42,\n        1\n    ],\n    'burlywood': [\n        222,\n        184,\n        135,\n        1\n    ],\n    'cadetblue': [\n        95,\n        158,\n        160,\n        1\n    ],\n    'chartreuse': [\n        127,\n        255,\n        0,\n        1\n    ],\n    'chocolate': [\n        210,\n        105,\n        30,\n        1\n    ],\n    'coral': [\n        255,\n        127,\n        80,\n        1\n    ],\n    'cornflowerblue': [\n        100,\n        149,\n        237,\n        1\n    ],\n    'cornsilk': [\n        255,\n        248,\n        220,\n        1\n    ],\n    'crimson': [\n        220,\n        20,\n        60,\n        1\n    ],\n    'cyan': [\n        0,\n        255,\n        255,\n        1\n    ],\n    'darkblue': [\n        0,\n        0,\n        139,\n        1\n    ],\n    'darkcyan': [\n        0,\n        139,\n        139,\n        1\n    ],\n    'darkgoldenrod': [\n        184,\n        134,\n        11,\n        1\n    ],\n    'darkgray': [\n        169,\n        169,\n        169,\n        1\n    ],\n    'darkgreen': [\n        0,\n        100,\n        0,\n        1\n    ],\n    'darkgrey': [\n        169,\n        169,\n        169,\n        1\n    ],\n    'darkkhaki': [\n        189,\n        183,\n        107,\n        1\n    ],\n    'darkmagenta': [\n        139,\n        0,\n        139,\n        1\n    ],\n    'darkolivegreen': [\n        85,\n        107,\n        47,\n        1\n    ],\n    'darkorange': [\n        255,\n        140,\n        0,\n        1\n    ],\n    'darkorchid': [\n        153,\n        50,\n        204,\n        1\n    ],\n    'darkred': [\n        139,\n        0,\n        0,\n        1\n    ],\n    'darksalmon': [\n        233,\n        150,\n        122,\n        1\n    ],\n    'darkseagreen': [\n        143,\n        188,\n        143,\n        1\n    ],\n    'darkslateblue': [\n        72,\n        61,\n        139,\n        1\n    ],\n    'darkslategray': [\n        47,\n        79,\n        79,\n        1\n    ],\n    'darkslategrey': [\n        47,\n        79,\n        79,\n        1\n    ],\n    'darkturquoise': [\n        0,\n        206,\n        209,\n        1\n    ],\n    'darkviolet': [\n        148,\n        0,\n        211,\n        1\n    ],\n    'deeppink': [\n        255,\n        20,\n        147,\n        1\n    ],\n    'deepskyblue': [\n        0,\n        191,\n        255,\n        1\n    ],\n    'dimgray': [\n        105,\n        105,\n        105,\n        1\n    ],\n    'dimgrey': [\n        105,\n        105,\n        105,\n        1\n    ],\n    'dodgerblue': [\n        30,\n        144,\n        255,\n        1\n    ],\n    'firebrick': [\n        178,\n        34,\n        34,\n        1\n    ],\n    'floralwhite': [\n        255,\n        250,\n        240,\n        1\n    ],\n    'forestgreen': [\n        34,\n        139,\n        34,\n        1\n    ],\n    'fuchsia': [\n        255,\n        0,\n        255,\n        1\n    ],\n    'gainsboro': [\n        220,\n        220,\n        220,\n        1\n    ],\n    'ghostwhite': [\n        248,\n        248,\n        255,\n        1\n    ],\n    'gold': [\n        255,\n        215,\n        0,\n        1\n    ],\n    'goldenrod': [\n        218,\n        165,\n        32,\n        1\n    ],\n    'gray': [\n        128,\n        128,\n        128,\n        1\n    ],\n    'green': [\n        0,\n        128,\n        0,\n        1\n    ],\n    'greenyellow': [\n        173,\n        255,\n        47,\n        1\n    ],\n    'grey': [\n        128,\n        128,\n        128,\n        1\n    ],\n    'honeydew': [\n        240,\n        255,\n        240,\n        1\n    ],\n    'hotpink': [\n        255,\n        105,\n        180,\n        1\n    ],\n    'indianred': [\n        205,\n        92,\n        92,\n        1\n    ],\n    'indigo': [\n        75,\n        0,\n        130,\n        1\n    ],\n    'ivory': [\n        255,\n        255,\n        240,\n        1\n    ],\n    'khaki': [\n        240,\n        230,\n        140,\n        1\n    ],\n    'lavender': [\n        230,\n        230,\n        250,\n        1\n    ],\n    'lavenderblush': [\n        255,\n        240,\n        245,\n        1\n    ],\n    'lawngreen': [\n        124,\n        252,\n        0,\n        1\n    ],\n    'lemonchiffon': [\n        255,\n        250,\n        205,\n        1\n    ],\n    'lightblue': [\n        173,\n        216,\n        230,\n        1\n    ],\n    'lightcoral': [\n        240,\n        128,\n        128,\n        1\n    ],\n    'lightcyan': [\n        224,\n        255,\n        255,\n        1\n    ],\n    'lightgoldenrodyellow': [\n        250,\n        250,\n        210,\n        1\n    ],\n    'lightgray': [\n        211,\n        211,\n        211,\n        1\n    ],\n    'lightgreen': [\n        144,\n        238,\n        144,\n        1\n    ],\n    'lightgrey': [\n        211,\n        211,\n        211,\n        1\n    ],\n    'lightpink': [\n        255,\n        182,\n        193,\n        1\n    ],\n    'lightsalmon': [\n        255,\n        160,\n        122,\n        1\n    ],\n    'lightseagreen': [\n        32,\n        178,\n        170,\n        1\n    ],\n    'lightskyblue': [\n        135,\n        206,\n        250,\n        1\n    ],\n    'lightslategray': [\n        119,\n        136,\n        153,\n        1\n    ],\n    'lightslategrey': [\n        119,\n        136,\n        153,\n        1\n    ],\n    'lightsteelblue': [\n        176,\n        196,\n        222,\n        1\n    ],\n    'lightyellow': [\n        255,\n        255,\n        224,\n        1\n    ],\n    'lime': [\n        0,\n        255,\n        0,\n        1\n    ],\n    'limegreen': [\n        50,\n        205,\n        50,\n        1\n    ],\n    'linen': [\n        250,\n        240,\n        230,\n        1\n    ],\n    'magenta': [\n        255,\n        0,\n        255,\n        1\n    ],\n    'maroon': [\n        128,\n        0,\n        0,\n        1\n    ],\n    'mediumaquamarine': [\n        102,\n        205,\n        170,\n        1\n    ],\n    'mediumblue': [\n        0,\n        0,\n        205,\n        1\n    ],\n    'mediumorchid': [\n        186,\n        85,\n        211,\n        1\n    ],\n    'mediumpurple': [\n        147,\n        112,\n        219,\n        1\n    ],\n    'mediumseagreen': [\n        60,\n        179,\n        113,\n        1\n    ],\n    'mediumslateblue': [\n        123,\n        104,\n        238,\n        1\n    ],\n    'mediumspringgreen': [\n        0,\n        250,\n        154,\n        1\n    ],\n    'mediumturquoise': [\n        72,\n        209,\n        204,\n        1\n    ],\n    'mediumvioletred': [\n        199,\n        21,\n        133,\n        1\n    ],\n    'midnightblue': [\n        25,\n        25,\n        112,\n        1\n    ],\n    'mintcream': [\n        245,\n        255,\n        250,\n        1\n    ],\n    'mistyrose': [\n        255,\n        228,\n        225,\n        1\n    ],\n    'moccasin': [\n        255,\n        228,\n        181,\n        1\n    ],\n    'navajowhite': [\n        255,\n        222,\n        173,\n        1\n    ],\n    'navy': [\n        0,\n        0,\n        128,\n        1\n    ],\n    'oldlace': [\n        253,\n        245,\n        230,\n        1\n    ],\n    'olive': [\n        128,\n        128,\n        0,\n        1\n    ],\n    'olivedrab': [\n        107,\n        142,\n        35,\n        1\n    ],\n    'orange': [\n        255,\n        165,\n        0,\n        1\n    ],\n    'orangered': [\n        255,\n        69,\n        0,\n        1\n    ],\n    'orchid': [\n        218,\n        112,\n        214,\n        1\n    ],\n    'palegoldenrod': [\n        238,\n        232,\n        170,\n        1\n    ],\n    'palegreen': [\n        152,\n        251,\n        152,\n        1\n    ],\n    'paleturquoise': [\n        175,\n        238,\n        238,\n        1\n    ],\n    'palevioletred': [\n        219,\n        112,\n        147,\n        1\n    ],\n    'papayawhip': [\n        255,\n        239,\n        213,\n        1\n    ],\n    'peachpuff': [\n        255,\n        218,\n        185,\n        1\n    ],\n    'peru': [\n        205,\n        133,\n        63,\n        1\n    ],\n    'pink': [\n        255,\n        192,\n        203,\n        1\n    ],\n    'plum': [\n        221,\n        160,\n        221,\n        1\n    ],\n    'powderblue': [\n        176,\n        224,\n        230,\n        1\n    ],\n    'purple': [\n        128,\n        0,\n        128,\n        1\n    ],\n    'rebeccapurple': [\n        102,\n        51,\n        153,\n        1\n    ],\n    'red': [\n        255,\n        0,\n        0,\n        1\n    ],\n    'rosybrown': [\n        188,\n        143,\n        143,\n        1\n    ],\n    'royalblue': [\n        65,\n        105,\n        225,\n        1\n    ],\n    'saddlebrown': [\n        139,\n        69,\n        19,\n        1\n    ],\n    'salmon': [\n        250,\n        128,\n        114,\n        1\n    ],\n    'sandybrown': [\n        244,\n        164,\n        96,\n        1\n    ],\n    'seagreen': [\n        46,\n        139,\n        87,\n        1\n    ],\n    'seashell': [\n        255,\n        245,\n        238,\n        1\n    ],\n    'sienna': [\n        160,\n        82,\n        45,\n        1\n    ],\n    'silver': [\n        192,\n        192,\n        192,\n        1\n    ],\n    'skyblue': [\n        135,\n        206,\n        235,\n        1\n    ],\n    'slateblue': [\n        106,\n        90,\n        205,\n        1\n    ],\n    'slategray': [\n        112,\n        128,\n        144,\n        1\n    ],\n    'slategrey': [\n        112,\n        128,\n        144,\n        1\n    ],\n    'snow': [\n        255,\n        250,\n        250,\n        1\n    ],\n    'springgreen': [\n        0,\n        255,\n        127,\n        1\n    ],\n    'steelblue': [\n        70,\n        130,\n        180,\n        1\n    ],\n    'tan': [\n        210,\n        180,\n        140,\n        1\n    ],\n    'teal': [\n        0,\n        128,\n        128,\n        1\n    ],\n    'thistle': [\n        216,\n        191,\n        216,\n        1\n    ],\n    'tomato': [\n        255,\n        99,\n        71,\n        1\n    ],\n    'turquoise': [\n        64,\n        224,\n        208,\n        1\n    ],\n    'violet': [\n        238,\n        130,\n        238,\n        1\n    ],\n    'wheat': [\n        245,\n        222,\n        179,\n        1\n    ],\n    'white': [\n        255,\n        255,\n        255,\n        1\n    ],\n    'whitesmoke': [\n        245,\n        245,\n        245,\n        1\n    ],\n    'yellow': [\n        255,\n        255,\n        0,\n        1\n    ],\n    'yellowgreen': [\n        154,\n        205,\n        50,\n        1\n    ]\n};\nfunction clamp_css_byte(i) {\n    // Clamp to integer 0 .. 255.\n    i = Math.round(i);\n    // Seems to be what Chrome does (vs truncation).\n    return i < 0 ? 0 : i > 255 ? 255 : i;\n}\nfunction clamp_css_float(f) {\n    // Clamp to float 0.0 .. 1.0.\n    return f < 0 ? 0 : f > 1 ? 1 : f;\n}\nfunction parse_css_int(str) {\n    // int or percentage.\n    if (str[str.length - 1] === '%')\n        { return clamp_css_byte(parseFloat(str) / 100 * 255); }\n    return clamp_css_byte(parseInt(str));\n}\nfunction parse_css_float(str) {\n    // float or percentage.\n    if (str[str.length - 1] === '%')\n        { return clamp_css_float(parseFloat(str) / 100); }\n    return clamp_css_float(parseFloat(str));\n}\nfunction css_hue_to_rgb(m1, m2, h) {\n    if (h < 0)\n        { h += 1; }\n    else if (h > 1)\n        { h -= 1; }\n    if (h * 6 < 1)\n        { return m1 + (m2 - m1) * h * 6; }\n    if (h * 2 < 1)\n        { return m2; }\n    if (h * 3 < 2)\n        { return m1 + (m2 - m1) * (2 / 3 - h) * 6; }\n    return m1;\n}\nfunction parseCSSColor(css_str) {\n    // Remove all whitespace, not compliant, but should just be more accepting.\n    var str = css_str.replace(/ /g, '').toLowerCase();\n    // Color keywords (and transparent) lookup.\n    if (str in kCSSColorTable)\n        { return kCSSColorTable[str].slice(); }\n    // dup.\n    // #abc and #abc123 syntax.\n    if (str[0] === '#') {\n        if (str.length === 4) {\n            var iv = parseInt(str.substr(1), 16);\n            // TODO(deanm): Stricter parsing.\n            if (!(iv >= 0 && iv <= 4095))\n                { return null; }\n            // Covers NaN.\n            return [\n                (iv & 3840) >> 4 | (iv & 3840) >> 8,\n                iv & 240 | (iv & 240) >> 4,\n                iv & 15 | (iv & 15) << 4,\n                1\n            ];\n        } else if (str.length === 7) {\n            var iv = parseInt(str.substr(1), 16);\n            // TODO(deanm): Stricter parsing.\n            if (!(iv >= 0 && iv <= 16777215))\n                { return null; }\n            // Covers NaN.\n            return [\n                (iv & 16711680) >> 16,\n                (iv & 65280) >> 8,\n                iv & 255,\n                1\n            ];\n        }\n        return null;\n    }\n    var op = str.indexOf('('), ep = str.indexOf(')');\n    if (op !== -1 && ep + 1 === str.length) {\n        var fname = str.substr(0, op);\n        var params = str.substr(op + 1, ep - (op + 1)).split(',');\n        var alpha = 1;\n        // To allow case fallthrough.\n        switch (fname) {\n        case 'rgba':\n            if (params.length !== 4)\n                { return null; }\n            alpha = parse_css_float(params.pop());\n        // Fall through.\n        case 'rgb':\n            if (params.length !== 3)\n                { return null; }\n            return [\n                parse_css_int(params[0]),\n                parse_css_int(params[1]),\n                parse_css_int(params[2]),\n                alpha\n            ];\n        case 'hsla':\n            if (params.length !== 4)\n                { return null; }\n            alpha = parse_css_float(params.pop());\n        // Fall through.\n        case 'hsl':\n            if (params.length !== 3)\n                { return null; }\n            var h = (parseFloat(params[0]) % 360 + 360) % 360 / 360;\n            // 0 .. 1\n            // NOTE(deanm): According to the CSS spec s/l should only be\n            // percentages, but we don't bother and let float or percentage.\n            var s = parse_css_float(params[1]);\n            var l = parse_css_float(params[2]);\n            var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n            var m1 = l * 2 - m2;\n            return [\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h + 1 / 3) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h - 1 / 3) * 255),\n                alpha\n            ];\n        default:\n            return null;\n        }\n    }\n    return null;\n}\ntry {\n    parseCSSColor_1 = csscolorparser.parseCSSColor = parseCSSColor;\n} catch (e) {\n}\n\n//      \n/**\n * An RGBA color value. Create instances from color strings using the static\n * method `Color.parse`. The constructor accepts RGB channel values in the range\n * `[0, 1]`, premultiplied by A.\n *\n * @param {number} r The red channel.\n * @param {number} g The green channel.\n * @param {number} b The blue channel.\n * @param {number} a The alpha channel.\n * @private\n */\nvar Color = function Color(r, g, b, a) {\n    if ( a === void 0 ) a = 1;\n\n    this.r = r;\n    this.g = g;\n    this.b = b;\n    this.a = a;\n};\n/**\n * Parses valid CSS color strings and returns a `Color` instance.\n * @returns A `Color` instance, or `undefined` if the input is not a valid color string.\n */\nColor.parse = function parse (input) {\n    if (!input) {\n        return undefined;\n    }\n    if (input instanceof Color) {\n        return input;\n    }\n    if (typeof input !== 'string') {\n        return undefined;\n    }\n    var rgba = parseCSSColor_1(input);\n    if (!rgba) {\n        return undefined;\n    }\n    return new Color(rgba[0] / 255 * rgba[3], rgba[1] / 255 * rgba[3], rgba[2] / 255 * rgba[3], rgba[3]);\n};\n/**\n * Returns an RGBA string representing the color value.\n *\n * @returns An RGBA string.\n * @example\n * var purple = new Color.parse('purple');\n * purple.toString; // = \"rgba(128,0,128,1)\"\n * var translucentGreen = new Color.parse('rgba(26, 207, 26, .73)');\n * translucentGreen.toString(); // = \"rgba(26,207,26,0.73)\"\n */\nColor.prototype.toString = function toString () {\n    var ref = this.toArray();\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var a = ref[3];\n    return (\"rgba(\" + (Math.round(r)) + \",\" + (Math.round(g)) + \",\" + (Math.round(b)) + \",\" + a + \")\");\n};\n/**\n * Returns an RGBA array of values representing the color, unpremultiplied by A.\n *\n * @returns An array of RGBA color values in the range [0, 255].\n */\nColor.prototype.toArray = function toArray () {\n    var ref = this;\n        var r = ref.r;\n        var g = ref.g;\n        var b = ref.b;\n        var a = ref.a;\n    return a === 0 ? [\n        0,\n        0,\n        0,\n        0\n    ] : [\n        r * 255 / a,\n        g * 255 / a,\n        b * 255 / a,\n        a\n    ];\n};\n/**\n * Returns a RGBA array of float values representing the color, unpremultiplied by A.\n *\n * @returns An array of RGBA color values in the range [0, 1].\n */\nColor.prototype.toArray01 = function toArray01 () {\n    var ref = this;\n        var r = ref.r;\n        var g = ref.g;\n        var b = ref.b;\n        var a = ref.a;\n    return a === 0 ? [\n        0,\n        0,\n        0,\n        0\n    ] : [\n        r / a,\n        g / a,\n        b / a,\n        a\n    ];\n};\n/**\n * Returns an RGBA array of values representing the color, premultiplied by A.\n *\n * @returns An array of RGBA color values in the range [0, 1].\n */\nColor.prototype.toArray01PremultipliedAlpha = function toArray01PremultipliedAlpha () {\n    var ref = this;\n        var r = ref.r;\n        var g = ref.g;\n        var b = ref.b;\n        var a = ref.a;\n    return [\n        r,\n        g,\n        b,\n        a\n    ];\n};\nColor.black = new Color(0, 0, 0, 1);\nColor.white = new Color(1, 1, 1, 1);\nColor.transparent = new Color(0, 0, 0, 0);\nColor.red = new Color(1, 0, 0, 1);\nColor.blue = new Color(0, 0, 1, 1);\nvar Color$1 = Color;\n\nfunction convertLiteral(value) {\n    return typeof value === 'object' ? [\n        'literal',\n        value\n    ] : value;\n}\nfunction convertFunction(parameters, propertySpec) {\n    var stops = parameters.stops;\n    if (!stops) {\n        // identity function\n        return convertIdentityFunction(parameters, propertySpec);\n    }\n    var zoomAndFeatureDependent = stops && typeof stops[0][0] === 'object';\n    var featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    var zoomDependent = zoomAndFeatureDependent || !featureDependent;\n    stops = stops.map(function (stop) {\n        if (!featureDependent && propertySpec.tokens && typeof stop[1] === 'string') {\n            return [\n                stop[0],\n                convertTokenString(stop[1])\n            ];\n        }\n        return [\n            stop[0],\n            convertLiteral(stop[1])\n        ];\n    });\n    if (zoomAndFeatureDependent) {\n        return convertZoomAndPropertyFunction(parameters, propertySpec, stops);\n    } else if (zoomDependent) {\n        return convertZoomFunction(parameters, propertySpec, stops);\n    } else {\n        return convertPropertyFunction(parameters, propertySpec, stops);\n    }\n}\nfunction convertIdentityFunction(parameters, propertySpec) {\n    var get = [\n        'get',\n        parameters.property\n    ];\n    if (parameters.default === undefined) {\n        // By default, expressions for string-valued properties get coerced. To preserve\n        // legacy function semantics, insert an explicit assertion instead.\n        return propertySpec.type === 'string' ? [\n            'string',\n            get\n        ] : get;\n    } else if (propertySpec.type === 'enum') {\n        return [\n            'match',\n            get,\n            Object.keys(propertySpec.values),\n            get,\n            parameters.default\n        ];\n    } else {\n        var expression = [\n            propertySpec.type === 'color' ? 'to-color' : propertySpec.type,\n            get,\n            convertLiteral(parameters.default)\n        ];\n        if (propertySpec.type === 'array') {\n            expression.splice(1, 0, propertySpec.value, propertySpec.length || null);\n        }\n        return expression;\n    }\n}\nfunction getInterpolateOperator(parameters) {\n    switch (parameters.colorSpace) {\n    case 'hcl':\n        return 'interpolate-hcl';\n    case 'lab':\n        return 'interpolate-lab';\n    default:\n        return 'interpolate';\n    }\n}\nfunction convertZoomAndPropertyFunction(parameters, propertySpec, stops) {\n    var featureFunctionParameters = {};\n    var featureFunctionStops = {};\n    var zoomStops = [];\n    for (var s = 0; s < stops.length; s++) {\n        var stop = stops[s];\n        var zoom = stop[0].zoom;\n        if (featureFunctionParameters[zoom] === undefined) {\n            featureFunctionParameters[zoom] = {\n                zoom: zoom,\n                type: parameters.type,\n                property: parameters.property,\n                default: parameters.default\n            };\n            featureFunctionStops[zoom] = [];\n            zoomStops.push(zoom);\n        }\n        featureFunctionStops[zoom].push([\n            stop[0].value,\n            stop[1]\n        ]);\n    }\n    // the interpolation type for the zoom dimension of a zoom-and-property\n    // function is determined directly from the style property specification\n    // for which it's being used: linear for interpolatable properties, step\n    // otherwise.\n    var functionType = getFunctionType({}, propertySpec);\n    if (functionType === 'exponential') {\n        var expression = [\n            getInterpolateOperator(parameters),\n            ['linear'],\n            ['zoom']\n        ];\n        for (var i = 0, list = zoomStops; i < list.length; i += 1) {\n            var z = list[i];\n\n            var output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, false);\n        }\n        return expression;\n    } else {\n        var expression$1 = [\n            'step',\n            ['zoom']\n        ];\n        for (var i$1 = 0, list$1 = zoomStops; i$1 < list$1.length; i$1 += 1) {\n            var z$1 = list$1[i$1];\n\n            var output$1 = convertPropertyFunction(featureFunctionParameters[z$1], propertySpec, featureFunctionStops[z$1]);\n            appendStopPair(expression$1, z$1, output$1, true);\n        }\n        fixupDegenerateStepCurve(expression$1);\n        return expression$1;\n    }\n}\nfunction coalesce(a, b) {\n    if (a !== undefined)\n        { return a; }\n    if (b !== undefined)\n        { return b; }\n}\nfunction getFallback(parameters, propertySpec) {\n    var defaultValue = convertLiteral(coalesce(parameters.default, propertySpec.default));\n    /*\n     * Some fields with type: resolvedImage have an undefined default.\n     * Because undefined is an invalid value for resolvedImage, set fallback to\n     * an empty string instead of undefined to ensure output\n     * passes validation.\n     */\n    if (defaultValue === undefined && propertySpec.type === 'resolvedImage') {\n        return '';\n    }\n    return defaultValue;\n}\nfunction convertPropertyFunction(parameters, propertySpec, stops) {\n    var type = getFunctionType(parameters, propertySpec);\n    var get = [\n        'get',\n        parameters.property\n    ];\n    if (type === 'categorical' && typeof stops[0][0] === 'boolean') {\n        var expression = ['case'];\n        for (var i = 0, list = stops; i < list.length; i += 1) {\n            var stop = list[i];\n\n            expression.push([\n                '==',\n                get,\n                stop[0]\n            ], stop[1]);\n        }\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    } else if (type === 'categorical') {\n        var expression$1 = [\n            'match',\n            get\n        ];\n        for (var i$1 = 0, list$1 = stops; i$1 < list$1.length; i$1 += 1) {\n            var stop$1 = list$1[i$1];\n\n            appendStopPair(expression$1, stop$1[0], stop$1[1], false);\n        }\n        expression$1.push(getFallback(parameters, propertySpec));\n        return expression$1;\n    } else if (type === 'interval') {\n        var expression$2 = [\n            'step',\n            [\n                'number',\n                get\n            ]\n        ];\n        for (var i$2 = 0, list$2 = stops; i$2 < list$2.length; i$2 += 1) {\n            var stop$2 = list$2[i$2];\n\n            appendStopPair(expression$2, stop$2[0], stop$2[1], true);\n        }\n        fixupDegenerateStepCurve(expression$2);\n        return parameters.default === undefined ? expression$2 : [\n            'case',\n            [\n                '==',\n                [\n                    'typeof',\n                    get\n                ],\n                'number'\n            ],\n            expression$2,\n            convertLiteral(parameters.default)\n        ];\n    } else if (type === 'exponential') {\n        var base = parameters.base !== undefined ? parameters.base : 1;\n        var expression$3 = [\n            getInterpolateOperator(parameters),\n            base === 1 ? ['linear'] : [\n                'exponential',\n                base\n            ],\n            [\n                'number',\n                get\n            ]\n        ];\n        for (var i$3 = 0, list$3 = stops; i$3 < list$3.length; i$3 += 1) {\n            var stop$3 = list$3[i$3];\n\n            appendStopPair(expression$3, stop$3[0], stop$3[1], false);\n        }\n        return parameters.default === undefined ? expression$3 : [\n            'case',\n            [\n                '==',\n                [\n                    'typeof',\n                    get\n                ],\n                'number'\n            ],\n            expression$3,\n            convertLiteral(parameters.default)\n        ];\n    } else {\n        throw new Error((\"Unknown property function type \" + type));\n    }\n}\nfunction convertZoomFunction(parameters, propertySpec, stops, input) {\n    if ( input === void 0 ) input = ['zoom'];\n\n    var type = getFunctionType(parameters, propertySpec);\n    var expression;\n    var isStep = false;\n    if (type === 'interval') {\n        expression = [\n            'step',\n            input\n        ];\n        isStep = true;\n    } else if (type === 'exponential') {\n        var base = parameters.base !== undefined ? parameters.base : 1;\n        expression = [\n            getInterpolateOperator(parameters),\n            base === 1 ? ['linear'] : [\n                'exponential',\n                base\n            ],\n            input\n        ];\n    } else {\n        throw new Error((\"Unknown zoom function type \\\"\" + type + \"\\\"\"));\n    }\n    for (var i = 0, list = stops; i < list.length; i += 1) {\n        var stop = list[i];\n\n        appendStopPair(expression, stop[0], stop[1], isStep);\n    }\n    fixupDegenerateStepCurve(expression);\n    return expression;\n}\nfunction fixupDegenerateStepCurve(expression) {\n    // degenerate step curve (i.e. a constant function): add a noop stop\n    if (expression[0] === 'step' && expression.length === 3) {\n        expression.push(0);\n        expression.push(expression[3]);\n    }\n}\nfunction appendStopPair(curve, input, output, isStep) {\n    // Skip duplicate stop values. They were not validated for functions, but they are for expressions.\n    // https://github.com/mapbox/mapbox-gl-js/issues/4107\n    if (curve.length > 3 && input === curve[curve.length - 2]) {\n        return;\n    }\n    // step curves don't get the first input value, as it is redundant.\n    if (!(isStep && curve.length === 2)) {\n        curve.push(input);\n    }\n    curve.push(output);\n}\nfunction getFunctionType(parameters, propertySpec) {\n    if (parameters.type) {\n        return parameters.type;\n    } else {\n        return propertySpec.expression.interpolated ? 'exponential' : 'interval';\n    }\n}\n// \"String with {name} token\" => [\"concat\", \"String with \", [\"get\", \"name\"], \" token\"]\nfunction convertTokenString(s) {\n    var result = ['concat'];\n    var re = /{([^{}]+)}/g;\n    var pos = 0;\n    for (var match = re.exec(s); match !== null; match = re.exec(s)) {\n        var literal = s.slice(pos, re.lastIndex - match[0].length);\n        pos = re.lastIndex;\n        if (literal.length > 0)\n            { result.push(literal); }\n        result.push([\n            'get',\n            match[1]\n        ]);\n    }\n    if (result.length === 1) {\n        return s;\n    }\n    if (pos < s.length) {\n        result.push(s.slice(pos));\n    } else if (result.length === 2) {\n        return [\n            'to-string',\n            result[1]\n        ];\n    }\n    return result;\n}\n\n//      \nvar ParsingError = /*@__PURE__*/(function (Error) {\n    function ParsingError(key, message) {\n        Error.call(this, message);\n        this.message = message;\n        this.key = key;\n    }\n\n    if ( Error ) ParsingError.__proto__ = Error;\n    ParsingError.prototype = Object.create( Error && Error.prototype );\n    ParsingError.prototype.constructor = ParsingError;\n\n    return ParsingError;\n}(Error));\nvar ParsingError$1 = ParsingError;\n\n//      \n/**\n * Tracks `let` bindings during expression parsing.\n * @private\n */\nvar Scope = function Scope(parent, bindings) {\n    if ( bindings === void 0 ) bindings = [];\n\n    this.parent = parent;\n    this.bindings = {};\n    for (var i = 0, list = bindings; i < list.length; i += 1) {\n        var ref = list[i];\n        var name = ref[0];\n        var expression = ref[1];\n\n        this.bindings[name] = expression;\n    }\n};\nScope.prototype.concat = function concat (bindings) {\n    return new Scope(this, bindings);\n};\nScope.prototype.get = function get (name) {\n    if (this.bindings[name]) {\n        return this.bindings[name];\n    }\n    if (this.parent) {\n        return this.parent.get(name);\n    }\n    throw new Error((name + \" not found in scope.\"));\n};\nScope.prototype.has = function has (name) {\n    if (this.bindings[name])\n        { return true; }\n    return this.parent ? this.parent.has(name) : false;\n};\nvar Scope$1 = Scope;\n\n//      \nvar NullType = { kind: 'null' };\nvar NumberType = { kind: 'number' };\nvar StringType = { kind: 'string' };\nvar BooleanType = { kind: 'boolean' };\nvar ColorType = { kind: 'color' };\nvar ObjectType = { kind: 'object' };\nvar ValueType = { kind: 'value' };\nvar ErrorType = { kind: 'error' };\nvar CollatorType = { kind: 'collator' };\nvar FormattedType = { kind: 'formatted' };\nvar ResolvedImageType = { kind: 'resolvedImage' };\nfunction array$1(itemType, N) {\n    return {\n        kind: 'array',\n        itemType: itemType,\n        N: N\n    };\n}\nfunction toString$1(type) {\n    if (type.kind === 'array') {\n        var itemType = toString$1(type.itemType);\n        return typeof type.N === 'number' ? (\"array<\" + itemType + \", \" + (type.N) + \">\") : type.itemType.kind === 'value' ? 'array' : (\"array<\" + itemType + \">\");\n    } else {\n        return type.kind;\n    }\n}\nvar valueMemberTypes = [\n    NullType,\n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    FormattedType,\n    ObjectType,\n    array$1(ValueType),\n    ResolvedImageType\n];\n/**\n * Returns null if `t` is a subtype of `expected`; otherwise returns an\n * error message.\n * @private\n */\nfunction checkSubtype(expected, t) {\n    if (t.kind === 'error') {\n        // Error is a subtype of every type\n        return null;\n    } else if (expected.kind === 'array') {\n        if (t.kind === 'array' && (t.N === 0 && t.itemType.kind === 'value' || !checkSubtype(expected.itemType, t.itemType)) && (typeof expected.N !== 'number' || expected.N === t.N)) {\n            return null;\n        }\n    } else if (expected.kind === t.kind) {\n        return null;\n    } else if (expected.kind === 'value') {\n        for (var i = 0, list = valueMemberTypes; i < list.length; i += 1) {\n            var memberType = list[i];\n\n            if (!checkSubtype(memberType, t)) {\n                return null;\n            }\n        }\n    }\n    return (\"Expected \" + (toString$1(expected)) + \" but found \" + (toString$1(t)) + \" instead.\");\n}\nfunction isValidType(provided, allowedTypes) {\n    return allowedTypes.some(function (t) { return t.kind === provided.kind; });\n}\nfunction isValidNativeType(provided, allowedTypes) {\n    return allowedTypes.some(function (t) {\n        if (t === 'null') {\n            return provided === null;\n        } else if (t === 'array') {\n            return Array.isArray(provided);\n        } else if (t === 'object') {\n            return provided && !Array.isArray(provided) && typeof provided === 'object';\n        } else {\n            return t === typeof provided;\n        }\n    });\n}\n\n//      \n// Flow type declarations for Intl cribbed from\n// https://github.com/facebook/flow/issues/1270\nvar Collator = function Collator(caseSensitive, diacriticSensitive, locale) {\n    if (caseSensitive)\n        { this.sensitivity = diacriticSensitive ? 'variant' : 'case'; }\n    else\n        { this.sensitivity = diacriticSensitive ? 'accent' : 'base'; }\n    this.locale = locale;\n    this.collator = new Intl.Collator(this.locale ? this.locale : [], {\n        sensitivity: this.sensitivity,\n        usage: 'search'\n    });\n};\nCollator.prototype.compare = function compare (lhs, rhs) {\n    return this.collator.compare(lhs, rhs);\n};\nCollator.prototype.resolvedLocale = function resolvedLocale () {\n    // We create a Collator without \"usage: search\" because we don't want\n    // the search options encoded in our result (e.g. \"en-u-co-search\")\n    return new Intl.Collator(this.locale ? this.locale : []).resolvedOptions().locale;\n};\n\nvar Collator$1 = Collator;\n\n//      \nvar FormattedSection = function FormattedSection(text, image, scale, fontStack, textColor) {\n    // combine characters so that diacritic marks are not separate code points\n    this.text = text.normalize ? text.normalize() : text;\n    this.image = image;\n    this.scale = scale;\n    this.fontStack = fontStack;\n    this.textColor = textColor;\n};\nvar Formatted = function Formatted(sections) {\n    this.sections = sections;\n};\nFormatted.fromString = function fromString (unformatted) {\n    return new Formatted([new FormattedSection(unformatted, null, null, null, null)]);\n};\nFormatted.prototype.isEmpty = function isEmpty () {\n    if (this.sections.length === 0)\n        { return true; }\n    return !this.sections.some(function (section) { return section.text.length !== 0 || section.image && section.image.name.length !== 0; });\n};\nFormatted.factory = function factory (text) {\n    if (text instanceof Formatted) {\n        return text;\n    } else {\n        return Formatted.fromString(text);\n    }\n};\nFormatted.prototype.toString = function toString () {\n    if (this.sections.length === 0)\n        { return ''; }\n    return this.sections.map(function (section) { return section.text; }).join('');\n};\nFormatted.prototype.serialize = function serialize () {\n    var serialized = ['format'];\n    for (var i = 0, list = this.sections; i < list.length; i += 1) {\n        var section = list[i];\n\n            if (section.image) {\n            serialized.push([\n                'image',\n                section.image.name\n            ]);\n            continue;\n        }\n        serialized.push(section.text);\n        var options = {};\n        if (section.fontStack) {\n            options['text-font'] = [\n                'literal',\n                section.fontStack.split(',')\n            ];\n        }\n        if (section.scale) {\n            options['font-scale'] = section.scale;\n        }\n        if (section.textColor) {\n            options['text-color'] = ['rgba'].concat(section.textColor.toArray());\n        }\n        serialized.push(options);\n    }\n    return serialized;\n};\n\nvar Formatted$1 = Formatted;\n\n//      \nvar ResolvedImage = function ResolvedImage(options) {\n    this.name = options.name;\n    this.available = options.available;\n};\nResolvedImage.prototype.toString = function toString () {\n    return this.name;\n};\nResolvedImage.fromString = function fromString (name) {\n    if (!name)\n        { return null; }\n    // treat empty values as no image\n    return new ResolvedImage({\n        name: name,\n        available: false\n    });\n};\nResolvedImage.prototype.serialize = function serialize () {\n    return [\n        'image',\n        this.name\n    ];\n};\n\nvar ResolvedImage$1 = ResolvedImage;\n\nfunction validateRGBA(r, g, b, a) {\n    if (!(typeof r === 'number' && r >= 0 && r <= 255 && typeof g === 'number' && g >= 0 && g <= 255 && typeof b === 'number' && b >= 0 && b <= 255)) {\n        var value = typeof a === 'number' ? [\n            r,\n            g,\n            b,\n            a\n        ] : [\n            r,\n            g,\n            b\n        ];\n        return (\"Invalid rgba value [\" + (value.join(', ')) + \"]: 'r', 'g', and 'b' must be between 0 and 255.\");\n    }\n    if (!(typeof a === 'undefined' || typeof a === 'number' && a >= 0 && a <= 1)) {\n        return (\"Invalid rgba value [\" + ([\n            r,\n            g,\n            b,\n            a\n        ].join(', ')) + \"]: 'a' must be between 0 and 1.\");\n    }\n    return null;\n}\nfunction isValue(mixed) {\n    if (mixed === null) {\n        return true;\n    } else if (typeof mixed === 'string') {\n        return true;\n    } else if (typeof mixed === 'boolean') {\n        return true;\n    } else if (typeof mixed === 'number') {\n        return true;\n    } else if (mixed instanceof Color$1) {\n        return true;\n    } else if (mixed instanceof Collator$1) {\n        return true;\n    } else if (mixed instanceof Formatted$1) {\n        return true;\n    } else if (mixed instanceof ResolvedImage$1) {\n        return true;\n    } else if (Array.isArray(mixed)) {\n        for (var i = 0, list = mixed; i < list.length; i += 1) {\n            var item = list[i];\n\n            if (!isValue(item)) {\n                return false;\n            }\n        }\n        return true;\n    } else if (typeof mixed === 'object') {\n        for (var key in mixed) {\n            if (!isValue(mixed[key])) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        return false;\n    }\n}\nfunction typeOf(value) {\n    if (value === null) {\n        return NullType;\n    } else if (typeof value === 'string') {\n        return StringType;\n    } else if (typeof value === 'boolean') {\n        return BooleanType;\n    } else if (typeof value === 'number') {\n        return NumberType;\n    } else if (value instanceof Color$1) {\n        return ColorType;\n    } else if (value instanceof Collator$1) {\n        return CollatorType;\n    } else if (value instanceof Formatted$1) {\n        return FormattedType;\n    } else if (value instanceof ResolvedImage$1) {\n        return ResolvedImageType;\n    } else if (Array.isArray(value)) {\n        var length = value.length;\n        var itemType;\n        for (var i = 0, list = value; i < list.length; i += 1) {\n            var item = list[i];\n\n            var t = typeOf(item);\n            if (!itemType) {\n                itemType = t;\n            } else if (itemType === t) {\n                continue;\n            } else {\n                itemType = ValueType;\n                break;\n            }\n        }\n        return array$1(itemType || ValueType, length);\n    } else {\n        return ObjectType;\n    }\n}\nfunction toString(value) {\n    var type = typeof value;\n    if (value === null) {\n        return '';\n    } else if (type === 'string' || type === 'number' || type === 'boolean') {\n        return String(value);\n    } else if (value instanceof Color$1 || value instanceof Formatted$1 || value instanceof ResolvedImage$1) {\n        return value.toString();\n    } else {\n        return JSON.stringify(value);\n    }\n}\n\nvar Literal = function Literal(type, value) {\n    this.type = type;\n    this.value = value;\n};\nLiteral.parse = function parse (args, context) {\n    if (args.length !== 2)\n        { return context.error((\"'literal' expression requires exactly one argument, but found \" + (args.length - 1) + \" instead.\")); }\n    if (!isValue(args[1]))\n        { return context.error(\"invalid value\"); }\n    var value = args[1];\n    var type = typeOf(value);\n    // special case: infer the item type if possible for zero-length arrays\n    var expected = context.expectedType;\n    if (type.kind === 'array' && type.N === 0 && expected && expected.kind === 'array' && (typeof expected.N !== 'number' || expected.N === 0)) {\n        type = expected;\n    }\n    return new Literal(type, value);\n};\nLiteral.prototype.evaluate = function evaluate () {\n    return this.value;\n};\nLiteral.prototype.eachChild = function eachChild () {\n};\nLiteral.prototype.outputDefined = function outputDefined () {\n    return true;\n};\nLiteral.prototype.serialize = function serialize () {\n    if (this.type.kind === 'array' || this.type.kind === 'object') {\n        return [\n            'literal',\n            this.value\n        ];\n    } else if (this.value instanceof Color$1) {\n        // Constant-folding can generate Literal expressions that you\n        // couldn't actually generate with a \"literal\" expression,\n        // so we have to implement an equivalent serialization here\n        return ['rgba'].concat(this.value.toArray());\n    } else if (this.value instanceof Formatted$1) {\n        // Same as Color\n        return this.value.serialize();\n    } else {\n        return this.value;\n    }\n};\nvar Literal$1 = Literal;\n\n//      \nvar RuntimeError = function RuntimeError(message) {\n    this.name = 'ExpressionEvaluationError';\n    this.message = message;\n};\nRuntimeError.prototype.toJSON = function toJSON () {\n    return this.message;\n};\nvar RuntimeError$1 = RuntimeError;\n\nvar types$2 = {\n    string: StringType,\n    number: NumberType,\n    boolean: BooleanType,\n    object: ObjectType\n};\nvar Assertion = function Assertion(type, args) {\n    this.type = type;\n    this.args = args;\n};\nAssertion.parse = function parse (args, context) {\n    if (args.length < 2)\n        { return context.error(\"Expected at least one argument.\"); }\n    var i = 1;\n    var type;\n    var name = args[0];\n    if (name === 'array') {\n        var itemType;\n        if (args.length > 2) {\n            var type$1 = args[1];\n            if (typeof type$1 !== 'string' || !(type$1 in types$2) || type$1 === 'object')\n                { return context.error('The item type argument of \"array\" must be one of string, number, boolean', 1); }\n            itemType = types$2[type$1];\n            i++;\n        } else {\n            itemType = ValueType;\n        }\n        var N;\n        if (args.length > 3) {\n            if (args[2] !== null && (typeof args[2] !== 'number' || args[2] < 0 || args[2] !== Math.floor(args[2]))) {\n                return context.error('The length argument to \"array\" must be a positive integer literal', 2);\n            }\n            N = args[2];\n            i++;\n        }\n        type = array$1(itemType, N);\n    } else {\n        type = types$2[name];\n    }\n    var parsed = [];\n    for (; i < args.length; i++) {\n        var input = context.parse(args[i], i, ValueType);\n        if (!input)\n            { return null; }\n        parsed.push(input);\n    }\n    return new Assertion(type, parsed);\n};\nAssertion.prototype.evaluate = function evaluate (ctx) {\n    for (var i = 0; i < this.args.length; i++) {\n        var value = this.args[i].evaluate(ctx);\n        var error = checkSubtype(this.type, typeOf(value));\n        if (!error) {\n            return value;\n        } else if (i === this.args.length - 1) {\n            throw new RuntimeError$1((\"Expected value to be of type \" + (toString$1(this.type)) + \", but found \" + (toString$1(typeOf(value))) + \" instead.\"));\n        }\n    }\n    return null;\n};\nAssertion.prototype.eachChild = function eachChild (fn) {\n    this.args.forEach(fn);\n};\nAssertion.prototype.outputDefined = function outputDefined () {\n    return this.args.every(function (arg) { return arg.outputDefined(); });\n};\nAssertion.prototype.serialize = function serialize () {\n    var type = this.type;\n    var serialized = [type.kind];\n    if (type.kind === 'array') {\n        var itemType = type.itemType;\n        if (itemType.kind === 'string' || itemType.kind === 'number' || itemType.kind === 'boolean') {\n            serialized.push(itemType.kind);\n            var N = type.N;\n            if (typeof N === 'number' || this.args.length > 1) {\n                serialized.push(N);\n            }\n        }\n    }\n    return serialized.concat(this.args.map(function (arg) { return arg.serialize(); }));\n};\nvar Assertion$1 = Assertion;\n\n//      \nvar FormatExpression = function FormatExpression(sections) {\n    this.type = FormattedType;\n    this.sections = sections;\n};\nFormatExpression.parse = function parse (args, context) {\n    if (args.length < 2) {\n        return context.error(\"Expected at least one argument.\");\n    }\n    var firstArg = args[1];\n    if (!Array.isArray(firstArg) && typeof firstArg === 'object') {\n        return context.error(\"First argument must be an image or text section.\");\n    }\n    var sections = [];\n    var nextTokenMayBeObject = false;\n    for (var i = 1; i <= args.length - 1; ++i) {\n        var arg = args[i];\n        if (nextTokenMayBeObject && typeof arg === 'object' && !Array.isArray(arg)) {\n            nextTokenMayBeObject = false;\n            var scale = null;\n            if (arg['font-scale']) {\n                scale = context.parse(arg['font-scale'], 1, NumberType);\n                if (!scale)\n                    { return null; }\n            }\n            var font = null;\n            if (arg['text-font']) {\n                font = context.parse(arg['text-font'], 1, array$1(StringType));\n                if (!font)\n                    { return null; }\n            }\n            var textColor = null;\n            if (arg['text-color']) {\n                textColor = context.parse(arg['text-color'], 1, ColorType);\n                if (!textColor)\n                    { return null; }\n            }\n            var lastExpression = sections[sections.length - 1];\n            lastExpression.scale = scale;\n            lastExpression.font = font;\n            lastExpression.textColor = textColor;\n        } else {\n            var content = context.parse(args[i], 1, ValueType);\n            if (!content)\n                { return null; }\n            var kind = content.type.kind;\n            if (kind !== 'string' && kind !== 'value' && kind !== 'null' && kind !== 'resolvedImage')\n                { return context.error(\"Formatted text type must be 'string', 'value', 'image' or 'null'.\"); }\n            nextTokenMayBeObject = true;\n            sections.push({\n                content: content,\n                scale: null,\n                font: null,\n                textColor: null\n            });\n        }\n    }\n    return new FormatExpression(sections);\n};\nFormatExpression.prototype.evaluate = function evaluate (ctx) {\n    var evaluateSection = function (section) {\n        var evaluatedContent = section.content.evaluate(ctx);\n        if (typeOf(evaluatedContent) === ResolvedImageType) {\n            return new FormattedSection('', evaluatedContent, null, null, null);\n        }\n        return new FormattedSection(toString(evaluatedContent), null, section.scale ? section.scale.evaluate(ctx) : null, section.font ? section.font.evaluate(ctx).join(',') : null, section.textColor ? section.textColor.evaluate(ctx) : null);\n    };\n    return new Formatted$1(this.sections.map(evaluateSection));\n};\nFormatExpression.prototype.eachChild = function eachChild (fn) {\n    for (var i = 0, list = this.sections; i < list.length; i += 1) {\n        var section = list[i];\n\n            fn(section.content);\n        if (section.scale) {\n            fn(section.scale);\n        }\n        if (section.font) {\n            fn(section.font);\n        }\n        if (section.textColor) {\n            fn(section.textColor);\n        }\n    }\n};\nFormatExpression.prototype.outputDefined = function outputDefined () {\n    // Technically the combinatoric set of all children\n    // Usually, this.text will be undefined anyway\n    return false;\n};\nFormatExpression.prototype.serialize = function serialize () {\n    var serialized = ['format'];\n    for (var i = 0, list = this.sections; i < list.length; i += 1) {\n        var section = list[i];\n\n            serialized.push(section.content.serialize());\n        var options = {};\n        if (section.scale) {\n            options['font-scale'] = section.scale.serialize();\n        }\n        if (section.font) {\n            options['text-font'] = section.font.serialize();\n        }\n        if (section.textColor) {\n            options['text-color'] = section.textColor.serialize();\n        }\n        serialized.push(options);\n    }\n    return serialized;\n};\n\nvar FormatExpression$1 = FormatExpression;\n\n//      \nvar ImageExpression = function ImageExpression(input) {\n    this.type = ResolvedImageType;\n    this.input = input;\n};\nImageExpression.parse = function parse (args, context) {\n    if (args.length !== 2) {\n        return context.error(\"Expected two arguments.\");\n    }\n    var name = context.parse(args[1], 1, StringType);\n    if (!name)\n        { return context.error(\"No image name provided.\"); }\n    return new ImageExpression(name);\n};\nImageExpression.prototype.evaluate = function evaluate (ctx) {\n    var evaluatedImageName = this.input.evaluate(ctx);\n    var value = ResolvedImage$1.fromString(evaluatedImageName);\n    if (value && ctx.availableImages)\n        { value.available = ctx.availableImages.indexOf(evaluatedImageName) > -1; }\n    return value;\n};\nImageExpression.prototype.eachChild = function eachChild (fn) {\n    fn(this.input);\n};\nImageExpression.prototype.outputDefined = function outputDefined () {\n    // The output of image is determined by the list of available images in the evaluation context\n    return false;\n};\nImageExpression.prototype.serialize = function serialize () {\n    return [\n        'image',\n        this.input.serialize()\n    ];\n};\n\nvar ImageExpression$1 = ImageExpression;\n\nvar types$1 = {\n    'to-boolean': BooleanType,\n    'to-color': ColorType,\n    'to-number': NumberType,\n    'to-string': StringType\n};\n/**\n * Special form for error-coalescing coercion expressions \"to-number\",\n * \"to-color\".  Since these coercions can fail at runtime, they accept multiple\n * arguments, only evaluating one at a time until one succeeds.\n *\n * @private\n */\nvar Coercion = function Coercion(type, args) {\n    this.type = type;\n    this.args = args;\n};\nCoercion.parse = function parse (args, context) {\n    if (args.length < 2)\n        { return context.error(\"Expected at least one argument.\"); }\n    var name = args[0];\n    if ((name === 'to-boolean' || name === 'to-string') && args.length !== 2)\n        { return context.error(\"Expected one argument.\"); }\n    var type = types$1[name];\n    var parsed = [];\n    for (var i = 1; i < args.length; i++) {\n        var input = context.parse(args[i], i, ValueType);\n        if (!input)\n            { return null; }\n        parsed.push(input);\n    }\n    return new Coercion(type, parsed);\n};\nCoercion.prototype.evaluate = function evaluate (ctx) {\n    if (this.type.kind === 'boolean') {\n        return Boolean(this.args[0].evaluate(ctx));\n    } else if (this.type.kind === 'color') {\n        var input;\n        var error;\n        for (var i = 0, list = this.args; i < list.length; i += 1) {\n            var arg = list[i];\n\n                input = arg.evaluate(ctx);\n            error = null;\n            if (input instanceof Color$1) {\n                return input;\n            } else if (typeof input === 'string') {\n                var c = ctx.parseColor(input);\n                if (c)\n                    { return c; }\n            } else if (Array.isArray(input)) {\n                if (input.length < 3 || input.length > 4) {\n                    error = \"Invalid rbga value \" + (JSON.stringify(input)) + \": expected an array containing either three or four numeric values.\";\n                } else {\n                    error = validateRGBA(input[0], input[1], input[2], input[3]);\n                }\n                if (!error) {\n                    return new Color$1(input[0] / 255, input[1] / 255, input[2] / 255, input[3]);\n                }\n            }\n        }\n        throw new RuntimeError$1(error || (\"Could not parse color from value '\" + (typeof input === 'string' ? input : String(JSON.stringify(input))) + \"'\"));\n    } else if (this.type.kind === 'number') {\n        var value = null;\n        for (var i$1 = 0, list$1 = this.args; i$1 < list$1.length; i$1 += 1) {\n            var arg$1 = list$1[i$1];\n\n                value = arg$1.evaluate(ctx);\n            if (value === null)\n                { return 0; }\n            var num = Number(value);\n            if (isNaN(num))\n                { continue; }\n            return num;\n        }\n        throw new RuntimeError$1((\"Could not convert \" + (JSON.stringify(value)) + \" to number.\"));\n    } else if (this.type.kind === 'formatted') {\n        // There is no explicit 'to-formatted' but this coercion can be implicitly\n        // created by properties that expect the 'formatted' type.\n        return Formatted$1.fromString(toString(this.args[0].evaluate(ctx)));\n    } else if (this.type.kind === 'resolvedImage') {\n        return ResolvedImage$1.fromString(toString(this.args[0].evaluate(ctx)));\n    } else {\n        return toString(this.args[0].evaluate(ctx));\n    }\n};\nCoercion.prototype.eachChild = function eachChild (fn) {\n    this.args.forEach(fn);\n};\nCoercion.prototype.outputDefined = function outputDefined () {\n    return this.args.every(function (arg) { return arg.outputDefined(); });\n};\nCoercion.prototype.serialize = function serialize () {\n    if (this.type.kind === 'formatted') {\n        return new FormatExpression$1([{\n                content: this.args[0],\n                scale: null,\n                font: null,\n                textColor: null\n            }]).serialize();\n    }\n    if (this.type.kind === 'resolvedImage') {\n        return new ImageExpression$1(this.args[0]).serialize();\n    }\n    var serialized = [(\"to-\" + (this.type.kind))];\n    this.eachChild(function (child) {\n        serialized.push(child.serialize());\n    });\n    return serialized;\n};\nvar Coercion$1 = Coercion;\n\n//      \nvar geometryTypes = [\n    'Unknown',\n    'Point',\n    'LineString',\n    'Polygon'\n];\nvar EvaluationContext = function EvaluationContext() {\n    this.globals = null;\n    this.feature = null;\n    this.featureState = null;\n    this.formattedSection = null;\n    this._parseColorCache = {};\n    this.availableImages = null;\n    this.canonical = null;\n    this.featureTileCoord = null;\n    this.featureDistanceData = null;\n};\nEvaluationContext.prototype.id = function id () {\n    return this.feature && this.feature.id !== undefined ? this.feature.id : null;\n};\nEvaluationContext.prototype.geometryType = function geometryType () {\n    return this.feature ? typeof this.feature.type === 'number' ? geometryTypes[this.feature.type] : this.feature.type : null;\n};\nEvaluationContext.prototype.geometry = function geometry () {\n    return this.feature && 'geometry' in this.feature ? this.feature.geometry : null;\n};\nEvaluationContext.prototype.canonicalID = function canonicalID () {\n    return this.canonical;\n};\nEvaluationContext.prototype.properties = function properties () {\n    return this.feature && this.feature.properties || {};\n};\nEvaluationContext.prototype.distanceFromCenter = function distanceFromCenter () {\n    if (this.featureTileCoord && this.featureDistanceData) {\n        var c = this.featureDistanceData.center;\n        var scale = this.featureDistanceData.scale;\n        var ref = this.featureTileCoord;\n            var x = ref.x;\n            var y = ref.y;\n        // Calculate the distance vector `d` (left handed)\n        var dX = x * scale - c[0];\n        var dY = y * scale - c[1];\n        // The bearing vector `b` (left handed)\n        var bX = this.featureDistanceData.bearing[0];\n        var bY = this.featureDistanceData.bearing[1];\n        // Distance is calculated as `dot(d, v)`\n        var dist = bX * dX + bY * dY;\n        return dist;\n    }\n    return 0;\n};\nEvaluationContext.prototype.parseColor = function parseColor (input) {\n    var cached = this._parseColorCache[input];\n    if (!cached) {\n        cached = this._parseColorCache[input] = Color$1.parse(input);\n    }\n    return cached;\n};\nvar EvaluationContext$1 = EvaluationContext;\n\n//      \nvar CompoundExpression = function CompoundExpression(name, type, evaluate, args) {\n    this.name = name;\n    this.type = type;\n    this._evaluate = evaluate;\n    this.args = args;\n};\nCompoundExpression.prototype.evaluate = function evaluate (ctx) {\n    return this._evaluate(ctx, this.args);\n};\nCompoundExpression.prototype.eachChild = function eachChild (fn) {\n    this.args.forEach(fn);\n};\nCompoundExpression.prototype.outputDefined = function outputDefined () {\n    return false;\n};\nCompoundExpression.prototype.serialize = function serialize () {\n    return [this.name].concat(this.args.map(function (arg) { return arg.serialize(); }));\n};\nCompoundExpression.parse = function parse (args, context) {\n        var ref$1;\n\n    var op = args[0];\n    var definition = CompoundExpression.definitions[op];\n    if (!definition) {\n        return context.error((\"Unknown expression \\\"\" + op + \"\\\". If you wanted a literal array, use [\\\"literal\\\", [...]].\"), 0);\n    }\n    // Now check argument types against each signature\n    var type = Array.isArray(definition) ? definition[0] : definition.type;\n    var availableOverloads = Array.isArray(definition) ? [[\n            definition[1],\n            definition[2]\n        ]] : definition.overloads;\n    var overloads = availableOverloads.filter(function (ref) {\n            var signature = ref[0];\n\n            return !Array.isArray(signature) || // varags\n    signature.length === args.length - 1;\n        }// correct param count\n);\n    var signatureContext = null;\n    for (var i$3 = 0, list = overloads; i$3 < list.length; i$3 += 1) {\n        // Use a fresh context for each attempted signature so that, if\n        // we eventually succeed, we haven't polluted `context.errors`.\n        var ref = list[i$3];\n            var params = ref[0];\n            var evaluate = ref[1];\n\n            signatureContext = new ParsingContext$1(context.registry, context.path, null, context.scope);\n        // First parse all the args, potentially coercing to the\n        // types expected by this overload.\n        var parsedArgs = [];\n        var argParseFailed = false;\n        for (var i = 1; i < args.length; i++) {\n            var arg = args[i];\n            var expectedType = Array.isArray(params) ? params[i - 1] : params.type;\n            var parsed = signatureContext.parse(arg, 1 + parsedArgs.length, expectedType);\n            if (!parsed) {\n                argParseFailed = true;\n                break;\n            }\n            parsedArgs.push(parsed);\n        }\n        if (argParseFailed) {\n            // Couldn't coerce args of this overload to expected type, move\n            // on to next one.\n            continue;\n        }\n        if (Array.isArray(params)) {\n            if (params.length !== parsedArgs.length) {\n                signatureContext.error((\"Expected \" + (params.length) + \" arguments, but found \" + (parsedArgs.length) + \" instead.\"));\n                continue;\n            }\n        }\n        for (var i$1 = 0; i$1 < parsedArgs.length; i$1++) {\n            var expected = Array.isArray(params) ? params[i$1] : params.type;\n            var arg$1 = parsedArgs[i$1];\n            signatureContext.concat(i$1 + 1).checkSubtype(expected, arg$1.type);\n        }\n        if (signatureContext.errors.length === 0) {\n            return new CompoundExpression(op, type, evaluate, parsedArgs);\n        }\n    }\n    if (overloads.length === 1) {\n        (ref$1 = context.errors).push.apply(ref$1, signatureContext.errors);\n    } else {\n        var expected$1 = overloads.length ? overloads : availableOverloads;\n        var signatures = expected$1.map(function (ref) {\n                var params = ref[0];\n\n                return stringifySignature(params);\n            }).join(' | ');\n        var actualTypes = [];\n        // For error message, re-parse arguments without trying to\n        // apply any coercions\n        for (var i$2 = 1; i$2 < args.length; i$2++) {\n            var parsed$1 = context.parse(args[i$2], 1 + actualTypes.length);\n            if (!parsed$1)\n                { return null; }\n            actualTypes.push(toString$1(parsed$1.type));\n        }\n        context.error((\"Expected arguments of type \" + signatures + \", but found (\" + (actualTypes.join(', ')) + \") instead.\"));\n    }\n    return null;\n};\nCompoundExpression.register = function register (registry, definitions) {\n    CompoundExpression.definitions = definitions;\n    for (var name in definitions) {\n        registry[name] = CompoundExpression;\n    }\n};\nfunction stringifySignature(signature) {\n    if (Array.isArray(signature)) {\n        return (\"(\" + (signature.map(toString$1).join(', ')) + \")\");\n    } else {\n        return (\"(\" + (toString$1(signature.type)) + \"...)\");\n    }\n}\nvar CompoundExpression$1 = CompoundExpression;\n\n//      \nvar CollatorExpression = function CollatorExpression(caseSensitive, diacriticSensitive, locale) {\n    this.type = CollatorType;\n    this.locale = locale;\n    this.caseSensitive = caseSensitive;\n    this.diacriticSensitive = diacriticSensitive;\n};\nCollatorExpression.parse = function parse (args, context) {\n    if (args.length !== 2)\n        { return context.error(\"Expected one argument.\"); }\n    var options = args[1];\n    if (typeof options !== 'object' || Array.isArray(options))\n        { return context.error(\"Collator options argument must be an object.\"); }\n    var caseSensitive = context.parse(options['case-sensitive'] === undefined ? false : options['case-sensitive'], 1, BooleanType);\n    if (!caseSensitive)\n        { return null; }\n    var diacriticSensitive = context.parse(options['diacritic-sensitive'] === undefined ? false : options['diacritic-sensitive'], 1, BooleanType);\n    if (!diacriticSensitive)\n        { return null; }\n    var locale = null;\n    if (options['locale']) {\n        locale = context.parse(options['locale'], 1, StringType);\n        if (!locale)\n            { return null; }\n    }\n    return new CollatorExpression(caseSensitive, diacriticSensitive, locale);\n};\nCollatorExpression.prototype.evaluate = function evaluate (ctx) {\n    return new Collator$1(this.caseSensitive.evaluate(ctx), this.diacriticSensitive.evaluate(ctx), this.locale ? this.locale.evaluate(ctx) : null);\n};\nCollatorExpression.prototype.eachChild = function eachChild (fn) {\n    fn(this.caseSensitive);\n    fn(this.diacriticSensitive);\n    if (this.locale) {\n        fn(this.locale);\n    }\n};\nCollatorExpression.prototype.outputDefined = function outputDefined () {\n    // Technically the set of possible outputs is the combinatoric set of Collators produced\n    // by all possible outputs of locale/caseSensitive/diacriticSensitive\n    // But for the primary use of Collators in comparison operators, we ignore the Collator's\n    // possible outputs anyway, so we can get away with leaving this false for now.\n    return false;\n};\nCollatorExpression.prototype.serialize = function serialize () {\n    var options = {};\n    options['case-sensitive'] = this.caseSensitive.serialize();\n    options['diacritic-sensitive'] = this.diacriticSensitive.serialize();\n    if (this.locale) {\n        options['locale'] = this.locale.serialize();\n    }\n    return [\n        'collator',\n        options\n    ];\n};\n\nvar CollatorExpression$1 = CollatorExpression;\n\n//      \n// minX, minY, maxX, maxY\nvar EXTENT = 8192;\nfunction updateBBox(bbox, coord) {\n    bbox[0] = Math.min(bbox[0], coord[0]);\n    bbox[1] = Math.min(bbox[1], coord[1]);\n    bbox[2] = Math.max(bbox[2], coord[0]);\n    bbox[3] = Math.max(bbox[3], coord[1]);\n}\nfunction mercatorXfromLng(lng) {\n    return (180 + lng) / 360;\n}\nfunction mercatorYfromLat(lat) {\n    return (180 - 180 / Math.PI * Math.log(Math.tan(Math.PI / 4 + lat * Math.PI / 360))) / 360;\n}\nfunction boxWithinBox(bbox1, bbox2) {\n    if (bbox1[0] <= bbox2[0])\n        { return false; }\n    if (bbox1[2] >= bbox2[2])\n        { return false; }\n    if (bbox1[1] <= bbox2[1])\n        { return false; }\n    if (bbox1[3] >= bbox2[3])\n        { return false; }\n    return true;\n}\nfunction getTileCoordinates(p, canonical) {\n    var x = mercatorXfromLng(p[0]);\n    var y = mercatorYfromLat(p[1]);\n    var tilesAtZoom = Math.pow(2, canonical.z);\n    return [\n        Math.round(x * tilesAtZoom * EXTENT),\n        Math.round(y * tilesAtZoom * EXTENT)\n    ];\n}\nfunction onBoundary(p, p1, p2) {\n    var x1 = p[0] - p1[0];\n    var y1 = p[1] - p1[1];\n    var x2 = p[0] - p2[0];\n    var y2 = p[1] - p2[1];\n    return x1 * y2 - x2 * y1 === 0 && x1 * x2 <= 0 && y1 * y2 <= 0;\n}\nfunction rayIntersect(p, p1, p2) {\n    return p1[1] > p[1] !== p2[1] > p[1] && p[0] < (p2[0] - p1[0]) * (p[1] - p1[1]) / (p2[1] - p1[1]) + p1[0];\n}\n// ray casting algorithm for detecting if point is in polygon\nfunction pointWithinPolygon(point, rings) {\n    var inside = false;\n    for (var i = 0, len = rings.length; i < len; i++) {\n        var ring = rings[i];\n        for (var j = 0, len2 = ring.length; j < len2 - 1; j++) {\n            if (onBoundary(point, ring[j], ring[j + 1]))\n                { return false; }\n            if (rayIntersect(point, ring[j], ring[j + 1]))\n                { inside = !inside; }\n        }\n    }\n    return inside;\n}\nfunction pointWithinPolygons(point, polygons) {\n    for (var i = 0; i < polygons.length; i++) {\n        if (pointWithinPolygon(point, polygons[i]))\n            { return true; }\n    }\n    return false;\n}\nfunction perp(v1, v2) {\n    return v1[0] * v2[1] - v1[1] * v2[0];\n}\n// check if p1 and p2 are in different sides of line segment q1->q2\nfunction twoSided(p1, p2, q1, q2) {\n    // q1->p1 (x1, y1), q1->p2 (x2, y2), q1->q2 (x3, y3)\n    var x1 = p1[0] - q1[0];\n    var y1 = p1[1] - q1[1];\n    var x2 = p2[0] - q1[0];\n    var y2 = p2[1] - q1[1];\n    var x3 = q2[0] - q1[0];\n    var y3 = q2[1] - q1[1];\n    var det1 = x1 * y3 - x3 * y1;\n    var det2 = x2 * y3 - x3 * y2;\n    if (det1 > 0 && det2 < 0 || det1 < 0 && det2 > 0)\n        { return true; }\n    return false;\n}\n// a, b are end points for line segment1, c and d are end points for line segment2\nfunction lineIntersectLine(a, b, c, d) {\n    // check if two segments are parallel or not\n    // precondition is end point a, b is inside polygon, if line a->b is\n    // parallel to polygon edge c->d, then a->b won't intersect with c->d\n    var vectorP = [\n        b[0] - a[0],\n        b[1] - a[1]\n    ];\n    var vectorQ = [\n        d[0] - c[0],\n        d[1] - c[1]\n    ];\n    if (perp(vectorQ, vectorP) === 0)\n        { return false; }\n    // If lines are intersecting with each other, the relative location should be:\n    // a and b lie in different sides of segment c->d\n    // c and d lie in different sides of segment a->b\n    if (twoSided(a, b, c, d) && twoSided(c, d, a, b))\n        { return true; }\n    return false;\n}\nfunction lineIntersectPolygon(p1, p2, polygon) {\n    for (var i = 0, list = polygon; i < list.length; i += 1) {\n        // loop through every edge of the ring\n        var ring = list[i];\n\n        for (var j = 0; j < ring.length - 1; ++j) {\n            if (lineIntersectLine(p1, p2, ring[j], ring[j + 1])) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction lineStringWithinPolygon(line, polygon) {\n    // First, check if geometry points of line segments are all inside polygon\n    for (var i = 0; i < line.length; ++i) {\n        if (!pointWithinPolygon(line[i], polygon)) {\n            return false;\n        }\n    }\n    // Second, check if there is line segment intersecting polygon edge\n    for (var i$1 = 0; i$1 < line.length - 1; ++i$1) {\n        if (lineIntersectPolygon(line[i$1], line[i$1 + 1], polygon)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction lineStringWithinPolygons(line, polygons) {\n    for (var i = 0; i < polygons.length; i++) {\n        if (lineStringWithinPolygon(line, polygons[i]))\n            { return true; }\n    }\n    return false;\n}\nfunction getTilePolygon(coordinates, bbox, canonical) {\n    var polygon = [];\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = [];\n        for (var j = 0; j < coordinates[i].length; j++) {\n            var coord = getTileCoordinates(coordinates[i][j], canonical);\n            updateBBox(bbox, coord);\n            ring.push(coord);\n        }\n        polygon.push(ring);\n    }\n    return polygon;\n}\nfunction getTilePolygons(coordinates, bbox, canonical) {\n    var polygons = [];\n    for (var i = 0; i < coordinates.length; i++) {\n        var polygon = getTilePolygon(coordinates[i], bbox, canonical);\n        polygons.push(polygon);\n    }\n    return polygons;\n}\nfunction updatePoint(p, bbox, polyBBox, worldSize) {\n    if (p[0] < polyBBox[0] || p[0] > polyBBox[2]) {\n        var halfWorldSize = worldSize * 0.5;\n        var shift = p[0] - polyBBox[0] > halfWorldSize ? -worldSize : polyBBox[0] - p[0] > halfWorldSize ? worldSize : 0;\n        if (shift === 0) {\n            shift = p[0] - polyBBox[2] > halfWorldSize ? -worldSize : polyBBox[2] - p[0] > halfWorldSize ? worldSize : 0;\n        }\n        p[0] += shift;\n    }\n    updateBBox(bbox, p);\n}\nfunction resetBBox(bbox) {\n    bbox[0] = bbox[1] = Infinity;\n    bbox[2] = bbox[3] = -Infinity;\n}\nfunction getTilePoints(geometry, pointBBox, polyBBox, canonical) {\n    var worldSize = Math.pow(2, canonical.z) * EXTENT;\n    var shifts = [\n        canonical.x * EXTENT,\n        canonical.y * EXTENT\n    ];\n    var tilePoints = [];\n    if (!geometry)\n        { return tilePoints; }\n    for (var i$1 = 0, list$1 = geometry; i$1 < list$1.length; i$1 += 1) {\n        var points = list$1[i$1];\n\n        for (var i = 0, list = points; i < list.length; i += 1) {\n            var point = list[i];\n\n            var p = [\n                point.x + shifts[0],\n                point.y + shifts[1]\n            ];\n            updatePoint(p, pointBBox, polyBBox, worldSize);\n            tilePoints.push(p);\n        }\n    }\n    return tilePoints;\n}\nfunction getTileLines(geometry, lineBBox, polyBBox, canonical) {\n    var worldSize = Math.pow(2, canonical.z) * EXTENT;\n    var shifts = [\n        canonical.x * EXTENT,\n        canonical.y * EXTENT\n    ];\n    var tileLines = [];\n    if (!geometry)\n        { return tileLines; }\n    for (var i$1 = 0, list$1 = geometry; i$1 < list$1.length; i$1 += 1) {\n        var line = list$1[i$1];\n\n        var tileLine = [];\n        for (var i = 0, list = line; i < list.length; i += 1) {\n            var point = list[i];\n\n            var p = [\n                point.x + shifts[0],\n                point.y + shifts[1]\n            ];\n            updateBBox(lineBBox, p);\n            tileLine.push(p);\n        }\n        tileLines.push(tileLine);\n    }\n    if (lineBBox[2] - lineBBox[0] <= worldSize / 2) {\n        resetBBox(lineBBox);\n        for (var i$3 = 0, list$3 = tileLines; i$3 < list$3.length; i$3 += 1) {\n            var line$1 = list$3[i$3];\n\n            for (var i$2 = 0, list$2 = line$1; i$2 < list$2.length; i$2 += 1) {\n                var p$1 = list$2[i$2];\n\n                updatePoint(p$1, lineBBox, polyBBox, worldSize);\n            }\n        }\n    }\n    return tileLines;\n}\nfunction pointsWithinPolygons(ctx, polygonGeometry) {\n    var pointBBox = [\n        Infinity,\n        Infinity,\n        -Infinity,\n        -Infinity\n    ];\n    var polyBBox = [\n        Infinity,\n        Infinity,\n        -Infinity,\n        -Infinity\n    ];\n    var canonical = ctx.canonicalID();\n    if (!canonical) {\n        return false;\n    }\n    if (polygonGeometry.type === 'Polygon') {\n        var tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        var tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox))\n            { return false; }\n        for (var i = 0, list = tilePoints; i < list.length; i += 1) {\n            var point = list[i];\n\n            if (!pointWithinPolygon(point, tilePolygon))\n                { return false; }\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        var tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        var tilePoints$1 = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox))\n            { return false; }\n        for (var i$1 = 0, list$1 = tilePoints$1; i$1 < list$1.length; i$1 += 1) {\n            var point$1 = list$1[i$1];\n\n            if (!pointWithinPolygons(point$1, tilePolygons))\n                { return false; }\n        }\n    }\n    return true;\n}\nfunction linesWithinPolygons(ctx, polygonGeometry) {\n    var lineBBox = [\n        Infinity,\n        Infinity,\n        -Infinity,\n        -Infinity\n    ];\n    var polyBBox = [\n        Infinity,\n        Infinity,\n        -Infinity,\n        -Infinity\n    ];\n    var canonical = ctx.canonicalID();\n    if (!canonical) {\n        return false;\n    }\n    if (polygonGeometry.type === 'Polygon') {\n        var tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        var tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox))\n            { return false; }\n        for (var i = 0, list = tileLines; i < list.length; i += 1) {\n            var line = list[i];\n\n            if (!lineStringWithinPolygon(line, tilePolygon))\n                { return false; }\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        var tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        var tileLines$1 = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox))\n            { return false; }\n        for (var i$1 = 0, list$1 = tileLines$1; i$1 < list$1.length; i$1 += 1) {\n            var line$1 = list$1[i$1];\n\n            if (!lineStringWithinPolygons(line$1, tilePolygons))\n                { return false; }\n        }\n    }\n    return true;\n}\nvar Within = function Within(geojson, geometries) {\n    this.type = BooleanType;\n    this.geojson = geojson;\n    this.geometries = geometries;\n};\nWithin.parse = function parse (args, context) {\n    if (args.length !== 2)\n        { return context.error((\"'within' expression requires exactly one argument, but found \" + (args.length - 1) + \" instead.\")); }\n    if (isValue(args[1])) {\n        var geojson = args[1];\n        if (geojson.type === 'FeatureCollection') {\n            for (var i = 0; i < geojson.features.length; ++i) {\n                var type = geojson.features[i].geometry.type;\n                if (type === 'Polygon' || type === 'MultiPolygon') {\n                    return new Within(geojson, geojson.features[i].geometry);\n                }\n            }\n        } else if (geojson.type === 'Feature') {\n            var type$1 = geojson.geometry.type;\n            if (type$1 === 'Polygon' || type$1 === 'MultiPolygon') {\n                return new Within(geojson, geojson.geometry);\n            }\n        } else if (geojson.type === 'Polygon' || geojson.type === 'MultiPolygon') {\n            return new Within(geojson, geojson);\n        }\n    }\n    return context.error(\"'within' expression requires valid geojson object that contains polygon geometry type.\");\n};\nWithin.prototype.evaluate = function evaluate (ctx) {\n    if (ctx.geometry() != null && ctx.canonicalID() != null) {\n        if (ctx.geometryType() === 'Point') {\n            return pointsWithinPolygons(ctx, this.geometries);\n        } else if (ctx.geometryType() === 'LineString') {\n            return linesWithinPolygons(ctx, this.geometries);\n        }\n    }\n    return false;\n};\nWithin.prototype.eachChild = function eachChild () {\n};\nWithin.prototype.outputDefined = function outputDefined () {\n    return true;\n};\nWithin.prototype.serialize = function serialize () {\n    return [\n        'within',\n        this.geojson\n    ];\n};\nvar Within$1 = Within;\n\n//      \nfunction isFeatureConstant(e) {\n    if (e instanceof CompoundExpression$1) {\n        if (e.name === 'get' && e.args.length === 1) {\n            return false;\n        } else if (e.name === 'feature-state') {\n            return false;\n        } else if (e.name === 'has' && e.args.length === 1) {\n            return false;\n        } else if (e.name === 'properties' || e.name === 'geometry-type' || e.name === 'id') {\n            return false;\n        } else if (/^filter-/.test(e.name)) {\n            return false;\n        }\n    }\n    if (e instanceof Within$1) {\n        return false;\n    }\n    var result = true;\n    e.eachChild(function (arg) {\n        if (result && !isFeatureConstant(arg)) {\n            result = false;\n        }\n    });\n    return result;\n}\nfunction isStateConstant(e) {\n    if (e instanceof CompoundExpression$1) {\n        if (e.name === 'feature-state') {\n            return false;\n        }\n    }\n    var result = true;\n    e.eachChild(function (arg) {\n        if (result && !isStateConstant(arg)) {\n            result = false;\n        }\n    });\n    return result;\n}\nfunction isGlobalPropertyConstant(e, properties) {\n    if (e instanceof CompoundExpression$1 && properties.indexOf(e.name) >= 0) {\n        return false;\n    }\n    var result = true;\n    e.eachChild(function (arg) {\n        if (result && !isGlobalPropertyConstant(arg, properties)) {\n            result = false;\n        }\n    });\n    return result;\n}\n\n//      \nvar Var = function Var(name, boundExpression) {\n    this.type = boundExpression.type;\n    this.name = name;\n    this.boundExpression = boundExpression;\n};\nVar.parse = function parse (args, context) {\n    if (args.length !== 2 || typeof args[1] !== 'string')\n        { return context.error(\"'var' expression requires exactly one string literal argument.\"); }\n    var name = args[1];\n    if (!context.scope.has(name)) {\n        return context.error((\"Unknown variable \\\"\" + name + \"\\\". Make sure \\\"\" + name + \"\\\" has been bound in an enclosing \\\"let\\\" expression before using it.\"), 1);\n    }\n    return new Var(name, context.scope.get(name));\n};\nVar.prototype.evaluate = function evaluate (ctx) {\n    return this.boundExpression.evaluate(ctx);\n};\nVar.prototype.eachChild = function eachChild () {\n};\nVar.prototype.outputDefined = function outputDefined () {\n    return false;\n};\nVar.prototype.serialize = function serialize () {\n    return [\n        'var',\n        this.name\n    ];\n};\nvar Var$1 = Var;\n\n//      \n/**\n * State associated parsing at a given point in an expression tree.\n * @private\n */\nvar ParsingContext = function ParsingContext(registry, path, expectedType, scope, errors) {\n    if ( path === void 0 ) path = [];\n    if ( scope === void 0 ) scope = new Scope$1();\n    if ( errors === void 0 ) errors = [];\n\n    this.registry = registry;\n    this.path = path;\n    this.key = path.map(function (part) { return (\"[\" + part + \"]\"); }).join('');\n    this.scope = scope;\n    this.errors = errors;\n    this.expectedType = expectedType;\n};\n/**\n * @param expr the JSON expression to parse\n * @param index the optional argument index if this expression is an argument of a parent expression that's being parsed\n * @param options\n * @param options.omitTypeAnnotations set true to omit inferred type annotations.  Caller beware: with this option set, the parsed expression's type will NOT satisfy `expectedType` if it would normally be wrapped in an inferred annotation.\n * @private\n */\nParsingContext.prototype.parse = function parse (expr, index, expectedType, bindings, options) {\n        if ( options === void 0 ) options = {};\n\n    if (index) {\n        return this.concat(index, expectedType, bindings)._parse(expr, options);\n    }\n    return this._parse(expr, options);\n};\nParsingContext.prototype._parse = function _parse (expr, options) {\n    if (expr === null || typeof expr === 'string' || typeof expr === 'boolean' || typeof expr === 'number') {\n        expr = [\n            'literal',\n            expr\n        ];\n    }\n    function annotate(parsed, type, typeAnnotation) {\n        if (typeAnnotation === 'assert') {\n            return new Assertion$1(type, [parsed]);\n        } else if (typeAnnotation === 'coerce') {\n            return new Coercion$1(type, [parsed]);\n        } else {\n            return parsed;\n        }\n    }\n    if (Array.isArray(expr)) {\n        if (expr.length === 0) {\n            return this.error(\"Expected an array with at least one element. If you wanted a literal array, use [\\\"literal\\\", []].\");\n        }\n        var op = expr[0];\n        if (typeof op !== 'string') {\n            this.error((\"Expression name must be a string, but found \" + (typeof op) + \" instead. If you wanted a literal array, use [\\\"literal\\\", [...]].\"), 0);\n            return null;\n        }\n        var Expr = this.registry[op];\n        if (Expr) {\n            var parsed = Expr.parse(expr, this);\n            if (!parsed)\n                { return null; }\n            if (this.expectedType) {\n                var expected = this.expectedType;\n                var actual = parsed.type;\n                // When we expect a number, string, boolean, or array but have a value, wrap it in an assertion.\n                // When we expect a color or formatted string, but have a string or value, wrap it in a coercion.\n                // Otherwise, we do static type-checking.\n                //\n                // These behaviors are overridable for:\n                //   * The \"coalesce\" operator, which needs to omit type annotations.\n                //   * String-valued properties (e.g. `text-field`), where coercion is more convenient than assertion.\n                //\n                if ((expected.kind === 'string' || expected.kind === 'number' || expected.kind === 'boolean' || expected.kind === 'object' || expected.kind === 'array') && actual.kind === 'value') {\n                    parsed = annotate(parsed, expected, options.typeAnnotation || 'assert');\n                } else if ((expected.kind === 'color' || expected.kind === 'formatted' || expected.kind === 'resolvedImage') && (actual.kind === 'value' || actual.kind === 'string')) {\n                    parsed = annotate(parsed, expected, options.typeAnnotation || 'coerce');\n                } else if (this.checkSubtype(expected, actual)) {\n                    return null;\n                }\n            }\n            // If an expression's arguments are all literals, we can evaluate\n            // it immediately and replace it with a literal value in the\n            // parsed/compiled result. Expressions that expect an image should\n            // not be resolved here so we can later get the available images.\n            if (!(parsed instanceof Literal$1) && parsed.type.kind !== 'resolvedImage' && isConstant(parsed)) {\n                var ec = new EvaluationContext$1();\n                try {\n                    parsed = new Literal$1(parsed.type, parsed.evaluate(ec));\n                } catch (e) {\n                    this.error(e.message);\n                    return null;\n                }\n            }\n            return parsed;\n        }\n        return this.error((\"Unknown expression \\\"\" + op + \"\\\". If you wanted a literal array, use [\\\"literal\\\", [...]].\"), 0);\n    } else if (typeof expr === 'undefined') {\n        return this.error(\"'undefined' value invalid. Use null instead.\");\n    } else if (typeof expr === 'object') {\n        return this.error(\"Bare objects invalid. Use [\\\"literal\\\", {...}] instead.\");\n    } else {\n        return this.error((\"Expected an array, but found \" + (typeof expr) + \" instead.\"));\n    }\n};\n/**\n * Returns a copy of this context suitable for parsing the subexpression at\n * index `index`, optionally appending to 'let' binding map.\n *\n * Note that `errors` property, intended for collecting errors while\n * parsing, is copied by reference rather than cloned.\n * @private\n */\nParsingContext.prototype.concat = function concat (index, expectedType, bindings) {\n    var path = typeof index === 'number' ? this.path.concat(index) : this.path;\n    var scope = bindings ? this.scope.concat(bindings) : this.scope;\n    return new ParsingContext(this.registry, path, expectedType || null, scope, this.errors);\n};\n/**\n * Push a parsing (or type checking) error into the `this.errors`\n * @param error The message\n * @param keys Optionally specify the source of the error at a child\n * of the current expression at `this.key`.\n * @private\n */\nParsingContext.prototype.error = function error (error$1) {\n        var keys = [], len = arguments.length - 1;\n        while ( len-- > 0 ) keys[ len ] = arguments[ len + 1 ];\n\n    var key = \"\" + (this.key) + (keys.map(function (k) { return (\"[\" + k + \"]\"); }).join(''));\n    this.errors.push(new ParsingError$1(key, error$1));\n};\n/**\n * Returns null if `t` is a subtype of `expected`; otherwise returns an\n * error message and also pushes it to `this.errors`.\n */\nParsingContext.prototype.checkSubtype = function checkSubtype$1 (expected, t) {\n    var error = checkSubtype(expected, t);\n    if (error)\n        { this.error(error); }\n    return error;\n};\nvar ParsingContext$1 = ParsingContext;\nfunction isConstant(expression) {\n    if (expression instanceof Var$1) {\n        return isConstant(expression.boundExpression);\n    } else if (expression instanceof CompoundExpression$1 && expression.name === 'error') {\n        return false;\n    } else if (expression instanceof CollatorExpression$1) {\n        // Although the results of a Collator expression with fixed arguments\n        // generally shouldn't change between executions, we can't serialize them\n        // as constant expressions because results change based on environment.\n        return false;\n    } else if (expression instanceof Within$1) {\n        return false;\n    }\n    var isTypeAnnotation = expression instanceof Coercion$1 || expression instanceof Assertion$1;\n    var childrenConstant = true;\n    expression.eachChild(function (child) {\n        // We can _almost_ assume that if `expressions` children are constant,\n        // they would already have been evaluated to Literal values when they\n        // were parsed.  Type annotations are the exception, because they might\n        // have been inferred and added after a child was parsed.\n        // So we recurse into isConstant() for the children of type annotations,\n        // but otherwise simply check whether they are Literals.\n        if (isTypeAnnotation) {\n            childrenConstant = childrenConstant && isConstant(child);\n        } else {\n            childrenConstant = childrenConstant && child instanceof Literal$1;\n        }\n    });\n    if (!childrenConstant) {\n        return false;\n    }\n    return isFeatureConstant(expression) && isGlobalPropertyConstant(expression, [\n        'zoom',\n        'heatmap-density',\n        'line-progress',\n        'sky-radial-progress',\n        'accumulated',\n        'is-supported-script',\n        'pitch',\n        'distance-from-center'\n    ]);\n}\n\n//      \n/**\n * Returns the index of the last stop <= input, or 0 if it doesn't exist.\n * @private\n */\nfunction findStopLessThanOrEqualTo(stops, input) {\n    var lastIndex = stops.length - 1;\n    var lowerIndex = 0;\n    var upperIndex = lastIndex;\n    var currentIndex = 0;\n    var currentValue, nextValue;\n    while (lowerIndex <= upperIndex) {\n        currentIndex = Math.floor((lowerIndex + upperIndex) / 2);\n        currentValue = stops[currentIndex];\n        nextValue = stops[currentIndex + 1];\n        if (currentValue <= input) {\n            if (currentIndex === lastIndex || input < nextValue) {\n                // Search complete\n                return currentIndex;\n            }\n            lowerIndex = currentIndex + 1;\n        } else if (currentValue > input) {\n            upperIndex = currentIndex - 1;\n        } else {\n            throw new RuntimeError$1('Input is not a number.');\n        }\n    }\n    return 0;\n}\n\n//      \nvar Step = function Step(type, input, stops) {\n    this.type = type;\n    this.input = input;\n    this.labels = [];\n    this.outputs = [];\n    for (var i = 0, list = stops; i < list.length; i += 1) {\n        var ref = list[i];\n        var label = ref[0];\n        var expression = ref[1];\n\n        this.labels.push(label);\n        this.outputs.push(expression);\n    }\n};\nStep.parse = function parse (args, context) {\n    if (args.length - 1 < 4) {\n        return context.error((\"Expected at least 4 arguments, but found only \" + (args.length - 1) + \".\"));\n    }\n    if ((args.length - 1) % 2 !== 0) {\n        return context.error(\"Expected an even number of arguments.\");\n    }\n    var input = context.parse(args[1], 1, NumberType);\n    if (!input)\n        { return null; }\n    var stops = [];\n    var outputType = null;\n    if (context.expectedType && context.expectedType.kind !== 'value') {\n        outputType = context.expectedType;\n    }\n    for (var i = 1; i < args.length; i += 2) {\n        var label = i === 1 ? -Infinity : args[i];\n        var value = args[i + 1];\n        var labelKey = i;\n        var valueKey = i + 1;\n        if (typeof label !== 'number') {\n            return context.error('Input/output pairs for \"step\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n        }\n        if (stops.length && stops[stops.length - 1][0] >= label) {\n            return context.error('Input/output pairs for \"step\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n        }\n        var parsed = context.parse(value, valueKey, outputType);\n        if (!parsed)\n            { return null; }\n        outputType = outputType || parsed.type;\n        stops.push([\n            label,\n            parsed\n        ]);\n    }\n    return new Step(outputType, input, stops);\n};\nStep.prototype.evaluate = function evaluate (ctx) {\n    var labels = this.labels;\n    var outputs = this.outputs;\n    if (labels.length === 1) {\n        return outputs[0].evaluate(ctx);\n    }\n    var value = this.input.evaluate(ctx);\n    if (value <= labels[0]) {\n        return outputs[0].evaluate(ctx);\n    }\n    var stopCount = labels.length;\n    if (value >= labels[stopCount - 1]) {\n        return outputs[stopCount - 1].evaluate(ctx);\n    }\n    var index = findStopLessThanOrEqualTo(labels, value);\n    return outputs[index].evaluate(ctx);\n};\nStep.prototype.eachChild = function eachChild (fn) {\n    fn(this.input);\n    for (var i = 0, list = this.outputs; i < list.length; i += 1) {\n        var expression = list[i];\n\n            fn(expression);\n    }\n};\nStep.prototype.outputDefined = function outputDefined () {\n    return this.outputs.every(function (out) { return out.outputDefined(); });\n};\nStep.prototype.serialize = function serialize () {\n    var serialized = [\n        'step',\n        this.input.serialize()\n    ];\n    for (var i = 0; i < this.labels.length; i++) {\n        if (i > 0) {\n            serialized.push(this.labels[i]);\n        }\n        serialized.push(this.outputs[i].serialize());\n    }\n    return serialized;\n};\nvar Step$1 = Step;\n\n/*\n * Copyright (C) 2008 Apple Inc. All Rights Reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * Ported from Webkit\n * http://svn.webkit.org/repository/webkit/trunk/Source/WebCore/platform/graphics/UnitBezier.h\n */\n\nvar unitbezier = UnitBezier;\nfunction UnitBezier(p1x, p1y, p2x, p2y) {\n    // Calculate the polynomial coefficients, implicit first and last control points are (0,0) and (1,1).\n    this.cx = 3 * p1x;\n    this.bx = 3 * (p2x - p1x) - this.cx;\n    this.ax = 1 - this.cx - this.bx;\n    this.cy = 3 * p1y;\n    this.by = 3 * (p2y - p1y) - this.cy;\n    this.ay = 1 - this.cy - this.by;\n    this.p1x = p1x;\n    this.p1y = p2y;\n    this.p2x = p2x;\n    this.p2y = p2y;\n}\nUnitBezier.prototype.sampleCurveX = function (t) {\n    // `ax t^3 + bx t^2 + cx t' expanded using Horner's rule.\n    return ((this.ax * t + this.bx) * t + this.cx) * t;\n};\nUnitBezier.prototype.sampleCurveY = function (t) {\n    return ((this.ay * t + this.by) * t + this.cy) * t;\n};\nUnitBezier.prototype.sampleCurveDerivativeX = function (t) {\n    return (3 * this.ax * t + 2 * this.bx) * t + this.cx;\n};\nUnitBezier.prototype.solveCurveX = function (x, epsilon) {\n    if (typeof epsilon === 'undefined')\n        { epsilon = 0.000001; }\n    var t0, t1, t2, x2, i;\n    // First try a few iterations of Newton's method -- normally very fast.\n    for (t2 = x, i = 0; i < 8; i++) {\n        x2 = this.sampleCurveX(t2) - x;\n        if (Math.abs(x2) < epsilon)\n            { return t2; }\n        var d2 = this.sampleCurveDerivativeX(t2);\n        if (Math.abs(d2) < 0.000001)\n            { break; }\n        t2 = t2 - x2 / d2;\n    }\n    // Fall back to the bisection method for reliability.\n    t0 = 0;\n    t1 = 1;\n    t2 = x;\n    if (t2 < t0)\n        { return t0; }\n    if (t2 > t1)\n        { return t1; }\n    while (t0 < t1) {\n        x2 = this.sampleCurveX(t2);\n        if (Math.abs(x2 - x) < epsilon)\n            { return t2; }\n        if (x > x2) {\n            t0 = t2;\n        } else {\n            t1 = t2;\n        }\n        t2 = (t1 - t0) * 0.5 + t0;\n    }\n    // Failure.\n    return t2;\n};\nUnitBezier.prototype.solve = function (x, epsilon) {\n    return this.sampleCurveY(this.solveCurveX(x, epsilon));\n};\n\n//      \nfunction number(a, b, t) {\n    return a * (1 - t) + b * t;\n}\nfunction color(from, to, t) {\n    return new Color$1(number(from.r, to.r, t), number(from.g, to.g, t), number(from.b, to.b, t), number(from.a, to.a, t));\n}\nfunction array(from, to, t) {\n    return from.map(function (d, i) {\n        return number(d, to[i], t);\n    });\n}\n\nvar interpolate = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  number: number,\n  color: color,\n  array: array\n});\n\n//      \n// Constants\nvar Xn = 0.95047,\n    // D65 standard referent\n    Yn = 1, Zn = 1.08883, t0 = 4 / 29, t1 = 6 / 29, t2 = 3 * t1 * t1, t3 = t1 * t1 * t1, deg2rad$1 = Math.PI / 180, rad2deg = 180 / Math.PI;\n// Utilities\nfunction xyz2lab(t) {\n    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\nfunction lab2xyz(t) {\n    return t > t1 ? t * t * t : t2 * (t - t0);\n}\nfunction xyz2rgb(x) {\n    return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\nfunction rgb2xyz(x) {\n    x /= 255;\n    return x <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n// LAB\nfunction rgbToLab(rgbColor) {\n    var b = rgb2xyz(rgbColor.r), a = rgb2xyz(rgbColor.g), l = rgb2xyz(rgbColor.b), x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn), y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.072175 * l) / Yn), z = xyz2lab((0.0193339 * b + 0.119192 * a + 0.9503041 * l) / Zn);\n    return {\n        l: 116 * y - 16,\n        a: 500 * (x - y),\n        b: 200 * (y - z),\n        alpha: rgbColor.a\n    };\n}\nfunction labToRgb(labColor) {\n    var y = (labColor.l + 16) / 116, x = isNaN(labColor.a) ? y : y + labColor.a / 500, z = isNaN(labColor.b) ? y : y - labColor.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Color$1(xyz2rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n    xyz2rgb(-0.969266 * x + 1.8760108 * y + 0.041556 * z), xyz2rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z), labColor.alpha);\n}\nfunction interpolateLab(from, to, t) {\n    return {\n        l: number(from.l, to.l, t),\n        a: number(from.a, to.a, t),\n        b: number(from.b, to.b, t),\n        alpha: number(from.alpha, to.alpha, t)\n    };\n}\n// HCL\nfunction rgbToHcl(rgbColor) {\n    var ref = rgbToLab(rgbColor);\n    var l = ref.l;\n    var a = ref.a;\n    var b = ref.b;\n    var h = Math.atan2(b, a) * rad2deg;\n    return {\n        h: h < 0 ? h + 360 : h,\n        c: Math.sqrt(a * a + b * b),\n        l: l,\n        alpha: rgbColor.a\n    };\n}\nfunction hclToRgb(hclColor) {\n    var h = hclColor.h * deg2rad$1, c = hclColor.c, l = hclColor.l;\n    return labToRgb({\n        l: l,\n        a: Math.cos(h) * c,\n        b: Math.sin(h) * c,\n        alpha: hclColor.alpha\n    });\n}\nfunction interpolateHue(a, b, t) {\n    var d = b - a;\n    return a + t * (d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d);\n}\nfunction interpolateHcl(from, to, t) {\n    return {\n        h: interpolateHue(from.h, to.h, t),\n        c: number(from.c, to.c, t),\n        l: number(from.l, to.l, t),\n        alpha: number(from.alpha, to.alpha, t)\n    };\n}\nvar lab = {\n    forward: rgbToLab,\n    reverse: labToRgb,\n    interpolate: interpolateLab\n};\nvar hcl = {\n    forward: rgbToHcl,\n    reverse: hclToRgb,\n    interpolate: interpolateHcl\n};\n\n//      \nvar Interpolate = function Interpolate(type, operator, interpolation, input, stops) {\n    this.type = type;\n    this.operator = operator;\n    this.interpolation = interpolation;\n    this.input = input;\n    this.labels = [];\n    this.outputs = [];\n    for (var i = 0, list = stops; i < list.length; i += 1) {\n        var ref = list[i];\n        var label = ref[0];\n        var expression = ref[1];\n\n        this.labels.push(label);\n        this.outputs.push(expression);\n    }\n};\nInterpolate.interpolationFactor = function interpolationFactor (interpolation, input, lower, upper) {\n    var t = 0;\n    if (interpolation.name === 'exponential') {\n        t = exponentialInterpolation(input, interpolation.base, lower, upper);\n    } else if (interpolation.name === 'linear') {\n        t = exponentialInterpolation(input, 1, lower, upper);\n    } else if (interpolation.name === 'cubic-bezier') {\n        var c = interpolation.controlPoints;\n        var ub = new unitbezier(c[0], c[1], c[2], c[3]);\n        t = ub.solve(exponentialInterpolation(input, 1, lower, upper));\n    }\n    return t;\n};\nInterpolate.parse = function parse (args, context) {\n    var operator = args[0];\n        var interpolation = args[1];\n        var input = args[2];\n        var rest = args.slice(3);\n    if (!Array.isArray(interpolation) || interpolation.length === 0) {\n        return context.error(\"Expected an interpolation type expression.\", 1);\n    }\n    if (interpolation[0] === 'linear') {\n        interpolation = { name: 'linear' };\n    } else if (interpolation[0] === 'exponential') {\n        var base = interpolation[1];\n        if (typeof base !== 'number')\n            { return context.error(\"Exponential interpolation requires a numeric base.\", 1, 1); }\n        interpolation = {\n            name: 'exponential',\n            base: base\n        };\n    } else if (interpolation[0] === 'cubic-bezier') {\n        var controlPoints = interpolation.slice(1);\n        if (controlPoints.length !== 4 || controlPoints.some(function (t) { return typeof t !== 'number' || t < 0 || t > 1; })) {\n            return context.error('Cubic bezier interpolation requires four numeric arguments with values between 0 and 1.', 1);\n        }\n        interpolation = {\n            name: 'cubic-bezier',\n            controlPoints: controlPoints\n        };\n    } else {\n        return context.error((\"Unknown interpolation type \" + (String(interpolation[0]))), 1, 0);\n    }\n    if (args.length - 1 < 4) {\n        return context.error((\"Expected at least 4 arguments, but found only \" + (args.length - 1) + \".\"));\n    }\n    if ((args.length - 1) % 2 !== 0) {\n        return context.error(\"Expected an even number of arguments.\");\n    }\n    input = context.parse(input, 2, NumberType);\n    if (!input)\n        { return null; }\n    var stops = [];\n    var outputType = null;\n    if (operator === 'interpolate-hcl' || operator === 'interpolate-lab') {\n        outputType = ColorType;\n    } else if (context.expectedType && context.expectedType.kind !== 'value') {\n        outputType = context.expectedType;\n    }\n    for (var i = 0; i < rest.length; i += 2) {\n        var label = rest[i];\n        var value = rest[i + 1];\n        var labelKey = i + 3;\n        var valueKey = i + 4;\n        if (typeof label !== 'number') {\n            return context.error('Input/output pairs for \"interpolate\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n        }\n        if (stops.length && stops[stops.length - 1][0] >= label) {\n            return context.error('Input/output pairs for \"interpolate\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n        }\n        var parsed = context.parse(value, valueKey, outputType);\n        if (!parsed)\n            { return null; }\n        outputType = outputType || parsed.type;\n        stops.push([\n            label,\n            parsed\n        ]);\n    }\n    if (outputType.kind !== 'number' && outputType.kind !== 'color' && !(outputType.kind === 'array' && outputType.itemType.kind === 'number' && typeof outputType.N === 'number')) {\n        return context.error((\"Type \" + (toString$1(outputType)) + \" is not interpolatable.\"));\n    }\n    return new Interpolate(outputType, operator, interpolation, input, stops);\n};\nInterpolate.prototype.evaluate = function evaluate (ctx) {\n    var labels = this.labels;\n    var outputs = this.outputs;\n    if (labels.length === 1) {\n        return outputs[0].evaluate(ctx);\n    }\n    var value = this.input.evaluate(ctx);\n    if (value <= labels[0]) {\n        return outputs[0].evaluate(ctx);\n    }\n    var stopCount = labels.length;\n    if (value >= labels[stopCount - 1]) {\n        return outputs[stopCount - 1].evaluate(ctx);\n    }\n    var index = findStopLessThanOrEqualTo(labels, value);\n    var lower = labels[index];\n    var upper = labels[index + 1];\n    var t = Interpolate.interpolationFactor(this.interpolation, value, lower, upper);\n    var outputLower = outputs[index].evaluate(ctx);\n    var outputUpper = outputs[index + 1].evaluate(ctx);\n    if (this.operator === 'interpolate') {\n        return interpolate[this.type.kind.toLowerCase()](outputLower, outputUpper, t);// eslint-disable-line import/namespace\n    } else if (this.operator === 'interpolate-hcl') {\n        return hcl.reverse(hcl.interpolate(hcl.forward(outputLower), hcl.forward(outputUpper), t));\n    } else {\n        return lab.reverse(lab.interpolate(lab.forward(outputLower), lab.forward(outputUpper), t));\n    }\n};\nInterpolate.prototype.eachChild = function eachChild (fn) {\n    fn(this.input);\n    for (var i = 0, list = this.outputs; i < list.length; i += 1) {\n        var expression = list[i];\n\n            fn(expression);\n    }\n};\nInterpolate.prototype.outputDefined = function outputDefined () {\n    return this.outputs.every(function (out) { return out.outputDefined(); });\n};\nInterpolate.prototype.serialize = function serialize () {\n    var interpolation;\n    if (this.interpolation.name === 'linear') {\n        interpolation = ['linear'];\n    } else if (this.interpolation.name === 'exponential') {\n        if (this.interpolation.base === 1) {\n            interpolation = ['linear'];\n        } else {\n            interpolation = [\n                'exponential',\n                this.interpolation.base\n            ];\n        }\n    } else {\n        interpolation = ['cubic-bezier'].concat(this.interpolation.controlPoints);\n    }\n    var serialized = [\n        this.operator,\n        interpolation,\n        this.input.serialize()\n    ];\n    for (var i = 0; i < this.labels.length; i++) {\n        serialized.push(this.labels[i], this.outputs[i].serialize());\n    }\n    return serialized;\n};\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n * How it works: Two consecutive stop values define a (scaled and shifted) exponential function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n*/\nfunction exponentialInterpolation(input, base, lowerValue, upperValue) {\n    var difference = upperValue - lowerValue;\n    var progress = input - lowerValue;\n    if (difference === 0) {\n        return 0;\n    } else if (base === 1) {\n        return progress / difference;\n    } else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\nvar Interpolate$1 = Interpolate;\n\nvar Coalesce = function Coalesce(type, args) {\n    this.type = type;\n    this.args = args;\n};\nCoalesce.parse = function parse (args, context) {\n    if (args.length < 2) {\n        return context.error('Expectected at least one argument.');\n    }\n    var outputType = null;\n    var expectedType = context.expectedType;\n    if (expectedType && expectedType.kind !== 'value') {\n        outputType = expectedType;\n    }\n    var parsedArgs = [];\n    for (var i = 0, list = args.slice(1); i < list.length; i += 1) {\n        var arg = list[i];\n\n            var parsed = context.parse(arg, 1 + parsedArgs.length, outputType, undefined, { typeAnnotation: 'omit' });\n        if (!parsed)\n            { return null; }\n        outputType = outputType || parsed.type;\n        parsedArgs.push(parsed);\n    }\n    // Above, we parse arguments without inferred type annotation so that\n    // they don't produce a runtime error for `null` input, which would\n    // preempt the desired null-coalescing behavior.\n    // Thus, if any of our arguments would have needed an annotation, we\n    // need to wrap the enclosing coalesce expression with it instead.\n    var needsAnnotation = expectedType && parsedArgs.some(function (arg) { return checkSubtype(expectedType, arg.type); });\n    return needsAnnotation ? new Coalesce(ValueType, parsedArgs) : new Coalesce(outputType, parsedArgs);\n};\nCoalesce.prototype.evaluate = function evaluate (ctx) {\n    var result = null;\n    var argCount = 0;\n    var firstImage;\n    for (var i = 0, list = this.args; i < list.length; i += 1) {\n        var arg = list[i];\n\n            argCount++;\n        result = arg.evaluate(ctx);\n        // we need to keep track of the first requested image in a coalesce statement\n        // if coalesce can't find a valid image, we return the first image so styleimagemissing can fire\n        if (result && result instanceof ResolvedImage$1 && !result.available) {\n            // set to first image\n            if (!firstImage) {\n                firstImage = result;\n            }\n            result = null;\n            // if we reach the end, return the first image\n            if (argCount === this.args.length) {\n                return firstImage;\n            }\n        }\n        if (result !== null)\n            { break; }\n    }\n    return result;\n};\nCoalesce.prototype.eachChild = function eachChild (fn) {\n    this.args.forEach(fn);\n};\nCoalesce.prototype.outputDefined = function outputDefined () {\n    return this.args.every(function (arg) { return arg.outputDefined(); });\n};\nCoalesce.prototype.serialize = function serialize () {\n    var serialized = ['coalesce'];\n    this.eachChild(function (child) {\n        serialized.push(child.serialize());\n    });\n    return serialized;\n};\nvar Coalesce$1 = Coalesce;\n\n//      \nvar Let = function Let(bindings, result) {\n    this.type = result.type;\n    this.bindings = [].concat(bindings);\n    this.result = result;\n};\nLet.prototype.evaluate = function evaluate (ctx) {\n    return this.result.evaluate(ctx);\n};\nLet.prototype.eachChild = function eachChild (fn) {\n    for (var i = 0, list = this.bindings; i < list.length; i += 1) {\n        var binding = list[i];\n\n            fn(binding[1]);\n    }\n    fn(this.result);\n};\nLet.parse = function parse (args, context) {\n    if (args.length < 4)\n        { return context.error((\"Expected at least 3 arguments, but found \" + (args.length - 1) + \" instead.\")); }\n    var bindings = [];\n    for (var i = 1; i < args.length - 1; i += 2) {\n        var name = args[i];\n        if (typeof name !== 'string') {\n            return context.error((\"Expected string, but found \" + (typeof name) + \" instead.\"), i);\n        }\n        if (/[^a-zA-Z0-9_]/.test(name)) {\n            return context.error(\"Variable names must contain only alphanumeric characters or '_'.\", i);\n        }\n        var value = context.parse(args[i + 1], i + 1);\n        if (!value)\n            { return null; }\n        bindings.push([\n            name,\n            value\n        ]);\n    }\n    var result = context.parse(args[args.length - 1], args.length - 1, context.expectedType, bindings);\n    if (!result)\n        { return null; }\n    return new Let(bindings, result);\n};\nLet.prototype.outputDefined = function outputDefined () {\n    return this.result.outputDefined();\n};\nLet.prototype.serialize = function serialize () {\n    var serialized = ['let'];\n    for (var i = 0, list = this.bindings; i < list.length; i += 1) {\n        var ref = list[i];\n            var name = ref[0];\n            var expr = ref[1];\n\n            serialized.push(name, expr.serialize());\n    }\n    serialized.push(this.result.serialize());\n    return serialized;\n};\nvar Let$1 = Let;\n\n//      \nvar At = function At(type, index, input) {\n    this.type = type;\n    this.index = index;\n    this.input = input;\n};\nAt.parse = function parse (args, context) {\n    if (args.length !== 3)\n        { return context.error((\"Expected 2 arguments, but found \" + (args.length - 1) + \" instead.\")); }\n    var index = context.parse(args[1], 1, NumberType);\n    var input = context.parse(args[2], 2, array$1(context.expectedType || ValueType));\n    if (!index || !input)\n        { return null; }\n    var t = input.type;\n    return new At(t.itemType, index, input);\n};\nAt.prototype.evaluate = function evaluate (ctx) {\n    var index = this.index.evaluate(ctx);\n    var array = this.input.evaluate(ctx);\n    if (index < 0) {\n        throw new RuntimeError$1((\"Array index out of bounds: \" + index + \" < 0.\"));\n    }\n    if (index >= array.length) {\n        throw new RuntimeError$1((\"Array index out of bounds: \" + index + \" > \" + (array.length - 1) + \".\"));\n    }\n    if (index !== Math.floor(index)) {\n        throw new RuntimeError$1((\"Array index must be an integer, but found \" + index + \" instead.\"));\n    }\n    return array[index];\n};\nAt.prototype.eachChild = function eachChild (fn) {\n    fn(this.index);\n    fn(this.input);\n};\nAt.prototype.outputDefined = function outputDefined () {\n    return false;\n};\nAt.prototype.serialize = function serialize () {\n    return [\n        'at',\n        this.index.serialize(),\n        this.input.serialize()\n    ];\n};\nvar At$1 = At;\n\n//      \nvar In = function In(needle, haystack) {\n    this.type = BooleanType;\n    this.needle = needle;\n    this.haystack = haystack;\n};\nIn.parse = function parse (args, context) {\n    if (args.length !== 3) {\n        return context.error((\"Expected 2 arguments, but found \" + (args.length - 1) + \" instead.\"));\n    }\n    var needle = context.parse(args[1], 1, ValueType);\n    var haystack = context.parse(args[2], 2, ValueType);\n    if (!needle || !haystack)\n        { return null; }\n    if (!isValidType(needle.type, [\n            BooleanType,\n            StringType,\n            NumberType,\n            NullType,\n            ValueType\n        ])) {\n        return context.error((\"Expected first argument to be of type boolean, string, number or null, but found \" + (toString$1(needle.type)) + \" instead\"));\n    }\n    return new In(needle, haystack);\n};\nIn.prototype.evaluate = function evaluate (ctx) {\n    var needle = this.needle.evaluate(ctx);\n    var haystack = this.haystack.evaluate(ctx);\n    if (haystack == null)\n        { return false; }\n    if (!isValidNativeType(needle, [\n            'boolean',\n            'string',\n            'number',\n            'null'\n        ])) {\n        throw new RuntimeError$1((\"Expected first argument to be of type boolean, string, number or null, but found \" + (toString$1(typeOf(needle))) + \" instead.\"));\n    }\n    if (!isValidNativeType(haystack, [\n            'string',\n            'array'\n        ])) {\n        throw new RuntimeError$1((\"Expected second argument to be of type array or string, but found \" + (toString$1(typeOf(haystack))) + \" instead.\"));\n    }\n    return haystack.indexOf(needle) >= 0;\n};\nIn.prototype.eachChild = function eachChild (fn) {\n    fn(this.needle);\n    fn(this.haystack);\n};\nIn.prototype.outputDefined = function outputDefined () {\n    return true;\n};\nIn.prototype.serialize = function serialize () {\n    return [\n        'in',\n        this.needle.serialize(),\n        this.haystack.serialize()\n    ];\n};\nvar In$1 = In;\n\n//      \nvar IndexOf = function IndexOf(needle, haystack, fromIndex) {\n    this.type = NumberType;\n    this.needle = needle;\n    this.haystack = haystack;\n    this.fromIndex = fromIndex;\n};\nIndexOf.parse = function parse (args, context) {\n    if (args.length <= 2 || args.length >= 5) {\n        return context.error((\"Expected 3 or 4 arguments, but found \" + (args.length - 1) + \" instead.\"));\n    }\n    var needle = context.parse(args[1], 1, ValueType);\n    var haystack = context.parse(args[2], 2, ValueType);\n    if (!needle || !haystack)\n        { return null; }\n    if (!isValidType(needle.type, [\n            BooleanType,\n            StringType,\n            NumberType,\n            NullType,\n            ValueType\n        ])) {\n        return context.error((\"Expected first argument to be of type boolean, string, number or null, but found \" + (toString$1(needle.type)) + \" instead\"));\n    }\n    if (args.length === 4) {\n        var fromIndex = context.parse(args[3], 3, NumberType);\n        if (!fromIndex)\n            { return null; }\n        return new IndexOf(needle, haystack, fromIndex);\n    } else {\n        return new IndexOf(needle, haystack);\n    }\n};\nIndexOf.prototype.evaluate = function evaluate (ctx) {\n    var needle = this.needle.evaluate(ctx);\n    var haystack = this.haystack.evaluate(ctx);\n    if (!isValidNativeType(needle, [\n            'boolean',\n            'string',\n            'number',\n            'null'\n        ])) {\n        throw new RuntimeError$1((\"Expected first argument to be of type boolean, string, number or null, but found \" + (toString$1(typeOf(needle))) + \" instead.\"));\n    }\n    if (!isValidNativeType(haystack, [\n            'string',\n            'array'\n        ])) {\n        throw new RuntimeError$1((\"Expected second argument to be of type array or string, but found \" + (toString$1(typeOf(haystack))) + \" instead.\"));\n    }\n    if (this.fromIndex) {\n        var fromIndex = this.fromIndex.evaluate(ctx);\n        return haystack.indexOf(needle, fromIndex);\n    }\n    return haystack.indexOf(needle);\n};\nIndexOf.prototype.eachChild = function eachChild (fn) {\n    fn(this.needle);\n    fn(this.haystack);\n    if (this.fromIndex) {\n        fn(this.fromIndex);\n    }\n};\nIndexOf.prototype.outputDefined = function outputDefined () {\n    return false;\n};\nIndexOf.prototype.serialize = function serialize () {\n    if (this.fromIndex != null && this.fromIndex !== undefined) {\n        var fromIndex = this.fromIndex.serialize();\n        return [\n            'index-of',\n            this.needle.serialize(),\n            this.haystack.serialize(),\n            fromIndex\n        ];\n    }\n    return [\n        'index-of',\n        this.needle.serialize(),\n        this.haystack.serialize()\n    ];\n};\nvar IndexOf$1 = IndexOf;\n\n// Map input label values to output expression index\nvar Match = function Match(inputType, outputType, input, cases, outputs, otherwise) {\n    this.inputType = inputType;\n    this.type = outputType;\n    this.input = input;\n    this.cases = cases;\n    this.outputs = outputs;\n    this.otherwise = otherwise;\n};\nMatch.parse = function parse (args, context) {\n    if (args.length < 5)\n        { return context.error((\"Expected at least 4 arguments, but found only \" + (args.length - 1) + \".\")); }\n    if (args.length % 2 !== 1)\n        { return context.error(\"Expected an even number of arguments.\"); }\n    var inputType;\n    var outputType;\n    if (context.expectedType && context.expectedType.kind !== 'value') {\n        outputType = context.expectedType;\n    }\n    var cases = {};\n    var outputs = [];\n    for (var i = 2; i < args.length - 1; i += 2) {\n        var labels = args[i];\n        var value = args[i + 1];\n        if (!Array.isArray(labels)) {\n            labels = [labels];\n        }\n        var labelContext = context.concat(i);\n        if (labels.length === 0) {\n            return labelContext.error('Expected at least one branch label.');\n        }\n        for (var i$1 = 0, list = labels; i$1 < list.length; i$1 += 1) {\n            var label = list[i$1];\n\n                if (typeof label !== 'number' && typeof label !== 'string') {\n                return labelContext.error(\"Branch labels must be numbers or strings.\");\n            } else if (typeof label === 'number' && Math.abs(label) > Number.MAX_SAFE_INTEGER) {\n                return labelContext.error((\"Branch labels must be integers no larger than \" + (Number.MAX_SAFE_INTEGER) + \".\"));\n            } else if (typeof label === 'number' && Math.floor(label) !== label) {\n                return labelContext.error(\"Numeric branch labels must be integer values.\");\n            } else if (!inputType) {\n                inputType = typeOf(label);\n            } else if (labelContext.checkSubtype(inputType, typeOf(label))) {\n                return null;\n            }\n            if (typeof cases[String(label)] !== 'undefined') {\n                return labelContext.error('Branch labels must be unique.');\n            }\n            cases[String(label)] = outputs.length;\n        }\n        var result = context.parse(value, i, outputType);\n        if (!result)\n            { return null; }\n        outputType = outputType || result.type;\n        outputs.push(result);\n    }\n    var input = context.parse(args[1], 1, ValueType);\n    if (!input)\n        { return null; }\n    var otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n    if (!otherwise)\n        { return null; }\n    if (input.type.kind !== 'value' && context.concat(1).checkSubtype(inputType, input.type)) {\n        return null;\n    }\n    return new Match(inputType, outputType, input, cases, outputs, otherwise);\n};\nMatch.prototype.evaluate = function evaluate (ctx) {\n    var input = this.input.evaluate(ctx);\n    var output = typeOf(input) === this.inputType && this.outputs[this.cases[input]] || this.otherwise;\n    return output.evaluate(ctx);\n};\nMatch.prototype.eachChild = function eachChild (fn) {\n    fn(this.input);\n    this.outputs.forEach(fn);\n    fn(this.otherwise);\n};\nMatch.prototype.outputDefined = function outputDefined () {\n    return this.outputs.every(function (out) { return out.outputDefined(); }) && this.otherwise.outputDefined();\n};\nMatch.prototype.serialize = function serialize () {\n        var this$1$1 = this;\n\n    var serialized = [\n        'match',\n        this.input.serialize()\n    ];\n    // Sort so serialization has an arbitrary defined order, even though\n    // branch order doesn't affect evaluation\n    var sortedLabels = Object.keys(this.cases).sort();\n    // Group branches by unique match expression to support condensed\n    // serializations of the form [case1, case2, ...] -> matchExpression\n    var groupedByOutput = [];\n    var outputLookup = {};\n    // lookup index into groupedByOutput for a given output expression\n    for (var i = 0, list = sortedLabels; i < list.length; i += 1) {\n        var label = list[i];\n\n            var outputIndex = outputLookup[this.cases[label]];\n        if (outputIndex === undefined) {\n            // First time seeing this output, add it to the end of the grouped list\n            outputLookup[this.cases[label]] = groupedByOutput.length;\n            groupedByOutput.push([\n                this.cases[label],\n                [label]\n            ]);\n        } else {\n            // We've seen this expression before, add the label to that output's group\n            groupedByOutput[outputIndex][1].push(label);\n        }\n    }\n    var coerceLabel = function (label) { return this$1$1.inputType.kind === 'number' ? Number(label) : label; };\n    for (var i$1 = 0, list$1 = groupedByOutput; i$1 < list$1.length; i$1 += 1) {\n        var ref = list$1[i$1];\n            var outputIndex = ref[0];\n            var labels = ref[1];\n\n            if (labels.length === 1) {\n            // Only a single label matches this output expression\n            serialized.push(coerceLabel(labels[0]));\n        } else {\n            // Array of literal labels pointing to this output expression\n            serialized.push(labels.map(coerceLabel));\n        }\n        serialized.push(this.outputs[outputIndex$1].serialize());\n    }\n    serialized.push(this.otherwise.serialize());\n    return serialized;\n};\nvar Match$1 = Match;\n\nvar Case = function Case(type, branches, otherwise) {\n    this.type = type;\n    this.branches = branches;\n    this.otherwise = otherwise;\n};\nCase.parse = function parse (args, context) {\n    if (args.length < 4)\n        { return context.error((\"Expected at least 3 arguments, but found only \" + (args.length - 1) + \".\")); }\n    if (args.length % 2 !== 0)\n        { return context.error(\"Expected an odd number of arguments.\"); }\n    var outputType;\n    if (context.expectedType && context.expectedType.kind !== 'value') {\n        outputType = context.expectedType;\n    }\n    var branches = [];\n    for (var i = 1; i < args.length - 1; i += 2) {\n        var test = context.parse(args[i], i, BooleanType);\n        if (!test)\n            { return null; }\n        var result = context.parse(args[i + 1], i + 1, outputType);\n        if (!result)\n            { return null; }\n        branches.push([\n            test,\n            result\n        ]);\n        outputType = outputType || result.type;\n    }\n    var otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n    if (!otherwise)\n        { return null; }\n    return new Case(outputType, branches, otherwise);\n};\nCase.prototype.evaluate = function evaluate (ctx) {\n    for (var i = 0, list = this.branches; i < list.length; i += 1) {\n        var ref = list[i];\n            var test = ref[0];\n            var expression = ref[1];\n\n            if (test.evaluate(ctx)) {\n            return expression.evaluate(ctx);\n        }\n    }\n    return this.otherwise.evaluate(ctx);\n};\nCase.prototype.eachChild = function eachChild (fn) {\n    for (var i = 0, list = this.branches; i < list.length; i += 1) {\n        var ref = list[i];\n            var test = ref[0];\n            var expression = ref[1];\n\n            fn(test);\n        fn(expression);\n    }\n    fn(this.otherwise);\n};\nCase.prototype.outputDefined = function outputDefined () {\n    return this.branches.every(function (ref) {\n            ref[0];\n            var out = ref[1];\n\n            return out.outputDefined();\n        }) && this.otherwise.outputDefined();\n};\nCase.prototype.serialize = function serialize () {\n    var serialized = ['case'];\n    this.eachChild(function (child) {\n        serialized.push(child.serialize());\n    });\n    return serialized;\n};\nvar Case$1 = Case;\n\n//      \nvar Slice = function Slice(type, input, beginIndex, endIndex) {\n    this.type = type;\n    this.input = input;\n    this.beginIndex = beginIndex;\n    this.endIndex = endIndex;\n};\nSlice.parse = function parse (args, context) {\n    if (args.length <= 2 || args.length >= 5) {\n        return context.error((\"Expected 3 or 4 arguments, but found \" + (args.length - 1) + \" instead.\"));\n    }\n    var input = context.parse(args[1], 1, ValueType);\n    var beginIndex = context.parse(args[2], 2, NumberType);\n    if (!input || !beginIndex)\n        { return null; }\n    if (!isValidType(input.type, [\n            array$1(ValueType),\n            StringType,\n            ValueType\n        ])) {\n        return context.error((\"Expected first argument to be of type array or string, but found \" + (toString$1(input.type)) + \" instead\"));\n    }\n    if (args.length === 4) {\n        var endIndex = context.parse(args[3], 3, NumberType);\n        if (!endIndex)\n            { return null; }\n        return new Slice(input.type, input, beginIndex, endIndex);\n    } else {\n        return new Slice(input.type, input, beginIndex);\n    }\n};\nSlice.prototype.evaluate = function evaluate (ctx) {\n    var input = this.input.evaluate(ctx);\n    var beginIndex = this.beginIndex.evaluate(ctx);\n    if (!isValidNativeType(input, [\n            'string',\n            'array'\n        ])) {\n        throw new RuntimeError$1((\"Expected first argument to be of type array or string, but found \" + (toString$1(typeOf(input))) + \" instead.\"));\n    }\n    if (this.endIndex) {\n        var endIndex = this.endIndex.evaluate(ctx);\n        return input.slice(beginIndex, endIndex);\n    }\n    return input.slice(beginIndex);\n};\nSlice.prototype.eachChild = function eachChild (fn) {\n    fn(this.input);\n    fn(this.beginIndex);\n    if (this.endIndex) {\n        fn(this.endIndex);\n    }\n};\nSlice.prototype.outputDefined = function outputDefined () {\n    return false;\n};\nSlice.prototype.serialize = function serialize () {\n    if (this.endIndex != null && this.endIndex !== undefined) {\n        var endIndex = this.endIndex.serialize();\n        return [\n            'slice',\n            this.input.serialize(),\n            this.beginIndex.serialize(),\n            endIndex\n        ];\n    }\n    return [\n        'slice',\n        this.input.serialize(),\n        this.beginIndex.serialize()\n    ];\n};\nvar Slice$1 = Slice;\n\n//      \nfunction isComparableType(op, type) {\n    if (op === '==' || op === '!=') {\n        // equality operator\n        return type.kind === 'boolean' || type.kind === 'string' || type.kind === 'number' || type.kind === 'null' || type.kind === 'value';\n    } else {\n        // ordering operator\n        return type.kind === 'string' || type.kind === 'number' || type.kind === 'value';\n    }\n}\nfunction eq(ctx, a, b) {\n    return a === b;\n}\nfunction neq(ctx, a, b) {\n    return a !== b;\n}\nfunction lt(ctx, a, b) {\n    return a < b;\n}\nfunction gt(ctx, a, b) {\n    return a > b;\n}\nfunction lteq(ctx, a, b) {\n    return a <= b;\n}\nfunction gteq(ctx, a, b) {\n    return a >= b;\n}\nfunction eqCollate(ctx, a, b, c) {\n    return c.compare(a, b) === 0;\n}\nfunction neqCollate(ctx, a, b, c) {\n    return !eqCollate(ctx, a, b, c);\n}\nfunction ltCollate(ctx, a, b, c) {\n    return c.compare(a, b) < 0;\n}\nfunction gtCollate(ctx, a, b, c) {\n    return c.compare(a, b) > 0;\n}\nfunction lteqCollate(ctx, a, b, c) {\n    return c.compare(a, b) <= 0;\n}\nfunction gteqCollate(ctx, a, b, c) {\n    return c.compare(a, b) >= 0;\n}\n/**\n * Special form for comparison operators, implementing the signatures:\n * - (T, T, ?Collator) => boolean\n * - (T, value, ?Collator) => boolean\n * - (value, T, ?Collator) => boolean\n *\n * For inequalities, T must be either value, string, or number. For ==/!=, it\n * can also be boolean or null.\n *\n * Equality semantics are equivalent to Javascript's strict equality (===/!==)\n * -- i.e., when the arguments' types don't match, == evaluates to false, != to\n * true.\n *\n * When types don't match in an ordering comparison, a runtime error is thrown.\n *\n * @private\n */\nfunction makeComparison(op, compareBasic, compareWithCollator) {\n    var isOrderComparison = op !== '==' && op !== '!=';\n    return /*@__PURE__*/(function () {\n        function Comparison(lhs, rhs, collator) {\n            this.type = BooleanType;\n            this.lhs = lhs;\n            this.rhs = rhs;\n            this.collator = collator;\n            this.hasUntypedArgument = lhs.type.kind === 'value' || rhs.type.kind === 'value';\n        }\n        Comparison.parse = function parse (args, context) {\n            if (args.length !== 3 && args.length !== 4)\n                { return context.error(\"Expected two or three arguments.\"); }\n            var op = args[0];\n            var lhs = context.parse(args[1], 1, ValueType);\n            if (!lhs)\n                { return null; }\n            if (!isComparableType(op, lhs.type)) {\n                return context.concat(1).error((\"\\\"\" + op + \"\\\" comparisons are not supported for type '\" + (toString$1(lhs.type)) + \"'.\"));\n            }\n            var rhs = context.parse(args[2], 2, ValueType);\n            if (!rhs)\n                { return null; }\n            if (!isComparableType(op, rhs.type)) {\n                return context.concat(2).error((\"\\\"\" + op + \"\\\" comparisons are not supported for type '\" + (toString$1(rhs.type)) + \"'.\"));\n            }\n            if (lhs.type.kind !== rhs.type.kind && lhs.type.kind !== 'value' && rhs.type.kind !== 'value') {\n                return context.error((\"Cannot compare types '\" + (toString$1(lhs.type)) + \"' and '\" + (toString$1(rhs.type)) + \"'.\"));\n            }\n            if (isOrderComparison) {\n                // typing rules specific to less/greater than operators\n                if (lhs.type.kind === 'value' && rhs.type.kind !== 'value') {\n                    // (value, T)\n                    lhs = new Assertion$1(rhs.type, [lhs]);\n                } else if (lhs.type.kind !== 'value' && rhs.type.kind === 'value') {\n                    // (T, value)\n                    rhs = new Assertion$1(lhs.type, [rhs]);\n                }\n            }\n            var collator = null;\n            if (args.length === 4) {\n                if (lhs.type.kind !== 'string' && rhs.type.kind !== 'string' && lhs.type.kind !== 'value' && rhs.type.kind !== 'value') {\n                    return context.error(\"Cannot use collator to compare non-string types.\");\n                }\n                collator = context.parse(args[3], 3, CollatorType);\n                if (!collator)\n                    { return null; }\n            }\n            return new Comparison(lhs, rhs, collator);\n        };\n        Comparison.prototype.evaluate = function evaluate (ctx) {\n            var lhs = this.lhs.evaluate(ctx);\n            var rhs = this.rhs.evaluate(ctx);\n            if (isOrderComparison && this.hasUntypedArgument) {\n                var lt = typeOf(lhs);\n                var rt = typeOf(rhs);\n                // check that type is string or number, and equal\n                if (lt.kind !== rt.kind || !(lt.kind === 'string' || lt.kind === 'number')) {\n                    throw new RuntimeError$1((\"Expected arguments for \\\"\" + op + \"\\\" to be (string, string) or (number, number), but found (\" + (lt.kind) + \", \" + (rt.kind) + \") instead.\"));\n                }\n            }\n            if (this.collator && !isOrderComparison && this.hasUntypedArgument) {\n                var lt$1 = typeOf(lhs);\n                var rt$1 = typeOf(rhs);\n                if (lt$1.kind !== 'string' || rt$1.kind !== 'string') {\n                    return compareBasic(ctx, lhs, rhs);\n                }\n            }\n            return this.collator ? compareWithCollator(ctx, lhs, rhs, this.collator.evaluate(ctx)) : compareBasic(ctx, lhs, rhs);\n        };\n        Comparison.prototype.eachChild = function eachChild (fn) {\n            fn(this.lhs);\n            fn(this.rhs);\n            if (this.collator) {\n                fn(this.collator);\n            }\n        };\n        Comparison.prototype.outputDefined = function outputDefined () {\n            return true;\n        };\n        Comparison.prototype.serialize = function serialize () {\n            var serialized = [op];\n            this.eachChild(function (child) {\n                serialized.push(child.serialize());\n            });\n            return serialized;\n        };\n\n        return Comparison;\n    }());\n}\nvar Equals = makeComparison('==', eq, eqCollate);\nvar NotEquals = makeComparison('!=', neq, neqCollate);\nvar LessThan = makeComparison('<', lt, ltCollate);\nvar GreaterThan = makeComparison('>', gt, gtCollate);\nvar LessThanOrEqual = makeComparison('<=', lteq, lteqCollate);\nvar GreaterThanOrEqual = makeComparison('>=', gteq, gteqCollate);\n\n//      \nvar NumberFormat = function NumberFormat(number, locale, currency, unit, minFractionDigits, maxFractionDigits) {\n    this.type = StringType;\n    this.number = number;\n    this.locale = locale;\n    this.currency = currency;\n    this.unit = unit;\n    this.minFractionDigits = minFractionDigits;\n    this.maxFractionDigits = maxFractionDigits;\n};\nNumberFormat.parse = function parse (args, context) {\n    if (args.length !== 3)\n        { return context.error(\"Expected two arguments.\"); }\n    var number = context.parse(args[1], 1, NumberType);\n    if (!number)\n        { return null; }\n    var options = args[2];\n    if (typeof options !== 'object' || Array.isArray(options))\n        { return context.error(\"NumberFormat options argument must be an object.\"); }\n    var locale = null;\n    if (options['locale']) {\n        locale = context.parse(options['locale'], 1, StringType);\n        if (!locale)\n            { return null; }\n    }\n    var currency = null;\n    if (options['currency']) {\n        currency = context.parse(options['currency'], 1, StringType);\n        if (!currency)\n            { return null; }\n    }\n    var unit = null;\n    if (options['unit']) {\n        unit = context.parse(options['unit'], 1, StringType);\n        if (!unit)\n            { return null; }\n    }\n    var minFractionDigits = null;\n    if (options['min-fraction-digits']) {\n        minFractionDigits = context.parse(options['min-fraction-digits'], 1, NumberType);\n        if (!minFractionDigits)\n            { return null; }\n    }\n    var maxFractionDigits = null;\n    if (options['max-fraction-digits']) {\n        maxFractionDigits = context.parse(options['max-fraction-digits'], 1, NumberType);\n        if (!maxFractionDigits)\n            { return null; }\n    }\n    return new NumberFormat(number, locale, currency, unit, minFractionDigits, maxFractionDigits);\n};\nNumberFormat.prototype.evaluate = function evaluate (ctx) {\n    return new Intl.NumberFormat(this.locale ? this.locale.evaluate(ctx) : [], {\n        style: this.currency && 'currency' || this.unit && 'unit' || 'decimal',\n        currency: this.currency ? this.currency.evaluate(ctx) : undefined,\n        unit: this.unit ? this.unit.evaluate(ctx) : undefined,\n        minimumFractionDigits: this.minFractionDigits ? this.minFractionDigits.evaluate(ctx) : undefined,\n        maximumFractionDigits: this.maxFractionDigits ? this.maxFractionDigits.evaluate(ctx) : undefined\n    }).format(this.number.evaluate(ctx));\n};\nNumberFormat.prototype.eachChild = function eachChild (fn) {\n    fn(this.number);\n    if (this.locale) {\n        fn(this.locale);\n    }\n    if (this.currency) {\n        fn(this.currency);\n    }\n    if (this.unit) {\n        fn(this.unit);\n    }\n    if (this.minFractionDigits) {\n        fn(this.minFractionDigits);\n    }\n    if (this.maxFractionDigits) {\n        fn(this.maxFractionDigits);\n    }\n};\nNumberFormat.prototype.outputDefined = function outputDefined () {\n    return false;\n};\nNumberFormat.prototype.serialize = function serialize () {\n    var options = {};\n    if (this.locale) {\n        options['locale'] = this.locale.serialize();\n    }\n    if (this.currency) {\n        options['currency'] = this.currency.serialize();\n    }\n    if (this.unit) {\n        options['unit'] = this.unit.serialize();\n    }\n    if (this.minFractionDigits) {\n        options['min-fraction-digits'] = this.minFractionDigits.serialize();\n    }\n    if (this.maxFractionDigits) {\n        options['max-fraction-digits'] = this.maxFractionDigits.serialize();\n    }\n    return [\n        'number-format',\n        this.number.serialize(),\n        options\n    ];\n};\n\nvar NumberFormat$1 = NumberFormat;\n\n//      \nvar Length = function Length(input) {\n    this.type = NumberType;\n    this.input = input;\n};\nLength.parse = function parse (args, context) {\n    if (args.length !== 2)\n        { return context.error((\"Expected 1 argument, but found \" + (args.length - 1) + \" instead.\")); }\n    var input = context.parse(args[1], 1);\n    if (!input)\n        { return null; }\n    if (input.type.kind !== 'array' && input.type.kind !== 'string' && input.type.kind !== 'value')\n        { return context.error((\"Expected argument of type string or array, but found \" + (toString$1(input.type)) + \" instead.\")); }\n    return new Length(input);\n};\nLength.prototype.evaluate = function evaluate (ctx) {\n    var input = this.input.evaluate(ctx);\n    if (typeof input === 'string') {\n        return input.length;\n    } else if (Array.isArray(input)) {\n        return input.length;\n    } else {\n        throw new RuntimeError$1((\"Expected value to be of type string or array, but found \" + (toString$1(typeOf(input))) + \" instead.\"));\n    }\n};\nLength.prototype.eachChild = function eachChild (fn) {\n    fn(this.input);\n};\nLength.prototype.outputDefined = function outputDefined () {\n    return false;\n};\nLength.prototype.serialize = function serialize () {\n    var serialized = ['length'];\n    this.eachChild(function (child) {\n        serialized.push(child.serialize());\n    });\n    return serialized;\n};\nvar Length$1 = Length;\n\n//      \nvar expressions = {\n    // special forms\n    '==': Equals,\n    '!=': NotEquals,\n    '>': GreaterThan,\n    '<': LessThan,\n    '>=': GreaterThanOrEqual,\n    '<=': LessThanOrEqual,\n    'array': Assertion$1,\n    'at': At$1,\n    'boolean': Assertion$1,\n    'case': Case$1,\n    'coalesce': Coalesce$1,\n    'collator': CollatorExpression$1,\n    'format': FormatExpression$1,\n    'image': ImageExpression$1,\n    'in': In$1,\n    'index-of': IndexOf$1,\n    'interpolate': Interpolate$1,\n    'interpolate-hcl': Interpolate$1,\n    'interpolate-lab': Interpolate$1,\n    'length': Length$1,\n    'let': Let$1,\n    'literal': Literal$1,\n    'match': Match$1,\n    'number': Assertion$1,\n    'number-format': NumberFormat$1,\n    'object': Assertion$1,\n    'slice': Slice$1,\n    'step': Step$1,\n    'string': Assertion$1,\n    'to-boolean': Coercion$1,\n    'to-color': Coercion$1,\n    'to-number': Coercion$1,\n    'to-string': Coercion$1,\n    'var': Var$1,\n    'within': Within$1\n};\nfunction rgba(ctx, ref) {\n    var r = ref[0];\n    var g = ref[1];\n    var b = ref[2];\n    var a = ref[3];\n\n    r = r.evaluate(ctx);\n    g = g.evaluate(ctx);\n    b = b.evaluate(ctx);\n    var alpha = a ? a.evaluate(ctx) : 1;\n    var error = validateRGBA(r, g, b, alpha);\n    if (error)\n        { throw new RuntimeError$1(error); }\n    return new Color$1(r / 255 * alpha, g / 255 * alpha, b / 255 * alpha, alpha);\n}\nfunction has(key, obj) {\n    return key in obj;\n}\nfunction get(key, obj) {\n    var v = obj[key];\n    return typeof v === 'undefined' ? null : v;\n}\nfunction binarySearch(v, a, i, j) {\n    while (i <= j) {\n        var m = i + j >> 1;\n        if (a[m] === v)\n            { return true; }\n        if (a[m] > v)\n            { j = m - 1; }\n        else\n            { i = m + 1; }\n    }\n    return false;\n}\nfunction varargs(type) {\n    return { type: type };\n}\nCompoundExpression$1.register(expressions, {\n    'error': [\n        ErrorType,\n        [StringType],\n        function (ctx, ref) {\n            var v = ref[0];\n\n            throw new RuntimeError$1(v.evaluate(ctx));\n        }\n    ],\n    'typeof': [\n        StringType,\n        [ValueType],\n        function (ctx, ref) {\n            var v = ref[0];\n\n            return toString$1(typeOf(v.evaluate(ctx)));\n}\n    ],\n    'to-rgba': [\n        array$1(NumberType, 4),\n        [ColorType],\n        function (ctx, ref) {\n            var v = ref[0];\n\n            return v.evaluate(ctx).toArray();\n        }\n    ],\n    'rgb': [\n        ColorType,\n        [\n            NumberType,\n            NumberType,\n            NumberType\n        ],\n        rgba\n    ],\n    'rgba': [\n        ColorType,\n        [\n            NumberType,\n            NumberType,\n            NumberType,\n            NumberType\n        ],\n        rgba\n    ],\n    'has': {\n        type: BooleanType,\n        overloads: [\n            [\n                [StringType],\n                function (ctx, ref) {\n                    var key = ref[0];\n\n                    return has(key.evaluate(ctx), ctx.properties());\n}\n            ],\n            [\n                [\n                    StringType,\n                    ObjectType\n                ],\n                function (ctx, ref) {\n                    var key = ref[0];\n                    var obj = ref[1];\n\n                    return has(key.evaluate(ctx), obj.evaluate(ctx));\n}\n            ]\n        ]\n    },\n    'get': {\n        type: ValueType,\n        overloads: [\n            [\n                [StringType],\n                function (ctx, ref) {\n                    var key = ref[0];\n\n                    return get(key.evaluate(ctx), ctx.properties());\n}\n            ],\n            [\n                [\n                    StringType,\n                    ObjectType\n                ],\n                function (ctx, ref) {\n                    var key = ref[0];\n                    var obj = ref[1];\n\n                    return get(key.evaluate(ctx), obj.evaluate(ctx));\n}\n            ]\n        ]\n    },\n    'feature-state': [\n        ValueType,\n        [StringType],\n        function (ctx, ref) {\n            var key = ref[0];\n\n            return get(key.evaluate(ctx), ctx.featureState || {});\n}\n    ],\n    'properties': [\n        ObjectType,\n        [],\n        function (ctx) { return ctx.properties(); }\n    ],\n    'geometry-type': [\n        StringType,\n        [],\n        function (ctx) { return ctx.geometryType(); }\n    ],\n    'id': [\n        ValueType,\n        [],\n        function (ctx) { return ctx.id(); }\n    ],\n    'zoom': [\n        NumberType,\n        [],\n        function (ctx) { return ctx.globals.zoom; }\n    ],\n    'pitch': [\n        NumberType,\n        [],\n        function (ctx) { return ctx.globals.pitch || 0; }\n    ],\n    'distance-from-center': [\n        NumberType,\n        [],\n        function (ctx) { return ctx.distanceFromCenter(); }\n    ],\n    'heatmap-density': [\n        NumberType,\n        [],\n        function (ctx) { return ctx.globals.heatmapDensity || 0; }\n    ],\n    'line-progress': [\n        NumberType,\n        [],\n        function (ctx) { return ctx.globals.lineProgress || 0; }\n    ],\n    'sky-radial-progress': [\n        NumberType,\n        [],\n        function (ctx) { return ctx.globals.skyRadialProgress || 0; }\n    ],\n    'accumulated': [\n        ValueType,\n        [],\n        function (ctx) { return ctx.globals.accumulated === undefined ? null : ctx.globals.accumulated; }\n    ],\n    '+': [\n        NumberType,\n        varargs(NumberType),\n        function (ctx, args) {\n            var result = 0;\n            for (var i = 0, list = args; i < list.length; i += 1) {\n                var arg = list[i];\n\n                result += arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '*': [\n        NumberType,\n        varargs(NumberType),\n        function (ctx, args) {\n            var result = 1;\n            for (var i = 0, list = args; i < list.length; i += 1) {\n                var arg = list[i];\n\n                result *= arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '-': {\n        type: NumberType,\n        overloads: [\n            [\n                [\n                    NumberType,\n                    NumberType\n                ],\n                function (ctx, ref) {\n                    var a = ref[0];\n                    var b = ref[1];\n\n                    return a.evaluate(ctx) - b.evaluate(ctx);\n}\n            ],\n            [\n                [NumberType],\n                function (ctx, ref) {\n                    var a = ref[0];\n\n                    return -a.evaluate(ctx);\n}\n            ]\n        ]\n    },\n    '/': [\n        NumberType,\n        [\n            NumberType,\n            NumberType\n        ],\n        function (ctx, ref) {\n            var a = ref[0];\n            var b = ref[1];\n\n            return a.evaluate(ctx) / b.evaluate(ctx);\n}\n    ],\n    '%': [\n        NumberType,\n        [\n            NumberType,\n            NumberType\n        ],\n        function (ctx, ref) {\n            var a = ref[0];\n            var b = ref[1];\n\n            return a.evaluate(ctx) % b.evaluate(ctx);\n}\n    ],\n    'ln2': [\n        NumberType,\n        [],\n        function () { return Math.LN2; }\n    ],\n    'pi': [\n        NumberType,\n        [],\n        function () { return Math.PI; }\n    ],\n    'e': [\n        NumberType,\n        [],\n        function () { return Math.E; }\n    ],\n    '^': [\n        NumberType,\n        [\n            NumberType,\n            NumberType\n        ],\n        function (ctx, ref) {\n            var b = ref[0];\n            var e = ref[1];\n\n            return Math.pow(b.evaluate(ctx), e.evaluate(ctx));\n}\n    ],\n    'sqrt': [\n        NumberType,\n        [NumberType],\n        function (ctx, ref) {\n            var x = ref[0];\n\n            return Math.sqrt(x.evaluate(ctx));\n}\n    ],\n    'log10': [\n        NumberType,\n        [NumberType],\n        function (ctx, ref) {\n            var n = ref[0];\n\n            return Math.log(n.evaluate(ctx)) / Math.LN10;\n}\n    ],\n    'ln': [\n        NumberType,\n        [NumberType],\n        function (ctx, ref) {\n            var n = ref[0];\n\n            return Math.log(n.evaluate(ctx));\n}\n    ],\n    'log2': [\n        NumberType,\n        [NumberType],\n        function (ctx, ref) {\n            var n = ref[0];\n\n            return Math.log(n.evaluate(ctx)) / Math.LN2;\n}\n    ],\n    'sin': [\n        NumberType,\n        [NumberType],\n        function (ctx, ref) {\n            var n = ref[0];\n\n            return Math.sin(n.evaluate(ctx));\n}\n    ],\n    'cos': [\n        NumberType,\n        [NumberType],\n        function (ctx, ref) {\n            var n = ref[0];\n\n            return Math.cos(n.evaluate(ctx));\n}\n    ],\n    'tan': [\n        NumberType,\n        [NumberType],\n        function (ctx, ref) {\n            var n = ref[0];\n\n            return Math.tan(n.evaluate(ctx));\n}\n    ],\n    'asin': [\n        NumberType,\n        [NumberType],\n        function (ctx, ref) {\n            var n = ref[0];\n\n            return Math.asin(n.evaluate(ctx));\n}\n    ],\n    'acos': [\n        NumberType,\n        [NumberType],\n        function (ctx, ref) {\n            var n = ref[0];\n\n            return Math.acos(n.evaluate(ctx));\n}\n    ],\n    'atan': [\n        NumberType,\n        [NumberType],\n        function (ctx, ref) {\n            var n = ref[0];\n\n            return Math.atan(n.evaluate(ctx));\n}\n    ],\n    'min': [\n        NumberType,\n        varargs(NumberType),\n        function (ctx, args) { return Math.min.apply(Math, args.map(function (arg) { return arg.evaluate(ctx); })); }\n    ],\n    'max': [\n        NumberType,\n        varargs(NumberType),\n        function (ctx, args) { return Math.max.apply(Math, args.map(function (arg) { return arg.evaluate(ctx); })); }\n    ],\n    'abs': [\n        NumberType,\n        [NumberType],\n        function (ctx, ref) {\n            var n = ref[0];\n\n            return Math.abs(n.evaluate(ctx));\n}\n    ],\n    'round': [\n        NumberType,\n        [NumberType],\n        function (ctx, ref) {\n            var n = ref[0];\n\n            var v = n.evaluate(ctx);\n            // Javascript's Math.round() rounds towards +Infinity for halfway\n            // values, even when they're negative. It's more common to round\n            // away from 0 (e.g., this is what python and C++ do)\n            return v < 0 ? -Math.round(-v) : Math.round(v);\n        }\n    ],\n    'floor': [\n        NumberType,\n        [NumberType],\n        function (ctx, ref) {\n            var n = ref[0];\n\n            return Math.floor(n.evaluate(ctx));\n}\n    ],\n    'ceil': [\n        NumberType,\n        [NumberType],\n        function (ctx, ref) {\n            var n = ref[0];\n\n            return Math.ceil(n.evaluate(ctx));\n}\n    ],\n    'filter-==': [\n        BooleanType,\n        [\n            StringType,\n            ValueType\n        ],\n        function (ctx, ref) {\n            var k = ref[0];\n            var v = ref[1];\n\n            return ctx.properties()[k.value] === v.value;\n}\n    ],\n    'filter-id-==': [\n        BooleanType,\n        [ValueType],\n        function (ctx, ref) {\n            var v = ref[0];\n\n            return ctx.id() === v.value;\n}\n    ],\n    'filter-type-==': [\n        BooleanType,\n        [StringType],\n        function (ctx, ref) {\n            var v = ref[0];\n\n            return ctx.geometryType() === v.value;\n}\n    ],\n    'filter-<': [\n        BooleanType,\n        [\n            StringType,\n            ValueType\n        ],\n        function (ctx, ref) {\n            var k = ref[0];\n            var v = ref[1];\n\n            var a = ctx.properties()[k.value];\n            var b = v.value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter-id-<': [\n        BooleanType,\n        [ValueType],\n        function (ctx, ref) {\n            var v = ref[0];\n\n            var a = ctx.id();\n            var b = v.value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter->': [\n        BooleanType,\n        [\n            StringType,\n            ValueType\n        ],\n        function (ctx, ref) {\n            var k = ref[0];\n            var v = ref[1];\n\n            var a = ctx.properties()[k.value];\n            var b = v.value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-id->': [\n        BooleanType,\n        [ValueType],\n        function (ctx, ref) {\n            var v = ref[0];\n\n            var a = ctx.id();\n            var b = v.value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-<=': [\n        BooleanType,\n        [\n            StringType,\n            ValueType\n        ],\n        function (ctx, ref) {\n            var k = ref[0];\n            var v = ref[1];\n\n            var a = ctx.properties()[k.value];\n            var b = v.value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter-id-<=': [\n        BooleanType,\n        [ValueType],\n        function (ctx, ref) {\n            var v = ref[0];\n\n            var a = ctx.id();\n            var b = v.value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter->=': [\n        BooleanType,\n        [\n            StringType,\n            ValueType\n        ],\n        function (ctx, ref) {\n            var k = ref[0];\n            var v = ref[1];\n\n            var a = ctx.properties()[k.value];\n            var b = v.value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-id->=': [\n        BooleanType,\n        [ValueType],\n        function (ctx, ref) {\n            var v = ref[0];\n\n            var a = ctx.id();\n            var b = v.value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-has': [\n        BooleanType,\n        [ValueType],\n        function (ctx, ref) {\n            var k = ref[0];\n\n            return k.value in ctx.properties();\n}\n    ],\n    'filter-has-id': [\n        BooleanType,\n        [],\n        function (ctx) { return ctx.id() !== null && ctx.id() !== undefined; }\n    ],\n    'filter-type-in': [\n        BooleanType,\n        [array$1(StringType)],\n        function (ctx, ref) {\n            var v = ref[0];\n\n            return v.value.indexOf(ctx.geometryType()) >= 0;\n}\n    ],\n    'filter-id-in': [\n        BooleanType,\n        [array$1(ValueType)],\n        function (ctx, ref) {\n            var v = ref[0];\n\n            return v.value.indexOf(ctx.id()) >= 0;\n}\n    ],\n    'filter-in-small': [\n        BooleanType,\n        [\n            StringType,\n            array$1(ValueType)\n        ],\n        // assumes v is an array literal\n        function (ctx, ref) {\n            var k = ref[0];\n            var v = ref[1];\n\n            return v.value.indexOf(ctx.properties()[k.value]) >= 0;\n}\n    ],\n    'filter-in-large': [\n        BooleanType,\n        [\n            StringType,\n            array$1(ValueType)\n        ],\n        // assumes v is a array literal with values sorted in ascending order and of a single type\n        function (ctx, ref) {\n            var k = ref[0];\n            var v = ref[1];\n\n            return binarySearch(ctx.properties()[k.value], v.value, 0, v.value.length - 1);\n}\n    ],\n    'all': {\n        type: BooleanType,\n        overloads: [\n            [\n                [\n                    BooleanType,\n                    BooleanType\n                ],\n                function (ctx, ref) {\n                    var a = ref[0];\n                    var b = ref[1];\n\n                    return a.evaluate(ctx) && b.evaluate(ctx);\n}\n            ],\n            [\n                varargs(BooleanType),\n                function (ctx, args) {\n                    for (var i = 0, list = args; i < list.length; i += 1) {\n                        var arg = list[i];\n\n                        if (!arg.evaluate(ctx))\n                            { return false; }\n                    }\n                    return true;\n                }\n            ]\n        ]\n    },\n    'any': {\n        type: BooleanType,\n        overloads: [\n            [\n                [\n                    BooleanType,\n                    BooleanType\n                ],\n                function (ctx, ref) {\n                    var a = ref[0];\n                    var b = ref[1];\n\n                    return a.evaluate(ctx) || b.evaluate(ctx);\n}\n            ],\n            [\n                varargs(BooleanType),\n                function (ctx, args) {\n                    for (var i = 0, list = args; i < list.length; i += 1) {\n                        var arg = list[i];\n\n                        if (arg.evaluate(ctx))\n                            { return true; }\n                    }\n                    return false;\n                }\n            ]\n        ]\n    },\n    '!': [\n        BooleanType,\n        [BooleanType],\n        function (ctx, ref) {\n            var b = ref[0];\n\n            return !b.evaluate(ctx);\n}\n    ],\n    'is-supported-script': [\n        BooleanType,\n        [StringType],\n        // At parse time this will always return true, so we need to exclude this expression with isGlobalPropertyConstant\n        function (ctx, ref) {\n            var s = ref[0];\n\n            var isSupportedScript = ctx.globals && ctx.globals.isSupportedScript;\n            if (isSupportedScript) {\n                return isSupportedScript(s.evaluate(ctx));\n            }\n            return true;\n        }\n    ],\n    'upcase': [\n        StringType,\n        [StringType],\n        function (ctx, ref) {\n            var s = ref[0];\n\n            return s.evaluate(ctx).toUpperCase();\n}\n    ],\n    'downcase': [\n        StringType,\n        [StringType],\n        function (ctx, ref) {\n            var s = ref[0];\n\n            return s.evaluate(ctx).toLowerCase();\n}\n    ],\n    'concat': [\n        StringType,\n        varargs(ValueType),\n        function (ctx, args) { return args.map(function (arg) { return toString(arg.evaluate(ctx)); }).join(''); }\n    ],\n    'resolved-locale': [\n        StringType,\n        [CollatorType],\n        function (ctx, ref) {\n            var collator = ref[0];\n\n            return collator.evaluate(ctx).resolvedLocale();\n}\n    ]\n});\nvar definitions = expressions;\n\n//      \n/**\n * A type used for returning and propagating errors. The first element of the union\n * represents success and contains a value, and the second represents an error and\n * contains an error value.\n * @private\n */\nfunction success(value) {\n    return {\n        result: 'success',\n        value: value\n    };\n}\nfunction error(value) {\n    return {\n        result: 'error',\n        value: value\n    };\n}\n\n//      \nfunction supportsPropertyExpression(spec) {\n    return spec['property-type'] === 'data-driven';\n}\nfunction supportsZoomExpression(spec) {\n    return !!spec.expression && spec.expression.parameters.indexOf('zoom') > -1;\n}\nfunction supportsInterpolation(spec) {\n    return !!spec.expression && spec.expression.interpolated;\n}\n\nfunction isFunction(value) {\n    return typeof value === 'object' && value !== null && !Array.isArray(value);\n}\n\nvar StyleExpression = function StyleExpression(expression, propertySpec) {\n    this.expression = expression;\n    this._warningHistory = {};\n    this._evaluator = new EvaluationContext$1();\n    this._defaultValue = propertySpec ? getDefaultValue(propertySpec) : null;\n    this._enumValues = propertySpec && propertySpec.type === 'enum' ? propertySpec.values : null;\n};\nStyleExpression.prototype.evaluateWithoutErrorHandling = function evaluateWithoutErrorHandling (globals, feature, featureState, canonical, availableImages, formattedSection, featureTileCoord, featureDistanceData) {\n    this._evaluator.globals = globals;\n    this._evaluator.feature = feature;\n    this._evaluator.featureState = featureState;\n    this._evaluator.canonical = canonical || null;\n    this._evaluator.availableImages = availableImages || null;\n    this._evaluator.formattedSection = formattedSection;\n    this._evaluator.featureTileCoord = featureTileCoord || null;\n    this._evaluator.featureDistanceData = featureDistanceData || null;\n    return this.expression.evaluate(this._evaluator);\n};\nStyleExpression.prototype.evaluate = function evaluate (globals, feature, featureState, canonical, availableImages, formattedSection, featureTileCoord, featureDistanceData) {\n    this._evaluator.globals = globals;\n    this._evaluator.feature = feature || null;\n    this._evaluator.featureState = featureState || null;\n    this._evaluator.canonical = canonical || null;\n    this._evaluator.availableImages = availableImages || null;\n    this._evaluator.formattedSection = formattedSection || null;\n    this._evaluator.featureTileCoord = featureTileCoord || null;\n    this._evaluator.featureDistanceData = featureDistanceData || null;\n    try {\n        var val = this.expression.evaluate(this._evaluator);\n        // eslint-disable-next-line no-self-compare\n        if (val === null || val === undefined || typeof val === 'number' && val !== val) {\n            return this._defaultValue;\n        }\n        if (this._enumValues && !(val in this._enumValues)) {\n            throw new RuntimeError$1((\"Expected value to be one of \" + (Object.keys(this._enumValues).map(function (v) { return JSON.stringify(v); }).join(', ')) + \", but found \" + (JSON.stringify(val)) + \" instead.\"));\n        }\n        return val;\n    } catch (e) {\n        if (!this._warningHistory[e.message]) {\n            this._warningHistory[e.message] = true;\n            if (typeof console !== 'undefined') {\n                console.warn(e.message);\n            }\n        }\n        return this._defaultValue;\n    }\n};\nfunction isExpression(expression) {\n    return Array.isArray(expression) && expression.length > 0 && typeof expression[0] === 'string' && expression[0] in definitions;\n}\n/**\n * Parse and typecheck the given style spec JSON expression.  If\n * options.defaultValue is provided, then the resulting StyleExpression's\n * `evaluate()` method will handle errors by logging a warning (once per\n * message) and returning the default value.  Otherwise, it will throw\n * evaluation errors.\n *\n * @private\n */\nfunction createExpression(expression, propertySpec) {\n    var parser = new ParsingContext$1(definitions, [], propertySpec ? getExpectedType(propertySpec) : undefined);\n    // For string-valued properties, coerce to string at the top level rather than asserting.\n    var parsed = parser.parse(expression, undefined, undefined, undefined, propertySpec && propertySpec.type === 'string' ? { typeAnnotation: 'coerce' } : undefined);\n    if (!parsed) {\n        return error(parser.errors);\n    }\n    return success(new StyleExpression(parsed, propertySpec));\n}\nvar ZoomConstantExpression = function ZoomConstantExpression(kind, expression) {\n    this.kind = kind;\n    this._styleExpression = expression;\n    this.isStateDependent = kind !== 'constant' && !isStateConstant(expression.expression);\n};\nZoomConstantExpression.prototype.evaluateWithoutErrorHandling = function evaluateWithoutErrorHandling (globals, feature, featureState, canonical, availableImages, formattedSection) {\n    return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n};\nZoomConstantExpression.prototype.evaluate = function evaluate (globals, feature, featureState, canonical, availableImages, formattedSection) {\n    return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n};\nvar ZoomDependentExpression = function ZoomDependentExpression(kind, expression, zoomStops, interpolationType) {\n    this.kind = kind;\n    this.zoomStops = zoomStops;\n    this._styleExpression = expression;\n    this.isStateDependent = kind !== 'camera' && !isStateConstant(expression.expression);\n    this.interpolationType = interpolationType;\n};\nZoomDependentExpression.prototype.evaluateWithoutErrorHandling = function evaluateWithoutErrorHandling (globals, feature, featureState, canonical, availableImages, formattedSection) {\n    return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n};\nZoomDependentExpression.prototype.evaluate = function evaluate (globals, feature, featureState, canonical, availableImages, formattedSection) {\n    return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n};\nZoomDependentExpression.prototype.interpolationFactor = function interpolationFactor (input, lower, upper) {\n    if (this.interpolationType) {\n        return Interpolate$1.interpolationFactor(this.interpolationType, input, lower, upper);\n    } else {\n        return 0;\n    }\n};\nfunction createPropertyExpression(expression, propertySpec) {\n    expression = createExpression(expression, propertySpec);\n    if (expression.result === 'error') {\n        return expression;\n    }\n    var parsed = expression.value.expression;\n    var isFeatureConstant$1 = isFeatureConstant(parsed);\n    if (!isFeatureConstant$1 && !supportsPropertyExpression(propertySpec)) {\n        return error([new ParsingError$1('', 'data expressions not supported')]);\n    }\n    var isZoomConstant = isGlobalPropertyConstant(parsed, [\n        'zoom',\n        'pitch',\n        'distance-from-center'\n    ]);\n    if (!isZoomConstant && !supportsZoomExpression(propertySpec)) {\n        return error([new ParsingError$1('', 'zoom expressions not supported')]);\n    }\n    var zoomCurve = findZoomCurve(parsed);\n    if (!zoomCurve && !isZoomConstant) {\n        return error([new ParsingError$1('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.')]);\n    } else if (zoomCurve instanceof ParsingError$1) {\n        return error([zoomCurve]);\n    } else if (zoomCurve instanceof Interpolate$1 && !supportsInterpolation(propertySpec)) {\n        return error([new ParsingError$1('', '\"interpolate\" expressions cannot be used with this property')]);\n    }\n    if (!zoomCurve) {\n        return success(isFeatureConstant$1 ? new ZoomConstantExpression('constant', expression.value) : new ZoomConstantExpression('source', expression.value));\n    }\n    var interpolationType = zoomCurve instanceof Interpolate$1 ? zoomCurve.interpolation : undefined;\n    return success(isFeatureConstant$1 ? new ZoomDependentExpression('camera', expression.value, zoomCurve.labels, interpolationType) : new ZoomDependentExpression('composite', expression.value, zoomCurve.labels, interpolationType));\n}\n// Zoom-dependent expressions may only use [\"zoom\"] as the input to a top-level \"step\" or \"interpolate\"\n// expression (collectively referred to as a \"curve\"). The curve may be wrapped in one or more \"let\" or\n// \"coalesce\" expressions.\nfunction findZoomCurve(expression) {\n    var result = null;\n    if (expression instanceof Let$1) {\n        result = findZoomCurve(expression.result);\n    } else if (expression instanceof Coalesce$1) {\n        for (var i = 0, list = expression.args; i < list.length; i += 1) {\n            var arg = list[i];\n\n            result = findZoomCurve(arg);\n            if (result) {\n                break;\n            }\n        }\n    } else if ((expression instanceof Step$1 || expression instanceof Interpolate$1) && expression.input instanceof CompoundExpression$1 && expression.input.name === 'zoom') {\n        result = expression;\n    }\n    if (result instanceof ParsingError$1) {\n        return result;\n    }\n    expression.eachChild(function (child) {\n        var childResult = findZoomCurve(child);\n        if (childResult instanceof ParsingError$1) {\n            result = childResult;\n        } else if (!result && childResult) {\n            result = new ParsingError$1('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.');\n        } else if (result && childResult && result !== childResult) {\n            result = new ParsingError$1('', 'Only one zoom-based \"step\" or \"interpolate\" subexpression may be used in an expression.');\n        }\n    });\n    return result;\n}\nfunction getExpectedType(spec) {\n    var types = {\n        color: ColorType,\n        string: StringType,\n        number: NumberType,\n        enum: StringType,\n        boolean: BooleanType,\n        formatted: FormattedType,\n        resolvedImage: ResolvedImageType\n    };\n    if (spec.type === 'array') {\n        return array$1(types[spec.value] || ValueType, spec.length);\n    }\n    return types[spec.type];\n}\nfunction getDefaultValue(spec) {\n    if (spec.type === 'color' && (isFunction(spec.default) || Array.isArray(spec.default))) {\n        // Special case for heatmap-color: it uses the 'default:' to define a\n        // default color ramp, but createExpression expects a simple value to fall\n        // back to in case of runtime errors\n        return new Color$1(0, 0, 0, 0);\n    } else if (spec.type === 'color') {\n        return Color$1.parse(spec.default) || null;\n    } else if (spec.default === undefined) {\n        return null;\n    } else {\n        return spec.default;\n    }\n}\n\n//      \n// Turn jsonlint-lines-primitives objects into primitive objects\nfunction unbundle(value) {\n    if (value instanceof Number || value instanceof String || value instanceof Boolean) {\n        return value.valueOf();\n    } else {\n        return value;\n    }\n}\nfunction deepUnbundle(value) {\n    if (Array.isArray(value)) {\n        return value.map(deepUnbundle);\n    } else if (value instanceof Object && !(value instanceof Number || value instanceof String || value instanceof Boolean)) {\n        var unbundledValue = {};\n        for (var key in value) {\n            unbundledValue[key] = deepUnbundle(value[key]);\n        }\n        return unbundledValue;\n    }\n    return unbundle(value);\n}\n\nvar spec = {\"$version\":8,\"$root\":{\"version\":{\"required\":true,\"type\":\"enum\",\"values\":[8]},\"name\":{\"type\":\"string\"},\"metadata\":{\"type\":\"*\"},\"center\":{\"type\":\"array\",\"value\":\"number\"},\"zoom\":{\"type\":\"number\"},\"bearing\":{\"type\":\"number\",\"default\":0,\"period\":360,\"units\":\"degrees\"},\"pitch\":{\"type\":\"number\",\"default\":0,\"units\":\"degrees\"},\"light\":{\"type\":\"light\"},\"terrain\":{\"type\":\"terrain\"},\"fog\":{\"type\":\"fog\"},\"sources\":{\"required\":true,\"type\":\"sources\"},\"sprite\":{\"type\":\"string\"},\"glyphs\":{\"type\":\"string\"},\"transition\":{\"type\":\"transition\"},\"projection\":{\"type\":\"projection\"},\"layers\":{\"required\":true,\"type\":\"array\",\"value\":\"layer\"}},\"sources\":{\"*\":{\"type\":\"source\"}},\"source\":[\"source_vector\",\"source_raster\",\"source_raster_dem\",\"source_geojson\",\"source_video\",\"source_image\"],\"source_vector\":{\"type\":{\"required\":true,\"type\":\"enum\",\"values\":{\"vector\":{}}},\"url\":{\"type\":\"string\"},\"tiles\":{\"type\":\"array\",\"value\":\"string\"},\"bounds\":{\"type\":\"array\",\"value\":\"number\",\"length\":4,\"default\":[-180,-85.051129,180,85.051129]},\"scheme\":{\"type\":\"enum\",\"values\":{\"xyz\":{},\"tms\":{}},\"default\":\"xyz\"},\"minzoom\":{\"type\":\"number\",\"default\":0},\"maxzoom\":{\"type\":\"number\",\"default\":22},\"attribution\":{\"type\":\"string\"},\"promoteId\":{\"type\":\"promoteId\"},\"volatile\":{\"type\":\"boolean\",\"default\":false},\"*\":{\"type\":\"*\"}},\"source_raster\":{\"type\":{\"required\":true,\"type\":\"enum\",\"values\":{\"raster\":{}}},\"url\":{\"type\":\"string\"},\"tiles\":{\"type\":\"array\",\"value\":\"string\"},\"bounds\":{\"type\":\"array\",\"value\":\"number\",\"length\":4,\"default\":[-180,-85.051129,180,85.051129]},\"minzoom\":{\"type\":\"number\",\"default\":0},\"maxzoom\":{\"type\":\"number\",\"default\":22},\"tileSize\":{\"type\":\"number\",\"default\":512,\"units\":\"pixels\"},\"scheme\":{\"type\":\"enum\",\"values\":{\"xyz\":{},\"tms\":{}},\"default\":\"xyz\"},\"attribution\":{\"type\":\"string\"},\"volatile\":{\"type\":\"boolean\",\"default\":false},\"*\":{\"type\":\"*\"}},\"source_raster_dem\":{\"type\":{\"required\":true,\"type\":\"enum\",\"values\":{\"raster-dem\":{}}},\"url\":{\"type\":\"string\"},\"tiles\":{\"type\":\"array\",\"value\":\"string\"},\"bounds\":{\"type\":\"array\",\"value\":\"number\",\"length\":4,\"default\":[-180,-85.051129,180,85.051129]},\"minzoom\":{\"type\":\"number\",\"default\":0},\"maxzoom\":{\"type\":\"number\",\"default\":22},\"tileSize\":{\"type\":\"number\",\"default\":512,\"units\":\"pixels\"},\"attribution\":{\"type\":\"string\"},\"encoding\":{\"type\":\"enum\",\"values\":{\"terrarium\":{},\"mapbox\":{}},\"default\":\"mapbox\"},\"volatile\":{\"type\":\"boolean\",\"default\":false},\"*\":{\"type\":\"*\"}},\"source_geojson\":{\"type\":{\"required\":true,\"type\":\"enum\",\"values\":{\"geojson\":{}}},\"data\":{\"type\":\"*\"},\"maxzoom\":{\"type\":\"number\",\"default\":18},\"attribution\":{\"type\":\"string\"},\"buffer\":{\"type\":\"number\",\"default\":128,\"maximum\":512,\"minimum\":0},\"filter\":{\"type\":\"*\"},\"tolerance\":{\"type\":\"number\",\"default\":0.375},\"cluster\":{\"type\":\"boolean\",\"default\":false},\"clusterRadius\":{\"type\":\"number\",\"default\":50,\"minimum\":0},\"clusterMaxZoom\":{\"type\":\"number\"},\"clusterMinPoints\":{\"type\":\"number\"},\"clusterProperties\":{\"type\":\"*\"},\"lineMetrics\":{\"type\":\"boolean\",\"default\":false},\"generateId\":{\"type\":\"boolean\",\"default\":false},\"promoteId\":{\"type\":\"promoteId\"}},\"source_video\":{\"type\":{\"required\":true,\"type\":\"enum\",\"values\":{\"video\":{}}},\"urls\":{\"required\":true,\"type\":\"array\",\"value\":\"string\"},\"coordinates\":{\"required\":true,\"type\":\"array\",\"length\":4,\"value\":{\"type\":\"array\",\"length\":2,\"value\":\"number\"}}},\"source_image\":{\"type\":{\"required\":true,\"type\":\"enum\",\"values\":{\"image\":{}}},\"url\":{\"required\":true,\"type\":\"string\"},\"coordinates\":{\"required\":true,\"type\":\"array\",\"length\":4,\"value\":{\"type\":\"array\",\"length\":2,\"value\":\"number\"}}},\"layer\":{\"id\":{\"type\":\"string\",\"required\":true},\"type\":{\"type\":\"enum\",\"values\":{\"fill\":{},\"line\":{},\"symbol\":{},\"circle\":{},\"heatmap\":{},\"fill-extrusion\":{},\"raster\":{},\"hillshade\":{},\"background\":{},\"sky\":{}},\"required\":true},\"metadata\":{\"type\":\"*\"},\"source\":{\"type\":\"string\"},\"source-layer\":{\"type\":\"string\"},\"minzoom\":{\"type\":\"number\",\"minimum\":0,\"maximum\":24},\"maxzoom\":{\"type\":\"number\",\"minimum\":0,\"maximum\":24},\"filter\":{\"type\":\"filter\"},\"layout\":{\"type\":\"layout\"},\"paint\":{\"type\":\"paint\"}},\"layout\":[\"layout_fill\",\"layout_line\",\"layout_circle\",\"layout_heatmap\",\"layout_fill-extrusion\",\"layout_symbol\",\"layout_raster\",\"layout_hillshade\",\"layout_background\",\"layout_sky\"],\"layout_background\":{\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_sky\":{\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_fill\":{\"fill-sort-key\":{\"type\":\"number\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_circle\":{\"circle-sort-key\":{\"type\":\"number\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_heatmap\":{\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_fill-extrusion\":{\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"},\"fill-extrusion-edge-radius\":{\"type\":\"number\",\"private\":true,\"default\":0,\"minimum\":0,\"maximum\":1,\"property-type\":\"constant\"}},\"layout_line\":{\"line-cap\":{\"type\":\"enum\",\"values\":{\"butt\":{},\"round\":{},\"square\":{}},\"default\":\"butt\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"line-join\":{\"type\":\"enum\",\"values\":{\"bevel\":{},\"round\":{},\"miter\":{}},\"default\":\"miter\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"line-miter-limit\":{\"type\":\"number\",\"default\":2,\"requires\":[{\"line-join\":\"miter\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"line-round-limit\":{\"type\":\"number\",\"default\":1.05,\"requires\":[{\"line-join\":\"round\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"line-sort-key\":{\"type\":\"number\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_symbol\":{\"symbol-placement\":{\"type\":\"enum\",\"values\":{\"point\":{},\"line\":{},\"line-center\":{}},\"default\":\"point\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"symbol-spacing\":{\"type\":\"number\",\"default\":250,\"minimum\":1,\"units\":\"pixels\",\"requires\":[{\"symbol-placement\":\"line\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"symbol-avoid-edges\":{\"type\":\"boolean\",\"default\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"symbol-sort-key\":{\"type\":\"number\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"symbol-z-order\":{\"type\":\"enum\",\"values\":{\"auto\":{},\"viewport-y\":{},\"source\":{}},\"default\":\"auto\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-allow-overlap\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-ignore-placement\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-optional\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"icon-image\",\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-rotation-alignment\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{},\"auto\":{}},\"default\":\"auto\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-size\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"units\":\"factor of the original icon size\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"icon-text-fit\":{\"type\":\"enum\",\"values\":{\"none\":{},\"width\":{},\"height\":{},\"both\":{}},\"default\":\"none\",\"requires\":[\"icon-image\",\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-text-fit-padding\":{\"type\":\"array\",\"value\":\"number\",\"length\":4,\"default\":[0,0,0,0],\"units\":\"pixels\",\"requires\":[\"icon-image\",\"text-field\",{\"icon-text-fit\":[\"both\",\"width\",\"height\"]}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-image\":{\"type\":\"resolvedImage\",\"tokens\":true,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"icon-rotate\":{\"type\":\"number\",\"default\":0,\"period\":360,\"units\":\"degrees\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"icon-padding\":{\"type\":\"number\",\"default\":2,\"minimum\":0,\"units\":\"pixels\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-keep-upright\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"icon-image\",{\"icon-rotation-alignment\":\"map\"},{\"symbol-placement\":[\"line\",\"line-center\"]}],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-offset\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"icon-anchor\":{\"type\":\"enum\",\"values\":{\"center\":{},\"left\":{},\"right\":{},\"top\":{},\"bottom\":{},\"top-left\":{},\"top-right\":{},\"bottom-left\":{},\"bottom-right\":{}},\"default\":\"center\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"icon-pitch-alignment\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{},\"auto\":{}},\"default\":\"auto\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-pitch-alignment\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{},\"auto\":{}},\"default\":\"auto\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-rotation-alignment\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{},\"auto\":{}},\"default\":\"auto\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-field\":{\"type\":\"formatted\",\"default\":\"\",\"tokens\":true,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-font\":{\"type\":\"array\",\"value\":\"string\",\"default\":[\"Open Sans Regular\",\"Arial Unicode MS Regular\"],\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-size\":{\"type\":\"number\",\"default\":16,\"minimum\":0,\"units\":\"pixels\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-max-width\":{\"type\":\"number\",\"default\":10,\"minimum\":0,\"units\":\"ems\",\"requires\":[\"text-field\",{\"symbol-placement\":[\"point\"]}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-line-height\":{\"type\":\"number\",\"default\":1.2,\"units\":\"ems\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-letter-spacing\":{\"type\":\"number\",\"default\":0,\"units\":\"ems\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-justify\":{\"type\":\"enum\",\"values\":{\"auto\":{},\"left\":{},\"center\":{},\"right\":{}},\"default\":\"center\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-radial-offset\":{\"type\":\"number\",\"units\":\"ems\",\"default\":0,\"requires\":[\"text-field\"],\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]}},\"text-variable-anchor\":{\"type\":\"array\",\"value\":\"enum\",\"values\":{\"center\":{},\"left\":{},\"right\":{},\"top\":{},\"bottom\":{},\"top-left\":{},\"top-right\":{},\"bottom-left\":{},\"bottom-right\":{}},\"requires\":[\"text-field\",{\"symbol-placement\":[\"point\"]}],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-anchor\":{\"type\":\"enum\",\"values\":{\"center\":{},\"left\":{},\"right\":{},\"top\":{},\"bottom\":{},\"top-left\":{},\"top-right\":{},\"bottom-left\":{},\"bottom-right\":{}},\"default\":\"center\",\"requires\":[\"text-field\",{\"!\":\"text-variable-anchor\"}],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-max-angle\":{\"type\":\"number\",\"default\":45,\"units\":\"degrees\",\"requires\":[\"text-field\",{\"symbol-placement\":[\"line\",\"line-center\"]}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-writing-mode\":{\"type\":\"array\",\"value\":\"enum\",\"values\":{\"horizontal\":{},\"vertical\":{}},\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-rotate\":{\"type\":\"number\",\"default\":0,\"period\":360,\"units\":\"degrees\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-padding\":{\"type\":\"number\",\"default\":2,\"minimum\":0,\"units\":\"pixels\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-keep-upright\":{\"type\":\"boolean\",\"default\":true,\"requires\":[\"text-field\",{\"text-rotation-alignment\":\"map\"},{\"symbol-placement\":[\"line\",\"line-center\"]}],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-transform\":{\"type\":\"enum\",\"values\":{\"none\":{},\"uppercase\":{},\"lowercase\":{}},\"default\":\"none\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-offset\":{\"type\":\"array\",\"value\":\"number\",\"units\":\"ems\",\"length\":2,\"default\":[0,0],\"requires\":[\"text-field\",{\"!\":\"text-radial-offset\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"text-allow-overlap\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-ignore-placement\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-optional\":{\"type\":\"boolean\",\"default\":false,\"requires\":[\"text-field\",\"icon-image\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_raster\":{\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"layout_hillshade\":{\"visibility\":{\"type\":\"enum\",\"values\":{\"visible\":{},\"none\":{}},\"default\":\"visible\",\"property-type\":\"constant\"}},\"filter\":{\"type\":\"array\",\"value\":\"*\"},\"filter_symbol\":{\"type\":\"boolean\",\"default\":false,\"transition\":false,\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\",\"pitch\",\"distance-from-center\"]}},\"filter_fill\":{\"type\":\"boolean\",\"default\":false,\"transition\":false,\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]}},\"filter_line\":{\"type\":\"boolean\",\"default\":false,\"transition\":false,\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]}},\"filter_circle\":{\"type\":\"boolean\",\"default\":false,\"transition\":false,\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]}},\"filter_fill-extrusion\":{\"type\":\"boolean\",\"default\":false,\"transition\":false,\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]}},\"filter_heatmap\":{\"type\":\"boolean\",\"default\":false,\"transition\":false,\"property-type\":\"data-driven\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]}},\"filter_operator\":{\"type\":\"enum\",\"values\":{\"==\":{},\"!=\":{},\">\":{},\">=\":{},\"<\":{},\"<=\":{},\"in\":{},\"!in\":{},\"all\":{},\"any\":{},\"none\":{},\"has\":{},\"!has\":{},\"within\":{}}},\"geometry_type\":{\"type\":\"enum\",\"values\":{\"Point\":{},\"LineString\":{},\"Polygon\":{}}},\"function\":{\"expression\":{\"type\":\"expression\"},\"stops\":{\"type\":\"array\",\"value\":\"function_stop\"},\"base\":{\"type\":\"number\",\"default\":1,\"minimum\":0},\"property\":{\"type\":\"string\",\"default\":\"$zoom\"},\"type\":{\"type\":\"enum\",\"values\":{\"identity\":{},\"exponential\":{},\"interval\":{},\"categorical\":{}},\"default\":\"exponential\"},\"colorSpace\":{\"type\":\"enum\",\"values\":{\"rgb\":{},\"lab\":{},\"hcl\":{}},\"default\":\"rgb\"},\"default\":{\"type\":\"*\",\"required\":false}},\"function_stop\":{\"type\":\"array\",\"minimum\":0,\"maximum\":24,\"value\":[\"number\",\"color\"],\"length\":2},\"expression\":{\"type\":\"array\",\"value\":\"*\",\"minimum\":1},\"expression_name\":{\"type\":\"enum\",\"values\":{\"let\":{\"group\":\"Variable binding\"},\"var\":{\"group\":\"Variable binding\"},\"literal\":{\"group\":\"Types\"},\"array\":{\"group\":\"Types\"},\"at\":{\"group\":\"Lookup\"},\"in\":{\"group\":\"Lookup\"},\"index-of\":{\"group\":\"Lookup\"},\"slice\":{\"group\":\"Lookup\"},\"case\":{\"group\":\"Decision\"},\"match\":{\"group\":\"Decision\"},\"coalesce\":{\"group\":\"Decision\"},\"step\":{\"group\":\"Ramps, scales, curves\"},\"interpolate\":{\"group\":\"Ramps, scales, curves\"},\"interpolate-hcl\":{\"group\":\"Ramps, scales, curves\"},\"interpolate-lab\":{\"group\":\"Ramps, scales, curves\"},\"ln2\":{\"group\":\"Math\"},\"pi\":{\"group\":\"Math\"},\"e\":{\"group\":\"Math\"},\"typeof\":{\"group\":\"Types\"},\"string\":{\"group\":\"Types\"},\"number\":{\"group\":\"Types\"},\"boolean\":{\"group\":\"Types\"},\"object\":{\"group\":\"Types\"},\"collator\":{\"group\":\"Types\"},\"format\":{\"group\":\"Types\"},\"image\":{\"group\":\"Types\"},\"number-format\":{\"group\":\"Types\"},\"to-string\":{\"group\":\"Types\"},\"to-number\":{\"group\":\"Types\"},\"to-boolean\":{\"group\":\"Types\"},\"to-rgba\":{\"group\":\"Color\"},\"to-color\":{\"group\":\"Types\"},\"rgb\":{\"group\":\"Color\"},\"rgba\":{\"group\":\"Color\"},\"get\":{\"group\":\"Lookup\"},\"has\":{\"group\":\"Lookup\"},\"length\":{\"group\":\"Lookup\"},\"properties\":{\"group\":\"Feature data\"},\"feature-state\":{\"group\":\"Feature data\"},\"geometry-type\":{\"group\":\"Feature data\"},\"id\":{\"group\":\"Feature data\"},\"zoom\":{\"group\":\"Camera\"},\"pitch\":{\"group\":\"Camera\"},\"distance-from-center\":{\"group\":\"Camera\"},\"heatmap-density\":{\"group\":\"Heatmap\"},\"line-progress\":{\"group\":\"Feature data\"},\"sky-radial-progress\":{\"group\":\"sky\"},\"accumulated\":{\"group\":\"Feature data\"},\"+\":{\"group\":\"Math\"},\"*\":{\"group\":\"Math\"},\"-\":{\"group\":\"Math\"},\"/\":{\"group\":\"Math\"},\"%\":{\"group\":\"Math\"},\"^\":{\"group\":\"Math\"},\"sqrt\":{\"group\":\"Math\"},\"log10\":{\"group\":\"Math\"},\"ln\":{\"group\":\"Math\"},\"log2\":{\"group\":\"Math\"},\"sin\":{\"group\":\"Math\"},\"cos\":{\"group\":\"Math\"},\"tan\":{\"group\":\"Math\"},\"asin\":{\"group\":\"Math\"},\"acos\":{\"group\":\"Math\"},\"atan\":{\"group\":\"Math\"},\"min\":{\"group\":\"Math\"},\"max\":{\"group\":\"Math\"},\"round\":{\"group\":\"Math\"},\"abs\":{\"group\":\"Math\"},\"ceil\":{\"group\":\"Math\"},\"floor\":{\"group\":\"Math\"},\"distance\":{\"group\":\"Math\"},\"==\":{\"group\":\"Decision\"},\"!=\":{\"group\":\"Decision\"},\">\":{\"group\":\"Decision\"},\"<\":{\"group\":\"Decision\"},\">=\":{\"group\":\"Decision\"},\"<=\":{\"group\":\"Decision\"},\"all\":{\"group\":\"Decision\"},\"any\":{\"group\":\"Decision\"},\"!\":{\"group\":\"Decision\"},\"within\":{\"group\":\"Decision\"},\"is-supported-script\":{\"group\":\"String\"},\"upcase\":{\"group\":\"String\"},\"downcase\":{\"group\":\"String\"},\"concat\":{\"group\":\"String\"},\"resolved-locale\":{\"group\":\"String\"}}},\"fog\":{\"range\":{\"type\":\"array\",\"default\":[0.5,10],\"minimum\":-20,\"maximum\":20,\"length\":2,\"value\":\"number\",\"property-type\":\"data-constant\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]}},\"color\":{\"type\":\"color\",\"property-type\":\"data-constant\",\"default\":\"#ffffff\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true},\"high-color\":{\"type\":\"color\",\"property-type\":\"data-constant\",\"default\":\"#245cdf\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true},\"space-color\":{\"type\":\"color\",\"property-type\":\"data-constant\",\"default\":[\"interpolate\",[\"linear\"],[\"zoom\"],4,\"#010b19\",7,\"#367ab9\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true},\"horizon-blend\":{\"type\":\"number\",\"property-type\":\"data-constant\",\"default\":[\"interpolate\",[\"linear\"],[\"zoom\"],4,0.2,7,0.1],\"minimum\":0,\"maximum\":1,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true},\"star-intensity\":{\"type\":\"number\",\"property-type\":\"data-constant\",\"default\":[\"interpolate\",[\"linear\"],[\"zoom\"],5,0.35,6,0],\"minimum\":0,\"maximum\":1,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true}},\"light\":{\"anchor\":{\"type\":\"enum\",\"default\":\"viewport\",\"values\":{\"map\":{},\"viewport\":{}},\"property-type\":\"data-constant\",\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]}},\"position\":{\"type\":\"array\",\"default\":[1.15,210,30],\"length\":3,\"value\":\"number\",\"property-type\":\"data-constant\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]}},\"color\":{\"type\":\"color\",\"property-type\":\"data-constant\",\"default\":\"#ffffff\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true},\"intensity\":{\"type\":\"number\",\"property-type\":\"data-constant\",\"default\":0.5,\"minimum\":0,\"maximum\":1,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true}},\"projection\":{\"name\":{\"type\":\"enum\",\"values\":{\"albers\":{},\"equalEarth\":{},\"equirectangular\":{},\"lambertConformalConic\":{},\"mercator\":{},\"naturalEarth\":{},\"winkelTripel\":{},\"globe\":{}},\"default\":\"mercator\",\"required\":true},\"center\":{\"type\":\"array\",\"length\":2,\"value\":\"number\",\"property-type\":\"data-constant\",\"minimum\":[-180,-90],\"maximum\":[180,90],\"transition\":false,\"requires\":[{\"name\":[\"albers\",\"lambertConformalConic\"]}]},\"parallels\":{\"type\":\"array\",\"length\":2,\"value\":\"number\",\"property-type\":\"data-constant\",\"minimum\":[-90,-90],\"maximum\":[90,90],\"transition\":false,\"requires\":[{\"name\":[\"albers\",\"lambertConformalConic\"]}]}},\"terrain\":{\"source\":{\"type\":\"string\",\"required\":true},\"exaggeration\":{\"type\":\"number\",\"property-type\":\"data-constant\",\"default\":1,\"minimum\":0,\"maximum\":1000,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true,\"requires\":[\"source\"]}},\"paint\":[\"paint_fill\",\"paint_line\",\"paint_circle\",\"paint_heatmap\",\"paint_fill-extrusion\",\"paint_symbol\",\"paint_raster\",\"paint_hillshade\",\"paint_background\",\"paint_sky\"],\"paint_fill\":{\"fill-antialias\":{\"type\":\"boolean\",\"default\":true,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"fill-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"requires\":[{\"!\":\"fill-pattern\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"fill-outline-color\":{\"type\":\"color\",\"transition\":true,\"requires\":[{\"!\":\"fill-pattern\"},{\"fill-antialias\":true}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"fill-translate\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-translate-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"requires\":[\"fill-translate\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-pattern\":{\"type\":\"resolvedImage\",\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"}},\"paint_fill-extrusion\":{\"fill-extrusion-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-extrusion-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"requires\":[{\"!\":\"fill-extrusion-pattern\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"fill-extrusion-translate\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-extrusion-translate-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"requires\":[\"fill-extrusion-translate\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-extrusion-pattern\":{\"type\":\"resolvedImage\",\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"fill-extrusion-height\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"units\":\"meters\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"fill-extrusion-base\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"units\":\"meters\",\"transition\":true,\"requires\":[\"fill-extrusion-height\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"fill-extrusion-vertical-gradient\":{\"type\":\"boolean\",\"default\":true,\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"fill-extrusion-ambient-occlusion-intensity\":{\"property-type\":\"data-constant\",\"type\":\"number\",\"private\":true,\"default\":0,\"minimum\":0,\"maximum\":1,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true},\"fill-extrusion-ambient-occlusion-radius\":{\"property-type\":\"data-constant\",\"type\":\"number\",\"private\":true,\"default\":3,\"minimum\":0,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"transition\":true,\"requires\":[\"fill-extrusion-edge-radius\"]}},\"paint_line\":{\"line-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"line-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"requires\":[{\"!\":\"line-pattern\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"line-translate\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"line-translate-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"requires\":[\"line-translate\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"line-width\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"line-gap-width\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"line-offset\":{\"type\":\"number\",\"default\":0,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"line-blur\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"line-dasharray\":{\"type\":\"array\",\"value\":\"number\",\"minimum\":0,\"transition\":false,\"units\":\"line widths\",\"requires\":[{\"!\":\"line-pattern\"}],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"line-pattern\":{\"type\":\"resolvedImage\",\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\",\"feature\"]},\"property-type\":\"data-driven\"},\"line-gradient\":{\"type\":\"color\",\"transition\":false,\"requires\":[{\"!\":\"line-pattern\"},{\"source\":\"geojson\",\"has\":{\"lineMetrics\":true}}],\"expression\":{\"interpolated\":true,\"parameters\":[\"line-progress\"]},\"property-type\":\"color-ramp\"},\"line-trim-offset\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"minimum\":[0,0],\"maximum\":[1,1],\"transition\":false,\"requires\":[{\"source\":\"geojson\",\"has\":{\"lineMetrics\":true}}],\"property-type\":\"constant\"}},\"paint_circle\":{\"circle-radius\":{\"type\":\"number\",\"default\":5,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"circle-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"circle-blur\":{\"type\":\"number\",\"default\":0,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"circle-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"circle-translate\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"circle-translate-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"requires\":[\"circle-translate\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"circle-pitch-scale\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"circle-pitch-alignment\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"viewport\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"circle-stroke-width\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"circle-stroke-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"circle-stroke-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"}},\"paint_heatmap\":{\"heatmap-radius\":{\"type\":\"number\",\"default\":30,\"minimum\":1,\"transition\":true,\"units\":\"pixels\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"heatmap-weight\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"transition\":false,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"heatmap-intensity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"heatmap-color\":{\"type\":\"color\",\"default\":[\"interpolate\",[\"linear\"],[\"heatmap-density\"],0,\"rgba(0, 0, 255, 0)\",0.1,\"royalblue\",0.3,\"cyan\",0.5,\"lime\",0.7,\"yellow\",1,\"red\"],\"transition\":false,\"expression\":{\"interpolated\":true,\"parameters\":[\"heatmap-density\"]},\"property-type\":\"color-ramp\"},\"heatmap-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"paint_symbol\":{\"icon-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"icon-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"icon-halo-color\":{\"type\":\"color\",\"default\":\"rgba(0, 0, 0, 0)\",\"transition\":true,\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"icon-halo-width\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"icon-halo-blur\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"icon-translate\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"transition\":true,\"units\":\"pixels\",\"requires\":[\"icon-image\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"icon-translate-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"requires\":[\"icon-image\",\"icon-translate\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"text-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"overridable\":true,\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"text-halo-color\":{\"type\":\"color\",\"default\":\"rgba(0, 0, 0, 0)\",\"transition\":true,\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"text-halo-width\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"text-halo-blur\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"transition\":true,\"units\":\"pixels\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\",\"feature\",\"feature-state\"]},\"property-type\":\"data-driven\"},\"text-translate\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"default\":[0,0],\"transition\":true,\"units\":\"pixels\",\"requires\":[\"text-field\"],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"text-translate-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"map\",\"requires\":[\"text-field\",\"text-translate\"],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"paint_raster\":{\"raster-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-hue-rotate\":{\"type\":\"number\",\"default\":0,\"period\":360,\"transition\":true,\"units\":\"degrees\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-brightness-min\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-brightness-max\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-saturation\":{\"type\":\"number\",\"default\":0,\"minimum\":-1,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-contrast\":{\"type\":\"number\",\"default\":0,\"minimum\":-1,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-resampling\":{\"type\":\"enum\",\"values\":{\"linear\":{},\"nearest\":{}},\"default\":\"linear\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"raster-fade-duration\":{\"type\":\"number\",\"default\":300,\"minimum\":0,\"transition\":false,\"units\":\"milliseconds\",\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"paint_hillshade\":{\"hillshade-illumination-direction\":{\"type\":\"number\",\"default\":335,\"minimum\":0,\"maximum\":359,\"transition\":false,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"hillshade-illumination-anchor\":{\"type\":\"enum\",\"values\":{\"map\":{},\"viewport\":{}},\"default\":\"viewport\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"hillshade-exaggeration\":{\"type\":\"number\",\"default\":0.5,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"hillshade-shadow-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"hillshade-highlight-color\":{\"type\":\"color\",\"default\":\"#FFFFFF\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"hillshade-accent-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"paint_background\":{\"background-color\":{\"type\":\"color\",\"default\":\"#000000\",\"transition\":true,\"requires\":[{\"!\":\"background-pattern\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"background-pattern\":{\"type\":\"resolvedImage\",\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"background-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"paint_sky\":{\"sky-type\":{\"type\":\"enum\",\"values\":{\"gradient\":{},\"atmosphere\":{}},\"default\":\"atmosphere\",\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"sky-atmosphere-sun\":{\"type\":\"array\",\"value\":\"number\",\"length\":2,\"units\":\"degrees\",\"minimum\":[0,0],\"maximum\":[360,180],\"transition\":false,\"requires\":[{\"sky-type\":\"atmosphere\"}],\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"sky-atmosphere-sun-intensity\":{\"type\":\"number\",\"requires\":[{\"sky-type\":\"atmosphere\"}],\"default\":10,\"minimum\":0,\"maximum\":100,\"transition\":false,\"property-type\":\"data-constant\"},\"sky-gradient-center\":{\"type\":\"array\",\"requires\":[{\"sky-type\":\"gradient\"}],\"value\":\"number\",\"default\":[0,0],\"length\":2,\"units\":\"degrees\",\"minimum\":[0,0],\"maximum\":[360,180],\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"sky-gradient-radius\":{\"type\":\"number\",\"requires\":[{\"sky-type\":\"gradient\"}],\"default\":90,\"minimum\":0,\"maximum\":180,\"transition\":false,\"expression\":{\"interpolated\":false,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"},\"sky-gradient\":{\"type\":\"color\",\"default\":[\"interpolate\",[\"linear\"],[\"sky-radial-progress\"],0.8,\"#87ceeb\",1,\"white\"],\"transition\":false,\"requires\":[{\"sky-type\":\"gradient\"}],\"expression\":{\"interpolated\":true,\"parameters\":[\"sky-radial-progress\"]},\"property-type\":\"color-ramp\"},\"sky-atmosphere-halo-color\":{\"type\":\"color\",\"default\":\"white\",\"transition\":false,\"requires\":[{\"sky-type\":\"atmosphere\"}],\"property-type\":\"data-constant\"},\"sky-atmosphere-color\":{\"type\":\"color\",\"default\":\"white\",\"transition\":false,\"requires\":[{\"sky-type\":\"atmosphere\"}],\"property-type\":\"data-constant\"},\"sky-opacity\":{\"type\":\"number\",\"default\":1,\"minimum\":0,\"maximum\":1,\"transition\":true,\"expression\":{\"interpolated\":true,\"parameters\":[\"zoom\"]},\"property-type\":\"data-constant\"}},\"transition\":{\"duration\":{\"type\":\"number\",\"default\":300,\"minimum\":0,\"units\":\"milliseconds\"},\"delay\":{\"type\":\"number\",\"default\":0,\"minimum\":0,\"units\":\"milliseconds\"}},\"property-type\":{\"data-driven\":{\"type\":\"property-type\"},\"color-ramp\":{\"type\":\"property-type\"},\"data-constant\":{\"type\":\"property-type\"},\"constant\":{\"type\":\"property-type\"}},\"promoteId\":{\"*\":{\"type\":\"string\"}}};\n\n//      \nfunction isExpressionFilter(filter) {\n    if (filter === true || filter === false) {\n        return true;\n    }\n    if (!Array.isArray(filter) || filter.length === 0) {\n        return false;\n    }\n    switch (filter[0]) {\n    case 'has':\n        return filter.length >= 2 && filter[1] !== '$id' && filter[1] !== '$type';\n    case 'in':\n        return filter.length >= 3 && (typeof filter[1] !== 'string' || Array.isArray(filter[2]));\n    case '!in':\n    case '!has':\n    case 'none':\n        return false;\n    case '==':\n    case '!=':\n    case '>':\n    case '>=':\n    case '<':\n    case '<=':\n        return filter.length !== 3 || (Array.isArray(filter[1]) || Array.isArray(filter[2]));\n    case 'any':\n    case 'all':\n        for (var i = 0, list = filter.slice(1); i < list.length; i += 1) {\n            var f = list[i];\n\n        if (!isExpressionFilter(f) && typeof f !== 'boolean') {\n                return false;\n            }\n        }\n        return true;\n    default:\n        return true;\n    }\n}\n/**\n * Given a filter expressed as nested arrays, return a new function\n * that evaluates whether a given feature (with a .properties or .tags property)\n * passes its test.\n *\n * @private\n * @param {Array} filter mapbox gl filter\n * @param {string} layerType the type of the layer this filter will be applied to.\n * @returns {Function} filter-evaluating function\n */\nfunction createFilter(filter, layerType) {\n    if ( layerType === void 0 ) layerType = 'fill';\n\n    if (filter === null || filter === undefined) {\n        return {\n            filter: function () { return true; },\n            needGeometry: false,\n            needFeature: false\n        };\n    }\n    if (!isExpressionFilter(filter)) {\n        filter = convertFilter(filter);\n    }\n    var filterExp = filter;\n    var staticFilter = true;\n    try {\n        staticFilter = extractStaticFilter(filterExp);\n    } catch (e) {\n        console.warn((\"Failed to extract static filter. Filter will continue working, but at higher memory usage and slower framerate.\\nThis is most likely a bug, please report this via https://github.com/mapbox/mapbox-gl-js/issues/new?assignees=&labels=&template=Bug_report.md\\nand paste the contents of this message in the report.\\nThank you!\\nFilter Expression:\\n\" + (JSON.stringify(filterExp, null, 2)) + \"\\n        \"));\n    }\n    // Compile the static component of the filter\n    var filterSpec = spec[(\"filter_\" + layerType)];\n    var compiledStaticFilter = createExpression(staticFilter, filterSpec);\n    var filterFunc = null;\n    if (compiledStaticFilter.result === 'error') {\n        throw new Error(compiledStaticFilter.value.map(function (err) { return ((err.key) + \": \" + (err.message)); }).join(', '));\n    } else {\n        filterFunc = function (globalProperties, feature, canonical) { return compiledStaticFilter.value.evaluate(globalProperties, feature, {}, canonical); };\n    }\n    // If the static component is not equal to the entire filter then we have a dynamic component\n    // Compile the dynamic component separately\n    var dynamicFilterFunc = null;\n    var needFeature = null;\n    if (staticFilter !== filterExp) {\n        var compiledDynamicFilter = createExpression(filterExp, filterSpec);\n        if (compiledDynamicFilter.result === 'error') {\n            throw new Error(compiledDynamicFilter.value.map(function (err) { return ((err.key) + \": \" + (err.message)); }).join(', '));\n        } else {\n            dynamicFilterFunc = function (globalProperties, feature, canonical, featureTileCoord, featureDistanceData) { return compiledDynamicFilter.value.evaluate(globalProperties, feature, {}, canonical, undefined, undefined, featureTileCoord, featureDistanceData); };\n            needFeature = !isFeatureConstant(compiledDynamicFilter.value.expression);\n        }\n    }\n    filterFunc = filterFunc;\n    var needGeometry = geometryNeeded(staticFilter);\n    return {\n        filter: filterFunc,\n        dynamicFilter: dynamicFilterFunc ? dynamicFilterFunc : undefined,\n        needGeometry: needGeometry,\n        needFeature: !!needFeature\n    };\n}\nfunction extractStaticFilter(filter) {\n    if (!isDynamicFilter(filter)) {\n        return filter;\n    }\n    // Shallow copy so we can replace expressions in-place\n    var result = deepUnbundle(filter);\n    // 1. Union branches\n    unionDynamicBranches(result);\n    // 2. Collapse dynamic conditions to  `true`\n    result = collapseDynamicBooleanExpressions(result);\n    return result;\n}\nfunction collapseDynamicBooleanExpressions(expression) {\n    if (!Array.isArray(expression)) {\n        return expression;\n    }\n    var collapsed = collapsedExpression(expression);\n    if (collapsed === true) {\n        return collapsed;\n    } else {\n        return collapsed.map(function (subExpression) { return collapseDynamicBooleanExpressions(subExpression); });\n    }\n}\n/**\n * Traverses the expression and replaces all instances of branching on a\n * `dynamic` conditional (such as `['pitch']` or `['distance-from-center']`)\n * into an `any` expression.\n * This ensures that all possible outcomes of a `dynamic` branch are considered\n * when evaluating the expression upfront during filtering.\n *\n * @param {Array<any>} filter the filter expression mutated in-place.\n */\nfunction unionDynamicBranches(filter) {\n    var isBranchingDynamically = false;\n    var branches = [];\n    if (filter[0] === 'case') {\n        for (var i = 1; i < filter.length - 1; i += 2) {\n            isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[i]);\n            branches.push(filter[i + 1]);\n        }\n        branches.push(filter[filter.length - 1]);\n    } else if (filter[0] === 'match') {\n        isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[1]);\n        for (var i$1 = 2; i$1 < filter.length - 1; i$1 += 2) {\n            branches.push(filter[i$1 + 1]);\n        }\n        branches.push(filter[filter.length - 1]);\n    } else if (filter[0] === 'step') {\n        isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[1]);\n        for (var i$2 = 1; i$2 < filter.length - 1; i$2 += 2) {\n            branches.push(filter[i$2 + 1]);\n        }\n    }\n    if (isBranchingDynamically) {\n        filter.length = 0;\n        filter.push.apply(filter, [ 'any' ].concat( branches ));\n    }\n    // traverse and recurse into children\n    for (var i$3 = 1; i$3 < filter.length; i$3++) {\n        unionDynamicBranches(filter[i$3]);\n    }\n}\nfunction isDynamicFilter(filter) {\n    // Base Cases\n    if (!Array.isArray(filter)) {\n        return false;\n    }\n    if (isRootExpressionDynamic(filter[0])) {\n        return true;\n    }\n    for (var i = 1; i < filter.length; i++) {\n        var child = filter[i];\n        if (isDynamicFilter(child)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction isRootExpressionDynamic(expression) {\n    return expression === 'pitch' || expression === 'distance-from-center';\n}\nvar dynamicConditionExpressions = new Set([\n    'in',\n    '==',\n    '!=',\n    '>',\n    '>=',\n    '<',\n    '<=',\n    'to-boolean'\n]);\nfunction collapsedExpression(expression) {\n    if (dynamicConditionExpressions.has(expression[0])) {\n        for (var i = 1; i < expression.length; i++) {\n            var param = expression[i];\n            if (isDynamicFilter(param)) {\n                return true;\n            }\n        }\n    }\n    return expression;\n}\n// Comparison function to sort numbers and strings\nfunction compare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\nfunction geometryNeeded(filter) {\n    if (!Array.isArray(filter))\n        { return false; }\n    if (filter[0] === 'within')\n        { return true; }\n    for (var index = 1; index < filter.length; index++) {\n        if (geometryNeeded(filter[index]))\n            { return true; }\n    }\n    return false;\n}\nfunction convertFilter(filter) {\n    if (!filter)\n        { return true; }\n    var op = filter[0];\n    if (filter.length <= 1)\n        { return op !== 'any'; }\n    var converted = op === '==' ? convertComparisonOp(filter[1], filter[2], '==') : op === '!=' ? convertNegation(convertComparisonOp(filter[1], filter[2], '==')) : op === '<' || op === '>' || op === '<=' || op === '>=' ? convertComparisonOp(filter[1], filter[2], op) : op === 'any' ? convertDisjunctionOp(filter.slice(1)) : op === 'all' ? ['all'].concat(filter.slice(1).map(convertFilter)) : op === 'none' ? ['all'].concat(filter.slice(1).map(convertFilter).map(convertNegation)) : op === 'in' ? convertInOp(filter[1], filter.slice(2)) : op === '!in' ? convertNegation(convertInOp(filter[1], filter.slice(2))) : op === 'has' ? convertHasOp(filter[1]) : op === '!has' ? convertNegation(convertHasOp(filter[1])) : op === 'within' ? filter : true;\n    return converted;\n}\nfunction convertComparisonOp(property, value, op) {\n    switch (property) {\n    case '$type':\n        return [\n            (\"filter-type-\" + op),\n            value\n        ];\n    case '$id':\n        return [\n            (\"filter-id-\" + op),\n            value\n        ];\n    default:\n        return [\n            (\"filter-\" + op),\n            property,\n            value\n        ];\n    }\n}\nfunction convertDisjunctionOp(filters) {\n    return ['any'].concat(filters.map(convertFilter));\n}\nfunction convertInOp(property, values) {\n    if (values.length === 0) {\n        return false;\n    }\n    switch (property) {\n    case '$type':\n        return [\n            \"filter-type-in\",\n            [\n                'literal',\n                values\n            ]\n        ];\n    case '$id':\n        return [\n            \"filter-id-in\",\n            [\n                'literal',\n                values\n            ]\n        ];\n    default:\n        if (values.length > 200 && !values.some(function (v) { return typeof v !== typeof values[0]; })) {\n            return [\n                'filter-in-large',\n                property,\n                [\n                    'literal',\n                    values.sort(compare)\n                ]\n            ];\n        } else {\n            return [\n                'filter-in-small',\n                property,\n                [\n                    'literal',\n                    values\n                ]\n            ];\n        }\n    }\n}\nfunction convertHasOp(property) {\n    switch (property) {\n    case '$type':\n        return true;\n    case '$id':\n        return [\"filter-has-id\"];\n    default:\n        return [\n            \"filter-has\",\n            property\n        ];\n    }\n}\nfunction convertNegation(filter) {\n    return [\n        '!',\n        filter\n    ];\n}\n\n//      \nvar refProperties = [\n    'type',\n    'source',\n    'source-layer',\n    'minzoom',\n    'maxzoom',\n    'filter',\n    'layout'\n];\n\n//      \nfunction deref(layer, parent) {\n    var result = {};\n    for (var k in layer) {\n        if (k !== 'ref') {\n            result[k] = layer[k];\n        }\n    }\n    refProperties.forEach(function (k) {\n        if (k in parent) {\n            result[k] = parent[k];\n        }\n    });\n    return result;\n}\n/**\n * Given an array of layers, some of which may contain `ref` properties\n * whose value is the `id` of another property, return a new array where\n * such layers have been augmented with the 'type', 'source', etc. properties\n * from the parent layer, and the `ref` property has been removed.\n *\n * The input is not modified. The output may contain references to portions\n * of the input.\n *\n * @private\n * @param {Array<Layer>} layers\n * @returns {Array<Layer>}\n */\nfunction derefLayers(layers) {\n    layers = layers.slice();\n    var map = Object.create(null);\n    for (var i = 0; i < layers.length; i++) {\n        map[layers[i].id] = layers[i];\n    }\n    for (var i$1 = 0; i$1 < layers.length; i$1++) {\n        if ('ref' in layers[i$1]) {\n            layers[i$1] = deref(layers[i$1], map[layers[i$1].ref]);\n        }\n    }\n    return layers;\n}\n\nvar fontWeights = {\n    thin: 100,\n    hairline: 100,\n    'ultra-light': 100,\n    'extra-light': 100,\n    light: 200,\n    book: 300,\n    regular: 400,\n    normal: 400,\n    plain: 400,\n    roman: 400,\n    standard: 400,\n    medium: 500,\n    'semi-bold': 600,\n    'demi-bold': 600,\n    bold: 700,\n    heavy: 800,\n    black: 800,\n    'extra-bold': 800,\n    'ultra-black': 900,\n    'extra-black': 900,\n    'ultra-bold': 900,\n    'heavy-black': 900,\n    fat: 900,\n    poster: 900\n};\nvar sp = ' ';\nvar italicRE = /(italic|oblique)$/i;\nvar fontCache = {};\nvar mapboxToCssFont = function (fonts, size, lineHeight) {\n    var cssData = fontCache[fonts];\n    if (!cssData) {\n        if (!Array.isArray(fonts)) {\n            fonts = [fonts];\n        }\n        var weight = 400;\n        var style = 'normal';\n        var fontFamilies = [];\n        var haveWeight, haveStyle;\n        for (var i = 0, ii = fonts.length; i < ii; ++i) {\n            var font = fonts[i];\n            var parts = font.split(' ');\n            var maybeWeight = parts[parts.length - 1].toLowerCase();\n            if (maybeWeight == 'normal' || maybeWeight == 'italic' || maybeWeight == 'oblique') {\n                style = haveStyle ? style : maybeWeight;\n                parts.pop();\n                maybeWeight = parts[parts.length - 1].toLowerCase();\n            } else if (italicRE.test(maybeWeight)) {\n                maybeWeight = maybeWeight.replace(italicRE, '');\n                style = haveStyle ? style : parts[parts.length - 1].replace(maybeWeight, '');\n            }\n            for (var w in fontWeights) {\n                var previousPart = parts.length > 1 ? parts[parts.length - 2].toLowerCase() : '';\n                if (maybeWeight == w || maybeWeight == w.replace('-', '') || previousPart + '-' + maybeWeight == w) {\n                    weight = haveWeight ? weight : fontWeights[w];\n                    parts.pop();\n                    if (previousPart && w.startsWith(previousPart)) {\n                        parts.pop();\n                    }\n                    break;\n                }\n            }\n            if (!haveWeight && typeof maybeWeight == 'number') {\n                weight = maybeWeight;\n            }\n            var fontFamily = parts.join(sp).replace('Klokantech Noto Sans', 'Noto Sans');\n            if (fontFamily.indexOf(sp) !== -1) {\n                fontFamily = '\"' + fontFamily + '\"';\n            }\n            fontFamilies.push(fontFamily);\n        }\n        // CSS font property: font-style font-weight font-size/line-height font-family\n        cssData = fontCache[fonts] = [\n            style,\n            weight,\n            fontFamilies\n        ];\n    }\n    return cssData[0] + sp + cssData[1] + sp + size + 'px' + (lineHeight ? '/' + lineHeight : '') + sp + cssData[2];\n};\n\nvar mapboxBaseUrl = 'https://api.mapbox.com';\n/**\n * Gets the path from a mapbox:// URL.\n * @param {string} url The Mapbox URL.\n * @return {string} The path.\n * @private\n */\nfunction getMapboxPath(url) {\n    var startsWith = 'mapbox://';\n    if (url.indexOf(startsWith) !== 0) {\n        return '';\n    }\n    return url.slice(startsWith.length);\n}\n/**\n * Turns mapbox:// sprite URLs into resolvable URLs.\n * @param {string} url The sprite URL.\n * @param {string} token The access token.\n * @param {string} styleUrl The style URL.\n * @return {string} A resolvable URL.\n * @private\n */\nfunction normalizeSpriteUrl(url, token, styleUrl) {\n    var mapboxPath = getMapboxPath(url);\n    if (!mapboxPath) {\n        return decodeURI(new URL(url, styleUrl).href);\n    }\n    var startsWith = 'sprites/';\n    if (mapboxPath.indexOf(startsWith) !== 0) {\n        throw new Error((\"unexpected sprites url: \" + url));\n    }\n    var sprite = mapboxPath.slice(startsWith.length);\n    return (mapboxBaseUrl + \"/styles/v1/\" + sprite + \"/sprite?access_token=\" + token);\n}\n/**\n * Turns mapbox:// style URLs into resolvable URLs.\n * @param {string} url The style URL.\n * @param {string} token The access token.\n * @return {string} A resolvable URL.\n * @private\n */\nfunction normalizeStyleUrl(url, token) {\n    var mapboxPath = getMapboxPath(url);\n    if (!mapboxPath) {\n        return decodeURI(new URL(url, location.href).href);\n    }\n    var startsWith = 'styles/';\n    if (mapboxPath.indexOf(startsWith) !== 0) {\n        throw new Error((\"unexpected style url: \" + url));\n    }\n    var style = mapboxPath.slice(startsWith.length);\n    return (mapboxBaseUrl + \"/styles/v1/\" + style + \"?&access_token=\" + token);\n}\n/**\n * Turns mapbox:// source URLs into vector tile URL templates.\n * @param {string} url The source URL.\n * @param {string} token The access token.\n * @param {string} tokenParam The access token key.\n * @param {string} styleUrl The style URL.\n * @return {string} A vector tile template.\n * @private\n */\nfunction normalizeSourceUrl(url, token, tokenParam, styleUrl) {\n    var urlObject = new URL(url, styleUrl);\n    var mapboxPath = getMapboxPath(url);\n    if (!mapboxPath) {\n        if (!token) {\n            return decodeURI(urlObject.href);\n        }\n        urlObject.searchParams.set(tokenParam, token);\n        return decodeURI(urlObject.href);\n    }\n    if (mapboxPath === 'mapbox.satellite') {\n        var sizeFactor = window.devicePixelRatio >= 1.5 ? '@2x' : '';\n        return (\"https://api.mapbox.com/v4/\" + mapboxPath + \"/{z}/{x}/{y}\" + sizeFactor + \".webp?access_token=\" + token);\n    }\n    return (\"https://{a-d}.tiles.mapbox.com/v4/\" + mapboxPath + \"/{z}/{x}/{y}.vector.pbf?access_token=\" + token);\n}\n\nvar styleId = 0;\nvar functionCacheByStyleId = {};\nvar filterCacheByStyleId = {};\n/**\n * @param {Object} glStyle Mapboox style object.\n * @return {Object} Function cache.\n */\nfunction getFunctionCache(glStyle) {\n    if (!glStyle.id) {\n        glStyle.id = styleId++;\n    }\n    var functionCache = {};\n    functionCacheByStyleId[glStyle.id] = functionCache;\n    return functionCache;\n}\n/**\n * @param {Object} glStyle Mapboox style object.\n * @return {Object} Filter cache.\n */\nfunction getFilterCache(glStyle) {\n    if (!glStyle.id) {\n        glStyle.id = styleId++;\n    }\n    var filterCache = {};\n    filterCacheByStyleId[glStyle.id] = filterCache;\n    return filterCache;\n}\nfunction deg2rad(degrees) {\n    return degrees * Math.PI / 180;\n}\nvar defaultResolutions = (function () {\n    var resolutions = [];\n    for (var res = 78271.51696402048; resolutions.length <= 24; res /= 2) {\n        resolutions.push(res);\n    }\n    return resolutions;\n}());\n/**\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @return {HTMLCanvasElement} Canvas.\n */\nfunction createCanvas(width, height) {\n    if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope && typeof OffscreenCanvas !== 'undefined') {\n        // eslint-disable-line\n        return new OffscreenCanvas(width, height);\n    }\n    var canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    return canvas;\n}\nfunction getZoomForResolution(resolution, resolutions) {\n    var i = 0;\n    var ii = resolutions.length;\n    for (; i < ii; ++i) {\n        var candidate = resolutions[i];\n        if (candidate < resolution && i + 1 < ii) {\n            var zoomFactor = resolutions[i] / resolutions[i + 1];\n            return i + Math.log(resolutions[i] / resolution) / Math.log(zoomFactor);\n        }\n    }\n    return ii - 1;\n}\nvar pendingRequests = {};\n/**\n * @param {ResourceType} resourceType Type of resource to load.\n * @param {string} url Url of the resource.\n * @param {Options} [options={}] Options.\n * @param {{request?: Request}} [metadata] Object to be filled with the request.\n * @return {Promise<Object|Response>} Promise that resolves with the loaded resource\n * or rejects with the Response object.\n * @private\n */\nfunction fetchResource(resourceType, url, options, metadata) {\n    if ( options === void 0 ) options = {};\n\n    if (url in pendingRequests) {\n        if (metadata) {\n            metadata.request = pendingRequests[url][0];\n        }\n        return pendingRequests[url][1];\n    }\n    var request = options.transformRequest ? options.transformRequest(url, resourceType) || new Request(url) : new Request(url);\n    if (!request.headers.get('Accept')) {\n        request.headers.set('Accept', 'application/json');\n    }\n    if (metadata) {\n        metadata.request = request;\n    }\n    var pendingRequest = fetch(request).then(function (response) {\n        delete pendingRequests[url];\n        return response.ok ? response.json() : Promise.reject(new Error('Error fetching source ' + url));\n    }).catch(function (error) {\n        delete pendingRequests[url];\n        return Promise.reject(new Error('Error fetching source ' + url));\n    });\n    pendingRequests[url] = [\n        request,\n        pendingRequest\n    ];\n    return pendingRequest;\n}\nfunction getGlStyle(glStyleOrUrl, options) {\n    if (typeof glStyleOrUrl === 'string') {\n        if (glStyleOrUrl.trim().startsWith('{')) {\n            try {\n                var glStyle = JSON.parse(glStyleOrUrl);\n                return Promise.resolve(glStyle);\n            } catch (error) {\n                return Promise.reject(error);\n            }\n        } else {\n            glStyleOrUrl = normalizeStyleUrl(glStyleOrUrl, options.accessToken);\n            return fetchResource('Style', glStyleOrUrl, options);\n        }\n    } else {\n        return Promise.resolve(glStyleOrUrl);\n    }\n}\nfunction getTransformedTilesUrl(tilesUrl, options) {\n    if (options.transformRequest) {\n        var transformedRequest = options.transformRequest(tilesUrl, 'Tiles');\n        if (transformedRequest instanceof Request) {\n            return decodeURI(transformedRequest.url);\n        }\n    }\n    return tilesUrl;\n}\nvar tilejsonCache = {};\n/**\n * @param {Object} glSource glStyle source object.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Object} TileJson\n */\nfunction getTileJson(glSource, styleUrl, options) {\n    if ( options === void 0 ) options = {};\n\n    var cacheKey = [\n        styleUrl,\n        JSON.stringify(glSource)\n    ].toString();\n    var promise = tilejsonCache[cacheKey];\n    if (!promise || options.transformRequest) {\n        var url = glSource.url;\n        if (url && !glSource.tiles) {\n            var normalizedSourceUrl = normalizeSourceUrl(url, options.accessToken, options.accessTokenParam || 'access_token', styleUrl || location.href);\n            if (url.startsWith('mapbox://')) {\n                promise = Promise.resolve(Object.assign({}, glSource, {\n                    url: undefined,\n                    tiles: expandUrl(normalizedSourceUrl)\n                }));\n            } else {\n                var metadata = {};\n                promise = fetchResource('Source', normalizedSourceUrl, options, metadata).then(function (tileJson) {\n                    tileJson.tiles = tileJson.tiles.map(function (tileUrl) {\n                        return getTransformedTilesUrl(normalizeSourceUrl(tileUrl, options.accessToken, options.accessTokenParam || 'access_token', metadata.request.url), options);\n                    });\n                    return Promise.resolve(tileJson);\n                });\n            }\n        } else {\n            glSource = Object.assign({}, glSource, {\n                tiles: glSource.tiles.map(function (tileUrl) {\n                    return getTransformedTilesUrl(normalizeSourceUrl(tileUrl, options.accessToken, options.accessTokenParam || 'access_token', styleUrl || location.href), options);\n                })\n            });\n            promise = Promise.resolve(Object.assign({}, glSource));\n        }\n        tilejsonCache[cacheKey] = promise;\n    }\n    return promise;\n}\n/**\n * @param {HTMLImageElement} spriteImage Sprite image id.\n * @param {{x: number, y: number, width: number, height: number, pixelRatio: number}} spriteImageData Sprite image data.\n * @param {number} haloWidth Halo width.\n * @param {{r: number, g: number, b: number, a: number}} haloColor Halo color.\n * @return {HTMLCanvasElement} Canvas element with the halo.\n */\nfunction drawIconHalo(spriteImage, spriteImageData, haloWidth, haloColor) {\n    var imageCanvas = document.createElement('canvas');\n    var imgSize = [\n        2 * haloWidth * spriteImageData.pixelRatio + spriteImageData.width,\n        2 * haloWidth * spriteImageData.pixelRatio + spriteImageData.height\n    ];\n    imageCanvas.width = imgSize[0];\n    imageCanvas.height = imgSize[1];\n    var imageContext = imageCanvas.getContext('2d');\n    imageContext.drawImage(spriteImage, spriteImageData.x, spriteImageData.y, spriteImageData.width, spriteImageData.height, haloWidth * spriteImageData.pixelRatio, haloWidth * spriteImageData.pixelRatio, spriteImageData.width, spriteImageData.height);\n    var imageData = imageContext.getImageData(0, 0, imgSize[0], imgSize[1]);\n    imageContext.globalCompositeOperation = 'destination-over';\n    imageContext.fillStyle = \"rgba(\" + (haloColor.r * 255) + \",\" + (haloColor.g * 255) + \",\" + (haloColor.b * 255) + \",\" + (haloColor.a) + \")\";\n    var data = imageData.data;\n    for (var i = 0, ii = imageData.width; i < ii; ++i) {\n        for (var j = 0, jj = imageData.height; j < jj; ++j) {\n            var index = (j * ii + i) * 4;\n            var alpha = data[index + 3];\n            if (alpha > 0) {\n                imageContext.arc(i, j, haloWidth * spriteImageData.pixelRatio, 0, 2 * Math.PI);\n            }\n        }\n    }\n    imageContext.fill();\n    return imageCanvas;\n}    /**\n * @typedef {import(\"./apply.js\").Options} Options\n * @typedef {import('./apply.js').ResourceType} ResourceType\n * @private\n */\n\nvar hairSpacePool = Array(256).join('\\u200A');\nfunction applyLetterSpacing(text, letterSpacing) {\n    if (letterSpacing >= 0.05) {\n        var textWithLetterSpacing = '';\n        var lines = text.split('\\n');\n        var joinSpaceString = hairSpacePool.slice(0, Math.round(letterSpacing / 0.1));\n        for (var l = 0, ll = lines.length; l < ll; ++l) {\n            if (l > 0) {\n                textWithLetterSpacing += '\\n';\n            }\n            textWithLetterSpacing += lines[l].split('').join(joinSpaceString);\n        }\n        return textWithLetterSpacing;\n    }\n    return text;\n}\nvar measureContext;\nfunction getMeasureContext() {\n    if (!measureContext) {\n        measureContext = createCanvas(1, 1).getContext('2d');\n    }\n    return measureContext;\n}\nfunction measureText(text, letterSpacing) {\n    return getMeasureContext().measureText(text).width + (text.length - 1) * letterSpacing;\n}\nvar measureCache = {};\nfunction wrapText(text, font, em, letterSpacing) {\n    if (text.indexOf('\\n') !== -1) {\n        var hardLines = text.split('\\n');\n        var lines = [];\n        for (var i = 0, ii = hardLines.length; i < ii; ++i) {\n            lines.push(wrapText(hardLines[i], font, em, letterSpacing));\n        }\n        return lines.join('\\n');\n    }\n    var key = em + ',' + font + ',' + text + ',' + letterSpacing;\n    var wrappedText = measureCache[key];\n    if (!wrappedText) {\n        var words = text.split(' ');\n        if (words.length > 1) {\n            var ctx = getMeasureContext();\n            ctx.font = font;\n            var oneEm = ctx.measureText('M').width;\n            var maxWidth = oneEm * em;\n            var line = '';\n            var lines$1 = [];\n            // Pass 1 - wrap lines to not exceed maxWidth\n            for (var i$1 = 0, ii$1 = words.length; i$1 < ii$1; ++i$1) {\n                var word = words[i$1];\n                var testLine = line + (line ? ' ' : '') + word;\n                if (measureText(testLine, letterSpacing) <= maxWidth) {\n                    line = testLine;\n                } else {\n                    if (line) {\n                        lines$1.push(line);\n                    }\n                    line = word;\n                }\n            }\n            if (line) {\n                lines$1.push(line);\n            }\n            // Pass 2 - add lines with a width of less than 30% of maxWidth to the previous or next line\n            for (var i$2 = 0, ii$2 = lines$1.length; i$2 < ii$2 && ii$2 > 1; ++i$2) {\n                var line$1 = lines$1[i$2];\n                if (measureText(line$1, letterSpacing) < maxWidth * 0.35) {\n                    var prevWidth = i$2 > 0 ? measureText(lines$1[i$2 - 1], letterSpacing) : Infinity;\n                    var nextWidth = i$2 < ii$2 - 1 ? measureText(lines$1[i$2 + 1], letterSpacing) : Infinity;\n                    lines$1.splice(i$2, 1);\n                    ii$2 -= 1;\n                    if (prevWidth < nextWidth) {\n                        lines$1[i$2 - 1] += ' ' + line$1;\n                        i$2 -= 1;\n                    } else {\n                        lines$1[i$2] = line$1 + ' ' + lines$1[i$2];\n                    }\n                }\n            }\n            // Pass 3 - try to fill 80% of maxWidth for each line\n            for (var i$3 = 0, ii$3 = lines$1.length - 1; i$3 < ii$3; ++i$3) {\n                var line$2 = lines$1[i$3];\n                var next = lines$1[i$3 + 1];\n                if (measureText(line$2, letterSpacing) > maxWidth * 0.7 && measureText(next, letterSpacing) < maxWidth * 0.6) {\n                    var lineWords = line$2.split(' ');\n                    var lastWord = lineWords.pop();\n                    if (measureText(lastWord, letterSpacing) < maxWidth * 0.2) {\n                        lines$1[i$3] = lineWords.join(' ');\n                        lines$1[i$3 + 1] = lastWord + ' ' + next;\n                    }\n                    ii$3 -= 1;\n                }\n            }\n            wrappedText = lines$1.join('\\n');\n        } else {\n            wrappedText = text;\n        }\n        wrappedText = applyLetterSpacing(wrappedText, letterSpacing);\n        measureCache[key] = wrappedText;\n    }\n    return wrappedText;\n}\nvar fontFamilyRegEx = /font-family: ?([^;]*);/;\nvar stripQuotesRegEx = /(\"|')/g;\nvar loadedFontFamilies;\nfunction hasFontFamily(family) {\n    if (!loadedFontFamilies) {\n        loadedFontFamilies = {};\n        var styleSheets = document.styleSheets;\n        for (var i = 0, ii = styleSheets.length; i < ii; ++i) {\n            var styleSheet = styleSheets[i];\n            try {\n                var cssRules = styleSheet.rules || styleSheet.cssRules;\n                if (cssRules) {\n                    for (var j = 0, jj = cssRules.length; j < jj; ++j) {\n                        var cssRule = cssRules[j];\n                        if (cssRule.type == 5) {\n                            var match = cssRule.cssText.match(fontFamilyRegEx);\n                            loadedFontFamilies[match[1].replace(stripQuotesRegEx, '')] = true;\n                        }\n                    }\n                }\n            } catch (e) {\n            }\n        }\n    }\n    return family in loadedFontFamilies;\n}\nvar processedFontFamilies = {};\n/**\n * @param {Array} fonts Fonts.\n * @return {Array} Processed fonts.\n * @private\n */\nfunction getFonts(fonts) {\n    var fontsKey = fonts.toString();\n    if (fontsKey in processedFontFamilies) {\n        return processedFontFamilies[fontsKey];\n    }\n    var googleFontDescriptions = [];\n    for (var i = 0, ii = fonts.length; i < ii; ++i) {\n        fonts[i] = fonts[i].replace('Arial Unicode MS', 'Arial');\n        var font = fonts[i];\n        var cssFont = mapboxToCssFont(font, 1);\n        registerFont(cssFont);\n        var parts = cssFont.split(' ');\n        googleFontDescriptions.push([\n            parts.slice(3).join(' ').replace(/\"/g, ''),\n            parts[1],\n            parts[0]\n        ]);\n    }\n    for (var i$1 = 0, ii$1 = googleFontDescriptions.length; i$1 < ii$1; ++i$1) {\n        var googleFontDescription = googleFontDescriptions[i$1];\n        var family = googleFontDescription[0];\n        if (!hasFontFamily(family)) {\n            if (checkedFonts.get(((googleFontDescription[2]) + \"\\n\" + (googleFontDescription[1]) + \" \\n\" + family)) !== 100) {\n                var fontUrl = 'https://fonts.googleapis.com/css?family=' + family.replace(/ /g, '+') + ':' + googleFontDescription[1] + googleFontDescription[2];\n                if (!document.querySelector('link[href=\"' + fontUrl + '\"]')) {\n                    var markup = document.createElement('link');\n                    markup.href = fontUrl;\n                    markup.rel = 'stylesheet';\n                    document.head.appendChild(markup);\n                }\n            }\n        }\n    }\n    processedFontFamilies[fontsKey] = fonts;\n    return fonts;\n}\n\n/*\nol-mapbox-style - Use Mapbox Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\n/**\n * @typedef {import(\"ol/layer/Vector\").default} VectorLayer\n * @typedef {import(\"ol/layer/VectorTile\").default} VectorTileLayer\n * @typedef {import(\"ol/style/Style\").StyleFunction} StyleFunction\n */\nvar types = {\n    'Point': 1,\n    'MultiPoint': 1,\n    'LineString': 2,\n    'MultiLineString': 2,\n    'Polygon': 3,\n    'MultiPolygon': 3\n};\nvar anchor = {\n    'center': [\n        0.5,\n        0.5\n    ],\n    'left': [\n        0,\n        0.5\n    ],\n    'right': [\n        1,\n        0.5\n    ],\n    'top': [\n        0.5,\n        0\n    ],\n    'bottom': [\n        0.5,\n        1\n    ],\n    'top-left': [\n        0,\n        0\n    ],\n    'top-right': [\n        1,\n        0\n    ],\n    'bottom-left': [\n        0,\n        1\n    ],\n    'bottom-right': [\n        1,\n        1\n    ]\n};\nvar expressionData = function (rawExpression, propertySpec) {\n    var compiledExpression = createPropertyExpression(rawExpression, propertySpec);\n    if (compiledExpression.result === 'error') {\n        throw new Error(compiledExpression.value.map(function (err) { return ((err.key) + \": \" + (err.message)); }).join(', '));\n    }\n    return compiledExpression.value;\n};\nvar emptyObj$1 = {};\nvar zoomObj = { zoom: 0 };\nvar renderFeatureCoordinates, renderFeature;\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {string} layoutOrPaint 'layout' or 'paint'.\n * @param {string} property Feature property.\n * @param {number} zoom Zoom.\n * @param {Object} feature Gl feature.\n * @param {Object} [functionCache] Function cache.\n * @param {Object} [featureState] Feature state.\n * @return {?} Value.\n */\nfunction getValue(layer, layoutOrPaint, property, zoom, feature, functionCache, featureState) {\n    var layerId = layer.id;\n    if (!functionCache) {\n        functionCache = {};\n        console.warn('No functionCache provided to getValue()');    //eslint-disable-line no-console\n    }\n    if (!functionCache[layerId]) {\n        functionCache[layerId] = {};\n    }\n    var functions = functionCache[layerId];\n    if (!functions[property]) {\n        var value = (layer[layoutOrPaint] || emptyObj$1)[property];\n        var propertySpec = spec[(layoutOrPaint + \"_\" + (layer.type))][property];\n        if (value === undefined) {\n            value = propertySpec.default;\n        }\n        var isExpr = isExpression(value);\n        if (!isExpr && isFunction(value)) {\n            value = convertFunction(value, propertySpec);\n            isExpr = true;\n        }\n        if (isExpr) {\n            var compiledExpression = expressionData(value, propertySpec);\n            functions[property] = compiledExpression.evaluate.bind(compiledExpression);\n        } else {\n            if (propertySpec.type == 'color') {\n                value = Color$1.parse(value);\n            }\n            functions[property] = function () {\n                return value;\n            };\n        }\n    }\n    zoomObj.zoom = zoom;\n    return functions[property](zoomObj, feature, featureState);\n}\n/**\n * @private\n * @param {Object} layer Gl object layer.\n * @param {number} zoom Zoom.\n * @param {Object} feature Gl feature.\n * @param {Object} [functionCache] Function cache.\n * @return {\"declutter\"|\"obstacle\"|\"none\"} Value.\n */\nfunction getIconDeclutterMode(layer, zoom, feature, functionCache) {\n    var allowOverlap = getValue(layer, 'layout', 'icon-allow-overlap', zoom, feature, functionCache);\n    if (!allowOverlap) {\n        return 'declutter';\n    }\n    var ignorePlacement = getValue(layer, 'layout', 'icon-ignore-placement', zoom, feature, functionCache);\n    if (!ignorePlacement) {\n        return 'obstacle';\n    }\n    return 'none';\n}\n/**\n * @private\n * @param {string} layerId Layer id.\n * @param {?} filter Filter.\n * @param {Object} feature Feature.\n * @param {number} zoom Zoom.\n * @param {Object} [filterCache] Filter cache.\n * @return {boolean} Filter result.\n */\nfunction evaluateFilter(layerId, filter, feature, zoom, filterCache) {\n    if (!filterCache) {\n        console.warn('No filterCache provided to evaluateFilter()');    //eslint-disable-line no-console\n    }\n    if (!(layerId in filterCache)) {\n        filterCache[layerId] = createFilter(filter).filter;\n    }\n    zoomObj.zoom = zoom;\n    return filterCache[layerId](zoomObj, feature);\n}\nvar renderTransparentEnabled = false;\n/**\n * Configure whether features with a transparent style should be rendered. When\n * set to `true`, it will be possible to hit detect content that is not visible,\n * like transparent fills of polygons, using `ol/layer/Layer#getFeatures()` or\n * `ol/Map#getFeaturesAtPixel()`\n * @param {boolean} enabled Rendering of transparent elements is enabled.\n * Default is `false`.\n */\nfunction renderTransparent(enabled) {\n    renderTransparentEnabled = enabled;\n}\n/**\n * @private\n * @param {?} color Color.\n * @param {number} [opacity] Opacity.\n * @return {string} Color.\n */\nfunction colorWithOpacity(color, opacity) {\n    if (color) {\n        if (!renderTransparentEnabled && (color.a === 0 || opacity === 0)) {\n            return undefined;\n        }\n        var a = color.a;\n        opacity = opacity === undefined ? 1 : opacity;\n        return a === 0 ? 'transparent' : 'rgba(' + Math.round(color.r * 255 / a) + ',' + Math.round(color.g * 255 / a) + ',' + Math.round(color.b * 255 / a) + ',' + a * opacity + ')';\n    }\n    return color;\n}\nvar templateRegEx = /\\{[^{}}]*\\}/g;\n/**\n * @private\n * @param {string} text Text.\n * @param {Object} properties Properties.\n * @return {string} Text.\n */\nfunction fromTemplate(text, properties) {\n    return text.replace(templateRegEx, function (match) {\n        return properties[match.slice(1, -1)] || '';\n    });\n}\nvar recordLayer = false;\n/**\n * Turns recording of the Mapbox Style's `layer` on and off. When turned on,\n * the layer that a rendered feature belongs to will be set as the feature's\n * `mapbox-layer` property.\n * @param {boolean} record Recording of the style layer is on.\n */\nfunction recordStyleLayer(record) {\n    if ( record === void 0 ) record = false;\n\n    recordLayer = record;\n}\n/**\n * Creates a style function from the `glStyle` object for all layers that use\n * the specified `source`, which needs to be a `\"type\": \"vector\"` or\n * `\"type\": \"geojson\"` source and applies it to the specified OpenLayers layer.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function also works in a web worker. In worker mode, the main thread needs\n * to listen to messages from the worker and respond with another message to make\n * sure that sprite image loading works:\n *\n * ```js\n *  worker.addEventListener('message', event => {\n *   if (event.data.action === 'loadImage') {\n *     const image = new Image();\n *     image.crossOrigin = 'anonymous';\n *     image.addEventListener('load', function() {\n *       createImageBitmap(image, 0, 0, image.width, image.height).then(imageBitmap => {\n *         worker.postMessage({\n *           action: 'imageLoaded',\n *           image: imageBitmap,\n *           src: event.data.src\n *         }, [imageBitmap]);\n *       });\n *     });\n *     image.src = event.data.src;\n *   }\n * });\n * ```\n *\n * @param {VectorLayer|VectorTileLayer} olLayer OpenLayers layer to\n * apply the style to. In addition to the style, the layer will get two\n * properties: `mapbox-source` will be the `id` of the `glStyle`'s source used\n * for the layer, and `mapbox-layers` will be an array of the `id`s of the\n * `glStyle`'s layers.\n * @param {string|Object} glStyle Mapbox Style object.\n * @param {string|Array<string>} sourceOrLayers `source` key or an array of layer `id`s\n * from the Mapbox Style object. When a `source` key is provided, all layers for\n * the specified source will be included in the style function. When layer `id`s\n * are provided, they must be from layers that use the same source.\n * @param {Array<number>} resolutions\n * Resolutions for mapping resolution to zoom level.\n * @param {Object} spriteData Sprite data from the url specified in\n * the Mapbox Style object's `sprite` property. Only required if a `sprite`\n * property is specified in the Mapbox Style object.\n * @param {string} spriteImageUrl Sprite image url for the sprite\n * specified in the Mapbox Style object's `sprite` property. Only required if a\n * `sprite` property is specified in the Mapbox Style object.\n * @param {function(Array<string>):Array<string>} getFonts Function that\n * receives a font stack as arguments, and returns a (modified) font stack that\n * is available. Font names are the names used in the Mapbox Style object. If\n * not provided, the font stack will be used as-is. This function can also be\n * used for loading web fonts.\n * @param {function(VectorLayer|VectorTileLayer, string):HTMLImageElement|HTMLCanvasElement|string|undefined} [getImage=undefined]\n * Function that returns an image or a URL for an image name. If the result is an HTMLImageElement, it must already be\n * loaded. The layer can be used to call layer.changed() when the loading and processing of the image has finished.\n * This function can be used for icons not in the sprite or to override sprite icons.\n * @return {StyleFunction} Style function for use in\n * `ol.layer.Vector` or `ol.layer.VectorTile`.\n */\nfunction stylefunction(olLayer, glStyle, sourceOrLayers, resolutions, spriteData, spriteImageUrl, getFonts, getImage) {\n    if ( resolutions === void 0 ) resolutions = defaultResolutions;\n    if ( spriteData === void 0 ) spriteData = undefined;\n    if ( spriteImageUrl === void 0 ) spriteImageUrl = undefined;\n    if ( getFonts === void 0 ) getFonts = undefined;\n    if ( getImage === void 0 ) getImage = undefined;\n\n    if (typeof glStyle == 'string') {\n        glStyle = JSON.parse(glStyle);\n    }\n    if (glStyle.version != 8) {\n        throw new Error('glStyle version 8 required.');\n    }\n    var spriteImage, spriteImageSize;\n    if (spriteImageUrl) {\n        if (typeof Image !== 'undefined') {\n            var img = new Image();\n            img.crossOrigin = 'anonymous';\n            img.onload = function () {\n                spriteImage = img;\n                spriteImageSize = [\n                    img.width,\n                    img.height\n                ];\n                olLayer.changed();\n                img.onload = null;\n            };\n            img.src = spriteImageUrl;\n        } else if (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n            //eslint-disable-line\n            var worker = self;\n            // Main thread needs to handle 'loadImage' and dispatch 'imageLoaded'\n            worker.postMessage({\n                action: 'loadImage',\n                src: spriteImageUrl\n            });\n            worker.addEventListener('message', function handler(event) {\n                if (event.data.action === 'imageLoaded' && event.data.src === spriteImageUrl) {\n                    spriteImage = event.data.image;\n                    spriteImageSize = [\n                        spriteImage.width,\n                        spriteImage.height\n                    ];\n                }\n            });\n        }\n    }\n    var allLayers = derefLayers(glStyle.layers);\n    var layersBySourceLayer = {};\n    var mapboxLayers = [];\n    var iconImageCache = {};\n    var patternCache = {};\n    var functionCache = getFunctionCache(glStyle);\n    var filterCache = getFilterCache(glStyle);\n    var mapboxSource;\n    for (var i = 0, ii = allLayers.length; i < ii; ++i) {\n        var layer = allLayers[i];\n        var layerId = layer.id;\n        if (typeof sourceOrLayers == 'string' && layer.source == sourceOrLayers || sourceOrLayers.indexOf(layerId) !== -1) {\n            var sourceLayer = layer['source-layer'];\n            if (!mapboxSource) {\n                mapboxSource = layer.source;\n                var source = glStyle.sources[mapboxSource];\n                if (!source) {\n                    throw new Error((\"Source \\\"\" + mapboxSource + \"\\\" is not defined\"));\n                }\n                var type = source.type;\n                if (type !== 'vector' && type !== 'geojson') {\n                    throw new Error((\"Source \\\"\" + mapboxSource + \"\\\" is not of type \\\"vector\\\" or \\\"geojson\\\", but \\\"\" + type + \"\\\"\"));\n                }\n            } else if (layer.source !== mapboxSource) {\n                throw new Error((\"Layer \\\"\" + layerId + \"\\\" does not use source \\\"\" + mapboxSource));\n            }\n            var layers = layersBySourceLayer[sourceLayer];\n            if (!layers) {\n                layers = [];\n                layersBySourceLayer[sourceLayer] = layers;\n            }\n            layers.push({\n                layer: layer,\n                index: i\n            });\n            mapboxLayers.push(layerId);\n        }\n    }\n    var textHalo = new Stroke();\n    var textColor = new Fill();\n    var styles = [];\n    var styleFunction = function (feature, resolution) {\n        var properties = feature.getProperties();\n        var layers = layersBySourceLayer[properties.layer];\n        if (!layers) {\n            return;\n        }\n        var zoom = resolutions.indexOf(resolution);\n        if (zoom == -1) {\n            zoom = getZoomForResolution(resolution, resolutions);\n        }\n        var type = types[feature.getGeometry().getType()];\n        var f = {\n            id: feature.getId(),\n            properties: properties,\n            type: type\n        };\n        var featureState = olLayer.get('mapbox-featurestate')[feature.getId()];\n        var stylesLength = -1;\n        var featureBelongsToLayer;\n        for (var i = 0, ii = layers.length; i < ii; ++i) {\n            var layerData = layers[i];\n            var layer = layerData.layer;\n            var layerId = layer.id;\n            var layout = layer.layout || emptyObj$1;\n            var paint = layer.paint || emptyObj$1;\n            if (layout.visibility === 'none' || 'minzoom' in layer && zoom < layer.minzoom || 'maxzoom' in layer && zoom >= layer.maxzoom) {\n                continue;\n            }\n            var filter = layer.filter;\n            if (!filter || evaluateFilter(layerId, filter, f, zoom, filterCache)) {\n                featureBelongsToLayer = layer;\n                var color = (void 0), opacity = (void 0), fill = (void 0), stroke = (void 0), strokeColor = (void 0), style = (void 0);\n                var index = layerData.index;\n                if (type == 3 && (layer.type == 'fill' || layer.type == 'fill-extrusion')) {\n                    opacity = getValue(layer, 'paint', layer.type + '-opacity', zoom, f, functionCache, featureState);\n                    if (layer.type + '-pattern' in paint) {\n                        var fillIcon = getValue(layer, 'paint', layer.type + '-pattern', zoom, f, functionCache, featureState);\n                        if (fillIcon) {\n                            var icon = typeof fillIcon === 'string' ? fromTemplate(fillIcon, properties) : fillIcon.toString();\n                            if (spriteImage && spriteData && spriteData[icon]) {\n                                ++stylesLength;\n                                style = styles[stylesLength];\n                                if (!style || !style.getFill() || style.getStroke() || style.getText()) {\n                                    style = new Style({ fill: new Fill() });\n                                    styles[stylesLength] = style;\n                                }\n                                fill = style.getFill();\n                                style.setZIndex(index);\n                                var icon_cache_key = icon + '.' + opacity;\n                                var pattern = patternCache[icon_cache_key];\n                                if (!pattern) {\n                                    var spriteImageData = spriteData[icon];\n                                    var canvas = createCanvas(spriteImageData.width, spriteImageData.height);\n                                    var ctx = canvas.getContext('2d');\n                                    ctx.globalAlpha = opacity;\n                                    ctx.drawImage(spriteImage, spriteImageData.x, spriteImageData.y, spriteImageData.width, spriteImageData.height, 0, 0, spriteImageData.width, spriteImageData.height);\n                                    pattern = ctx.createPattern(canvas, 'repeat');\n                                    patternCache[icon_cache_key] = pattern;\n                                }\n                                fill.setColor(pattern);\n                            }\n                        }\n                    } else {\n                        color = colorWithOpacity(getValue(layer, 'paint', layer.type + '-color', zoom, f, functionCache, featureState), opacity);\n                        if (layer.type + '-outline-color' in paint) {\n                            strokeColor = colorWithOpacity(getValue(layer, 'paint', layer.type + '-outline-color', zoom, f, functionCache, featureState), opacity);\n                        }\n                        if (!strokeColor) {\n                            strokeColor = color;\n                        }\n                        if (color || strokeColor) {\n                            ++stylesLength;\n                            style = styles[stylesLength];\n                            if (!style || color && !style.getFill() || !color && style.getFill() || strokeColor && !style.getStroke() || !strokeColor && style.getStroke() || style.getText()) {\n                                style = new Style({\n                                    fill: color ? new Fill() : undefined,\n                                    stroke: strokeColor ? new Stroke() : undefined\n                                });\n                                styles[stylesLength] = style;\n                            }\n                            if (color) {\n                                fill = style.getFill();\n                                fill.setColor(color);\n                            }\n                            if (strokeColor) {\n                                stroke = style.getStroke();\n                                stroke.setColor(strokeColor);\n                                stroke.setWidth(0.5);\n                            }\n                            style.setZIndex(index);\n                        }\n                    }\n                }\n                if (type != 1 && layer.type == 'line') {\n                    color = !('line-pattern' in paint) && 'line-color' in paint ? colorWithOpacity(getValue(layer, 'paint', 'line-color', zoom, f, functionCache, featureState), getValue(layer, 'paint', 'line-opacity', zoom, f, functionCache, featureState)) : undefined;\n                    var width = getValue(layer, 'paint', 'line-width', zoom, f, functionCache, featureState);\n                    if (color && width > 0) {\n                        ++stylesLength;\n                        style = styles[stylesLength];\n                        if (!style || !style.getStroke() || style.getFill() || style.getText()) {\n                            style = new Style({ stroke: new Stroke() });\n                            styles[stylesLength] = style;\n                        }\n                        stroke = style.getStroke();\n                        stroke.setLineCap(getValue(layer, 'layout', 'line-cap', zoom, f, functionCache, featureState));\n                        stroke.setLineJoin(getValue(layer, 'layout', 'line-join', zoom, f, functionCache, featureState));\n                        stroke.setMiterLimit(getValue(layer, 'layout', 'line-miter-limit', zoom, f, functionCache, featureState));\n                        stroke.setColor(color);\n                        stroke.setWidth(width);\n                        stroke.setLineDash(paint['line-dasharray'] ? getValue(layer, 'paint', 'line-dasharray', zoom, f, functionCache, featureState).map(function (x) {\n                            return x * width;\n                        }) : null);\n                        style.setZIndex(index);\n                    }\n                }\n                var hasImage = false;\n                var text = null;\n                var placementAngle = 0;\n                var icon$1 = (void 0), iconImg = (void 0), skipLabel = (void 0);\n                if ((type == 1 || type == 2) && 'icon-image' in layout) {\n                    var iconImage = getValue(layer, 'layout', 'icon-image', zoom, f, functionCache, featureState);\n                    if (iconImage) {\n                        icon$1 = typeof iconImage === 'string' ? fromTemplate(iconImage, properties) : iconImage.toString();\n                        var styleGeom = undefined;\n                        var imageElement = getImage ? getImage(olLayer, icon$1) : undefined;\n                        if (spriteImage && spriteData && spriteData[icon$1] || imageElement) {\n                            var iconRotationAlignment = getValue(layer, 'layout', 'icon-rotation-alignment', zoom, f, functionCache, featureState);\n                            if (type == 2) {\n                                var geom = feature.getGeometry();\n                                // ol package and ol-debug.js only\n                                if (geom.getFlatMidpoint || geom.getFlatMidpoints) {\n                                    var extent = geom.getExtent();\n                                    var size = Math.sqrt(Math.max(Math.pow((extent[2] - extent[0]) / resolution, 2), Math.pow((extent[3] - extent[1]) / resolution, 2)));\n                                    if (size > 150) {\n                                        //FIXME Do not hard-code a size of 150\n                                        var midpoint = geom.getType() === 'MultiLineString' ? geom.getFlatMidpoints() : geom.getFlatMidpoint();\n                                        if (!renderFeature) {\n                                            renderFeatureCoordinates = [\n                                                NaN,\n                                                NaN\n                                            ];\n                                            renderFeature = new RenderFeature('Point', renderFeatureCoordinates, [], {}, null);\n                                        }\n                                        styleGeom = renderFeature;\n                                        renderFeatureCoordinates[0] = midpoint[0];\n                                        renderFeatureCoordinates[1] = midpoint[1];\n                                        var placement = getValue(layer, 'layout', 'symbol-placement', zoom, f, functionCache, featureState);\n                                        if (placement === 'line' && iconRotationAlignment === 'map') {\n                                            var stride = geom.getStride();\n                                            var coordinates = geom.getFlatCoordinates();\n                                            for (var i$1 = 0, ii$1 = coordinates.length - stride; i$1 < ii$1; i$1 += stride) {\n                                                var x1 = coordinates[i$1];\n                                                var y1 = coordinates[i$1 + 1];\n                                                var x2 = coordinates[i$1 + stride];\n                                                var y2 = coordinates[i$1 + stride + 1];\n                                                var minX = Math.min(x1, x2);\n                                                var minY = Math.min(y1, y2);\n                                                var maxX = Math.max(x1, x2);\n                                                var maxY = Math.max(y1, y2);\n                                                if (midpoint[0] >= minX && midpoint[0] <= maxX && midpoint[1] >= minY && midpoint[1] <= maxY) {\n                                                    placementAngle = Math.atan2(y1 - y2, x2 - x1);\n                                                    break;\n                                                }\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                            if (type !== 2 || styleGeom) {\n                                var iconSize = getValue(layer, 'layout', 'icon-size', zoom, f, functionCache, featureState);\n                                var iconColor = paint['icon-color'] !== undefined ? getValue(layer, 'paint', 'icon-color', zoom, f, functionCache, featureState) : null;\n                                if (!iconColor || iconColor.a !== 0) {\n                                    var haloColor = getValue(layer, 'paint', 'icon-halo-color', zoom, f, functionCache, featureState);\n                                    var haloWidth = getValue(layer, 'paint', 'icon-halo-width', zoom, f, functionCache, featureState);\n                                    var iconCacheKey = icon$1 + \".\" + iconSize + \".\" + haloWidth + \".\" + haloColor;\n                                    if (iconColor !== null) {\n                                        iconCacheKey += \".\" + iconColor;\n                                    }\n                                    iconImg = iconImageCache[iconCacheKey];\n                                    if (!iconImg) {\n                                        var declutterMode = getIconDeclutterMode(layer, zoom, f, functionCache);\n                                        var displacement = (void 0);\n                                        if ('icon-offset' in layout) {\n                                            displacement = getValue(layer, 'layout', 'icon-offset', zoom, f, functionCache, featureState);\n                                            displacement[1] *= -1;\n                                        }\n                                        var color$1 = iconColor ? [\n                                            iconColor.r * 255,\n                                            iconColor.g * 255,\n                                            iconColor.b * 255,\n                                            iconColor.a\n                                        ] : undefined;\n                                        if (imageElement) {\n                                            var iconOptions = {\n                                                color: color$1,\n                                                rotateWithView: iconRotationAlignment === 'map',\n                                                displacement: displacement,\n                                                declutterMode: declutterMode\n                                            };\n                                            if (typeof imageElement === 'string') {\n                                                // it is a src URL\n                                                iconOptions.src = imageElement;\n                                            } else {\n                                                iconOptions.img = imageElement;\n                                                iconOptions.imgSize = [\n                                                    imageElement.width,\n                                                    imageElement.height\n                                                ];\n                                            }\n                                            iconImg = new Icon(iconOptions);\n                                        } else {\n                                            var spriteImageData$1 = spriteData[icon$1];\n                                            var img = (void 0), imgSize = (void 0), size$1 = (void 0), offset = (void 0);\n                                            if (haloWidth) {\n                                                img = drawIconHalo(spriteImage, spriteImageData$1, haloWidth, haloColor);\n                                                imgSize = [\n                                                    img.width,\n                                                    img.height\n                                                ];\n                                            } else {\n                                                img = spriteImage;\n                                                imgSize = spriteImageSize;\n                                                size$1 = [\n                                                    spriteImageData$1.width,\n                                                    spriteImageData$1.height\n                                                ];\n                                                offset = [\n                                                    spriteImageData$1.x,\n                                                    spriteImageData$1.y\n                                                ];\n                                            }\n                                            iconImg = new Icon({\n                                                color: color$1,\n                                                img: img,\n                                                imgSize: imgSize,\n                                                size: size$1,\n                                                offset: offset,\n                                                rotateWithView: iconRotationAlignment === 'map',\n                                                scale: iconSize / spriteImageData$1.pixelRatio,\n                                                displacement: displacement,\n                                                declutterMode: declutterMode\n                                            });\n                                        }\n                                        iconImageCache[iconCacheKey] = iconImg;\n                                    }\n                                }\n                                if (iconImg) {\n                                    ++stylesLength;\n                                    style = styles[stylesLength];\n                                    if (!style || !style.getImage() || style.getFill() || style.getStroke()) {\n                                        style = new Style();\n                                        styles[stylesLength] = style;\n                                    }\n                                    style.setGeometry(styleGeom);\n                                    iconImg.setRotation(placementAngle + deg2rad(getValue(layer, 'layout', 'icon-rotate', zoom, f, functionCache, featureState)));\n                                    iconImg.setOpacity(getValue(layer, 'paint', 'icon-opacity', zoom, f, functionCache, featureState));\n                                    iconImg.setAnchor(anchor[getValue(layer, 'layout', 'icon-anchor', zoom, f, functionCache, featureState)]);\n                                    style.setImage(iconImg);\n                                    text = style.getText();\n                                    style.setText(undefined);\n                                    style.setZIndex(index);\n                                    hasImage = true;\n                                    skipLabel = false;\n                                }\n                            } else {\n                                skipLabel = true;\n                            }\n                        }\n                    }\n                }\n                if (type == 1 && layer.type === 'circle') {\n                    ++stylesLength;\n                    style = styles[stylesLength];\n                    if (!style || !style.getImage() || style.getFill() || style.getStroke()) {\n                        style = new Style();\n                        styles[stylesLength] = style;\n                    }\n                    var circleRadius = 'circle-radius' in paint ? getValue(layer, 'paint', 'circle-radius', zoom, f, functionCache, featureState) : 5;\n                    var circleStrokeColor = colorWithOpacity(getValue(layer, 'paint', 'circle-stroke-color', zoom, f, functionCache, featureState), getValue(layer, 'paint', 'circle-stroke-opacity', zoom, f, functionCache, featureState));\n                    var circleColor = colorWithOpacity(getValue(layer, 'paint', 'circle-color', zoom, f, functionCache, featureState), getValue(layer, 'paint', 'circle-opacity', zoom, f, functionCache, featureState));\n                    var circleStrokeWidth = getValue(layer, 'paint', 'circle-stroke-width', zoom, f, functionCache, featureState);\n                    var cache_key = circleRadius + '.' + circleStrokeColor + '.' + circleColor + '.' + circleStrokeWidth;\n                    iconImg = iconImageCache[cache_key];\n                    if (!iconImg) {\n                        iconImg = new Circle({\n                            radius: circleRadius,\n                            stroke: circleStrokeColor && circleStrokeWidth > 0 ? new Stroke({\n                                width: circleStrokeWidth,\n                                color: circleStrokeColor\n                            }) : undefined,\n                            fill: circleColor ? new Fill({ color: circleColor }) : undefined,\n                            declutterMode: 'none'\n                        });\n                        iconImageCache[cache_key] = iconImg;\n                    }\n                    style.setImage(iconImg);\n                    text = style.getText();\n                    style.setText(undefined);\n                    style.setGeometry(undefined);\n                    style.setZIndex(index);\n                    hasImage = true;\n                }\n                var label = (void 0), font = (void 0), textLineHeight = (void 0), textSize = (void 0), letterSpacing = (void 0), maxTextWidth = (void 0);\n                if ('text-field' in layout) {\n                    textSize = Math.round(getValue(layer, 'layout', 'text-size', zoom, f, functionCache, featureState));\n                    var fontArray = getValue(layer, 'layout', 'text-font', zoom, f, functionCache, featureState);\n                    textLineHeight = getValue(layer, 'layout', 'text-line-height', zoom, f, functionCache, featureState);\n                    font = mapboxToCssFont(getFonts ? getFonts(fontArray) : fontArray, textSize, textLineHeight);\n                    if (!font.includes('sans-serif')) {\n                        font += ',sans-serif';\n                    }\n                    letterSpacing = getValue(layer, 'layout', 'text-letter-spacing', zoom, f, functionCache, featureState);\n                    maxTextWidth = getValue(layer, 'layout', 'text-max-width', zoom, f, functionCache, featureState);\n                    var textField = getValue(layer, 'layout', 'text-field', zoom, f, functionCache, featureState);\n                    if (typeof textField === 'object' && textField.sections) {\n                        if (textField.sections.length === 1) {\n                            label = textField.toString();\n                        } else {\n                            label = textField.sections.reduce(function (acc, chunk, i) {\n                                var fonts = chunk.fontStack ? chunk.fontStack.split(',') : fontArray;\n                                var chunkFont = mapboxToCssFont(getFonts ? getFonts(fonts) : fonts, textSize * (chunk.scale || 1), textLineHeight);\n                                var text = chunk.text;\n                                if (text === '\\n') {\n                                    acc.push('\\n', '');\n                                    return acc;\n                                }\n                                if (type == 2) {\n                                    acc.push(applyLetterSpacing(text, letterSpacing), chunkFont);\n                                    return;\n                                }\n                                text = wrapText(text, chunkFont, maxTextWidth, letterSpacing).split('\\n');\n                                for (var i$1 = 0, ii = text.length; i$1 < ii; ++i$1) {\n                                    if (i$1 > 0) {\n                                        acc.push('\\n', '');\n                                    }\n                                    acc.push(text[i$1], chunkFont);\n                                }\n                                return acc;\n                            }, []);\n                        }\n                    } else {\n                        label = fromTemplate(textField, properties).trim();\n                    }\n                    opacity = getValue(layer, 'paint', 'text-opacity', zoom, f, functionCache, featureState);\n                }\n                if (label && opacity && !skipLabel) {\n                    if (!hasImage) {\n                        ++stylesLength;\n                        style = styles[stylesLength];\n                        if (!style || !style.getText() || style.getFill() || style.getStroke()) {\n                            style = new Style();\n                            styles[stylesLength] = style;\n                        }\n                        style.setImage(undefined);\n                        style.setGeometry(undefined);\n                    }\n                    if (!style.getText()) {\n                        style.setText(text || new Text({\n                            padding: [\n                                2,\n                                2,\n                                2,\n                                2\n                            ]\n                        }));\n                    }\n                    text = style.getText();\n                    var textTransform = layout['text-transform'];\n                    if (textTransform == 'uppercase') {\n                        label = Array.isArray(label) ? label.map(function (t, i) { return i % 2 ? t : t.toUpperCase(); }) : label.toUpperCase();\n                    } else if (textTransform == 'lowercase') {\n                        label = Array.isArray(label) ? label.map(function (t, i) { return i % 2 ? t : t.toLowerCase(); }) : label.toLowerCase();\n                    }\n                    var wrappedLabel = Array.isArray(label) ? label : type == 2 ? applyLetterSpacing(label, letterSpacing) : wrapText(label, font, maxTextWidth, letterSpacing);\n                    text.setText(wrappedLabel);\n                    text.setFont(font);\n                    text.setRotation(deg2rad(getValue(layer, 'layout', 'text-rotate', zoom, f, functionCache, featureState)));\n                    var textAnchor = getValue(layer, 'layout', 'text-anchor', zoom, f, functionCache, featureState);\n                    var placement$1 = hasImage || type == 1 ? 'point' : getValue(layer, 'layout', 'symbol-placement', zoom, f, functionCache, featureState);\n                    text.setPlacement(placement$1);\n                    if (typeof text.setRepeat === 'function') {\n                        var symbolSpacing = getValue(layer, 'layout', 'symbol-spacing', zoom, f, functionCache, featureState);\n                        text.setRepeat(symbolSpacing * 2);\n                    }\n                    text.setOverflow(placement$1 === 'point');\n                    var textHaloWidth = getValue(layer, 'paint', 'text-halo-width', zoom, f, functionCache, featureState);\n                    var textOffset = getValue(layer, 'layout', 'text-offset', zoom, f, functionCache, featureState);\n                    var textTranslate = getValue(layer, 'paint', 'text-translate', zoom, f, functionCache, featureState);\n                    // Text offset has to take halo width and line height into account\n                    var vOffset = 0;\n                    var hOffset = 0;\n                    if (placement$1 == 'point') {\n                        var textAlign = 'center';\n                        if (textAnchor.indexOf('left') !== -1) {\n                            textAlign = 'left';\n                            hOffset = textHaloWidth;\n                        } else if (textAnchor.indexOf('right') !== -1) {\n                            textAlign = 'right';\n                            hOffset = -textHaloWidth;\n                        }\n                        text.setTextAlign(textAlign);\n                        var textRotationAlignment = getValue(layer, 'layout', 'text-rotation-alignment', zoom, f, functionCache, featureState);\n                        text.setRotateWithView(textRotationAlignment == 'map');\n                    } else {\n                        text.setMaxAngle(deg2rad(getValue(layer, 'layout', 'text-max-angle', zoom, f, functionCache, featureState)) * label.length / wrappedLabel.length);\n                        text.setTextAlign();\n                        text.setRotateWithView(false);\n                    }\n                    var textBaseline = 'middle';\n                    if (textAnchor.indexOf('bottom') == 0) {\n                        textBaseline = 'bottom';\n                        vOffset = -textHaloWidth - 0.5 * (textLineHeight - 1) * textSize;\n                    } else if (textAnchor.indexOf('top') == 0) {\n                        textBaseline = 'top';\n                        vOffset = textHaloWidth + 0.5 * (textLineHeight - 1) * textSize;\n                    }\n                    text.setTextBaseline(textBaseline);\n                    var textJustify = getValue(layer, 'layout', 'text-justify', zoom, f, functionCache, featureState);\n                    text.setJustify(textJustify === 'auto' ? undefined : textJustify);\n                    text.setOffsetX(textOffset[0] * textSize + hOffset + textTranslate[0]);\n                    text.setOffsetY(textOffset[1] * textSize + vOffset + textTranslate[1]);\n                    textColor.setColor(colorWithOpacity(getValue(layer, 'paint', 'text-color', zoom, f, functionCache, featureState), opacity));\n                    text.setFill(textColor);\n                    var haloColor$1 = colorWithOpacity(getValue(layer, 'paint', 'text-halo-color', zoom, f, functionCache, featureState), opacity);\n                    if (haloColor$1) {\n                        textHalo.setColor(haloColor$1);\n                        // spec here : https://docs.mapbox.com/mapbox-gl-js/style-spec/#paint-symbol-text-halo-width\n                        // Halo width must be doubled because it is applied around the center of the text outline\n                        textHaloWidth *= 2;\n                        // 1/4 of text size (spec) x 2\n                        var halfTextSize = 0.5 * textSize;\n                        textHalo.setWidth(textHaloWidth <= halfTextSize ? textHaloWidth : halfTextSize);\n                        text.setStroke(textHalo);\n                    } else {\n                        text.setStroke(undefined);\n                    }\n                    var textPadding = getValue(layer, 'layout', 'text-padding', zoom, f, functionCache, featureState);\n                    var padding = text.getPadding();\n                    if (textPadding !== padding[0]) {\n                        padding[0] = textPadding;\n                        padding[1] = textPadding;\n                        padding[2] = textPadding;\n                        padding[3] = textPadding;\n                    }\n                    style.setZIndex(index);\n                }\n            }\n        }\n        if (stylesLength > -1) {\n            styles.length = stylesLength + 1;\n            if (recordLayer) {\n                if (typeof feature.set === 'function') {\n                    // ol/Feature\n                    feature.set('mapbox-layer', featureBelongsToLayer);\n                } else {\n                    // ol/render/Feature\n                    feature.getProperties()['mapbox-layer'] = featureBelongsToLayer;\n                }\n            }\n            return styles;\n        }\n    };\n    olLayer.setStyle(styleFunction);\n    olLayer.set('mapbox-source', mapboxSource);\n    olLayer.set('mapbox-layers', mapboxLayers);\n    olLayer.set('mapbox-featurestate', {});\n    return styleFunction;\n}\n\n/**\n * Generates a shaded relief image given elevation data.  Uses a 3x3\n * neighborhood for determining slope and aspect.\n * @param {Array<ImageData>} inputs Array of input images.\n * @param {Object} data Data added in the \"beforeoperations\" event.\n * @return {ImageData} Output image.\n */\nfunction hillshade(inputs, data) {\n    var elevationImage = inputs[0];\n    var width = elevationImage.width;\n    var height = elevationImage.height;\n    var elevationData = elevationImage.data;\n    var shadeData = new Uint8ClampedArray(elevationData.length);\n    var dp = data.resolution * 2;\n    var maxX = width - 1;\n    var maxY = height - 1;\n    var pixel = [\n        0,\n        0,\n        0,\n        0\n    ];\n    var twoPi = 2 * Math.PI;\n    var halfPi = Math.PI / 2;\n    var sunEl = Math.PI * data.sunEl / 180;\n    var sunAz = Math.PI * data.sunAz / 180;\n    var cosSunEl = Math.cos(sunEl);\n    var sinSunEl = Math.sin(sunEl);\n    var highlightColor = data.highlightColor;\n    var shadowColor = data.shadowColor;\n    var accentColor = data.accentColor;\n    var pixelX, pixelY, x0, x1, y0, y1, offset, z0, z1, dzdx, dzdy, slope, aspect, accent, scaled, shade, scaledAccentColor, compositeShadeColor, clamp, slopeScaleBase, scaledSlope, cosIncidence;\n    function calculateElevation(pixel) {\n        // The method used to extract elevations from the DEM.\n        // In this case the format used is\n        // red + green * 2 + blue * 3\n        //\n        // Other frequently used methods include the Mapbox format\n        // (red * 256 * 256 + green * 256 + blue) * 0.1 - 10000\n        // and the Terrarium format\n        // (red * 256 + green + blue / 256) - 32768\n        //\n        return (pixel[0] * 256 * 256 + pixel[1] * 256 + pixel[2]) * 0.1 - 10000;\n    }\n    for (pixelY = 0; pixelY <= maxY; ++pixelY) {\n        y0 = pixelY === 0 ? 0 : pixelY - 1;\n        y1 = pixelY === maxY ? maxY : pixelY + 1;\n        for (pixelX = 0; pixelX <= maxX; ++pixelX) {\n            x0 = pixelX === 0 ? 0 : pixelX - 1;\n            x1 = pixelX === maxX ? maxX : pixelX + 1;\n            // determine elevation for (x0, pixelY)\n            offset = (pixelY * width + x0) * 4;\n            pixel[0] = elevationData[offset];\n            pixel[1] = elevationData[offset + 1];\n            pixel[2] = elevationData[offset + 2];\n            pixel[3] = elevationData[offset + 3];\n            z0 = data.vert * calculateElevation(pixel);\n            // determine elevation for (x1, pixelY)\n            offset = (pixelY * width + x1) * 4;\n            pixel[0] = elevationData[offset];\n            pixel[1] = elevationData[offset + 1];\n            pixel[2] = elevationData[offset + 2];\n            pixel[3] = elevationData[offset + 3];\n            z1 = data.vert * calculateElevation(pixel);\n            dzdx = (z1 - z0) / dp;\n            // determine elevation for (pixelX, y0)\n            offset = (y0 * width + pixelX) * 4;\n            pixel[0] = elevationData[offset];\n            pixel[1] = elevationData[offset + 1];\n            pixel[2] = elevationData[offset + 2];\n            pixel[3] = elevationData[offset + 3];\n            z0 = data.vert * calculateElevation(pixel);\n            // determine elevation for (pixelX, y1)\n            offset = (y1 * width + pixelX) * 4;\n            pixel[0] = elevationData[offset];\n            pixel[1] = elevationData[offset + 1];\n            pixel[2] = elevationData[offset + 2];\n            pixel[3] = elevationData[offset + 3];\n            z1 = data.vert * calculateElevation(pixel);\n            dzdy = (z1 - z0) / dp;\n            aspect = Math.atan2(dzdy, -dzdx);\n            if (aspect < 0) {\n                aspect = halfPi - aspect;\n            } else if (aspect > halfPi) {\n                aspect = twoPi - aspect + halfPi;\n            } else {\n                aspect = halfPi - aspect;\n            }\n            // Bootstrap slope and corresponding incident values\n            slope = Math.atan(Math.sqrt(dzdx * dzdx + dzdy * dzdy));\n            cosIncidence = sinSunEl * Math.cos(slope) + cosSunEl * Math.sin(slope) * Math.cos(sunAz - aspect);\n            accent = Math.cos(slope);\n            // 255 for Hex colors\n            scaled = 255 * cosIncidence;\n            /*\n       * The following is heavily inspired\n       * by [Maplibre's equivalent WebGL shader](https://github.com/maplibre/maplibre-gl-js/blob/main/src/shaders/hillshade.fragment.glsl)\n       */\n            // Forces given value to stay between two given extremes\n            clamp = Math.min(Math.max(2 * data.sunEl, 0), 1);\n            // Intensity basis for hillshade opacity\n            slopeScaleBase = 1.875 - data.opacity * 1.75;\n            // Intensity interpolation so that higher intensity values create more opaque hillshading\n            scaledSlope = data.opacity !== 0.5 ? halfPi * ((Math.pow(slopeScaleBase, slope) - 1) / (Math.pow(slopeScaleBase, halfPi) - 1)) : slope;\n            // Accent hillshade color with given accentColor to emphasize rougher terrain\n            scaledAccentColor = {\n                r: (1 - accent) * accentColor.r * clamp * 255,\n                g: (1 - accent) * accentColor.g * clamp * 255,\n                b: (1 - accent) * accentColor.b * clamp * 255,\n                a: (1 - accent) * accentColor.a * clamp * 255\n            };\n            // Allows highlight vs shadow discrimination\n            shade = Math.abs(((aspect + sunAz) / Math.PI + 0.5) % 2 - 1);\n            // Creates a composite color mix between highlight & shadow colors to emphasize slopes\n            compositeShadeColor = {\n                r: (highlightColor.r * (1 - shade) + shadowColor.r * shade) * scaled,\n                g: (highlightColor.g * (1 - shade) + shadowColor.g * shade) * scaled,\n                b: (highlightColor.b * (1 - shade) + shadowColor.b * shade) * scaled,\n                a: (highlightColor.a * (1 - shade) + shadowColor.a * shade) * scaled\n            };\n            // Fill in result color value\n            offset = (pixelY * width + pixelX) * 4;\n            shadeData[offset] = scaledAccentColor.r * (1 - shade) + compositeShadeColor.r;\n            shadeData[offset + 1] = scaledAccentColor.g * (1 - shade) + compositeShadeColor.g;\n            shadeData[offset + 2] = scaledAccentColor.b * (1 - shade) + compositeShadeColor.b;\n            // Key opacity on the scaledSlope to improve legibility by increasing higher elevation rates' contrast\n            shadeData[offset + 3] = elevationData[offset + 3] * data.opacity * clamp * Math.sin(scaledSlope);\n        }\n    }\n    return new ImageData(shadeData, width, height);\n}\n\n/*\nol-mapbox-style - Use Mapbox Style objects with OpenLayers\nCopyright 2016-present ol-mapbox-style contributors\nLicense: https://raw.githubusercontent.com/openlayers/ol-mapbox-style/master/LICENSE\n*/\n/**\n * @typedef {Object} FeatureIdentifier\n * @property {string|number} id The feature id.\n * @property {string} source The source id.\n */\n/**\n * @typedef {Object} Options\n * @property {string} [accessToken] Access token for 'mapbox://' urls.\n * @property {function(string, ResourceType): (Request|void)} [transformRequest]\n * Function for controlling how `ol-mapbox-style` fetches resources. Can be used for modifying\n * the url, adding headers or setting credentials options. Called with the url and the resource\n * type as arguments, this function is supposed to return a `Request` object. Without a return value,\n * the original request will not be modified. For `Tiles` and `GeoJSON` resources, only the `url` of\n * the returned request will be respected.\n * @property {string} [projection='EPSG:3857'] Only useful when working with non-standard projections.\n * Code of a projection registered with OpenLayers. All sources of the style must be provided in this\n * projection. The projection must also have a valid extent defined, which will be used to determine the\n * origin and resolutions of the tile grid for all tiled sources of the style. When provided, the bbox\n * placeholder in tile and geojson urls changes: the default is `{bbox-epsg-3857}`, when projection is e.g.\n * set to `EPSG:4326`, the bbox placeholder will be `{bbox-epsg-4326}`.\n * @property {Array<number>} [resolutions] Only useful when working with non-standard projections.\n * Resolutions for mapping resolution to the `zoom` used in the Mapbox style.\n * @property {string} [styleUrl] URL of the Mapbox GL style. Required for styles that were provided\n * as object, when they contain a relative sprite url, or sources referencing data by relative url.\n * @property {function(VectorLayer|VectorTileLayer, string):HTMLImageElement|HTMLCanvasElement|string|undefined} [getImage=undefined]\n * Function that returns an image for an icon name. If the result is an HTMLImageElement, it must already be\n * loaded. The layer can be used to call layer.changed() when the loading and processing of the image has finished.\n * This function be used for icons not in the sprite or to override sprite icons.\n * @property {string} [accessTokenParam='access_token'] Access token param. For internal use.\n */\n/**\n * @typedef {Object} ApplyStyleOptions\n * @property {string} [source=''] Source. Default is `''`, which causes the first source in the\n * style to be used.\n * @property {Array<string>} [layers] Layers. If no source is provided, the layers with the\n * provided ids will be used from the style's `layers` array. All layers need to use the same source.\n * @property {boolean} [updateSource=true] Update or create vector (tile) layer source with parameters\n * specified for the source in the mapbox style definition.\n */\n/** @typedef {'Style'|'Source'|'Sprite'|'SpriteImage'|'Tiles'|'GeoJSON'} ResourceType */\n/**\n * @param {import(\"ol/proj/Projection.js\").default} projection Projection.\n * @param {number} [tileSize=512] Tile size.\n * @return {Array<number>} Resolutions.\n */\nfunction getTileResolutions(projection, tileSize) {\n    if ( tileSize === void 0 ) tileSize = 512;\n\n    return projection.getExtent() ? createXYZ({\n        extent: projection.getExtent(),\n        tileSize: tileSize,\n        maxZoom: 22\n    }).getResolutions() : defaultResolutions;\n}\n/**\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Options} Completed options with accessToken and accessTokenParam.\n */\nfunction completeOptions(styleUrl, options) {\n    if (!options.accessToken) {\n        options = Object.assign({}, options);\n        var searchParams = new URL(styleUrl).searchParams;\n        // The last search parameter is the access token\n        searchParams.forEach(function (value, key) {\n            options.accessToken = value;\n            options.accessTokenParam = key;\n        });\n    }\n    return options;\n}\n/**\n * Applies a style function to an `ol/layer/VectorTile` or `ol/layer/Vector`\n * with an `ol/source/VectorTile` or an `ol/source/Vector`. If the layer does not have a source\n * yet, it will be created and populated from the information in the `glStyle` (unless `updateSource` is\n * set to `false`).\n *\n * **Example:**\n * ```js\n * import {applyStyle} from 'ol-mapbox-style';\n * import {VectorTile} from 'ol/layer.js';\n *\n * const layer = new VectorTile({declutter: true});\n * applyStyle(layer, 'https://api.maptiler.com/maps/basic/style.json?key=YOUR_OPENMAPTILES_TOKEN');\n * ```\n *\n * The style function will render all layers from the `glStyle` object that use the source\n * of the first layer, the specified `source`, or a subset of layers from the same source. The\n * source needs to be a `\"type\": \"vector\"` or `\"type\": \"geojson\"` source.\n *\n * Two additional properties will be set on the provided layer:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * @param {VectorTileLayer|VectorLayer} layer OpenLayers layer. When the layer has a source configured,\n * it will be modified to use the configuration from the glStyle's `source`. Options specified on the\n * layer's source will override those from the glStyle's `source`, except for `url`,\n * `tileUrlFunction` and `tileGrid` (exception: when the source projection is not `EPSG:3857`).\n * @param {string|Object} glStyle Mapbox Style object.\n * @param {string|Array<string>|Options&ApplyStyleOptions} [sourceOrLayersOrOptions] Options or\n * `source` key or an array of layer `id`s from the Mapbox Style object. When a `source` key is\n * provided, all layers for the specified source will be included in the style function. When layer\n * `id`s are provided, they must be from layers that use the same source. When not provided or a falsey\n * value, all layers using the first source specified in the glStyle will be rendered.\n * @param {Options&ApplyStyleOptions|string} [optionsOrPath] **Deprecated**. Options. Alternatively the path of the style file\n * (only required when a relative path is used for the `\"sprite\"` property of the style).\n * @param {Array<number>} [resolutions] **Deprecated**. Resolutions for mapping resolution to zoom level.\n * Only needed when working with non-standard tile grids or projections, can also be supplied with\n * options.\n * @return {Promise} Promise which will be resolved when the style can be used\n * for rendering.\n */\nfunction applyStyle(layer, glStyle, sourceOrLayersOrOptions, optionsOrPath, resolutions) {\n    if ( sourceOrLayersOrOptions === void 0 ) sourceOrLayersOrOptions = '';\n    if ( optionsOrPath === void 0 ) optionsOrPath = {};\n    if ( resolutions === void 0 ) resolutions = undefined;\n\n    var styleUrl, sourceId;\n    /** @type {Options&ApplyStyleOptions} */\n    var options;\n    var sourceOrLayers;\n    var updateSource = true;\n    if (typeof sourceOrLayersOrOptions !== 'string' && !Array.isArray(sourceOrLayersOrOptions)) {\n        options = sourceOrLayersOrOptions;\n        sourceOrLayers = options.source || options.layers;\n        optionsOrPath = options;\n    } else {\n        sourceOrLayers = sourceOrLayersOrOptions;\n    }\n    if (typeof optionsOrPath === 'string') {\n        styleUrl = optionsOrPath;\n        options = {};\n    } else {\n        styleUrl = optionsOrPath.styleUrl;\n        options = optionsOrPath;\n    }\n    if (options.updateSource === false) {\n        updateSource = false;\n    }\n    if (!resolutions) {\n        resolutions = options.resolutions;\n    }\n    if (!styleUrl && typeof glStyle === 'string' && !glStyle.trim().startsWith('{')) {\n        styleUrl = glStyle;\n    }\n    if (styleUrl) {\n        styleUrl = styleUrl.startsWith('data:') ? location.href : normalizeStyleUrl(styleUrl, options.accessToken);\n        options = completeOptions(styleUrl, options);\n    }\n    return new Promise(function (resolve, reject) {\n        // TODO: figure out where best place to check source type is\n        // Note that the source arg is an array of gl layer ids and each must be\n        // dereferenced to get source type to validate\n        getGlStyle(glStyle, options).then(function (glStyle) {\n            if (glStyle.version != 8) {\n                return reject(new Error('glStyle version 8 required.'));\n            }\n            if (!(layer instanceof VectorLayer || layer instanceof VectorTileLayer)) {\n                return reject(new Error('Can only apply to VectorLayer or VectorTileLayer'));\n            }\n            var type = layer instanceof VectorTileLayer ? 'vector' : 'geojson';\n            if (!sourceOrLayers) {\n                sourceId = Object.keys(glStyle.sources).find(function (key) {\n                    return glStyle.sources[key].type === type;\n                });\n                sourceOrLayers = sourceId;\n            } else if (Array.isArray(sourceOrLayers)) {\n                sourceId = glStyle.layers.find(function (layer) {\n                    return layer.id === sourceOrLayers[0];\n                }).source;\n            } else {\n                sourceId = sourceOrLayers;\n            }\n            if (!sourceId) {\n                return reject(new Error((\"No \" + type + \" source found in the glStyle.\")));\n            }\n            function assignSource() {\n                if (!updateSource) {\n                    return Promise.resolve();\n                }\n                if (layer instanceof VectorTileLayer) {\n                    return setupVectorSource(glStyle.sources[sourceId], styleUrl, options).then(function (source) {\n                        var targetSource = layer.getSource();\n                        if (!targetSource) {\n                            layer.setSource(source);\n                        } else if (source !== targetSource) {\n                            targetSource.setTileUrlFunction(source.getTileUrlFunction());\n                            //@ts-ignore\n                            if (!targetSource.format_) {\n                                //@ts-ignore\n                                targetSource.format_ = source.format_;\n                            }\n                            if (!targetSource.getAttributions()) {\n                                targetSource.setAttributions(source.getAttributions());\n                            }\n                            if (targetSource.getTileLoadFunction() === defaultLoadFunction) {\n                                targetSource.setTileLoadFunction(source.getTileLoadFunction());\n                            }\n                            if (equivalent(targetSource.getProjection(), source.getProjection())) {\n                                targetSource.tileGrid = source.getTileGrid();\n                            }\n                        }\n                        if (!isFinite(layer.getMaxResolution()) && !isFinite(layer.getMinZoom())) {\n                            var tileGrid = layer.getSource().getTileGrid();\n                            layer.setMaxResolution(tileGrid.getResolution(tileGrid.getMinZoom()));\n                        }\n                    });\n                }\n                var glSource = glStyle.sources[sourceId];\n                var source = layer.getSource();\n                if (!source || source.get('mapbox-source') !== glSource) {\n                    source = setupGeoJSONSource(glSource, styleUrl, options);\n                }\n                var targetSource = layer.getSource();\n                if (!targetSource) {\n                    layer.setSource(source);\n                } else if (source !== targetSource) {\n                    if (!targetSource.getAttributions()) {\n                        targetSource.setAttributions(source.getAttributions());\n                    }\n                    //@ts-ignore\n                    if (!targetSource.format_) {\n                        //@ts-ignore\n                        targetSource.format_ = source.getFormat();\n                    }\n                    //@ts-ignore\n                    targetSource.url_ = source.getUrl();\n                }\n                return Promise.resolve();\n            }\n            var spriteScale, spriteData, spriteImageUrl, style;\n            function onChange() {\n                if (!style && (!glStyle.sprite || spriteData)) {\n                    if (options.projection && !resolutions) {\n                        var projection = get$1(options.projection);\n                        var units = projection.getUnits();\n                        if (units !== 'm') {\n                            resolutions = defaultResolutions.map(function (resolution) { return resolution / METERS_PER_UNIT[units]; });\n                        }\n                    }\n                    style = stylefunction(layer, glStyle, sourceOrLayers, resolutions, spriteData, spriteImageUrl, getFonts, options.getImage);\n                    if (!layer.getStyle()) {\n                        reject(new Error((\"Nothing to show for source [\" + sourceId + \"]\")));\n                    } else {\n                        assignSource().then(resolve).catch(reject);\n                    }\n                } else if (style) {\n                    layer.setStyle(style);\n                    assignSource().then(resolve).catch(reject);\n                } else {\n                    reject(new Error('Something went wrong trying to apply style.'));\n                }\n            }\n            if (glStyle.sprite) {\n                var sprite = new URL(normalizeSpriteUrl(glStyle.sprite, options.accessToken, styleUrl || location.href));\n                spriteScale = window.devicePixelRatio >= 1.5 ? 0.5 : 1;\n                var sizeFactor = spriteScale == 0.5 ? '@2x' : '';\n                var spriteUrl = sprite.origin + sprite.pathname + sizeFactor + '.json' + sprite.search;\n                new Promise(function (resolve, reject) {\n                    fetchResource('Sprite', spriteUrl, options).then(resolve).catch(function (error) {\n                        spriteUrl = sprite.origin + sprite.pathname + '.json' + sprite.search;\n                        fetchResource('Sprite', spriteUrl, options).then(resolve).catch(reject);\n                    });\n                }).then(function (spritesJson) {\n                    if (spritesJson === undefined) {\n                        reject(new Error('No sprites found.'));\n                    }\n                    spriteData = spritesJson;\n                    spriteImageUrl = sprite.origin + sprite.pathname + sizeFactor + '.png' + sprite.search;\n                    if (options.transformRequest) {\n                        var transformed = options.transformRequest(spriteImageUrl, 'SpriteImage');\n                        if (transformed instanceof Request) {\n                            spriteImageUrl = encodeURI(transformed.url);\n                        }\n                    }\n                    onChange();\n                }).catch(function (err) {\n                    reject(new Error((\"Sprites cannot be loaded: \" + spriteUrl + \": \" + (err.message))));\n                });\n            } else {\n                onChange();\n            }\n        }).catch(reject);\n    });\n}\nvar emptyObj = {};\nfunction setFirstBackground(mapOrLayer, glStyle, options) {\n    glStyle.layers.some(function (layer) {\n        if (layer.type === 'background') {\n            if (mapOrLayer instanceof Layer) {\n                mapOrLayer.setBackground(function (resolution) {\n                    return getBackgroundColor(layer, resolution, options, {});\n                });\n                return true;\n            } else if (mapOrLayer instanceof Map || mapOrLayer instanceof LayerGroup) {\n                mapOrLayer.getLayers().push(setupBackgroundLayer(layer, options, {}));\n                return true;\n            }\n        }\n    });\n}\n/**\n * Applies properties of the Mapbox Style's first `background` layer to the\n * provided map or VectorTile layer.\n *\n * **Example:**\n * ```js\n * import {applyBackground} from 'ol-mapbox-style';\n * import {Map} from 'ol';\n *\n * const map = new Map({target: 'map'});\n * applyBackground(map, 'https://api.maptiler.com/maps/basic/style.json?key=YOUR_OPENMAPTILES_TOKEN');\n * ```\n * @param {Map|VectorTileLayer} mapOrLayer OpenLayers Map or VectorTile layer.\n * @param {Object|string} glStyle Mapbox Style object or url.\n * @param {Options} options Options.\n * @return {Promise} Promise that resolves when the background is applied.\n */\nfunction applyBackground(mapOrLayer, glStyle, options) {\n    if ( options === void 0 ) options = {};\n\n    return getGlStyle(glStyle, options).then(function (glStyle) {\n        setFirstBackground(mapOrLayer, glStyle, options);\n    });\n}\nfunction getSourceIdByRef(layers, ref) {\n    var sourceId;\n    layers.some(function (layer) {\n        if (layer.id == ref) {\n            sourceId = layer.source;\n            return true;\n        }\n    });\n    return sourceId;\n}\nfunction extentFromTileJSON(tileJSON, projection) {\n    var bounds = tileJSON.bounds;\n    if (bounds) {\n        var ll = fromLonLat([\n            bounds[0],\n            bounds[1]\n        ], projection);\n        var tr = fromLonLat([\n            bounds[2],\n            bounds[3]\n        ], projection);\n        return [\n            ll[0],\n            ll[1],\n            tr[0],\n            tr[1]\n        ];\n    }\n    return get$1(projection).getExtent();\n}\nfunction sourceOptionsFromTileJSON(glSource, tileJSON, options) {\n    var tileJSONSource = new TileJSON({\n        tileJSON: tileJSON,\n        tileSize: glSource.tileSize || tileJSON.tileSize || 512\n    });\n    var tileJSONDoc = tileJSONSource.getTileJSON();\n    var tileGrid = tileJSONSource.getTileGrid();\n    var projection = get$1(options.projection || 'EPSG:3857');\n    var extent = extentFromTileJSON(tileJSONDoc, projection);\n    var projectionExtent = projection.getExtent();\n    var minZoom = tileJSONDoc.minzoom || 0;\n    var maxZoom = tileJSONDoc.maxzoom || 22;\n    /** @type {import(\"ol/source/VectorTile.js\").Options} */\n    var sourceOptions = {\n        attributions: tileJSONSource.getAttributions(),\n        projection: projection,\n        tileGrid: new TileGrid({\n            origin: projectionExtent ? getTopLeft(projectionExtent) : tileGrid.getOrigin(0),\n            extent: extent || tileGrid.getExtent(),\n            minZoom: minZoom,\n            resolutions: getTileResolutions(projection, tileJSON.tileSize).slice(0, maxZoom + 1),\n            tileSize: tileGrid.getTileSize(0)\n        })\n    };\n    if (Array.isArray(tileJSONDoc.tiles)) {\n        sourceOptions.urls = tileJSONDoc.tiles;\n    } else {\n        sourceOptions.url = tileJSONDoc.tiles;\n    }\n    return sourceOptions;\n}\nfunction getBackgroundColor(glLayer, resolution, options, functionCache) {\n    var background = {\n        id: glLayer.id,\n        type: glLayer.type\n    };\n    var layout = glLayer.layout || {};\n    var paint = glLayer.paint || {};\n    background['paint'] = paint;\n    var zoom = getZoomForResolution(resolution, options.resolutions || defaultResolutions);\n    var bg, opacity;\n    if (paint['background-color'] !== undefined) {\n        bg = getValue(background, 'paint', 'background-color', zoom, emptyObj, functionCache);\n    }\n    if (paint['background-opacity'] !== undefined) {\n        opacity = getValue(background, 'paint', 'background-opacity', zoom, emptyObj, functionCache);\n    }\n    return layout.visibility == 'none' ? undefined : colorWithOpacity(bg, opacity);\n}\n/**\n * @param {Object} glLayer Mapbox Style layer object.\n * @param {Options} options Options.\n * @param {Object} functionCache Cache for functions.\n * @return {Layer} OpenLayers layer.\n */\nfunction setupBackgroundLayer(glLayer, options, functionCache) {\n    var div = document.createElement('div');\n    div.className = 'ol-mapbox-style-background';\n    div.style.position = 'absolute';\n    div.style.width = '100%';\n    div.style.height = '100%';\n    return new Layer({\n        source: new Source({}),\n        render: function render(frameState) {\n            var color = getBackgroundColor(glLayer, frameState.viewState.resolution, options, functionCache);\n            div.style.backgroundColor = color;\n            return div;\n        }\n    });\n}\n/**\n * Creates an OpenLayers VectorTile source for a gl source entry.\n * @param {Object} glSource \"source\" entry from a Mapbox Style object.\n * @param {string|undefined} styleUrl URL to use for the source. This is expected to be the complete http(s) url,\n * with access key applied.\n * @param {Options} options Options.\n * @return {Promise<import(\"ol/source/VectorTile\").default>} Promise resolving to a VectorTile source.\n * @private\n */\nfunction setupVectorSource(glSource, styleUrl, options) {\n    return new Promise(function (resolve, reject) {\n        getTileJson(glSource, styleUrl, options).then(function (tileJSON) {\n            var sourceOptions = sourceOptionsFromTileJSON(glSource, tileJSON, options);\n            sourceOptions.format = new MVT();\n            if (Array.isArray(tileJSON.tiles)) {\n                sourceOptions.urls = tileJSON.tiles;\n            } else {\n                sourceOptions.url = tileJSON.tiles;\n            }\n            resolve(new VectorTileSource(sourceOptions));\n        }).catch(reject);\n    });\n}\nfunction setupVectorLayer(glSource, styleUrl, options) {\n    var layer = new VectorTileLayer({\n        declutter: true,\n        visible: false\n    });\n    setupVectorSource(glSource, styleUrl, options).then(function (source) {\n        source.set('mapbox-source', glSource);\n        layer.setSource(source);\n    }).catch(function (error) {\n        layer.setSource(undefined);\n    });\n    return layer;\n}\nfunction getBboxTemplate(projection) {\n    var projCode = projection ? projection.getCode() : 'EPSG:3857';\n    return (\"{bbox-\" + (projCode.toLowerCase().replace(/[^a-z0-9]/g, '-')) + \"}\");\n}\nfunction setupRasterLayer(glSource, styleUrl, options) {\n    var layer = new TileLayer();\n    getTileJson(glSource, styleUrl, options).then(function (tileJson) {\n        var source = new TileJSON({\n            interpolate: options.interpolate === undefined ? true : options.interpolate,\n            transition: 0,\n            crossOrigin: 'anonymous',\n            tileJSON: tileJson\n        });\n        source.tileGrid = sourceOptionsFromTileJSON(glSource, tileJson, options).tileGrid;\n        if (options.projection) {\n            //@ts-ignore\n            source.projection = get$1(options.projection);\n        }\n        var getTileUrl = source.getTileUrlFunction();\n        source.setTileUrlFunction(function (tileCoord, pixelRatio, projection) {\n            var bboxTemplate = getBboxTemplate(projection);\n            var src = getTileUrl(tileCoord, pixelRatio, projection);\n            if (src.indexOf(bboxTemplate) != -1) {\n                var bbox = source.getTileGrid().getTileCoordExtent(tileCoord);\n                src = src.replace(bboxTemplate, bbox.toString());\n            }\n            return src;\n        });\n        source.set('mapbox-source', glSource);\n        layer.setSource(source);\n    }).catch(function (error) {\n        layer.setSource(undefined);\n    });\n    return layer;\n}\n/**\n *\n * @param {Object} glSource \"source\" entry from a Mapbox Style object.\n * @param {string} styleUrl Style url\n * @param {Options} options ol-mapbox-style options.\n * @return {ImageLayer<Raster>} The raster layer\n */\nfunction setupHillshadeLayer(glSource, styleUrl, options) {\n    var tileLayer = setupRasterLayer(glSource, styleUrl, options);\n    /** @type {ImageLayer<Raster>} */\n    var layer = new ImageLayer({\n        source: new Raster({\n            operationType: 'image',\n            operation: hillshade,\n            sources: [tileLayer]\n        })\n    });\n    return layer;\n}\nvar geoJsonFormat = new GeoJSON();\n/**\n * @param {Object} glSource glStyle source.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {VectorSource} Configured vector source.\n */\nfunction setupGeoJSONSource(glSource, styleUrl, options) {\n    var data = glSource.data;\n    var sourceOptions = {};\n    if (typeof data == 'string') {\n        var geoJsonUrl = normalizeSourceUrl(data, options.accessToken, options.accessTokenParam || 'access_token', styleUrl || location.href);\n        if (options.transformRequest) {\n            var transformed = options.transformRequest(geoJsonUrl, 'GeoJSON');\n            if (transformed instanceof Request) {\n                geoJsonUrl = decodeURI(transformed.url);\n            }\n        }\n        if (/\\{bbox-[0-9a-z-]+\\}/.test(geoJsonUrl)) {\n            var extentUrl = function (extent, resolution, projection) {\n                var bboxTemplate = getBboxTemplate(projection);\n                return geoJsonUrl.replace(bboxTemplate, (\"\" + (extent.join(','))));\n            };\n            var source$1 = new VectorSource({\n                attributions: glSource.attribution,\n                format: geoJsonFormat,\n                url: extentUrl,\n                strategy: bbox\n            });\n            source$1.set('mapbox-source', glSource);\n            return source$1;\n        }\n        return new VectorSource({\n            attributions: glSource.attribution,\n            format: geoJsonFormat,\n            url: geoJsonUrl\n        });\n    }\n    sourceOptions.features = geoJsonFormat.readFeatures(data, { featureProjection: getUserProjection() || 'EPSG:3857' });\n    var source = new VectorSource(Object.assign({\n        attributions: glSource.attribution,\n        format: geoJsonFormat\n    }, sourceOptions));\n    source.set('mapbox-source', glSource);\n    return source;\n}\nfunction setupGeoJSONLayer(glSource, styleUrl, options) {\n    return new VectorLayer({\n        declutter: true,\n        source: setupGeoJSONSource(glSource, styleUrl, options),\n        visible: false\n    });\n}\nfunction prerenderRasterLayer(glLayer, layer, functionCache) {\n    var zoom = null;\n    return function (event) {\n        if (glLayer.paint && 'raster-opacity' in glLayer.paint && event.frameState.viewState.zoom !== zoom) {\n            zoom = event.frameState.viewState.zoom;\n            delete functionCache[glLayer.id];\n            updateRasterLayerProperties(glLayer, layer, zoom, functionCache);\n        }\n    };\n}\nfunction updateRasterLayerProperties(glLayer, layer, zoom, functionCache) {\n    var opacity = getValue(glLayer, 'paint', 'raster-opacity', zoom, emptyObj, functionCache);\n    layer.setOpacity(opacity);\n}\nfunction manageVisibility(layer, mapOrGroup) {\n    layer.on('change', function () {\n        var mapboxLayers = derefLayers(mapOrGroup.get('mapbox-style').layers);\n        var layerMapboxLayerids = layer.get('mapbox-layers');\n        var visible = mapboxLayers.filter(function (mapboxLayer) {\n            return layerMapboxLayerids.includes(mapboxLayer.id);\n        }).some(function (mapboxLayer) {\n            return !mapboxLayer.layout || !mapboxLayer.layout.visibility || mapboxLayer.layout.visibility === 'visible';\n        });\n        if (layer.get('visible') !== visible) {\n            layer.setVisible(visible);\n        }\n    });\n}\n/**\n * @param {*} glStyle Mapbox Style.\n * @param {Map|LayerGroup} mapOrGroup Map or layer group.\n * @param {string} styleUrl Style URL.\n * @param {Options} options Options.\n * @return {Promise} Promise that resolves when the style is loaded.\n */\nfunction processStyle(glStyle, mapOrGroup, styleUrl, options) {\n    var promises = [];\n    var view = null;\n    if (mapOrGroup instanceof Map) {\n        view = mapOrGroup.getView();\n        if (!view.isDef() && !view.getRotation() && !view.getResolutions()) {\n            var projection = options.projection ? get$1(options.projection) : view.getProjection();\n            view = new View(Object.assign(view.getProperties(), {\n                maxResolution: defaultResolutions[0] / METERS_PER_UNIT[projection.getUnits()],\n                projection: options.projection || view.getProjection()\n            }));\n            mapOrGroup.setView(view);\n        }\n        if ('center' in glStyle && !view.getCenter()) {\n            view.setCenter(fromLonLat(glStyle.center, view.getProjection()));\n        }\n        if ('zoom' in glStyle && view.getZoom() === undefined) {\n            view.setResolution(defaultResolutions[0] / METERS_PER_UNIT[view.getProjection().getUnits()] / Math.pow(2, glStyle.zoom));\n        }\n        if (!view.getCenter() || view.getZoom() === undefined) {\n            view.fit(view.getProjection().getExtent(), {\n                nearest: true,\n                size: mapOrGroup.getSize()\n            });\n        }\n    }\n    var glLayers = glStyle.layers;\n    var layerIds = [];\n    var layer, glSource, glSourceId, id;\n    var loop = function ( i, ii ) {\n        var glLayer = glLayers[i];\n        var type = glLayer.type;\n        if (type == 'heatmap') {\n            //FIXME Unsupported layer type\n            throw new Error((type + \" layers are not supported\"));\n        } else {\n            id = glLayer.source || getSourceIdByRef(glLayers, glLayer.ref);\n            // this technique assumes gl layers will be in a particular order\n            if (!id || id != glSourceId) {\n                if (layerIds.length) {\n                    promises.push(finalizeLayer(layer, layerIds, glStyle, styleUrl, mapOrGroup, options));\n                    layerIds = [];\n                }\n                var functionCache = getFunctionCache(glStyle);\n                glSource = glStyle.sources[id];\n                if (type == 'background') {\n                    layer = setupBackgroundLayer(glLayer, options, functionCache);\n                } else if (glSource.type == 'vector') {\n                    layer = setupVectorLayer(glSource, styleUrl, options);\n                    manageVisibility(layer, mapOrGroup);\n                } else if (glSource.type == 'raster') {\n                    layerIds = [];\n                    layer = setupRasterLayer(glSource, styleUrl, options);\n                    layer.setVisible(glLayer.layout ? glLayer.layout.visibility !== 'none' : true);\n                    layer.on('prerender', prerenderRasterLayer(glLayer, layer, functionCache));\n                } else if (glSource.type == 'geojson') {\n                    layer = setupGeoJSONLayer(glSource, styleUrl, options);\n                    manageVisibility(layer, mapOrGroup);\n                } else if (glSource.type == 'raster-dem' && glLayer.type == 'hillshade') {\n                    layerIds = [];\n                    var hillshadeLayer = setupHillshadeLayer(glSource, styleUrl, options);\n                    layer = hillshadeLayer;\n                    hillshadeLayer.getSource().on('beforeoperations', function (event) {\n                        var data = event.data;\n                        data.resolution = event.resolution;\n                        var zoom = getZoomForResolution(event.resolution, options.resolutions || defaultResolutions);\n                        data.vert = 5 * getValue(glLayer, 'paint', 'hillshade-exaggeration', zoom, emptyObj, functionCache);\n                        data.sunAz = getValue(glLayer, 'paint', 'hillshade-illumination-direction', zoom, emptyObj, functionCache);\n                        data.sunEl = 35;\n                        data.opacity = 0.3;\n                        data.highlightColor = getValue(glLayer, 'paint', 'hillshade-highlight-color', zoom, emptyObj, functionCache);\n                        data.shadowColor = getValue(glLayer, 'paint', 'hillshade-shadow-color', zoom, emptyObj, functionCache);\n                        data.accentColor = getValue(glLayer, 'paint', 'hillshade-accent-color', zoom, emptyObj, functionCache);\n                    });\n                    layer.setVisible(glLayer.layout ? glLayer.layout.visibility !== 'none' : true);\n                }\n                glSourceId = id;\n                if (layer) {\n                    layer.set('mapbox-source', glSourceId);\n                }\n            }\n            layerIds.push(glLayer.id);\n        }\n    };\n\n    for (var i = 0, ii = glLayers.length; i < ii; ++i) loop( i);\n    promises.push(finalizeLayer(layer, layerIds, glStyle, styleUrl, mapOrGroup, options));\n    mapOrGroup.set('mapbox-style', glStyle);\n    return Promise.all(promises);\n}\n/**\n * Loads and applies a Mapbox Style object into an OpenLayers Map or LayerGroup.\n * This includes the map background, the layers, and for Map instances that did not\n * have a View defined yet also the center and the zoom.\n *\n * **Example:**\n * ```js\n * import apply from 'ol-mapbox-style';\n *\n * apply('map', 'mapbox://styles/mapbox/bright-v9', {accessToken: 'YOUR_MAPBOX_TOKEN'});\n * ```\n *\n * The center and zoom will only be set if present in the Mapbox Style document,\n * and if not already set on the OpenLayers map.\n *\n * Layers will be added to the OpenLayers map, without affecting any layers that\n * might already be set on the map.\n *\n * Layers added by `apply()` will have two additional properties:\n *\n *  * `mapbox-source`: The `id` of the Mapbox Style document's source that the\n *    OpenLayers layer was created from. Usually `apply()` creates one\n *    OpenLayers layer per Mapbox Style source, unless the layer stack has\n *    layers from different sources in between.\n *  * `mapbox-layers`: The `id`s of the Mapbox Style document's layers that are\n *    included in the OpenLayers layer.\n *\n * This function sets an additional `mapbox-style` property on the OpenLayers\n * Map or LayerGroup instance, which holds the Mapbox Style object.\n *\n * @param {Map|HTMLElement|string|LayerGroup} mapOrGroupOrElement Either an existing\n * OpenLayers Map instance, or a HTML element, or the id of a HTML element that will be\n * the target of a new OpenLayers Map, or a layer group. If layer group, styles\n * releated to the map and view will be ignored.\n * @param {string|Object} style JSON style object or style url pointing to a\n * Mapbox Style object. When using Mapbox APIs, the url is the `styleUrl`\n * shown in Mapbox Studio's \"share\" panel. In addition, the `accessToken` option\n * (see below) must be set.\n * When passed as JSON style object, all OpenLayers layers created by `apply()`\n * will be immediately available, but they may not have a source yet (i.e. when\n * they are defined by a TileJSON url in the Mapbox Style document). When passed\n * as style url, layers will be added to the map when the Mapbox Style document\n * is loaded and parsed.\n * @param {Options} options Options.\n * @return {Promise<Map|LayerGroup>} A promise that resolves after all layers have been added to\n * the OpenLayers Map instance or LayerGroup, their sources set, and their styles applied. The\n * `resolve` callback will be called with the OpenLayers Map instance or LayerGroup as\n * argument.\n */\nfunction apply(mapOrGroupOrElement, style, options) {\n    if ( options === void 0 ) options = {};\n\n    var promise;\n    /** @type {Map|LayerGroup} */\n    var mapOrGroup;\n    if (typeof mapOrGroupOrElement === 'string' || mapOrGroupOrElement instanceof HTMLElement) {\n        mapOrGroup = new Map({ target: mapOrGroupOrElement });\n    } else {\n        mapOrGroup = mapOrGroupOrElement;\n    }\n    if (typeof style === 'string') {\n        var styleUrl = style.startsWith('data:') ? location.href : normalizeStyleUrl(style, options.accessToken);\n        options = completeOptions(styleUrl, options);\n        promise = new Promise(function (resolve, reject) {\n            getGlStyle(style, options).then(function (glStyle) {\n                processStyle(glStyle, mapOrGroup, styleUrl, options).then(function () {\n                    resolve(mapOrGroup);\n                }).catch(reject);\n            }).catch(function (err) {\n                reject(new Error((\"Could not load \" + style + \": \" + (err.message))));\n            });\n        });\n    } else {\n        promise = new Promise(function (resolve, reject) {\n            processStyle(style, mapOrGroup, !options.styleUrl || options.styleUrl.startsWith('data:') ? location.href : normalizeStyleUrl(options.styleUrl, options.accessToken), options).then(function () {\n                resolve(mapOrGroup);\n            }).catch(reject);\n        });\n    }\n    return promise;\n}\n/**\n * If layerIds is not empty, applies the style specified in glStyle to the layer,\n * and adds the layer to the map.\n *\n * The layer may not yet have a source when the function is called.  If so, the style\n * is applied to the layer via a once listener on the 'change:source' event.\n *\n * @param {Layer} layer An OpenLayers layer instance.\n * @param {Array<string>} layerIds Array containing layer ids of already-processed layers.\n * @param {Object} glStyle Style as a JSON object.\n * @param {string|undefined} styleUrl The original style URL. Only required\n * when a relative path is used with the `\"sprite\"` property of the style.\n * @param {Map|LayerGroup} mapOrGroup OpenLayers Map.\n * @param {Options} options Options.\n * @return {Promise} Returns a promise that resolves after the source has\n * been set on the specified layer, and the style has been applied.\n * @private\n */\nfunction finalizeLayer(layer, layerIds, glStyle, styleUrl, mapOrGroup, options) {\n    if ( options === void 0 ) options = {};\n\n    var minZoom = 24;\n    var maxZoom = 0;\n    var glLayers = glStyle.layers;\n    for (var i = 0, ii = glLayers.length; i < ii; ++i) {\n        var glLayer = glLayers[i];\n        if (layerIds.indexOf(glLayer.id) !== -1) {\n            minZoom = Math.min('minzoom' in glLayer ? glLayer.minzoom : 0, minZoom);\n            maxZoom = Math.max('maxzoom' in glLayer ? glLayer.maxzoom : 24, maxZoom);\n        }\n    }\n    return new Promise(function (resolve, reject) {\n        var setStyle = function () {\n            var source = layer.getSource();\n            if (!source || source.getState() === 'error') {\n                reject(new Error('Error accessing data for source ' + layer.get('mapbox-source')));\n                return;\n            }\n            if ('getTileGrid' in source) {\n                var tileGrid = /** @type {import(\"ol/source/Tile.js\").default|import(\"ol/source/VectorTile.js\").default} */\n                source.getTileGrid();\n                if (tileGrid) {\n                    var sourceMinZoom = tileGrid.getMinZoom();\n                    if (minZoom > 0 || sourceMinZoom > 0) {\n                        layer.setMaxResolution(Math.min(defaultResolutions[minZoom], tileGrid.getResolution(sourceMinZoom)) + 1e-9);\n                    }\n                    if (maxZoom < 24) {\n                        layer.setMinResolution(defaultResolutions[maxZoom] + 1e-9);\n                    }\n                }\n            } else {\n                if (minZoom > 0) {\n                    layer.setMaxResolution(defaultResolutions[minZoom] + 1e-9);\n                }\n            }\n            if (source instanceof VectorSource || source instanceof VectorTileSource) {\n                applyStyle(layer, glStyle, layerIds, Object.assign({ styleUrl: styleUrl }, options)).then(function () {\n                    layer.setVisible(true);\n                    resolve();\n                }).catch(reject);\n            } else {\n                resolve();\n            }\n        };\n        layer.set('mapbox-layers', layerIds);\n        var layers = mapOrGroup.getLayers();\n        if (layers.getArray().indexOf(layer) === -1) {\n            layers.push(layer);\n        }\n        if (layer.getSource()) {\n            setStyle();\n        } else {\n            layer.once('change:source', setStyle);\n        }\n    });\n}\n/**\n * Get the OpenLayers layer instance that contains the provided Mapbox Style\n * `layer`. Note that multiple Mapbox Style layers are combined in a single\n * OpenLayers layer instance when they use the same Mapbox Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} layerId Mapbox Style layer id.\n * @return {Layer} OpenLayers layer instance.\n */\nfunction getLayer(map, layerId) {\n    var layers = map.getLayers().getArray();\n    for (var i = 0, ii = layers.length; i < ii; ++i) {\n        var mapboxLayers = layers[i].get('mapbox-layers');\n        if (mapboxLayers && mapboxLayers.indexOf(layerId) !== -1) {\n            return layers[i];\n        }\n    }\n}\n/**\n * Get the OpenLayers layer instances for the provided Mapbox Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} sourceId Mapbox Style source id.\n * @return {Array<Layer>} OpenLayers layer instances.\n */\nfunction getLayers(map, sourceId) {\n    var result = [];\n    var layers = map.getLayers().getArray();\n    for (var i = 0, ii = layers.length; i < ii; ++i) {\n        if (layers[i].get('mapbox-source') === sourceId) {\n            result.push(layers[i]);\n        }\n    }\n    return result;\n}\n/**\n * Get the OpenLayers source instance for the provided Mapbox Style `source`.\n * @param {Map|LayerGroup} map OpenLayers Map or LayerGroup.\n * @param {string} sourceId Mapbox Style source id.\n * @return {Source} OpenLayers source instance.\n */\nfunction getSource(map, sourceId) {\n    var layers = map.getLayers().getArray();\n    for (var i = 0, ii = layers.length; i < ii; ++i) {\n        var source = /** @type {Layer} */\n        layers[i].getSource();\n        if (layers[i].get('mapbox-source') === sourceId) {\n            return source;\n        }\n    }\n}\n/**\n * Sets or removes a feature state. The feature state is taken into account for styling,\n * just like the feature's properties, and can be used e.g. to conditionally render selected\n * features differently.\n *\n * The feature state will be stored on the OpenLayers layer matching the feature identifier, in the\n * `mapbox-featurestate` property.\n * @param {Map|VectorLayer|VectorTileLayer} mapOrLayer OpenLayers Map or layer to set the feature\n * state on.\n * @param {FeatureIdentifier} feature Feature identifier.\n * @param {Object|null} state Feature state. Set to `null` to remove the feature state.\n */\nfunction setFeatureState(mapOrLayer, feature, state) {\n    var layers = 'getLayers' in mapOrLayer ? getLayers(mapOrLayer, feature.source) : [mapOrLayer];\n    for (var i = 0, ii = layers.length; i < ii; ++i) {\n        var featureState = layers[i].get('mapbox-featurestate');\n        if (featureState) {\n            if (state) {\n                featureState[feature.id] = state;\n            } else {\n                delete featureState[feature.id];\n            }\n            layers[i].changed();\n        } else {\n            throw new Error((\"Map or layer for source \\\"\" + (feature.source) + \"\\\" not found.\"));\n        }\n    }\n}\n/**\n * Sets or removes a feature state. The feature state is taken into account for styling,\n * just like the feature's properties, and can be used e.g. to conditionally render selected\n * features differently.\n * @param {Map|VectorLayer|VectorTileLayer} mapOrLayer Map or layer to set the feature state on.\n * @param {FeatureIdentifier} feature Feature identifier.\n * @return {Object|null} Feature state or `null` when no feature state is set for the given\n * feature identifier.\n */\nfunction getFeatureState(mapOrLayer, feature) {\n    var layers = 'getLayers' in mapOrLayer ? getLayers(mapOrLayer, feature.source) : [mapOrLayer];\n    for (var i = 0, ii = layers.length; i < ii; ++i) {\n        var featureState = layers[i].get('mapbox-featurestate');\n        if (featureState && featureState[feature.id]) {\n            return featureState[feature.id];\n        }\n    }\n    return null;\n}\n/**\n * Get the Mapbox Layer object for the provided `layerId`.\n * @param {Map|LayerGroup} mapOrGroup Map or LayerGroup.\n * @param {string} layerId Mapbox Layer id.\n * @return {Object} Mapbox Layer object.\n */\nfunction getMapboxLayer(mapOrGroup, layerId) {\n    var style = mapOrGroup.get('mapbox-style');\n    var layerStyle = style.layers.find(function (layer) {\n        return layer.id === layerId;\n    });\n    return layerStyle;\n}\n/**\n * Add a new Mapbox Layer object to the style. The map will be re-rendered.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {Object} mapboxLayer Mapbox Layer object.\n * @param {string} [beforeLayerId] Optional id of the Mapbox Layer before the new layer that will be added.\n */\nfunction addMapboxLayer(mapOrGroup, mapboxLayer, beforeLayerId) {\n    var mapboxLayers = mapOrGroup.get('mapbox-style').layers;\n    var index;\n    if (beforeLayerId !== undefined) {\n        var beforeLayer = getMapboxLayer(mapOrGroup, beforeLayerId);\n        if (beforeLayer === undefined) {\n            throw new Error((\"Layer with id \\\"\" + beforeLayerId + \"\\\" not found.\"));\n        }\n        index = mapboxLayers.indexOf(beforeLayer);\n    } else {\n        index = mapboxLayers.length;\n    }\n    if (index === 0) {\n        throw new Error('Cannot add layer before first layer.');\n    }\n    if (mapboxLayers[index - 1].source !== mapboxLayer.source) {\n        throw new Error('Added layer and layer before must use the same source.');\n    }\n    if (mapboxLayers.some(function (layer) { return layer.id === mapboxLayer.id; })) {\n        throw new Error((\"Layer with id \\\"\" + (mapboxLayer.id) + \"\\\" already exists.\"));\n    }\n    mapboxLayers.splice(index, 0, mapboxLayer);\n    var layer = getLayer(mapOrGroup, mapboxLayers[index - 1].id);\n    var layerMapboxLayers = layer.get('mapbox-layers');\n    var layerIndex = beforeLayerId ? layerMapboxLayers.indexOf(beforeLayerId) : layerMapboxLayers.length;\n    layerMapboxLayers.splice(layerIndex, 0, mapboxLayer.id);\n    layer.changed();\n}\n/**\n * Update a Mapbox Layer object in the style. The map will be re-rendered with the new style.\n * @param {Map|LayerGroup} mapOrGroup The Map or LayerGroup `apply` was called on.\n * @param {Object} mapboxLayer Updated Mapbox Layer object.\n */\nfunction updateMapboxLayer(mapOrGroup, mapboxLayer) {\n    var glStyle = mapOrGroup.get('mapbox-style');\n    var mapboxLayers = glStyle.layers;\n    var index = mapboxLayers.findIndex(function (layer) {\n        return layer.id === mapboxLayer.id;\n    });\n    if (index === -1) {\n        throw new Error((\"Layer with id \\\"\" + (mapboxLayer.id) + \"\\\" not found.\"));\n    }\n    var oldLayer = mapboxLayers[index];\n    if (oldLayer.source !== mapboxLayer.source) {\n        throw new Error('Updated layer and previous version must use the same source.');\n    }\n    delete getFunctionCache(glStyle)[mapboxLayer.id];\n    delete getFilterCache(glStyle)[mapboxLayer.id];\n    mapboxLayers[index] = mapboxLayer;\n    getLayer(mapOrGroup, mapboxLayer.id).changed();\n}\n\nexport { addMapboxLayer, apply, applyBackground, applyStyle, apply as default, getFeatureState, getLayer, getLayers, getMapboxLayer, getSource, recordStyleLayer, renderTransparent, setFeatureState, stylefunction, updateMapboxLayer };\n//# sourceMappingURL=index.js.map\n","import MVT from '../src/ol/format/MVT.js';\nimport TileQueue, {\n  getTilePriority as tilePriorityFunction,\n} from '../src/ol/TileQueue.js';\nimport VectorTileLayer from '../src/ol/layer/VectorTile.js';\nimport VectorTileSource from '../src/ol/source/VectorTile.js';\nimport stringify from 'json-stringify-safe';\nimport {get} from '../src/ol/proj.js';\nimport {inView} from '../src/ol/layer/Layer.js';\nimport {stylefunction} from 'ol-mapbox-style';\n\n/** @type {any} */\nconst worker = self;\n\nlet frameState, pixelRatio, rendererTransform;\nconst canvas = new OffscreenCanvas(1, 1);\n// OffscreenCanvas does not have a style, so we mock it\ncanvas.style = {};\nconst context = canvas.getContext('2d');\n\nconst sources = {\n  landcover: new VectorTileSource({\n    maxZoom: 9,\n    format: new MVT(),\n    url: 'https://api.maptiler.com/tiles/landcover/{z}/{x}/{y}.pbf?key=get_your_own_D6rA4zTHduk6KOKTXzGB',\n  }),\n  contours: new VectorTileSource({\n    minZoom: 9,\n    maxZoom: 14,\n    format: new MVT(),\n    url: 'https://api.maptiler.com/tiles/contours/{z}/{x}/{y}.pbf?key=get_your_own_D6rA4zTHduk6KOKTXzGB',\n  }),\n  openmaptiles: new VectorTileSource({\n    format: new MVT(),\n    maxZoom: 14,\n    url: 'https://api.maptiler.com/tiles/v3/{z}/{x}/{y}.pbf?key=get_your_own_D6rA4zTHduk6KOKTXzGB',\n  }),\n};\nconst layers = [];\n\n// Font replacement so we do not need to load web fonts in the worker\nfunction getFont(font) {\n  return font[0].replace('Noto Sans', 'serif').replace('Roboto', 'sans-serif');\n}\n\nfunction loadStyles() {\n  const styleUrl =\n    'https://api.maptiler.com/maps/topo/style.json?key=get_your_own_D6rA4zTHduk6KOKTXzGB';\n\n  fetch(styleUrl)\n    .then((data) => data.json())\n    .then((styleJson) => {\n      const buckets = [];\n      let currentSource;\n      styleJson.layers.forEach((layer) => {\n        if (!layer.source) {\n          return;\n        }\n        if (currentSource !== layer.source) {\n          currentSource = layer.source;\n          buckets.push({\n            source: layer.source,\n            layers: [],\n          });\n        }\n        buckets[buckets.length - 1].layers.push(layer.id);\n      });\n\n      const spriteUrl =\n        styleJson.sprite + (pixelRatio > 1 ? '@2x' : '') + '.json';\n      const spriteImageUrl =\n        styleJson.sprite + (pixelRatio > 1 ? '@2x' : '') + '.png';\n      fetch(spriteUrl)\n        .then((data) => data.json())\n        .then((spriteJson) => {\n          buckets.forEach((bucket) => {\n            const source = sources[bucket.source];\n            if (!source) {\n              return;\n            }\n            const layer = new VectorTileLayer({\n              declutter: true,\n              source,\n              minZoom: source.getTileGrid().getMinZoom(),\n            });\n            layer.getRenderer().useContainer = function (target, transform) {\n              this.containerReused = this.getLayer() !== layers[0];\n              this.canvas = canvas;\n              this.context = context;\n              this.container = {\n                firstElementChild: canvas,\n                style: {\n                  opacity: layer.getOpacity(),\n                },\n              };\n              rendererTransform = transform;\n            };\n            stylefunction(\n              layer,\n              styleJson,\n              bucket.layers,\n              undefined,\n              spriteJson,\n              spriteImageUrl,\n              getFont\n            );\n            layers.push(layer);\n          });\n          worker.postMessage({action: 'requestRender'});\n        });\n    });\n}\n\n// Minimal map-like functionality for rendering\nconst tileQueue = new TileQueue(\n  (tile, tileSourceKey, tileCenter, tileResolution) =>\n    tilePriorityFunction(\n      frameState,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    ),\n  () => worker.postMessage({action: 'requestRender'})\n);\n\nconst maxTotalLoading = 8;\nconst maxNewLoads = 2;\n\nworker.addEventListener('message', (event) => {\n  if (event.data.action === 'requestFeatures') {\n    const layersInView = layers.filter((l) =>\n      inView(l.getLayerState(), frameState.viewState)\n    );\n    const observables = layersInView.map((l) =>\n      l.getFeatures(event.data.pixel)\n    );\n    Promise.all(observables).then((res) => {\n      const features = res.flat();\n      worker.postMessage({\n        action: 'getFeatures',\n        features: JSON.parse(stringify(features.map((e) => e.getProperties()))),\n      });\n    });\n    return;\n  }\n\n  if (event.data.action !== 'render') {\n    return;\n  }\n  frameState = event.data.frameState;\n  if (!pixelRatio) {\n    pixelRatio = frameState.pixelRatio;\n    loadStyles();\n  }\n  frameState.tileQueue = tileQueue;\n  frameState.viewState.projection = get('EPSG:3857');\n  layers.forEach((layer) => {\n    if (inView(layer.getLayerState(), frameState.viewState)) {\n      const renderer = layer.getRenderer();\n      renderer.renderFrame(frameState, canvas);\n    }\n  });\n  layers.forEach(\n    (layer) => layer.getRenderer().context && layer.renderDeclutter(frameState)\n  );\n  if (tileQueue.getTilesLoading() < maxTotalLoading) {\n    tileQueue.reprioritize();\n    tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n  }\n  const imageData = canvas.transferToImageBitmap();\n  worker.postMessage(\n    {\n      action: 'rendered',\n      imageData: imageData,\n      transform: rendererTransform,\n      frameState: JSON.parse(stringify(frameState)),\n    },\n    [imageData]\n  );\n});\n"],"names":["exports","read","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","i","d","s","NaN","Infinity","Math","pow","write","value","c","rt","abs","isNaN","floor","log","LN2","serializer","replacer","cycleReplacer","stack","keys","key","slice","indexOf","join","length","thisPos","this","splice","push","call","module","obj","spaces","JSON","stringify","getSerialize","Pbf","ieee754","buf","ArrayBuffer","isView","Uint8Array","pos","type","Varint","Fixed64","Bytes","Fixed32","SHIFT_LEFT_32","SHIFT_RIGHT_32","utf8TextDecoder","TextDecoder","readPackedEnd","pbf","readVarint","toNum","low","high","isSigned","makeRoomForExtraLength","startPos","len","extraLen","realloc","writePackedVarint","arr","writeVarint","writePackedSVarint","writeSVarint","writePackedFloat","writeFloat","writePackedDouble","writeDouble","writePackedBoolean","writeBoolean","writePackedFixed32","writeFixed32","writePackedSFixed32","writeSFixed32","writePackedFixed64","writeFixed64","writePackedSFixed64","writeSFixed64","readUInt32","writeInt32","val","readInt32","prototype","destroy","readFields","readField","result","end","tag","skip","readMessage","readFixed32","readSFixed32","readFixed64","readSFixed64","readFloat","readDouble","b","l","p","h","Error","readVarintRemainder","readVarint64","readSVarint","num","readBoolean","Boolean","readString","decode","subarray","readUtf8TextDecoder","str","b1","b2","b3","b0","bytesPerSequence","String","fromCharCode","readUtf8","readBytes","readPackedVarint","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","min","set","finish","writeBigVarintLow","lsb","writeBigVarintHigh","writeBigVarint","writeString","lead","charCodeAt","writeUtf8","writeBytes","writeRawMessage","fn","writeMessage","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","t","r","a","n","o","f","exp","u","sqrt","max","x","_maxEntries","_minEntries","ceil","clear","children","minX","minY","maxX","maxY","leaf","height","pop","all","_all","data","search","toBBox","collides","load","insert","_build","_splitRoot","_insert","remove","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","sort","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","uidCounter_","ol_uid","PI","constructor","options","code_","code","units_","extent_","extent","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","tan","EPSG3857Projection","super","units","resolution","point","cosh","PROJECTIONS","fromEPSG4326","input","output","dimension","Array","y","toEPSG4326","atan","EPSG4326Projection","cache","transforms","source","destination","transformFn","sourceCode","destinationCode","messages","AssertionError","message","name","assert","assertion","errorCode","boundingExtent","coordinates","createEmpty","ii","extendCoordinate","dest","closestSquaredDistanceXY","dx","dy","containsCoordinate","coordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","Relationship","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","stride","extendFlatCoordinates","equals","extendXY","forEachCorner","callback","getBottomLeft","getBottomRight","getTopRight","getArea","area","getCenter","getCorner","corner","getRotatedViewport","center","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","getIntersection","intersection","intersects","applyTransform","stops","width","xs","ys","_boundingExtentXYs","coordinate1","coordinate2","projection","worldWidth","worldsAway","sourceExtentWidth","projectionExtent","squaredSegmentDistance","x1","y1","x2","y2","angleInDegrees","lerp","decimals","factor","round","DEFAULT_RADIUS","getDistance","c1","c2","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","levels","info","warn","error","none","level","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","identityTransform","addProjection","add","projectionLike","replace","pointResolution","getter","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","projections","forEach","addProjections","createProjection","defaultCode","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","transform","getTransform","userProjection","toUserCoordinate","fromUserCoordinate","destProjection","args","console","fromUserExtent","projections2","forwardTransform","inverseTransform","dataProjection","defaultFeatureProjection","supportedMediaTypes","getReadOptions","readProjection","featureProjection","adaptOptions","Object","assign","getType","readFeature","readFeatures","readGeometry","writeFeature","feature","writeFeatures","features","writeGeometry","geometry","transformGeometryWithOptions","transformed","clone","power","propagationStopped","defaultPrevented","target","preventDefault","stopPropagation","disposed","dispose","disposeInternal","ascending","linearFindNearest","direction","candidate","reverseSubArray","begin","tmp","extension","isArray","arr1","arr2","len1","object","property","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","includes","dispatchEvent","event","isString","evt","Event","dispatching","pendingRemovals","propagate","handleEvent","pr","removeEventListener","getListeners","hasListener","index","listen","thisArg","once","bind","originalListener","arguments","eventsKey","listenOnce","unlistenByKey","Observable","on","un","revision_","changed","EventType","getRevision","onInternal","onceInternal","ol_key","unInternal","unByKey","ObjectEvent","oldValue","values","values_","setProperties","get","hasOwnProperty","getKeys","getProperties","hasProperties","notify","eventType","ObjectEventType","addChangeListener","removeChangeListener","silent","applyProperties","unset","ua","navigator","userAgent","toLowerCase","WORKER_OFFSCREEN_CANVAS","test","devicePixelRatio","WorkerGlobalScope","OffscreenCanvas","self","IMAGE_DECODE","Image","tmp_","passive","defineProperty","window","multiply","transform1","transform2","a1","d1","e1","f1","a2","d2","e2","f2","compose","dx1","dy1","sx","sy","angle","dx2","dy2","makeInverse","det","mat","transformStringDiv","transformString","node","document","createElement","style","transform2D","j","anchor","anchorX","anchorY","deltaX","deltaY","k","tmpTransform","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","lastResult","lastArgs","lastThis","called","nextArgs","memoizeOne","revision","squaredTolerance","getSimplifiedGeometry","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","intersectsCoordinate","computeExtent","returnOrUpdate","rotate","scale","simplify","tolerance","intersectsExtent","translate","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getStrideForLayout","layout","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","setCoordinates","setLayout","nesting","getLayoutForStride","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","ends","assignClosestPoint","maxDelta","isRing","tmpPoint","squaredDistance","assignClosestArrayPoint","deflateCoordinates","deflateCoordinatesArray","coordinatess","jj","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","snap","quantize","x3","y3","quantizeArray","ret","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","endss","coordinatesss","interpolatePoint","fraction","cumulativeLengths","haystack","needle","comparator","mid","cmp","found","binarySearch","lineStringCoordinateAtM","extrapolate","lo","hi","m0","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","intersectsLineString","coordinatesExtent","point1","point2","start","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRing","intersectsLinearRingArray","lineStringLength","flatMidpoint_","flatMidpointRevision_","maxDelta_","maxDeltaRevision_","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","getCoordinateAt","getLength","getFlatMidpoint","ends_","lineStrings","appendLineString","multiLineString","interpolate","lineStringsCoordinateAtM","getEnds","getLineString","getLineStrings","getFlatMidpoints","midpoints","intersectsLineStringArray","deflateCoordinate","appendPoint","multiPoint","getPoint","getPoints","points","linearRing","twiceArea","linearRings","LinearRing","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","orientLinearRings","orientLinearRingsArray","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","getOrientedFlatCoordinates","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","fromExtent","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","thisLayout","polygons","thisEndss","appendPolygon","newEndss","multiPolygon","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","linearRingssContainsXY","linearRingss","getEndss","getFlatInteriorPoints","getInteriorPoints","linearRingssAreOriented","simplifiedEndss","quantizeMultiArray","getPolygon","prevEnds","getPolygons","intersectsLinearRingMultiArray","deflateMultiCoordinatesArray","lastEnds","RenderFeature","properties","id","styleFunction","id_","type_","flatCoordinates_","flatMidpoints_","properties_","midpoint","getId","getGeometry","getStyleFunction","layersPBFReader","layers","layer","layerPBFReader","version","featurePBFReader","readRawFeature","featureClass_","featureClass","geometryName_","geometryName","layerName_","layerName","layers_","idProperty_","idProperty","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","geometryType","numEnds","getGeometryType","geom","prevEndIndex","ctor","setGeometryName","setGeometry","setId","pbfLayers","pbfLayer","setLayers","DROP","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","element","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tile","state","getState","TileState","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","background_","background","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","getBackground","getClassName","getLayerState","managed","getZIndex","getOpacity","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","array","getLayerStatesArray","states","getSourceState","setBackground","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","CENTER","RESOLUTION","ROTATION","DEFAULT_TILE_SIZE","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","createMinMaxResolution","cappedMaxRes","easeIn","easeOut","inAndOut","animationCallback","returnValue","setTimeout","isNoopAnimation","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","calculateCenterOn","position","cosAngle","sinAngle","rotX","rotY","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","ViewProperty","resolutionConstraintInfo","resolutionConstraint","defaultMaxZoom","defaultZoomFactor","zoomFactor","multiWorld","smoothResolutionConstraint","projExtent","constrainOnlyCenter","resolutions","constrainResolution","capped","z","createSnapToResolutions","defaultMaxResolution","defaultMinResolution","minZoomLevel","cappedZoomLevel","zoomLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","padding","minZoom_","centerConstraint","smoothExtentConstraint","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","theta","createSnapToN","createRotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","zoom","setZoom","oldPadding","getCenterInternal","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","getProjection","animateInternal","animationCount","Date","now","series","complete","duration","easing","getResolutionForZoom","delta","setHint","ViewHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","progress","x0","y0","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","requestAnimationFrame","currentCenter","currentResolution","w","setViewportSize","getConstraints","getConstrainResolution","getHints","hints","calculateExtent","toUserExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getForViewAndSize","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","nextCenter","nextResolution","nextRotation","getViewStateAndExtent","viewState","nearest","baseLevel","fit","geometryOrExtent","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","getConstrainedZoom","targetZoom","targetRes","inView","layerState","Base","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","sourceReady_","rendered","render","map","setMap","handleSourcePropertyChange_","setSource","getSource","getRenderSource","handleSourceChange_","getFeatures","pixel","Promise","resolve","getData","isVisible","view","frameState","getMapInternal","getView","layerStatesArray","getLayerGroup","find","layerExtent","getAttributions","attributions","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","setMapInternal","some","arrayLayerState","createRenderer","hasRenderer","toSize","ImageStyle","opacity_","rotateWithView_","rotateWithView","rotation_","scale_","scaleArray_","displacement_","displacement","declutterMode_","declutterMode","getScale","getRotateWithView","getDisplacement","getDeclutterMode","getScaleArray","getAnchor","getImage","pixelRatio","getHitDetectionImage","getPixelRatio","getImageState","getImageSize","getOrigin","getSize","setDisplacement","setRotateWithView","setScale","listenImageChange","unlistenImageChange","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","fromNamed","el","body","appendChild","rgb","getComputedStyle","removeChild","fromString","cacheSize","g","exec","hasAlpha","parseInt","substr","startsWith","split","Number","normalize","fromStringInternal_","asArray","asColorLike","createCanvasContext2D","canvasPool","settings","canvas","shift","getContext","releaseCanvas","context","clearRect","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","match","lineHeight","weight","variant","families","family","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineJoin","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","measureFont","measureContext","textHeights","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","border","display","left","offsetHeight","measureAndCacheTextWidth","reduce","prev","curr","drawImageOrLabel","labelOrImage","originX","originY","save","globalAlpha","setTransform","contextInstructions","label","executeLabelInstructions","drawImage","restore","RegularShape","canvas_","hitDetectionCanvas_","fill_","fill","origin_","points_","radius_","radius1","radius2_","radius2","angle_","stroke_","stroke","size_","renderOptions_","getFill","getRadius","getRadius2","getAngle","getStroke","setFill","createHitDetectionCanvas_","image","renderOptions","draw_","setStroke","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","r1","r2","alpha","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","strokeStyle","lineDash","lineDashOffset","getColor","getWidth","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","maxRadius","createPath_","fillStyle","lineWidth","setLineDash","drawHitDetectionCanvas_","arc","startAngle","step","angle0","radiusC","lineTo","closePath","setRadius","color_","setColor","lineCap_","lineCap","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","getLineCap","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","Style","geometry_","geometryFunction_","defaultGeometryFunction","image_","renderer","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","getText","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setImage","setText","defaultStyles","createDefaultStyle","Circle","IconImageCache","cache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","src","crossOrigin","setSize","maxCacheSize","shared","listenImage","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","then","catch","taintedTestContext","IconImage","imageState","hitDetectionImage_","crossOrigin_","unlisten_","imageState_","src_","tainted_","initializeImage_","isTainted_","willReadFrequently","getImageData","dispatchChangeEvent_","handleImageError_","unlistenImage_","handleImageLoad_","replaceColor_","fillRect","getSrc","ctx","globalCompositeOperation","Icon","anchor_","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","imgSize_","imgSize","iconImage_","offset_","offsetOrigin_","offsetOrigin","height_","updateScaleFromWidthAndHeight","setAnchor","iconImageSize","getHeight","setHeight","widthScale","heightScale","Text","font_","textAlign_","textAlign","justify_","justify","repeat_","repeat","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","overflow_","overflow","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","getFont","getPlacement","getRepeat","getMaxAngle","getOverflow","getTextAlign","getJustify","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","toStyle","flatStyle","prefix","iconSrc","iconImg","shapePoints","circleRadius","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","style_","styleFunction_","setStyle","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getRenderBuffer","getRenderOrder","getStyle","getUpdateWhileAnimating","getUpdateWhileInteracting","renderDeclutter","declutterTree","setRenderOrder","renderOrder","styleLike","styles","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","tmpCoord","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","myEnds","endGeometry","reverseHitDetectionInstructions","reverse","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","imagePixelRatio_","anchorX_","anchorY_","originX_","originY_","declutterImageWithText_","myBegin","sharedData","origin","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","drawFlatCoordinatess_","setFillStrokeStyles_","circleInstruction","lineChunk","chunkLength","chunks","cursor","chunkM","currentChunk","missing","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","TEXT_ALIGN","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryWidths","beg","keep","saveTextStates_","p0","p1","p2","p3","flatOffset","oo","cc","chunk","chunkBegin","range","drawChars_","strokeKey","textKey","fillKey","baseline","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textRotation","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","tolerance_","maxExtent_","pixelRatio_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","toString","replays","replay","Constructor","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","singleSegment","previousAngle","iStart","charLength","chars","substring","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","horizontalTextAlign","align","createTextChunks","acc","line","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","textIsArray","widths","heights","lineWidths","baseStyle","currentWidth","currentHeight","getTextDimensions","renderWidth","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","beginPath","moveTo","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","canvasTransform","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","repeatSize","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","pixelCoordinates","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","part","execute","executeHitDetection","ORDER","circlePixelIndexArrayCache","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","clip","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","forEachFeatureAtCoordinate","hitTolerance","declutteredFeatures","contextSize","newContext","indexes","maxDistanceSq","distances","distanceSq","distance","pixelIndex","getPixelIndexArray","imageData","idx","zs","executor","builderTypes","ready","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","matches","getLayer","handleFontsChanged","renderIfReadyAndVisible","loadImage","inversePixelTransform","pixelContext","container","renderedResolution","tempTransform","pixelTransform","containerReused","pixelContext_","col","row","err","useContainer","backgroundColor","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","coordinateToPixelTransform","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","interimTile","transition_","transition","transitionStarts_","release","setState","getInterimTile","refreshInterimChain","getTileCoord","getAlpha","time","inTransition","endTransition","tileLoadFunction","tileLoadFunction_","getBlankImage","naturalWidth","naturalHeight","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","verifyBrokenDiagonalRendering","calculateSourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","triangulation","sources","gutter","renderEdges","imageSmoothingEnabled","pixelRound","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","isBrokenDiagonalRendering","steps","ud","vd","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","calculateSourceExtentResolution","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","reproject_","getTileSize","leftToLoad","sourceListenKey","unlistenSources_","TileRange","contains","containsTileRange","extend","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpTileRange_","isDrawableTile","tileState","useInterimTilesOnError","getUseInterimTilesOnError","getTile","getPreload","pixelToCoordinateTransform","getTileGridForProjection","tilePixelRatio","getTilePixelRatio","getTileCoordForCoordAndZ","tileOrigin","tileSize","tileResolution","getGutterForProjection","layerIndex","viewResolution","viewCenter","tileSource","sourceRevision","zDirection","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","viewport","tileCoordIntersectsViewport","uid","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","getInterpolate","clips","clipZs","currentClip","getOpaque","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","contextSaved","drawTileImage","unshift","updateUsedTiles","usedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alphaChanged","postRenderFunction","tileSourceKey","expireCache","postRenderFunctions","preload","tileCallback","wantedTiles","tileQueue","tileCount","getTileCoordCenter","useTile","updateCacheSize","userTransform","context_","transform_","transformRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","simpleGeometry","transformGeom2D","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","GEOMETRY_RENDERERS","builderGroup","declutterBuilderGroup","imageBuilderGroup","imageReplay","textBuilderGroup","textReplay","lineStringReplay","polygonReplay","replayGroup","geometryRenderer","circleReplay","getSquaredTolerance","getTolerance","renderFeature","loading","renderGeometry","renderFeatureInternal","getGeometries","IMAGE_REPLAYS","VECTOR_REPLAYS","boundHandleStyleImageChange_","handleStyleImageChange_","renderedLayerRevision_","renderedPixelToCoordinateTransform_","renderedRotation_","tmpTransform_","prepareTile","updateExecutorGroup_","tileImageNeedsRender_","viewHints","hifi","wantedResolution","getRenderMode","renderTileImage_","executorGroups","hasContext","layerRevision","builderState","getReplayState","dirty","renderedRenderOrder","getTileGrid","tileExtent","sourceTiles","getSourceTiles","layerUid","hitDetectionImageData","declutterExecutorGroups","tt","sourceTile","sourceTileCoord","sourceTileExtent","sharedExtent","builderExtent","bufferedExtent","executorGroupInstructions","replayExtent","renderingReplayGroup","getOverlaps","lastIndexOf","item","executorGroup","reject","getTileCoordForCoordAndResolution","getWrapX","loadingSourceTiles","tilePixel","accumulator","concat","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgContext","byGeometryType","getGeometriesArrayRecursive","zIndexKeys","geomAndStyle","kk","createHitDetectionImageData","resultFeatures","hitDetect","getTileRenderTransform","worldOffset","renderMode","replayTypes","group","replayState","renderedTileResolution","renderedTileRevision","renderPixelRatio","renderScale","pixelScale","BaseVector","renderMode_","setPreload","setUseInterimTilesOnError","TileProperty","format","format_","features_","loader_","url_","getFormat","onLoad","setFeatures","onError","setLoader","loader","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","getKeyZXY","fromKey","pruneExceptNewestZ","tmpTileCoord","strict","compare","every","currentVal","res","isSorted","origins","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","tempTileRange","tempExtent","tileCoordExtent","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getTileCoordResolution","getFullTileRange","opt_direction","fullTileRanges","adaptAttributions","attributionLike","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","interpolate_","viewResolver","viewRejector","viewPromise_","getAttributionsCollapsible","refresh","setAttributions","getForProjection","resolutionsFromExtent","createForExtent","extentFromProjection","createForProjection","half","TileSourceEvent","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","setKey","getTileCoordForTileUrlFunction","withinExtentAndZ","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","url","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","TileEventType","setTileLoadFunction","setTileUrlFunction","startCharCode","stopCharCode","charCode","stop","urlTileCoord","replayState_","errorTileKeys","renderedTileZ","withCredentials","loadFeaturesXhr","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","onerror","send","xyzOptions","gridOptions","sourceTileCache","tileClass","tileGrids_","getFeaturesInExtent","tileFeatures","usedSourceTiles","cacheKey","getCacheKeyForTileKey","sourceZ","tileUrl","sourceTileState","listenChange","sourceTileKey","coordKey","empty","newTile","DEFAULT_MAX_ZOOM","geometryOrProperties","geometryChangeKey_","handleGeometryChanged_","getGeometryName","handleGeometryChange_","createStyleFunction","GeometryCollection","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","cloneGeometries","geometriesArray","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","clonedGeometries","getObject","parse","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","writeFeatureObject","writeFeaturesObject","writeGeometryObject","readPointGeometry","readLineStringGeometry","readPolygonGeometry","readMultiPointGeometry","readMultiLineStringGeometry","readMultiPolygonGeometry","readGeometryCollectionGeometry","geoJSON","writePointGeometry","writeLineStringGeometry","rightHanded","writePolygonGeometry","writeMultiPointGeometry","writeMultiLineStringGeometry","writeMultiPolygonGeometry","writeGeometryCollectionGeometry","parseCSSColor_1","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONFeatures","crs","objects","kCSSColorTable","clamp_css_byte","clamp_css_float","parse_css_int","parseFloat","parse_css_float","css_hue_to_rgb","m1","m2","parseCSSColor","css_str","iv","op","ep","fname","params","Color","rgba","ref","toArray","toArray01","toArray01PremultipliedAlpha","black","white","transparent","red","blue","Color$1","convertLiteral","convertFunction","parameters","propertySpec","default","expression","convertIdentityFunction","zoomAndFeatureDependent","featureDependent","zoomDependent","tokens","convertTokenString","featureFunctionParameters","featureFunctionStops","zoomStops","getFunctionType","getInterpolateOperator","list","appendStopPair","convertPropertyFunction","expression$1","i$1","list$1","z$1","fixupDegenerateStepCurve","convertZoomAndPropertyFunction","isStep","base","convertZoomFunction","colorSpace","getFallback","defaultValue","stop$1","expression$2","i$2","list$2","stop$2","expression$3","i$3","list$3","stop$3","curve","interpolated","re","literal","lastIndex","ParsingError$1","ParsingError","__proto__","create","Scope","parent","bindings","has","Scope$1","NullType","kind","NumberType","StringType","BooleanType","ColorType","ObjectType","ValueType","CollatorType","FormattedType","ResolvedImageType","array$1","itemType","N","toString$1","valueMemberTypes","checkSubtype","expected","isValidType","provided","allowedTypes","isValidNativeType","Collator","caseSensitive","diacriticSensitive","locale","sensitivity","collator","Intl","usage","lhs","rhs","resolvedLocale","resolvedOptions","Collator$1","FormattedSection","fontStack","textColor","Formatted","sections","unformatted","section","factory","serialize","serialized","Formatted$1","ResolvedImage","ResolvedImage$1","validateRGBA","isValue","mixed","typeOf","Literal","expectedType","evaluate","eachChild","outputDefined","Literal$1","RuntimeError","RuntimeError$1","types$2","string","number","boolean","Assertion","type$1","parsed","arg","Assertion$1","FormatExpression","firstArg","nextTokenMayBeObject","lastExpression","content","evaluatedContent","FormatExpression$1","ImageExpression","evaluatedImageName","availableImages","ImageExpression$1","types$1","Coercion","parseColor","child","Coercion$1","geometryTypes","EvaluationContext","globals","featureState","formattedSection","_parseColorCache","canonical","featureTileCoord","featureDistanceData","canonicalID","distanceFromCenter","dX","dY","bearing","cached","EvaluationContext$1","CompoundExpression","_evaluate","ref$1","definition","definitions","availableOverloads","overloads","signature","signatureContext","ParsingContext$1","registry","path","scope","parsedArgs","argParseFailed","arg$1","errors","signatures","actualTypes","parsed$1","register","CompoundExpression$1","CollatorExpression","CollatorExpression$1","updateBBox","bbox","boxWithinBox","bbox1","bbox2","getTileCoordinates","lat","tilesAtZoom","onBoundary","rayIntersect","pointWithinPolygon","rings","inside","ring","len2","pointWithinPolygons","twoSided","q1","q2","det1","det2","lineIntersectPolygon","vectorP","vectorQ","lineStringWithinPolygon","lineStringWithinPolygons","getTilePolygon","getTilePolygons","updatePoint","polyBBox","worldSize","halfWorldSize","getTilePoints","pointBBox","shifts","tilePoints","getTileLines","lineBBox","tileLines","tileLine","resetBBox","Within","geojson","tilePolygon","tilePolygons","tilePoints$1","pointsWithinPolygons","tileLines$1","linesWithinPolygons","Within$1","isFeatureConstant","isStateConstant","isGlobalPropertyConstant","Var","boundExpression","Var$1","ParsingContext","expr","_parse","annotate","typeAnnotation","Expr","actual","isConstant","ec","error$1","isTypeAnnotation","childrenConstant","findStopLessThanOrEqualTo","currentValue","nextValue","lowerIndex","upperIndex","currentIndex","Step","labels","outputs","outputType","labelKey","valueKey","stopCount","out","Step$1","unitbezier","UnitBezier","p1x","p1y","p2x","p2y","cx","bx","ax","cy","by","ay","sampleCurveX","sampleCurveY","sampleCurveDerivativeX","solveCurveX","epsilon","t0","t1","t2","solve","freeze","from","to","Xn","Zn","deg2rad$1","rad2deg","xyz2lab","lab2xyz","xyz2rgb","rgb2xyz","rgbToLab","rgbColor","labToRgb","labColor","interpolateHue","lab","forward","hcl","hclColor","Interpolate","operator","interpolation","exponentialInterpolation","lowerValue","upperValue","difference","interpolationFactor","lower","upper","controlPoints","rest","outputLower","outputUpper","Interpolate$1","Coalesce","needsAnnotation","firstImage","argCount","Coalesce$1","Let","Let$1","At","At$1","In","In$1","IndexOf","fromIndex","IndexOf$1","Match","inputType","cases","otherwise","labelContext","MAX_SAFE_INTEGER","this$1$1","groupedByOutput","outputLookup","outputIndex","coerceLabel","outputIndex$1","Match$1","Case","branches","Case$1","Slice","beginIndex","endIndex","Slice$1","isComparableType","eqCollate","makeComparison","compareBasic","compareWithCollator","isOrderComparison","Comparison","hasUntypedArgument","lt","lt$1","rt$1","Equals","NotEquals","LessThan","GreaterThan","LessThanOrEqual","GreaterThanOrEqual","NumberFormat","currency","unit","minFractionDigits","maxFractionDigits","minimumFractionDigits","maximumFractionDigits","NumberFormat$1","Length","expressions","varargs","pitch","heatmapDensity","lineProgress","skyRadialProgress","accumulated","E","LN10","asin","isSupportedScript","toUpperCase","isFunction","StyleExpression","_warningHistory","_evaluator","_defaultValue","spec","getDefaultValue","_enumValues","createExpression","parser","types","enum","formatted","resolvedImage","getExpectedType","evaluateWithoutErrorHandling","ZoomConstantExpression","_styleExpression","isStateDependent","ZoomDependentExpression","interpolationType","createPropertyExpression","isFeatureConstant$1","supportsPropertyExpression","isZoomConstant","supportsZoomExpression","zoomCurve","findZoomCurve","supportsInterpolation","childResult","deepUnbundle","unbundledValue","valueOf","unbundle","isExpressionFilter","createFilter","layerType","needGeometry","needFeature","convertFilter","filterExp","staticFilter","isDynamicFilter","unionDynamicBranches","collapseDynamicBooleanExpressions","extractStaticFilter","filterSpec","compiledStaticFilter","filterFunc","globalProperties","dynamicFilterFunc","compiledDynamicFilter","dynamicFilter","geometryNeeded","collapsed","dynamicConditionExpressions","collapsedExpression","subExpression","isBranchingDynamically","Set","filters","convertComparisonOp","convertNegation","convertInOp","convertHasOp","refProperties","deref","derefLayers","fontWeights","thin","hairline","light","book","regular","normal","plain","roman","standard","medium","bold","heavy","fat","poster","sp","italicRE","fontCache","mapboxToCssFont","cssData","fontFamilies","maybeWeight","previousPart","styleId","functionCacheByStyleId","filterCacheByStyleId","getFunctionCache","glStyle","functionCache","getFilterCache","filterCache","deg2rad","degrees","defaultResolutions","createCanvas","drawIconHalo","spriteImage","spriteImageData","haloWidth","haloColor","imageCanvas","imageContext","hairSpacePool","applyLetterSpacing","letterSpacing","textWithLetterSpacing","lines","joinSpaceString","ll","getMeasureContext","measureCache","wrapText","em","hardLines","wrappedText","words","maxWidth","lines$1","ii$1","word","testLine","ii$2","line$1","prevWidth","nextWidth","ii$3","line$2","next","lineWords","lastWord","renderFeatureCoordinates","emptyObj$1","zoomObj","getValue","layoutOrPaint","layerId","functions","isExpr","compiledExpression","rawExpression","expressionData","getIconDeclutterMode","evaluateFilter","renderTransparentEnabled","colorWithOpacity","templateRegEx","fromTemplate","recordLayer","stylefunction","olLayer","sourceOrLayers","spriteData","spriteImageUrl","getFonts","spriteImageSize","worker","postMessage","action","mapboxSource","allLayers","layersBySourceLayer","mapboxLayers","iconImageCache","patternCache","sourceLayer","textHalo","featureBelongsToLayer","stylesLength","layerData","paint","visibility","minzoom","maxzoom","strokeColor","fillIcon","icon","icon_cache_key","pattern","createPattern","hasImage","placementAngle","icon$1","skipLabel","styleGeom","imageElement","iconRotationAlignment","iconSize","iconColor","iconCacheKey","color$1","iconOptions","spriteImageData$1","size$1","circleStrokeColor","circleColor","circleStrokeWidth","cache_key","textLineHeight","textSize","maxTextWidth","fontArray","textField","chunkFont","trim","textTransform","wrappedLabel","textAnchor","placement$1","symbolSpacing","textHaloWidth","textOffset","textTranslate","vOffset","hOffset","textRotationAlignment","textJustify","haloColor$1","halfTextSize","textPadding","rendererTransform","landcover","contours","openmaptiles","tileCenter","observables","fetch","json","styleJson","buckets","currentSource","spriteUrl","sprite","spriteJson","bucket","VectorTile","transferToImageBitmap"],"sourceRoot":""}